name: Build on PR

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

# Serialize workflow runs
# Also, if previous build hasn't finished, cancel it
concurrency:
  group: pr-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-tag-push-lite:
    name: vitess/lite

    runs-on: ubuntu-latest

    steps:
      - name: Checkout planetscale/vitess-private
        uses: actions/checkout@v2
        with:
          # Build HEAD of PR branch not branch merged into master
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          # Vitess build context causes tar header problem with containerd
          driver: docker

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.PLANETSCALE_GITHUB_PROD_SA_KEY }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ format('us-docker.pkg.dev/planetscale-registry/{0}/vitess/lite', matrix.ref == 'main' && 'prod' || 'dev') }}
          flavor: |
            latest=false
            prefix=mysql80-
          tags: |
            type=ref,event=pr,prefix=mysql80-pr-

      - name: Build and push
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/lite/Dockerfile.mysql80
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          secrets: github_token=${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Set credentials for private go deps
        env:
          PLANETSCALE_ACTIONS_BOT_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}
        run: |
          git config --global credential.helper store
          echo "https://planetscalebot:${PLANETSCALE_ACTIONS_BOT_TOKEN}@github.com" >> ~/.git-credentials

      - name: Cache the go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test kmsbackup
        run: |
          echo '${{ secrets.VITESS_PRIVATE_AWS_CREDENTIALS }}' >> "$RUNNER_TEMP/aws.credentials"
          echo '${{ secrets.VITESS_PRIVATE_GCP_CREDENTIALS }}' >> "$RUNNER_TEMP/gcp.credentials"
          go test vitess.io/vitess/go/vt/mysqlctl/kmsbackup -v -race --aws-credentials-file "$RUNNER_TEMP/aws.credentials" --aws-credentials-profile vitess-private-ci
          go test vitess.io/vitess/go/vt/mysqlctl/gcsbackup -v -race --gcp-credentials-file "$RUNNER_TEMP/gcp.credentials"
