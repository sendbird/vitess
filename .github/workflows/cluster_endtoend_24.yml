# DO NOT MODIFY: THIS FILE IS GENERATED USING "make generate_ci_workflows"

name: Cluster (24)
on: [push, pull_request]
jobs:

  build:
    name: Run endtoend tests on Cluster (24)
    runs-on: ubuntu-20.04

    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15

    - name: Tune the OS
      run: |
        echo 1024 65535 > /proc/sys/net/ipv4/ip_local_port_range

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        sudo apt-get update

        # Ubuntu 20.04 ships with MySQL 8.0. We want to force install 5.7
        wget http://repo.mysql.com/mysql-apt-config_0.8.16-1_all.deb \
          && echo mysql-apt-config    mysql-apt-config/repo-codename  select  bionic | debconf-set-selections \
          && echo mysql-apt-config    mysql-apt-config/repo-distro    select  ubuntu | debconf-set-selections \
          && echo mysql-apt-config    mysql-apt-config/select-server  select  mysql-5.7 | debconf-set-selections \
          && echo mysql-apt-config    mysql-apt-config/select-product select  Ok | debconf-set-selections \
          && dpkg -i mysql-apt-config_0.8.16-1_all.deb \
          && apt-get update && apt-get install -y mysql-client=5.7.32-1ubuntu18.04

        sudo apt-get install -y make unzip g++ etcd curl git wget eatmydata
        sudo service mysql stop
        sudo service etcd stop
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
        go mod download

        wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
        sudo apt-get install -y gnupg2
        sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
        sudo apt-get update
        sudo apt-get install percona-xtrabackup-24

    - name: Installing zookeeper and consul
      run: |
          make tools

    - name: Run cluster endtoend test
      timeout-minutes: 30
      run: |
        source build.env
        eatmydata -- go run test.go -docker=false -print-log -follow -shard 24
