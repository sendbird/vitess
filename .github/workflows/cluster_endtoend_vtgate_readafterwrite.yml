# DO NOT MODIFY: THIS FILE IS GENERATED USING "make generate_ci_workflows"

name: Cluster (vtgate_readafterwrite)
on: [push]
concurrency:
  group: format('{0}-{1}', ${{ github.ref }}, 'Cluster (vtgate_readafterwrite)')
  cancel-in-progress: true

jobs:
  build:
    name: Run endtoend tests on Cluster (vtgate_readafterwrite)
    runs-on: ubuntu-18.04

    steps:
    - name: Configure git private repo access
      env:
        GITHUB_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}
      run: |
        git config --global --add url."https://${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Set up python
      uses: actions/setup-python@v2

    - name: Tune the OS
      run: |
        echo '1024 65535' | sudo tee -a /proc/sys/net/ipv4/ip_local_port_range
        # Increase the asynchronous non-blocking I/O. More information at https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_use_native_aio
        echo "fs.aio-max-nr = 1048576" | sudo tee -a /etc/sysctl.conf
        sudo sysctl -p /etc/sysctl.conf

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        # Get key to latest MySQL repo
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29

        # Setup MySQL 8.0
        wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.20-1_all.deb
        echo mysql-apt-config mysql-apt-config/select-server select mysql-8.0 | sudo debconf-set-selections
        sudo DEBIAN_FRONTEND="noninteractive" dpkg -i mysql-apt-config*
        sudo apt-get update

        # Install everything else we need, and configure
        sudo apt-get install -y mysql-server mysql-client make unzip g++ etcd curl git wget eatmydata xz-utils
        sudo service mysql stop
        sudo service etcd stop
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
        go mod download

    - name: Run cluster endtoend test
      timeout-minutes: 30
      run: |
        source build.env

        set -x

        eatmydata -- go run test.go -docker=false -follow -shard vtgate_readafterwrite | tee -a output.txt

    - name: Print test output
      run: |
        # print test output
        cat output.txt
      if: always()
