// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.23
// source: vtadmin.proto

package vtadmin

import (
	context "context"
	errors "errors"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
	vtproto "vitess.io/vitess/go/vt/servenv/vtproto"
)

type drpcEncoding_File_vtadmin_proto struct{}

func (drpcEncoding_File_vtadmin_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return vtproto.Marshal(msg)
}

func (drpcEncoding_File_vtadmin_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return vtproto.Unmarshal(buf, msg)
}

func (drpcEncoding_File_vtadmin_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return vtproto.JSONMarshal(msg)
}

func (drpcEncoding_File_vtadmin_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return vtproto.JSONUnmarshal(buf, msg)
}

type DRPCVTAdminClient interface {
	DRPCConn() drpc.Conn

	FindSchema(ctx context.Context, in *FindSchemaRequest) (*Schema, error)
	GetClusters(ctx context.Context, in *GetClustersRequest) (*GetClustersResponse, error)
	GetGates(ctx context.Context, in *GetGatesRequest) (*GetGatesResponse, error)
	GetKeyspace(ctx context.Context, in *GetKeyspaceRequest) (*Keyspace, error)
	GetKeyspaces(ctx context.Context, in *GetKeyspacesRequest) (*GetKeyspacesResponse, error)
	GetSchema(ctx context.Context, in *GetSchemaRequest) (*Schema, error)
	GetSchemas(ctx context.Context, in *GetSchemasRequest) (*GetSchemasResponse, error)
	GetSrvVSchema(ctx context.Context, in *GetSrvVSchemaRequest) (*SrvVSchema, error)
	GetSrvVSchemas(ctx context.Context, in *GetSrvVSchemasRequest) (*GetSrvVSchemasResponse, error)
	GetTablet(ctx context.Context, in *GetTabletRequest) (*Tablet, error)
	GetTablets(ctx context.Context, in *GetTabletsRequest) (*GetTabletsResponse, error)
	GetVSchema(ctx context.Context, in *GetVSchemaRequest) (*VSchema, error)
	GetVSchemas(ctx context.Context, in *GetVSchemasRequest) (*GetVSchemasResponse, error)
	GetWorkflow(ctx context.Context, in *GetWorkflowRequest) (*Workflow, error)
	GetWorkflows(ctx context.Context, in *GetWorkflowsRequest) (*GetWorkflowsResponse, error)
	VTExplain(ctx context.Context, in *VTExplainRequest) (*VTExplainResponse, error)
}

type drpcVTAdminClient struct {
	cc drpc.Conn
}

func NewDRPCVTAdminClient(cc drpc.Conn) DRPCVTAdminClient {
	return &drpcVTAdminClient{cc}
}

func (c *drpcVTAdminClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcVTAdminClient) FindSchema(ctx context.Context, in *FindSchemaRequest) (*Schema, error) {
	out := new(Schema)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/FindSchema", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetClusters(ctx context.Context, in *GetClustersRequest) (*GetClustersResponse, error) {
	out := new(GetClustersResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetClusters", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetGates(ctx context.Context, in *GetGatesRequest) (*GetGatesResponse, error) {
	out := new(GetGatesResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetGates", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetKeyspace(ctx context.Context, in *GetKeyspaceRequest) (*Keyspace, error) {
	out := new(Keyspace)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetKeyspace", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetKeyspaces(ctx context.Context, in *GetKeyspacesRequest) (*GetKeyspacesResponse, error) {
	out := new(GetKeyspacesResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetKeyspaces", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetSchema(ctx context.Context, in *GetSchemaRequest) (*Schema, error) {
	out := new(Schema)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetSchema", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetSchemas(ctx context.Context, in *GetSchemasRequest) (*GetSchemasResponse, error) {
	out := new(GetSchemasResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetSchemas", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetSrvVSchema(ctx context.Context, in *GetSrvVSchemaRequest) (*SrvVSchema, error) {
	out := new(SrvVSchema)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetSrvVSchema", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetSrvVSchemas(ctx context.Context, in *GetSrvVSchemasRequest) (*GetSrvVSchemasResponse, error) {
	out := new(GetSrvVSchemasResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetSrvVSchemas", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetTablet(ctx context.Context, in *GetTabletRequest) (*Tablet, error) {
	out := new(Tablet)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetTablet", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetTablets(ctx context.Context, in *GetTabletsRequest) (*GetTabletsResponse, error) {
	out := new(GetTabletsResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetTablets", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetVSchema(ctx context.Context, in *GetVSchemaRequest) (*VSchema, error) {
	out := new(VSchema)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetVSchema", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetVSchemas(ctx context.Context, in *GetVSchemasRequest) (*GetVSchemasResponse, error) {
	out := new(GetVSchemasResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetVSchemas", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetWorkflow(ctx context.Context, in *GetWorkflowRequest) (*Workflow, error) {
	out := new(Workflow)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetWorkflow", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) GetWorkflows(ctx context.Context, in *GetWorkflowsRequest) (*GetWorkflowsResponse, error) {
	out := new(GetWorkflowsResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/GetWorkflows", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVTAdminClient) VTExplain(ctx context.Context, in *VTExplainRequest) (*VTExplainResponse, error) {
	out := new(VTExplainResponse)
	err := c.cc.Invoke(ctx, "/vtadmin.VTAdmin/VTExplain", drpcEncoding_File_vtadmin_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCVTAdminServer interface {
	FindSchema(context.Context, *FindSchemaRequest) (*Schema, error)
	GetClusters(context.Context, *GetClustersRequest) (*GetClustersResponse, error)
	GetGates(context.Context, *GetGatesRequest) (*GetGatesResponse, error)
	GetKeyspace(context.Context, *GetKeyspaceRequest) (*Keyspace, error)
	GetKeyspaces(context.Context, *GetKeyspacesRequest) (*GetKeyspacesResponse, error)
	GetSchema(context.Context, *GetSchemaRequest) (*Schema, error)
	GetSchemas(context.Context, *GetSchemasRequest) (*GetSchemasResponse, error)
	GetSrvVSchema(context.Context, *GetSrvVSchemaRequest) (*SrvVSchema, error)
	GetSrvVSchemas(context.Context, *GetSrvVSchemasRequest) (*GetSrvVSchemasResponse, error)
	GetTablet(context.Context, *GetTabletRequest) (*Tablet, error)
	GetTablets(context.Context, *GetTabletsRequest) (*GetTabletsResponse, error)
	GetVSchema(context.Context, *GetVSchemaRequest) (*VSchema, error)
	GetVSchemas(context.Context, *GetVSchemasRequest) (*GetVSchemasResponse, error)
	GetWorkflow(context.Context, *GetWorkflowRequest) (*Workflow, error)
	GetWorkflows(context.Context, *GetWorkflowsRequest) (*GetWorkflowsResponse, error)
	VTExplain(context.Context, *VTExplainRequest) (*VTExplainResponse, error)
}

type DRPCVTAdminUnimplementedServer struct{}

func (s *DRPCVTAdminUnimplementedServer) FindSchema(context.Context, *FindSchemaRequest) (*Schema, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetClusters(context.Context, *GetClustersRequest) (*GetClustersResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetGates(context.Context, *GetGatesRequest) (*GetGatesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetKeyspace(context.Context, *GetKeyspaceRequest) (*Keyspace, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetKeyspaces(context.Context, *GetKeyspacesRequest) (*GetKeyspacesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetSchema(context.Context, *GetSchemaRequest) (*Schema, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetSchemas(context.Context, *GetSchemasRequest) (*GetSchemasResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetSrvVSchema(context.Context, *GetSrvVSchemaRequest) (*SrvVSchema, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetSrvVSchemas(context.Context, *GetSrvVSchemasRequest) (*GetSrvVSchemasResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetTablet(context.Context, *GetTabletRequest) (*Tablet, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetTablets(context.Context, *GetTabletsRequest) (*GetTabletsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetVSchema(context.Context, *GetVSchemaRequest) (*VSchema, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetVSchemas(context.Context, *GetVSchemasRequest) (*GetVSchemasResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetWorkflow(context.Context, *GetWorkflowRequest) (*Workflow, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) GetWorkflows(context.Context, *GetWorkflowsRequest) (*GetWorkflowsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVTAdminUnimplementedServer) VTExplain(context.Context, *VTExplainRequest) (*VTExplainResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

type DRPCVTAdminDescription struct{}

func (DRPCVTAdminDescription) NumMethods() int { return 16 }

func (DRPCVTAdminDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/vtadmin.VTAdmin/FindSchema", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					FindSchema(
						ctx,
						in1.(*FindSchemaRequest),
					)
			}, DRPCVTAdminServer.FindSchema, true
	case 1:
		return "/vtadmin.VTAdmin/GetClusters", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetClusters(
						ctx,
						in1.(*GetClustersRequest),
					)
			}, DRPCVTAdminServer.GetClusters, true
	case 2:
		return "/vtadmin.VTAdmin/GetGates", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetGates(
						ctx,
						in1.(*GetGatesRequest),
					)
			}, DRPCVTAdminServer.GetGates, true
	case 3:
		return "/vtadmin.VTAdmin/GetKeyspace", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetKeyspace(
						ctx,
						in1.(*GetKeyspaceRequest),
					)
			}, DRPCVTAdminServer.GetKeyspace, true
	case 4:
		return "/vtadmin.VTAdmin/GetKeyspaces", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetKeyspaces(
						ctx,
						in1.(*GetKeyspacesRequest),
					)
			}, DRPCVTAdminServer.GetKeyspaces, true
	case 5:
		return "/vtadmin.VTAdmin/GetSchema", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetSchema(
						ctx,
						in1.(*GetSchemaRequest),
					)
			}, DRPCVTAdminServer.GetSchema, true
	case 6:
		return "/vtadmin.VTAdmin/GetSchemas", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetSchemas(
						ctx,
						in1.(*GetSchemasRequest),
					)
			}, DRPCVTAdminServer.GetSchemas, true
	case 7:
		return "/vtadmin.VTAdmin/GetSrvVSchema", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetSrvVSchema(
						ctx,
						in1.(*GetSrvVSchemaRequest),
					)
			}, DRPCVTAdminServer.GetSrvVSchema, true
	case 8:
		return "/vtadmin.VTAdmin/GetSrvVSchemas", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetSrvVSchemas(
						ctx,
						in1.(*GetSrvVSchemasRequest),
					)
			}, DRPCVTAdminServer.GetSrvVSchemas, true
	case 9:
		return "/vtadmin.VTAdmin/GetTablet", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetTablet(
						ctx,
						in1.(*GetTabletRequest),
					)
			}, DRPCVTAdminServer.GetTablet, true
	case 10:
		return "/vtadmin.VTAdmin/GetTablets", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetTablets(
						ctx,
						in1.(*GetTabletsRequest),
					)
			}, DRPCVTAdminServer.GetTablets, true
	case 11:
		return "/vtadmin.VTAdmin/GetVSchema", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetVSchema(
						ctx,
						in1.(*GetVSchemaRequest),
					)
			}, DRPCVTAdminServer.GetVSchema, true
	case 12:
		return "/vtadmin.VTAdmin/GetVSchemas", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetVSchemas(
						ctx,
						in1.(*GetVSchemasRequest),
					)
			}, DRPCVTAdminServer.GetVSchemas, true
	case 13:
		return "/vtadmin.VTAdmin/GetWorkflow", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetWorkflow(
						ctx,
						in1.(*GetWorkflowRequest),
					)
			}, DRPCVTAdminServer.GetWorkflow, true
	case 14:
		return "/vtadmin.VTAdmin/GetWorkflows", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					GetWorkflows(
						ctx,
						in1.(*GetWorkflowsRequest),
					)
			}, DRPCVTAdminServer.GetWorkflows, true
	case 15:
		return "/vtadmin.VTAdmin/VTExplain", drpcEncoding_File_vtadmin_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVTAdminServer).
					VTExplain(
						ctx,
						in1.(*VTExplainRequest),
					)
			}, DRPCVTAdminServer.VTExplain, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterVTAdmin(mux drpc.Mux, impl DRPCVTAdminServer) error {
	return mux.Register(impl, DRPCVTAdminDescription{})
}

type DRPCVTAdmin_FindSchemaStream interface {
	drpc.Stream
	SendAndClose(*Schema) error
}

type drpcVTAdmin_FindSchemaStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_FindSchemaStream) SendAndClose(m *Schema) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetClustersStream interface {
	drpc.Stream
	SendAndClose(*GetClustersResponse) error
}

type drpcVTAdmin_GetClustersStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetClustersStream) SendAndClose(m *GetClustersResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetGatesStream interface {
	drpc.Stream
	SendAndClose(*GetGatesResponse) error
}

type drpcVTAdmin_GetGatesStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetGatesStream) SendAndClose(m *GetGatesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetKeyspaceStream interface {
	drpc.Stream
	SendAndClose(*Keyspace) error
}

type drpcVTAdmin_GetKeyspaceStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetKeyspaceStream) SendAndClose(m *Keyspace) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetKeyspacesStream interface {
	drpc.Stream
	SendAndClose(*GetKeyspacesResponse) error
}

type drpcVTAdmin_GetKeyspacesStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetKeyspacesStream) SendAndClose(m *GetKeyspacesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetSchemaStream interface {
	drpc.Stream
	SendAndClose(*Schema) error
}

type drpcVTAdmin_GetSchemaStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetSchemaStream) SendAndClose(m *Schema) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetSchemasStream interface {
	drpc.Stream
	SendAndClose(*GetSchemasResponse) error
}

type drpcVTAdmin_GetSchemasStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetSchemasStream) SendAndClose(m *GetSchemasResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetSrvVSchemaStream interface {
	drpc.Stream
	SendAndClose(*SrvVSchema) error
}

type drpcVTAdmin_GetSrvVSchemaStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetSrvVSchemaStream) SendAndClose(m *SrvVSchema) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetSrvVSchemasStream interface {
	drpc.Stream
	SendAndClose(*GetSrvVSchemasResponse) error
}

type drpcVTAdmin_GetSrvVSchemasStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetSrvVSchemasStream) SendAndClose(m *GetSrvVSchemasResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetTabletStream interface {
	drpc.Stream
	SendAndClose(*Tablet) error
}

type drpcVTAdmin_GetTabletStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetTabletStream) SendAndClose(m *Tablet) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetTabletsStream interface {
	drpc.Stream
	SendAndClose(*GetTabletsResponse) error
}

type drpcVTAdmin_GetTabletsStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetTabletsStream) SendAndClose(m *GetTabletsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetVSchemaStream interface {
	drpc.Stream
	SendAndClose(*VSchema) error
}

type drpcVTAdmin_GetVSchemaStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetVSchemaStream) SendAndClose(m *VSchema) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetVSchemasStream interface {
	drpc.Stream
	SendAndClose(*GetVSchemasResponse) error
}

type drpcVTAdmin_GetVSchemasStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetVSchemasStream) SendAndClose(m *GetVSchemasResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetWorkflowStream interface {
	drpc.Stream
	SendAndClose(*Workflow) error
}

type drpcVTAdmin_GetWorkflowStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetWorkflowStream) SendAndClose(m *Workflow) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_GetWorkflowsStream interface {
	drpc.Stream
	SendAndClose(*GetWorkflowsResponse) error
}

type drpcVTAdmin_GetWorkflowsStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_GetWorkflowsStream) SendAndClose(m *GetWorkflowsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVTAdmin_VTExplainStream interface {
	drpc.Stream
	SendAndClose(*VTExplainResponse) error
}

type drpcVTAdmin_VTExplainStream struct {
	drpc.Stream
}

func (x *drpcVTAdmin_VTExplainStream) SendAndClose(m *VTExplainResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtadmin_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
