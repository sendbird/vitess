# Add your test case here for debugging and run go test -run=One.
"select user.id, user_extra.otherId, count(*) from user left join user_extra on user.foo = user_extra.otherId group by user.id, user_extra.otherId"
{
  "QueryType": "SELECT",
  "Original": "select user.id, user_extra.otherId, count(*) from user left join user_extra on user.foo = user_extra.otherId group by user.id, user_extra.otherId",
  "Instructions": {
    "OperatorType": "Aggregate",
    "Variant": "Ordered",
    "Aggregates": "sum(2) AS count(*)",
    "GroupBy": "(0|4), (1|3)",
    "ResultColumns": 3,
    "Inputs": [
      {
        "OperatorType": "Projection",
        "Expressions": [
          "[COLUMN 0]",
          "[COLUMN 1]",
          "[COLUMN 4] * coalesce([COLUMN 5],1) as count(*)",
          "[COLUMN 3]",
          "[COLUMN 2]"
        ],
        "Inputs": [
          {
            "OperatorType": "Sort",
            "Variant": "Memory",
            "OrderBy": "(0|2) ASC, (1|3) ASC",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "LeftJoin",
                "JoinColumnIndexes": "L:3,R:1,L:4,R:2,L:1,R:0",
                "JoinVars": {
                  "user_foo": 0
                },
                "TableName": "`user`_user_extra",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select `user`.foo, count(*), weight_string(`user`.foo), `user`.id, weight_string(`user`.id) from `user` where 1 != 1 group by `user`.foo, weight_string(`user`.foo), `user`.id, weight_string(`user`.id)",
                    "Query": "select `user`.foo, count(*), weight_string(`user`.foo), `user`.id, weight_string(`user`.id) from `user` group by `user`.foo, weight_string(`user`.foo), `user`.id, weight_string(`user`.id)",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select count(*), user_extra.otherId, weight_string(user_extra.otherId) from user_extra where 1 != 1 group by user_extra.otherId, weight_string(user_extra.otherId)",
                    "Query": "select count(*), user_extra.otherId, weight_string(user_extra.otherId) from user_extra where user_extra.otherId = :user_foo group by user_extra.otherId, weight_string(user_extra.otherId)",
                    "Table": "user_extra"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
Gen4 plan same as above
