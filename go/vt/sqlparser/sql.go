// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const STATUS = 57517
const VARIABLES = 57518
const WARNINGS = 57519
const SEQUENCE = 57520
const BEGIN = 57521
const START = 57522
const TRANSACTION = 57523
const COMMIT = 57524
const ROLLBACK = 57525
const SAVEPOINT = 57526
const RELEASE = 57527
const WORK = 57528
const BIT = 57529
const TINYINT = 57530
const SMALLINT = 57531
const MEDIUMINT = 57532
const INT = 57533
const INTEGER = 57534
const BIGINT = 57535
const INTNUM = 57536
const REAL = 57537
const DOUBLE = 57538
const FLOAT_TYPE = 57539
const DECIMAL = 57540
const NUMERIC = 57541
const TIME = 57542
const TIMESTAMP = 57543
const DATETIME = 57544
const YEAR = 57545
const CHAR = 57546
const VARCHAR = 57547
const BOOL = 57548
const CHARACTER = 57549
const VARBINARY = 57550
const NCHAR = 57551
const TEXT = 57552
const TINYTEXT = 57553
const MEDIUMTEXT = 57554
const LONGTEXT = 57555
const BLOB = 57556
const TINYBLOB = 57557
const MEDIUMBLOB = 57558
const LONGBLOB = 57559
const JSON = 57560
const ENUM = 57561
const GEOMETRY = 57562
const POINT = 57563
const LINESTRING = 57564
const POLYGON = 57565
const GEOMETRYCOLLECTION = 57566
const MULTIPOINT = 57567
const MULTILINESTRING = 57568
const MULTIPOLYGON = 57569
const NULLX = 57570
const AUTO_INCREMENT = 57571
const APPROXNUM = 57572
const SIGNED = 57573
const UNSIGNED = 57574
const ZEROFILL = 57575
const COLLATION = 57576
const DATABASES = 57577
const TABLES = 57578
const VITESS_METADATA = 57579
const VSCHEMA = 57580
const FULL = 57581
const PROCESSLIST = 57582
const COLUMNS = 57583
const FIELDS = 57584
const ENGINES = 57585
const PLUGINS = 57586
const EXTENDED = 57587
const KEYSPACES = 57588
const VITESS_KEYSPACES = 57589
const VITESS_SHARDS = 57590
const VITESS_TABLETS = 57591
const NAMES = 57592
const CHARSET = 57593
const GLOBAL = 57594
const SESSION = 57595
const ISOLATION = 57596
const LEVEL = 57597
const READ = 57598
const WRITE = 57599
const ONLY = 57600
const REPEATABLE = 57601
const COMMITTED = 57602
const UNCOMMITTED = 57603
const SERIALIZABLE = 57604
const CURRENT_TIMESTAMP = 57605
const DATABASE = 57606
const CURRENT_DATE = 57607
const CURRENT_TIME = 57608
const LOCALTIME = 57609
const LOCALTIMESTAMP = 57610
const UTC_DATE = 57611
const UTC_TIME = 57612
const UTC_TIMESTAMP = 57613
const REPLACE = 57614
const CONVERT = 57615
const CAST = 57616
const SUBSTR = 57617
const SUBSTRING = 57618
const GROUP_CONCAT = 57619
const SEPARATOR = 57620
const TIMESTAMPADD = 57621
const TIMESTAMPDIFF = 57622
const MATCH = 57623
const AGAINST = 57624
const BOOLEAN = 57625
const LANGUAGE = 57626
const WITH = 57627
const QUERY = 57628
const EXPANSION = 57629
const UNUSED = 57630
const ARRAY = 57631
const CUME_DIST = 57632
const DESCRIPTION = 57633
const DENSE_RANK = 57634
const EMPTY = 57635
const EXCEPT = 57636
const FIRST_VALUE = 57637
const GROUPING = 57638
const GROUPS = 57639
const JSON_TABLE = 57640
const LAG = 57641
const LAST_VALUE = 57642
const LATERAL = 57643
const LEAD = 57644
const MEMBER = 57645
const NTH_VALUE = 57646
const NTILE = 57647
const OF = 57648
const OVER = 57649
const PERCENT_RANK = 57650
const RANK = 57651
const RECURSIVE = 57652
const ROW_NUMBER = 57653
const SYSTEM = 57654
const WINDOW = 57655
const ACTIVE = 57656
const ADMIN = 57657
const BUCKETS = 57658
const CLONE = 57659
const COMPONENT = 57660
const DEFINITION = 57661
const ENFORCED = 57662
const EXCLUDE = 57663
const FOLLOWING = 57664
const GEOMCOLLECTION = 57665
const GET_MASTER_PUBLIC_KEY = 57666
const HISTOGRAM = 57667
const HISTORY = 57668
const INACTIVE = 57669
const INVISIBLE = 57670
const LOCKED = 57671
const MASTER_COMPRESSION_ALGORITHMS = 57672
const MASTER_PUBLIC_KEY_PATH = 57673
const MASTER_TLS_CIPHERSUITES = 57674
const MASTER_ZSTD_COMPRESSION_LEVEL = 57675
const NESTED = 57676
const NETWORK_NAMESPACE = 57677
const NOWAIT = 57678
const NULLS = 57679
const OJ = 57680
const OLD = 57681
const OPTIONAL = 57682
const ORDINALITY = 57683
const ORGANIZATION = 57684
const OTHERS = 57685
const PATH = 57686
const PERSIST = 57687
const PERSIST_ONLY = 57688
const PRECEDING = 57689
const PRIVILEGE_CHECKS_USER = 57690
const PROCESS = 57691
const RANDOM = 57692
const REFERENCE = 57693
const REQUIRE_ROW_FORMAT = 57694
const RESOURCE = 57695
const RESPECT = 57696
const RESTART = 57697
const RETAIN = 57698
const REUSE = 57699
const ROLE = 57700
const SECONDARY = 57701
const SECONDARY_ENGINE = 57702
const SECONDARY_LOAD = 57703
const SECONDARY_UNLOAD = 57704
const SKIP = 57705
const SRID = 57706
const THREAD_PRIORITY = 57707
const TIES = 57708
const UNBOUNDED = 57709
const VCPU = 57710
const VISIBLE = 57711
const FORMAT = 57712
const TREE = 57713
const VITESS = 57714
const TRADITIONAL = 57715

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	136, 104,
	224, 104,
	-2, 98,
	-1, 47,
	34, 341,
	155, 341,
	167, 341,
	192, 355,
	193, 355,
	-2, 343,
	-1, 52,
	157, 365,
	-2, 363,
	-1, 76,
	55, 401,
	-2, 409,
	-1, 100,
	136, 104,
	224, 104,
	-2, 99,
	-1, 433,
	143, 776,
	-2, 772,
	-1, 434,
	143, 777,
	-2, 773,
	-1, 449,
	55, 402,
	-2, 414,
	-1, 450,
	55, 403,
	-2, 415,
	-1, 470,
	111, 1050,
	-2, 76,
	-1, 471,
	111, 955,
	-2, 77,
	-1, 476,
	111, 915,
	-2, 737,
	-1, 478,
	111, 992,
	-2, 739,
	-1, 1014,
	143, 779,
	-2, 775,
	-1, 1101,
	73, 58,
	81, 58,
	-2, 62,
	-1, 1477,
	5, 653,
	18, 653,
	20, 653,
	32, 653,
	82, 653,
	-2, 440,
	-1, 1676,
	45, 708,
	-2, 706,
}

const yyPrivate = 57344

const yyLast = 19598

var yyAct = [...]int{

	433, 1765, 1754, 1676, 1523, 1723, 1399, 1656, 1585, 1305,
	1622, 1325, 1123, 1095, 1605, 392, 741, 75, 3, 377,
	442, 1306, 1456, 781, 1453, 406, 1174, 1457, 1168, 1379,
	1356, 1380, 788, 1122, 900, 1132, 935, 608, 1463, 1418,
	1469, 1119, 1292, 475, 1001, 659, 119, 605, 344, 119,
	372, 1241, 1008, 954, 356, 1176, 119, 1372, 642, 1092,
	826, 363, 73, 602, 1074, 1137, 1097, 819, 1081, 809,
	814, 451, 808, 786, 436, 791, 379, 1034, 368, 978,
	1192, 1057, 1164, 609, 356, 29, 825, 356, 119, 356,
	119, 823, 1103, 601, 798, 661, 816, 71, 76, 949,
	964, 375, 70, 1673, 859, 754, 119, 119, 623, 624,
	8, 119, 651, 633, 7, 6, 117, 119, 1624, 364,
	755, 1514, 367, 1595, 1758, 1720, 359, 1752, 1701, 1177,
	1745, 78, 79, 80, 81, 82, 83, 1667, 703, 702,
	712, 713, 705, 706, 707, 708, 709, 710, 711, 704,
	1179, 1524, 714, 1719, 457, 461, 1700, 437, 607, 1435,
	611, 1553, 612, 90, 1488, 1489, 418, 1487, 424, 425,
	422, 423, 421, 420, 419, 469, 621, 622, 827, 472,
	828, 630, 426, 427, 674, 1342, 1113, 637, 1341, 1114,
	1115, 1343, 366, 1153, 31, 667, 668, 64, 35, 36,
	115, 111, 112, 113, 365, 1364, 1147, 669, 1588, 1401,
	847, 670, 667, 668, 1703, 1154, 98, 91, 1544, 89,
	1542, 1178, 924, 94, 354, 963, 95, 96, 108, 105,
	358, 106, 620, 121, 122, 123, 352, 662, 663, 672,
	664, 1403, 921, 1769, 1744, 1733, 673, 1172, 121, 122,
	123, 860, 1686, 965, 966, 967, 1657, 1172, 1075, 657,
	1214, 1771, 1494, 925, 632, 1402, 1172, 1211, 63, 614,
	604, 463, 1648, 1213, 1404, 928, 677, 873, 876, 877,
	878, 879, 880, 881, 894, 882, 883, 884, 885, 886,
	861, 862, 863, 864, 845, 846, 874, 891, 848, 923,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	865, 866, 867, 868, 869, 870, 871, 872, 1668, 648,
	619, 650, 1326, 1328, 1480, 119, 640, 1141, 114, 646,
	109, 1479, 1478, 615, 324, 922, 356, 110, 1221, 1680,
	628, 1220, 726, 727, 97, 356, 1569, 1486, 1297, 1270,
	1249, 1109, 802, 647, 649, 1513, 107, 1141, 1180, 356,
	356, 703, 702, 712, 713, 705, 706, 707, 708, 709,
	710, 711, 704, 875, 1154, 714, 739, 638, 683, 1338,
	656, 1767, 1260, 1120, 1768, 1257, 1766, 1699, 704, 714,
	676, 714, 658, 955, 1704, 639, 121, 122, 123, 1212,
	1419, 1210, 675, 1649, 1647, 1053, 86, 121, 122, 123,
	1327, 121, 122, 123, 625, 652, 626, 694, 1242, 627,
	1659, 707, 708, 709, 710, 711, 704, 688, 689, 714,
	950, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 1421, 691, 653, 654, 87, 645, 693, 691, 901,
	325, 724, 1467, 1140, 1202, 644, 779, 665, 694, 328,
	356, 1505, 829, 119, 694, 119, 119, 337, 356, 778,
	687, 686, 985, 1437, 356, 684, 685, 65, 1423, 1035,
	1427, 1267, 1422, 1140, 1420, 1377, 983, 984, 982, 1425,
	1035, 896, 1144, 742, 1772, 1746, 1362, 777, 1424, 1145,
	1689, 335, 956, 692, 693, 691, 795, 342, 1198, 1199,
	1200, 1426, 1428, 446, 726, 727, 1594, 726, 727, 613,
	101, 694, 1747, 792, 807, 757, 759, 761, 763, 765,
	767, 768, 102, 806, 1593, 63, 818, 326, 780, 951,
	758, 760, 1519, 764, 766, 631, 769, 981, 703, 702,
	712, 713, 705, 706, 707, 708, 709, 710, 711, 704,
	1773, 643, 714, 472, 339, 329, 1376, 340, 341, 348,
	1234, 1235, 1236, 332, 334, 345, 330, 331, 350, 349,
	1201, 327, 347, 346, 1738, 1206, 1203, 1194, 1204, 1197,
	1443, 1193, 692, 693, 691, 1195, 1196, 1058, 1059, 1255,
	1439, 119, 692, 693, 691, 887, 1375, 1254, 1183, 1205,
	694, 1739, 356, 616, 119, 1749, 897, 898, 1748, 1740,
	694, 618, 916, 356, 356, 356, 692, 693, 691, 119,
	1731, 1714, 119, 617, 1618, 119, 933, 934, 1444, 119,
	1591, 356, 1557, 1520, 694, 1445, 356, 356, 356, 119,
	356, 356, 121, 122, 123, 1386, 1003, 893, 1373, 634,
	635, 636, 948, 356, 356, 121, 122, 123, 918, 919,
	920, 837, 692, 693, 691, 940, 973, 975, 976, 1654,
	1011, 1653, 937, 974, 895, 824, 938, 1645, 1750, 72,
	694, 942, 943, 944, 1388, 946, 947, 1645, 1697, 926,
	939, 1256, 818, 1693, 446, 932, 1645, 446, 952, 953,
	121, 122, 123, 1142, 1393, 1002, 1645, 1681, 1293, 945,
	958, 1645, 1644, 979, 1004, 890, 1584, 1077, 929, 705,
	706, 707, 708, 709, 710, 711, 704, 462, 356, 714,
	121, 122, 123, 1466, 1345, 1571, 446, 977, 1567, 446,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 957, 446, 1023, 1026, 467,
	31, 356, 356, 1036, 980, 1018, 1013, 1078, 692, 693,
	691, 1511, 1510, 1014, 1564, 960, 1078, 121, 122, 123,
	356, 1190, 1507, 1508, 1507, 1506, 694, 119, 1055, 1048,
	356, 1066, 446, 690, 119, 1658, 119, 1040, 446, 1060,
	1509, 742, 1078, 446, 119, 119, 119, 1629, 31, 464,
	465, 1105, 356, 690, 446, 356, 1044, 1045, 1005, 1006,
	1078, 1093, 890, 889, 1293, 1012, 356, 356, 1015, 1072,
	836, 835, 1105, 1300, 63, 1067, 1014, 1346, 703, 702,
	712, 713, 705, 706, 707, 708, 709, 710, 711, 704,
	1054, 1112, 714, 63, 1068, 1301, 1454, 1069, 395, 394,
	397, 398, 399, 400, 1073, 1466, 1076, 396, 401, 692,
	693, 691, 1106, 1273, 1139, 1272, 1101, 74, 1332, 1596,
	1108, 356, 63, 1732, 1070, 119, 1104, 694, 1012, 434,
	1066, 1189, 1466, 1106, 1104, 439, 1056, 927, 821, 1111,
	1107, 1104, 1102, 1110, 1066, 1170, 31, 472, 1607, 1576,
	472, 892, 119, 119, 119, 119, 119, 1169, 119, 119,
	1127, 1124, 119, 356, 1188, 1171, 1597, 1598, 1599, 1476,
	1498, 888, 1350, 1165, 1159, 120, 1158, 88, 120, 1382,
	119, 1400, 1066, 357, 1608, 120, 119, 119, 119, 1600,
	1470, 1471, 119, 356, 1191, 1184, 1166, 1167, 1381, 1187,
	1760, 1735, 1755, 1182, 1181, 1500, 1473, 1454, 1225, 63,
	1390, 961, 1475, 357, 931, 1207, 357, 120, 357, 120,
	63, 1718, 1215, 1216, 1217, 1218, 1219, 1314, 1222, 1223,
	1313, 1446, 1224, 1601, 1602, 120, 120, 1282, 979, 1317,
	120, 1716, 1382, 1227, 1318, 789, 120, 1231, 1315, 1319,
	1226, 1087, 1088, 1316, 1568, 1291, 1290, 1409, 1230, 1709,
	1706, 1737, 1232, 1722, 1238, 1239, 1240, 1724, 1730, 1251,
	1729, 1677, 1675, 435, 1155, 1156, 1157, 703, 702, 712,
	713, 705, 706, 707, 708, 709, 710, 711, 704, 980,
	1387, 714, 1237, 1083, 1086, 1087, 1088, 1084, 119, 1085,
	1089, 1368, 1279, 1470, 1471, 1031, 782, 1280, 1381, 119,
	119, 119, 119, 119, 1286, 1281, 899, 1361, 783, 1032,
	1250, 119, 1302, 834, 641, 119, 104, 1307, 1691, 119,
	1690, 437, 1627, 1359, 119, 119, 1352, 1562, 119, 119,
	119, 1266, 1324, 1522, 1058, 1059, 1298, 1051, 1185, 930,
	1091, 1344, 443, 356, 440, 441, 1289, 1295, 74, 790,
	1285, 1560, 1351, 452, 1288, 1347, 1742, 1357, 1357, 1741,
	1296, 1148, 1294, 1149, 1150, 1151, 1152, 453, 1727, 1309,
	1310, 1308, 1312, 937, 1311, 452, 1710, 1561, 1320, 1160,
	1161, 1162, 1163, 1333, 444, 1330, 1331, 1335, 1358, 453,
	793, 794, 455, 1339, 454, 1334, 1336, 1449, 1384, 1293,
	1083, 1086, 1087, 1088, 1084, 356, 1085, 1089, 356, 1392,
	671, 1349, 449, 450, 455, 1367, 454, 1369, 1370, 1371,
	1353, 1354, 1355, 1762, 1761, 439, 1261, 1258, 803, 119,
	796, 1762, 1678, 1385, 1589, 356, 1052, 1374, 1124, 72,
	77, 69, 1, 343, 120, 356, 1753, 93, 1525, 1604,
	1389, 1383, 906, 1655, 1378, 357, 1175, 1130, 1121, 85,
	599, 84, 655, 1129, 357, 1128, 1646, 1363, 1146, 1587,
	356, 1499, 1360, 1688, 1394, 842, 1002, 840, 357, 357,
	841, 839, 844, 843, 838, 336, 962, 353, 1090, 1395,
	1405, 1397, 830, 797, 1209, 1417, 1208, 902, 1512, 1396,
	1406, 1143, 333, 1416, 1407, 666, 338, 722, 119, 1287,
	1408, 1340, 473, 1410, 1411, 466, 1430, 1436, 356, 1460,
	1429, 1414, 1186, 92, 356, 356, 1728, 1013, 1431, 1432,
	1455, 1433, 1434, 1707, 1014, 1705, 1674, 1623, 1708, 1452,
	1307, 1672, 1736, 1441, 1442, 1721, 1050, 1458, 785, 1559,
	356, 1448, 1265, 119, 751, 1033, 812, 378, 972, 393,
	390, 391, 1061, 1365, 1366, 1415, 1299, 356, 1465, 356,
	696, 356, 1474, 376, 1357, 1357, 1357, 370, 1447, 357,
	811, 1491, 120, 804, 120, 120, 1440, 357, 1481, 1504,
	1082, 1080, 1079, 357, 1482, 817, 1484, 1472, 1485, 1468,
	1490, 810, 1065, 448, 1495, 1496, 1497, 1493, 1492, 1030,
	1666, 119, 1483, 1415, 1552, 447, 55, 34, 360, 1139,
	679, 1526, 356, 356, 356, 119, 1039, 1502, 1503, 456,
	1516, 1515, 1501, 28, 23, 22, 1517, 1518, 21, 20,
	19, 25, 18, 17, 1019, 1020, 16, 103, 1025, 1028,
	1029, 99, 100, 41, 39, 629, 38, 1535, 27, 26,
	15, 14, 1124, 13, 1124, 12, 11, 10, 9, 5,
	4, 682, 1540, 1043, 24, 740, 1046, 1047, 2, 0,
	1533, 1521, 0, 0, 0, 1531, 1532, 459, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	1563, 0, 445, 0, 0, 0, 1307, 0, 1573, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 1572, 356,
	120, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 120, 0, 1582, 0, 0, 0, 0,
	0, 0, 357, 357, 357, 356, 1583, 0, 120, 369,
	0, 120, 0, 0, 120, 0, 0, 0, 120, 1611,
	357, 0, 404, 0, 0, 357, 357, 357, 120, 357,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 357, 357, 0, 0, 0, 0, 356, 0,
	356, 0, 356, 1617, 0, 0, 0, 356, 1626, 356,
	356, 356, 119, 0, 1630, 1636, 1124, 1637, 1639, 1640,
	1458, 1632, 1628, 1635, 1458, 1641, 355, 0, 1612, 1613,
	1614, 1615, 1616, 1642, 0, 1650, 1619, 1620, 356, 119,
	0, 1643, 0, 0, 407, 30, 1660, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 474, 0, 0, 603,
	0, 610, 1651, 0, 1652, 0, 0, 357, 1558, 0,
	0, 0, 0, 0, 0, 30, 356, 0, 0, 0,
	0, 0, 1679, 1685, 0, 1458, 0, 0, 356, 356,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 357, 1696, 1695, 0, 0, 0, 0, 0, 1661,
	0, 356, 0, 1702, 0, 0, 438, 119, 1711, 357,
	1246, 1247, 0, 0, 0, 0, 120, 0, 1307, 357,
	1590, 1715, 1592, 120, 1717, 120, 0, 0, 0, 1726,
	1725, 1264, 0, 120, 120, 120, 0, 1537, 1538, 0,
	1539, 357, 1734, 1541, 357, 1543, 0, 0, 0, 0,
	0, 0, 1610, 356, 0, 357, 357, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 1606, 1124, 1759, 1713, 0, 0,
	0, 1550, 0, 0, 1770, 712, 713, 705, 706, 707,
	708, 709, 710, 711, 704, 0, 0, 714, 31, 32,
	33, 64, 35, 36, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 120, 0, 0, 0, 68, 0,
	0, 0, 1756, 37, 58, 59, 0, 61, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 120, 120, 120, 120, 120, 0, 120, 120, 0,
	0, 120, 357, 0, 0, 0, 0, 0, 0, 695,
	0, 0, 48, 0, 0, 0, 0, 0, 1556, 120,
	0, 0, 63, 0, 0, 120, 120, 120, 0, 0,
	0, 120, 357, 703, 702, 712, 713, 705, 706, 707,
	708, 709, 710, 711, 704, 369, 0, 714, 474, 0,
	0, 0, 0, 0, 752, 1555, 0, 474, 0, 703,
	702, 712, 713, 705, 706, 707, 708, 709, 710, 711,
	704, 678, 680, 714, 0, 0, 0, 0, 0, 0,
	0, 784, 787, 0, 0, 0, 0, 0, 40, 42,
	44, 43, 46, 0, 60, 0, 703, 702, 712, 713,
	705, 706, 707, 708, 709, 710, 711, 704, 0, 0,
	714, 0, 0, 0, 0, 0, 0, 47, 67, 66,
	660, 0, 56, 57, 45, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 120, 49, 50,
	0, 51, 52, 53, 54, 30, 0, 0, 120, 120,
	120, 120, 120, 0, 0, 0, 1549, 0, 723, 725,
	120, 0, 0, 0, 120, 0, 0, 0, 120, 0,
	912, 0, 800, 120, 120, 0, 0, 120, 120, 120,
	474, 0, 0, 0, 911, 0, 831, 0, 0, 738,
	0, 0, 357, 743, 744, 745, 746, 747, 748, 749,
	750, 0, 753, 756, 756, 756, 762, 756, 756, 762,
	756, 770, 771, 772, 773, 774, 775, 776, 0, 0,
	0, 0, 0, 30, 0, 0, 0, 0, 0, 0,
	0, 65, 0, 0, 0, 0, 0, 121, 122, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 910, 813,
	0, 0, 0, 0, 357, 0, 0, 357, 703, 702,
	712, 713, 705, 706, 707, 708, 709, 710, 711, 704,
	0, 0, 714, 0, 0, 0, 0, 0, 120, 0,
	0, 0, 941, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 907, 904, 905, 0, 903, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 0, 1016, 1017, 357,
	1243, 0, 0, 0, 474, 0, 0, 0, 968, 969,
	970, 971, 0, 0, 0, 474, 474, 474, 914, 917,
	703, 702, 712, 713, 705, 706, 707, 708, 709, 710,
	711, 704, 0, 474, 714, 0, 1049, 120, 474, 474,
	474, 0, 474, 474, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 357, 357, 474, 474, 0, 909, 0,
	0, 0, 0, 1021, 1022, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 357,
	908, 0, 120, 0, 0, 0, 0, 660, 660, 660,
	0, 0, 0, 0, 0, 0, 357, 0, 357, 0,
	357, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	660, 660, 660, 0, 660, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 913, 0, 0, 660, 660, 0,
	1007, 0, 474, 0, 0, 0, 0, 0, 0, 915,
	120, 0, 0, 0, 0, 0, 1037, 1118, 0, 0,
	0, 357, 357, 357, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 1042, 0, 0, 703, 702, 712,
	713, 705, 706, 707, 708, 709, 710, 711, 704, 0,
	0, 714, 1062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 800, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1173, 0, 0, 0,
	0, 0, 0, 0, 474, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 603,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 357, 702,
	712, 713, 705, 706, 707, 708, 709, 710, 711, 704,
	0, 1244, 714, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 1252, 1253, 1094, 0,
	0, 0, 1259, 610, 0, 1262, 1263, 0, 0, 0,
	0, 0, 0, 1269, 0, 0, 0, 1271, 0, 0,
	1274, 1275, 1276, 1277, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 357,
	0, 357, 0, 0, 0, 474, 357, 0, 357, 357,
	357, 120, 703, 702, 712, 713, 705, 706, 707, 708,
	709, 710, 711, 704, 0, 0, 714, 0, 0, 1322,
	1323, 0, 0, 1268, 0, 1233, 0, 357, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 1283, 1284, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 357, 357,
	0, 0, 0, 118, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 460, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1037, 0, 0, 118, 118, 0, 0, 1248, 118, 0,
	438, 0, 357, 0, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	698, 0, 701, 1412, 1413, 0, 0, 0, 715, 716,
	717, 718, 719, 720, 721, 474, 699, 700, 697, 703,
	702, 712, 713, 705, 706, 707, 708, 709, 710, 711,
	704, 0, 813, 714, 0, 0, 0, 0, 0, 1303,
	1304, 0, 0, 813, 813, 813, 813, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1094,
	1461, 1329, 0, 0, 0, 0, 0, 0, 813, 0,
	0, 0, 813, 0, 0, 0, 0, 474, 0, 0,
	1391, 1477, 0, 0, 0, 1438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1398, 0, 0,
	0, 1450, 0, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 1536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 1546, 0, 660,
	474, 0, 118, 1037, 0, 0, 1462, 1464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 1566, 0, 0,
	1570, 0, 1464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1581, 474,
	0, 474, 0, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 1459, 0, 30, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 1575, 0,
	0, 1577, 0, 0, 1527, 1528, 1529, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 118, 820, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	1663, 1664, 1665, 0, 1669, 0, 1670, 1671, 1625, 369,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 1682, 0, 1683, 1684, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 1579, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 1633, 0, 1634, 0, 0, 0, 118, 1586,
	0, 1586, 1586, 1586, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 118,
	1586, 0, 118, 0, 0, 0, 936, 0, 0, 0,
	0, 0, 0, 1763, 1764, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1459,
	0, 30, 0, 1459, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 474, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 936, 0, 0,
	0, 460, 460, 0, 0, 460, 460, 460, 0, 0,
	0, 1038, 0, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 460, 460, 460, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 0, 0, 0, 0, 0,
	936, 118, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 118, 1099, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	118, 118, 118, 118, 0, 118, 118, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 1228, 1229, 118, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 118, 118, 118, 118,
	118, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 118, 0, 0, 0, 1099, 0, 0, 0,
	0, 118, 118, 0, 0, 118, 1337, 936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1038, 0, 0, 0,
	0, 585, 573, 0, 118, 529, 588, 502, 519, 596,
	520, 523, 560, 487, 542, 225, 517, 0, 506, 482,
	513, 483, 504, 531, 158, 535, 501, 575, 545, 587,
	192, 0, 507, 236, 562, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 594,
	195, 551, 0, 276, 212, 0, 0, 0, 533, 577,
	540, 570, 528, 561, 492, 550, 589, 518, 558, 590,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 1125, 1126, 0, 0, 0, 0, 0,
	144, 0, 555, 584, 515, 557, 559, 598, 481, 552,
	0, 485, 488, 595, 580, 510, 511, 1348, 0, 0,
	0, 0, 0, 0, 532, 541, 567, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 0, 549, 0,
	0, 0, 489, 486, 0, 0, 0, 0, 530, 0,
	0, 0, 491, 0, 509, 568, 0, 479, 170, 572,
	579, 527, 309, 583, 525, 524, 586, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 576, 505, 514, 151, 512, 257, 233, 300, 548,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 484, 0, 278, 303, 323, 142, 500, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 496, 499, 494, 495,
	543, 544, 591, 592, 593, 569, 490, 0, 497, 498,
	0, 574, 581, 582, 547, 124, 134, 194, 320, 250,
	166, 304, 480, 493, 155, 503, 0, 0, 516, 521,
	522, 534, 536, 537, 538, 539, 546, 553, 554, 556,
	563, 564, 565, 566, 571, 578, 597, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 585, 573, 0, 0,
	529, 588, 502, 519, 596, 520, 523, 560, 487, 542,
	225, 517, 0, 506, 482, 513, 483, 504, 531, 158,
	535, 501, 575, 545, 587, 192, 0, 507, 236, 562,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 594, 195, 551, 0, 276, 212,
	0, 0, 0, 533, 577, 540, 570, 528, 561, 492,
	550, 589, 518, 558, 590, 184, 148, 128, 222, 277,
	165, 0, 0, 0, 121, 122, 123, 0, 1125, 1126,
	0, 0, 0, 0, 0, 144, 0, 555, 584, 515,
	557, 559, 598, 481, 552, 0, 485, 488, 595, 580,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 532,
	541, 567, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 549, 0, 0, 0, 489, 486, 0,
	0, 0, 0, 530, 0, 0, 0, 491, 0, 509,
	568, 0, 479, 170, 572, 579, 527, 309, 583, 525,
	524, 586, 247, 0, 281, 174, 191, 140, 188, 125,
	136, 0, 172, 221, 255, 259, 576, 505, 514, 151,
	512, 257, 233, 300, 548, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 297,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 138, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 484, 0, 278,
	303, 323, 142, 500, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 216, 139,
	179, 274, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 496, 499, 494, 495, 543, 544, 591, 592, 593,
	569, 490, 0, 497, 498, 0, 574, 581, 582, 547,
	124, 134, 194, 320, 250, 166, 304, 480, 493, 155,
	503, 0, 0, 516, 521, 522, 534, 536, 537, 538,
	539, 546, 553, 554, 556, 563, 564, 565, 566, 571,
	578, 597, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 585, 573, 0, 0, 529, 588, 502, 519, 596,
	520, 523, 560, 487, 542, 225, 517, 0, 506, 482,
	513, 483, 504, 531, 158, 535, 501, 575, 545, 587,
	192, 0, 507, 236, 562, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 594,
	195, 551, 0, 276, 212, 0, 0, 0, 533, 577,
	540, 570, 528, 561, 492, 550, 589, 518, 558, 590,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 555, 584, 515, 557, 559, 598, 481, 552,
	0, 485, 488, 595, 580, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 532, 541, 567, 526, 0, 0,
	0, 0, 0, 0, 1451, 0, 508, 0, 549, 0,
	0, 0, 489, 486, 0, 0, 0, 0, 530, 0,
	0, 0, 491, 0, 509, 568, 0, 479, 170, 572,
	579, 527, 309, 583, 525, 524, 586, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 576, 505, 514, 151, 512, 257, 233, 300, 548,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 484, 0, 278, 303, 323, 142, 500, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 496, 499, 494, 495,
	543, 544, 591, 592, 593, 569, 490, 0, 497, 498,
	0, 574, 581, 582, 547, 124, 134, 194, 320, 250,
	166, 304, 480, 493, 155, 503, 0, 0, 516, 521,
	522, 534, 536, 537, 538, 539, 546, 553, 554, 556,
	563, 564, 565, 566, 571, 578, 597, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 585, 573, 0, 0,
	529, 588, 502, 519, 596, 520, 523, 560, 487, 542,
	225, 517, 0, 506, 482, 513, 483, 504, 531, 158,
	535, 501, 575, 545, 587, 192, 0, 507, 236, 562,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 594, 195, 551, 0, 276, 212,
	0, 0, 0, 533, 577, 540, 570, 528, 561, 492,
	550, 589, 518, 558, 590, 184, 148, 128, 222, 277,
	165, 63, 0, 0, 121, 122, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 555, 584, 515,
	557, 559, 598, 481, 552, 0, 485, 488, 595, 580,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 532,
	541, 567, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 549, 0, 0, 0, 489, 486, 0,
	0, 0, 0, 530, 0, 0, 0, 491, 0, 509,
	568, 0, 479, 170, 572, 579, 527, 309, 583, 525,
	524, 586, 247, 0, 281, 174, 191, 140, 188, 125,
	136, 0, 172, 221, 255, 259, 576, 505, 514, 151,
	512, 257, 233, 300, 548, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 297,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 138, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 484, 0, 278,
	303, 323, 142, 500, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 216, 139,
	179, 274, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 496, 499, 494, 495, 543, 544, 591, 592, 593,
	569, 490, 0, 497, 498, 0, 574, 581, 582, 547,
	124, 134, 194, 320, 250, 166, 304, 480, 493, 155,
	503, 0, 0, 516, 521, 522, 534, 536, 537, 538,
	539, 546, 553, 554, 556, 563, 564, 565, 566, 571,
	578, 597, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 585, 573, 0, 0, 529, 588, 502, 519, 596,
	520, 523, 560, 487, 542, 225, 517, 0, 506, 482,
	513, 483, 504, 531, 158, 535, 501, 575, 545, 587,
	192, 0, 507, 236, 562, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 594,
	195, 551, 0, 276, 212, 0, 0, 0, 533, 577,
	540, 570, 528, 561, 492, 550, 589, 518, 558, 590,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 555, 584, 515, 557, 559, 598, 481, 552,
	0, 485, 488, 595, 580, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 532, 541, 567, 526, 0, 0,
	0, 0, 0, 0, 1338, 0, 508, 0, 549, 0,
	0, 0, 489, 486, 0, 0, 0, 0, 530, 0,
	0, 0, 491, 0, 509, 568, 0, 479, 170, 572,
	579, 527, 309, 583, 525, 524, 586, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 576, 505, 514, 151, 512, 257, 233, 300, 548,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 484, 0, 278, 303, 323, 142, 500, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 496, 499, 494, 495,
	543, 544, 591, 592, 593, 569, 490, 0, 497, 498,
	0, 574, 581, 582, 547, 124, 134, 194, 320, 250,
	166, 304, 480, 493, 155, 503, 0, 0, 516, 521,
	522, 534, 536, 537, 538, 539, 546, 553, 554, 556,
	563, 564, 565, 566, 571, 578, 597, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 585, 573, 0, 0,
	529, 588, 502, 519, 596, 520, 523, 560, 487, 542,
	225, 517, 0, 506, 482, 513, 483, 504, 531, 158,
	535, 501, 575, 545, 587, 192, 0, 507, 236, 562,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 594, 195, 551, 0, 276, 212,
	0, 0, 0, 533, 577, 540, 570, 528, 561, 492,
	550, 589, 518, 558, 590, 184, 148, 128, 222, 277,
	165, 0, 0, 0, 121, 122, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 555, 584, 515,
	557, 559, 598, 481, 552, 0, 485, 488, 595, 580,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 532,
	541, 567, 526, 0, 0, 0, 0, 0, 0, 1071,
	0, 508, 0, 549, 0, 0, 0, 489, 486, 0,
	0, 0, 0, 530, 0, 0, 0, 491, 0, 509,
	568, 0, 479, 170, 572, 579, 527, 309, 583, 525,
	524, 586, 247, 0, 281, 174, 191, 140, 188, 125,
	136, 0, 172, 221, 255, 259, 576, 505, 514, 151,
	512, 257, 233, 300, 548, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 297,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 138, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 484, 0, 278,
	303, 323, 142, 500, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 216, 139,
	179, 274, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 496, 499, 494, 495, 543, 544, 591, 592, 593,
	569, 490, 0, 497, 498, 0, 574, 581, 582, 547,
	124, 134, 194, 320, 250, 166, 304, 480, 493, 155,
	503, 0, 0, 516, 521, 522, 534, 536, 537, 538,
	539, 546, 553, 554, 556, 563, 564, 565, 566, 571,
	578, 597, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 585, 573, 0, 0, 529, 588, 502, 519, 596,
	520, 523, 560, 487, 542, 225, 517, 0, 506, 482,
	513, 483, 504, 531, 158, 535, 501, 575, 545, 587,
	192, 0, 507, 236, 562, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 594,
	195, 551, 0, 276, 212, 0, 0, 0, 533, 577,
	540, 570, 528, 561, 492, 550, 589, 518, 558, 590,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 555, 584, 515, 557, 559, 598, 481, 552,
	0, 485, 488, 595, 580, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 532, 541, 567, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 0, 549, 0,
	0, 0, 489, 486, 0, 0, 0, 0, 530, 0,
	0, 0, 491, 0, 509, 568, 0, 479, 170, 572,
	579, 527, 309, 583, 525, 524, 586, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 576, 505, 514, 151, 512, 257, 233, 300, 548,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 484, 0, 278, 303, 323, 142, 500, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 496, 499, 494, 495,
	543, 544, 591, 592, 593, 569, 490, 0, 497, 498,
	0, 574, 581, 582, 547, 124, 134, 194, 320, 250,
	166, 304, 480, 493, 155, 503, 0, 0, 516, 521,
	522, 534, 536, 537, 538, 539, 546, 553, 554, 556,
	563, 564, 565, 566, 571, 578, 597, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 585, 573, 0, 0,
	529, 588, 502, 519, 596, 520, 523, 560, 487, 542,
	225, 517, 0, 506, 482, 513, 483, 504, 531, 158,
	535, 501, 575, 545, 587, 192, 0, 507, 236, 562,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 594, 195, 551, 0, 276, 212,
	0, 0, 0, 533, 577, 540, 570, 528, 561, 492,
	550, 589, 518, 558, 590, 184, 148, 128, 222, 277,
	165, 0, 0, 0, 121, 122, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 555, 584, 515,
	557, 559, 598, 481, 552, 0, 485, 488, 595, 580,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 532,
	541, 567, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 549, 0, 0, 0, 489, 486, 0,
	0, 0, 0, 530, 0, 0, 0, 491, 0, 509,
	568, 0, 479, 170, 572, 579, 527, 309, 583, 525,
	524, 586, 247, 0, 281, 174, 191, 140, 188, 125,
	136, 0, 172, 221, 255, 259, 576, 505, 514, 151,
	512, 257, 233, 300, 548, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 297,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 477, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 484, 0, 278,
	303, 323, 142, 500, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 478, 476,
	471, 470, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 496, 499, 494, 495, 543, 544, 591, 592, 593,
	569, 490, 0, 497, 498, 0, 574, 581, 582, 547,
	124, 134, 194, 320, 250, 166, 304, 480, 493, 155,
	503, 0, 0, 516, 521, 522, 534, 536, 537, 538,
	539, 546, 553, 554, 556, 563, 564, 565, 566, 571,
	578, 597, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 585, 573, 0, 0, 529, 588, 502, 519, 596,
	520, 523, 560, 487, 542, 225, 517, 0, 506, 482,
	513, 483, 504, 531, 158, 535, 501, 575, 545, 587,
	192, 0, 507, 236, 562, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 594,
	195, 551, 0, 276, 212, 0, 0, 0, 533, 577,
	540, 570, 528, 561, 492, 550, 589, 518, 558, 590,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 555, 584, 515, 557, 559, 598, 481, 552,
	0, 485, 488, 595, 580, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 532, 541, 567, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 0, 549, 0,
	0, 0, 489, 486, 0, 0, 0, 0, 530, 0,
	0, 0, 491, 0, 509, 568, 0, 479, 170, 572,
	579, 527, 309, 583, 525, 524, 586, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 576, 505, 514, 151, 512, 257, 233, 300, 548,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 822, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	477, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 484, 0, 278, 303, 323, 142, 500, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 478, 476, 471, 470, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 496, 499, 494, 495,
	543, 544, 591, 592, 593, 569, 490, 0, 497, 498,
	0, 574, 581, 582, 547, 124, 134, 194, 320, 250,
	166, 304, 480, 493, 155, 503, 0, 0, 516, 521,
	522, 534, 536, 537, 538, 539, 546, 553, 554, 556,
	563, 564, 565, 566, 571, 578, 597, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 585, 573, 0, 0,
	529, 588, 502, 519, 596, 520, 523, 560, 487, 542,
	225, 517, 0, 506, 482, 513, 483, 504, 531, 158,
	535, 501, 575, 545, 587, 192, 0, 507, 236, 562,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 594, 195, 551, 0, 276, 212,
	0, 0, 0, 533, 577, 540, 570, 528, 561, 492,
	550, 589, 518, 558, 590, 184, 148, 128, 222, 277,
	165, 0, 0, 0, 121, 122, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 555, 584, 515,
	557, 559, 598, 481, 552, 0, 485, 488, 595, 580,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 532,
	541, 567, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 549, 0, 0, 0, 489, 486, 0,
	0, 0, 0, 530, 0, 0, 0, 491, 0, 509,
	568, 0, 479, 170, 572, 579, 527, 309, 583, 525,
	524, 586, 247, 0, 281, 174, 191, 140, 188, 125,
	136, 0, 172, 221, 255, 259, 576, 505, 514, 151,
	512, 257, 233, 300, 548, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 468,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 477, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 484, 0, 278,
	303, 323, 142, 500, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 478, 476,
	471, 470, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 496, 499, 494, 495, 543, 544, 591, 592, 593,
	569, 490, 0, 497, 498, 0, 574, 581, 582, 547,
	124, 134, 194, 320, 250, 166, 304, 480, 493, 155,
	503, 0, 0, 516, 521, 522, 534, 536, 537, 538,
	539, 546, 553, 554, 556, 563, 564, 565, 566, 571,
	578, 597, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 225, 0, 0, 1009, 0, 374, 0, 0, 0,
	158, 0, 373, 0, 0, 0, 192, 0, 1010, 236,
	0, 268, 150, 200, 198, 287, 163, 159, 157, 149,
	180, 204, 235, 284, 229, 417, 195, 0, 0, 276,
	212, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 148, 128, 222,
	277, 165, 63, 0, 0, 121, 122, 123, 395, 394,
	397, 398, 399, 400, 0, 0, 144, 396, 401, 402,
	403, 0, 0, 0, 0, 371, 388, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	458, 0, 0, 0, 431, 0, 387, 0, 0, 380,
	381, 383, 382, 384, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 430, 0, 0, 309, 0,
	0, 428, 0, 247, 0, 281, 174, 191, 140, 188,
	125, 136, 0, 172, 221, 255, 259, 0, 0, 0,
	151, 0, 257, 233, 300, 0, 237, 256, 196, 289,
	248, 299, 310, 311, 285, 307, 319, 273, 129, 283,
	297, 145, 267, 0, 0, 0, 131, 295, 280, 210,
	185, 186, 130, 0, 253, 156, 168, 153, 224, 292,
	293, 152, 322, 137, 306, 133, 138, 305, 217, 288,
	296, 211, 203, 132, 294, 209, 202, 190, 162, 176,
	245, 199, 246, 177, 214, 213, 215, 0, 0, 0,
	278, 303, 323, 142, 0, 286, 315, 318, 0, 249,
	143, 169, 161, 244, 167, 193, 314, 316, 317, 216,
	139, 179, 274, 189, 197, 252, 321, 232, 258, 146,
	302, 275, 418, 429, 424, 425, 422, 423, 421, 420,
	419, 432, 410, 411, 412, 413, 415, 0, 426, 427,
	414, 124, 134, 194, 320, 250, 166, 304, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 127, 135, 141, 147, 154, 160,
	164, 171, 175, 178, 181, 182, 183, 187, 201, 205,
	206, 207, 208, 218, 219, 220, 223, 226, 227, 228,
	230, 231, 234, 238, 239, 240, 241, 242, 243, 251,
	254, 260, 261, 262, 263, 264, 265, 266, 269, 270,
	271, 272, 279, 282, 290, 291, 301, 308, 312, 173,
	298, 313, 225, 0, 0, 0, 0, 374, 0, 0,
	0, 158, 0, 373, 0, 0, 0, 192, 0, 0,
	236, 0, 268, 150, 200, 198, 287, 163, 159, 157,
	149, 180, 204, 235, 284, 229, 417, 195, 0, 0,
	276, 212, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 0, 0, 0, 1116, 0, 184, 148, 128,
	222, 277, 165, 63, 0, 0, 121, 122, 123, 395,
	394, 397, 398, 399, 400, 0, 0, 144, 396, 401,
	402, 403, 1117, 0, 0, 0, 371, 388, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 0, 0, 0, 0, 431, 0, 387, 0, 0,
	380, 381, 383, 382, 384, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 430, 0, 0, 309,
	0, 0, 428, 0, 247, 0, 281, 174, 191, 140,
	188, 125, 136, 0, 172, 221, 255, 259, 0, 0,
	0, 151, 0, 257, 233, 300, 0, 237, 256, 196,
	289, 248, 299, 310, 311, 285, 307, 319, 273, 129,
	283, 297, 145, 267, 0, 0, 0, 131, 295, 280,
	210, 185, 186, 130, 0, 253, 156, 168, 153, 224,
	292, 293, 152, 322, 137, 306, 133, 138, 305, 217,
	288, 296, 211, 203, 132, 294, 209, 202, 190, 162,
	176, 245, 199, 246, 177, 214, 213, 215, 0, 0,
	0, 278, 303, 323, 142, 0, 286, 315, 318, 0,
	249, 143, 169, 161, 244, 167, 193, 314, 316, 317,
	216, 139, 179, 274, 189, 197, 252, 321, 232, 258,
	146, 302, 275, 418, 429, 424, 425, 422, 423, 421,
	420, 419, 432, 410, 411, 412, 413, 415, 0, 426,
	427, 414, 124, 134, 194, 320, 250, 166, 304, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 127, 135, 141, 147, 154,
	160, 164, 171, 175, 178, 181, 182, 183, 187, 201,
	205, 206, 207, 208, 218, 219, 220, 223, 226, 227,
	228, 230, 231, 234, 238, 239, 240, 241, 242, 243,
	251, 254, 260, 261, 262, 263, 264, 265, 266, 269,
	270, 271, 272, 279, 282, 290, 291, 301, 308, 312,
	173, 298, 313, 225, 0, 0, 0, 0, 374, 0,
	0, 0, 158, 0, 373, 0, 0, 0, 192, 0,
	0, 236, 0, 268, 150, 200, 198, 287, 163, 159,
	157, 149, 180, 204, 235, 284, 229, 417, 195, 0,
	0, 276, 212, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 148,
	128, 222, 277, 165, 63, 0, 446, 121, 122, 123,
	395, 394, 397, 398, 399, 400, 0, 0, 144, 396,
	401, 402, 403, 0, 0, 0, 0, 371, 388, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 0, 0, 0, 0, 431, 0, 387, 0,
	0, 380, 381, 383, 382, 384, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 430, 0, 0,
	309, 0, 0, 428, 0, 247, 0, 281, 174, 191,
	140, 188, 125, 136, 0, 172, 221, 255, 259, 0,
	0, 0, 151, 0, 257, 233, 300, 0, 237, 256,
	196, 289, 248, 299, 310, 311, 285, 307, 319, 273,
	129, 283, 297, 145, 267, 0, 0, 0, 131, 295,
	280, 210, 185, 186, 130, 0, 253, 156, 168, 153,
	224, 292, 293, 152, 322, 137, 306, 133, 138, 305,
	217, 288, 296, 211, 203, 132, 294, 209, 202, 190,
	162, 176, 245, 199, 246, 177, 214, 213, 215, 0,
	0, 0, 278, 303, 323, 142, 0, 286, 315, 318,
	0, 249, 143, 169, 161, 244, 167, 193, 314, 316,
	317, 216, 139, 179, 274, 189, 197, 252, 321, 232,
	258, 146, 302, 275, 418, 429, 424, 425, 422, 423,
	421, 420, 419, 432, 410, 411, 412, 413, 415, 0,
	426, 427, 414, 124, 134, 194, 320, 250, 166, 304,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 127, 135, 141, 147,
	154, 160, 164, 171, 175, 178, 181, 182, 183, 187,
	201, 205, 206, 207, 208, 218, 219, 220, 223, 226,
	227, 228, 230, 231, 234, 238, 239, 240, 241, 242,
	243, 251, 254, 260, 261, 262, 263, 264, 265, 266,
	269, 270, 271, 272, 279, 282, 290, 291, 301, 308,
	312, 173, 298, 313, 225, 0, 0, 0, 0, 374,
	0, 0, 0, 158, 0, 373, 0, 0, 0, 192,
	0, 0, 236, 0, 268, 150, 200, 198, 287, 163,
	159, 157, 149, 180, 204, 235, 284, 229, 417, 195,
	0, 0, 276, 212, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	148, 128, 222, 277, 165, 63, 0, 0, 121, 122,
	123, 395, 394, 397, 398, 399, 400, 0, 0, 144,
	396, 401, 402, 403, 0, 0, 0, 0, 371, 388,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 458, 0, 0, 0, 431, 0, 387,
	0, 0, 380, 381, 383, 382, 384, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 430, 0,
	0, 309, 0, 0, 428, 0, 247, 0, 281, 174,
	191, 140, 188, 125, 136, 0, 172, 221, 255, 259,
	0, 0, 0, 151, 0, 257, 233, 300, 0, 237,
	256, 196, 289, 248, 299, 310, 311, 285, 307, 319,
	273, 129, 283, 297, 145, 267, 0, 0, 0, 131,
	295, 280, 210, 185, 186, 130, 0, 253, 156, 168,
	153, 224, 292, 293, 152, 322, 137, 306, 133, 138,
	305, 217, 288, 296, 211, 203, 132, 294, 209, 202,
	190, 162, 176, 245, 199, 246, 177, 214, 213, 215,
	0, 0, 0, 278, 303, 323, 142, 0, 286, 315,
	318, 0, 249, 143, 169, 161, 244, 167, 193, 314,
	316, 317, 216, 139, 179, 274, 189, 197, 252, 321,
	232, 258, 146, 302, 275, 418, 429, 424, 425, 422,
	423, 421, 420, 419, 432, 410, 411, 412, 413, 415,
	0, 426, 427, 414, 124, 134, 194, 320, 250, 166,
	304, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 127, 135, 141,
	147, 154, 160, 164, 171, 175, 178, 181, 182, 183,
	187, 201, 205, 206, 207, 208, 218, 219, 220, 223,
	226, 227, 228, 230, 231, 234, 238, 239, 240, 241,
	242, 243, 251, 254, 260, 261, 262, 263, 264, 265,
	266, 269, 270, 271, 272, 279, 282, 290, 291, 301,
	308, 312, 173, 298, 313, 225, 0, 0, 0, 0,
	374, 0, 0, 0, 158, 0, 373, 0, 0, 0,
	192, 0, 0, 236, 0, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 417,
	195, 0, 0, 276, 212, 0, 0, 0, 0, 0,
	408, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 148, 128, 222, 277, 165, 63, 0, 0, 121,
	122, 123, 395, 1027, 397, 398, 399, 400, 0, 0,
	144, 396, 401, 402, 403, 0, 0, 0, 0, 371,
	388, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 458, 0, 0, 0, 431, 0,
	387, 0, 0, 380, 381, 383, 382, 384, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 430,
	0, 0, 309, 0, 0, 428, 0, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 0, 0, 0, 151, 0, 257, 233, 300, 0,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 0, 0, 278, 303, 323, 142, 0, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 418, 429, 424, 425,
	422, 423, 421, 420, 419, 432, 410, 411, 412, 413,
	415, 0, 426, 427, 414, 124, 134, 194, 320, 250,
	166, 304, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 225, 0, 0, 0,
	0, 374, 0, 0, 0, 158, 0, 373, 0, 0,
	0, 192, 0, 0, 236, 0, 268, 150, 200, 198,
	287, 163, 159, 157, 149, 180, 204, 235, 284, 229,
	417, 195, 0, 0, 276, 212, 0, 0, 0, 0,
	0, 408, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 148, 128, 222, 277, 165, 63, 0, 0,
	121, 122, 123, 395, 1024, 397, 398, 399, 400, 0,
	0, 144, 396, 401, 402, 403, 0, 0, 0, 0,
	371, 388, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 458, 0, 0, 0, 431,
	0, 387, 0, 0, 380, 381, 383, 382, 384, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	430, 0, 0, 309, 0, 0, 428, 0, 247, 0,
	281, 174, 191, 140, 188, 125, 136, 0, 172, 221,
	255, 259, 0, 0, 0, 151, 0, 257, 233, 300,
	0, 237, 256, 196, 289, 248, 299, 310, 311, 285,
	307, 319, 273, 129, 283, 297, 145, 267, 0, 0,
	0, 131, 295, 280, 210, 185, 186, 130, 0, 253,
	156, 168, 153, 224, 292, 293, 152, 322, 137, 306,
	133, 138, 305, 217, 288, 296, 211, 203, 132, 294,
	209, 202, 190, 162, 176, 245, 199, 246, 177, 214,
	213, 215, 0, 0, 0, 278, 303, 323, 142, 0,
	286, 315, 318, 0, 249, 143, 169, 161, 244, 167,
	193, 314, 316, 317, 216, 139, 179, 274, 189, 197,
	252, 321, 232, 258, 146, 302, 275, 418, 429, 424,
	425, 422, 423, 421, 420, 419, 432, 410, 411, 412,
	413, 415, 0, 426, 427, 414, 124, 134, 194, 320,
	250, 166, 304, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 127,
	135, 141, 147, 154, 160, 164, 171, 175, 178, 181,
	182, 183, 187, 201, 205, 206, 207, 208, 218, 219,
	220, 223, 226, 227, 228, 230, 231, 234, 238, 239,
	240, 241, 242, 243, 251, 254, 260, 261, 262, 263,
	264, 265, 266, 269, 270, 271, 272, 279, 282, 290,
	291, 301, 308, 312, 173, 298, 313, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 374, 0, 0, 0, 158,
	0, 373, 0, 0, 0, 192, 0, 0, 236, 0,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 417, 195, 0, 0, 276, 212,
	0, 0, 0, 0, 0, 408, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 148, 128, 222, 277,
	165, 63, 0, 0, 121, 122, 123, 395, 394, 397,
	398, 399, 400, 0, 0, 144, 396, 401, 402, 403,
	0, 0, 0, 0, 371, 388, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 0,
	0, 0, 0, 431, 0, 387, 0, 0, 380, 381,
	383, 382, 384, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 430, 0, 0, 309, 0, 0,
	428, 0, 247, 0, 281, 174, 191, 140, 188, 125,
	136, 0, 172, 221, 255, 259, 0, 0, 0, 151,
	0, 257, 233, 300, 0, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 297,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 138, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 0, 0, 278,
	303, 323, 142, 0, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 216, 139,
	179, 274, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 418, 429, 424, 425, 422, 423, 421, 420, 419,
	432, 410, 411, 412, 413, 415, 0, 426, 427, 414,
	124, 134, 194, 320, 250, 166, 304, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 225, 0, 0, 0, 0, 374, 0, 0, 0,
	158, 0, 373, 0, 0, 0, 192, 0, 0, 236,
	0, 268, 150, 200, 198, 287, 163, 159, 157, 149,
	180, 204, 235, 284, 229, 417, 195, 0, 0, 276,
	212, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 148, 128, 222,
	277, 165, 63, 0, 0, 121, 122, 123, 395, 394,
	397, 398, 399, 400, 0, 0, 144, 396, 401, 402,
	403, 0, 0, 0, 0, 371, 388, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	0, 0, 0, 0, 431, 0, 387, 0, 0, 380,
	381, 383, 382, 384, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 430, 0, 0, 309, 0,
	0, 428, 0, 247, 0, 281, 174, 191, 140, 188,
	125, 136, 0, 172, 221, 255, 259, 0, 0, 0,
	151, 0, 257, 233, 300, 0, 237, 256, 196, 289,
	248, 299, 310, 311, 285, 307, 319, 273, 129, 283,
	297, 145, 267, 0, 0, 0, 131, 295, 280, 210,
	185, 186, 130, 0, 253, 156, 168, 153, 224, 292,
	293, 152, 322, 137, 306, 133, 138, 305, 217, 288,
	296, 211, 203, 132, 294, 209, 202, 190, 162, 176,
	245, 199, 246, 177, 214, 213, 215, 0, 0, 0,
	278, 303, 323, 142, 0, 286, 315, 318, 0, 249,
	143, 169, 161, 244, 167, 193, 314, 316, 317, 216,
	139, 179, 274, 189, 197, 252, 321, 232, 258, 146,
	302, 275, 418, 429, 424, 425, 422, 423, 421, 420,
	419, 432, 410, 411, 412, 413, 415, 0, 426, 427,
	414, 124, 134, 194, 320, 250, 166, 304, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 127, 135, 141, 147, 154, 160,
	164, 171, 175, 178, 181, 182, 183, 187, 201, 205,
	206, 207, 208, 218, 219, 220, 223, 226, 227, 228,
	230, 231, 234, 238, 239, 240, 241, 242, 243, 251,
	254, 260, 261, 262, 263, 264, 265, 266, 269, 270,
	271, 272, 279, 282, 290, 291, 301, 308, 312, 173,
	298, 313, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 192, 0, 0,
	236, 0, 268, 150, 200, 198, 287, 163, 159, 157,
	149, 180, 204, 235, 284, 229, 417, 195, 0, 0,
	276, 212, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 148, 128,
	222, 277, 165, 63, 0, 0, 121, 122, 123, 395,
	394, 397, 398, 399, 400, 0, 0, 144, 396, 401,
	402, 403, 0, 0, 0, 0, 0, 388, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 0, 0, 0, 0, 431, 0, 387, 0, 0,
	380, 381, 383, 382, 384, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 430, 0, 0, 309,
	0, 0, 428, 0, 247, 0, 281, 174, 191, 140,
	188, 125, 136, 0, 172, 221, 255, 259, 0, 0,
	0, 151, 0, 257, 233, 300, 1757, 237, 256, 196,
	289, 248, 299, 310, 311, 285, 307, 319, 273, 129,
	283, 297, 145, 267, 0, 0, 0, 131, 295, 280,
	210, 185, 186, 130, 0, 253, 156, 168, 153, 224,
	292, 293, 152, 322, 137, 306, 133, 138, 305, 217,
	288, 296, 211, 203, 132, 294, 209, 202, 190, 162,
	176, 245, 199, 246, 177, 214, 213, 215, 0, 0,
	0, 278, 303, 323, 142, 0, 286, 315, 318, 0,
	249, 143, 169, 161, 244, 167, 193, 314, 316, 317,
	216, 139, 179, 274, 189, 197, 252, 321, 232, 258,
	146, 302, 275, 418, 429, 424, 425, 422, 423, 421,
	420, 419, 432, 410, 411, 412, 413, 415, 0, 426,
	427, 414, 124, 134, 194, 320, 250, 166, 304, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 127, 135, 141, 147, 154,
	160, 164, 171, 175, 178, 181, 182, 183, 187, 201,
	205, 206, 207, 208, 218, 219, 220, 223, 226, 227,
	228, 230, 231, 234, 238, 239, 240, 241, 242, 243,
	251, 254, 260, 261, 262, 263, 264, 265, 266, 269,
	270, 271, 272, 279, 282, 290, 291, 301, 308, 312,
	173, 298, 313, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 192, 0,
	0, 236, 0, 268, 150, 200, 198, 287, 163, 159,
	157, 149, 180, 204, 235, 284, 229, 417, 195, 0,
	0, 276, 212, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 148,
	128, 222, 277, 165, 63, 0, 446, 121, 122, 123,
	395, 394, 397, 398, 399, 400, 0, 0, 144, 396,
	401, 402, 403, 0, 0, 0, 0, 0, 388, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 0, 0, 0, 0, 431, 0, 387, 0,
	0, 380, 381, 383, 382, 384, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 430, 0, 0,
	309, 0, 0, 428, 0, 247, 0, 281, 174, 191,
	140, 188, 125, 136, 0, 172, 221, 255, 259, 0,
	0, 0, 151, 0, 257, 233, 300, 0, 237, 256,
	196, 289, 248, 299, 310, 311, 285, 307, 319, 273,
	129, 283, 297, 145, 267, 0, 0, 0, 131, 295,
	280, 210, 185, 186, 130, 0, 253, 156, 168, 153,
	224, 292, 293, 152, 322, 137, 306, 133, 138, 305,
	217, 288, 296, 211, 203, 132, 294, 209, 202, 190,
	162, 176, 245, 199, 246, 177, 214, 213, 215, 0,
	0, 0, 278, 303, 323, 142, 0, 286, 315, 318,
	0, 249, 143, 169, 161, 244, 167, 193, 314, 316,
	317, 216, 139, 179, 274, 189, 197, 252, 321, 232,
	258, 146, 302, 275, 418, 429, 424, 425, 422, 423,
	421, 420, 419, 432, 410, 411, 412, 413, 415, 0,
	426, 427, 414, 124, 134, 194, 320, 250, 166, 304,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 127, 135, 141, 147,
	154, 160, 164, 171, 175, 178, 181, 182, 183, 187,
	201, 205, 206, 207, 208, 218, 219, 220, 223, 226,
	227, 228, 230, 231, 234, 238, 239, 240, 241, 242,
	243, 251, 254, 260, 261, 262, 263, 264, 265, 266,
	269, 270, 271, 272, 279, 282, 290, 291, 301, 308,
	312, 173, 298, 313, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 192,
	0, 0, 236, 0, 268, 150, 200, 198, 287, 163,
	159, 157, 149, 180, 204, 235, 284, 229, 417, 195,
	0, 0, 276, 212, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	148, 128, 222, 277, 165, 63, 0, 0, 121, 122,
	123, 395, 394, 397, 398, 399, 400, 0, 0, 144,
	396, 401, 402, 403, 0, 0, 0, 0, 0, 388,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 0, 0, 0, 0, 431, 0, 387,
	0, 0, 380, 381, 383, 382, 384, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 430, 0,
	0, 309, 0, 0, 428, 0, 247, 0, 281, 174,
	191, 140, 188, 125, 136, 0, 172, 221, 255, 259,
	0, 0, 0, 151, 0, 257, 233, 300, 0, 237,
	256, 196, 289, 248, 299, 310, 311, 285, 307, 319,
	273, 129, 283, 297, 145, 267, 0, 0, 0, 131,
	295, 280, 210, 185, 186, 130, 0, 253, 156, 168,
	153, 224, 292, 293, 152, 322, 137, 306, 133, 138,
	305, 217, 288, 296, 211, 203, 132, 294, 209, 202,
	190, 162, 176, 245, 199, 246, 177, 214, 213, 215,
	0, 0, 0, 278, 303, 323, 142, 0, 286, 315,
	318, 0, 249, 143, 169, 161, 244, 167, 193, 314,
	316, 317, 216, 139, 179, 274, 189, 197, 252, 321,
	232, 258, 146, 302, 275, 418, 429, 424, 425, 422,
	423, 421, 420, 419, 432, 410, 411, 412, 413, 415,
	0, 426, 427, 414, 124, 134, 194, 320, 250, 166,
	304, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 127, 135, 141,
	147, 154, 160, 164, 171, 175, 178, 181, 182, 183,
	187, 201, 205, 206, 207, 208, 218, 219, 220, 223,
	226, 227, 228, 230, 231, 234, 238, 239, 240, 241,
	242, 243, 251, 254, 260, 261, 262, 263, 264, 265,
	266, 269, 270, 271, 272, 279, 282, 290, 291, 301,
	308, 312, 173, 298, 313, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	192, 0, 0, 236, 0, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 0,
	195, 0, 0, 276, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 702,
	712, 713, 705, 706, 707, 708, 709, 710, 711, 704,
	0, 0, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 309, 0, 0, 0, 0, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 0, 0, 0, 151, 0, 257, 233, 300, 0,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 0, 0, 278, 303, 323, 142, 0, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 134, 194, 320, 250,
	166, 304, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 173, 298, 313, 225, 0, 0, 0,
	799, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 192, 0, 0, 236, 0, 268, 150, 200, 198,
	287, 163, 159, 157, 149, 180, 204, 235, 284, 229,
	0, 195, 0, 0, 276, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 148, 128, 222, 277, 165, 0, 0, 0,
	121, 122, 123, 0, 801, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 692, 693, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 309, 0, 0, 0, 0, 247, 0,
	281, 174, 191, 140, 188, 125, 136, 0, 172, 221,
	255, 259, 0, 0, 0, 151, 0, 257, 233, 300,
	0, 237, 256, 196, 289, 248, 299, 310, 311, 285,
	307, 319, 273, 129, 283, 297, 145, 267, 0, 0,
	0, 131, 295, 280, 210, 185, 186, 130, 0, 253,
	156, 168, 153, 224, 292, 293, 152, 322, 137, 306,
	133, 138, 305, 217, 288, 296, 211, 203, 132, 294,
	209, 202, 190, 162, 176, 245, 199, 246, 177, 214,
	213, 215, 0, 0, 0, 278, 303, 323, 142, 0,
	286, 315, 318, 0, 249, 143, 169, 161, 244, 167,
	193, 314, 316, 317, 216, 139, 179, 274, 189, 197,
	252, 321, 232, 258, 146, 302, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 134, 194, 320,
	250, 166, 304, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 127,
	135, 141, 147, 154, 160, 164, 171, 175, 178, 181,
	182, 183, 187, 201, 205, 206, 207, 208, 218, 219,
	220, 223, 226, 227, 228, 230, 231, 234, 238, 239,
	240, 241, 242, 243, 251, 254, 260, 261, 262, 263,
	264, 265, 266, 269, 270, 271, 272, 279, 282, 290,
	291, 301, 308, 312, 173, 298, 313, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 1141, 0, 0,
	0, 0, 192, 0, 0, 236, 0, 268, 150, 200,
	198, 287, 163, 159, 157, 149, 180, 204, 235, 284,
	229, 0, 195, 0, 0, 276, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 148, 128, 222, 277, 165, 0, 0,
	0, 121, 122, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 1140, 309, 0, 0, 0, 1136, 1133,
	0, 1134, 1135, 191, 606, 188, 125, 136, 1131, 1138,
	221, 255, 259, 0, 0, 0, 151, 0, 257, 233,
	300, 0, 237, 256, 196, 289, 248, 299, 310, 311,
	285, 307, 319, 273, 129, 283, 297, 145, 267, 0,
	0, 0, 131, 295, 280, 210, 185, 186, 130, 0,
	253, 156, 168, 153, 224, 292, 293, 152, 322, 137,
	306, 133, 138, 305, 217, 288, 296, 211, 203, 132,
	294, 209, 202, 190, 162, 176, 245, 199, 246, 177,
	214, 213, 215, 0, 0, 0, 278, 303, 323, 142,
	0, 286, 315, 318, 0, 249, 143, 169, 161, 244,
	167, 193, 314, 316, 317, 216, 139, 179, 274, 189,
	197, 252, 321, 232, 258, 146, 302, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 134, 194,
	320, 250, 166, 304, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	127, 135, 141, 147, 154, 160, 164, 171, 175, 178,
	181, 182, 183, 187, 201, 205, 206, 207, 208, 218,
	219, 220, 223, 226, 227, 228, 230, 231, 234, 238,
	239, 240, 241, 242, 243, 251, 254, 260, 261, 262,
	263, 264, 265, 266, 269, 270, 271, 272, 279, 282,
	290, 291, 301, 308, 312, 173, 298, 313, 31, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 192, 0, 0, 236,
	0, 268, 150, 200, 198, 287, 163, 159, 157, 149,
	180, 204, 235, 284, 229, 0, 195, 0, 0, 276,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 148, 128, 222,
	277, 165, 63, 0, 446, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 309, 0,
	0, 0, 0, 247, 0, 281, 174, 191, 140, 188,
	125, 136, 0, 172, 221, 255, 259, 0, 0, 0,
	151, 0, 257, 233, 300, 0, 237, 256, 196, 289,
	248, 299, 310, 311, 285, 307, 319, 273, 129, 283,
	297, 145, 267, 0, 0, 0, 131, 295, 280, 210,
	185, 186, 130, 0, 253, 156, 168, 153, 224, 292,
	293, 152, 322, 137, 306, 133, 138, 305, 217, 288,
	296, 211, 203, 132, 294, 209, 202, 190, 162, 176,
	245, 199, 246, 177, 214, 213, 215, 0, 0, 0,
	278, 303, 323, 142, 0, 286, 315, 318, 0, 249,
	143, 169, 161, 244, 167, 193, 314, 316, 317, 216,
	139, 179, 274, 189, 197, 252, 321, 232, 258, 146,
	302, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 134, 194, 320, 250, 166, 304, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 127, 135, 141, 147, 154, 160,
	164, 171, 175, 178, 181, 182, 183, 187, 201, 205,
	206, 207, 208, 218, 219, 220, 223, 226, 227, 228,
	230, 231, 234, 238, 239, 240, 241, 242, 243, 251,
	254, 260, 261, 262, 263, 264, 265, 266, 269, 270,
	271, 272, 279, 282, 290, 291, 301, 308, 312, 173,
	298, 313, 225, 0, 0, 0, 1098, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 192, 0, 0,
	236, 0, 268, 150, 200, 198, 287, 163, 159, 157,
	149, 180, 204, 235, 284, 229, 0, 195, 0, 0,
	276, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 148, 128,
	222, 277, 165, 0, 0, 0, 121, 122, 123, 0,
	1100, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 309,
	0, 0, 0, 0, 247, 0, 281, 174, 191, 140,
	188, 125, 136, 0, 172, 221, 255, 259, 0, 0,
	0, 151, 0, 257, 233, 300, 0, 237, 256, 196,
	289, 248, 299, 310, 311, 285, 307, 319, 273, 129,
	283, 297, 145, 267, 0, 0, 0, 131, 295, 280,
	210, 185, 186, 130, 0, 253, 156, 168, 153, 224,
	292, 293, 152, 322, 137, 306, 133, 138, 305, 217,
	288, 296, 211, 203, 132, 294, 209, 202, 190, 162,
	176, 245, 199, 246, 177, 214, 213, 215, 0, 0,
	0, 278, 303, 323, 142, 0, 286, 315, 318, 0,
	249, 143, 169, 161, 244, 167, 193, 314, 316, 317,
	216, 139, 179, 274, 189, 197, 252, 321, 232, 258,
	146, 302, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 134, 194, 320, 250, 166, 304, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 127, 135, 141, 147, 154,
	160, 164, 171, 175, 178, 181, 182, 183, 187, 201,
	205, 206, 207, 208, 218, 219, 220, 223, 226, 227,
	228, 230, 231, 234, 238, 239, 240, 241, 242, 243,
	251, 254, 260, 261, 262, 263, 264, 265, 266, 269,
	270, 271, 272, 279, 282, 290, 291, 301, 308, 312,
	173, 298, 313, 31, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 192, 0, 0, 236, 0, 268, 150, 200, 198,
	287, 163, 159, 157, 149, 180, 204, 235, 284, 229,
	0, 195, 0, 0, 276, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 148, 128, 222, 277, 165, 63, 0, 0,
	121, 122, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 309, 0, 0, 0, 0, 247, 0,
	281, 174, 191, 140, 188, 125, 136, 0, 172, 221,
	255, 259, 0, 0, 0, 151, 0, 257, 233, 300,
	0, 237, 256, 196, 289, 248, 299, 310, 311, 285,
	307, 319, 273, 129, 283, 297, 145, 267, 0, 0,
	0, 131, 295, 280, 210, 185, 186, 130, 0, 253,
	156, 168, 153, 224, 292, 293, 152, 322, 137, 306,
	133, 138, 305, 217, 288, 296, 211, 203, 132, 294,
	209, 202, 190, 162, 176, 245, 199, 246, 177, 214,
	213, 215, 0, 0, 0, 278, 303, 323, 142, 0,
	286, 315, 318, 0, 249, 143, 169, 161, 244, 167,
	193, 314, 316, 317, 216, 139, 179, 274, 189, 197,
	252, 321, 232, 258, 146, 302, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 134, 194, 320,
	250, 166, 304, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 127,
	135, 141, 147, 154, 160, 164, 171, 175, 178, 181,
	182, 183, 187, 201, 205, 206, 207, 208, 218, 219,
	220, 223, 226, 227, 228, 230, 231, 234, 238, 239,
	240, 241, 242, 243, 251, 254, 260, 261, 262, 263,
	264, 265, 266, 269, 270, 271, 272, 279, 282, 290,
	291, 301, 308, 312, 173, 298, 313, 225, 0, 0,
	0, 1098, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 192, 0, 0, 236, 0, 268, 150, 200,
	198, 287, 163, 159, 157, 149, 180, 204, 235, 284,
	229, 0, 195, 0, 0, 276, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 148, 128, 222, 277, 165, 0, 0,
	0, 121, 122, 123, 0, 1100, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 309, 0, 0, 0, 0, 247,
	0, 281, 174, 191, 140, 188, 125, 136, 0, 172,
	221, 255, 259, 0, 0, 0, 151, 0, 257, 233,
	300, 0, 1096, 256, 196, 289, 248, 299, 310, 311,
	285, 307, 319, 273, 129, 283, 297, 145, 267, 0,
	0, 0, 131, 295, 280, 210, 185, 186, 130, 0,
	253, 156, 168, 153, 224, 292, 293, 152, 322, 137,
	306, 133, 138, 305, 217, 288, 296, 211, 203, 132,
	294, 209, 202, 190, 162, 176, 245, 199, 246, 177,
	214, 213, 215, 0, 0, 0, 278, 303, 323, 142,
	0, 286, 315, 318, 0, 249, 143, 169, 161, 244,
	167, 193, 314, 316, 317, 216, 139, 179, 274, 189,
	197, 252, 321, 232, 258, 146, 302, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 134, 194,
	320, 250, 166, 304, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	127, 135, 141, 147, 154, 160, 164, 171, 175, 178,
	181, 182, 183, 187, 201, 205, 206, 207, 208, 218,
	219, 220, 223, 226, 227, 228, 230, 231, 234, 238,
	239, 240, 241, 242, 243, 251, 254, 260, 261, 262,
	263, 264, 265, 266, 269, 270, 271, 272, 279, 282,
	290, 291, 301, 308, 312, 173, 298, 313, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 192, 0, 0, 236, 0, 268, 150,
	200, 198, 287, 163, 159, 157, 149, 180, 204, 235,
	284, 229, 0, 195, 0, 0, 276, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 148, 128, 222, 277, 165, 0,
	0, 0, 121, 122, 123, 0, 0, 1063, 0, 0,
	1064, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 309, 0, 0, 0, 0,
	247, 0, 281, 174, 191, 140, 188, 125, 136, 0,
	172, 221, 255, 259, 0, 0, 0, 151, 0, 257,
	233, 300, 0, 237, 256, 196, 289, 248, 299, 310,
	311, 285, 307, 319, 273, 129, 283, 297, 145, 267,
	0, 0, 0, 131, 295, 280, 210, 185, 186, 130,
	0, 253, 156, 168, 153, 224, 292, 293, 152, 322,
	137, 306, 133, 138, 305, 217, 288, 296, 211, 203,
	132, 294, 209, 202, 190, 162, 176, 245, 199, 246,
	177, 214, 213, 215, 0, 0, 0, 278, 303, 323,
	142, 0, 286, 315, 318, 0, 249, 143, 169, 161,
	244, 167, 193, 314, 316, 317, 216, 139, 179, 274,
	189, 197, 252, 321, 232, 258, 146, 302, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 134,
	194, 320, 250, 166, 304, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 127, 135, 141, 147, 154, 160, 164, 171, 175,
	178, 181, 182, 183, 187, 201, 205, 206, 207, 208,
	218, 219, 220, 223, 226, 227, 228, 230, 231, 234,
	238, 239, 240, 241, 242, 243, 251, 254, 260, 261,
	262, 263, 264, 265, 266, 269, 270, 271, 272, 279,
	282, 290, 291, 301, 308, 312, 173, 298, 313, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	833, 0, 0, 0, 192, 0, 0, 236, 0, 268,
	150, 200, 198, 287, 163, 159, 157, 149, 180, 204,
	235, 284, 229, 0, 195, 0, 0, 276, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 148, 128, 222, 277, 165,
	0, 0, 0, 121, 122, 123, 0, 832, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 309, 0, 0, 0,
	0, 247, 0, 281, 174, 191, 140, 188, 125, 136,
	0, 172, 221, 255, 259, 0, 0, 0, 151, 0,
	257, 233, 300, 0, 237, 256, 196, 289, 248, 299,
	310, 311, 285, 307, 319, 273, 129, 283, 297, 145,
	267, 0, 0, 0, 131, 295, 280, 210, 185, 186,
	130, 0, 253, 156, 168, 153, 224, 292, 293, 152,
	322, 137, 306, 133, 138, 305, 217, 288, 296, 211,
	203, 132, 294, 209, 202, 190, 162, 176, 245, 199,
	246, 177, 214, 213, 215, 0, 0, 0, 278, 303,
	323, 142, 0, 286, 315, 318, 0, 249, 143, 169,
	161, 244, 167, 193, 314, 316, 317, 216, 139, 179,
	274, 189, 197, 252, 321, 232, 258, 146, 302, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	134, 194, 320, 250, 166, 304, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 127, 135, 141, 147, 154, 160, 164, 171,
	175, 178, 181, 182, 183, 187, 201, 205, 206, 207,
	208, 218, 219, 220, 223, 226, 227, 228, 230, 231,
	234, 238, 239, 240, 241, 242, 243, 251, 254, 260,
	261, 262, 263, 264, 265, 266, 269, 270, 271, 272,
	279, 282, 290, 291, 301, 308, 312, 173, 298, 313,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 192, 0, 0, 236, 0,
	268, 150, 200, 198, 287, 163, 159, 157, 149, 180,
	204, 235, 284, 229, 0, 195, 0, 0, 276, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 148, 128, 222, 277,
	165, 0, 0, 0, 121, 122, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 309, 0, 0,
	0, 0, 247, 0, 281, 174, 191, 606, 188, 125,
	136, 604, 172, 221, 255, 259, 0, 0, 0, 151,
	0, 257, 233, 300, 0, 237, 256, 196, 289, 248,
	299, 310, 311, 285, 307, 319, 273, 129, 283, 297,
	145, 267, 0, 0, 0, 131, 295, 280, 210, 185,
	186, 130, 0, 253, 156, 168, 153, 224, 292, 293,
	152, 322, 137, 306, 133, 138, 305, 217, 288, 296,
	211, 203, 132, 294, 209, 202, 190, 162, 176, 245,
	199, 246, 177, 214, 213, 215, 0, 0, 0, 278,
	303, 323, 142, 0, 286, 315, 318, 0, 249, 143,
	169, 161, 244, 167, 193, 314, 316, 317, 216, 139,
	179, 274, 189, 197, 252, 321, 232, 258, 146, 302,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 134, 194, 320, 250, 166, 304, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 127, 135, 141, 147, 154, 160, 164,
	171, 175, 178, 181, 182, 183, 187, 201, 205, 206,
	207, 208, 218, 219, 220, 223, 226, 227, 228, 230,
	231, 234, 238, 239, 240, 241, 242, 243, 251, 254,
	260, 261, 262, 263, 264, 265, 266, 269, 270, 271,
	272, 279, 282, 290, 291, 301, 308, 312, 173, 298,
	313, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 192, 0, 0, 236,
	0, 268, 150, 200, 198, 287, 163, 159, 157, 149,
	180, 204, 235, 284, 229, 0, 195, 0, 0, 276,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 148, 128, 222,
	277, 165, 0, 0, 446, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 309, 0,
	0, 0, 0, 247, 0, 281, 174, 191, 140, 188,
	125, 136, 0, 172, 221, 255, 259, 0, 0, 0,
	151, 0, 257, 233, 300, 0, 237, 256, 196, 289,
	248, 299, 310, 311, 285, 307, 319, 273, 129, 283,
	297, 145, 267, 0, 0, 0, 131, 295, 280, 210,
	185, 186, 130, 0, 253, 156, 168, 153, 224, 292,
	293, 152, 322, 137, 306, 133, 138, 305, 217, 288,
	296, 211, 203, 132, 294, 209, 202, 190, 162, 176,
	245, 199, 246, 177, 214, 213, 215, 0, 0, 0,
	278, 303, 323, 142, 0, 286, 315, 318, 0, 249,
	143, 169, 161, 244, 167, 193, 314, 316, 317, 216,
	139, 179, 274, 189, 197, 252, 321, 232, 258, 146,
	302, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 134, 194, 320, 250, 166, 304, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 127, 135, 141, 147, 154, 160,
	164, 171, 175, 178, 181, 182, 183, 187, 201, 205,
	206, 207, 208, 218, 219, 220, 223, 226, 227, 228,
	230, 231, 234, 238, 239, 240, 241, 242, 243, 251,
	254, 260, 261, 262, 263, 264, 265, 266, 269, 270,
	271, 272, 279, 282, 290, 291, 301, 308, 312, 173,
	298, 313, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 192, 0, 0,
	236, 0, 268, 150, 200, 198, 287, 163, 159, 157,
	149, 180, 204, 235, 284, 229, 0, 195, 0, 0,
	276, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 148, 128,
	222, 277, 165, 63, 0, 0, 121, 122, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 309,
	0, 0, 0, 0, 247, 0, 281, 174, 191, 140,
	188, 125, 136, 0, 172, 221, 255, 259, 0, 0,
	0, 151, 0, 257, 233, 300, 0, 237, 256, 196,
	289, 248, 299, 310, 311, 285, 307, 319, 273, 129,
	283, 297, 145, 267, 0, 0, 0, 131, 295, 280,
	210, 185, 186, 130, 0, 253, 156, 168, 153, 224,
	292, 293, 152, 322, 137, 306, 133, 138, 305, 217,
	288, 296, 211, 203, 132, 294, 209, 202, 190, 162,
	176, 245, 199, 246, 177, 214, 213, 215, 0, 0,
	0, 278, 303, 323, 142, 0, 286, 315, 318, 0,
	249, 143, 169, 161, 244, 167, 193, 314, 316, 317,
	216, 139, 179, 274, 189, 197, 252, 321, 232, 258,
	146, 302, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 134, 194, 320, 250, 166, 304, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 127, 135, 141, 147, 154,
	160, 164, 171, 175, 178, 181, 182, 183, 187, 201,
	205, 206, 207, 208, 218, 219, 220, 223, 226, 227,
	228, 230, 231, 234, 238, 239, 240, 241, 242, 243,
	251, 254, 260, 261, 262, 263, 264, 265, 266, 269,
	270, 271, 272, 279, 282, 290, 291, 301, 308, 312,
	173, 298, 313, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 192, 0,
	0, 236, 0, 268, 150, 200, 198, 287, 163, 159,
	157, 149, 180, 204, 235, 284, 229, 0, 195, 0,
	0, 276, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 148,
	128, 222, 277, 165, 0, 0, 0, 121, 122, 123,
	0, 1100, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	309, 0, 0, 0, 0, 247, 0, 281, 174, 191,
	140, 188, 125, 136, 0, 172, 221, 255, 259, 0,
	0, 0, 151, 0, 257, 233, 300, 0, 237, 256,
	196, 289, 248, 299, 310, 311, 285, 307, 319, 273,
	129, 283, 297, 145, 267, 0, 0, 0, 131, 295,
	280, 210, 185, 186, 130, 0, 253, 156, 168, 153,
	224, 292, 293, 152, 322, 137, 306, 133, 138, 305,
	217, 288, 296, 211, 203, 132, 294, 209, 202, 190,
	162, 176, 245, 199, 246, 177, 214, 213, 215, 0,
	0, 0, 278, 303, 323, 142, 0, 286, 315, 318,
	0, 249, 143, 169, 161, 244, 167, 193, 314, 316,
	317, 216, 139, 179, 274, 189, 197, 252, 321, 232,
	258, 146, 302, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 134, 194, 320, 250, 166, 304,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 127, 135, 141, 147,
	154, 160, 164, 171, 175, 178, 181, 182, 183, 187,
	201, 205, 206, 207, 208, 218, 219, 220, 223, 226,
	227, 228, 230, 231, 234, 238, 239, 240, 241, 242,
	243, 251, 254, 260, 261, 262, 263, 264, 265, 266,
	269, 270, 271, 272, 279, 282, 290, 291, 301, 308,
	312, 173, 298, 313, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 192,
	0, 0, 236, 0, 268, 150, 200, 198, 287, 163,
	159, 157, 149, 180, 204, 235, 284, 229, 0, 195,
	0, 0, 276, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	148, 128, 222, 277, 165, 0, 0, 0, 121, 122,
	123, 0, 801, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 309, 0, 0, 0, 0, 247, 0, 281, 174,
	191, 140, 188, 125, 136, 0, 172, 221, 255, 259,
	0, 0, 0, 151, 0, 257, 233, 300, 0, 237,
	256, 196, 289, 248, 299, 310, 311, 285, 307, 319,
	273, 129, 283, 297, 145, 267, 0, 0, 0, 131,
	295, 280, 210, 185, 186, 130, 0, 253, 156, 168,
	153, 224, 292, 293, 152, 322, 137, 306, 133, 138,
	305, 217, 288, 296, 211, 203, 132, 294, 209, 202,
	190, 162, 176, 245, 199, 246, 177, 214, 213, 215,
	0, 0, 0, 278, 303, 323, 142, 0, 286, 315,
	318, 0, 249, 143, 169, 161, 244, 167, 193, 314,
	316, 317, 216, 139, 179, 274, 189, 197, 252, 321,
	232, 258, 146, 302, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 134, 194, 320, 250, 166,
	304, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 127, 135, 141,
	147, 154, 160, 164, 171, 175, 178, 181, 182, 183,
	187, 201, 205, 206, 207, 208, 218, 219, 220, 223,
	226, 227, 228, 230, 231, 234, 238, 239, 240, 241,
	242, 243, 251, 254, 260, 261, 262, 263, 264, 265,
	266, 269, 270, 271, 272, 279, 282, 290, 291, 301,
	308, 312, 173, 298, 313, 815, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 192, 0, 0,
	236, 0, 268, 150, 200, 198, 287, 163, 159, 157,
	149, 180, 204, 235, 284, 229, 0, 195, 0, 0,
	276, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 148, 128,
	222, 277, 165, 0, 0, 0, 121, 122, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 309,
	0, 0, 0, 0, 247, 0, 281, 174, 191, 140,
	188, 125, 136, 0, 172, 221, 255, 259, 0, 0,
	0, 151, 0, 257, 233, 300, 0, 237, 256, 196,
	289, 248, 299, 310, 311, 285, 307, 319, 273, 129,
	283, 297, 145, 267, 0, 0, 0, 131, 295, 280,
	210, 185, 186, 130, 0, 253, 156, 168, 153, 224,
	292, 293, 152, 322, 137, 306, 133, 138, 305, 217,
	288, 296, 211, 203, 132, 294, 209, 202, 190, 162,
	176, 245, 199, 246, 177, 214, 213, 215, 0, 0,
	0, 278, 303, 323, 142, 0, 286, 315, 318, 0,
	249, 143, 169, 161, 244, 167, 193, 314, 316, 317,
	216, 139, 179, 274, 189, 197, 252, 321, 232, 258,
	146, 302, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 134, 194, 320, 250, 166, 304, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 127, 135, 141, 147, 154,
	160, 164, 171, 175, 178, 181, 182, 183, 187, 201,
	205, 206, 207, 208, 218, 219, 220, 223, 226, 227,
	228, 230, 231, 234, 238, 239, 240, 241, 242, 243,
	251, 254, 260, 261, 262, 263, 264, 265, 266, 269,
	270, 271, 272, 279, 282, 290, 291, 301, 308, 312,
	173, 298, 313, 225, 0, 0, 0, 0, 0, 0,
	0, 805, 158, 0, 0, 0, 0, 0, 192, 0,
	0, 236, 0, 268, 150, 200, 198, 287, 163, 159,
	157, 149, 180, 204, 235, 284, 229, 0, 195, 0,
	0, 276, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 148,
	128, 222, 277, 165, 0, 0, 0, 121, 122, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	309, 0, 0, 0, 0, 247, 0, 281, 174, 191,
	140, 188, 125, 136, 0, 172, 221, 255, 259, 0,
	0, 0, 151, 0, 257, 233, 300, 0, 237, 256,
	196, 289, 248, 299, 310, 311, 285, 307, 319, 273,
	129, 283, 297, 145, 267, 0, 0, 0, 131, 295,
	280, 210, 185, 186, 130, 0, 253, 156, 168, 153,
	224, 292, 293, 152, 322, 137, 306, 133, 138, 305,
	217, 288, 296, 211, 203, 132, 294, 209, 202, 190,
	162, 176, 245, 199, 246, 177, 214, 213, 215, 0,
	0, 0, 278, 303, 323, 142, 0, 286, 315, 318,
	0, 249, 143, 169, 161, 244, 167, 193, 314, 316,
	317, 216, 139, 179, 274, 189, 197, 252, 321, 232,
	258, 146, 302, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 134, 194, 320, 250, 166, 304,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 127, 135, 141, 147,
	154, 160, 164, 171, 175, 178, 181, 182, 183, 187,
	201, 205, 206, 207, 208, 218, 219, 220, 223, 226,
	227, 228, 230, 231, 234, 238, 239, 240, 241, 242,
	243, 251, 254, 260, 261, 262, 263, 264, 265, 266,
	269, 270, 271, 272, 279, 282, 290, 291, 301, 308,
	312, 173, 298, 313, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 192,
	0, 0, 236, 0, 268, 150, 200, 198, 287, 163,
	159, 157, 149, 180, 204, 235, 284, 229, 0, 195,
	0, 0, 276, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	148, 128, 222, 277, 165, 0, 0, 0, 121, 122,
	123, 0, 681, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 309, 0, 0, 0, 0, 247, 0, 281, 174,
	191, 140, 188, 125, 136, 0, 172, 221, 255, 259,
	0, 0, 0, 151, 0, 257, 233, 300, 0, 237,
	256, 196, 289, 248, 299, 310, 311, 285, 307, 319,
	273, 129, 283, 297, 145, 267, 0, 0, 0, 131,
	295, 280, 210, 185, 186, 130, 0, 253, 156, 168,
	153, 224, 292, 293, 152, 322, 137, 306, 133, 138,
	305, 217, 288, 296, 211, 203, 132, 294, 209, 202,
	190, 162, 176, 245, 199, 246, 177, 214, 213, 215,
	0, 0, 0, 278, 303, 323, 142, 0, 286, 315,
	318, 0, 249, 143, 169, 161, 244, 167, 193, 314,
	316, 317, 216, 139, 179, 274, 189, 197, 252, 321,
	232, 258, 146, 302, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 134, 194, 320, 250, 166,
	304, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 127, 135, 141,
	147, 154, 160, 164, 171, 175, 178, 181, 182, 183,
	187, 201, 205, 206, 207, 208, 218, 219, 220, 223,
	226, 227, 228, 230, 231, 234, 238, 239, 240, 241,
	242, 243, 251, 254, 260, 261, 262, 263, 264, 265,
	266, 269, 270, 271, 272, 279, 282, 290, 291, 301,
	308, 312, 173, 298, 313, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	192, 0, 0, 236, 0, 268, 150, 200, 198, 287,
	163, 159, 157, 149, 180, 204, 235, 284, 229, 0,
	195, 0, 0, 276, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 148, 128, 222, 277, 165, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 170, 0,
	0, 0, 309, 0, 0, 0, 0, 247, 0, 281,
	174, 191, 140, 188, 125, 136, 0, 172, 221, 255,
	259, 0, 0, 0, 151, 0, 257, 233, 300, 0,
	237, 256, 196, 289, 248, 299, 310, 311, 285, 307,
	319, 273, 129, 283, 297, 145, 267, 0, 0, 0,
	131, 295, 280, 210, 185, 186, 130, 0, 253, 156,
	168, 153, 224, 292, 293, 152, 322, 137, 306, 133,
	138, 305, 217, 288, 296, 211, 203, 132, 294, 209,
	202, 190, 162, 176, 245, 199, 246, 177, 214, 213,
	215, 0, 0, 0, 278, 303, 323, 142, 0, 286,
	315, 318, 0, 249, 143, 169, 161, 244, 167, 193,
	314, 316, 317, 216, 139, 179, 274, 189, 197, 252,
	321, 232, 258, 146, 302, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 134, 194, 320, 250,
	166, 304, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 127, 135,
	141, 147, 154, 160, 164, 171, 175, 178, 181, 182,
	183, 187, 201, 205, 206, 207, 208, 218, 219, 220,
	223, 226, 227, 228, 230, 231, 234, 238, 239, 240,
	241, 242, 243, 251, 254, 260, 261, 262, 263, 264,
	265, 266, 269, 270, 271, 272, 279, 282, 290, 291,
	301, 308, 312, 361, 298, 313, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 192, 0, 0, 236, 0, 268, 150, 200, 198,
	287, 163, 159, 157, 149, 180, 204, 235, 284, 229,
	0, 195, 0, 0, 276, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 148, 128, 222, 277, 165, 0, 0, 0,
	121, 122, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 116, 0, 309, 0, 0, 0, 0, 247, 0,
	281, 174, 191, 140, 188, 125, 136, 0, 172, 221,
	255, 259, 0, 0, 0, 151, 0, 257, 233, 300,
	0, 237, 256, 196, 289, 248, 299, 310, 311, 285,
	307, 319, 273, 129, 283, 297, 145, 267, 0, 0,
	0, 131, 295, 280, 210, 185, 186, 130, 0, 253,
	156, 168, 153, 224, 292, 293, 152, 322, 137, 306,
	133, 138, 305, 217, 288, 296, 211, 203, 132, 294,
	209, 202, 190, 162, 176, 245, 199, 246, 177, 214,
	213, 215, 0, 0, 0, 278, 303, 323, 142, 0,
	286, 315, 318, 0, 249, 143, 169, 161, 244, 167,
	193, 314, 316, 317, 216, 139, 179, 274, 189, 197,
	252, 321, 232, 258, 146, 302, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 134, 194, 320,
	250, 166, 304, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 127,
	135, 141, 147, 154, 160, 164, 171, 175, 178, 181,
	182, 183, 187, 201, 205, 206, 207, 208, 218, 219,
	220, 223, 226, 227, 228, 230, 231, 234, 238, 239,
	240, 241, 242, 243, 251, 254, 260, 261, 262, 263,
	264, 265, 266, 269, 270, 271, 272, 279, 282, 290,
	291, 301, 308, 312, 173, 298, 313, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 192, 0, 0, 236, 0, 268, 150, 200,
	198, 287, 163, 159, 157, 149, 180, 204, 235, 284,
	229, 0, 195, 0, 0, 276, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 148, 128, 222, 277, 165, 0, 0,
	0, 121, 122, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 309, 0, 0, 0, 0, 247,
	0, 281, 174, 191, 140, 188, 125, 136, 0, 172,
	221, 255, 259, 0, 0, 0, 151, 0, 257, 233,
	300, 0, 237, 256, 196, 289, 248, 299, 310, 311,
	285, 307, 319, 273, 129, 283, 297, 145, 267, 0,
	0, 0, 131, 295, 280, 210, 185, 186, 130, 0,
	253, 156, 168, 153, 224, 292, 293, 152, 322, 137,
	306, 133, 138, 305, 217, 288, 296, 211, 203, 132,
	294, 209, 202, 190, 162, 176, 245, 199, 246, 177,
	214, 213, 215, 0, 0, 0, 278, 303, 323, 142,
	0, 286, 315, 318, 0, 249, 143, 169, 161, 244,
	167, 193, 314, 316, 317, 216, 139, 179, 274, 189,
	197, 252, 321, 232, 258, 146, 302, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 134, 194,
	320, 250, 166, 304, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	127, 135, 141, 147, 154, 160, 164, 171, 175, 178,
	181, 182, 183, 187, 201, 205, 206, 207, 208, 218,
	219, 220, 223, 226, 227, 228, 230, 231, 234, 238,
	239, 240, 241, 242, 243, 251, 254, 260, 261, 262,
	263, 264, 265, 266, 269, 270, 271, 272, 279, 282,
	290, 291, 301, 308, 312, 173, 298, 313,
}
var yyPact = [...]int{

	1772, -1000, -289, 1214, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1112,
	910, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 326, 867,
	63, 1066, 75, 183, 47, 18837, 180, 313, 19208, -1000,
	38, -1000, 21, 19208, 29, 18466, -1000, -1000, -49, -61,
	-1000, 10642, 1003, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 899, 1103, 1104, 1147, 684, 1133, -1000, 9145, 9145,
	113, 113, 113, 7661, -1000, -1000, 15491, 19208, 19208, 19208,
	-127, 110, 178, 110, -1000, -1000, -1000, -1000, -1000, -1000,
	1066, -1000, -1000, 96, -1000, 19208, 19208, 582, 582, 268,
	19208, 105, 582, 105, 105, 105, 19208, -1000, 234, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19208, 582, 1063, 442, 165, 296,
	296, 296, -1000, 225, -1000, 5351, 45, 48, -46, 1177,
	46, -7, -1000, 442, 5351, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 119, -1000, -1000, -1000, -1000, 19208, 18095,
	188, 359, -1000, -1000, -1000, -1000, -1000, -1000, 722, 502,
	-1000, 10642, 2547, 783, 783, -1000, -1000, 198, -1000, -1000,
	11755, 11755, 11755, 11755, 11755, 11755, 11755, 11755, 11755, 11755,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 783, 233, -1000, 10271, 783, 783,
	783, 783, 783, 783, 783, 783, 10642, 783, 783, 783,
	783, 783, 783, 783, 783, 783, 783, 783, 783, 783,
	783, 783, 783, -1000, -1000, -1000, 1112, -1000, 910, -1000,
	-1000, -1000, 1056, 10642, 10642, 1112, -1000, 960, 9145, -1000,
	-1000, 1111, -1000, -1000, -1000, -1000, 413, 1198, -1000, 12497,
	209, 1196, 17724, -1000, 16233, 17353, 827, 7276, -93, -1000,
	-1000, -1000, 351, 15120, -1000, -1000, -1000, 1062, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 759,
	19208, -1000, -1000, 73, 582, -1000, 861, -1000, 751, -1000,
	841, 5351, 128, 19208, 388, 582, 582, -1000, -1000, 1055,
	338, 1984, 5351, 5351, 5351, 52, 145, 68, 19208, 826,
	118, 19208, 1095, 912, 19208, 582, 582, -1000, 6506, -1000,
	5351, 442, -1000, 588, 10642, 5351, 5351, 5351, 19208, 5351,
	5351, -1000, 575, -1000, -1000, 418, -1000, -1000, -1000, -1000,
	-1000, -1000, 5351, 5351, 381, 418, 381, -1000, -1000, -1000,
	-1000, 10642, 296, -1000, 909, -1000, -1000, 24, -1000, -1000,
	-1000, -1000, -1000, 1214, -1000, -1000, -1000, -135, -1000, -1000,
	10642, 10642, 10642, 10642, 580, 299, 11755, 455, 367, 11755,
	11755, 11755, 11755, 11755, 11755, 11755, 11755, 11755, 11755, 11755,
	11755, 11755, 11755, 11755, 569, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 582, -1000, 1199, 782, 782, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 12126, 8032, 6506,
	684, 742, 1112, 9145, 9145, 10642, 10642, 9887, 9516, 9145,
	1053, 383, 502, 19208, -1000, -1000, 11384, -1000, -1000, -1000,
	-1000, -1000, 431, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19208, 19208, 9145, 9145, 9145, 9145, 9145, -1000, 1104, 684,
	1111, 1090, 1206, 284, 779, 825, -1000, 572, 1104, 14749,
	833, -1000, 1111, -1000, -1000, -1000, 19208, -1000, -1000, 16975,
	-1000, -1000, 6121, 19208, 74, 19208, -1000, 696, 1118, -1000,
	-1000, -1000, 1097, 14007, 14378, 19208, 830, 809, -1000, -1000,
	208, 6891, -93, -1000, 6891, 780, -1000, -86, -85, 8403,
	247, -1000, -1000, -1000, -1000, 4581, 12868, 631, 396, -43,
	-1000, -1000, -1000, 841, -1000, 841, 841, 841, 841, -9,
	-9, -9, -9, -1000, -1000, -1000, -1000, -1000, 866, 864,
	-1000, 841, 841, 841, 841, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 863, 863, 863, 847, 847, 81, 10642, 56,
	19208, 1089, 520, -1000, 19208, -1000, 1094, 896, -1000, 338,
	704, -1000, -1000, 425, 425, 244, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 76, -1000, -1000,
	-1000, 19208, 19208, 19208, 19208, 19208, 190, 19208, 19208, 823,
	-1000, 19208, 5351, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 502, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19208,
	-1000, -1000, -1000, -1000, 442, 19208, 19208, 19208, 442, 502,
	-1000, 19208, 19208, -1000, -1000, -1000, -1000, -1000, 502, 299,
	346, 340, -1000, -1000, 474, -1000, -1000, 426, -1000, -1000,
	-1000, -1000, 455, 11755, 11755, 11755, 239, 426, 2048, 1641,
	2276, 253, 293, 293, 255, 255, 255, 255, 255, 603,
	603, -1000, -1000, -1000, 431, -1000, -1000, -1000, 431, 9145,
	9145, 819, 783, 207, -1000, 899, -1000, -1000, 1104, 720,
	720, 526, 678, 373, 1195, 720, 370, 1194, 720, 720,
	9145, -1000, -1000, 372, -1000, 10642, 431, -1000, 206, -1000,
	726, 804, 802, 720, 431, 431, 720, 720, 1056, -1000,
	-1000, 1039, -1000, 950, 10642, 10642, 10642, -1000, -1000, -1000,
	1056, 1114, -1000, 973, 972, 1166, 9145, 16233, 1111, -1000,
	-1000, -1000, 205, 1166, 812, 783, -1000, 19208, 16233, 16233,
	16233, 16233, 16233, -1000, 938, 935, -1000, 956, 947, 957,
	19208, -1000, 731, 684, 14007, 252, 783, -1000, 16604, -1000,
	-1000, 74, 815, 16233, 19208, -1000, -1000, 16233, 19208, 5736,
	-1000, 780, -93, -88, -1000, -1000, -1000, -1000, 502, -1000,
	657, 766, 4196, -1000, -1000, -1000, -1000, 100, -1000, -1000,
	862, 582, -1000, 1077, 298, 298, 328, 582, 1074, -1000,
	-1000, -1000, -1000, 1057, -1000, 400, -45, -1000, -1000, -9,
	-9, -1000, -1000, 247, 1040, 247, 247, 247, 571, 571,
	-1000, -1000, -1000, -1000, -1000, 518, -1000, -1000, -1000, 478,
	-1000, -1000, 861, 403, 936, 56, -1000, 582, 338, 568,
	1023, -1000, -1000, 612, 5351, -1000, 908, 19208, 627, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19208, -1000,
	-1000, -1000, -1000, -1000, 19208, 878, -1000, -1000, -1000, -1000,
	19, 51, 117, -1000, 5351, -1000, 381, -1000, -1000, -1000,
	381, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 239, 426,
	925, -1000, 11755, 11755, -1000, -1000, 720, 720, 9145, 6506,
	1112, 1056, -1000, -1000, 263, 569, 263, 11755, 11755, -1000,
	11755, 11755, -1000, -140, 871, 363, -1000, 10642, 492, -1000,
	6506, -1000, 11755, 11755, -1000, -1000, -1000, -1000, -1000, -1000,
	551, 558, 943, 502, 502, -1000, -1000, 19208, -1000, -1000,
	-1000, -1000, 1163, 10642, -1000, 749, -1000, 4966, 1104, 905,
	19208, 783, 1214, 13252, 19208, 821, -1000, 341, 1118, 888,
	904, 1001, -1000, -1000, -1000, -1000, 920, -1000, 877, -1000,
	-1000, -1000, -1000, -1000, 684, -1000, 177, 176, 169, 19208,
	-1000, 1166, 16233, 705, -1000, 705, -1000, 204, -1000, -1000,
	-1000, -106, -113, -1000, -1000, -1000, 4581, -1000, 4581, -1000,
	19208, 91, -1000, 582, 582, 582, -1000, -1000, -1000, 860,
	903, 11755, -1000, -1000, -1000, 247, 247, -1000, 324, -1000,
	-1000, -1000, 713, -1000, 711, 729, 700, 18, -1000, 873,
	1046, 338, 338, -1000, -1000, 454, -1000, 556, -1000, -1000,
	19208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1086, -151,
	582, 19208, 19208, 19208, 19208, -1000, 442, 442, -1000, 11755,
	426, 426, -1000, -1000, 431, -1000, 1104, -1000, 431, 841,
	841, -1000, 841, 847, -1000, 841, 11, 841, 9, 431,
	431, 2360, 2195, 1966, 1741, 783, -134, -1000, 502, 10642,
	-1000, 1804, 1767, 555, -9, -1000, -1000, -1000, 1116, 1140,
	502, -1000, -1000, -1000, 1079, 794, 703, -1000, -1000, 8774,
	667, 971, 203, 664, -1000, 1112, 19208, 10642, -1000, -1000,
	10642, 839, -1000, 10642, -1000, -1000, -1000, 1112, 783, 783,
	783, 664, 1112, 705, -1000, -1000, 251, -1000, -1000, -1000,
	4196, -1000, 644, -1000, 1074, -1000, -1000, -1000, 19208, -38,
	1204, 426, -1000, -1000, -1000, -1000, -9, 553, -9, 446,
	-1000, 428, -1000, -1000, -214, -1000, -1000, 859, 929, -1000,
	-1000, -1000, 783, -1000, 6506, -1000, -1000, 838, 881, -1000,
	-1000, -1000, -1000, 426, -1000, 1056, -1000, -1000, 150, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11755, 11755, 11755,
	11755, 11755, 1104, 547, 502, 11755, 11755, -9, -63, -1000,
	10642, 10642, 1073, -1000, 783, -1000, 764, 19208, 783, 19208,
	-1000, 19208, 1104, -1000, 502, 502, 19208, 502, 15862, 19208,
	19208, 13623, 1104, -1000, 56, 640, -1000, 243, -1000, -114,
	247, -1000, 247, 599, 597, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 72, 724, -1000, 309, 19208, 19208, -1000,
	-1000, -1000, 726, 726, 726, 726, 16, 431, -1000, 726,
	726, -284, -1000, 1000, 998, 502, 722, 1202, -1000, 783,
	1214, 196, 703, -1000, -1000, -1000, 635, 625, -1000, 625,
	625, 252, -1000, -1000, 79, 19208, 406, 1071, -1000, 1069,
	-1000, -1000, -1000, -1000, -1000, 622, -1000, 19208, 6506, 4581,
	616, -1000, -1000, -1000, -1000, -1000, 431, 87, -175, -1000,
	-1000, -1000, -63, 167, -1000, 979, 977, 1139, 19208, 703,
	19208, -1000, -1000, -1000, -1000, -1000, 19208, -1000, -1000, 544,
	-1000, -1000, -1000, 72, 958, -1000, -1000, 878, -1000, 933,
	-148, -179, 984, 989, 989, 998, 1131, 996, 993, -1000,
	543, 662, -1000, 813, -1000, -1000, 59, -151, -1000, 913,
	-1000, 981, 512, -1000, -1000, -1000, -1000, 532, -1000, 1122,
	1119, -1000, 19208, 57, -1000, -172, -1000, 423, -1000, -1000,
	-1000, 531, 528, 606, 783, -176, -1000, -1000, -1000, -1000,
	900, 11013, -180, 898, -1000, 1193, 726, 431, -1000, -1000,
	1201, 212, 212, -1000, -1000, -1000, -1000, -1000, 93, 464,
	-1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1458, 1455, 17, 85, 74, 1454, 1451, 1450, 1449,
	115, 114, 110, 1448, 1447, 1446, 1445, 1443, 1441, 1440,
	1439, 1438, 1436, 1435, 1434, 1433, 532, 520, 1432, 1431,
	1427, 1426, 1423, 1422, 1421, 1420, 1419, 1418, 1415, 1414,
	1413, 98, 1409, 1400, 1398, 1397, 1396, 1395, 1394, 1390,
	1389, 97, 51, 680, 52, 75, 1383, 71, 1467, 1382,
	59, 72, 69, 1381, 40, 1379, 1377, 96, 1375, 1372,
	68, 1371, 1370, 70, 1363, 67, 1360, 11, 42, 1357,
	1353, 1350, 1346, 101, 50, 1342, 1341, 15, 1340, 1339,
	120, 1338, 79, 16, 22, 25, 27, 1337, 76, 1336,
	19, 1335, 77, 1334, 1332, 1331, 1329, 32, 1328, 73,
	81, 20, 1326, 5, 10, 1325, 1322, 1321, 1318, 1317,
	1316, 3, 1315, 1313, 1306, 1303, 1302, 23, 1299, 8,
	64, 38, 24, 9, 1295, 1292, 21, 91, 60, 86,
	1291, 1289, 1287, 737, 1286, 53, 1285, 118, 1282, 58,
	112, 545, 519, 1281, 1278, 1277, 1276, 1274, 43, 899,
	1542, 95, 94, 1273, 1272, 2517, 36, 66, 13, 1268,
	1267, 1266, 61, 45, 44, 685, 1265, 39, 1264, 1263,
	1262, 1261, 1260, 1257, 1255, 297, 1253, 1252, 1251, 193,
	41, 82, 28, 1249, 1248, 1247, 1246, 57, 93, 1245,
	1243, 63, 65, 1242, 99, 30, 34, 1241, 1240, 1239,
	1238, 33, 12, 1237, 83, 37, 55, 29, 31, 1236,
	26, 1234, 35, 47, 1233, 7, 1232, 14, 1229, 4,
	0, 1228, 6, 80, 1227, 1, 1226, 2, 1223, 1222,
	1221, 1614, 1406, 92, 1220, 105,
}
var yyR1 = [...]int{

	0, 239, 240, 240, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 230, 230, 230, 21, 40, 3, 3, 3, 3,
	2, 2, 8, 9, 4, 5, 5, 10, 10, 45,
	45, 11, 12, 12, 12, 12, 243, 243, 67, 67,
	68, 68, 130, 130, 13, 14, 14, 139, 139, 138,
	138, 138, 140, 140, 140, 140, 175, 175, 15, 15,
	15, 15, 15, 15, 232, 232, 231, 229, 229, 228,
	228, 227, 22, 24, 25, 234, 234, 207, 29, 29,
	28, 28, 28, 28, 30, 30, 27, 27, 26, 26,
	209, 209, 208, 208, 208, 208, 208, 208, 198, 178,
	178, 178, 178, 181, 181, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 180, 180, 180, 180, 180, 182,
	182, 182, 182, 182, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 184,
	184, 184, 184, 184, 184, 184, 184, 197, 197, 185,
	185, 191, 191, 192, 192, 192, 194, 194, 195, 195,
	153, 153, 153, 187, 187, 188, 188, 193, 193, 189,
	189, 189, 190, 190, 190, 196, 196, 196, 196, 196,
	186, 186, 199, 220, 220, 219, 219, 216, 216, 216,
	216, 206, 206, 213, 213, 213, 213, 213, 213, 203,
	203, 203, 204, 204, 202, 202, 205, 205, 215, 215,
	214, 200, 200, 201, 201, 222, 222, 222, 222, 222,
	223, 236, 237, 235, 235, 235, 235, 235, 154, 154,
	154, 210, 210, 210, 211, 211, 211, 212, 212, 212,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 226, 224, 224, 225, 225, 17, 23, 23, 18,
	18, 18, 18, 18, 19, 19, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 146, 146, 238,
	238, 148, 148, 144, 144, 147, 147, 145, 145, 145,
	149, 149, 149, 150, 150, 176, 176, 176, 33, 33,
	35, 35, 36, 37, 37, 170, 170, 171, 171, 38,
	39, 44, 44, 44, 44, 44, 44, 46, 46, 46,
	7, 7, 7, 7, 43, 43, 43, 6, 6, 34,
	34, 34, 34, 20, 244, 41, 42, 42, 51, 51,
	51, 47, 47, 47, 50, 50, 50, 54, 54, 56,
	56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
	53, 53, 55, 55, 55, 55, 163, 163, 163, 162,
	162, 59, 59, 60, 60, 61, 61, 62, 62, 62,
	99, 76, 76, 129, 129, 131, 131, 63, 63, 63,
	63, 64, 64, 65, 65, 66, 66, 169, 169, 168,
	168, 168, 167, 167, 69, 69, 69, 71, 70, 70,
	70, 70, 72, 72, 74, 74, 73, 73, 75, 77,
	77, 77, 77, 77, 78, 78, 58, 58, 58, 58,
	58, 58, 58, 58, 142, 142, 80, 80, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 91, 91,
	91, 91, 91, 91, 81, 81, 81, 81, 81, 81,
	81, 52, 52, 92, 92, 92, 98, 93, 93, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 88, 88, 88, 88, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 245, 245, 90, 89,
	89, 89, 89, 89, 89, 89, 49, 49, 49, 49,
	49, 174, 174, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 103, 103, 48, 48,
	101, 101, 102, 104, 104, 100, 100, 100, 83, 83,
	83, 83, 83, 83, 83, 83, 85, 85, 85, 105,
	105, 106, 106, 107, 107, 108, 108, 109, 110, 110,
	110, 111, 111, 111, 111, 221, 221, 221, 221, 221,
	217, 217, 217, 217, 218, 218, 218, 127, 127, 127,
	112, 112, 112, 112, 117, 117, 117, 113, 113, 115,
	115, 115, 116, 116, 116, 114, 120, 120, 122, 122,
	121, 121, 119, 119, 124, 124, 123, 123, 118, 118,
	82, 82, 82, 82, 82, 128, 128, 128, 128, 132,
	132, 94, 94, 96, 96, 95, 97, 133, 133, 136,
	134, 134, 137, 137, 137, 137, 137, 135, 135, 135,
	164, 164, 164, 141, 141, 151, 151, 152, 152, 143,
	143, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 156, 156, 156, 157, 157, 125, 125, 125, 125,
	126, 126, 160, 160, 161, 161, 165, 165, 166, 166,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	241, 242, 172, 173, 173, 173,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 2, 3, 5, 6, 6, 7,
	4, 6, 5, 7, 8, 1, 3, 7, 8, 1,
	1, 9, 9, 8, 7, 7, 1, 1, 1, 3,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	6, 4, 6, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 4, 7, 4, 1, 1, 4, 0, 1,
	1, 1, 2, 2, 0, 1, 5, 5, 4, 4,
	2, 4, 1, 1, 3, 4, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 2, 3, 2,
	3, 0, 1, 2, 3, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 10, 11, 11, 12, 1,
	5, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	5, 6, 6, 6, 6, 4, 4, 4, 4, 7,
	5, 5, 5, 12, 7, 5, 9, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 3, 8, 8, 3, 3, 5, 4,
	6, 5, 4, 4, 3, 2, 3, 4, 4, 3,
	4, 4, 4, 4, 4, 4, 3, 3, 3, 2,
	7, 2, 3, 4, 5, 7, 5, 4, 2, 4,
	4, 3, 3, 5, 2, 3, 3, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 3, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 2, 4,
	0, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 4, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -239, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -31, -32, -33, -35,
	-36, -37, -38, -39, -6, -34, -20, -21, -40, -4,
	-241, 6, 7, 8, -45, 10, 11, 31, -22, -24,
	146, -25, 147, 149, 148, 182, 150, 175, 70, 196,
	197, 199, 200, 201, 202, -46, 180, 181, 32, 33,
	152, 35, 41, 80, 9, 289, 177, 176, 26, -240,
	391, -51, 5, -107, 16, -3, -41, -244, -41, -41,
	-41, -41, -41, -41, -207, -209, 80, 119, 80, 156,
	100, 154, -125, -234, 160, 163, 164, 281, 153, -29,
	-28, -27, -26, -30, 30, 154, 156, 281, 153, 255,
	154, 154, 155, 156, 281, 153, 154, -73, -165, -230,
	-159, 83, 84, 85, 299, 168, 331, 332, 76, 196,
	210, 204, 231, 223, 300, 333, 169, 221, 224, 268,
	166, 334, 251, 258, 94, 199, 277, 335, 75, 47,
	40, 178, 219, 215, 336, 308, 213, 46, 28, 45,
	337, 260, 236, 44, 338, 79, 304, 262, 214, 259,
	152, 339, 171, 387, 164, 340, 237, 241, 341, 269,
	48, 342, 343, 344, 74, 208, 209, 345, 167, 271,
	235, 165, 34, 263, 301, 54, 186, 272, 42, 239,
	41, 346, 234, 230, 49, 347, 348, 349, 350, 233,
	207, 229, 58, 243, 242, 244, 267, 226, 351, 352,
	353, 172, 77, 354, 216, 19, 355, 356, 357, 52,
	358, 359, 275, 181, 360, 50, 37, 184, 361, 362,
	363, 364, 365, 366, 261, 238, 240, 161, 188, 257,
	303, 367, 273, 212, 368, 173, 185, 180, 276, 174,
	369, 370, 371, 372, 373, 374, 375, 200, 39, 376,
	377, 378, 379, 195, 270, 279, 57, 78, 248, 380,
	206, 163, 381, 197, 51, 192, 253, 43, 227, 187,
	382, 383, 217, 218, 232, 205, 228, 198, 388, 189,
	182, 384, 278, 249, 305, 225, 222, 193, 385, 156,
	190, 191, 386, 389, 264, 254, 265, 266, 255, 194,
	302, 274, 220, 250, 154, 137, 224, 268, 146, 252,
	263, 264, 260, -148, 261, 188, -176, 154, -144, 251,
	254, 255, 194, -238, -230, 262, 270, 269, 256, 266,
	265, -165, 198, -170, 203, -160, -230, -159, 201, -73,
	-44, 387, 150, -172, -172, 253, 253, -172, -93, -58,
	-79, 103, -84, 30, 24, -83, -80, -100, -97, -98,
	137, 138, 140, 139, 141, 126, 127, 134, 104, 142,
	-88, -86, -87, -89, 87, 86, 95, 88, 89, 90,
	91, 96, 97, 98, -160, -165, -95, -241, 64, 65,
	290, 291, 292, 293, 298, 294, 106, 53, 280, 288,
	287, 286, 284, 285, 282, 283, 296, 297, 159, 281,
	153, 132, 289, -230, -159, 40, -5, -4, -241, 6,
	21, 22, -111, 18, 17, -242, 82, -47, -56, 59,
	60, -57, 22, 36, 63, 61, -42, -55, 128, -58,
	-165, -55, -143, 158, -143, -143, -134, -175, 198, -137,
	270, 269, -161, -135, -160, -158, 268, 224, 267, 151,
	306, 102, 23, 25, 246, 105, 137, 17, 106, 136,
	290, 146, 68, 307, 282, 283, 280, 292, 293, 281,
	252, 30, 11, 309, 26, 176, 22, 36, 130, 148,
	109, 110, 179, 24, 177, 98, 312, 20, 71, 12,
	14, 313, 314, 15, 159, 158, 121, 155, 66, 9,
	142, 27, 118, 62, 315, 29, 316, 317, 318, 319,
	64, 119, 18, 284, 285, 32, 320, 298, 183, 132,
	69, 55, 103, 321, 322, 96, 323, 99, 72, 100,
	16, 67, 38, 324, 325, 326, 327, 120, 149, 289,
	65, 328, 153, 6, 295, 31, 175, 63, 329, 154,
	108, 296, 297, 157, 97, 5, 160, 33, 10, 70,
	73, 286, 287, 288, 53, 107, 13, 330, 101, -208,
	119, -198, -201, -160, 170, -223, 166, -73, -215, -214,
	-160, -73, 289, -152, 159, 155, -152, -26, -27, 224,
	136, -73, -73, -230, -230, 146, 148, 151, 72, -23,
	-73, -151, 159, -230, -151, -151, -151, -73, 143, -73,
	-230, 31, -149, 119, 13, 281, -230, 188, 154, 189,
	156, -150, 119, -150, -150, -203, 155, 34, 167, -173,
	-241, -161, 192, 193, 192, -147, -146, 258, 259, 253,
	257, 13, 193, 253, 191, -149, -173, 157, -160, -43,
	-160, 87, -7, -3, -11, -10, -12, 111, -172, -172,
	81, 102, 100, 101, 118, -58, -81, 121, 103, 119,
	120, 105, 123, 122, 133, 126, 127, 128, 129, 130,
	131, 132, 124, 125, 136, 111, 112, 113, 114, 115,
	116, 117, -142, -241, -98, -241, 144, 145, -84, -84,
	-84, -84, -84, -84, -84, -84, -84, -84, -241, 143,
	-2, -93, -4, -241, -241, -241, -241, -241, -241, -241,
	-241, -103, -58, -241, -245, -90, -241, -245, -90, -245,
	-90, -245, -241, -245, -90, -245, -90, -245, -245, -90,
	-241, -241, -241, -241, -241, -241, -241, -172, -107, -3,
	-41, -127, 20, 32, -58, -108, -109, -58, -107, 55,
	-53, -55, -57, 59, 60, 93, 12, -163, -162, 23,
	-160, 87, 143, 12, -74, 27, -73, -60, -61, -62,
	-63, -76, -99, -241, -73, 12, -67, -68, -73, -75,
	-165, 81, 198, -137, -175, -139, -138, 271, 273, 111,
	-164, -160, 87, 30, 31, 82, 81, -73, -178, -181,
	-183, -182, -184, -179, -180, 221, 222, 137, 225, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 31,
	178, 217, 218, 219, 220, 237, 238, 239, 240, 241,
	242, 243, 244, 204, 223, 300, 205, 206, 207, 208,
	209, 210, 212, 213, 214, 215, 216, -230, 80, 82,
	81, -185, 80, -173, 156, -73, 103, -230, -230, 31,
	-206, 111, -155, 151, 148, 149, -226, 147, 246, 224,
	94, 30, 16, 290, 184, 305, -230, 185, -173, -173,
	-173, 190, 190, 154, 154, 195, -73, 81, 157, -67,
	24, 72, -73, -230, -230, -166, -165, -158, -173, -149,
	87, -58, -173, -173, -173, -73, -173, -173, 87, -204,
	12, 121, -173, -173, -145, 12, 121, -204, -145, -58,
	-150, 72, -171, 201, 235, 388, 389, 390, -58, -58,
	-58, -58, -91, 96, 103, 97, 98, -84, -92, -95,
	-98, 92, 121, 119, 120, 105, -84, -84, -84, -84,
	-84, -84, -84, -84, -84, -84, -84, -84, -84, -84,
	-84, -174, -230, 87, -230, -83, -83, -160, -54, 22,
	36, -53, -161, -166, -158, -51, -242, -242, -107, -53,
	-53, -58, -58, -100, 87, -53, -100, 87, -53, -53,
	-50, 22, 36, -101, -102, 107, -100, -160, -165, -242,
	-84, -160, -160, -53, -54, -54, -53, -53, -111, -242,
	-112, 27, 10, 121, 81, 19, 81, -110, 25, 26,
	-111, -85, -160, 88, 91, -59, 81, 12, -57, -73,
	-162, 128, -166, -73, -130, 184, -73, 31, 81, -69,
	-71, -70, -72, 62, 66, 68, 63, 64, 65, 69,
	-169, 23, -60, -3, -241, -168, 184, -167, 23, -165,
	87, -73, -67, -243, 81, 12, 73, -243, 81, 143,
	-137, -139, 81, 272, 274, 275, 72, 99, -58, -190,
	136, -210, -211, -212, -161, 87, 88, -198, -199, -200,
	-213, 170, -222, 161, 163, 164, 160, -202, 171, -223,
	155, 29, 82, -153, 96, 103, -194, 249, -185, -185,
	-185, -185, -185, -189, 224, -189, -189, -189, 80, 80,
	-185, -185, -185, -185, -191, 80, -191, -191, -192, 80,
	-192, -223, 166, -58, -220, -219, -216, 73, 165, 94,
	302, -214, -110, 88, -73, 24, -126, 73, -206, -230,
	87, -172, -233, 166, 162, 170, 171, 164, 83, 84,
	85, 155, 29, 161, 163, 184, 160, -233, -156, -157,
	157, 23, 155, 29, 184, -73, -73, -73, -73, -73,
	151, 148, -73, -73, -73, -173, -73, -149, -165, -165,
	-73, -149, -73, -160, 96, 97, 98, -92, -84, -84,
	-84, -52, 179, 102, -242, -242, -53, -53, -241, 143,
	-5, -111, -242, -242, 81, 73, 23, 12, 12, -242,
	12, 12, -242, -242, -53, -104, -102, 109, -58, -242,
	143, -242, 81, 81, -242, -242, -242, -242, -242, -127,
	38, 46, 57, -58, -58, -109, -127, -141, 20, 12,
	53, 53, -78, 13, -55, -60, -57, 143, -78, -82,
	31, 53, -3, -241, -241, -133, -136, -100, -61, -62,
	-62, -61, -62, 62, 62, 62, 67, 62, 67, 62,
	-70, -165, -242, -242, -3, -77, 70, 158, 71, -241,
	-167, -130, 73, -60, -73, -60, -75, -165, 128, -138,
	-140, 276, 273, 279, -230, 87, 81, -212, 111, -201,
	80, -230, 29, -202, -202, -202, -205, -230, -205, 29,
	-187, 30, 96, -195, 250, -189, -189, -190, 31, -190,
	-190, -190, -197, 87, -197, 88, 88, 82, -221, -217,
	-218, 32, 76, -216, -230, -206, 87, 37, 82, -173,
	72, -160, -230, 87, -172, -172, -73, -172, -160, -232,
	73, 190, 246, 190, 157, -173, -145, -145, -52, 102,
	-84, -84, -242, -242, -54, -161, -107, -127, -177, 137,
	221, 178, 219, 215, 235, 226, 248, 217, 249, -174,
	-177, -84, -84, -84, -84, 299, -107, 110, -58, 108,
	-161, -84, -84, 39, 87, 87, 58, -73, -105, 14,
	-58, 128, -111, -132, 72, -133, -94, -96, -95, -241,
	-128, -242, -160, -131, -160, -78, 81, 111, -65, -64,
	72, 73, -66, 72, -64, 62, 62, -242, 155, 155,
	155, -131, -78, -60, -78, -78, 143, 273, 277, 278,
	-211, -212, -215, -222, 171, -205, -205, -205, 80, -188,
	72, -84, -190, -190, -230, 137, 82, 81, 82, 81,
	82, 81, -154, 337, 103, -218, -217, -206, -206, 88,
	87, -73, 27, -229, 302, -231, -230, -160, -160, -160,
	-73, -149, -149, -84, -242, -111, -242, -185, -185, -185,
	-192, -185, 209, -185, 209, -242, -242, 20, 20, 20,
	20, -241, -48, 295, -58, 81, 81, 87, -189, -106,
	15, 17, 28, -132, 81, -242, -242, 81, 53, 143,
	-242, 81, -107, -136, -58, -58, 80, -58, -241, -241,
	-241, -242, -107, -78, 82, -129, -160, -193, 246, 10,
	-189, 87, -189, 88, 88, 337, 30, 77, 78, 79,
	30, 74, 75, -241, -228, -227, -161, 80, 73, -127,
	-189, -230, -84, -84, -84, -84, -84, -111, 87, -84,
	-84, -189, -114, -119, -147, -58, -93, 29, -96, 53,
	-3, -160, -94, -160, -160, -111, -129, -129, -242, -129,
	-129, -168, -111, -220, 82, 81, -196, 161, 29, 160,
	-87, -190, -190, 82, 82, -224, -225, 184, 81, 111,
	-129, -73, -242, -242, -242, -242, -49, 121, 302, -242,
	-242, -242, -117, 387, -120, 42, -121, 43, 10, -94,
	143, 82, -242, -242, -242, -77, 173, -160, -186, 94,
	29, 29, -242, 81, -160, -227, -212, 82, -242, 300,
	69, 303, -114, 47, 227, -122, 51, -123, -118, 52,
	17, -133, -160, -73, 87, -225, 53, -232, 58, 301,
	304, -115, 49, -113, 48, -113, -121, 17, -124, 44,
	45, 87, 80, 186, -229, 58, -116, 50, 72, 99,
	87, 17, 17, -129, 187, 302, 72, 99, 87, 87,
	82, -241, 303, -236, -237, 72, -84, 183, 304, -237,
	72, 11, 10, -242, -242, -235, 174, 169, 172, 31,
	-235, 168, 30, 96,
}
var yyDef = [...]int{

	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 653,
	0, 394, 394, 394, 394, 394, 394, 394, 0, 0,
	766, -2, 0, 0, 0, 0, 0, -2, 359, 360,
	0, 362, -2, 0, 0, 371, 1102, 1102, 0, 0,
	1102, 0, 0, 1100, 49, 50, 377, 378, 379, 1,
	3, 0, 398, 661, 0, 0, -2, 396, 0, 0,
	749, 749, 749, 0, 78, 79, 0, 0, 0, 0,
	0, 747, 0, 747, 767, 768, 769, 95, 96, 83,
	-2, 100, 101, 0, 105, 0, 0, 0, 0, 0,
	0, 745, 0, 745, 745, 745, 0, 305, 476, 776,
	777, 31, 32, 33, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 0, 0, 0, 350, 0, 353,
	353, 353, 319, 0, 321, 1103, 0, 0, 0, 328,
	0, 0, 334, 350, 1103, 342, 356, 357, 344, 339,
	340, 358, 361, 0, 366, 369, 772, 773, 0, 384,
	0, 949, 376, 389, 390, 1102, 1102, 393, 34, 527,
	486, 0, 492, 494, 0, 529, 530, 531, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 560, 561, 562, 638, 639, 640, 641, 642, 643,
	644, 645, 496, 497, 635, 0, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 626, 0, 596, 596,
	596, 596, 596, 596, 596, 596, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 1102, 653, 45, 0, 394,
	399, 400, 677, 0, 0, 653, 1101, 0, 0, -2,
	-2, 410, 416, 417, 418, 419, 395, 0, 422, 426,
	0, 0, 0, 750, 0, 0, 64, 0, 1073, 730,
	-2, -2, 0, 0, 774, 775, -2, 914, -2, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 0,
	0, 112, 113, 0, 0, 234, 916, 110, 0, 228,
	169, 1103, 0, 0, 0, 0, 0, 102, 103, 0,
	211, 0, 1103, 1103, 1103, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 306,
	1103, 350, 309, 0, 0, 1103, 1103, 1103, 0, 1103,
	1103, 316, 0, 317, 318, 0, 219, 220, 221, 322,
	1104, 1105, 1103, 1103, 347, 0, 347, 345, 346, 337,
	338, 0, 353, 331, 332, 335, 336, 367, 370, 387,
	385, 386, 388, 380, 381, 382, 383, 0, 391, 392,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	519, 520, 493, 0, 507, 0, 0, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 0, 407, 0,
	0, 0, 653, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 627, 0, 580, 588, 0, 581, 589, 582,
	590, 583, 0, 584, 591, 585, 592, 586, 587, 593,
	0, 0, 0, 407, 407, 0, 0, 35, 661, 0,
	409, 680, 0, 0, 662, 654, 655, 658, 661, 0,
	431, 420, 411, 414, 415, 397, 0, 423, 427, 0,
	429, 430, 0, 0, 62, 0, 475, 0, 433, 435,
	436, 437, 457, 0, 459, 0, 0, 0, 58, 60,
	476, 0, 1073, 736, 0, 66, 67, 0, 0, 0,
	192, 740, 741, 742, 738, 251, 0, 0, 180, 176,
	120, 121, 122, 169, 124, 169, 169, 169, 169, 189,
	189, 189, 189, 152, 153, 154, 155, 156, 0, 0,
	139, 169, 169, 169, 169, 159, 160, 161, 162, 163,
	164, 165, 166, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 171, 171, 171, 173, 173, 0, 0, 203,
	0, 658, 0, 81, 0, 92, 0, 770, 94, 211,
	0, 212, 1102, 0, 0, 761, 266, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 0, 265, 267,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	746, 0, 1103, 302, 303, 477, 778, 779, 307, 308,
	351, 352, 310, 311, 312, 313, 314, 315, 354, 0,
	222, 223, 323, 327, 350, 0, 0, 0, 350, 329,
	330, 0, 0, 368, 372, 373, 374, 375, 528, 487,
	488, 489, 491, 508, 0, 510, 512, 498, 499, 523,
	524, 525, 0, 0, 0, 0, 521, 503, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 548, 611, 612, 0, 546, 547, 558, 0, 0,
	0, 408, 636, 0, -2, 0, 526, 725, 661, 0,
	0, 0, 0, 531, 638, 0, 531, 638, 0, 0,
	0, 405, 406, 633, 630, 0, 0, 635, 0, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 677, 46,
	36, 0, 678, 0, 0, 0, 0, 657, 659, 660,
	677, 0, 646, 0, 0, 484, 0, 0, 412, 42,
	428, 424, 0, 484, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 464, 0, 0, 467, 0, 0, 0,
	0, 458, 0, 0, 0, 479, 1013, 460, 0, 462,
	463, -2, 0, 0, 0, 56, 57, 0, 0, 0,
	731, 65, 0, 0, 70, 71, 732, 733, 734, 735,
	0, 97, 252, 254, 257, 258, 259, 114, 116, 117,
	0, 0, 232, 1023, 1057, 950, 226, 226, 948, 239,
	224, 225, 111, 183, 181, 0, 178, 177, 123, 189,
	189, 146, 147, 192, 0, 192, 192, 192, 0, 0,
	140, 141, 142, 143, 134, 0, 135, 136, 137, 0,
	138, 233, 0, 0, 665, 204, 205, 0, 211, 0,
	0, 229, 230, 0, 1103, 748, 0, 0, 0, 108,
	109, 260, 1102, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 1102, 0, 1102,
	762, 763, 764, 765, 0, 84, 270, 272, 271, 275,
	0, 0, 0, 297, 1103, 301, 347, 324, 348, 349,
	347, 326, 333, 364, 509, 511, 513, 500, 521, 504,
	0, 501, 0, 0, 495, 563, 0, 0, 407, 0,
	653, 677, 567, 568, 0, 0, 0, 0, 0, 604,
	0, 0, 605, 0, 653, 0, 631, 0, 0, 579,
	0, 598, 0, 0, 599, 600, 601, 602, 603, 38,
	0, 0, 0, 663, 664, 656, 37, 0, 743, 744,
	647, 648, 649, 0, 421, 432, 413, 0, 661, 719,
	0, 0, 711, 0, 0, 484, 727, 0, 434, 453,
	455, 0, 450, 465, 466, 468, 0, 470, 0, 472,
	473, 438, 439, 440, 0, 441, 0, 0, 0, 0,
	461, 484, 0, 484, 59, 484, 61, 0, 478, 68,
	69, 0, 0, 75, 193, 194, 0, 255, 0, 115,
	0, 0, 213, 226, 226, 226, 217, 227, 218, 0,
	185, 0, 182, 119, 179, 192, 192, 148, 0, 149,
	150, 151, 0, 167, 0, 0, 0, 248, 80, 669,
	668, 211, 211, 206, 207, 0, 209, 0, 170, 82,
	0, 771, 106, 107, 261, 262, 263, 264, 0, 87,
	0, 0, 0, 0, 0, 300, 350, 350, 502, 0,
	522, 505, 564, 565, 0, 637, 661, 40, 0, 169,
	169, 616, 169, 173, 619, 169, 621, 169, 624, 0,
	0, 0, 0, 0, 0, 0, 628, 578, 634, 0,
	636, 0, 0, 0, 189, 682, 679, 39, 651, 0,
	485, 425, 43, 47, 0, 719, 710, 721, 723, 0,
	0, 0, 715, 0, 445, 653, 0, 0, 447, 454,
	0, 0, 448, 0, 449, 469, 471, -2, 0, 0,
	0, 0, 653, 484, 54, 55, 0, 72, 73, 74,
	253, 256, 0, 231, 0, 214, 215, 216, 0, 187,
	0, 184, 144, 145, 190, 191, 189, 0, 189, 0,
	174, 0, 240, 249, 0, 666, 667, 0, 0, 208,
	210, 93, 0, 269, 0, 85, 86, 0, 0, 274,
	298, 320, 325, 506, 566, 677, 569, 613, 189, 617,
	618, 620, 622, 623, 625, 571, 570, 0, 0, 0,
	0, 0, 661, 0, 632, 0, 0, 189, 702, 44,
	0, 0, 0, 48, 0, 724, 0, 0, 0, 0,
	63, 0, 661, 728, 729, 451, 0, 456, 0, 0,
	0, 459, 661, 53, 203, 0, 443, 195, 188, 0,
	192, 168, 192, 0, 0, 250, 670, 671, 672, 673,
	674, 675, 676, 0, 88, 89, 0, 0, 0, 41,
	614, 615, 0, 0, 0, 0, 606, 0, 629, 0,
	0, 684, 683, 696, 700, 652, 650, 0, 722, 0,
	714, 717, 713, 716, 446, 51, 0, 0, 481, 0,
	0, 479, 52, 202, 0, 0, 200, 0, 197, 199,
	186, 157, 158, 172, 175, 0, 292, 0, 0, 0,
	0, 276, 572, 574, 573, 575, 0, 0, 0, 577,
	594, 595, 702, 0, 695, 698, -2, 0, 0, 712,
	0, 452, 480, 482, 483, 442, 0, 444, 118, 0,
	196, 198, 291, 0, 0, 90, 91, 84, 576, 0,
	0, 0, 689, 687, 687, 700, 0, 704, 0, 709,
	0, 720, 718, 0, 201, 293, 0, 87, 607, 0,
	610, 692, 0, 685, 688, 686, 697, 0, 703, 0,
	0, 701, 0, 0, 273, 608, 681, 0, 690, 691,
	699, 0, 0, 0, 0, 0, 693, 694, 705, 707,
	235, 0, 0, 236, 237, 0, 0, 0, 609, 238,
	0, 0, 0, 294, 295, 241, 243, 244, 0, 0,
	242, 245, 246, 247,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 391,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:372
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:377
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:378
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:382
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:425
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:431
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:437
		{
			yyVAL.statement = &Load{}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:443
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 37:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:452
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:456
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:460
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 40:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:483
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:491
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:497
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:503
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:511
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:521
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:528
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:540
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.insertAction = InsertAct
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:556
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 51:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:562
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:580
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:609
		{
			yyVAL.partitions = nil
		}
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:613
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:619
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:649
		{
			yyVAL.characteristic = ReadWrite
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:653
		{
			yyVAL.characteristic = ReadOnly
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:667
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.isolationLevel = Serializable
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.scope = SessionScope
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.scope = GlobalScope
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:692
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:698
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:705
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:709
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:720
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:735
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:740
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:746
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:763
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:770
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, IndexType: yyDollar[5].str, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:777
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:788
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:794
		{
			yyVAL.collateAndCharsets = nil
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:812
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:821
		{
			yyVAL.boolean = false
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.boolean = true
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:831
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:835
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:845
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:856
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:876
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 118:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:891
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1123
		{
			yyVAL.literal = nil
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1132
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1136
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1144
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1154
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.boolean = false
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1166
		{
			yyVAL.boolean = true
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1171
		{
			yyVAL.boolean = false
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.boolean = true
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.boolean = false
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.boolean = false
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yyVAL.boolean = true
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1194
		{
			yyVAL.optVal = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1203
		{
			yyVAL.optVal = nil
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1212
		{
			yyVAL.boolean = false
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1216
		{
			yyVAL.boolean = true
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1247
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1251
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.colKeyOpt = colKey
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1268
		{
			yyVAL.literal = nil
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1278
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1283
		{
			yyVAL.indexOptions = nil
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1322
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1377
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1392
		{
			yyVAL.str = ""
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1396
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 235:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1438
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 236:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1442
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 237:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1446
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 238:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1450
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1460
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1486
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1494
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1499
		{
			yyVAL.boolean = true
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.boolean = true
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.boolean = false
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = yyDollar[1].str
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1556
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1560
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1564
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1568
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1573
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 269:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1606
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1616
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1620
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 273:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1624
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1637
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1647
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1680
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1696
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 295:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1700
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1716
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1728
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1747
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &OtherRead{}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1767
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1782
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1786
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1790
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1794
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1798
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1812
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1821
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1846
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1868
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1890
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1904
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = "extended "
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = "full "
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1974
		{
			yyVAL.showFilter = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1988
		{
			yyVAL.showFilter = nil
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1998
		{
			yyVAL.scope = ImplicitScope
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.scope = SessionScope
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.scope = GlobalScope
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Begin{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Begin{}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &Commit{}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Rollback{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.empty = struct{}{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.empty = struct{}{}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2052
		{
			yyVAL.empty = struct{}{}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.empty = struct{}{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.explainType = EmptyType
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.explainType = JSONType
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.explainType = TreeType
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.explainType = VitessType
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			yyVAL.explainType = TraditionalType
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.explainType = AnalyzeType
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.statement = &OtherRead{}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2173
		{
			setAllowComments(yylex, true)
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2183
		{
			yyVAL.bytes2 = nil
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.boolean = true
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			yyVAL.boolean = false
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.boolean = true
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = SQLCacheStr
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2219
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.boolean = true
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.boolean = true
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.selectExprs = nil
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2241
		{
			yyVAL.strs = nil
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2257
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = SQLCacheStr
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = DistinctStr
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = DistinctStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = StraightJoinHint
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2311
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2316
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2384
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2421
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2425
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2437
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2452
		{
			yyVAL.empty = struct{}{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.empty = struct{}{}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2457
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.joinType = NormalJoinType
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.joinType = NormalJoinType
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.joinType = NormalJoinType
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.joinType = StraightJoinType
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.joinType = LeftJoinType
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.joinType = LeftJoinType
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.joinType = RightJoinType
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yyVAL.joinType = RightJoinType
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2550
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.indexHints = nil
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2559
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2563
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2567
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2571
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.expr = nil
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2648
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2652
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2656
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2664
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2672
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2737
		{
			yyVAL.expr = nil
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2761
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2801
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2925
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2929
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2933
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2937
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2955
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2959
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2963
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 572:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2967
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2975
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2979
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 576:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2983
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3048
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.matchExprOption = NoOption
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3133
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3137
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3161
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3212
		{
			yyVAL.expr = nil
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = string("")
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3241
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3246
		{
			yyVAL.expr = nil
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3250
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3264
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = &NullVal{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3313
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3317
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3322
		{
			yyVAL.exprs = nil
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = nil
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			yyVAL.orderBy = nil
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3360
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3365
		{
			yyVAL.orderDirection = AscOrder
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3369
		{
			yyVAL.orderDirection = AscOrder
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3373
		{
			yyVAL.orderDirection = DescOrder
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.limit = nil
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3386
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3390
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3395
		{
			yyVAL.indexOptions = nil
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3449
		{
			yyVAL.lock = NoLock
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			yyVAL.lock = ForUpdateLock
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3457
		{
			yyVAL.lock = ShareModeLock
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3462
		{
			yyVAL.selectInto = nil
		}
	case 681:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3466
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3474
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3479
		{
			yyVAL.str = ""
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = ""
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = " header"
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			yyVAL.str = " manifest on"
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = " manifest off"
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = " overwrite on"
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = " overwrite off"
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = ""
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3560
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3573
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = " optionally"
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3612
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3616
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3620
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3634
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3638
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{
			yyVAL.updateExprs = nil
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3727
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.bytes = []byte("charset")
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &Default{}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3763
		{
			yyVAL.boolean = false
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.boolean = true
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3768
		{
			yyVAL.boolean = false
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			yyVAL.boolean = true
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3773
		{
			yyVAL.ignore = false
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.ignore = true
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.empty = struct{}{}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.empty = struct{}{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			decNesting(yylex)
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			skipToEnd(yylex)
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4222
		{
			skipToEnd(yylex)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			skipToEnd(yylex)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
