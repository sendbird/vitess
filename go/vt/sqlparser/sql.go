// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const INTERVAL = 57537
const JSON_EXTRACT_OP = 57538
const JSON_UNQUOTE_EXTRACT_OP = 57539
const CREATE = 57540
const ALTER = 57541
const DROP = 57542
const RENAME = 57543
const ANALYZE = 57544
const ADD = 57545
const FLUSH = 57546
const CHANGE = 57547
const MODIFY = 57548
const DEALLOCATE = 57549
const REVERT = 57550
const SCHEMA = 57551
const TABLE = 57552
const INDEX = 57553
const VIEW = 57554
const TO = 57555
const IGNORE = 57556
const IF = 57557
const PRIMARY = 57558
const COLUMN = 57559
const SPATIAL = 57560
const FULLTEXT = 57561
const KEY_BLOCK_SIZE = 57562
const CHECK = 57563
const INDEXES = 57564
const ACTION = 57565
const CASCADE = 57566
const CONSTRAINT = 57567
const FOREIGN = 57568
const NO = 57569
const REFERENCES = 57570
const RESTRICT = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const COALESCE = 57580
const EXCHANGE = 57581
const REBUILD = 57582
const PARTITIONING = 57583
const REMOVE = 57584
const PREPARE = 57585
const EXECUTE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const VINDEX = 57594
const VINDEXES = 57595
const DIRECTORY = 57596
const NAME = 57597
const UPGRADE = 57598
const STATUS = 57599
const VARIABLES = 57600
const WARNINGS = 57601
const CASCADED = 57602
const DEFINER = 57603
const OPTION = 57604
const SQL = 57605
const UNDEFINED = 57606
const SEQUENCE = 57607
const MERGE = 57608
const TEMPORARY = 57609
const TEMPTABLE = 57610
const INVOKER = 57611
const SECURITY = 57612
const FIRST = 57613
const AFTER = 57614
const LAST = 57615
const VITESS_MIGRATION = 57616
const CANCEL = 57617
const RETRY = 57618
const COMPLETE = 57619
const CLEANUP = 57620
const BEGIN = 57621
const START = 57622
const TRANSACTION = 57623
const COMMIT = 57624
const ROLLBACK = 57625
const SAVEPOINT = 57626
const RELEASE = 57627
const WORK = 57628
const BIT = 57629
const TINYINT = 57630
const SMALLINT = 57631
const MEDIUMINT = 57632
const INT = 57633
const INTEGER = 57634
const BIGINT = 57635
const INTNUM = 57636
const REAL = 57637
const DOUBLE = 57638
const FLOAT_TYPE = 57639
const DECIMAL_TYPE = 57640
const NUMERIC = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const TEXT = 57652
const TINYTEXT = 57653
const MEDIUMTEXT = 57654
const LONGTEXT = 57655
const BLOB = 57656
const TINYBLOB = 57657
const MEDIUMBLOB = 57658
const LONGBLOB = 57659
const JSON = 57660
const JSON_SCHEMA_VALID = 57661
const JSON_SCHEMA_VALIDATION_REPORT = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const NOW = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const JSON_ARRAY = 57760
const JSON_OBJECT = 57761
const JSON_QUOTE = 57762
const JSON_DEPTH = 57763
const JSON_TYPE = 57764
const JSON_LENGTH = 57765
const JSON_VALID = 57766
const JSON_ARRAY_APPEND = 57767
const JSON_ARRAY_INSERT = 57768
const JSON_INSERT = 57769
const JSON_MERGE = 57770
const JSON_MERGE_PATCH = 57771
const JSON_MERGE_PRESERVE = 57772
const JSON_REMOVE = 57773
const JSON_REPLACE = 57774
const JSON_SET = 57775
const JSON_UNQUOTE = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const WITHOUT = 57784
const VALIDATION = 57785
const UNUSED = 57786
const ARRAY = 57787
const CUME_DIST = 57788
const DESCRIPTION = 57789
const DENSE_RANK = 57790
const EMPTY = 57791
const EXCEPT = 57792
const FIRST_VALUE = 57793
const GROUPING = 57794
const GROUPS = 57795
const JSON_TABLE = 57796
const LAG = 57797
const LAST_VALUE = 57798
const LATERAL = 57799
const LEAD = 57800
const NTH_VALUE = 57801
const NTILE = 57802
const OF = 57803
const OVER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const RECURSIVE = 57807
const ROW_NUMBER = 57808
const SYSTEM = 57809
const WINDOW = 57810
const ACTIVE = 57811
const ADMIN = 57812
const AUTOEXTEND_SIZE = 57813
const BUCKETS = 57814
const CLONE = 57815
const COMPONENT = 57816
const DEFINITION = 57817
const ENFORCED = 57818
const ENGINE_ATTRIBUTE = 57819
const EXCLUDE = 57820
const FOLLOWING = 57821
const GEOMCOLLECTION = 57822
const GET_MASTER_PUBLIC_KEY = 57823
const HISTOGRAM = 57824
const HISTORY = 57825
const INACTIVE = 57826
const INVISIBLE = 57827
const LOCKED = 57828
const MASTER_COMPRESSION_ALGORITHMS = 57829
const MASTER_PUBLIC_KEY_PATH = 57830
const MASTER_TLS_CIPHERSUITES = 57831
const MASTER_ZSTD_COMPRESSION_LEVEL = 57832
const NESTED = 57833
const NETWORK_NAMESPACE = 57834
const NOWAIT = 57835
const NULLS = 57836
const OJ = 57837
const OLD = 57838
const OPTIONAL = 57839
const ORDINALITY = 57840
const ORGANIZATION = 57841
const OTHERS = 57842
const PATH = 57843
const PERSIST = 57844
const PERSIST_ONLY = 57845
const PRECEDING = 57846
const PRIVILEGE_CHECKS_USER = 57847
const PROCESS = 57848
const RANDOM = 57849
const REFERENCE = 57850
const REQUIRE_ROW_FORMAT = 57851
const RESOURCE = 57852
const RESPECT = 57853
const RESTART = 57854
const RETAIN = 57855
const REUSE = 57856
const ROLE = 57857
const SECONDARY = 57858
const SECONDARY_ENGINE = 57859
const SECONDARY_ENGINE_ATTRIBUTE = 57860
const SECONDARY_LOAD = 57861
const SECONDARY_UNLOAD = 57862
const SKIP = 57863
const SRID = 57864
const THREAD_PRIORITY = 57865
const TIES = 57866
const UNBOUNDED = 57867
const VCPU = 57868
const VISIBLE = 57869
const RETURNING = 57870
const FORMAT = 57871
const TREE = 57872
const VITESS = 57873
const TRADITIONAL = 57874
const LOCAL = 57875
const LOW_PRIORITY = 57876
const NO_WRITE_TO_BINLOG = 57877
const LOGS = 57878
const ERROR = 57879
const GENERAL = 57880
const HOSTS = 57881
const OPTIMIZER_COSTS = 57882
const USER_RESOURCES = 57883
const SLOW = 57884
const CHANNEL = 57885
const RELAY = 57886
const EXPORT = 57887
const AVG_ROW_LENGTH = 57888
const CONNECTION = 57889
const CHECKSUM = 57890
const DELAY_KEY_WRITE = 57891
const ENCRYPTION = 57892
const ENGINE = 57893
const INSERT_METHOD = 57894
const MAX_ROWS = 57895
const MIN_ROWS = 57896
const PACK_KEYS = 57897
const PASSWORD = 57898
const FIXED = 57899
const DYNAMIC = 57900
const COMPRESSED = 57901
const REDUNDANT = 57902
const COMPACT = 57903
const ROW_FORMAT = 57904
const STATS_AUTO_RECALC = 57905
const STATS_PERSISTENT = 57906
const STATS_SAMPLE_PAGES = 57907
const STORAGE = 57908
const MEMORY = 57909
const DISK = 57910
const PARTITIONS = 57911
const LINEAR = 57912
const RANGE = 57913
const LIST = 57914
const SUBPARTITION = 57915
const SUBPARTITIONS = 57916
const HASH = 57917

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	593, 145,
	-2, 151,
	-1, 48,
	128, 151,
	168, 151,
	324, 151,
	-2, 464,
	-1, 55,
	35, 679,
	228, 679,
	239, 679,
	274, 693,
	275, 693,
	-2, 681,
	-1, 60,
	230, 704,
	-2, 702,
	-1, 114,
	227, 1219,
	-2, 119,
	-1, 116,
	1, 146,
	593, 146,
	-2, 151,
	-1, 126,
	129, 362,
	233, 362,
	-2, 458,
	-1, 145,
	128, 151,
	168, 151,
	324, 151,
	-2, 473,
	-1, 676,
	212, 1240,
	-2, 1236,
	-1, 677,
	212, 1241,
	-2, 1237,
	-1, 751,
	59, 772,
	-2, 787,
	-1, 788,
	144, 1637,
	-2, 112,
	-1, 789,
	144, 1483,
	-2, 113,
	-1, 795,
	144, 1565,
	-2, 1213,
	-1, 940,
	144, 1413,
	-2, 1210,
	-1, 979,
	238, 41,
	243, 41,
	-2, 373,
	-1, 1059,
	1, 512,
	593, 512,
	-2, 151,
	-1, 1292,
	59, 773,
	-2, 792,
	-1, 1293,
	59, 774,
	-2, 793,
	-1, 1346,
	128, 151,
	168, 151,
	324, 151,
	-2, 405,
	-1, 1424,
	129, 362,
	233, 362,
	-2, 458,
	-1, 1433,
	238, 42,
	243, 42,
	-2, 374,
	-1, 1726,
	212, 1245,
	-2, 1239,
	-1, 1808,
	128, 151,
	168, 151,
	324, 151,
	-2, 406,
	-1, 1815,
	25, 170,
	-2, 172,
	-1, 2048,
	86, 39,
	-2, 828,
	-1, 2099,
	77, 94,
	86, 94,
	-2, 848,
	-1, 2166,
	568, 607,
	-2, 594,
	-1, 2297,
	49, 1181,
	-2, 1175,
	-1, 2503,
	86, 39,
	-2, 829,
	-1, 2541,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 821,
	-1, 2848,
	22, 1567,
	32, 1567,
	169, 1567,
	250, 1567,
	304, 1567,
	305, 1567,
	306, 1567,
	307, 1567,
	308, 1567,
	309, 1567,
	310, 1567,
	312, 1567,
	313, 1567,
	314, 1567,
	315, 1567,
	316, 1567,
	317, 1567,
	318, 1567,
	319, 1567,
	320, 1567,
	321, 1567,
	322, 1567,
	323, 1567,
	325, 1567,
	327, 1567,
	328, 1567,
	329, 1567,
	330, 1567,
	331, 1567,
	332, 1567,
	333, 1567,
	334, 1567,
	335, 1567,
	338, 1567,
	339, 1567,
	340, 1567,
	341, 1567,
	342, 1567,
	343, 1567,
	344, 1567,
	345, 1567,
	346, 1567,
	454, 1567,
	-2, 552,
}

const yyPrivate = 57344

const yyLast = 40951

var yyAct = [...]int{
	676, 685, 2631, 2256, 2899, 678, 2629, 2780, 1805, 2630,
	2893, 2846, 2850, 2607, 1760, 2849, 1349, 2436, 2830, 1740,
	2349, 2356, 2002, 2308, 2733, 1123, 2392, 766, 3, 2311,
	1271, 2644, 2419, 2036, 1742, 1873, 2358, 2756, 2418, 1307,
	597, 2512, 2254, 679, 669, 37, 2506, 2312, 2255, 96,
	2309, 185, 2220, 744, 185, 667, 561, 185, 2094, 2071,
	623, 1764, 577, 2649, 185, 670, 594, 668, 2421, 2532,
	1779, 2306, 185, 2298, 2063, 2498, 1838, 2131, 2163, 2203,
	1863, 1071, 1843, 943, 2132, 1403, 2133, 185, 595, 1794,
	154, 593, 1294, 767, 793, 36, 2083, 1783, 589, 2055,
	2038, 1633, 38, 1643, 1784, 1591, 1431, 1720, 1915, 577,
	1882, 1696, 577, 185, 577, 140, 1862, 1771, 1845, 1009,
	2125, 1100, 748, 974, 752, 1447, 746, 601, 1338, 1316,
	1695, 95, 969, 1786, 790, 2101, 1274, 1142, 1542, 1655,
	1538, 606, 769, 950, 1610, 1860, 91, 1438, 980, 951,
	1524, 975, 976, 1337, 1834, 1335, 1692, 947, 1321, 1121,
	1116, 758, 1423, 123, 124, 1398, 158, 117, 1547, 1055,
	780, 756, 76, 85, 977, 753, 1733, 97, 584, 1213,
	1209, 987, 754, 2789, 98, 187, 188, 189, 2156, 89,
	2900, 1875, 1876, 1877, 1875, 1765, 2389, 118, 2182, 2181,
	1913, 2154, 1509, 755, 77, 8, 774, 7, 779, 6,
	1723, 125, 2590, 90, 119, 1143, 2211, 2212, 187, 188,
	189, 2811, 2810, 1737, 1738, 564, 1598, 1597, 1596, 2634,
	1595, 1594, 1593, 1580, 1585, 944, 1014, 760, 587, 2865,
	588, 2034, 2294, 2486, 585, 2065, 1854, 2634, 960, 955,
	747, 534, 2913, 2875, 745, 2890, 2373, 2566, 1603, 2729,
	2728, 1013, 1011, 1012, 787, 2912, 551, 1143, 761, 2600,
	1848, 768, 2601, 2840, 1953, 1025, 1026, 1027, 2903, 1030,
	1031, 1032, 1033, 119, 966, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 990, 1301, 794, 102, 78, 2806, 78, 991,
	2811, 2888, 550, 2633, 965, 967, 78, 2410, 78, 80,
	1153, 1015, 1016, 1017, 548, 2608, 2831, 1901, 2839, 181,
	2407, 2633, 2074, 2805, 2219, 1022, 2470, 1413, 1951, 2110,
	2346, 2347, 2109, 2035, 2190, 2111, 104, 105, 2189, 108,
	119, 2345, 114, 120, 1028, 182, 2210, 2075, 529, 1107,
	1950, 1109, 1800, 1801, 545, 1799, 163, 2662, 964, 1119,
	1064, 1065, 1153, 559, 2408, 1339, 1090, 1340, 740, 741,
	742, 743, 738, 87, 751, 87, 1739, 737, 556, 1095,
	1096, 2781, 1078, 87, 2122, 87, 2414, 1079, 2157, 1106,
	1108, 959, 1067, 2221, 961, 1077, 1847, 1076, 2115, 1078,
	1091, 1175, 782, 783, 1079, 1149, 1818, 1817, 1141, 1058,
	564, 565, 1084, 160, 2438, 161, 962, 2246, 2461, 2509,
	2459, 1054, 2738, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1184, 1183, 1185, 1186, 575, 180, 1586, 1587, 1588, 573,
	1584, 579, 564, 535, 1278, 537, 552, 2164, 567, 2185,
	566, 541, 1530, 539, 543, 553, 544, 1149, 538, 1499,
	549, 1118, 1883, 540, 554, 555, 557, 571, 570, 558,
	1097, 547, 568, 564, 2223, 564, 1927, 1924, 1926, 1925,
	1098, 1092, 1104, 1929, 1916, 1930, 1105, 1931, 964, 2902,
	956, 2411, 2431, 1085, 1525, 2439, 1110, 958, 957, 1099,
	2432, 1113, 2866, 1500, 1060, 1501, 1921, 1093, 1094, 2198,
	2592, 2591, 1932, 1029, 1035, 968, 1034, 2716, 1103, 185,
	1920, 185, 2440, 1918, 185, 2588, 970, 1886, 963, 2352,
	971, 87, 998, 1780, 996, 971, 2233, 2232, 2231, 2225,
	164, 2229, 1111, 2224, 1007, 2222, 962, 1006, 1005, 170,
	2227, 1281, 577, 577, 577, 964, 1053, 1004, 1003, 2226,
	1002, 1922, 1919, 1416, 1001, 1000, 1008, 995, 1187, 2247,
	577, 577, 2362, 948, 2353, 948, 2228, 2230, 983, 946,
	1187, 1088, 2907, 1437, 2886, 2897, 948, 982, 1539, 1148,
	1145, 1146, 1147, 1152, 1154, 1151, 1861, 1150, 781, 2355,
	1135, 2382, 989, 2372, 1144, 2199, 565, 1074, 1907, 1080,
	1081, 1082, 1083, 2350, 1535, 1851, 37, 1129, 1018, 989,
	1057, 2184, 1411, 1951, 1024, 1410, 1409, 2360, 2361, 1766,
	1767, 2174, 1120, 1536, 2351, 2788, 2587, 569, 565, 1806,
	2155, 1148, 1145, 1146, 1147, 1152, 1154, 1151, 2187, 1150,
	1407, 2215, 1531, 1852, 533, 562, 1144, 528, 963, 2777,
	2158, 1850, 155, 1965, 1903, 2197, 2357, 1114, 2196, 565,
	563, 565, 999, 1112, 997, 1188, 1189, 2547, 2528, 2106,
	2070, 1190, 1191, 1192, 1193, 2026, 1732, 1436, 1325, 1250,
	1069, 1198, 1187, 1201, 1853, 2510, 2039, 2041, 1952, 2202,
	988, 1186, 2344, 1849, 2804, 992, 982, 2800, 2794, 763,
	1117, 1056, 1125, 1126, 116, 993, 1010, 988, 1073, 1529,
	2583, 1685, 1269, 81, 2739, 963, 2522, 1917, 185, 989,
	1532, 2359, 577, 577, 1341, 1511, 1510, 1512, 1513, 1514,
	1194, 1139, 2632, 2362, 86, 2239, 86, 1101, 185, 1615,
	1548, 2147, 1656, 989, 86, 1158, 86, 187, 188, 189,
	2632, 1635, 1282, 1616, 1617, 1614, 2658, 577, 1066, 1063,
	111, 185, 1075, 1270, 1087, 77, 577, 1138, 2205, 1136,
	1284, 1137, 577, 2204, 1288, 1089, 2558, 746, 1287, 2557,
	748, 1285, 2882, 1211, 2895, 1212, 1215, 2896, 989, 2894,
	156, 790, 1656, 1264, 1979, 1890, 168, 1677, 1666, 1667,
	1668, 1669, 1679, 1670, 1671, 1672, 1684, 1680, 1673, 1674,
	1681, 1682, 1683, 1675, 1676, 1678, 2548, 988, 1446, 1023,
	1157, 1158, 1286, 2412, 2413, 1270, 95, 112, 1636, 1900,
	1445, 1256, 1257, 1258, 1259, 1260, 2415, 176, 2354, 1902,
	989, 988, 1435, 2040, 2205, 1072, 992, 982, 1526, 2204,
	1527, 1275, 1898, 1528, 1895, 998, 993, 1179, 1180, 1181,
	1182, 1184, 1183, 1185, 1186, 157, 162, 159, 165, 166,
	167, 169, 171, 172, 173, 174, 994, 1102, 996, 98,
	1549, 175, 177, 178, 179, 1326, 988, 1159, 1059, 2856,
	2816, 1899, 982, 985, 986, 1272, 948, 87, 2770, 1283,
	979, 983, 1895, 2854, 2910, 745, 2435, 1159, 747, 1306,
	1303, 1613, 2858, 2859, 1605, 1607, 1608, 2360, 2361, 2724,
	2723, 978, 2714, 185, 2855, 2623, 2622, 1399, 1957, 1958,
	1959, 1336, 2817, 1331, 1332, 1606, 2908, 1408, 988, 1897,
	2771, 2565, 2564, 1301, 982, 985, 986, 1159, 948, 2390,
	1660, 2378, 979, 983, 1661, 690, 691, 692, 577, 2129,
	1433, 794, 1181, 1182, 1184, 1183, 1185, 1186, 1442, 2749,
	1301, 2128, 1444, 1857, 1520, 577, 577, 2883, 577, 1519,
	577, 577, 1175, 577, 577, 577, 577, 577, 577, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1161, 1128, 577, 1301,
	1504, 1503, 185, 1480, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1184, 1183, 1185, 1186, 1156, 1517, 1157, 1158, 185,
	2909, 2359, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1183,
	1185, 1186, 577, 2362, 185, 1156, 1289, 1157, 1158, 1506,
	785, 1429, 1518, 1502, 2241, 1537, 1492, 1486, 577, 1483,
	185, 1482, 1481, 1494, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1184, 1183, 1185, 1186, 1456, 185, 1414, 1415, 1422,
	1310, 2797, 2796, 185, 1441, 1156, 2774, 1157, 1158, 1516,
	1159, 1477, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 577, 577, 577, 2773, 187, 188, 189, 1443, 2555,
	2746, 1449, 1505, 1450, 1406, 1452, 1454, 2772, 2719, 1458,
	1460, 1462, 1464, 1466, 1440, 1419, 1420, 1418, 2657, 1311,
	2655, 2619, 185, 1475, 1476, 1432, 2562, 2554, 1484, 1485,
	1159, 187, 188, 189, 1490, 1491, 187, 188, 189, 2381,
	2113, 187, 188, 189, 1544, 1871, 1552, 1439, 1439, 2380,
	187, 188, 189, 1556, 1869, 1558, 1559, 1560, 1561, 2138,
	2126, 1266, 1565, 2884, 1911, 1910, 1159, 1763, 1634, 1745,
	1640, 1640, 1637, 1641, 1638, 1638, 1579, 1581, 1550, 1551,
	1545, 1646, 577, 1515, 1507, 1497, 1493, 1540, 1489, 1488,
	1487, 1312, 1555, 1115, 1478, 2061, 2901, 577, 577, 1562,
	1563, 1564, 1159, 2745, 101, 2708, 119, 966, 1156, 2707,
	1157, 1158, 2465, 1301, 2606, 100, 1611, 99, 2102, 1618,
	2467, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1609, 1554, 1693, 965, 2072, 1970,
	2871, 1301, 1619, 2165, 1175, 1159, 1412, 1171, 1969, 1172,
	1575, 1576, 1577, 94, 1578, 1975, 1724, 185, 1156, 2143,
	1157, 1158, 577, 1173, 1174, 1170, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1184, 1183, 1185, 1186, 2061, 2837, 2061,
	2824, 2103, 1159, 1814, 1301, 1301, 185, 2521, 1693, 577,
	2105, 92, 1612, 1750, 1156, 1751, 1157, 1158, 1159, 185,
	2061, 2820, 93, 577, 1159, 2812, 1301, 2079, 185, 2080,
	185, 1301, 185, 185, 577, 1314, 1657, 577, 2061, 2790,
	2598, 2787, 1175, 2523, 2214, 1726, 1155, 1974, 577, 2799,
	1156, 1724, 1157, 1158, 2482, 1301, 2061, 2715, 1815, 790,
	1728, 1729, 790, 95, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1184, 1183, 1185, 1186, 1159, 1301, 2598, 1301, 2061,
	2596, 2080, 95, 100, 2011, 1301, 1159, 1756, 2339, 1725,
	1782, 1895, 1301, 1156, 2061, 1157, 1158, 1951, 1772, 1773,
	1313, 2526, 1301, 577, 1155, 1301, 1642, 2785, 1996, 1301,
	1864, 1865, 1866, 1648, 1649, 1868, 1870, 2370, 2369, 2080,
	1726, 1896, 1824, 1825, 1826, 1827, 2366, 2367, 2482, 577,
	1156, 1810, 1157, 1158, 1744, 577, 1442, 1809, 1792, 1442,
	1819, 1442, 1820, 1821, 1822, 1823, 1156, 1894, 1157, 1158,
	760, 1966, 1156, 2368, 1157, 1158, 677, 2862, 1830, 1831,
	1832, 1833, 1727, 1884, 1777, 1730, 1731, 1758, 2003, 2282,
	1159, 1813, 2366, 2365, 1840, 2072, 1159, 577, 1895, 1634,
	1159, 1775, 1846, 1798, 1159, 1634, 1634, 1966, 1797, 1796,
	1159, 2080, 1301, 1966, 1301, 1951, 2183, 1402, 2168, 1812,
	1811, 1996, 1755, 1156, 1985, 1157, 1158, 186, 2161, 2162,
	186, 1159, 1881, 186, 1156, 1984, 1157, 1158, 578, 1895,
	186, 1856, 2057, 185, 2061, 2060, 1402, 1401, 186, 794,
	185, 1159, 794, 2102, 1878, 185, 185, 94, 1770, 185,
	1159, 185, 1889, 186, 1159, 1892, 2521, 1893, 185, 1836,
	1837, 101, 1855, 1301, 1305, 185, 1841, 1859, 1867, 2712,
	1904, 1159, 100, 2584, 99, 578, 2542, 2307, 578, 186,
	578, 1159, 2484, 94, 1347, 1346, 1159, 2521, 1888, 1735,
	1906, 1887, 1159, 185, 577, 1891, 1908, 1909, 1905, 1589,
	1841, 1159, 1988, 2480, 1966, 1534, 2103, 1333, 1156, 750,
	1157, 1158, 990, 1159, 1156, 1951, 1157, 1158, 1156, 991,
	1157, 1158, 1156, 2473, 1157, 1158, 973, 972, 1156, 1439,
	1157, 1158, 2472, 2827, 87, 1175, 2020, 1964, 1914, 92,
	2735, 1301, 1942, 1943, 1159, 1308, 94, 1945, 2705, 1156,
	93, 1157, 1158, 1159, 2130, 2567, 1946, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1184, 1183, 1185, 1186, 2019, 1156,
	1159, 1157, 1158, 2393, 2018, 1159, 2669, 2582, 1156, 1159,
	1157, 1158, 1156, 2017, 1157, 1158, 87, 1935, 2579, 2560,
	1611, 2476, 1961, 2475, 1963, 2016, 1159, 1404, 1471, 1156,
	1159, 1157, 1158, 1839, 1301, 2568, 2569, 2570, 1159, 1156,
	2433, 1157, 1158, 2395, 1156, 1962, 1157, 1158, 1159, 2391,
	1156, 2169, 1157, 1158, 1835, 2135, 2015, 1829, 1828, 1156,
	1159, 1157, 1158, 1522, 1058, 2014, 1434, 1949, 1159, 1968,
	1430, 1156, 1400, 1157, 1158, 113, 185, 2571, 1472, 1473,
	1474, 2437, 2013, 2736, 185, 2533, 2534, 2012, 1640, 577,
	2045, 2006, 1638, 1854, 2134, 577, 1612, 1468, 2032, 1960,
	1748, 2879, 1156, 2049, 1157, 1158, 577, 2877, 2005, 2851,
	2868, 1156, 2004, 1157, 1158, 1159, 2809, 2754, 2043, 2536,
	2001, 1159, 2838, 2387, 2572, 2573, 2386, 2385, 1156, 185,
	1157, 1158, 185, 1156, 1978, 1157, 1158, 1156, 2307, 1157,
	1158, 2135, 2000, 2148, 1469, 1470, 1936, 2112, 2076, 1582,
	1999, 1159, 2539, 2538, 1156, 2326, 1157, 1158, 1156, 2325,
	1157, 1158, 1762, 1309, 37, 2062, 1156, 1726, 1157, 1158,
	2329, 1754, 2327, 2096, 2769, 2330, 1156, 2328, 1157, 1158,
	2085, 2088, 2089, 2090, 2086, 2527, 2087, 2091, 1156, 2058,
	1157, 1158, 2287, 2286, 2648, 577, 1156, 1997, 1157, 1158,
	2650, 185, 1976, 1993, 2331, 2514, 2089, 2090, 185, 1275,
	2517, 1725, 2033, 2513, 2639, 2296, 2638, 2299, 2301, 1533,
	577, 764, 2123, 2124, 2095, 736, 2302, 577, 2364, 765,
	2120, 1442, 1442, 1992, 2160, 2139, 577, 2100, 1020, 2116,
	2069, 2059, 2054, 1156, 1652, 1157, 1158, 1019, 2180, 1156,
	2447, 1157, 1158, 2176, 2134, 2179, 2208, 92, 1653, 185,
	185, 185, 185, 185, 2637, 1846, 1127, 2107, 93, 2104,
	2175, 120, 2023, 2024, 2117, 2519, 185, 185, 92, 1156,
	2114, 1157, 1158, 94, 2905, 94, 1772, 1773, 2383, 93,
	2127, 1939, 185, 2786, 2085, 2088, 2089, 2090, 2086, 2731,
	2087, 2091, 2363, 2136, 2533, 2534, 101, 2137, 2145, 2093,
	1759, 1634, 2140, 2141, 772, 773, 2144, 100, 2285, 99,
	1928, 2149, 2150, 2151, 2178, 186, 2284, 186, 94, 2499,
	186, 1299, 1295, 1955, 1422, 99, 2761, 2170, 2171, 2760,
	2656, 2654, 2653, 1640, 2646, 1640, 1296, 1638, 1640, 1638,
	101, 2580, 1638, 1640, 2518, 2177, 2516, 1638, 578, 578,
	578, 100, 2234, 99, 2396, 1879, 746, 577, 1417, 101,
	2238, 1752, 1753, 1298, 771, 1297, 578, 578, 100, 2507,
	100, 2200, 2645, 577, 2072, 2057, 2259, 1986, 2269, 2270,
	2271, 2272, 2276, 1746, 2217, 2262, 2216, 1327, 185, 1318,
	2263, 2880, 577, 2206, 2881, 660, 2207, 2881, 2880, 2775,
	2218, 577, 2235, 106, 107, 2553, 762, 103, 577, 577,
	88, 185, 185, 185, 185, 185, 1, 2853, 546, 1736,
	1273, 560, 1508, 185, 1498, 2609, 2276, 1694, 185, 2304,
	185, 2732, 185, 2319, 2401, 185, 185, 185, 2250, 2399,
	1885, 2578, 1844, 981, 145, 2289, 2290, 1299, 1295, 2338,
	1807, 1808, 752, 2833, 110, 941, 109, 576, 2406, 2257,
	984, 2257, 1296, 2275, 2257, 1086, 1880, 2599, 2277, 2257,
	2379, 2313, 1288, 2264, 2265, 2266, 2267, 2268, 2121, 185,
	1816, 2291, 2403, 2402, 2288, 2400, 1353, 1292, 1293, 1298,
	2340, 1297, 577, 2341, 1351, 1352, 1350, 1355, 2281, 1354,
	577, 1987, 2485, 753, 792, 185, 1583, 945, 2320, 952,
	754, 2323, 574, 2092, 2417, 185, 2321, 2322, 2332, 2324,
	95, 183, 1342, 2336, 186, 2342, 1319, 1021, 578, 578,
	185, 1544, 2310, 185, 2318, 536, 2348, 2310, 2371, 1912,
	542, 1199, 2283, 2448, 186, 2108, 791, 784, 2375, 2374,
	1747, 2278, 2279, 2280, 2047, 2315, 2511, 2295, 2297, 2064,
	2300, 2293, 2425, 578, 2768, 2647, 2825, 186, 2118, 1315,
	1977, 1206, 578, 1654, 2424, 2397, 1787, 1604, 578, 1846,
	599, 2416, 598, 596, 2376, 2377, 2428, 2050, 2073, 1162,
	680, 2037, 1328, 2084, 2082, 2081, 1937, 1793, 2535, 2531,
	2845, 1789, 1785, 2056, 607, 2479, 600, 592, 2550, 2443,
	2442, 2423, 2186, 577, 185, 2434, 2188, 2119, 2445, 2446,
	2430, 1140, 2398, 1291, 586, 954, 1651, 2737, 2792, 1954,
	2469, 1290, 2457, 1664, 2451, 1665, 2450, 2454, 2455, 2388,
	2456, 2166, 1872, 2458, 63, 2460, 41, 2462, 581, 2864,
	1131, 778, 32, 31, 30, 29, 28, 23, 22, 21,
	20, 19, 25, 18, 17, 16, 2874, 2904, 2409, 115,
	185, 50, 47, 45, 122, 121, 48, 44, 2505, 1061,
	42, 27, 26, 15, 14, 2500, 2501, 13, 2556, 12,
	11, 10, 9, 185, 5, 4, 35, 34, 2508, 33,
	1134, 2515, 24, 2540, 2, 2405, 2404, 2153, 1874, 2530,
	2520, 0, 0, 185, 0, 0, 185, 185, 185, 0,
	0, 0, 0, 2537, 0, 0, 577, 577, 2544, 186,
	2545, 2546, 0, 0, 0, 0, 0, 0, 2425, 2543,
	2585, 2586, 0, 2551, 0, 0, 0, 0, 0, 0,
	2424, 2552, 0, 0, 0, 0, 0, 2561, 0, 2563,
	0, 0, 0, 0, 578, 0, 0, 0, 577, 577,
	577, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 578, 0, 578, 0, 578, 578, 0, 578,
	578, 578, 578, 578, 578, 0, 0, 0, 0, 2605,
	2603, 2604, 0, 0, 578, 0, 0, 0, 186, 0,
	0, 0, 1640, 0, 1640, 0, 1638, 0, 1638, 0,
	0, 0, 0, 0, 0, 186, 0, 2618, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 578, 0,
	186, 0, 0, 0, 0, 0, 0, 2615, 0, 2614,
	0, 0, 2642, 2625, 578, 0, 186, 577, 2589, 577,
	0, 2626, 2593, 2594, 2595, 0, 0, 0, 0, 2635,
	0, 0, 186, 0, 1640, 0, 2671, 0, 1638, 186,
	0, 0, 2643, 2652, 2663, 0, 0, 2665, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 578, 578, 578,
	37, 2661, 2659, 0, 2651, 0, 0, 0, 0, 0,
	746, 0, 0, 577, 2667, 0, 0, 0, 0, 2313,
	0, 0, 0, 2313, 2675, 0, 185, 2713, 186, 0,
	0, 0, 0, 2672, 2673, 0, 0, 0, 2257, 577,
	2257, 0, 0, 0, 2709, 0, 2711, 0, 2710, 0,
	0, 0, 0, 181, 0, 0, 0, 792, 792, 792,
	2725, 2727, 2752, 2726, 2734, 0, 1640, 577, 2755, 2751,
	1638, 577, 577, 0, 0, 1130, 1132, 120, 0, 2310,
	0, 0, 0, 0, 2717, 0, 0, 0, 578, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 578, 578, 2765, 2764, 2767, 2762, 2763,
	0, 0, 0, 0, 2779, 0, 0, 0, 0, 0,
	0, 0, 2776, 0, 0, 2778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 0, 0, 0,
	2720, 2721, 2722, 0, 0, 0, 0, 160, 0, 161,
	2784, 185, 746, 0, 0, 0, 2782, 0, 2313, 0,
	0, 0, 0, 186, 0, 0, 577, 185, 578, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2801, 1267, 0, 0, 0, 2795, 0, 0, 0, 0,
	2798, 0, 186, 0, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 37, 0, 577, 578,
	0, 0, 2791, 0, 186, 0, 186, 0, 186, 186,
	578, 0, 0, 578, 0, 0, 0, 0, 0, 2818,
	577, 577, 0, 0, 578, 0, 0, 1279, 1280, 0,
	2823, 0, 0, 577, 0, 2826, 2828, 0, 0, 0,
	0, 0, 185, 577, 2832, 2734, 2834, 0, 0, 0,
	2841, 37, 0, 661, 0, 0, 0, 0, 0, 0,
	0, 2844, 1323, 0, 164, 2860, 2852, 2857, 0, 0,
	0, 792, 0, 170, 0, 2867, 0, 1343, 0, 578,
	0, 0, 2876, 577, 2873, 0, 2878, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 1640, 2885, 2892, 0,
	1638, 2887, 2891, 2889, 184, 578, 0, 532, 0, 0,
	572, 578, 2898, 0, 0, 0, 0, 532, 0, 0,
	2906, 0, 0, 2310, 0, 532, 2911, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 2914, 2752, 1638,
	759, 2915, 0, 0, 2916, 2917, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 777, 0, 777, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 1300,
	0, 186, 186, 0, 0, 186, 0, 186, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2159, 0, 0, 0, 0, 0, 186,
	578, 0, 0, 945, 0, 0, 120, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 163,
	1448, 1448, 0, 1448, 0, 1448, 1448, 0, 1457, 1448,
	1448, 1448, 1448, 1448, 0, 0, 0, 0, 0, 0,
	0, 1267, 1267, 945, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 160, 1521, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 1425, 1426, 151, 150, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 792, 792, 157,
	162, 159, 165, 166, 167, 169, 171, 172, 173, 174,
	0, 0, 186, 0, 0, 175, 177, 178, 179, 0,
	186, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 1427, 153, 0, 1424, 0, 147, 148, 0,
	0, 0, 0, 164, 0, 186, 0, 0, 186, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 1662, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 792, 186, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 1749, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 0, 532, 155, 0, 532, 0, 0,
	0, 0, 0, 0, 1761, 186, 186, 186, 186, 186,
	0, 0, 0, 0, 2872, 0, 0, 0, 1323, 0,
	0, 792, 186, 186, 1370, 0, 0, 0, 0, 792,
	0, 0, 792, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 2677, 2679,
	2678, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	0, 143, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 0, 0, 0, 578,
	952, 0, 0, 156, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 186, 0, 0, 0, 578, 1268,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 1358, 0, 0, 578, 578, 0, 186, 186, 186,
	186, 186, 945, 0, 0, 0, 0, 0, 0, 186,
	176, 0, 0, 0, 186, 0, 186, 0, 186, 0,
	0, 186, 186, 186, 0, 0, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 0, 0, 157, 162,
	159, 165, 166, 167, 169, 171, 172, 173, 174, 0,
	0, 759, 0, 0, 175, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 1371, 0, 532, 0, 0, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 1948,
	2680, 2681, 0, 0, 0, 0, 186, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 1384, 1387, 1388, 1389,
	1390, 1391, 1392, 0, 1393, 1394, 1395, 1396, 1397, 1372,
	1373, 1374, 1375, 1356, 1357, 1385, 0, 1359, 0, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 0, 0,
	1369, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 671,
	0, 624, 675, 626, 672, 673, 0, 622, 625, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	186, 0, 0, 1302, 1304, 0, 627, 628, 2676, 2682,
	2683, 2684, 2692, 2694, 649, 2693, 2695, 2696, 2697, 2700,
	2701, 2702, 2703, 2698, 2699, 2704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 1386, 0, 0, 186,
	2051, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 186, 186, 186, 0, 0, 0, 0, 1268,
	1268, 0, 578, 578, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 0, 0, 578, 578, 578, 578, 776, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	2142, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 1567, 532, 532, 532,
	532, 532, 532, 532, 0, 1761, 0, 0, 0, 0,
	0, 0, 2167, 0, 0, 0, 0, 0, 0, 186,
	0, 2172, 0, 0, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 0, 0, 0, 777, 777, 0, 578,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 1267, 0, 1267,
	0, 0, 1267, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 777, 1543, 777, 777, 777, 777, 777,
	0, 0, 792, 578, 0, 0, 0, 578, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1448, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 777, 578, 2292, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 1370, 0, 759,
	1267, 0, 0, 2317, 1448, 1267, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 0, 0, 0, 0, 1543,
	0, 532, 578, 532, 0, 532, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 186, 0, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 945, 0, 0,
	1267, 0, 0, 0, 578, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 578, 1276, 0,
	1302, 1734, 0, 0, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 1358, 0, 0, 0, 186, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 578,
	0, 0, 580, 0, 0, 0, 0, 0, 578, 0,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2292, 0,
	0, 0, 0, 0, 0, 1371, 532, 0, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 532, 532,
	0, 949, 532, 0, 1940, 0, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 0, 0, 532, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	1387, 1388, 1389, 1390, 1391, 1392, 532, 1393, 1394, 1395,
	1396, 1397, 1372, 1373, 1374, 1375, 1356, 1357, 1385, 0,
	1359, 0, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 0, 0, 1369, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 777, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2610, 2611, 2612, 2613, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	0, 142, 0, 0, 0, 0, 1267, 0, 1267, 0,
	0, 0, 163, 0, 0, 777, 777, 0, 0, 1386,
	0, 0, 0, 0, 0, 0, 1543, 0, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 152, 0, 0, 590, 1267, 141, 0,
	0, 0, 2664, 0, 2666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 532, 0, 129, 130, 151,
	150, 180, 1967, 0, 0, 0, 1971, 0, 1972, 1973,
	0, 0, 0, 0, 0, 0, 0, 1981, 1761, 0,
	1982, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 0, 0, 792, 0, 0, 1989, 1990, 1991,
	0, 0, 1994, 0, 1995, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 532, 0, 2007, 2008, 2009, 2010,
	0, 2152, 2758, 0, 0, 0, 2758, 2758, 0, 2021,
	2022, 0, 0, 0, 0, 0, 0, 2027, 2028, 2029,
	2030, 2031, 0, 1757, 146, 127, 153, 134, 126, 0,
	147, 148, 0, 0, 2044, 1761, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 135, 0, 0, 0,
	0, 0, 532, 532, 532, 532, 532, 0, 0, 0,
	138, 136, 131, 132, 133, 137, 0, 0, 0, 532,
	532, 1761, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 532, 0, 1062, 0, 1068,
	0, 0, 1070, 0, 0, 0, 0, 0, 0, 0,
	777, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 1268, 0, 0,
	1268, 1267, 0, 2819, 0, 1268, 0, 0, 0, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 155, 777,
	0, 0, 0, 0, 0, 792, 792, 0, 0, 0,
	0, 0, 687, 79, 0, 0, 0, 0, 2842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2847, 0,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 1268, 532, 532, 532, 532, 532, 0,
	0, 0, 0, 0, 0, 0, 2333, 0, 1761, 0,
	0, 532, 0, 1495, 149, 532, 0, 2847, 532, 2343,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	749, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 144, 0, 0,
	749, 0, 1546, 0, 0, 0, 0, 2245, 0, 0,
	0, 0, 532, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 2258, 0, 0, 0, 156, 0, 1268, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 532, 0,
	0, 0, 0, 2273, 2274, 0, 0, 0, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 0, 0, 532, 0, 0, 1330,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 1600, 1601, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2316, 0, 0,
	0, 157, 162, 159, 165, 166, 167, 169, 171, 172,
	173, 174, 0, 0, 2334, 2335, 0, 175, 177, 178,
	179, 0, 0, 0, 0, 1644, 1645, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 1686, 1687,
	1688, 1689, 1690, 1691, 590, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	0, 1348, 0, 2449, 0, 0, 0, 0, 0, 0,
	2453, 0, 1768, 1769, 0, 0, 532, 0, 0, 532,
	532, 532, 0, 0, 2463, 2464, 2466, 2468, 0, 0,
	0, 0, 0, 0, 2474, 0, 0, 0, 2477, 2478,
	1804, 0, 0, 0, 2481, 0, 0, 0, 0, 0,
	2483, 0, 0, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 0, 0, 2497, 0, 0, 0, 0,
	0, 2502, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 2524, 2525, 0, 0, 2529, 0,
	0, 0, 1523, 0, 1268, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 1268, 0, 0, 0, 0,
	0, 0, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 2597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 1122, 1122, 1122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2624,
	0, 0, 0, 0, 0, 2628, 0, 0, 0, 0,
	0, 749, 1195, 1196, 1197, 0, 1200, 0, 1202, 1203,
	1204, 1205, 0, 1208, 1210, 1210, 0, 1210, 1214, 1214,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 0, 1251, 1252, 1253, 1254, 1255,
	0, 0, 0, 0, 1214, 1214, 1214, 1214, 1214, 0,
	0, 0, 0, 0, 1495, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 1781, 0,
	2046, 1592, 2730, 688, 689, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 2740, 2741, 2742, 1268,
	2743, 2744, 1277, 0, 0, 2747, 0, 2748, 749, 2750,
	2753, 0, 749, 0, 0, 0, 2757, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 2783, 0, 0, 0, 0, 1317,
	0, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2803, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 2808, 0, 0, 0, 0, 2813, 1421, 0, 0,
	0, 0, 2814, 2815, 0, 0, 0, 0, 0, 0,
	120, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	2821, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 1933, 1934, 0, 0, 1938, 0, 0,
	0, 0, 0, 0, 152, 0, 1941, 0, 0, 141,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 2863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 2869, 161, 0, 0, 2870, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 1425, 1426,
	151, 150, 180, 0, 0, 2213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2236, 2237, 0, 0, 0, 2240, 0,
	0, 0, 0, 2242, 2243, 2244, 0, 0, 0, 0,
	0, 2248, 2249, 0, 0, 1697, 2251, 0, 2252, 2253,
	0, 0, 0, 2260, 2261, 0, 0, 0, 0, 0,
	0, 1697, 1697, 1697, 1697, 1697, 590, 590, 590, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 1427, 153, 0, 1424,
	0, 147, 148, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 2305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 1122, 1122, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 2337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2099, 0, 0, 0, 0, 56, 2394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2191, 2192, 2193,
	2194, 2195, 0, 0, 0, 143, 0, 0, 144, 0,
	0, 0, 0, 0, 1592, 2201, 46, 49, 52, 51,
	54, 0, 66, 0, 1788, 75, 72, 0, 0, 0,
	2209, 0, 0, 590, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 55, 83,
	82, 0, 0, 64, 65, 53, 0, 0, 0, 0,
	0, 73, 74, 0, 688, 689, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 953, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	2581, 0, 157, 162, 159, 165, 166, 167, 169, 171,
	172, 173, 174, 0, 0, 0, 0, 953, 175, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2602, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 0, 2616, 0, 2617, 0, 0, 0,
	0, 2620, 2621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2627, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 681, 688,
	689, 690, 691, 692, 682, 684, 81, 2384, 0, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2660, 686, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 2668, 2420, 0, 2670, 0, 86, 0, 0,
	0, 0, 0, 2429, 0, 0, 0, 0, 2674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2441, 2706,
	0, 2444, 0, 0, 0, 2426, 2427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2504, 0, 2766, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 0, 0, 590, 0, 0,
	0, 2559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 2574, 0, 0, 2575, 2576, 2577, 0, 2807, 0,
	0, 0, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 2097, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 590, 681, 688, 689, 690, 691, 692, 682,
	684, 0, 671, 0, 683, 675, 0, 672, 673, 0,
	0, 0, 674, 0, 0, 0, 0, 686, 693, 694,
	0, 0, 0, 0, 0, 0, 2861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2426, 2427, 0, 0, 0, 0, 0, 0, 0, 2173,
	0, 0, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2314, 0,
	79, 0, 0, 1788, 1788, 1788, 1788, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2097, 0, 0, 0, 1788, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2636, 0, 2640, 2641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2314, 0, 79, 0,
	2314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2793,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 923, 909, 454, 79, 856, 926, 825, 844, 936,
	847, 850, 891, 804, 869, 374, 841, 797, 829, 800,
	836, 801, 827, 858, 248, 824, 911, 873, 925, 330,
	245, 806, 830, 388, 846, 196, 893, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 932, 334, 879, 2822, 439, 359, 0, 0, 79,
	860, 915, 867, 905, 855, 892, 814, 878, 927, 842,
	888, 928, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 2835, 0, 2836, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 838, 885,
	922, 839, 887, 243, 290, 250, 242, 458, 933, 914,
	0, 0, 213, 924, 862, 0, 890, 0, 939, 799,
	881, 0, 802, 805, 935, 918, 833, 253, 0, 0,
	0, 0, 0, 0, 0, 859, 868, 902, 853, 0,
	0, 0, 0, 0, 0, 0, 831, 0, 877, 0,
	0, 0, 810, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 813,
	0, 832, 903, 0, 796, 273, 807, 360, 235, 0,
	907, 917, 854, 491, 921, 852, 851, 897, 811, 913,
	845, 329, 809, 298, 191, 209, 0, 843, 370, 411,
	417, 912, 828, 837, 233, 835, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 876, 895, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 1124, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 823, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 908, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 900, 938, 383, 416, 223, 477, 438, 818,
	822, 816, 882, 817, 871, 872, 819, 929, 930, 931,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 904,
	812, 0, 820, 821, 0, 910, 919, 920, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 875, 190, 206, 332,
	934, 405, 266, 505, 485, 481, 798, 815, 240, 826,
	834, 0, 840, 848, 849, 861, 863, 864, 865, 866,
	883, 884, 886, 894, 896, 899, 901, 906, 916, 937,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 874, 880, 343, 259, 278,
	289, 889, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 870, 898, 339, 455, 456, 285, 356, 0, 0,
	923, 909, 454, 0, 856, 926, 825, 844, 936, 847,
	850, 891, 804, 869, 374, 841, 797, 829, 800, 836,
	801, 827, 858, 248, 824, 911, 873, 925, 330, 245,
	806, 830, 388, 846, 196, 893, 429, 232, 340, 337,
	461, 260, 251, 247, 231, 286, 346, 386, 448, 380,
	932, 334, 879, 0, 439, 359, 0, 0, 0, 860,
	915, 867, 905, 855, 892, 814, 878, 927, 842, 888,
	928, 292, 230, 195, 371, 440, 264, 0, 0, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 838, 885, 922,
	839, 887, 243, 290, 250, 242, 458, 933, 914, 0,
	0, 213, 924, 862, 0, 890, 0, 939, 799, 881,
	0, 802, 805, 935, 918, 833, 253, 0, 0, 0,
	0, 0, 0, 0, 859, 868, 902, 853, 0, 0,
	0, 0, 0, 2344, 0, 831, 0, 877, 0, 0,
	0, 810, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 813, 0,
	832, 903, 0, 796, 273, 807, 360, 235, 0, 907,
	917, 854, 491, 921, 852, 851, 897, 811, 913, 845,
	329, 809, 298, 191, 209, 0, 843, 370, 411, 417,
	912, 828, 837, 233, 835, 415, 384, 475, 217, 262,
	408, 389, 413, 396, 265, 876, 895, 414, 335, 463,
	403, 473, 492, 493, 241, 364, 482, 452, 488, 504,
	210, 238, 378, 445, 478, 436, 357, 459, 460, 297,
	435, 271, 194, 333, 498, 208, 423, 225, 215, 201,
	447, 471, 222, 427, 0, 0, 506, 203, 469, 444,
	353, 294, 295, 202, 0, 407, 246, 269, 236, 373,
	466, 467, 234, 507, 212, 487, 205, 1124, 486, 366,
	462, 470, 354, 345, 204, 468, 352, 344, 300, 319,
	320, 258, 280, 401, 338, 402, 281, 362, 361, 363,
	197, 479, 0, 198, 0, 441, 480, 508, 218, 219,
	220, 823, 257, 261, 268, 270, 276, 277, 284, 331,
	377, 400, 398, 404, 908, 457, 474, 483, 490, 496,
	497, 499, 500, 501, 502, 503, 365, 283, 437, 299,
	336, 900, 938, 383, 416, 223, 477, 438, 818, 822,
	816, 882, 817, 871, 872, 819, 929, 930, 931, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 0, 904, 812,
	0, 820, 821, 0, 910, 919, 920, 527, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 875, 190, 206, 332, 934,
	405, 266, 505, 485, 481, 798, 815, 240, 826, 834,
	0, 840, 848, 849, 861, 863, 864, 865, 866, 883,
	884, 886, 894, 896, 899, 901, 906, 916, 937, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 347, 348, 349,
	350, 367, 368, 369, 372, 375, 376, 379, 381, 382,
	385, 392, 393, 394, 395, 397, 399, 406, 410, 418,
	419, 420, 421, 422, 425, 426, 430, 431, 432, 433,
	434, 442, 446, 464, 465, 476, 489, 494, 424, 275,
	472, 495, 0, 341, 874, 880, 343, 259, 278, 289,
	889, 484, 443, 211, 412, 267, 200, 229, 214, 237,
	252, 255, 293, 351, 358, 387, 391, 272, 249, 227,
	409, 224, 428, 449, 450, 451, 453, 355, 244, 390,
	870, 898, 339, 455, 456, 285, 356, 0, 0, 923,
	909, 454, 0, 856, 926, 825, 844, 936, 847, 850,
	891, 804, 869, 374, 841, 797, 829, 800, 836, 801,
	827, 858, 248, 824, 911, 873, 925, 330, 245, 806,
	830, 388, 846, 196, 893, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 932,
	334, 879, 0, 439, 359, 0, 0, 0, 860, 915,
	867, 905, 855, 892, 814, 878, 927, 842, 888, 928,
	292, 230, 195, 371, 440, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 838, 885, 922, 839,
	887, 243, 290, 250, 242, 458, 933, 914, 0, 0,
	213, 924, 862, 0, 890, 0, 939, 799, 881, 0,
	802, 805, 935, 918, 833, 253, 0, 0, 0, 0,
	0, 0, 0, 859, 868, 902, 853, 0, 0, 0,
	0, 0, 2303, 0, 831, 0, 877, 0, 0, 0,
	810, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 813, 0, 832,
	903, 0, 796, 273, 807, 360, 235, 0, 907, 917,
	854, 491, 921, 852, 851, 897, 811, 913, 845, 329,
	809, 298, 191, 209, 0, 843, 370, 411, 417, 912,
	828, 837, 233, 835, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 876, 895, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 1124, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	823, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 908, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	900, 938, 383, 416, 223, 477, 438, 818, 822, 816,
	882, 817, 871, 872, 819, 929, 930, 931, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 904, 812, 0,
	820, 821, 0, 910, 919, 920, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 875, 190, 206, 332, 934, 405,
	266, 505, 485, 481, 798, 815, 240, 826, 834, 0,
	840, 848, 849, 861, 863, 864, 865, 866, 883, 884,
	886, 894, 896, 899, 901, 906, 916, 937, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 874, 880, 343, 259, 278, 289, 889,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 870,
	898, 339, 455, 456, 285, 356, 0, 0, 923, 909,
	454, 0, 856, 926, 825, 844, 936, 847, 850, 891,
	804, 869, 374, 841, 797, 829, 800, 836, 801, 827,
	858, 248, 824, 911, 873, 925, 330, 245, 806, 830,
	388, 846, 196, 893, 429, 232, 340, 337, 461, 260,
	251, 247, 231, 286, 346, 386, 448, 380, 932, 334,
	879, 0, 439, 359, 0, 0, 0, 860, 915, 867,
	905, 855, 892, 814, 878, 927, 842, 888, 928, 292,
	230, 195, 371, 440, 264, 0, 0, 0, 0, 187,
	188, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 315, 324, 323, 304, 305,
	307, 309, 314, 321, 327, 838, 885, 922, 839, 887,
	243, 290, 250, 242, 458, 933, 914, 0, 0, 213,
	924, 862, 0, 890, 0, 939, 799, 881, 0, 802,
	805, 935, 918, 833, 253, 0, 0, 0, 0, 0,
	0, 0, 859, 868, 902, 853, 0, 0, 0, 0,
	0, 1776, 0, 831, 0, 877, 0, 0, 0, 810,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 813, 0, 832, 903,
	0, 796, 273, 807, 360, 235, 0, 907, 917, 854,
	491, 921, 852, 851, 897, 811, 913, 845, 329, 809,
	298, 191, 209, 0, 843, 370, 411, 417, 912, 828,
	837, 233, 835, 415, 384, 475, 217, 262, 408, 389,
	413, 396, 265, 876, 895, 414, 335, 463, 403, 473,
	492, 493, 241, 364, 482, 452, 488, 504, 210, 238,
	378, 445, 478, 436, 357, 459, 460, 297, 435, 271,
	194, 333, 498, 208, 423, 225, 215, 201, 447, 471,
	222, 427, 0, 0, 506, 203, 469, 444, 353, 294,
	295, 202, 0, 407, 246, 269, 236, 373, 466, 467,
	234, 507, 212, 487, 205, 1124, 486, 366, 462, 470,
	354, 345, 204, 468, 352, 344, 300, 319, 320, 258,
	280, 401, 338, 402, 281, 362, 361, 363, 197, 479,
	0, 198, 0, 441, 480, 508, 218, 219, 220, 823,
	257, 261, 268, 270, 276, 277, 284, 331, 377, 400,
	398, 404, 908, 457, 474, 483, 490, 496, 497, 499,
	500, 501, 502, 503, 365, 283, 437, 299, 336, 900,
	938, 383, 416, 223, 477, 438, 818, 822, 816, 882,
	817, 871, 872, 819, 929, 930, 931, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 0, 904, 812, 0, 820,
	821, 0, 910, 919, 920, 527, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 875, 190, 206, 332, 934, 405, 266,
	505, 485, 481, 798, 815, 240, 826, 834, 0, 840,
	848, 849, 861, 863, 864, 865, 866, 883, 884, 886,
	894, 896, 899, 901, 906, 916, 937, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 347, 348, 349, 350, 367,
	368, 369, 372, 375, 376, 379, 381, 382, 385, 392,
	393, 394, 395, 397, 399, 406, 410, 418, 419, 420,
	421, 422, 425, 426, 430, 431, 432, 433, 434, 442,
	446, 464, 465, 476, 489, 494, 424, 275, 472, 495,
	0, 341, 874, 880, 343, 259, 278, 289, 889, 484,
	443, 211, 412, 267, 200, 229, 214, 237, 252, 255,
	293, 351, 358, 387, 391, 272, 249, 227, 409, 224,
	428, 449, 450, 451, 453, 355, 244, 390, 870, 898,
	339, 455, 456, 285, 356, 0, 0, 923, 909, 454,
	0, 856, 926, 825, 844, 936, 847, 850, 891, 804,
	869, 374, 841, 797, 829, 800, 836, 801, 827, 858,
	248, 824, 911, 873, 925, 330, 245, 806, 830, 388,
	846, 196, 893, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 932, 334, 879,
	0, 439, 359, 0, 0, 0, 860, 915, 867, 905,
	855, 892, 814, 878, 927, 842, 888, 928, 292, 230,
	195, 371, 440, 264, 0, 87, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 838, 885, 922, 839, 887, 243,
	290, 250, 242, 458, 933, 914, 0, 0, 213, 924,
	862, 0, 890, 0, 939, 799, 881, 0, 802, 805,
	935, 918, 833, 253, 0, 0, 0, 0, 0, 0,
	0, 859, 868, 902, 853, 0, 0, 0, 0, 0,
	0, 0, 831, 0, 877, 0, 0, 0, 810, 803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 813, 0, 832, 903, 0,
	796, 273, 807, 360, 235, 0, 907, 917, 854, 491,
	921, 852, 851, 897, 811, 913, 845, 329, 809, 298,
	191, 209, 0, 843, 370, 411, 417, 912, 828, 837,
	233, 835, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 876, 895, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 1124, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 823, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 908, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 900, 938,
	383, 416, 223, 477, 438, 818, 822, 816, 882, 817,
	871, 872, 819, 929, 930, 931, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 904, 812, 0, 820, 821,
	0, 910, 919, 920, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 875, 190, 206, 332, 934, 405, 266, 505,
	485, 481, 798, 815, 240, 826, 834, 0, 840, 848,
	849, 861, 863, 864, 865, 866, 883, 884, 886, 894,
	896, 899, 901, 906, 916, 937, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 874, 880, 343, 259, 278, 289, 889, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 870, 898, 339,
	455, 456, 285, 356, 0, 0, 923, 909, 454, 0,
	856, 926, 825, 844, 936, 847, 850, 891, 804, 869,
	374, 841, 797, 829, 800, 836, 801, 827, 858, 248,
	824, 911, 873, 925, 330, 245, 806, 830, 388, 846,
	196, 893, 429, 232, 340, 337, 461, 260, 251, 247,
	231, 286, 346, 386, 448, 380, 932, 334, 879, 0,
	439, 359, 0, 0, 0, 860, 915, 867, 905, 855,
	892, 814, 878, 927, 842, 888, 928, 292, 230, 195,
	371, 440, 264, 0, 0, 0, 0, 187, 188, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 315, 324, 323, 304, 305, 307, 309,
	314, 321, 327, 838, 885, 922, 839, 887, 243, 290,
	250, 242, 458, 933, 914, 0, 0, 213, 924, 862,
	0, 890, 0, 939, 799, 881, 0, 802, 805, 935,
	918, 833, 253, 0, 0, 0, 0, 0, 0, 0,
	859, 868, 902, 853, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 877, 0, 0, 0, 810, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 813, 0, 832, 903, 0, 796,
	273, 807, 360, 235, 0, 907, 917, 854, 491, 921,
	852, 851, 897, 811, 913, 845, 329, 809, 298, 191,
	209, 0, 843, 370, 411, 417, 912, 828, 837, 233,
	835, 415, 384, 475, 217, 262, 408, 389, 413, 396,
	265, 876, 895, 414, 335, 463, 403, 473, 492, 493,
	241, 364, 482, 452, 488, 504, 210, 238, 378, 445,
	478, 436, 357, 459, 460, 297, 435, 271, 194, 333,
	498, 208, 423, 225, 215, 201, 447, 471, 222, 427,
	0, 0, 506, 203, 469, 444, 353, 294, 295, 202,
	0, 407, 246, 269, 236, 373, 466, 467, 234, 507,
	212, 487, 205, 1124, 486, 366, 462, 470, 354, 345,
	204, 468, 352, 344, 300, 319, 320, 258, 280, 401,
	338, 402, 281, 362, 361, 363, 197, 479, 0, 198,
	0, 441, 480, 508, 218, 219, 220, 823, 257, 261,
	268, 270, 276, 277, 284, 331, 377, 400, 398, 404,
	908, 457, 474, 483, 490, 496, 497, 499, 500, 501,
	502, 503, 365, 283, 437, 299, 336, 900, 938, 383,
	416, 223, 477, 438, 818, 822, 816, 882, 817, 871,
	872, 819, 929, 930, 931, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 0, 904, 812, 0, 820, 821, 0,
	910, 919, 920, 527, 301, 313, 316, 306, 325, 0,
	326, 302, 303, 308, 310, 311, 312, 317, 318, 322,
	328, 875, 190, 206, 332, 934, 405, 266, 505, 485,
	481, 798, 815, 240, 826, 834, 0, 840, 848, 849,
	861, 863, 864, 865, 866, 883, 884, 886, 894, 896,
	899, 901, 906, 916, 937, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 347, 348, 349, 350, 367, 368, 369,
	372, 375, 376, 379, 381, 382, 385, 392, 393, 394,
	395, 397, 399, 406, 410, 418, 419, 420, 421, 422,
	425, 426, 430, 431, 432, 433, 434, 442, 446, 464,
	465, 476, 489, 494, 424, 275, 472, 495, 0, 341,
	874, 880, 343, 259, 278, 289, 889, 484, 443, 211,
	412, 267, 200, 229, 214, 237, 252, 255, 293, 351,
	358, 387, 391, 272, 249, 227, 409, 224, 428, 449,
	450, 451, 453, 355, 244, 390, 870, 898, 339, 455,
	456, 285, 356, 0, 0, 923, 909, 454, 0, 856,
	926, 825, 844, 936, 847, 850, 891, 804, 869, 374,
	841, 797, 829, 800, 836, 801, 827, 858, 248, 824,
	911, 873, 925, 330, 245, 806, 830, 388, 846, 196,
	893, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 932, 334, 879, 0, 439,
	359, 0, 0, 0, 860, 915, 867, 905, 855, 892,
	814, 878, 927, 842, 888, 928, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 838, 885, 922, 839, 887, 243, 290, 250,
	242, 458, 933, 914, 0, 0, 940, 924, 862, 0,
	890, 0, 939, 799, 881, 0, 802, 805, 935, 918,
	833, 253, 0, 0, 0, 0, 0, 0, 0, 859,
	868, 902, 853, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 877, 0, 0, 0, 810, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 813, 0, 832, 903, 0, 796, 273,
	807, 360, 235, 0, 907, 917, 854, 491, 921, 852,
	851, 897, 811, 913, 845, 329, 809, 298, 191, 209,
	0, 843, 370, 411, 417, 912, 828, 837, 233, 835,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	876, 895, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 808, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 823, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 908,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 795, 789, 788, 299, 336, 900, 938, 383, 416,
	223, 477, 438, 818, 822, 816, 882, 817, 871, 872,
	819, 929, 930, 931, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 904, 812, 0, 820, 821, 0, 910,
	919, 920, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	875, 190, 206, 332, 934, 405, 266, 505, 485, 481,
	798, 815, 240, 826, 834, 0, 840, 848, 849, 861,
	863, 864, 865, 866, 883, 884, 886, 894, 896, 899,
	901, 906, 916, 937, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 874,
	880, 343, 259, 278, 289, 889, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 870, 898, 339, 455, 456,
	285, 356, 0, 0, 923, 909, 454, 0, 856, 926,
	825, 844, 936, 847, 850, 891, 804, 869, 374, 841,
	797, 829, 800, 836, 801, 827, 858, 248, 824, 911,
	873, 925, 330, 245, 806, 830, 388, 846, 196, 893,
	429, 232, 340, 337, 461, 260, 251, 247, 231, 286,
	346, 386, 448, 380, 932, 334, 879, 0, 439, 359,
	0, 0, 0, 860, 915, 867, 905, 855, 892, 814,
	878, 927, 842, 888, 928, 292, 230, 195, 371, 440,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 315, 324, 323, 304, 305, 307, 309, 314, 321,
	327, 838, 885, 922, 839, 887, 243, 290, 250, 242,
	458, 933, 914, 0, 0, 940, 924, 862, 0, 890,
	0, 939, 799, 881, 0, 802, 805, 935, 918, 833,
	253, 0, 0, 0, 0, 0, 0, 0, 859, 868,
	902, 853, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 877, 0, 0, 0, 810, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 813, 0, 832, 903, 0, 796, 273, 807,
	360, 235, 0, 907, 917, 854, 491, 921, 852, 851,
	897, 811, 913, 845, 329, 809, 298, 191, 209, 0,
	843, 370, 411, 417, 912, 828, 837, 233, 835, 415,
	384, 475, 217, 262, 408, 389, 413, 396, 265, 876,
	895, 414, 335, 463, 403, 473, 492, 493, 241, 364,
	482, 452, 488, 504, 210, 238, 378, 445, 478, 436,
	357, 459, 460, 297, 435, 271, 194, 333, 498, 208,
	423, 225, 215, 201, 447, 1334, 222, 427, 0, 0,
	506, 203, 469, 444, 353, 294, 295, 202, 0, 407,
	246, 269, 236, 373, 466, 467, 234, 507, 212, 487,
	205, 808, 486, 366, 462, 470, 354, 345, 204, 468,
	352, 344, 300, 319, 320, 258, 280, 401, 338, 402,
	281, 362, 361, 363, 197, 479, 0, 198, 0, 441,
	480, 508, 218, 219, 220, 823, 257, 261, 268, 270,
	276, 277, 284, 331, 377, 400, 398, 404, 908, 457,
	474, 483, 490, 496, 497, 499, 500, 501, 502, 503,
	795, 789, 788, 299, 336, 900, 938, 383, 416, 223,
	477, 438, 818, 822, 816, 882, 817, 871, 872, 819,
	929, 930, 931, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 0, 904, 812, 0, 820, 821, 0, 910, 919,
	920, 527, 301, 313, 316, 306, 325, 0, 326, 302,
	303, 308, 310, 311, 312, 317, 318, 322, 328, 875,
	190, 206, 332, 934, 405, 266, 505, 485, 481, 798,
	815, 240, 826, 834, 0, 840, 848, 849, 861, 863,
	864, 865, 866, 883, 884, 886, 894, 896, 899, 901,
	906, 916, 937, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 347, 348, 349, 350, 367, 368, 369, 372, 375,
	376, 379, 381, 382, 385, 392, 393, 394, 395, 397,
	399, 406, 410, 418, 419, 420, 421, 422, 425, 426,
	430, 431, 432, 433, 434, 442, 446, 464, 465, 476,
	489, 494, 424, 275, 472, 495, 0, 341, 874, 880,
	343, 259, 278, 289, 889, 484, 443, 211, 412, 267,
	200, 229, 214, 237, 252, 255, 293, 351, 358, 387,
	391, 272, 249, 227, 409, 224, 428, 449, 450, 451,
	453, 355, 244, 390, 870, 898, 339, 455, 456, 285,
	356, 0, 0, 923, 909, 454, 0, 856, 926, 825,
	844, 936, 847, 850, 891, 804, 869, 374, 841, 797,
	829, 800, 836, 801, 827, 858, 248, 824, 911, 873,
	925, 330, 245, 806, 830, 388, 846, 196, 893, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 932, 334, 879, 0, 439, 359, 0,
	0, 0, 860, 915, 867, 905, 855, 892, 814, 878,
	927, 842, 888, 928, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	838, 885, 922, 839, 887, 243, 290, 250, 242, 458,
	933, 914, 0, 0, 940, 924, 862, 0, 890, 0,
	939, 799, 881, 0, 802, 805, 935, 918, 833, 253,
	0, 0, 0, 0, 0, 0, 0, 859, 868, 902,
	853, 0, 0, 0, 0, 0, 0, 0, 831, 0,
	877, 0, 0, 0, 810, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 813, 0, 832, 903, 0, 796, 273, 807, 360,
	235, 0, 907, 917, 854, 491, 921, 852, 851, 897,
	811, 913, 845, 329, 809, 298, 191, 209, 0, 843,
	370, 411, 417, 912, 828, 837, 233, 835, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 876, 895,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 786, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	808, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 823, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 908, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 795,
	789, 788, 299, 336, 900, 938, 383, 416, 223, 477,
	438, 818, 822, 816, 882, 817, 871, 872, 819, 929,
	930, 931, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 904, 812, 0, 820, 821, 0, 910, 919, 920,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 875, 190,
	206, 332, 934, 405, 266, 505, 485, 481, 798, 815,
	240, 826, 834, 0, 840, 848, 849, 861, 863, 864,
	865, 866, 883, 884, 886, 894, 896, 899, 901, 906,
	916, 937, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 874, 880, 343,
	259, 278, 289, 889, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 870, 898, 339, 455, 456, 285, 356,
	0, 0, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 1721,
	0, 608, 0, 0, 0, 248, 613, 0, 0, 0,
	330, 245, 0, 1722, 388, 0, 196, 0, 429, 232,
	340, 337, 461, 260, 251, 247, 231, 286, 346, 386,
	448, 380, 620, 334, 0, 0, 439, 359, 0, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 371, 440, 264, 0,
	87, 0, 0, 187, 188, 189, 681, 688, 689, 690,
	691, 692, 682, 684, 0, 0, 221, 683, 228, 631,
	633, 632, 639, 640, 641, 642, 643, 644, 645, 629,
	686, 693, 694, 0, 243, 290, 250, 242, 458, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 591, 605, 0, 619, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 775, 0, 0, 0, 665,
	0, 604, 0, 0, 612, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 360, 235,
	0, 664, 0, 0, 491, 0, 0, 662, 0, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 370,
	411, 417, 0, 0, 0, 233, 0, 415, 384, 475,
	217, 262, 408, 389, 413, 396, 265, 0, 0, 414,
	335, 463, 403, 473, 492, 493, 241, 364, 482, 452,
	488, 504, 210, 238, 378, 445, 478, 436, 357, 459,
	460, 297, 435, 271, 194, 333, 498, 208, 423, 225,
	215, 201, 447, 471, 222, 427, 0, 0, 506, 203,
	469, 444, 353, 294, 295, 202, 0, 407, 246, 269,
	236, 373, 466, 467, 234, 507, 212, 487, 205, 0,
	486, 366, 462, 470, 354, 345, 204, 468, 352, 344,
	300, 634, 635, 258, 280, 401, 338, 402, 281, 362,
	361, 363, 197, 479, 0, 198, 0, 441, 480, 508,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 377, 400, 398, 404, 0, 457, 474, 483,
	490, 496, 497, 499, 500, 501, 502, 503, 365, 283,
	437, 299, 336, 0, 0, 383, 416, 223, 477, 438,
	671, 663, 624, 675, 626, 672, 673, 621, 622, 625,
	674, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 0,
	666, 611, 610, 0, 617, 618, 0, 627, 628, 630,
	636, 637, 638, 646, 648, 649, 647, 650, 651, 652,
	655, 656, 657, 658, 653, 654, 659, 609, 190, 206,
	332, 0, 405, 266, 505, 485, 481, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 274, 279, 282, 287, 288, 291, 296, 342, 347,
	348, 349, 350, 367, 368, 369, 372, 375, 376, 379,
	381, 382, 385, 392, 393, 394, 395, 397, 399, 406,
	410, 418, 419, 420, 421, 422, 425, 426, 430, 431,
	432, 433, 434, 442, 446, 464, 465, 476, 489, 494,
	424, 275, 472, 495, 0, 341, 0, 0, 343, 259,
	278, 289, 0, 484, 443, 211, 412, 267, 200, 229,
	214, 237, 252, 255, 293, 351, 358, 387, 391, 272,
	249, 227, 409, 224, 428, 449, 450, 451, 453, 355,
	244, 390, 0, 356, 339, 455, 456, 285, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 608, 0, 0, 0, 248,
	613, 0, 0, 0, 330, 245, 0, 0, 388, 0,
	196, 0, 429, 232, 340, 337, 461, 260, 251, 247,
	231, 286, 346, 386, 448, 380, 620, 334, 0, 0,
	439, 359, 0, 0, 0, 0, 0, 615, 616, 0,
	0, 0, 0, 0, 0, 1802, 0, 292, 230, 195,
	371, 440, 264, 0, 87, 0, 0, 187, 188, 189,
	681, 688, 689, 690, 691, 692, 682, 684, 0, 0,
	221, 683, 228, 631, 633, 632, 639, 640, 641, 642,
	643, 644, 645, 629, 686, 693, 694, 1803, 243, 290,
	250, 242, 458, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 591, 605, 0, 619, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 603, 0,
	0, 0, 0, 665, 0, 604, 0, 0, 612, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 360, 235, 0, 664, 0, 0, 491, 0,
	0, 662, 0, 0, 0, 0, 329, 0, 298, 191,
	209, 0, 0, 370, 411, 417, 0, 0, 0, 233,
	0, 415, 384, 475, 217, 262, 408, 389, 413, 396,
	265, 0, 0, 414, 335, 463, 403, 473, 492, 493,
	241, 364, 482, 452, 488, 504, 210, 238, 378, 445,
	478, 436, 357, 459, 460, 297, 435, 271, 194, 333,
	498, 208, 423, 225, 215, 201, 447, 471, 222, 427,
	0, 0, 506, 203, 469, 444, 353, 294, 295, 202,
	0, 407, 246, 269, 236, 373, 466, 467, 234, 507,
	212, 487, 205, 0, 486, 366, 462, 470, 354, 345,
	204, 468, 352, 344, 300, 634, 635, 258, 280, 401,
	338, 402, 281, 362, 361, 363, 197, 479, 0, 198,
	0, 441, 480, 508, 218, 219, 220, 0, 257, 261,
	268, 270, 276, 277, 284, 331, 377, 400, 398, 404,
	0, 457, 474, 483, 490, 496, 497, 499, 500, 501,
	502, 503, 365, 283, 437, 299, 336, 0, 0, 383,
	416, 223, 477, 438, 671, 663, 624, 675, 626, 672,
	673, 621, 622, 625, 674, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 0, 666, 611, 610, 0, 617, 618,
	0, 627, 628, 630, 636, 637, 638, 646, 648, 649,
	647, 650, 651, 652, 655, 656, 657, 658, 653, 654,
	659, 609, 190, 206, 332, 0, 405, 266, 505, 485,
	481, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 347, 348, 349, 350, 367, 368, 369,
	372, 375, 376, 379, 381, 382, 385, 392, 393, 394,
	395, 397, 399, 406, 410, 418, 419, 420, 421, 422,
	425, 426, 430, 431, 432, 433, 434, 442, 446, 464,
	465, 476, 489, 494, 424, 275, 472, 495, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 484, 443, 211,
	412, 267, 200, 229, 214, 237, 252, 255, 293, 351,
	358, 387, 391, 272, 249, 227, 409, 224, 428, 449,
	450, 451, 453, 355, 244, 390, 0, 0, 339, 455,
	456, 285, 356, 0, 0, 0, 78, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 608, 0, 0, 0, 248, 613,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 620, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 87, 0, 0, 187, 188, 189, 681,
	688, 689, 690, 691, 692, 682, 684, 0, 0, 221,
	683, 228, 631, 633, 632, 639, 640, 641, 642, 643,
	644, 645, 629, 686, 693, 694, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 591, 605, 0, 619, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 603, 0, 0,
	0, 0, 665, 0, 604, 0, 0, 612, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 664, 0, 0, 491, 0, 0,
	662, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 634, 635, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 671, 663, 624, 675, 626, 672, 673,
	621, 622, 625, 674, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 666, 611, 610, 0, 617, 618, 0,
	627, 628, 630, 636, 637, 638, 646, 648, 649, 647,
	650, 651, 652, 655, 656, 657, 658, 653, 654, 659,
	609, 190, 206, 332, 86, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 608, 0,
	0, 0, 248, 613, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 620,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 87, 0, 0,
	187, 188, 189, 681, 688, 689, 690, 691, 692, 682,
	684, 0, 0, 221, 683, 228, 631, 633, 632, 639,
	640, 641, 642, 643, 644, 645, 629, 686, 693, 694,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 591, 605,
	0, 619, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 603, 0, 0, 0, 0, 665, 0, 604, 0,
	0, 612, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 664, 0,
	0, 491, 0, 0, 662, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 2829, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 634, 635,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 671, 663, 624,
	675, 626, 672, 673, 621, 622, 625, 674, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 666, 611, 610,
	0, 617, 618, 0, 627, 628, 630, 636, 637, 638,
	646, 648, 649, 647, 650, 651, 652, 655, 656, 657,
	658, 653, 654, 659, 609, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 608, 0, 0, 0, 248, 613, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 620, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 615, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 87, 0, 1301, 187, 188, 189, 681, 688, 689,
	690, 691, 692, 682, 684, 0, 0, 221, 683, 228,
	631, 633, 632, 639, 640, 641, 642, 643, 644, 645,
	629, 686, 693, 694, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 591, 605, 0, 619, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 0, 0, 0, 0,
	665, 0, 604, 0, 0, 612, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 664, 0, 0, 491, 0, 0, 662, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 634, 635, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 671, 663, 624, 675, 626, 672, 673, 621, 622,
	625, 674, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 666, 611, 610, 0, 617, 618, 0, 627, 628,
	630, 636, 637, 638, 646, 648, 649, 647, 650, 651,
	652, 655, 656, 657, 658, 653, 654, 659, 609, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 608, 0, 0, 0,
	248, 613, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 620, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 87, 0, 0, 187, 188,
	189, 681, 688, 689, 690, 691, 692, 682, 684, 0,
	0, 221, 683, 228, 631, 633, 632, 639, 640, 641,
	642, 643, 644, 645, 629, 686, 693, 694, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 591, 605, 0, 619,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 603,
	775, 0, 0, 0, 665, 0, 604, 0, 0, 612,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 664, 0, 0, 491,
	0, 0, 662, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 634, 635, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 671, 663, 624, 675, 626,
	672, 673, 621, 622, 625, 674, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 666, 611, 610, 0, 617,
	618, 0, 627, 628, 630, 636, 637, 638, 646, 648,
	649, 647, 650, 651, 652, 655, 656, 657, 658, 653,
	654, 659, 609, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	608, 0, 0, 0, 248, 613, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 620, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 87,
	0, 0, 187, 188, 189, 681, 688, 689, 690, 691,
	692, 682, 684, 0, 0, 221, 683, 228, 631, 633,
	632, 639, 640, 641, 642, 643, 644, 645, 629, 686,
	693, 694, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	591, 605, 0, 619, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 603, 0, 0, 0, 0, 665, 0,
	604, 0, 0, 612, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	664, 0, 0, 491, 0, 0, 662, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	634, 635, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 671,
	663, 624, 675, 626, 672, 673, 621, 622, 625, 674,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 666,
	611, 610, 0, 617, 618, 0, 627, 628, 630, 636,
	637, 638, 646, 648, 649, 647, 650, 651, 652, 655,
	656, 657, 658, 653, 654, 659, 609, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 608, 0, 0, 0, 248, 613,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 620, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 87, 0, 0, 187, 188, 189, 681,
	688, 689, 690, 691, 692, 682, 684, 0, 0, 221,
	683, 228, 631, 633, 632, 639, 640, 641, 642, 643,
	644, 645, 629, 686, 693, 694, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 0, 619, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 603, 0, 0,
	0, 0, 665, 0, 604, 0, 0, 612, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 664, 0, 0, 491, 0, 0,
	662, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 634, 635, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 671, 663, 624, 675, 626, 672, 673,
	621, 622, 625, 674, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 666, 611, 610, 0, 617, 618, 0,
	627, 628, 630, 636, 637, 638, 646, 648, 649, 647,
	650, 651, 652, 655, 656, 657, 658, 653, 654, 659,
	609, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 688, 689, 0, 0, 0, 0,
	1639, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 988, 491, 0, 0, 0, 0,
	0, 985, 986, 329, 948, 298, 191, 209, 979, 983,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 1320, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 1322, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 1156, 0, 1157, 1158, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 1263, 1266, 0, 0, 0,
	0, 1262, 1265, 0, 0, 221, 1261, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 0, 339, 455, 456, 285, 356, 0, 0,
	0, 78, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 330, 245,
	0, 0, 388, 0, 196, 0, 429, 232, 340, 337,
	461, 260, 251, 247, 231, 286, 346, 386, 448, 380,
	0, 334, 0, 0, 439, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 371, 440, 264, 0, 87, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 0, 0, 0,
	0, 0, 243, 290, 250, 242, 458, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 360, 235, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 298, 191, 209, 0, 0, 370, 411, 417,
	0, 0, 0, 233, 0, 415, 384, 475, 217, 262,
	408, 389, 413, 396, 265, 0, 0, 414, 335, 463,
	403, 473, 492, 493, 241, 364, 482, 452, 488, 504,
	210, 238, 378, 445, 478, 436, 357, 459, 460, 297,
	435, 271, 194, 333, 498, 208, 423, 225, 215, 201,
	447, 471, 222, 427, 0, 0, 506, 203, 469, 444,
	353, 294, 295, 202, 0, 407, 246, 269, 236, 373,
	466, 467, 234, 507, 212, 487, 205, 0, 486, 366,
	462, 470, 354, 345, 204, 468, 352, 344, 300, 319,
	320, 258, 280, 401, 338, 402, 281, 362, 361, 363,
	197, 479, 0, 198, 0, 441, 480, 508, 218, 219,
	220, 0, 257, 261, 268, 270, 276, 277, 284, 331,
	377, 400, 398, 404, 0, 457, 474, 483, 490, 496,
	497, 499, 500, 501, 502, 503, 365, 283, 437, 299,
	336, 0, 0, 383, 416, 223, 477, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 0, 190, 206, 332, 86,
	405, 266, 505, 485, 481, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 347, 348, 349,
	350, 367, 368, 369, 372, 375, 376, 379, 381, 382,
	385, 392, 393, 394, 395, 397, 399, 406, 410, 418,
	419, 420, 421, 422, 425, 426, 430, 431, 432, 433,
	434, 442, 446, 464, 465, 476, 489, 494, 424, 275,
	472, 495, 0, 341, 0, 0, 343, 259, 278, 289,
	0, 484, 443, 211, 412, 267, 200, 229, 214, 237,
	252, 255, 293, 351, 358, 387, 391, 272, 249, 227,
	409, 224, 428, 449, 450, 451, 453, 355, 244, 390,
	0, 0, 339, 455, 456, 285, 356, 0, 0, 0,
	78, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 87, 0, 1301,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 86, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 1743, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 1741,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 948, 298,
	191, 209, 946, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 1743,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 1301, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 2759, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 87, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 2052, 0, 0, 0, 2053, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 1345, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 2843, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 2759,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 87, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 1590, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 1467, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 1465, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 1463, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 1461, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 1459,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 1455, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 1453, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 1451, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 1428, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 1329, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 367, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 1133, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 757, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 582, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 356, 339, 455, 456,
	285, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 388, 0, 196, 0, 429, 232, 340, 337, 461,
	260, 251, 247, 231, 286, 346, 386, 448, 380, 0,
	334, 0, 0, 439, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 371, 440, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 458, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 360, 235, 0, 0, 530,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 370, 411, 417, 0,
	0, 0, 233, 0, 415, 384, 475, 217, 262, 408,
	389, 413, 396, 265, 0, 0, 414, 335, 463, 403,
	473, 492, 493, 241, 364, 482, 452, 488, 504, 210,
	238, 378, 445, 478, 436, 357, 459, 460, 297, 435,
	271, 194, 333, 498, 208, 423, 225, 215, 201, 447,
	471, 222, 427, 0, 0, 506, 203, 469, 444, 353,
	294, 295, 202, 0, 407, 246, 269, 236, 373, 466,
	467, 234, 507, 212, 487, 205, 0, 486, 366, 462,
	470, 354, 345, 204, 468, 352, 344, 300, 319, 320,
	258, 280, 401, 338, 402, 281, 362, 361, 363, 197,
	479, 0, 198, 0, 441, 480, 508, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 377,
	400, 398, 404, 0, 457, 474, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 365, 283, 437, 299, 336,
	0, 0, 383, 416, 223, 477, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 405,
	266, 505, 485, 481, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 347, 348, 349, 350,
	367, 368, 369, 372, 375, 376, 379, 381, 382, 385,
	392, 393, 394, 395, 397, 399, 406, 410, 418, 419,
	420, 421, 422, 425, 426, 430, 431, 432, 433, 434,
	442, 446, 464, 465, 476, 489, 494, 424, 275, 472,
	495, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	484, 443, 211, 412, 267, 200, 229, 214, 237, 252,
	255, 293, 351, 358, 387, 391, 272, 249, 227, 409,
	224, 428, 449, 450, 451, 453, 355, 244, 390, 0,
	356, 339, 455, 456, 285, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 388, 0, 196, 0, 429,
	232, 340, 337, 461, 260, 251, 247, 231, 286, 346,
	386, 448, 380, 0, 334, 0, 0, 439, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 371, 440, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 458,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 360,
	235, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	370, 411, 417, 0, 0, 0, 233, 0, 415, 384,
	475, 217, 262, 408, 389, 413, 396, 265, 0, 0,
	414, 335, 463, 403, 473, 492, 493, 241, 364, 482,
	452, 488, 504, 210, 238, 378, 445, 478, 436, 357,
	459, 460, 297, 435, 271, 194, 333, 498, 208, 423,
	225, 215, 201, 447, 471, 222, 427, 0, 0, 506,
	203, 469, 444, 353, 294, 295, 202, 0, 407, 246,
	269, 236, 373, 466, 467, 234, 507, 212, 487, 205,
	0, 486, 366, 462, 470, 354, 345, 204, 468, 352,
	344, 300, 319, 320, 258, 280, 401, 338, 402, 281,
	362, 361, 363, 197, 479, 0, 198, 0, 441, 480,
	508, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 377, 400, 398, 404, 0, 457, 474,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 365,
	283, 437, 299, 336, 0, 0, 383, 416, 223, 477,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 405, 266, 505, 485, 481, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	347, 348, 349, 350, 2848, 368, 369, 372, 375, 376,
	379, 381, 382, 385, 392, 393, 394, 395, 397, 399,
	406, 410, 418, 419, 420, 421, 422, 425, 426, 430,
	431, 432, 433, 434, 442, 446, 464, 465, 476, 489,
	494, 424, 275, 472, 495, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 484, 443, 211, 412, 267, 200,
	229, 214, 237, 252, 255, 293, 351, 358, 387, 391,
	272, 249, 227, 409, 224, 428, 449, 450, 451, 453,
	355, 244, 390, 0, 356, 339, 455, 456, 285, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 388,
	0, 196, 0, 429, 232, 340, 337, 461, 260, 251,
	247, 231, 286, 346, 386, 448, 380, 0, 334, 0,
	0, 439, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 371, 440, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 458, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 360, 235, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 370, 411, 417, 0, 0, 0,
	233, 0, 415, 384, 475, 217, 262, 408, 389, 413,
	396, 265, 0, 0, 414, 335, 463, 403, 473, 492,
	493, 241, 364, 482, 452, 488, 504, 210, 238, 378,
	445, 478, 436, 357, 459, 460, 297, 435, 271, 194,
	333, 498, 208, 423, 225, 215, 201, 447, 471, 222,
	427, 0, 0, 506, 203, 469, 444, 353, 294, 295,
	202, 0, 407, 246, 269, 236, 373, 466, 467, 234,
	507, 212, 487, 205, 0, 486, 366, 462, 470, 354,
	345, 204, 468, 352, 344, 300, 319, 320, 258, 280,
	401, 338, 402, 281, 362, 361, 363, 197, 479, 0,
	198, 0, 441, 480, 508, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 377, 400, 398,
	404, 0, 457, 474, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 365, 283, 437, 299, 336, 0, 0,
	383, 416, 223, 477, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 405, 266, 505,
	485, 481, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 347, 348, 349, 350, 367, 368,
	369, 372, 375, 376, 379, 381, 382, 385, 392, 393,
	394, 395, 397, 399, 406, 410, 418, 419, 420, 421,
	422, 425, 426, 430, 431, 432, 433, 434, 442, 446,
	464, 465, 476, 489, 494, 424, 275, 472, 495, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 484, 443,
	211, 412, 267, 200, 229, 214, 237, 252, 255, 293,
	351, 358, 387, 391, 272, 249, 227, 409, 224, 428,
	449, 450, 451, 453, 355, 244, 390, 0, 356, 339,
	455, 456, 285, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 388, 0, 196, 0, 429, 232, 340,
	337, 461, 260, 251, 247, 231, 286, 346, 386, 448,
	380, 0, 334, 0, 0, 439, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 371, 440, 264, 0, 0,
	0, 0, 187, 2503, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 458, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 360, 235, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 370, 411,
	417, 0, 0, 0, 233, 0, 415, 384, 475, 217,
	262, 408, 389, 413, 396, 265, 0, 0, 414, 335,
	463, 403, 473, 492, 493, 241, 364, 482, 452, 488,
	504, 210, 238, 378, 445, 478, 436, 357, 459, 460,
	297, 435, 271, 194, 333, 498, 208, 423, 225, 215,
	201, 447, 471, 222, 427, 0, 0, 506, 203, 469,
	444, 353, 294, 295, 202, 0, 407, 246, 269, 236,
	373, 466, 467, 234, 507, 212, 487, 205, 0, 486,
	366, 462, 470, 354, 345, 204, 468, 352, 344, 300,
	319, 320, 258, 280, 401, 338, 402, 281, 362, 361,
	363, 197, 479, 0, 198, 0, 441, 480, 508, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 377, 400, 398, 404, 0, 457, 474, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 365, 283, 437,
	299, 336, 0, 0, 383, 416, 223, 477, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 405, 266, 505, 485, 481, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 347, 348,
	349, 350, 367, 368, 369, 372, 375, 376, 379, 381,
	382, 385, 392, 393, 394, 395, 397, 399, 406, 410,
	418, 419, 420, 421, 422, 425, 426, 430, 431, 432,
	433, 434, 442, 446, 464, 465, 476, 489, 494, 424,
	275, 472, 495, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 484, 443, 211, 412, 267, 200, 229, 214,
	237, 252, 255, 293, 351, 358, 387, 391, 272, 249,
	227, 409, 224, 428, 449, 450, 451, 453, 355, 244,
	390, 0, 356, 339, 455, 456, 285, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 388, 0, 196,
	0, 429, 232, 340, 337, 461, 260, 251, 247, 231,
	286, 346, 386, 448, 380, 0, 334, 0, 0, 439,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 371,
	440, 264, 0, 0, 0, 0, 187, 2048, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 458, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 360, 235, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 370, 411, 417, 0, 0, 0, 233, 0,
	415, 384, 475, 217, 262, 408, 389, 413, 396, 265,
	0, 0, 414, 335, 463, 403, 473, 492, 493, 241,
	364, 482, 452, 488, 504, 210, 238, 378, 445, 478,
	436, 357, 459, 460, 297, 435, 271, 194, 333, 498,
	208, 423, 225, 215, 201, 447, 471, 222, 427, 0,
	0, 506, 203, 469, 444, 353, 294, 295, 202, 0,
	407, 246, 269, 236, 373, 466, 467, 234, 507, 212,
	487, 205, 0, 486, 366, 462, 470, 354, 345, 204,
	468, 352, 344, 300, 319, 320, 258, 280, 401, 338,
	402, 281, 362, 361, 363, 197, 479, 0, 198, 0,
	441, 480, 508, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 377, 400, 398, 404, 0,
	457, 474, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 365, 283, 437, 299, 336, 0, 0, 383, 416,
	223, 477, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 405, 266, 505, 485, 481,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 347, 348, 349, 350, 367, 368, 369, 372,
	375, 376, 379, 381, 382, 385, 392, 393, 394, 395,
	397, 399, 406, 410, 418, 419, 420, 421, 422, 425,
	426, 430, 431, 432, 433, 434, 442, 446, 464, 465,
	476, 489, 494, 424, 275, 472, 495, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 484, 443, 211, 412,
	267, 200, 229, 214, 237, 252, 255, 293, 351, 358,
	387, 391, 272, 249, 227, 409, 224, 428, 449, 450,
	451, 453, 355, 244, 390, 0, 0, 339, 455, 456,
	285,
}

var yyPact = [...]int{
	5981, -1000, -404, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1916, 1959, -1000, -1000,
	-1000, -1000, 2061, -1000, 695, 1650, -1000, 1900, 4508, -1000,
	39190, 440, -1000, 38022, 437, 97, 39190, -1000, 151, -1000,
	141, 39190, 150, 37438, -1000, -1000, -312, 16404, 1841, 15,
	10, 39190, -1000, -1000, -1000, -1000, 2022, 1591, -1000, 298,
	-1000, -1000, -1000, -1000, -1000, -1000, 36854, -1000, -1000, -1000,
	1914, 1895, 2064, 565, 1839, -1000, 1975, 1591, -1000, 16404,
	2015, 1951, 15820, -1000, 15820, 377, -1000, -1000, 12306, -1000,
	-1000, 21670, 39190, 27510, 272, -1000, 1900, -1000, -1000, 357,
	-1000, 277, 1531, -1000, 1530, -1000, 678, 633, 314, 421,
	419, 312, 311, 307, 305, 304, 295, 294, 291, 318,
	-1000, 582, 582, -197, -199, 2616, 363, 363, 363, 398,
	1872, 1863, -1000, 609, -1000, 582, 582, 582, 355, 582,
	582, 582, 582, 255, 253, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 339, 1900, 241, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39190, 142,
	39190, -1000, 488, 39190, 713, 713, 35, 713, 713, 713,
	713, 148, 556, 4, -1000, 136, 243, 115, 235, 743,
	132, 130, -1000, -1000, 236, 743, 1121, 568, 99, -1000,
	713, 9950, 9950, 9950, -1000, 1894, -1000, -1000, -1000, -1000,
	-1000, -1000, 928, -1000, 397, -1000, -1000, -1000, -1000, 39190,
	36270, 308, 607, -1000, -1000, -1000, 46, -1000, -1000, 1260,
	963, 16404, 865, -1000, 1131, 534, -1000, -1000, -1000, -1000,
	-1000, 472, 16988, 16988, 16988, 16988, -1000, -1000, 1539, 1539,
	1539, 1539, 16988, 1539, 16988, 1539, 1539, 1539, 1539, 16404,
	1539, 1539, 1539, -1000, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 487, 1539, 1539, 1539, 1539, 1539, -1000, -1000, -1000,
	-1000, 1539, 1539, 1539, 1539, 1539, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19324, -1000, 14068, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 39190, -1000, 1539,
	163, 39190, 39190, 301, 1975, 1591, -1000, 2022, 2003, 298,
	-1000, 2094, 1544, 1607, 932, 1591, 1468, 39190, -1000, 1550,
	-1000, -1000, -1000, 1762, 1047, 1119, -1000, -1000, -1000, -1000,
	1314, 16404, -1000, -1000, 2045, -1000, 18740, 486, 805, 2043,
	35686, -1000, 377, 377, 1511, 11717, -11, -1000, -1000, -1000,
	600, 25174, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1894, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1488, 39190, -1000, -1000, 4105, 1063, -1000, 1647, -1000,
	1440, -1000, 1602, 16404, 1644, 433, 1063, 408, 407, 404,
	-1000, -88, -1000, -1000, -1000, -1000, -1000, 582, 582, -1000,
	315, 2009, 4508, 5729, -1000, -1000, -1000, 35102, 1645, 1063,
	-1000, 1641, -1000, 732, 464, 499, 499, 1063, -1000, -1000,
	39190, 1063, 720, 708, 39190, 39190, -1000, 34518, -1000, 33934,
	33350, 991, 39190, 32766, 32182, 31598, 31014, 30430, -1000, 1726,
	-1000, 1657, -1000, -1000, -1000, 39190, 39190, 39190, 324, -1000,
	-1000, 39190, 1063, -1000, -1000, 978, 977, 975, 582, 582,
	973, 1118, 1117, 1116, 582, 582, 972, 1114, 26342, 1113,
	225, 969, 927, 926, 1028, 1112, 171, 1111, 1005, 968,
	900, 39190, 1638, 39190, -1000, 226, 653, 370, 596, 1900,
	1835, 1509, 394, 416, 1063, 366, 366, 39190, -1000, 10539,
	-1000, -1000, 1108, 16404, -1000, 746, 743, 743, -1000, -1000,
	-1000, -1000, -1000, -1000, 713, 39190, 746, -1000, -1000, -1000,
	743, 713, 39190, 713, 713, 713, 713, 743, 743, 743,
	713, 39190, 39190, 39190, 39190, 39190, 39190, 39190, 39190, 39190,
	9950, 9950, 9950, 568, 713, -320, -1000, 1105, -1000, 1733,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 149,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -101,
	1503, 29846, -1000, -321, -322, -323, -325, -1000, -1000, -1000,
	-326, -327, -1000, -1000, -1000, 16404, 16404, 16404, 16404, -220,
	-1000, 819, 16988, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	832, 621, 16988, 16988, 16988, 16988, 16988, 16988, 16988, 16988,
	16988, 16988, 16988, 16988, 16988, 16988, 16988, 679, 6152, 6152,
	534, 534, 534, 534, -1000, 15820, 16404, 16404, 534, -1000,
	1063, 29262, 15820, 15820, 16404, 1880, 622, 963, 39190, -1000,
	932, -1000, -1000, -1000, 876, -1000, 39190, 39190, 411, 16404,
	16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404,
	16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404,
	16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 12895,
	10539, 15820, 15820, 15820, 15820, 15820, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 484, 1217,
	1289, 1318, -1000, 1493, -1000, -165, 21086, 16404, 1097, 2039,
	1683, 39190, -1000, -1000, -1000, 1975, -1000, 1975, 1217, 1968,
	1772, 15820, -1000, -1000, 1968, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1244, -1000, 39190, 1468, 1945, 39190, 1760,
	1095, 292, -1000, 16404, 16404, 1452, -1000, 1371, 39190, -1000,
	-220, -1000, 28678, -1000, -1000, 9361, -1000, 39190, 280, 39190,
	-1000, 23422, 28094, 11128, -11, -1000, 11128, 1397, -1000, -22,
	-27, 13479, 481, -1000, -1000, -1000, 2616, 18156, 1216, 481,
	64, -1000, -1000, -1000, 1602, -1000, 1602, 1602, 1602, 1602,
	292, 292, 292, 292, -1000, -1000, -1000, -1000, -1000, 1633,
	1632, -1000, 1602, 1602, 1602, 1602, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1629, 1629, 1629, 1608, 1608, 358, -1000,
	16404, 169, 27510, 1919, 899, 1466, 226, 374, 1676, 1063,
	1063, 1063, 374, -1000, 1082, 1073, -1000, -396, 1448, -1000,
	-1000, 2006, -1000, -1000, 730, 775, 752, 482, 39190, 184,
	274, -1000, 345, -1000, 27510, 1063, 685, 499, 1063, -1000,
	1063, -1000, -1000, -1000, -1000, -1000, 1063, 1433, -1000, 1392,
	836, 749, 788, 726, 1433, -1000, -1000, -129, 1433, -1000,
	1433, -1000, 1433, -1000, 1433, -1000, 1433, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 642, 39190, 184, 679, -1000,
	388, -1000, -1000, -1000, 679, 679, -1000, -1000, -1000, -1000,
	1093, 1092, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -383, 39190, -1000, 214, 593, 264, 303, 289, 39190,
	194, 1957, 212, 251, 39190, 39190, 366, 1730, 39190, 1925,
	39190, -1000, -1000, -1000, -1000, -1000, 963, 39190, -1000, -1000,
	713, 713, -1000, -1000, 39190, 713, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 713, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 39190, 39190, -1000, -1000, -1000, -1000, -1000, 98,
	-28, 252, -1000, -1000, -1000, -1000, -1000, 1971, -1000, 963,
	706, 630, -1000, 1539, -1000, -1000, 833, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 832, 16988, 16988, 16988, 1492, 422,
	869, 919, 886, 719, 719, 822, 822, 546, 546, 546,
	546, 546, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1089, -1000, 1407, -1000, 1704, 1182, 932, -1000, 1407, 1407,
	1261, 15820, -1000, -1000, 672, -1000, 16404, 932, -1000, -1000,
	932, 932, 1429, 1418, 2033, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1567, 1466, 1466, 1466,
	1807, 1777, 932, 1260, 932, 1415, -1000, 1771, 1466, 1724,
	1716, 1694, 1382, 1686, 1682, 1665, 1466, 1466, 1466, 1298,
	1661, 1656, 1639, 1630, 1599, 1587, 1578, 1572, 1540, 1466,
	932, 15820, 15820, 1401, 1539, 483, -1000, 1407, 932, 932,
	1407, 1407, 10539, 932, -1000, 39190, -1000, -309, -1000, -46,
	632, 1539, -1000, 26342, 932, -1000, 5501, -1000, 40358, -1000,
	-1000, -1000, -1000, -1000, 24590, 1508, 1968, -1000, -1000, 1539,
	1438, -1000, -1000, 292, 52, 24006, -1000, -1000, 963, 963,
	16404, -1000, -1000, -1000, -1000, -1000, -1000, 478, 2029, 300,
	1539, -1000, 1295, 1774, -1000, -1000, -1000, 1944, 19913, -1000,
	1539, 39190, 1519, 1224, -1000, 477, -1000, 1397, -11, -49,
	-1000, -1000, -1000, -1000, 963, -1000, 1068, 282, 322, -1000,
	347, -1000, -1000, -1000, -1000, 1850, 40, -1000, -1000, -1000,
	292, 292, -1000, -1000, -1000, -1000, -1000, -1000, 1088, 1088,
	-1000, -1000, -1000, -1000, -1000, 897, -1000, -1000, -1000, 885,
	-1000, -1000, 1557, 1721, 169, -1000, -1000, 582, 1087, -1000,
	-1000, 1856, 582, 582, 39190, -1000, -1000, 1192, 1919, 214,
	39190, 625, 1727, -1000, 1676, 1676, 1676, 39190, -1000, -1000,
	-1000, -1000, -385, 58, 313, -1000, -1000, -1000, 3015, 39190,
	1422, -1000, 168, -1000, 1176, -1000, 39190, -1000, 1411, 1626,
	1063, 1063, -1000, -1000, -1000, 39190, 1539, -1000, -1000, -1000,
	-1000, 414, 1899, 1882, 184, 168, 481, 1063, -1000, -1000,
	-1000, -1000, -1000, -386, 1409, 402, 172, 256, 39190, 39190,
	39190, 39190, 39190, 458, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 247, 385, -1000, 39190, 39190, 623, -1000, -1000,
	-1000, 743, -1000, -1000, 743, -1000, -1000, -1000, -1000, -1000,
	1883, 39190, -32, -346, -1000, -343, 16404, -1000, -1000, -1000,
	-1000, 1209, 410, 869, 16988, 16988, 15820, -119, 234, 234,
	679, -1000, -1000, -1000, 16404, 16404, 1365, 612, -1000, 16404,
	923, -1000, -1000, -1000, 16404, 16404, 16404, 932, 258, -1000,
	-1000, -1000, 16404, 16404, -1000, -1000, 16404, 16404, -1000, 16404,
	16404, 17572, 932, 17572, 16404, 16404, 17572, -1000, -1000, -1000,
	-1000, 17572, 16404, 16404, 16404, 16404, 16404, 16404, 16404, 16404,
	16404, -1000, -1000, 1407, 1407, 15820, 10539, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 632, -1000, 499,
	499, 499, 39190, -1000, -1000, -1000, -1000, -1000, -1000, 1383,
	1964, -1000, 1796, 1795, 2031, 2029, -1000, 23422, 1968, -1000,
	-1000, 39190, -304, -1000, 1829, 1830, -1000, -1000, -1000, -1000,
	8772, 1975, 16404, 1722, 39190, 1539, -1000, 20502, 39190, 39190,
	23422, 23422, 23422, 23422, 23422, -1000, 1753, 1749, -1000, 1766,
	1764, 1798, 39190, -1000, 1405, 932, 2003, 19913, 16404, 22254,
	1311, 23422, -1000, -1000, 23422, 39190, 8183, -1000, -1000, -37,
	-52, -1000, -1000, -1000, -1000, 2616, -1000, -1000, 508, 1937,
	1847, -1000, -1000, -1000, -1000, 1386, -1000, 1340, 1367, 1331,
	120, -1000, 1635, 1881, 582, 582, -1000, 877, -1000, 1063,
	1077, 1067, -1000, -1000, -1000, 382, -1000, 1922, 39190, 1711,
	1710, 1707, -1000, -394, 875, 1624, 1583, 16404, 1618, 2005,
	1308, 39190, -1000, -1000, 39190, -1000, 273, -1000, 169, 39190,
	-1000, -1000, -1000, 274, 39190, -1000, 6602, 168, -1000, -1000,
	-1000, -1000, -1000, -1000, 39190, 224, -1000, 1615, 837, -1000,
	-1000, 1664, -1000, -1000, -1000, -1000, 155, 263, -1000, 39190,
	547, 1721, 39190, -1000, -1000, -1000, 713, 713, -1000, -1000,
	1877, -1000, 1063, 1466, 16988, 16988, -1000, 534, -1000, 1539,
	932, 1602, 1602, -1000, 1602, 1608, -1000, 1602, 121, 1602,
	119, 1602, -1000, -1000, 932, 932, 1146, 1218, -95, -1000,
	963, 16404, 1536, 1527, 1466, -1000, 1598, 1596, 1466, 1466,
	-1000, 963, 1382, 1507, 1268, -1000, -1000, -1000, -1000, 1342,
	1466, 1486, -302, 932, 1322, 1322, 1322, 1322, 1322, 1318,
	1318, 1318, 1318, -1000, -1000, 932, -1000, -1000, 1967, 1967,
	1967, 1305, 39774, 39190, -1000, -1000, -1000, -1000, 2029, 2023,
	1333, -1000, -1000, 52, 378, -1000, 1818, 1830, -1000, 1997,
	1821, 1995, -1000, -1000, -1000, 963, -1000, 1905, 1491, -1000,
	592, 1257, -1000, -1000, 15236, 1315, 1788, 476, 1305, 1460,
	1774, 1669, 1703, 1888, -1000, -1000, -1000, -1000, 1747, -1000,
	1746, -1000, -1000, 1550, -1000, -1000, 1289, 1480, 280, 23422,
	1243, 1243, -1000, 475, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 721, 6307, 2063, -1000, 1055, -1000, 1027, -1000, 669,
	666, -1000, 39190, 1594, -1000, 292, 1054, 292, 868, -1000,
	867, -1000, -1000, -236, -1000, -1000, 1614, 1706, -1000, -1000,
	-1000, -1000, 39190, -1000, -1000, 39190, 39190, 39190, 1593, 1992,
	-1000, 16404, 1582, 586, 1476, 39190, 39190, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 381, 582, -356,
	250, 249, 582, 582, 582, -1000, -1000, 1293, 1291, -1000,
	-187, -1000, 16404, -1000, -1000, -1000, 881, 881, -1000, 1550,
	-1000, -1000, -1000, 1147, -1000, -1000, -131, 39190, 39190, 39190,
	39190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 534, 16988, -1000, -1000, 292, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 16404, -1000, 16404, -1000, 1975,
	1049, 963, 16404, 16404, -1000, 852, 851, -1000, -1000, 932,
	17572, -1000, 17572, -1000, 16404, 216, 234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1539, 1858,
	1539, 1539, 22254, -1000, -1000, 2023, 2025, 1985, 1801, 1808,
	1808, 1818, -1000, 1983, 1982, -1000, 1048, 1981, 1046, 646,
	-1000, 39190, 16404, 1539, -1000, 310, 39190, 1539, 39190, -1000,
	2020, -1000, -1000, 16404, 1581, -1000, 16404, -1000, -1000, -1000,
	-1000, -1000, 6152, 2029, 1243, -1000, -1000, 552, -1000, 16404,
	-1000, -1000, -1000, 3314, -1000, -1000, -1000, -1000, -1000, 1553,
	16404, -1000, -1000, -1000, 1142, 1138, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1550, -1000, -1000, -1000, -1000, 274,
	-393, 1472, 39190, 848, -1000, 1270, 1308, 261, 1539, 1036,
	582, 582, 582, 846, 845, 26342, 337, -1000, 274, -1000,
	-200, -201, 1466, -1000, -1000, 1934, -1000, -1000, 10539, -1000,
	-1000, 1545, 1666, -1000, 278, -1000, 1466, 1466, 932, -1000,
	1466, 1466, 1136, 1033, -1000, 1268, -1000, 903, -1000, 216,
	932, 1701, -1000, -1000, 6152, -1000, 22838, -1000, 1980, 1977,
	26926, 26926, 632, 2025, -1000, 16404, 16404, 1780, 842, -1000,
	-1000, -1000, -1000, 1035, 1022, -1000, 1004, -1000, 2057, -1000,
	963, -1000, 1539, -1000, 457, 1257, -1000, 1975, 963, 39190,
	963, 34, 2020, -1000, 1466, -1000, 1539, 1539, 1539, 1539,
	1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 1539, 1539, 1539, 1539, 39190, 1320, -1000, -1000, 1928,
	1254, 53, -1000, 1252, -1000, -1000, 456, -1000, 16404, -1000,
	26342, 1000, 999, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 298, 1263, -1000, 573, 39190, 39190, 932, 260, -150,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16404,
	-1000, 932, 1700, -1000, -244, -1000, 1239, -1000, -1000, -1000,
	-1000, -1000, 1239, 1239, -1000, -1000, 963, 1260, -1000, 834,
	-1000, -1000, -1000, -1000, -1000, 39190, 1257, 39190, -1000, 1234,
	932, 1539, 1975, -1000, 1213, -1000, 298, -1000, 1538, 1583,
	-1000, -1000, -1000, 14652, -1000, -1000, -1000, -1000, -130, 10539,
	7594, 1211, -1000, -1000, 1720, -127, -185, 1382, -1000, -333,
	-1000, -1000, 25758, -1000, -1000, -1000, -1000, -1000, 1221, -1000,
	-1000, 22254, 38606, -1000, 1693, 808, -130, 16404, 1372, 932,
	-1000, -38, -1000, -1000, -1000, -1000, -1000, 1664, -1000, 1708,
	-1000, 932, -1000, -1000, -1000, 1174, -1000, 3362, -265, 1691,
	1685, 2055, -1000, -1000, -1000, 687, 905, -1000, -1000, -1000,
	-1000, 1096, 39190, -1000, 356, -1000, -1000, -131, -145, -1000,
	-1000, 38606, -260, 481, 6152, -1000, -1000, 2052, -1000, 2048,
	563, 563, -1000, -1000, -401, 1129, 220, -1000, -179, -1000,
	-1000, 1918, 34, -1000, -1000, -1000, 352, 925, -1000, -1000,
	830, -401, -1000, -193, -266, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6152, 198, 198, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2378, 2377, 26, 4, 2376, 2375, 2374, 44, 95,
	172, 28, 173, 102, 2372, 2370, 2369, 2367, 2366, 2365,
	2364, 209, 207, 205, 2362, 2361, 2360, 2359, 2357, 2354,
	2353, 2352, 2351, 2350, 203, 161, 171, 2349, 2347, 2346,
	115, 162, 84, 86, 164, 2345, 2344, 77, 2343, 2342,
	2341, 197, 167, 724, 2339, 166, 110, 35, 2338, 2337,
	2336, 2335, 2334, 2333, 2332, 2331, 2330, 2329, 2328, 2327,
	2326, 2325, 2324, 2323, 2322, 305, 2321, 2320, 18, 2319,
	79, 2318, 2316, 2314, 132, 2312, 2311, 2309, 2305, 2303,
	2301, 2300, 137, 2299, 2298, 2297, 2296, 177, 2295, 2294,
	210, 107, 103, 2293, 2291, 92, 169, 2290, 108, 2287,
	2286, 2285, 150, 2282, 3898, 2281, 68, 67, 2278, 66,
	88, 55, 43, 5, 3, 2277, 2276, 60, 91, 2274,
	99, 58, 2273, 97, 104, 2272, 2271, 11, 7, 2270,
	9, 6, 2, 69, 2269, 2268, 105, 2267, 2266, 2265,
	96, 2264, 2263, 4258, 2262, 89, 133, 100, 75, 2261,
	33, 59, 2260, 2259, 2258, 2257, 2253, 40, 2252, 2250,
	2247, 144, 30, 156, 29, 65, 47, 141, 2246, 127,
	78, 2243, 139, 2241, 2240, 46, 31, 53, 2239, 49,
	129, 117, 27, 93, 146, 2238, 2236, 63, 74, 2235,
	2234, 2231, 2230, 2229, 2228, 73, 2227, 41, 2226, 176,
	2225, 14, 2224, 39, 37, 2220, 70, 125, 71, 23,
	2217, 195, 2216, 50, 155, 128, 153, 2215, 2212, 2211,
	170, 245, 2210, 2209, 81, 160, 140, 145, 2208, 249,
	2205, 2197, 94, 1456, 2065, 25, 158, 2196, 2192, 2833,
	138, 34, 19, 2191, 121, 2183, 2182, 2176, 178, 159,
	101, 951, 52, 2172, 2171, 16, 2169, 2167, 2166, 2165,
	2164, 2156, 85, 2155, 2153, 2152, 179, 61, 8, 154,
	76, 2150, 2148, 2137, 120, 83, 2136, 152, 151, 123,
	181, 2135, 168, 147, 106, 2130, 119, 2128, 2126, 2125,
	2124, 2123, 90, 2121, 2120, 2114, 2113, 149, 143, 118,
	80, 2112, 82, 116, 148, 157, 38, 2111, 32, 2110,
	2109, 2104, 163, 24, 2101, 13, 48, 42, 22, 111,
	130, 2097, 0, 2095, 17, 165, 248, 174, 2094, 2092,
	10, 15, 12, 2091, 2090, 136, 2089, 2088, 2087, 21,
	36, 20, 1, 2086, 2080, 4872, 2989, 135, 2077, 180,
}

//line sql.y:6744
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 353, 354, 354, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 332, 332,
	332, 335, 335, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 82, 82, 22, 23, 23, 23, 23,
	357, 357, 148, 148, 146, 146, 147, 147, 216, 216,
	24, 25, 25, 226, 226, 225, 225, 225, 227, 227,
	227, 227, 261, 261, 26, 26, 26, 26, 26, 98,
	98, 334, 334, 333, 325, 325, 324, 324, 323, 331,
	331, 330, 330, 329, 38, 39, 48, 48, 48, 48,
	49, 50, 336, 336, 298, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 300, 300, 286,
	286, 299, 299, 299, 299, 299, 299, 299, 285, 285,
	109, 109, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 348, 348, 196, 196, 196, 196, 196,
	196, 118, 118, 127, 127, 127, 127, 127, 116, 116,
	117, 115, 115, 115, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 126, 126, 122,
	122, 122, 123, 123, 123, 124, 124, 349, 349, 349,
	349, 265, 265, 265, 265, 268, 268, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 267, 267, 267, 267,
	267, 269, 269, 269, 269, 269, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 271, 271, 271, 271, 271, 271, 271, 271, 284,
	284, 272, 272, 279, 279, 280, 280, 280, 281, 281,
	281, 282, 282, 277, 277, 277, 277, 277, 277, 278,
	278, 278, 287, 312, 312, 311, 311, 309, 309, 309,
	309, 309, 309, 309, 309, 296, 296, 306, 306, 306,
	306, 306, 295, 295, 291, 291, 291, 292, 292, 293,
	293, 290, 290, 294, 294, 308, 308, 307, 307, 288,
	288, 289, 289, 314, 350, 350, 350, 350, 350, 351,
	351, 315, 341, 342, 340, 340, 340, 340, 340, 80,
	80, 80, 238, 238, 238, 304, 304, 303, 303, 303,
	305, 305, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 233, 233, 233, 339, 339, 339, 339,
	339, 339, 338, 338, 338, 301, 301, 301, 337, 337,
	56, 56, 180, 180, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 84, 84, 85,
	85, 85, 85, 87, 87, 87, 317, 317, 57, 57,
	3, 3, 136, 138, 139, 139, 137, 137, 137, 137,
	137, 137, 60, 60, 59, 59, 141, 140, 142, 142,
	142, 1, 1, 2, 2, 4, 4, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 283,
	283, 283, 316, 316, 318, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 320, 320, 320, 58, 58, 321,
	273, 274, 275, 5, 6, 297, 319, 94, 94, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 61, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 343, 343, 232,
	232, 240, 240, 231, 231, 254, 254, 254, 234, 234,
	234, 235, 235, 347, 347, 347, 63, 63, 63, 65,
	65, 66, 67, 67, 256, 256, 257, 257, 68, 69,
	81, 81, 81, 81, 81, 81, 83, 83, 83, 15,
	15, 15, 15, 77, 77, 77, 14, 14, 64, 64,
	71, 344, 344, 345, 346, 346, 346, 346, 72, 74,
	31, 31, 31, 31, 31, 31, 104, 104, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	99, 99, 99, 93, 93, 358, 75, 76, 76, 97,
	97, 97, 90, 90, 90, 96, 96, 96, 16, 16,
	17, 215, 215, 18, 18, 101, 101, 103, 103, 103,
	103, 103, 105, 105, 105, 105, 105, 105, 105, 100,
	100, 102, 102, 102, 102, 247, 247, 247, 246, 246,
	130, 130, 132, 131, 131, 133, 133, 134, 134, 134,
	134, 178, 156, 156, 213, 213, 211, 211, 212, 212,
	214, 214, 214, 214, 217, 217, 135, 135, 135, 135,
	143, 143, 144, 144, 145, 145, 255, 255, 252, 252,
	252, 251, 251, 149, 149, 149, 151, 150, 150, 150,
	150, 152, 152, 154, 154, 153, 153, 155, 160, 160,
	159, 159, 157, 157, 157, 157, 158, 158, 158, 158,
	161, 161, 114, 114, 114, 114, 114, 114, 114, 125,
	125, 125, 125, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	229, 229, 162, 162, 170, 170, 170, 170, 163, 163,
	163, 163, 163, 163, 163, 171, 171, 171, 177, 172,
	172, 168, 168, 168, 168, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 263, 263,
	328, 328, 327, 327, 326, 326, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 359, 359, 276,
	276, 276, 276, 169, 169, 169, 169, 169, 95, 95,
	95, 95, 95, 260, 260, 260, 264, 264, 264, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 183, 183, 91, 91, 181, 181,
	182, 184, 184, 179, 179, 179, 165, 165, 165, 185,
	185, 186, 186, 187, 187, 189, 188, 188, 190, 191,
	191, 191, 192, 192, 193, 193, 193, 47, 47, 47,
	47, 47, 42, 42, 42, 42, 43, 43, 43, 106,
	106, 106, 106, 108, 108, 107, 107, 78, 78, 79,
	79, 79, 112, 112, 113, 113, 113, 110, 110, 111,
	111, 209, 209, 194, 194, 194, 201, 201, 201, 197,
	197, 199, 199, 199, 200, 200, 200, 198, 206, 206,
	208, 208, 207, 207, 203, 203, 204, 204, 205, 205,
	205, 202, 202, 164, 164, 164, 164, 164, 210, 210,
	210, 210, 218, 218, 174, 174, 176, 176, 175, 129,
	219, 219, 223, 220, 220, 224, 224, 224, 224, 224,
	221, 221, 222, 222, 248, 248, 248, 228, 228, 239,
	239, 236, 236, 237, 237, 230, 230, 241, 241, 241,
	73, 173, 173, 313, 313, 310, 244, 244, 245, 245,
	249, 249, 253, 253, 250, 250, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 355, 356,
	258, 259, 259, 259,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 5, 6, 6, 7, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 3, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 9, 6, 6, 6, 2, 2, 3, 3, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -353, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -82, -33, 32, -38, -48, 215, -49, -39, 216,
	-50, 218, 217, 254, 219, 247, 74, 296, 297, 299,
	300, 301, 302, -83, 252, 253, 221, 36, 45, 33,
	34, 37, 225, 260, 261, 224, -10, -34, 8, -355,
	11, 425, 249, 248, 28, -12, 456, 85, -354, 593,
	-209, -194, 22, 33, 29, -193, -189, -97, -194, 20,
	18, 7, -75, -358, -75, -75, 12, 13, -75, -298,
	-300, 85, 152, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -322, -44, -41, 220, 217, 264, 119,
	120, 254, 255, 256, 219, 238, 253, 257, 252, 273,
	-40, 80, 33, 456, 459, -305, 216, 222, 223, 426,
	122, 121, 75, 218, -302, 350, 488, 563, -55, 565,
	101, 103, 564, 44, 228, 566, 567, 568, 494, 569,
	237, 570, 571, 572, 573, 579, 535, 580, 581, 582,
	123, 7, -75, -253, -249, -332, -243, 88, 89, 90,
	453, 240, 486, 487, 289, 80, 41, 347, 350, 488,
	563, 296, 310, 304, 331, 323, 454, 489, 292, 241,
	277, 560, 321, 128, 565, 295, 490, 255, 355, 356,
	357, 101, 299, 392, 578, 294, 491, 576, 103, 564,
	79, 51, 44, 250, 319, 224, 315, 566, 278, 492,
	464, 271, 122, 119, 585, 36, 313, 50, 30, 575,
	121, 49, 567, 143, 493, 568, 494, 359, 338, 554,
	48, 360, 256, 495, 83, 261, 458, 562, 361, 314,
	362, 288, 574, 221, 496, 546, 363, 364, 555, 497,
	339, 343, 498, 384, 365, 592, 52, 499, 500, 556,
	120, 501, 78, 569, 308, 309, 502, 286, 239, 386,
	335, 435, 442, 443, 107, 108, 438, 109, 444, 110,
	445, 446, 447, 436, 111, 104, 437, 448, 449, 336,
	337, 112, 450, 106, 105, 439, 441, 113, 451, 237,
	35, 366, 455, 290, 58, 265, 387, 46, 341, 589,
	45, 550, 503, 553, 334, 330, 53, 504, 505, 506,
	507, 570, 333, 307, 329, 584, 4, 283, 571, 62,
	223, 345, 344, 346, 272, 383, 326, 508, 509, 510,
	244, 81, 511, 316, 21, 512, 513, 367, 279, 514,
	56, 515, 516, 390, 253, 517, 54, 572, 39, 258,
	586, 573, 518, 519, 520, 521, 260, 522, 369, 523,
	368, 340, 342, 267, 370, 457, 524, 312, 257, 577,
	525, 245, 561, 259, 264, 252, 391, 246, 526, 527,
	528, 529, 530, 293, 545, 531, 532, 300, 579, 43,
	533, 534, 535, 536, 537, 287, 282, 385, 394, 61,
	82, 352, 538, 559, 306, 280, 539, 297, 55, 580,
	581, 582, 274, 583, 9, 590, 591, 372, 123, 284,
	285, 47, 327, 266, 540, 541, 317, 318, 332, 305,
	328, 298, 547, 268, 373, 254, 542, 393, 281, 348,
	353, 461, 273, 374, 558, 460, 325, 322, 275, 543,
	375, 229, 269, 270, 544, 548, 376, 377, 291, 378,
	379, 380, 381, 382, 276, 459, 303, 320, 354, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 434, 227, -75,
	227, -153, -249, 227, -221, 356, -240, 358, 371, 366,
	376, 364, -232, 367, 369, 267, -347, 384, 227, 373,
	215, 169, 359, 368, 377, 378, 291, 379, 382, 276,
	-343, -332, 568, 583, 128, 324, 363, 361, 385, 550,
	381, 380, -249, 298, -256, 303, -244, -332, -243, 301,
	-153, -81, 546, 219, -258, -258, -99, 550, 552, -172,
	-114, 136, -125, -128, -119, -120, -166, -167, -168, -169,
	-126, -179, 158, 159, 166, 137, -177, -129, 26, 452,
	427, 426, 169, 31, 211, 68, 69, 429, 430, 139,
	57, 402, 403, -127, 397, 404, 399, 432, 433, 114,
	434, 104, 106, 105, 336, 337, 435, 436, 437, 107,
	108, 109, 110, 111, 112, 113, 438, 441, 439, 440,
	442, 443, 444, 449, 450, 445, 446, 447, 448, 451,
	-244, -249, 232, 396, 226, 164, 425, -121, -117, -8,
	-175, 395, 400, 401, 405, 398, -332, -243, -123, -122,
	-162, 91, 97, 102, 98, -352, 115, -355, 92, 93,
	94, 95, 96, 116, 117, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 44, 372, 372, -153,
	-75, -75, -75, -75, -187, -97, -189, -10, -8, -355,
	8, -75, -8, -9, -13, -34, -36, 482, -35, -249,
	-194, -209, 12, 154, 42, 50, -192, -193, -12, -8,
	-114, 19, 23, 24, -102, 160, -114, -249, -76, -102,
	-230, 231, -75, -75, -220, -261, 298, -224, 385, 384,
	-245, -222, -244, -242, -221, 383, 220, 23, 462, 135,
	25, 27, 138, 169, 19, 139, 37, 222, 324, 238,
	168, 234, 426, 215, 72, 463, 397, 399, 395, 402,
	428, 429, 396, 358, 31, 13, 465, 28, 248, 24,
	38, 162, 217, 142, 466, 251, 26, 249, 114, 117,
	468, 22, 75, 243, 14, 236, 40, 16, 469, 470,
	17, 232, 231, 154, 228, 70, 11, 211, 29, 151,
	66, 471, 130, 472, 473, 474, 475, 68, 152, 20,
	587, 400, 401, 33, 551, 452, 262, 164, 73, 59,
	552, 136, 398, 476, 477, 115, 478, 118, 76, 557,
	132, 18, 71, 42, 479, 263, 480, 233, 588, 481,
	388, 482, 153, 218, 425, 69, 483, 226, 371, 8,
	431, 32, 247, 235, 125, 67, 484, 227, 141, 432,
	433, 230, 116, 7, 129, 34, 12, 74, 77, 403,
	404, 405, 57, 124, 456, 140, 15, 485, 389, 134,
	128, -299, 152, -285, -289, -244, 242, -315, 238, -153,
	-308, -307, -244, -355, -98, -239, 228, 236, 235, 129,
	-336, 132, 284, 396, 226, -51, -52, -221, 168, -84,
	259, 263, 86, 86, -289, -288, -287, -337, 263, 242,
	-314, -306, 234, 243, -295, 235, 236, -290, 228, 130,
	-337, -290, 233, 243, 263, 263, 123, 263, 123, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 258, -296,
	144, -296, 460, 460, -302, -337, -337, -337, 230, 35,
	35, -241, -290, 230, 25, -296, -296, -296, -221, 168,
	-296, -296, -296, -296, 271, 271, -296, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, 227, -336, -106, 382, 291, 80, -53,
	273, -37, -153, -239, 228, 229, -336, 260, -153, 212,
	-153, -234, 152, 15, -234, -231, 372, 370, 357, 362,
	-234, -234, -234, -234, 274, 355, -291, 228, 35, 239,
	372, 274, 355, 274, 275, 274, 275, 365, 375, 274,
	-254, 14, 154, 396, 360, 364, 267, 227, 268, 229,
	374, -332, 553, 275, -254, 92, -235, 152, 372, 270,
	-234, -259, -355, -245, 324, -259, -259, 32, 89, 230,
	-244, -77, -244, 92, -15, -11, -22, -21, -23, 144,
	-104, 372, -92, 169, 568, 554, 555, 556, 553, 369,
	561, 559, 557, 274, 558, 86, 132, 134, 135, 4,
	-114, 151, -163, 144, 145, 146, 147, 148, 149, 150,
	154, 136, 138, 152, 153, 133, 155, 156, 157, 158,
	159, 160, 161, 163, 162, 164, 165, 168, 213, 214,
	-120, -120, -120, -120, -177, -355, -355, -355, -120, -229,
	-355, -120, -355, -355, -355, -355, -183, -114, -355, -359,
	-355, -359, -359, -276, -355, -276, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	212, -355, -355, -355, -355, -355, -276, -276, -276, -276,
	-276, 102, 97, 91, -179, 98, 92, -244, -249, -8,
	-9, -172, -258, -344, -345, -156, -153, -355, 291, -244,
	-244, 260, -192, -12, -8, -187, -193, -189, -8, -75,
	-90, -103, 63, 64, -105, 24, 38, 67, 65, 23,
	-356, 87, -356, -209, -356, 86, -36, -213, 85, 61,
	43, 92, 92, 86, 21, -188, -190, -114, 14, -247,
	4, -246, 25, -244, 92, 212, 100, 14, -154, 29,
	-153, -230, -230, 86, 298, -224, -261, -226, -225, 386,
	388, 144, -248, -244, 92, 31, 87, 86, -153, -265,
	-268, -270, -269, -271, -266, -267, 321, 322, 169, 325,
	327, 328, 329, 330, 331, 332, 333, 334, 335, 338,
	32, 250, 317, 318, 319, 320, 339, 340, 341, 342,
	343, 344, 345, 346, 304, 323, 454, 305, 306, 307,
	308, 309, 310, 312, 313, 314, 315, 316, -335, -332,
	85, 87, 86, -272, 85, -114, -106, 227, -332, 228,
	228, 228, -75, 425, -296, -296, 258, 19, -44, -41,
	-322, 18, -40, -41, 220, 119, 120, 217, 85, -285,
	85, -294, -335, -332, 85, 130, 233, 129, -293, -290,
	-293, -294, -332, -179, -332, 130, 130, -217, -244, -217,
	-217, 23, -217, 23, -217, 23, 94, -244, -217, 23,
	-217, 23, -217, 23, -217, 23, -217, 23, 31, 78,
	79, 31, 81, 82, 83, -179, -179, -285, -221, -153,
	-332, 94, 94, 94, -296, -296, 94, 92, 92, 92,
	-296, -296, 94, 92, -251, -249, 92, 92, -338, 244,
	288, 290, 94, 94, 94, 94, 31, 92, -339, 31,
	575, 574, 576, 577, 578, 92, 94, 31, 94, 31,
	94, -244, 85, -153, -112, 278, 215, 217, 220, 76,
	92, 292, 144, 44, 86, 230, 227, -332, -236, 232,
	-236, -244, -250, -249, -242, 92, -114, -292, 14, 154,
	-254, -254, -234, -153, -292, -254, -234, -153, -234, -234,
	-234, -234, -254, -254, -254, -234, -249, -249, -153, -153,
	-153, -153, -153, -153, -153, -259, -259, -259, -235, -234,
	553, 92, 76, -257, 301, 335, 547, 548, 549, 86,
	456, -146, -153, 553, 553, 553, 553, 553, 553, -114,
	-114, -114, -114, 478, -170, 115, 136, 116, 117, -128,
	-171, -175, -177, 99, 154, 138, 152, 153, -119, -120,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -260, -332, 92, 169, -124, -123, 98,
	-352, -124, -100, -102, -114, -114, -332, -244, -100, -100,
	-114, -96, 24, 38, -181, -182, 140, -179, -356, -356,
	94, 98, -244, -244, -89, -88, 407, 408, 409, 410,
	412, 413, 414, 417, 418, 422, 423, 406, 424, 411,
	416, 419, 420, 421, 415, 320, -114, -114, -114, -114,
	-114, -114, -173, -172, -331, -330, -329, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-101, 24, 38, -100, -245, -250, -242, -100, -101, -101,
	-100, -100, 212, -209, -356, 86, -346, 388, 389, 551,
	-252, 263, -251, 25, -173, 92, 14, -215, 77, -244,
	-192, -192, 63, 64, 59, -100, -105, -356, -35, 25,
	-211, -244, 62, 92, -277, -221, 347, 348, -114, -114,
	86, -191, 27, 28, -153, -246, 160, -250, -153, -216,
	263, -153, -131, -133, -134, -135, -156, -178, -355, -136,
	471, 14, -146, -147, -155, -249, -224, -226, 86, 387,
	389, 390, 76, 118, -114, -278, 168, -304, -303, -302,
	-285, -287, -288, -289, 87, -278, -281, 353, 352, -272,
	-272, -272, -272, -272, -277, -277, -277, -277, 85, 85,
	-272, -272, -272, -272, -279, 85, -279, -279, -280, 85,
	-280, -315, -114, -312, -311, -309, -310, 237, 101, 544,
	502, 456, 494, 535, 77, -307, -191, 94, -356, -112,
	-237, 232, -313, -310, -332, -332, -332, -237, -332, 92,
	-332, 92, -85, -57, -1, 587, 588, 589, 86, 19,
	-286, -285, -56, 288, -318, -319, 263, -314, -308, -294,
	130, -293, -294, -294, -332, 86, 29, 123, 123, 123,
	123, 456, 217, 32, -285, -56, -260, 230, -260, -260,
	92, 92, -233, 583, -146, -108, 280, 144, 269, 269,
	227, 227, 282, -153, 293, 295, 294, 292, 23, 281,
	283, 285, 271, -153, -153, -236, 76, -148, -153, 26,
	-249, -153, -234, -234, -153, -234, -234, -153, -244, -92,
	388, 86, 456, 22, -93, 22, -355, 115, 116, 117,
	-171, -119, -120, -119, 135, 251, 86, -356, 25, 86,
	77, -356, -356, -356, 86, 14, -100, -184, -182, 142,
	-114, -356, -356, -356, 86, 86, 14, -264, 25, -356,
	-356, -356, 86, 86, -356, -356, 86, 86, -356, 86,
	86, 86, -328, 86, 86, 86, 86, -356, -356, -356,
	-356, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, -356, -356, -100, -100, -355, 212, -356, -356, -356,
	-356, -356, -245, -345, 550, 389, -160, -159, -157, 74,
	231, 75, -355, -251, -356, -124, 89, -212, 89, -211,
	-165, -244, 94, 98, -194, -130, -132, 14, -105, -177,
	87, 86, -277, -198, -203, -231, -244, 92, 169, -190,
	212, -161, 15, -164, 32, 57, -11, -355, -355, 32,
	86, -149, -151, -150, -152, 66, 70, 72, 67, 68,
	69, 73, -255, 25, -131, -9, -8, -355, -355, -153,
	-146, -357, 14, 77, -357, 86, 212, -225, -227, 391,
	388, 394, -332, 92, -84, 86, -302, -289, -195, -109,
	40, -282, 354, -277, -277, -284, 92, -284, 94, 94,
	87, -47, -42, -43, 33, 80, -309, -296, 92, 39,
	-296, -296, -244, 87, -191, -108, -153, 136, 76, -313,
	-313, -313, -249, -2, 586, 592, 130, 85, 357, 18,
	-211, 86, 87, -180, 289, 87, -86, -244, 87, 85,
	-294, -294, -244, -355, 227, 31, 31, -56, -180, -278,
	-332, 585, 584, 87, 229, 287, -113, 402, -110, 92,
	88, -153, -153, -153, -153, -153, 220, 217, 272, 230,
	-146, -153, 86, -80, 246, 241, -254, -254, 33, -153,
	388, 562, 560, -114, 135, 251, -128, -120, -102, 453,
	-262, 169, 321, 250, 319, 315, 335, 326, 352, 317,
	353, 314, 313, 312, -262, -260, -114, -114, -187, 143,
	-114, 141, -114, -114, -114, -356, 169, 321, -114, -114,
	-329, -114, -114, -114, -327, -326, -124, -179, -356, -327,
	-114, -114, -326, -326, -330, -330, -330, -330, -330, -172,
	-172, -172, -172, -356, -356, -101, -245, -157, -290, -290,
	-290, -217, 86, -228, 22, 14, 57, 57, -130, -161,
	-131, -105, -244, -201, 546, -206, 46, -204, -205, 47,
	-202, 48, 56, 160, -192, -114, -218, 76, -219, -223,
	-179, -174, -176, -175, -355, -210, -356, -244, -217, -219,
	-133, -134, -134, -133, -134, 66, 66, 66, 71, 66,
	71, 66, -150, -249, -356, -356, -9, -114, -252, 77,
	-131, -131, -155, -249, 160, 388, 392, 393, -302, -351,
	115, 136, 31, 76, 350, 101, -349, 168, -350, 233,
	129, 130, 245, 25, 41, 87, 86, 87, 86, 87,
	86, -238, 493, 136, -43, -42, -296, -296, 94, -332,
	92, 92, 229, 26, -153, 76, 76, 76, -87, 590,
	94, 85, -3, 80, -114, 85, 19, -285, -179, -320,
	-273, -321, -274, -275, -5, -6, -297, 57, 101, -58,
	44, 228, 570, 571, 123, 583, -312, -211, -316, -318,
	-153, -116, -355, -115, -117, -121, 158, 159, -180, -153,
	-107, 278, 286, 85, -111, 89, -334, 77, 269, 350,
	269, -153, -80, -47, -153, -234, -234, 33, -332, -356,
	-128, -120, -355, -356, -272, -272, -272, -280, -272, 309,
	-272, 309, -272, -356, -356, 86, -356, 22, -356, -91,
	431, -114, 86, 86, -356, 85, 85, -356, -356, -328,
	86, -356, 86, -356, 86, -263, 545, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -158, 22,
	-158, -158, -356, 89, -153, -161, -185, 16, -198, 51,
	327, -208, -207, 55, 47, -205, 19, 49, 19, 30,
	-218, 86, 144, 86, -356, -356, 86, 57, 212, -356,
	-161, -144, -143, 76, 77, -145, 76, -143, 66, 66,
	-213, -356, 86, -216, -131, -161, -161, 212, 115, -355,
	-118, -127, -116, 12, 92, 92, -332, 130, 130, -153,
	85, -277, 92, -277, 94, 94, 493, 31, 81, 82,
	83, 31, 78, 79, -153, -153, -153, -153, -317, 85,
	19, -114, 85, 144, 87, -211, -211, 265, 154, -296,
	568, 271, 271, -296, -296, -296, 87, -356, 86, -283,
	456, 459, -114, -122, -122, -213, 87, -325, 456, -333,
	-244, -244, -244, -244, -119, -277, -114, -114, -192, 92,
	-114, -114, 94, 94, -356, -327, -326, -114, -356, -141,
	-140, -142, 554, 115, 31, -262, -355, 66, 18, 16,
	-355, -355, -252, -185, -186, 17, 19, -199, 53, -197,
	52, -197, -207, 19, 19, 92, 19, 92, 130, -223,
	-114, -176, 57, -11, -244, -174, -244, -187, -114, 85,
	-114, -124, -161, -161, -114, -167, 434, 104, 106, 105,
	336, 337, 435, 436, 437, 107, 108, 109, 110, 111,
	112, 113, 438, 441, 439, 442, 443, 444, 449, 450,
	445, 446, 447, 448, 451, 85, -114, 87, 87, -213,
	-316, -57, 87, -211, 94, 87, 266, -175, -355, 92,
	-296, -296, -296, 94, 94, -251, -350, -318, 460, 460,
	-356, 25, -324, -323, -245, 85, 77, -95, 154, 456,
	-356, -356, -356, -356, -356, 87, 87, -356, -356, 86,
	-356, -140, -142, -356, 76, -124, -214, -356, -244, 233,
	19, 19, -214, -214, -160, -186, -114, -172, -200, 54,
	76, 118, 92, 92, 92, 12, -174, 212, -192, -211,
	-138, 357, -187, -356, -211, 87, 25, 87, 592, 130,
	87, -175, -94, -355, 262, -251, 92, 92, -11, 86,
	144, -211, -153, -356, 454, 73, 457, -114, -356, 76,
	466, 554, 86, -356, -356, -356, 76, 118, -219, -244,
	87, -356, -355, -192, 87, -196, -11, 85, -3, 262,
	-78, 456, -323, -301, -245, 92, 94, 87, 62, 455,
	458, -328, -244, 233, -252, -139, -137, -244, 508, -341,
	-342, 76, -351, -348, 115, 136, 101, -349, 124, 125,
	-78, -114, 85, -356, -79, 277, 550, -334, 62, -356,
	-356, 86, 22, -265, -60, 518, -342, 76, -341, 76,
	13, 12, 115, 92, 87, -211, 238, -325, 456, -137,
	515, -278, -124, -340, 246, 241, 244, 32, -340, -4,
	591, 87, 279, 457, -59, 26, -138, 240, 31, 115,
	94, -4, 458, 518, -124, -141, -140, -140,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 765,
	765, 765, 0, 765, 0, 0, 765, -2, -2, 765,
	1242, 0, 765, 0, 0, -2, 697, 699, 0, 701,
	-2, 0, 0, 710, 1730, 1730, 760, 0, 0, 0,
	0, 0, 765, 765, 765, 765, 1103, 48, 765, 0,
	83, 84, 716, 717, 718, 63, 0, 1728, 1, 3,
	69, 73, 0, 0, 0, 56, 1112, 0, 76, 0,
	0, 769, 0, 767, 0, 1225, 765, 765, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 527, 467, 510, 465, 496, -2, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 355, 355, 0, 0, -2, 458, 458, 458, 0,
	0, 0, 493, 1227, 410, 355, 355, 355, 0, 355,
	355, 355, 355, 0, 0, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 1129, 151, 1243, 1240, 1241, 38, 39, 40,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 0, 1219,
	0, 627, 865, 0, 688, 688, 0, 688, 688, 688,
	688, 0, 0, 0, 639, 0, 0, 0, 0, 685,
	0, 0, 658, 660, 0, 685, 0, 691, 0, 672,
	688, 1731, 1731, 1731, 1210, 0, 682, 680, 694, 695,
	677, 678, 696, 700, 0, 705, 708, 1236, 1237, 0,
	723, 47, 1475, 715, 728, 729, 0, 761, 762, 43,
	959, 0, 887, 892, 903, 916, 917, 918, 919, 920,
	922, 923, 0, 0, 0, 0, 928, 929, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 1084,
	0, 1047, 1047, 976, 1047, 1049, 1049, 0, 0, 0,
	1727, 1515, 1523, 1524, 1519, 1520, 1501, 1513, 1516, 1504,
	1505, 1507, 1509, 1514, 1521, 1527, 1506, 1526, 1525, 0,
	1502, 1503, 1508, 1518, 1522, 1510, 1511, 1512, 1517, 1528,
	1093, 0, 0, 0, 0, 0, 0, 257, 258, 958,
	1199, 1049, 1049, 1049, 1049, 1049, -2, -2, 204, 205,
	206, 207, 208, 209, 210, 0, 200, 0, 262, 263,
	259, 260, 261, 942, 943, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 1730, 0, 738, 0,
	0, 0, 0, 0, 1112, 0, 1104, 1103, 61, 0,
	765, -2, 0, 0, 0, 0, 45, 0, 50, 824,
	75, 74, 1151, 0, 0, 0, 57, 1113, 65, 67,
	1114, 0, 770, 771, 0, 801, 805, 0, 766, 0,
	0, 1226, 1225, 1225, 100, 0, 1671, 1203, -2, -2,
	0, 0, 1238, 1239, 1212, -2, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	-2, 0, 0, 161, 162, 0, 41, 382, 0, 157,
	0, 375, 321, 0, 1129, 0, 0, 0, 0, 0,
	765, 0, 1220, 142, 143, 149, 150, 355, 355, 507,
	0, 0, 151, 151, 474, 475, 476, 0, 0, -2,
	380, 0, 459, 0, 0, 369, 369, 373, 371, 372,
	0, 0, 0, 0, 0, 0, 487, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	356, 0, 505, 506, 411, 0, 0, 0, 0, 485,
	486, 0, 0, 1228, 1229, 0, 0, 0, 355, 355,
	0, 0, 0, 0, 355, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1142, 0, 0, 0, -2,
	0, 619, 0, 0, 0, 1221, 1221, 0, 626, 0,
	628, 629, 0, 0, 630, 0, 685, 685, 683, 684,
	632, 633, 634, 635, 688, 0, 0, 364, 365, 366,
	685, 688, 0, 688, 688, 688, 688, 685, 685, 685,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 1731, 1731, 691, 688, 0, 668, 0, 669, 670,
	673, 674, 1732, 1733, 1258, 675, 676, 1211, 698, 706,
	709, 726, 724, 725, 727, 719, 720, 721, 722, 0,
	740, 741, 746, 0, 0, 0, 0, 752, 753, 754,
	0, 0, 757, 758, 759, 0, 0, 0, 0, 0,
	885, 0, 0, 948, 949, 950, 951, 952, 953, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	924, 925, 926, 927, 930, 0, 0, 0, 935, 936,
	0, 0, 0, 0, 0, 775, 0, 1085, 0, 974,
	0, 975, 977, 978, 0, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1231, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 0, 785, 785, 0, 0, 193, 194, 195, 196,
	197, 211, 212, 213, 214, 215, 264, 1093, 0, 958,
	0, 0, 44, 730, 731, 0, 848, 1231, 0, 0,
	781, 0, 55, 64, 66, 1112, 59, 1112, 0, 787,
	0, 0, -2, -2, 788, 794, 795, 796, 797, 798,
	52, 1729, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 333, 1154, 0, 0, 1105, 1106, 1109, 0, 802,
	1556, 806, 0, 808, 809, 0, 768, 0, 98, 0,
	864, 0, 0, 0, 1671, 1209, 0, 102, 103, 0,
	0, 0, 339, 1214, 1215, 1216, -2, 362, 0, 339,
	328, 272, 273, 274, 321, 276, 321, 321, 321, 321,
	333, 333, 333, 333, 304, 305, 306, 307, 308, 0,
	0, 291, 321, 321, 321, 321, 311, 312, 313, 314,
	315, 316, 317, 318, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 323, 323, 323, 325, 325, 0, 42,
	0, 343, 0, 1109, 0, 0, 1142, 1223, 1233, 0,
	0, 0, 1223, 120, 0, 0, 508, 538, 468, 497,
	509, 0, 471, 472, -2, 0, 0, 458, 0, 460,
	0, 363, 0, -2, 0, 373, 0, 369, 373, 370,
	373, 361, 374, 489, 490, 491, 0, 568, 834, 0,
	0, 0, 0, 0, 574, 575, 576, 0, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 498, 499,
	500, 501, 502, 503, 504, 0, 0, 460, 0, 494,
	0, 412, 413, 414, 0, 0, 417, 418, 419, 420,
	0, 0, 423, 424, 425, 851, 852, 426, 427, 452,
	453, 454, 428, 429, 430, 431, 432, 433, 434, 446,
	447, 448, 449, 450, 451, 435, 436, 437, 438, 439,
	440, 443, 0, 135, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1221, 0, 0, 0,
	0, 784, 866, 1244, 1245, 689, 690, 0, 367, 368,
	688, 688, 636, 659, 0, 688, 640, 661, 641, 643,
	642, 644, 663, 664, 688, 647, 686, 687, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 665, 666,
	667, 692, 0, 0, 707, 711, 712, 713, 714, 0,
	0, 743, 94, 748, 749, 750, 751, 763, 756, 960,
	882, 883, 884, 0, 886, 889, 0, 944, 946, 891,
	893, 955, 956, 957, 0, 0, 0, 0, 0, 897,
	901, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 921, 1063, 1064, 1065, 938, 265, 266,
	0, 939, 0, 799, 0, 0, 0, 937, 0, 0,
	0, 0, 776, 777, 1091, 1088, 0, 0, 1048, 1050,
	0, 0, 0, 0, 0, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1066, 0, 0, 0,
	0, 0, 0, 1232, 0, 130, 131, 0, 0, 0,
	0, 0, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 786, 1094, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1198, 0, 733, 734, 736, 0,
	868, 0, 849, 0, 0, 739, 0, 780, 0, 783,
	58, 60, 792, 793, 0, 810, 789, 54, 49, 0,
	0, 826, 1152, 333, 1174, 0, 337, 338, 1115, 1116,
	0, 1108, 1110, 1111, 77, 807, 803, 0, 880, 0,
	0, 863, 0, 813, 815, 816, 817, 846, 0, 820,
	0, 0, 0, 0, 96, 865, 1204, 101, 0, 0,
	106, 107, 1205, 1206, 1207, 1208, 0, 527, -2, 407,
	163, 165, 166, 167, 158, -2, 331, 329, 330, 275,
	333, 333, 298, 299, 300, 301, 302, 303, 0, 0,
	292, 293, 294, 295, 286, 0, 287, 288, 289, 0,
	290, 381, 0, 1117, 344, 345, 347, 355, 0, 350,
	351, 0, 355, 355, 0, 376, 377, 0, 1109, 1133,
	0, 0, 0, 1234, 1233, 1233, 1233, 0, 153, 154,
	155, 156, 563, 0, 0, 539, 561, 562, 151, 0,
	0, 159, 462, 461, 0, 595, 0, 379, 0, 0,
	373, 373, 358, 359, 492, 0, 0, 570, 571, 572,
	573, 0, 0, 0, 460, 462, 339, 0, 415, 416,
	421, 422, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 1130,
	1131, 1132, 0, 0, 620, 0, 0, 399, 92, 1222,
	625, 685, 646, 662, 685, 638, 645, 671, 703, 747,
	0, 0, 0, 0, 755, 0, 0, 890, 945, 947,
	894, 0, 898, 902, 0, 0, 0, 0, 0, 0,
	0, 941, 965, 966, 0, 0, 1103, 0, 1089, 0,
	0, 973, 1051, 1052, 0, 0, 0, 0, 0, 984,
	985, 986, 0, 0, 989, 990, 0, 0, 991, 0,
	0, 0, 0, 0, 0, 0, 0, 1003, 1004, 1005,
	1006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1017, 961, 0, 0, 785, 0, 1053, 1054, 1055,
	1056, 1057, 1094, 732, 735, 737, 822, 869, 870, 0,
	0, 0, 0, 850, 1230, 778, 779, 782, -2, 0,
	0, 1096, 0, 0, 810, 880, 811, 0, 790, 51,
	825, 0, 1156, 1155, 1168, 1181, 334, 335, 336, 1107,
	0, 1112, 0, 1192, 0, 0, 1184, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 0, 856, 0,
	0, 0, 0, 847, 0, 0, 0, 0, 0, -2,
	0, 0, 90, 91, 0, 0, 0, 104, 105, 0,
	0, 111, 340, 341, 144, 151, 409, 164, 389, 0,
	0, 271, 332, 296, 297, 0, 319, 0, 0, 0,
	402, 116, 1121, 1120, 355, 355, 346, 0, 349, 0,
	0, 0, 1235, 322, 378, 0, 134, 0, 0, 0,
	0, 0, 140, 533, 0, 0, 540, 0, 0, 0,
	466, 0, 477, 478, 0, 567, -2, 616, 343, 0,
	357, 360, 835, 0, 0, 479, 0, 462, 483, 484,
	495, 444, 445, 442, 0, 0, 1143, 1144, 1149, 1147,
	1148, 121, 515, 517, 516, 520, 0, 0, 513, 0,
	399, 1117, 0, 624, 400, 401, 688, 688, 742, 95,
	0, 745, 0, 0, 0, 0, 895, 899, 800, 0,
	0, 321, 321, 1071, 321, 325, 1074, 321, 1076, 321,
	1079, 321, 1082, 1083, 0, 0, 0, 0, 1086, 972,
	1092, 0, 0, 0, 0, 983, 0, 0, 0, 0,
	132, 133, 1020, 0, 0, 1022, 1024, 1025, 995, 1021,
	0, 0, 1018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 962, 963, 0, 1095, 871, 876, 876,
	876, 0, 0, 0, 1217, 1218, 1097, 1098, 880, 1099,
	812, 791, 827, 1174, 0, 1167, 0, -2, 1176, 0,
	0, 0, 1182, 804, 78, 881, 81, 0, 1192, 1200,
	0, 1183, 1194, 1196, 0, 0, 0, 1188, 0, 880,
	814, 842, 844, 0, 839, 854, 855, 857, 0, 859,
	0, 861, 862, 824, 819, 821, 0, 0, 98, 0,
	880, 880, 97, 0, 867, 108, 109, 110, 408, 168,
	173, 0, 0, 0, 178, 0, 180, 0, 390, 0,
	268, 270, 0, 0, 171, 333, 0, 333, 0, 326,
	0, 391, 403, 0, 1118, 1119, 0, 0, 348, 352,
	353, 354, 0, 1224, 136, 0, 0, 0, 536, 0,
	564, 0, 0, 0, 0, 0, 0, 160, 463, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 355, 0,
	0, 0, 355, 355, 355, 608, 342, 0, 0, 592,
	589, 480, 0, 198, 199, 201, 0, 0, 482, 824,
	1134, 1135, 1136, 0, 1146, 1150, 124, 0, 0, 0,
	0, 621, 622, 623, 93, 631, 637, 744, 764, 888,
	896, 900, 0, 932, 1069, 333, 1072, 1073, 1075, 1077,
	1078, 1080, 1081, 933, 934, 0, 968, 0, 970, 1112,
	0, 1090, 0, 0, 982, 0, 0, 987, 988, 0,
	0, 994, 0, 996, 0, 0, 0, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 964, 0, 0,
	0, 0, 848, -2, 62, 1099, 1101, 0, 1161, 1159,
	1159, 1169, 1170, 0, 0, 1177, 0, 0, 0, 0,
	82, 0, 0, 0, 1197, 0, 0, 0, 0, 99,
	1103, 836, 843, 0, 0, 837, 0, 838, 858, 860,
	818, -2, 0, 880, 880, 88, 89, 0, 174, 0,
	176, 191, 192, 0, 179, 181, 182, 267, 269, 0,
	0, 309, 320, 310, 0, 0, 404, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 824, 137, 138, 139, 528, 0,
	538, 0, 0, 0, 531, 0, 469, 0, 0, 0,
	355, 355, 355, 0, 0, 0, 0, 569, 0, 577,
	0, 0, 0, 202, 203, 0, 1145, 514, 0, 122,
	123, 0, 0, 519, 1058, 1070, 0, 0, 0, 1087,
	0, 0, 0, 0, 992, 0, 1023, 0, 999, 0,
	0, 0, 558, 559, 0, 1019, 0, 877, 0, 0,
	0, 0, 868, 1101, 80, 0, 0, 1164, 0, 1157,
	1160, 1158, 1171, 0, 0, 1178, 0, 1180, 0, 1201,
	1202, 1195, 0, 1187, 1190, 1186, 1189, 1112, 840, 0,
	845, 0, 1103, 87, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 327, 0,
	0, 0, 529, 0, 541, 532, 0, 606, 0, 610,
	0, 0, 0, 613, 614, 615, 383, 593, 590, 591,
	481, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	967, 969, 971, 980, 981, 1067, 1068, 993, 997, 0,
	1000, 0, 0, 1001, 0, 560, 0, 873, 830, 831,
	878, 879, 0, 0, 823, 79, 1102, 1100, 1153, 0,
	1162, 1163, 1172, 1173, 1179, 0, 1185, 0, 85, 0,
	0, 0, 1112, 175, 0, 185, 0, 537, 0, 540,
	530, 604, 605, 0, 617, 609, 611, 612, 1137, 0,
	0, 0, 521, 931, 0, 0, 0, 1020, 1002, 0,
	556, 557, 0, 872, 874, 875, 1165, 1166, 1193, 1191,
	841, 848, 0, 86, 384, 389, 1137, 0, 0, 0,
	511, 1139, 127, 128, 455, 456, 457, 121, 1059, 0,
	1062, 0, 832, 833, 542, 0, 544, 0, -2, 385,
	386, 0, 169, 186, 187, 0, 0, 190, 183, 184,
	117, 0, 0, 618, 0, 1140, 1141, 124, 1060, 998,
	543, 0, 0, 339, 0, 553, 387, 0, 388, 0,
	0, 0, 188, 189, 565, 0, 0, 518, 0, 545,
	546, 554, 0, 392, 394, 395, 0, 0, 393, 534,
	0, 565, 1138, 0, 0, 555, 551, 396, 397, 398,
	566, 535, 1061, 0, 547, 548, 549, 550,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 212, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 593,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:514
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:560
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:595
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:601
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:605
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:624
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:630
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:718
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:833
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:837
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:857
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:871
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:881
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:904
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:926
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:936
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:940
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:944
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:950
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:954
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:958
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:968
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:972
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1020
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1035
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1046
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1066
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1072
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1088
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1095
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1124
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1131
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1142
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1153
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1159
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1163
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1208
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1212
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1218
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1228
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1233
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1242
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1266
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1275
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1354
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1358
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1441
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1492
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1708
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1712
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1716
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1720
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1951
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1960
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1968
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2050
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2059
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2065
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2075
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2079
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2084
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2088
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2092
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2096
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2100
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2104
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2120
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2124
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2128
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2132
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2136
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = ""
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = yyDollar[2].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = "key"
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = yyDollar[1].str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2204
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2214
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2218
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2224
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2228
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2234
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2238
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2244
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2250
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2254
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2258
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2262
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2266
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2275
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2281
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2287
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2293
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2299
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2303
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2307
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2311
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2315
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2350
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2356
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2370
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2448
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2452
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2456
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2460
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2464
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2468
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2472
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2476
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2480
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2484
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2488
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2492
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2496
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2500
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2564
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2573
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2577
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2581
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 469:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2589
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2595
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2685
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2689
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2693
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2697
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2703
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2729
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2745
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2778
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2782
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2818
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2822
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2826
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2871
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2878
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2885
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2892
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2903
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2912
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2920
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2929
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2936
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2948
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2957
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2972
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2977
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2981
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2986
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2990
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2996
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3002
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3008
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3012
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3018
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3022
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3028
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3034
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3040
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3046
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3060
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3064
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3070
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3076
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3082
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3086
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3090
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3096
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3100
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3105
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3109
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3114
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3118
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3124
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3128
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3132
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3136
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3140
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3144
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3148
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3152
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3156
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3160
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3164
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3168
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3172
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3176
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3180
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3184
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3188
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3192
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3196
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3200
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3204
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3208
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3217
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3221
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3228
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3238
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3243
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3247
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3252
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3257
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3262
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3267
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3272
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3278
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3284
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3291
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3298
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3305
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3313
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3317
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3323
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3329
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3335
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3341
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3347
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3353
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3365
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = ""
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.str = ""
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3387
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3391
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3499
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3503
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3636
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = "extended "
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3662
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3666
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3682
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3700
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3704
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3714
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3720
		{
			yyVAL.empty = struct{}{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.empty = struct{}{}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.empty = struct{}{}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3748
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3773
		{
			yyVAL.empty = struct{}{}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.empty = struct{}{}
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3778
		{
			yyVAL.empty = struct{}{}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.empty = struct{}{}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3796
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3800
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3804
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3808
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3812
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3816
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = yyDollar[1].str
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = yyDollar[1].str
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = yyDollar[1].str
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3893
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3897
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3903
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3909
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3913
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3917
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3921
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3965
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3969
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3975
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3979
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4024
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4037
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4046
		{
			setAllowComments(yylex, true)
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4056
		{
			yyVAL.strs = nil
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4066
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4070
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4074
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4079
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = SQLCacheStr
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4092
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4096
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4100
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4131
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4150
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4155
		{
			yyVAL.strs = nil
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4167
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4171
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = SQLCacheStr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = DistinctStr
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = DistinctStr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = StraightJoinHint
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4207
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4217
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4221
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4225
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4229
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4242
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4254
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4258
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4264
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4270
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4284
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4288
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4292
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4296
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4302
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4308
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4312
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4321
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4327
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4337
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4347
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4351
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4359
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4365
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4382
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4386
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4390
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4394
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4402
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4406
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4412
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4430
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4443
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4447
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4451
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4457
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4463
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4467
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4471
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4475
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4481
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4485
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4495
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4524
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4530
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4534
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4540
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4544
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4548
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4552
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4557
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4561
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4565
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4569
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4610
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4705
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4717
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4739
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4743
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4747
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4751
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = ""
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4848
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4852
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4859
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4863
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4867
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4871
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4877
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4881
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4885
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4889
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4893
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4897
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4901
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4907
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4911
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4915
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4922
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4928
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5191
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5200
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5206
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5210
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5228
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5232
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5236
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5240
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5244
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5248
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5252
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5256
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5260
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5264
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5268
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5274
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5278
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5282
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5286
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5290
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5294
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5298
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5302
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5306
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5361
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5365
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5369
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5373
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5377
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5401
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5405
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5415
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5419
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5423
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5427
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5441
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5445
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5449
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5453
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5457
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5461
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5465
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5469
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5484
		{
			yyVAL.str = string("")
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5488
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5494
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5498
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5504
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5519
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5523
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5527
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5556
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5574
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5580
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5586
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5590
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5596
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5601
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5605
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5609
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5618
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5624
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5628
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5632
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5641
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5645
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5649
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5653
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5660
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5664
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5668
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5672
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5678
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5682
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5686
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5691
		{
			yyVAL.str = ""
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5708
		{
			yyVAL.str = ""
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5712
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5727
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5731
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5736
		{
			yyVAL.str = "cascaded"
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5740
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5744
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5753
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5759
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5765
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5771
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5780
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5784
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5789
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5799
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5803
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5809
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5813
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5817
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = ""
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5830
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5835
		{
			yyVAL.str = ""
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5839
		{
			yyVAL.str = " header"
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5844
		{
			yyVAL.str = ""
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5848
		{
			yyVAL.str = " manifest on"
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5852
		{
			yyVAL.str = " manifest off"
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5857
		{
			yyVAL.str = ""
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5861
		{
			yyVAL.str = " overwrite on"
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5865
		{
			yyVAL.str = " overwrite off"
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5871
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = ""
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5886
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5890
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5896
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5915
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5919
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5925
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = ""
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = " optionally"
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5955
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5959
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5963
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5967
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5971
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5977
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5981
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5985
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5989
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5998
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6004
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6008
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6014
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6018
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6024
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6039
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6049
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6055
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6065
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6069
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6073
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6077
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6081
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6089
		{
			yyVAL.str = "charset"
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6121
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6123
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6126
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6128
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6131
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6136
		{
			yyVAL.empty = struct{}{}
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			yyVAL.empty = struct{}{}
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6140
		{
			yyVAL.empty = struct{}{}
		}
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6144
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6153
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6160
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6164
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6170
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6191
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6197
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6201
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6208
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6715
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6724
		{
			decNesting(yylex)
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6729
		{
			skipToEnd(yylex)
		}
	case 1731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6734
		{
			skipToEnd(yylex)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6738
		{
			skipToEnd(yylex)
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6742
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
