// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const THROTTLE = 57624
const UNTHROTTLE = 57625
const EXPIRE = 57626
const RATIO = 57627
const BEGIN = 57628
const START = 57629
const TRANSACTION = 57630
const COMMIT = 57631
const ROLLBACK = 57632
const SAVEPOINT = 57633
const RELEASE = 57634
const WORK = 57635
const BIT = 57636
const TINYINT = 57637
const SMALLINT = 57638
const MEDIUMINT = 57639
const INT = 57640
const INTEGER = 57641
const BIGINT = 57642
const INTNUM = 57643
const REAL = 57644
const DOUBLE = 57645
const FLOAT_TYPE = 57646
const DECIMAL_TYPE = 57647
const NUMERIC = 57648
const TIME = 57649
const TIMESTAMP = 57650
const DATETIME = 57651
const YEAR = 57652
const CHAR = 57653
const VARCHAR = 57654
const BOOL = 57655
const CHARACTER = 57656
const VARBINARY = 57657
const NCHAR = 57658
const TEXT = 57659
const TINYTEXT = 57660
const MEDIUMTEXT = 57661
const LONGTEXT = 57662
const BLOB = 57663
const TINYBLOB = 57664
const MEDIUMBLOB = 57665
const LONGBLOB = 57666
const JSON = 57667
const JSON_SCHEMA_VALID = 57668
const JSON_SCHEMA_VALIDATION_REPORT = 57669
const ENUM = 57670
const GEOMETRY = 57671
const POINT = 57672
const LINESTRING = 57673
const POLYGON = 57674
const GEOMETRYCOLLECTION = 57675
const MULTIPOINT = 57676
const MULTILINESTRING = 57677
const MULTIPOLYGON = 57678
const ASCII = 57679
const UNICODE = 57680
const NULLX = 57681
const AUTO_INCREMENT = 57682
const APPROXNUM = 57683
const SIGNED = 57684
const UNSIGNED = 57685
const ZEROFILL = 57686
const CODE = 57687
const COLLATION = 57688
const COLUMNS = 57689
const DATABASES = 57690
const ENGINES = 57691
const EVENT = 57692
const EXTENDED = 57693
const FIELDS = 57694
const FULL = 57695
const FUNCTION = 57696
const GTID_EXECUTED = 57697
const KEYSPACES = 57698
const OPEN = 57699
const PLUGINS = 57700
const PRIVILEGES = 57701
const PROCESSLIST = 57702
const SCHEMAS = 57703
const TABLES = 57704
const TRIGGERS = 57705
const USER = 57706
const VGTID_EXECUTED = 57707
const VITESS_KEYSPACES = 57708
const VITESS_METADATA = 57709
const VITESS_MIGRATIONS = 57710
const VITESS_REPLICATION_STATUS = 57711
const VITESS_SHARDS = 57712
const VITESS_TABLETS = 57713
const VITESS_TARGET = 57714
const VSCHEMA = 57715
const VITESS_THROTTLED_APPS = 57716
const NAMES = 57717
const GLOBAL = 57718
const SESSION = 57719
const ISOLATION = 57720
const LEVEL = 57721
const READ = 57722
const WRITE = 57723
const ONLY = 57724
const REPEATABLE = 57725
const COMMITTED = 57726
const UNCOMMITTED = 57727
const SERIALIZABLE = 57728
const CURRENT_TIMESTAMP = 57729
const DATABASE = 57730
const CURRENT_DATE = 57731
const NOW = 57732
const CURRENT_TIME = 57733
const LOCALTIME = 57734
const LOCALTIMESTAMP = 57735
const CURRENT_USER = 57736
const UTC_DATE = 57737
const UTC_TIME = 57738
const UTC_TIMESTAMP = 57739
const DAY = 57740
const DAY_HOUR = 57741
const DAY_MICROSECOND = 57742
const DAY_MINUTE = 57743
const DAY_SECOND = 57744
const HOUR = 57745
const HOUR_MICROSECOND = 57746
const HOUR_MINUTE = 57747
const HOUR_SECOND = 57748
const MICROSECOND = 57749
const MINUTE = 57750
const MINUTE_MICROSECOND = 57751
const MINUTE_SECOND = 57752
const MONTH = 57753
const QUARTER = 57754
const SECOND = 57755
const SECOND_MICROSECOND = 57756
const YEAR_MONTH = 57757
const WEEK = 57758
const REPLACE = 57759
const CONVERT = 57760
const CAST = 57761
const SUBSTR = 57762
const SUBSTRING = 57763
const GROUP_CONCAT = 57764
const SEPARATOR = 57765
const TIMESTAMPADD = 57766
const TIMESTAMPDIFF = 57767
const WEIGHT_STRING = 57768
const LTRIM = 57769
const RTRIM = 57770
const TRIM = 57771
const JSON_ARRAY = 57772
const JSON_OBJECT = 57773
const JSON_QUOTE = 57774
const JSON_DEPTH = 57775
const JSON_TYPE = 57776
const JSON_LENGTH = 57777
const JSON_VALID = 57778
const JSON_ARRAY_APPEND = 57779
const JSON_ARRAY_INSERT = 57780
const JSON_INSERT = 57781
const JSON_MERGE = 57782
const JSON_MERGE_PATCH = 57783
const JSON_MERGE_PRESERVE = 57784
const JSON_REMOVE = 57785
const JSON_REPLACE = 57786
const JSON_SET = 57787
const JSON_UNQUOTE = 57788
const MATCH = 57789
const AGAINST = 57790
const BOOLEAN = 57791
const LANGUAGE = 57792
const WITH = 57793
const QUERY = 57794
const EXPANSION = 57795
const WITHOUT = 57796
const VALIDATION = 57797
const UNUSED = 57798
const ARRAY = 57799
const CUME_DIST = 57800
const DESCRIPTION = 57801
const DENSE_RANK = 57802
const EMPTY = 57803
const EXCEPT = 57804
const FIRST_VALUE = 57805
const GROUPING = 57806
const GROUPS = 57807
const JSON_TABLE = 57808
const LAG = 57809
const LAST_VALUE = 57810
const LATERAL = 57811
const LEAD = 57812
const NTH_VALUE = 57813
const NTILE = 57814
const OF = 57815
const OVER = 57816
const PERCENT_RANK = 57817
const RANK = 57818
const RECURSIVE = 57819
const ROW_NUMBER = 57820
const SYSTEM = 57821
const WINDOW = 57822
const ACTIVE = 57823
const ADMIN = 57824
const AUTOEXTEND_SIZE = 57825
const BUCKETS = 57826
const CLONE = 57827
const COMPONENT = 57828
const DEFINITION = 57829
const ENFORCED = 57830
const ENGINE_ATTRIBUTE = 57831
const EXCLUDE = 57832
const FOLLOWING = 57833
const GEOMCOLLECTION = 57834
const GET_MASTER_PUBLIC_KEY = 57835
const HISTOGRAM = 57836
const HISTORY = 57837
const INACTIVE = 57838
const INVISIBLE = 57839
const LOCKED = 57840
const MASTER_COMPRESSION_ALGORITHMS = 57841
const MASTER_PUBLIC_KEY_PATH = 57842
const MASTER_TLS_CIPHERSUITES = 57843
const MASTER_ZSTD_COMPRESSION_LEVEL = 57844
const NESTED = 57845
const NETWORK_NAMESPACE = 57846
const NOWAIT = 57847
const NULLS = 57848
const OJ = 57849
const OLD = 57850
const OPTIONAL = 57851
const ORDINALITY = 57852
const ORGANIZATION = 57853
const OTHERS = 57854
const PATH = 57855
const PERSIST = 57856
const PERSIST_ONLY = 57857
const PRECEDING = 57858
const PRIVILEGE_CHECKS_USER = 57859
const PROCESS = 57860
const RANDOM = 57861
const REFERENCE = 57862
const REQUIRE_ROW_FORMAT = 57863
const RESOURCE = 57864
const RESPECT = 57865
const RESTART = 57866
const RETAIN = 57867
const REUSE = 57868
const ROLE = 57869
const SECONDARY = 57870
const SECONDARY_ENGINE = 57871
const SECONDARY_ENGINE_ATTRIBUTE = 57872
const SECONDARY_LOAD = 57873
const SECONDARY_UNLOAD = 57874
const SKIP = 57875
const SRID = 57876
const THREAD_PRIORITY = 57877
const TIES = 57878
const UNBOUNDED = 57879
const VCPU = 57880
const VISIBLE = 57881
const RETURNING = 57882
const FORMAT = 57883
const TREE = 57884
const VITESS = 57885
const TRADITIONAL = 57886
const LOCAL = 57887
const LOW_PRIORITY = 57888
const NO_WRITE_TO_BINLOG = 57889
const LOGS = 57890
const ERROR = 57891
const GENERAL = 57892
const HOSTS = 57893
const OPTIMIZER_COSTS = 57894
const USER_RESOURCES = 57895
const SLOW = 57896
const CHANNEL = 57897
const RELAY = 57898
const EXPORT = 57899
const AVG_ROW_LENGTH = 57900
const CONNECTION = 57901
const CHECKSUM = 57902
const DELAY_KEY_WRITE = 57903
const ENCRYPTION = 57904
const ENGINE = 57905
const INSERT_METHOD = 57906
const MAX_ROWS = 57907
const MIN_ROWS = 57908
const PACK_KEYS = 57909
const PASSWORD = 57910
const FIXED = 57911
const DYNAMIC = 57912
const COMPRESSED = 57913
const REDUNDANT = 57914
const COMPACT = 57915
const ROW_FORMAT = 57916
const STATS_AUTO_RECALC = 57917
const STATS_PERSISTENT = 57918
const STATS_SAMPLE_PAGES = 57919
const STORAGE = 57920
const MEMORY = 57921
const DISK = 57922
const PARTITIONS = 57923
const LINEAR = 57924
const RANGE = 57925
const LIST = 57926
const SUBPARTITION = 57927
const SUBPARTITIONS = 57928
const HASH = 57929

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	605, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	331, 153,
	-2, 473,
	-1, 55,
	35, 693,
	231, 693,
	242, 693,
	277, 707,
	278, 707,
	-2, 695,
	-1, 60,
	233, 720,
	-2, 718,
	-1, 114,
	230, 1244,
	-2, 119,
	-1, 116,
	1, 146,
	605, 146,
	-2, 153,
	-1, 127,
	132, 366,
	236, 366,
	-2, 462,
	-1, 146,
	131, 153,
	171, 153,
	331, 153,
	-2, 482,
	-1, 690,
	215, 1265,
	-2, 1261,
	-1, 691,
	215, 1266,
	-2, 1262,
	-1, 765,
	59, 788,
	-2, 803,
	-1, 802,
	147, 1669,
	-2, 112,
	-1, 803,
	147, 1512,
	-2, 113,
	-1, 809,
	147, 1595,
	-2, 1238,
	-1, 957,
	147, 1441,
	-2, 1235,
	-1, 998,
	241, 41,
	246, 41,
	-2, 377,
	-1, 1078,
	1, 521,
	605, 521,
	-2, 153,
	-1, 1315,
	59, 789,
	-2, 808,
	-1, 1316,
	59, 790,
	-2, 809,
	-1, 1369,
	131, 153,
	171, 153,
	331, 153,
	-2, 409,
	-1, 1448,
	132, 366,
	236, 366,
	-2, 462,
	-1, 1457,
	241, 42,
	246, 42,
	-2, 378,
	-1, 1761,
	215, 1270,
	-2, 1264,
	-1, 1844,
	131, 153,
	171, 153,
	331, 153,
	-2, 410,
	-1, 1851,
	25, 174,
	-2, 176,
	-1, 2095,
	86, 39,
	-2, 845,
	-1, 2147,
	77, 94,
	86, 94,
	-2, 865,
	-1, 2214,
	580, 620,
	-2, 607,
	-1, 2350,
	49, 1206,
	-2, 1200,
	-1, 2563,
	86, 39,
	-2, 846,
	-1, 2601,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 837,
	-1, 2915,
	22, 1597,
	32, 1597,
	172, 1597,
	253, 1597,
	311, 1597,
	312, 1597,
	313, 1597,
	314, 1597,
	315, 1597,
	316, 1597,
	317, 1597,
	319, 1597,
	320, 1597,
	321, 1597,
	322, 1597,
	323, 1597,
	324, 1597,
	325, 1597,
	326, 1597,
	327, 1597,
	328, 1597,
	329, 1597,
	330, 1597,
	332, 1597,
	334, 1597,
	335, 1597,
	336, 1597,
	337, 1597,
	338, 1597,
	339, 1597,
	340, 1597,
	341, 1597,
	342, 1597,
	345, 1597,
	346, 1597,
	347, 1597,
	348, 1597,
	349, 1597,
	350, 1597,
	351, 1597,
	352, 1597,
	353, 1597,
	466, 1597,
	-2, 565,
}

const yyPrivate = 57344

const yyLast = 42097

var yyAct = [...]int{
	690, 2966, 2694, 2960, 2695, 2309, 2693, 2847, 1841, 2913,
	2668, 2916, 1372, 2490, 1795, 2917, 2897, 2049, 2403, 2410,
	1775, 3, 2446, 1777, 699, 2364, 2800, 2823, 780, 2361,
	96, 2708, 758, 2083, 2473, 2412, 1911, 692, 2472, 1330,
	608, 2713, 2365, 612, 2572, 2271, 1141, 681, 683, 37,
	693, 186, 2307, 2362, 186, 634, 573, 186, 684, 605,
	2308, 682, 588, 1799, 186, 2475, 2141, 2359, 1294, 2592,
	1814, 2118, 186, 2566, 2351, 2110, 2558, 1874, 2179, 2495,
	2254, 606, 2211, 2180, 1830, 2181, 604, 186, 1899, 1879,
	2130, 155, 807, 781, 1317, 36, 1819, 960, 2085, 1818,
	2102, 1671, 1755, 1920, 141, 1731, 38, 760, 1661, 588,
	2246, 1806, 588, 186, 588, 1898, 1471, 1619, 1953, 1881,
	2173, 993, 988, 1821, 2149, 1455, 762, 1361, 766, 1339,
	1297, 95, 1638, 617, 1568, 91, 600, 1226, 1683, 1162,
	1462, 1564, 967, 999, 996, 1548, 783, 964, 1896, 1758,
	968, 1730, 1870, 1360, 994, 804, 995, 1800, 1358, 1344,
	1133, 772, 1139, 159, 1573, 1727, 119, 1421, 1447, 1090,
	1006, 117, 118, 98, 102, 767, 124, 125, 1074, 794,
	770, 76, 1768, 97, 1233, 595, 768, 85, 89, 1229,
	2967, 1913, 1914, 1915, 1913, 2443, 2202, 2464, 2230, 2229,
	1951, 2856, 2204, 1533, 788, 8, 793, 2651, 769, 77,
	2461, 120, 7, 544, 6, 104, 105, 126, 108, 90,
	2262, 114, 2263, 2877, 183, 2878, 774, 539, 577, 1163,
	2698, 1772, 1773, 961, 2698, 1626, 1625, 1624, 1033, 188,
	189, 190, 1623, 1426, 1622, 1621, 1604, 754, 755, 756,
	757, 596, 1613, 765, 2462, 598, 2932, 599, 2081, 761,
	759, 2347, 2546, 1890, 2112, 1119, 808, 801, 986, 972,
	2980, 2942, 2427, 1009, 775, 977, 2468, 2957, 985, 2627,
	120, 796, 797, 984, 1631, 782, 1163, 1884, 983, 982,
	1324, 2796, 1034, 1035, 1036, 2795, 1032, 2661, 1031, 1010,
	2662, 2979, 2907, 78, 78, 1995, 2970, 80, 78, 2873,
	78, 2878, 2955, 2669, 2697, 2898, 1939, 1047, 2697, 2906,
	2872, 2270, 2528, 1436, 1362, 1041, 1363, 2121, 2400, 2401,
	2158, 2399, 976, 2157, 1173, 978, 2159, 981, 182, 1083,
	1084, 1836, 1837, 2082, 2261, 1992, 1835, 1109, 120, 2207,
	1136, 2238, 2122, 1097, 752, 2237, 751, 2726, 1098, 2848,
	1114, 1115, 121, 2205, 143, 1077, 1096, 1097, 1095, 1993,
	2170, 1086, 1098, 1110, 2519, 164, 2272, 1103, 1854, 1853,
	87, 87, 2492, 2517, 2465, 87, 577, 87, 577, 586,
	577, 1173, 1195, 1612, 2569, 979, 590, 1774, 584, 2297,
	1554, 2496, 2247, 1713, 2212, 1301, 153, 1921, 1126, 2233,
	1128, 142, 1954, 2805, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1204, 1203, 1205, 1206, 1959, 1883, 1549, 578, 981,
	1048, 973, 161, 1169, 162, 1523, 1161, 2969, 975, 974,
	1965, 1962, 1964, 1963, 1966, 1967, 1112, 1113, 1125, 1127,
	1449, 1450, 152, 151, 181, 1116, 1135, 2274, 1111, 1073,
	2485, 1130, 1104, 2494, 1118, 1117, 1079, 2493, 2486, 1614,
	1615, 1616, 2249, 1971, 1958, 1972, 2653, 1973, 1956, 1524,
	1960, 1525, 2652, 1974, 1054, 1053, 2783, 979, 1028, 2649,
	1169, 1705, 1694, 1695, 1696, 1697, 1707, 1698, 1699, 1700,
	1712, 1708, 1701, 1702, 1709, 1710, 1711, 1703, 1704, 1706,
	1440, 87, 1924, 980, 981, 1072, 1957, 1815, 990, 1026,
	1025, 1304, 1027, 2284, 2283, 2282, 2276, 989, 2280, 1207,
	2275, 990, 2273, 1024, 1023, 1017, 1022, 2278, 2933, 186,
	1021, 186, 1020, 1015, 186, 1123, 2277, 1019, 1014, 1124,
	147, 1451, 154, 1207, 1448, 2298, 148, 149, 2416, 1129,
	2974, 2964, 165, 2279, 2281, 1993, 965, 965, 2953, 965,
	963, 171, 1002, 1001, 588, 1143, 588, 588, 795, 1076,
	1565, 1107, 1897, 1122, 2250, 1461, 578, 1945, 578, 1561,
	578, 588, 588, 1149, 2086, 2088, 1037, 2436, 2232, 1434,
	2648, 1008, 1433, 1555, 1432, 980, 2222, 1556, 1557, 1801,
	1802, 1562, 2266, 1043, 1155, 1430, 182, 2253, 543, 538,
	1208, 1209, 1168, 1165, 1166, 1167, 1172, 1174, 1171, 1941,
	1170, 2245, 1030, 2844, 2244, 116, 2007, 1164, 2426, 1553,
	121, 37, 2206, 2608, 2588, 1044, 1045, 1046, 2154, 1049,
	1050, 1051, 1052, 164, 1887, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 2855, 2203, 2235, 1075, 987, 2570, 1018, 1168,
	1165, 1166, 1167, 1172, 1174, 1171, 1016, 1170, 156, 1460,
	980, 2861, 1888, 2117, 1164, 1210, 1211, 1212, 1213, 1007,
	1886, 2073, 1767, 1348, 1273, 1218, 1088, 1221, 1842, 1207,
	161, 1206, 162, 2871, 2398, 1093, 1144, 1099, 1100, 1101,
	1102, 1008, 1120, 2256, 2806, 1574, 2406, 777, 2255, 1092,
	81, 1643, 181, 1889, 111, 2466, 2467, 1134, 1145, 1146,
	1137, 1138, 1885, 1287, 2290, 1644, 1645, 1642, 2469, 1008,
	1292, 1994, 186, 1214, 2087, 2867, 588, 588, 1535, 1534,
	1536, 1537, 1538, 86, 86, 2696, 150, 1029, 86, 2696,
	86, 2407, 186, 2962, 2644, 2256, 2963, 1106, 2961, 2582,
	2255, 1550, 1955, 1551, 1558, 1008, 1552, 1305, 1108, 1364,
	1159, 588, 760, 1310, 1308, 186, 2409, 1293, 1158, 144,
	588, 77, 145, 1684, 112, 1156, 588, 1157, 1307, 1082,
	2404, 1094, 1311, 2195, 1684, 1085, 2021, 1940, 762, 1007,
	1078, 1042, 1235, 1231, 1178, 1232, 2722, 2414, 2415, 1008,
	1131, 157, 2619, 2618, 2405, 1177, 1178, 169, 1928, 1470,
	165, 1938, 1469, 1633, 1635, 1636, 804, 1007, 1459, 171,
	1008, 2883, 1936, 1001, 1004, 1005, 1309, 965, 1017, 1293,
	95, 998, 1002, 2923, 1015, 1121, 2411, 1634, 1575, 1091,
	1279, 1280, 1281, 1282, 1283, 1298, 2949, 2921, 177, 2609,
	1933, 1349, 997, 1007, 1933, 87, 2925, 2926, 1011, 1001,
	2977, 2975, 1359, 2884, 2414, 2415, 2837, 2791, 1012, 1641,
	2790, 2922, 98, 1999, 2000, 2001, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 1937, 1013, 2781,
	2950, 1935, 176, 178, 179, 180, 2686, 1007, 188, 189,
	190, 2413, 1663, 1001, 1004, 1005, 1295, 965, 2838, 1312,
	1543, 998, 1002, 2416, 2675, 759, 2676, 1306, 1007, 1179,
	1326, 761, 1329, 1011, 1001, 1541, 2685, 808, 1530, 1179,
	186, 2864, 1195, 1012, 1422, 1191, 156, 1192, 1201, 1202,
	1204, 1203, 1205, 1206, 1431, 2976, 1354, 1355, 704, 705,
	706, 1193, 1194, 1190, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1204, 1203, 1205, 1206, 1324, 2863, 588, 2413, 1457,
	2626, 799, 1688, 1542, 2625, 2444, 1689, 1466, 2432, 2177,
	2416, 1468, 1664, 2176, 588, 588, 1893, 588, 1540, 588,
	588, 1529, 588, 588, 588, 588, 588, 588, 1199, 1200,
	1201, 1202, 1204, 1203, 1205, 1206, 1544, 588, 1195, 2841,
	2265, 186, 1504, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1181, 1528, 2408, 1467, 1527, 188, 189, 190, 186, 2616,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1203, 1205,
	1206, 588, 1526, 186, 1516, 1510, 1179, 1507, 1499, 1500,
	1176, 1518, 1177, 1178, 1563, 1506, 1179, 588, 1505, 186,
	1176, 1480, 1177, 1178, 1453, 1179, 2840, 1446, 2839, 2292,
	188, 189, 190, 2786, 2161, 186, 2721, 2030, 2719, 157,
	2682, 2623, 186, 2525, 1333, 169, 188, 189, 190, 2615,
	1909, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	588, 1473, 1465, 1474, 1501, 1476, 1478, 2497, 2435, 1482,
	1484, 1486, 1488, 1490, 588, 588, 1464, 188, 189, 190,
	1429, 1907, 1435, 188, 189, 190, 177, 1905, 2816, 1324,
	1443, 2434, 186, 1334, 1324, 2186, 1456, 2174, 1444, 1442,
	1289, 188, 189, 190, 94, 1463, 1463, 1949, 1324, 1948,
	1798, 1570, 1179, 2489, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 1502, 1780, 1605, 1571, 1539,
	176, 178, 179, 180, 1531, 1807, 1808, 1176, 1662, 1177,
	1178, 1521, 1517, 1513, 1665, 1669, 1179, 1176, 1512, 1177,
	1178, 1674, 588, 1511, 1335, 1132, 1176, 1566, 1177, 1178,
	92, 1148, 1324, 1668, 1668, 2108, 2968, 588, 588, 2938,
	1324, 93, 120, 1179, 2813, 984, 1666, 1666, 2812, 1639,
	983, 982, 1646, 2775, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 2108, 2904, 1637,
	1580, 2774, 1685, 1578, 2667, 1647, 691, 2108, 2891, 2213,
	1582, 2119, 1584, 1585, 1586, 1587, 1179, 2108, 2887, 1591,
	2191, 1602, 1601, 2879, 1324, 1324, 2017, 1850, 2523, 1324,
	186, 1603, 2108, 2857, 2360, 588, 1609, 1610, 2659, 2854,
	2126, 1179, 100, 1176, 2581, 1177, 1178, 1728, 2542, 1324,
	1759, 2038, 2581, 1179, 1640, 2058, 1324, 187, 2104, 186,
	187, 2119, 588, 187, 92, 2150, 1179, 1785, 589, 1786,
	187, 94, 186, 94, 2010, 93, 588, 1176, 187, 1177,
	1178, 186, 2127, 186, 1179, 186, 186, 588, 2108, 2782,
	588, 1576, 1577, 187, 2127, 1670, 1761, 2583, 2016, 1728,
	1175, 588, 1676, 1677, 1176, 1581, 1177, 1178, 1763, 1764,
	2008, 1851, 1588, 1589, 1590, 589, 95, 2393, 589, 187,
	589, 2659, 1324, 2929, 1324, 1759, 1993, 1179, 2151, 1324,
	2008, 1179, 2581, 804, 2866, 95, 804, 2153, 1760, 2012,
	2108, 2657, 1791, 2108, 1337, 1179, 2127, 1176, 2011, 1177,
	1178, 1817, 1933, 1324, 1762, 1179, 588, 1765, 1766, 2586,
	1324, 1175, 1324, 1900, 1901, 1902, 2894, 2951, 1904, 1906,
	1908, 1761, 1176, 2542, 1177, 1178, 1179, 1860, 1861, 1862,
	1863, 2043, 1324, 588, 1176, 1934, 1177, 1178, 1179, 588,
	1466, 1845, 774, 1466, 1790, 1466, 1779, 1176, 1846, 1177,
	1178, 1932, 2422, 1828, 1437, 1438, 1439, 2424, 2423, 1336,
	101, 2335, 1179, 1812, 2852, 1176, 1834, 1177, 1178, 1922,
	1793, 100, 1849, 99, 2420, 2421, 2008, 2050, 1876, 2420,
	2419, 588, 94, 1662, 2043, 1810, 2027, 101, 1324, 1662,
	1662, 1833, 1933, 1882, 808, 1832, 2026, 808, 100, 1933,
	99, 2127, 1324, 1916, 674, 1848, 1805, 1847, 1176, 2779,
	1177, 1178, 1176, 1328, 1177, 1178, 1508, 1509, 1892, 2008,
	1324, 2645, 1514, 1515, 1993, 2231, 1176, 186, 1177, 1178,
	1919, 1425, 2216, 1770, 186, 1617, 1176, 1560, 1177, 1178,
	1324, 186, 186, 1356, 2603, 186, 1179, 186, 764, 1877,
	1872, 1873, 2209, 2210, 186, 1895, 1891, 1176, 1179, 1177,
	1178, 186, 2108, 2107, 1903, 1927, 587, 1324, 1930, 1176,
	1931, 1177, 1178, 2491, 1425, 1424, 1009, 992, 1942, 991,
	1925, 1926, 1929, 2447, 1877, 1943, 87, 186, 1370, 1369,
	2802, 1944, 588, 1176, 1331, 1177, 1178, 1946, 1947, 1179,
	2772, 1855, 1010, 1856, 1857, 1858, 1859, 1195, 1179, 2006,
	2733, 2643, 1463, 806, 1179, 2150, 962, 2640, 969, 1866,
	1867, 1868, 1869, 1195, 2621, 87, 2534, 1179, 2544, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1204, 1203, 1205, 1206,
	2540, 1179, 2533, 1427, 1952, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1204, 1203, 1205, 1206, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1204, 1203, 1205, 1206, 1197, 1198, 1199,
	1200, 1201, 1202, 1204, 1203, 1205, 1206, 1176, 2151, 1177,
	1178, 1639, 2178, 2003, 1977, 2005, 1179, 1993, 1875, 1176,
	2531, 1177, 1178, 2487, 1179, 2803, 2530, 2449, 2445, 2217,
	1871, 1865, 2628, 1179, 1864, 1546, 2004, 1458, 2183, 2067,
	1454, 2132, 2135, 2136, 2137, 2133, 1423, 2134, 2138, 113,
	1179, 2593, 2594, 2066, 1179, 1890, 1984, 1985, 1179, 1077,
	1176, 1987, 1177, 1178, 2593, 2594, 1179, 1991, 1783, 1176,
	1988, 1177, 1178, 1607, 2632, 1176, 2946, 1177, 1178, 2944,
	2918, 186, 2629, 2630, 2631, 2002, 1640, 1179, 1176, 186,
	1177, 1178, 1179, 2876, 588, 2821, 2599, 2092, 2065, 2596,
	588, 2441, 1176, 2440, 1177, 1178, 2064, 2182, 2096, 2439,
	2360, 588, 2090, 2196, 1978, 2063, 1668, 2598, 2382, 2379,
	1179, 2633, 2634, 2383, 2079, 187, 1179, 187, 1492, 1666,
	187, 2020, 2062, 2378, 186, 1608, 2061, 2380, 186, 2018,
	2060, 2935, 2381, 1495, 2905, 1332, 2123, 1176, 2059, 1177,
	1178, 1179, 1797, 2160, 2183, 1176, 2587, 1177, 1178, 1179,
	589, 1789, 589, 589, 1176, 2340, 1177, 1178, 2036, 2053,
	1761, 2339, 2109, 37, 2052, 1493, 1494, 589, 589, 2836,
	1179, 1176, 2143, 1177, 1178, 1176, 2712, 1177, 1178, 1176,
	2574, 1177, 1178, 1496, 1497, 1498, 2105, 1176, 2573, 1177,
	1178, 588, 2051, 2384, 1298, 2136, 2137, 186, 2048, 2714,
	2577, 2080, 1760, 1179, 186, 2349, 2070, 2071, 1176, 1179,
	1177, 1178, 1559, 1176, 778, 1177, 1178, 750, 588, 2142,
	2171, 2172, 779, 2047, 2418, 588, 2101, 2168, 2106, 1466,
	1466, 2046, 2208, 2187, 588, 2116, 2164, 2703, 1039, 2702,
	92, 1176, 1038, 1177, 1178, 2148, 2228, 1176, 2505, 1177,
	1178, 93, 2044, 2227, 2152, 1322, 1318, 186, 186, 186,
	186, 186, 2155, 1680, 2352, 2354, 2162, 2182, 2165, 1882,
	1319, 2259, 1176, 2355, 1177, 1178, 1147, 1681, 186, 186,
	1176, 92, 1177, 1178, 2224, 2040, 2175, 2701, 94, 2223,
	2579, 2039, 93, 121, 186, 1787, 1788, 1321, 101, 1320,
	2184, 1176, 94, 1177, 1178, 2972, 2192, 1807, 1808, 100,
	2437, 99, 1981, 1662, 2193, 2853, 2197, 2198, 2199, 2798,
	94, 1446, 2417, 2140, 1794, 1970, 2226, 2338, 187, 786,
	787, 1969, 589, 589, 1176, 2337, 1177, 1178, 1968, 2559,
	1176, 1997, 1177, 1178, 99, 2828, 2225, 2827, 187, 760,
	2720, 2289, 2718, 2717, 2218, 2219, 2710, 2285, 2132, 2135,
	2136, 2137, 2133, 2641, 2134, 2138, 101, 589, 2578, 2576,
	2450, 187, 1917, 1668, 588, 1668, 589, 100, 1668, 99,
	2248, 1441, 589, 1668, 785, 100, 1666, 2709, 1666, 2268,
	588, 1666, 2310, 2267, 2310, 2251, 1666, 2310, 806, 2567,
	806, 806, 2310, 2312, 2119, 186, 101, 2948, 2947, 588,
	2269, 2104, 2299, 2947, 2315, 1150, 1152, 100, 588, 2316,
	2329, 2286, 2028, 1781, 1350, 588, 588, 1341, 186, 186,
	186, 186, 186, 2322, 2323, 2324, 2325, 106, 107, 2948,
	186, 2842, 2614, 776, 103, 186, 88, 2357, 186, 2303,
	186, 1, 2920, 186, 186, 186, 2372, 556, 1771, 1296,
	1532, 1522, 2670, 1729, 2329, 2363, 2799, 2455, 2392, 2453,
	2363, 2343, 1923, 766, 2342, 2328, 2639, 1880, 1000, 146,
	1843, 2366, 1844, 2330, 2900, 110, 958, 109, 2433, 2460,
	1003, 1105, 1918, 1311, 2143, 2660, 2169, 186, 1852, 2457,
	2344, 2456, 2341, 2454, 1376, 1374, 2334, 1375, 1373, 1378,
	588, 2317, 2318, 2319, 2320, 2321, 2394, 1377, 588, 2395,
	767, 2029, 2545, 186, 1290, 2374, 2375, 2373, 2377, 2385,
	2376, 768, 2471, 186, 1611, 585, 187, 95, 2396, 2139,
	2389, 2390, 2371, 184, 1365, 1342, 1040, 1570, 546, 2257,
	2425, 186, 2258, 1950, 186, 2402, 2452, 2331, 2332, 2333,
	552, 1219, 1606, 2336, 2506, 2429, 2428, 2156, 805, 798,
	1322, 1318, 2479, 589, 1782, 2094, 2368, 2571, 2348, 2350,
	1302, 1303, 2111, 2353, 2346, 1319, 2478, 2835, 2711, 2892,
	589, 589, 2166, 589, 1338, 589, 589, 2019, 589, 589,
	589, 589, 589, 589, 1682, 1882, 2470, 2451, 2482, 1822,
	1315, 1316, 1321, 589, 1320, 1346, 1632, 187, 610, 609,
	607, 2097, 2120, 2539, 806, 1182, 694, 2084, 2498, 1351,
	1366, 2501, 2500, 2131, 187, 2129, 588, 186, 2128, 1979,
	1829, 2595, 2591, 2912, 1824, 1820, 2103, 589, 2509, 187,
	618, 611, 2508, 603, 2515, 2611, 2477, 2234, 2488, 2236,
	2167, 2484, 1160, 589, 1314, 187, 597, 971, 1679, 2804,
	2859, 1996, 2185, 2527, 1313, 1692, 1693, 2188, 2189, 2442,
	2214, 187, 1910, 63, 41, 1720, 592, 2931, 187, 1151,
	792, 32, 31, 30, 186, 29, 28, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 589, 23, 22, 2560,
	2561, 21, 2617, 2565, 20, 19, 25, 186, 18, 17,
	589, 589, 2568, 16, 675, 2575, 2600, 2503, 2504, 2580,
	2463, 2941, 2971, 115, 50, 47, 45, 186, 187, 123,
	186, 186, 186, 122, 2590, 48, 2597, 44, 1080, 42,
	588, 588, 27, 26, 2479, 15, 14, 13, 12, 11,
	2605, 10, 2612, 2604, 2646, 2647, 2606, 2607, 2478, 9,
	5, 4, 2613, 35, 34, 185, 33, 1154, 542, 24,
	2, 583, 2459, 2622, 2458, 2624, 2201, 1912, 542, 0,
	0, 0, 588, 588, 588, 588, 542, 0, 589, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 0, 589, 589, 0, 2512, 2513, 0, 2514,
	0, 962, 2516, 2666, 2518, 0, 2520, 791, 0, 791,
	0, 2664, 2665, 0, 1290, 0, 0, 542, 1472, 1472,
	0, 1472, 0, 1472, 1472, 0, 1481, 1472, 1472, 1472,
	1472, 1472, 0, 0, 0, 0, 2681, 0, 0, 1290,
	1290, 962, 0, 186, 0, 1668, 0, 1668, 0, 0,
	2677, 0, 0, 0, 0, 0, 187, 2678, 1666, 0,
	1666, 589, 0, 2706, 2310, 0, 2310, 588, 0, 588,
	0, 0, 2699, 2689, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 2690, 0, 187, 0, 2727, 589, 2735,
	0, 1567, 2715, 2729, 0, 0, 2716, 0, 187, 0,
	0, 760, 589, 2731, 0, 2363, 2725, 187, 1668, 187,
	0, 187, 187, 589, 37, 2723, 589, 0, 0, 2707,
	0, 1666, 2366, 0, 588, 0, 2366, 589, 0, 0,
	0, 0, 0, 0, 806, 2739, 0, 186, 2780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 806,
	588, 2430, 2431, 0, 0, 2776, 2736, 2737, 2778, 2777,
	2792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2793, 2794, 0, 2818, 0, 2819, 0,
	0, 588, 589, 0, 2822, 588, 588, 0, 2784, 0,
	0, 0, 0, 0, 0, 0, 2801, 0, 0, 0,
	0, 0, 0, 1668, 0, 0, 0, 0, 0, 589,
	0, 0, 2829, 2830, 588, 589, 1666, 0, 0, 2832,
	2831, 0, 0, 0, 0, 0, 1675, 0, 2846, 0,
	0, 0, 2843, 1290, 0, 0, 0, 0, 0, 0,
	2845, 1690, 1691, 0, 0, 0, 0, 760, 0, 2849,
	0, 0, 0, 588, 0, 0, 0, 589, 0, 2834,
	0, 0, 0, 0, 0, 2366, 0, 2851, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 588, 186, 0, 0, 0, 0, 0,
	0, 2862, 0, 0, 0, 0, 0, 2868, 0, 0,
	2865, 0, 0, 187, 0, 0, 0, 0, 0, 1784,
	187, 0, 0, 0, 0, 0, 0, 187, 187, 0,
	0, 187, 2858, 187, 0, 588, 0, 37, 0, 0,
	187, 0, 0, 0, 0, 0, 1796, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 588, 0,
	1346, 0, 2885, 806, 0, 2893, 0, 0, 2890, 2895,
	588, 806, 0, 187, 806, 0, 2363, 0, 589, 186,
	588, 0, 2908, 2899, 0, 962, 0, 0, 0, 0,
	0, 0, 37, 0, 0, 0, 0, 0, 0, 2911,
	2927, 2919, 2924, 2801, 2901, 0, 0, 0, 2934, 0,
	0, 0, 0, 0, 0, 0, 0, 2940, 0, 2945,
	588, 0, 2943, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 2952, 2954, 0, 2959, 2956, 2958,
	969, 2650, 2965, 0, 0, 2654, 2655, 2656, 0, 0,
	0, 0, 0, 542, 0, 542, 1668, 2973, 542, 0,
	2978, 0, 0, 0, 0, 0, 0, 962, 0, 1666,
	0, 0, 0, 969, 2983, 2984, 2981, 2819, 2982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 190, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 1666, 182,
	0, 0, 0, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 577, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 187, 164, 0, 0, 0,
	589, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 589, 0, 0,
	0, 0, 0, 0, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2163, 0,
	187, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 181, 1990, 0, 0, 0,
	2787, 2788, 2789, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 589, 0, 0,
	0, 0, 0, 187, 0, 0, 542, 0, 0, 0,
	187, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 0, 589, 0, 773, 0, 0, 0,
	0, 589, 0, 0, 0, 0, 0, 565, 0, 0,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 187, 187, 187, 187, 0, 0,
	0, 0, 0, 165, 578, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 545, 0, 547, 561,
	0, 580, 0, 579, 551, 0, 549, 553, 562, 554,
	0, 548, 806, 559, 0, 0, 550, 563, 564, 567,
	570, 571, 572, 568, 566, 0, 557, 581, 1796, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 542, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 589, 589, 0, 187, 187, 187, 187, 187, 0,
	0, 0, 0, 0, 0, 2190, 187, 0, 0, 0,
	0, 187, 0, 0, 187, 0, 187, 0, 0, 187,
	187, 187, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 2215,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 1291,
	1291, 0, 0, 0, 0, 542, 0, 0, 1299, 0,
	0, 0, 0, 187, 0, 582, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 575, 589, 0, 0, 542, 0, 187,
	0, 0, 0, 0, 2939, 0, 0, 0, 576, 187,
	0, 0, 157, 1569, 1393, 0, 0, 0, 169, 0,
	0, 0, 541, 0, 0, 0, 0, 187, 0, 542,
	187, 0, 591, 0, 0, 0, 542, 0, 0, 0,
	753, 0, 0, 0, 0, 1592, 1593, 542, 542, 542,
	542, 542, 542, 542, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 1290, 0, 0, 1290, 0,
	0, 966, 0, 1290, 0, 0, 542, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 806, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 589, 187, 1472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2345, 0, 0, 0, 0, 0, 0,
	791, 0, 806, 0, 0, 0, 1290, 791, 791, 2370,
	1472, 1290, 0, 1291, 1381, 0, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 187, 0, 0, 68, 791, 1569, 791,
	791, 791, 791, 791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 187, 187, 187, 0,
	0, 0, 0, 0, 1519, 56, 589, 589, 0, 0,
	0, 0, 0, 0, 962, 1394, 87, 1290, 0, 791,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 589, 589,
	589, 589, 0, 1569, 0, 542, 0, 542, 0, 542,
	1831, 0, 1325, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 1410, 1411, 1412, 1413, 1414, 1415,
	0, 1416, 1417, 1418, 1419, 1420, 1395, 1396, 1397, 1398,
	1379, 1380, 1408, 0, 1382, 0, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 0, 0, 1392, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2345, 0, 0, 589, 0, 589, 0, 0, 0, 46,
	49, 52, 51, 54, 0, 66, 0, 0, 75, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 0, 0, 0,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 2741, 2743, 2742, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 640, 0, 589, 0, 1409, 0,
	0, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 1796, 1796, 0, 589, 542, 0,
	0, 589, 589, 0, 0, 542, 542, 0, 0, 542,
	0, 1982, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 542, 0, 1081, 0, 1087,
	589, 0, 1089, 0, 0, 0, 2671, 2672, 2673, 2674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 1290, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	187, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 1290, 0, 0, 0,
	0, 2728, 0, 2730, 0, 0, 0, 0, 0, 86,
	0, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 589, 0, 1796, 0,
	0, 0, 0, 2747, 2748, 0, 0, 0, 0, 0,
	0, 791, 791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1569, 0, 806, 542, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2825, 0, 0, 0, 2825,
	2825, 0, 0, 0, 685, 0, 635, 689, 637, 686,
	687, 0, 633, 636, 688, 1686, 0, 0, 542, 1687,
	0, 0, 542, 0, 701, 79, 0, 0, 1796, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 638, 639, 2740, 2744, 2745, 2746, 2749, 2750, 2751,
	2759, 2761, 663, 2760, 2762, 2763, 2764, 2767, 2768, 2769,
	2770, 2765, 2766, 2771, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 1796, 2200, 0,
	0, 0, 763, 0, 79, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1290, 970, 2886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 542, 542, 542, 542, 0, 0, 0, 0,
	0, 806, 806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 542, 2909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2914, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1371, 0,
	0, 0, 0, 791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 2914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1291, 0, 1291, 0, 0, 1291, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 1291, 542, 542, 542, 542, 542, 0, 0, 0,
	0, 0, 0, 0, 2386, 0, 0, 0, 0, 542,
	0, 0, 1519, 1579, 542, 0, 0, 542, 2397, 1569,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 2009, 0, 0, 0, 2013,
	0, 2014, 2015, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 2024, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 2032, 2033, 2034, 2035, 0, 2037, 0, 0, 790,
	0, 0, 2041, 0, 2042, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 2054, 2055, 2056, 2057,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 2068,
	2069, 0, 0, 0, 0, 0, 0, 2074, 2075, 2076,
	2077, 2078, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 542, 1813,
	0, 1816, 0, 0, 1620, 0, 0, 0, 1140, 0,
	1140, 1140, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 542, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 542, 542, 542, 0, 0, 0,
	0, 0, 0, 0, 763, 1215, 1216, 1217, 0, 1220,
	1393, 1222, 1223, 1224, 1225, 0, 1228, 1230, 1230, 0,
	1230, 1234, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	0, 1274, 1275, 1276, 1277, 1278, 0, 0, 0, 0,
	1234, 1234, 1234, 1234, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1291, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 0, 1300, 0,
	0, 182, 0, 0, 763, 1620, 0, 0, 763, 0,
	1381, 0, 1961, 0, 763, 0, 0, 0, 0, 1975,
	1976, 0, 0, 1980, 0, 121, 0, 143, 0, 0,
	0, 0, 1983, 0, 2296, 0, 0, 0, 164, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 153,
	0, 1519, 0, 0, 142, 2326, 2327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 152, 151, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2387, 2388, 0, 1407,
	1410, 1411, 1412, 1413, 1414, 1415, 0, 1416, 1417, 1418,
	1419, 1420, 1395, 1396, 1397, 1398, 1379, 1380, 1408, 0,
	1382, 0, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 0, 0, 1392, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 128, 154, 135, 127, 542, 148,
	149, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	137, 132, 133, 134, 138, 0, 0, 1291, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 2507,
	140, 0, 0, 0, 0, 0, 2511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2147, 0, 0, 0,
	2521, 2522, 2524, 2526, 0, 0, 0, 0, 0, 0,
	2532, 0, 0, 1519, 1409, 2536, 2537, 2538, 0, 0,
	0, 0, 2541, 0, 0, 0, 0, 0, 2543, 0,
	0, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 0, 1180, 2557, 0, 0, 0, 0, 0, 2562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 2194, 0, 0, 0, 0,
	1227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2584, 2585, 1140, 0, 2589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1140, 1140,
	0, 0, 0, 0, 2601, 2602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2239, 2240, 2241, 2242, 2243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 601, 0, 0, 0, 0, 1620, 2252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 87, 0, 0,
	0, 0, 0, 695, 702, 703, 704, 705, 706, 696,
	698, 0, 0, 0, 697, 0, 0, 0, 0, 0,
	2687, 177, 0, 0, 2688, 0, 0, 700, 707, 708,
	2692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 2480, 2481, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 2438, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 2797, 0,
	970, 0, 0, 0, 0, 0, 0, 121, 0, 143,
	0, 2474, 0, 0, 2807, 2808, 2809, 0, 2810, 2811,
	164, 2483, 0, 0, 2814, 0, 2815, 0, 2817, 2820,
	1428, 0, 0, 970, 0, 2824, 0, 0, 0, 2499,
	0, 0, 2502, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2850, 0, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1449, 1450, 152, 151, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 2875, 0, 0, 0, 0, 2880, 0,
	0, 0, 0, 0, 2881, 2882, 685, 0, 0, 689,
	0, 686, 687, 0, 0, 0, 688, 0, 0, 0,
	0, 0, 2888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 1451, 154, 0, 1448,
	0, 148, 149, 0, 0, 2620, 1998, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 2635, 0, 0, 2636, 2637,
	2638, 2930, 0, 0, 0, 1627, 1628, 1629, 1630, 0,
	0, 0, 0, 2936, 0, 0, 0, 2937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1672, 1673, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1716, 1717, 1718, 1719, 1721, 1725, 1726, 601, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 0, 156, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2124,
	2125, 0, 0, 0, 0, 0, 1803, 1804, 2144, 0,
	2145, 2146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 169, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 2221,
	0, 695, 702, 703, 704, 705, 706, 696, 698, 0,
	0, 0, 697, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 700, 707, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2480, 2481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2869, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2367, 0, 79,
	0, 0, 1823, 1823, 1823, 1823, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2144,
	763, 0, 702, 703, 1823, 0, 0, 1823, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 0, 2093, 0, 0, 702, 703, 0, 0, 0,
	0, 1667, 0, 0, 0, 0, 0, 0, 0, 2476,
	0, 0, 0, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 0, 2510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2287, 2288, 0, 0,
	0, 2291, 0, 0, 0, 0, 2293, 2294, 2295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2300, 2301,
	2302, 0, 0, 1732, 2304, 0, 2305, 2306, 0, 0,
	0, 2313, 2314, 0, 0, 0, 0, 0, 0, 1732,
	1732, 1732, 1732, 1732, 601, 601, 601, 601, 0, 0,
	0, 0, 0, 2700, 0, 2704, 2705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2367, 0,
	79, 0, 2367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 0, 0, 0,
	0, 0, 2529, 0, 0, 0, 0, 0, 2860, 2535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2889, 0, 0, 0, 601, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2679, 0, 2680, 0, 0, 0, 0,
	2683, 2684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2732, 0, 0, 2734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2833,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 0, 940, 925, 459,
	0, 871, 943, 840, 859, 953, 862, 865, 907, 819,
	885, 377, 856, 811, 844, 814, 851, 815, 842, 873,
	249, 839, 927, 889, 942, 332, 246, 821, 845, 391,
	861, 197, 909, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 949, 336, 895,
	0, 444, 362, 0, 0, 601, 875, 931, 883, 921,
	870, 908, 829, 894, 944, 857, 904, 945, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 2902, 0, 2903, 0, 2874, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 853, 901, 939, 854, 903, 244,
	292, 251, 243, 463, 950, 930, 818, 882, 938, 0,
	0, 214, 941, 877, 0, 906, 0, 956, 813, 897,
	601, 816, 820, 952, 934, 848, 254, 0, 0, 0,
	0, 0, 0, 0, 874, 884, 918, 868, 0, 0,
	0, 0, 0, 0, 0, 846, 0, 893, 0, 0,
	0, 825, 817, 0, 2928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 828, 0,
	847, 919, 0, 810, 275, 822, 363, 236, 0, 923,
	933, 869, 499, 937, 867, 866, 913, 826, 929, 860,
	331, 824, 300, 192, 210, 0, 858, 373, 415, 421,
	928, 843, 852, 234, 850, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 892, 911, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 1142, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 838, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 924, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 916, 955, 386,
	420, 224, 484, 443, 833, 837, 831, 898, 832, 887,
	888, 834, 946, 947, 948, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 920, 827, 0, 835, 836, 0,
	926, 935, 936, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 891, 191, 207, 334, 951, 408,
	267, 515, 493, 489, 812, 830, 241, 841, 849, 0,
	855, 863, 864, 876, 878, 879, 880, 881, 899, 900,
	902, 910, 912, 915, 917, 922, 932, 954, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 890, 896, 345, 260, 280, 291, 905,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 886,
	914, 341, 460, 461, 287, 359, 0, 0, 940, 925,
	459, 0, 871, 943, 840, 859, 953, 862, 865, 907,
	819, 885, 377, 856, 811, 844, 814, 851, 815, 842,
	873, 249, 839, 927, 889, 942, 332, 246, 821, 845,
	391, 861, 197, 909, 434, 233, 342, 339, 466, 261,
	252, 248, 232, 288, 349, 389, 453, 383, 949, 336,
	895, 0, 444, 362, 0, 0, 0, 875, 931, 883,
	921, 870, 908, 829, 894, 944, 857, 904, 945, 294,
	231, 196, 374, 445, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 853, 901, 939, 854, 903,
	244, 292, 251, 243, 463, 950, 930, 818, 882, 938,
	0, 0, 214, 941, 877, 0, 906, 0, 956, 813,
	897, 0, 816, 820, 952, 934, 848, 254, 0, 0,
	0, 0, 0, 0, 0, 874, 884, 918, 868, 0,
	0, 0, 0, 0, 2398, 0, 846, 0, 893, 0,
	0, 0, 825, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 828,
	0, 847, 919, 0, 810, 275, 822, 363, 236, 0,
	923, 933, 869, 499, 937, 867, 866, 913, 826, 929,
	860, 331, 824, 300, 192, 210, 0, 858, 373, 415,
	421, 928, 843, 852, 234, 850, 419, 387, 482, 218,
	263, 412, 392, 417, 399, 266, 892, 911, 418, 337,
	468, 406, 479, 500, 501, 242, 367, 490, 457, 496,
	514, 211, 239, 381, 450, 485, 441, 360, 464, 465,
	299, 440, 273, 195, 335, 506, 209, 427, 226, 216,
	470, 488, 268, 410, 202, 452, 477, 223, 431, 0,
	0, 516, 204, 475, 449, 356, 296, 297, 203, 0,
	411, 247, 271, 237, 376, 472, 473, 235, 517, 213,
	495, 206, 1142, 494, 369, 467, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 259, 282, 404, 340,
	405, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 518, 219, 220, 221, 838, 258, 262, 270,
	272, 278, 279, 286, 333, 380, 403, 401, 407, 924,
	462, 480, 491, 498, 504, 505, 507, 508, 509, 510,
	511, 513, 512, 368, 285, 442, 301, 338, 916, 955,
	386, 420, 224, 484, 443, 833, 837, 831, 898, 832,
	887, 888, 834, 946, 947, 948, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 920, 827, 0, 835, 836,
	0, 926, 935, 936, 537, 348, 433, 481, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 891, 191, 207, 334, 951,
	408, 267, 515, 493, 489, 812, 830, 241, 841, 849,
	0, 855, 863, 864, 876, 878, 879, 880, 881, 899,
	900, 902, 910, 912, 915, 917, 922, 932, 954, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 395, 396, 397, 398, 400, 402, 409, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 451, 469, 471, 483, 497, 502, 428, 277,
	478, 503, 0, 343, 890, 896, 345, 260, 280, 291,
	905, 492, 448, 212, 416, 269, 201, 230, 215, 238,
	253, 256, 295, 354, 361, 390, 394, 274, 250, 228,
	413, 225, 432, 454, 455, 456, 458, 358, 245, 393,
	886, 914, 341, 460, 461, 287, 359, 0, 0, 940,
	925, 459, 0, 871, 943, 840, 859, 953, 862, 865,
	907, 819, 885, 377, 856, 811, 844, 814, 851, 815,
	842, 873, 249, 839, 927, 889, 942, 332, 246, 821,
	845, 391, 861, 197, 909, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 949,
	336, 895, 0, 444, 362, 0, 0, 0, 875, 931,
	883, 921, 870, 908, 829, 894, 944, 857, 904, 945,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 853, 901, 939, 854,
	903, 244, 292, 251, 243, 463, 950, 930, 818, 882,
	938, 0, 0, 214, 941, 877, 0, 906, 0, 956,
	813, 897, 0, 816, 820, 952, 934, 848, 254, 0,
	0, 0, 0, 0, 0, 0, 874, 884, 918, 868,
	0, 0, 0, 0, 0, 2356, 0, 846, 0, 893,
	0, 0, 0, 825, 817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 872, 0, 0, 0,
	828, 0, 847, 919, 0, 810, 275, 822, 363, 236,
	0, 923, 933, 869, 499, 937, 867, 866, 913, 826,
	929, 860, 331, 824, 300, 192, 210, 0, 858, 373,
	415, 421, 928, 843, 852, 234, 850, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 892, 911, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 1142, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 838, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	924, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 916,
	955, 386, 420, 224, 484, 443, 833, 837, 831, 898,
	832, 887, 888, 834, 946, 947, 948, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 920, 827, 0, 835,
	836, 0, 926, 935, 936, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 891, 191, 207, 334,
	951, 408, 267, 515, 493, 489, 812, 830, 241, 841,
	849, 0, 855, 863, 864, 876, 878, 879, 880, 881,
	899, 900, 902, 910, 912, 915, 917, 922, 932, 954,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 890, 896, 345, 260, 280,
	291, 905, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 886, 914, 341, 460, 461, 287, 359, 0, 0,
	940, 925, 459, 0, 871, 943, 840, 859, 953, 862,
	865, 907, 819, 885, 377, 856, 811, 844, 814, 851,
	815, 842, 873, 249, 839, 927, 889, 942, 332, 246,
	821, 845, 391, 861, 197, 909, 434, 233, 342, 339,
	466, 261, 252, 248, 232, 288, 349, 389, 453, 383,
	949, 336, 895, 0, 444, 362, 0, 0, 0, 875,
	931, 883, 921, 870, 908, 829, 894, 944, 857, 904,
	945, 294, 231, 196, 374, 445, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 853, 901, 939,
	854, 903, 244, 292, 251, 243, 463, 950, 930, 818,
	882, 938, 0, 0, 214, 941, 877, 0, 906, 0,
	956, 813, 897, 0, 816, 820, 952, 934, 848, 254,
	0, 0, 0, 0, 0, 0, 0, 874, 884, 918,
	868, 0, 0, 0, 0, 0, 1811, 0, 846, 0,
	893, 0, 0, 0, 825, 817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 828, 0, 847, 919, 0, 810, 275, 822, 363,
	236, 0, 923, 933, 869, 499, 937, 867, 866, 913,
	826, 929, 860, 331, 824, 300, 192, 210, 0, 858,
	373, 415, 421, 928, 843, 852, 234, 850, 419, 387,
	482, 218, 263, 412, 392, 417, 399, 266, 892, 911,
	418, 337, 468, 406, 479, 500, 501, 242, 367, 490,
	457, 496, 514, 211, 239, 381, 450, 485, 441, 360,
	464, 465, 299, 440, 273, 195, 335, 506, 209, 427,
	226, 216, 470, 488, 268, 410, 202, 452, 477, 223,
	431, 0, 0, 516, 204, 475, 449, 356, 296, 297,
	203, 0, 411, 247, 271, 237, 376, 472, 473, 235,
	517, 213, 495, 206, 1142, 494, 369, 467, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 259, 282,
	404, 340, 405, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 518, 219, 220, 221, 838, 258,
	262, 270, 272, 278, 279, 286, 333, 380, 403, 401,
	407, 924, 462, 480, 491, 498, 504, 505, 507, 508,
	509, 510, 511, 513, 512, 368, 285, 442, 301, 338,
	916, 955, 386, 420, 224, 484, 443, 833, 837, 831,
	898, 832, 887, 888, 834, 946, 947, 948, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 920, 827, 0,
	835, 836, 0, 926, 935, 936, 537, 348, 433, 481,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 891, 191, 207,
	334, 951, 408, 267, 515, 493, 489, 812, 830, 241,
	841, 849, 0, 855, 863, 864, 876, 878, 879, 880,
	881, 899, 900, 902, 910, 912, 915, 917, 922, 932,
	954, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 395, 396, 397, 398, 400, 402, 409,
	414, 422, 423, 424, 425, 426, 429, 430, 435, 436,
	437, 438, 439, 447, 451, 469, 471, 483, 497, 502,
	428, 277, 478, 503, 0, 343, 890, 896, 345, 260,
	280, 291, 905, 492, 448, 212, 416, 269, 201, 230,
	215, 238, 253, 256, 295, 354, 361, 390, 394, 274,
	250, 228, 413, 225, 432, 454, 455, 456, 458, 358,
	245, 393, 886, 914, 341, 460, 461, 287, 359, 0,
	0, 940, 925, 459, 0, 871, 943, 840, 859, 953,
	862, 865, 907, 819, 885, 377, 856, 811, 844, 814,
	851, 815, 842, 873, 249, 839, 927, 889, 942, 332,
	246, 821, 845, 391, 861, 197, 909, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 949, 336, 895, 0, 444, 362, 0, 0, 0,
	875, 931, 883, 921, 870, 908, 829, 894, 944, 857,
	904, 945, 294, 231, 196, 374, 445, 265, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 853, 901,
	939, 854, 903, 244, 292, 251, 243, 463, 950, 930,
	818, 882, 938, 0, 0, 214, 941, 877, 0, 906,
	0, 956, 813, 897, 0, 816, 820, 952, 934, 848,
	254, 0, 0, 0, 0, 0, 0, 0, 874, 884,
	918, 868, 0, 0, 0, 0, 0, 0, 0, 846,
	0, 893, 0, 0, 0, 825, 817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 828, 0, 847, 919, 0, 810, 275, 822,
	363, 236, 0, 923, 933, 869, 499, 937, 867, 866,
	913, 826, 929, 860, 331, 824, 300, 192, 210, 0,
	858, 373, 415, 421, 928, 843, 852, 234, 850, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 892,
	911, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 1142, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 838,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 924, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 916, 955, 386, 420, 224, 484, 443, 833, 837,
	831, 898, 832, 887, 888, 834, 946, 947, 948, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 920, 827,
	0, 835, 836, 0, 926, 935, 936, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 891, 191,
	207, 334, 951, 408, 267, 515, 493, 489, 812, 830,
	241, 841, 849, 0, 855, 863, 864, 876, 878, 879,
	880, 881, 899, 900, 902, 910, 912, 915, 917, 922,
	932, 954, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 890, 896, 345,
	260, 280, 291, 905, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 886, 914, 341, 460, 461, 287, 359,
	0, 0, 940, 925, 459, 0, 871, 943, 840, 859,
	953, 862, 865, 907, 819, 885, 377, 856, 811, 844,
	814, 851, 815, 842, 873, 249, 839, 927, 889, 942,
	332, 246, 821, 845, 391, 861, 197, 909, 434, 233,
	342, 339, 466, 261, 252, 248, 232, 288, 349, 389,
	453, 383, 949, 336, 895, 0, 444, 362, 0, 0,
	0, 875, 931, 883, 921, 870, 908, 829, 894, 944,
	857, 904, 945, 294, 231, 196, 374, 445, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 853,
	901, 939, 854, 903, 244, 292, 251, 243, 463, 950,
	930, 818, 882, 938, 0, 0, 214, 941, 877, 0,
	906, 0, 956, 813, 897, 0, 816, 820, 952, 934,
	848, 254, 0, 0, 0, 0, 0, 0, 0, 874,
	884, 918, 868, 0, 0, 0, 0, 0, 0, 0,
	846, 0, 893, 0, 0, 0, 825, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 828, 0, 847, 919, 0, 810, 275,
	822, 363, 236, 0, 923, 933, 869, 499, 937, 867,
	866, 913, 826, 929, 860, 331, 824, 300, 192, 210,
	0, 858, 373, 415, 421, 928, 843, 852, 234, 850,
	419, 387, 482, 218, 263, 412, 392, 417, 399, 266,
	892, 911, 418, 337, 468, 406, 479, 500, 501, 242,
	367, 490, 457, 496, 514, 211, 239, 381, 450, 485,
	441, 360, 464, 465, 299, 440, 273, 195, 335, 506,
	209, 427, 226, 216, 470, 488, 268, 410, 202, 452,
	477, 223, 431, 0, 0, 516, 204, 475, 449, 356,
	296, 297, 203, 0, 411, 247, 271, 237, 376, 472,
	473, 235, 517, 213, 495, 206, 1142, 494, 369, 467,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	259, 282, 404, 340, 405, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 518, 219, 220, 221,
	838, 258, 262, 270, 272, 278, 279, 286, 333, 380,
	403, 401, 407, 924, 462, 480, 491, 498, 504, 505,
	507, 508, 509, 510, 511, 513, 512, 368, 285, 442,
	301, 338, 916, 955, 386, 420, 224, 484, 443, 833,
	837, 831, 898, 832, 887, 888, 834, 946, 947, 948,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 920,
	827, 0, 835, 836, 0, 926, 935, 936, 537, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 891,
	191, 207, 334, 951, 408, 267, 515, 493, 489, 812,
	830, 241, 841, 849, 0, 855, 863, 864, 876, 878,
	879, 880, 881, 899, 900, 902, 910, 912, 915, 917,
	922, 932, 954, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 395, 396, 397, 398, 400,
	402, 409, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 451, 469, 471, 483,
	497, 502, 428, 277, 478, 503, 0, 343, 890, 896,
	345, 260, 280, 291, 905, 492, 448, 212, 416, 269,
	201, 230, 215, 238, 253, 256, 295, 354, 361, 390,
	394, 274, 250, 228, 413, 225, 432, 454, 455, 456,
	458, 358, 245, 393, 886, 914, 341, 460, 461, 287,
	359, 0, 0, 940, 925, 459, 0, 871, 943, 840,
	859, 953, 862, 865, 907, 819, 885, 377, 856, 811,
	844, 814, 851, 815, 842, 873, 249, 839, 927, 889,
	942, 332, 246, 821, 845, 391, 861, 197, 909, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 949, 336, 895, 0, 444, 362, 0,
	0, 0, 875, 931, 883, 921, 870, 908, 829, 894,
	944, 857, 904, 945, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	853, 901, 939, 854, 903, 244, 292, 251, 243, 463,
	950, 930, 818, 882, 938, 0, 0, 957, 941, 877,
	0, 906, 0, 956, 813, 897, 0, 816, 820, 952,
	934, 848, 254, 0, 0, 0, 0, 0, 0, 0,
	874, 884, 918, 868, 0, 0, 0, 0, 0, 0,
	0, 846, 0, 893, 0, 0, 0, 825, 817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	872, 0, 0, 0, 828, 0, 847, 919, 0, 810,
	275, 822, 363, 236, 0, 923, 933, 869, 499, 937,
	867, 866, 913, 826, 929, 860, 331, 824, 300, 192,
	210, 0, 858, 373, 415, 421, 928, 843, 852, 234,
	850, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 892, 911, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 823, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 838, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 924, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 809, 803,
	802, 301, 338, 916, 955, 386, 420, 224, 484, 443,
	833, 837, 831, 898, 832, 887, 888, 834, 946, 947,
	948, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	920, 827, 0, 835, 836, 0, 926, 935, 936, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	891, 191, 207, 334, 951, 408, 267, 515, 493, 489,
	812, 830, 241, 841, 849, 0, 855, 863, 864, 876,
	878, 879, 880, 881, 899, 900, 902, 910, 912, 915,
	917, 922, 932, 954, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 890,
	896, 345, 260, 280, 291, 905, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 886, 914, 341, 460, 461,
	287, 359, 0, 0, 940, 925, 459, 0, 871, 943,
	840, 859, 953, 862, 865, 907, 819, 885, 377, 856,
	811, 844, 814, 851, 815, 842, 873, 249, 839, 927,
	889, 942, 332, 246, 821, 845, 391, 861, 197, 909,
	434, 233, 342, 339, 466, 261, 252, 248, 232, 288,
	349, 389, 453, 383, 949, 336, 895, 0, 444, 362,
	0, 0, 0, 875, 931, 883, 921, 870, 908, 829,
	894, 944, 857, 904, 945, 294, 231, 196, 374, 445,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 853, 901, 939, 854, 903, 244, 292, 251, 243,
	463, 950, 930, 818, 882, 938, 0, 0, 957, 941,
	877, 0, 906, 0, 956, 813, 897, 0, 816, 820,
	952, 934, 848, 254, 0, 0, 0, 0, 0, 0,
	0, 874, 884, 918, 868, 0, 0, 0, 0, 0,
	0, 0, 846, 0, 893, 0, 0, 0, 825, 817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 0, 0, 828, 0, 847, 919, 0,
	810, 275, 822, 363, 236, 0, 923, 933, 869, 499,
	937, 867, 866, 913, 826, 929, 860, 331, 824, 300,
	192, 210, 0, 858, 373, 415, 421, 928, 843, 852,
	234, 850, 419, 387, 482, 218, 263, 412, 392, 417,
	399, 266, 892, 911, 418, 337, 468, 406, 479, 500,
	501, 242, 367, 490, 457, 496, 514, 211, 239, 381,
	450, 485, 441, 360, 464, 465, 299, 440, 273, 195,
	335, 506, 209, 427, 226, 216, 470, 488, 268, 410,
	202, 452, 1357, 223, 431, 0, 0, 516, 204, 475,
	449, 356, 296, 297, 203, 0, 411, 247, 271, 237,
	376, 472, 473, 235, 517, 213, 495, 206, 823, 494,
	369, 467, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 259, 282, 404, 340, 405, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 518, 219,
	220, 221, 838, 258, 262, 270, 272, 278, 279, 286,
	333, 380, 403, 401, 407, 924, 462, 480, 491, 498,
	504, 505, 507, 508, 509, 510, 511, 513, 512, 809,
	803, 802, 301, 338, 916, 955, 386, 420, 224, 484,
	443, 833, 837, 831, 898, 832, 887, 888, 834, 946,
	947, 948, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 920, 827, 0, 835, 836, 0, 926, 935, 936,
	537, 348, 433, 481, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 891, 191, 207, 334, 951, 408, 267, 515, 493,
	489, 812, 830, 241, 841, 849, 0, 855, 863, 864,
	876, 878, 879, 880, 881, 899, 900, 902, 910, 912,
	915, 917, 922, 932, 954, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 395, 396, 397,
	398, 400, 402, 409, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 451, 469,
	471, 483, 497, 502, 428, 277, 478, 503, 0, 343,
	890, 896, 345, 260, 280, 291, 905, 492, 448, 212,
	416, 269, 201, 230, 215, 238, 253, 256, 295, 354,
	361, 390, 394, 274, 250, 228, 413, 225, 432, 454,
	455, 456, 458, 358, 245, 393, 886, 914, 341, 460,
	461, 287, 359, 0, 0, 940, 925, 459, 0, 871,
	943, 840, 859, 953, 862, 865, 907, 819, 885, 377,
	856, 811, 844, 814, 851, 815, 842, 873, 249, 839,
	927, 889, 942, 332, 246, 821, 845, 391, 861, 197,
	909, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 949, 336, 895, 0, 444,
	362, 0, 0, 0, 875, 931, 883, 921, 870, 908,
	829, 894, 944, 857, 904, 945, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 853, 901, 939, 854, 903, 244, 292, 251,
	243, 463, 950, 930, 818, 882, 938, 0, 0, 957,
	941, 877, 0, 906, 0, 956, 813, 897, 0, 816,
	820, 952, 934, 848, 254, 0, 0, 0, 0, 0,
	0, 0, 874, 884, 918, 868, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 893, 0, 0, 0, 825,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 828, 0, 847, 919,
	0, 810, 275, 822, 363, 236, 0, 923, 933, 869,
	499, 937, 867, 866, 913, 826, 929, 860, 331, 824,
	300, 192, 210, 0, 858, 373, 415, 421, 928, 843,
	852, 234, 850, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 892, 911, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 800, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 823,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 838, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 924, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	809, 803, 802, 301, 338, 916, 955, 386, 420, 224,
	484, 443, 833, 837, 831, 898, 832, 887, 888, 834,
	946, 947, 948, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 920, 827, 0, 835, 836, 0, 926, 935,
	936, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 891, 191, 207, 334, 951, 408, 267, 515,
	493, 489, 812, 830, 241, 841, 849, 0, 855, 863,
	864, 876, 878, 879, 880, 881, 899, 900, 902, 910,
	912, 915, 917, 922, 932, 954, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 890, 896, 345, 260, 280, 291, 905, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 886, 914, 341,
	460, 461, 287, 359, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 1756, 0, 619, 0, 0, 0, 249,
	624, 0, 0, 0, 332, 246, 0, 1757, 391, 0,
	197, 0, 434, 233, 342, 339, 466, 261, 252, 248,
	232, 288, 349, 389, 453, 383, 631, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 231, 196,
	374, 445, 265, 0, 87, 0, 0, 188, 189, 190,
	695, 702, 703, 704, 705, 706, 696, 698, 0, 0,
	222, 697, 229, 642, 644, 643, 653, 654, 655, 656,
	657, 658, 659, 640, 700, 707, 708, 0, 244, 292,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 602, 616,
	0, 630, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 614, 789, 0, 0, 0, 679, 0, 615, 0,
	0, 623, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 236, 0, 678, 0,
	0, 499, 0, 0, 676, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 234, 0, 419, 387, 482, 218, 263, 412,
	392, 417, 399, 266, 0, 0, 418, 337, 468, 406,
	479, 500, 501, 242, 367, 490, 457, 496, 514, 211,
	239, 381, 450, 485, 441, 360, 464, 465, 299, 440,
	273, 195, 335, 506, 209, 427, 226, 216, 470, 488,
	268, 410, 202, 452, 477, 223, 431, 0, 0, 516,
	204, 475, 449, 356, 296, 297, 203, 0, 411, 247,
	271, 237, 376, 472, 473, 235, 517, 213, 495, 206,
	0, 494, 369, 467, 476, 357, 347, 205, 474, 355,
	346, 302, 648, 649, 259, 282, 404, 340, 405, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	518, 219, 220, 221, 0, 258, 262, 270, 272, 278,
	279, 286, 333, 380, 403, 401, 407, 0, 462, 480,
	491, 498, 504, 505, 507, 508, 509, 510, 511, 513,
	512, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	224, 484, 443, 685, 677, 635, 689, 637, 686, 687,
	632, 633, 636, 688, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 680, 622, 621, 0, 628, 629, 0,
	638, 639, 641, 645, 646, 647, 650, 651, 652, 660,
	662, 663, 661, 664, 665, 666, 669, 670, 671, 672,
	667, 668, 673, 620, 191, 207, 334, 0, 408, 267,
	515, 493, 489, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 395,
	396, 397, 398, 400, 402, 409, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	451, 469, 471, 483, 497, 502, 428, 277, 478, 503,
	0, 343, 0, 0, 345, 260, 280, 291, 0, 492,
	448, 212, 416, 269, 201, 230, 215, 238, 253, 256,
	295, 354, 361, 390, 394, 274, 250, 228, 413, 225,
	432, 454, 455, 456, 458, 358, 245, 393, 0, 359,
	341, 460, 461, 287, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 619, 0, 0, 0, 249, 624, 0, 0, 0,
	332, 246, 0, 0, 391, 0, 197, 0, 434, 233,
	342, 339, 466, 261, 252, 248, 232, 288, 349, 389,
	453, 383, 631, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 231, 196, 374, 445, 265, 0,
	87, 0, 0, 188, 189, 190, 695, 702, 703, 704,
	705, 706, 696, 698, 0, 0, 222, 697, 229, 642,
	644, 643, 653, 654, 655, 656, 657, 658, 659, 640,
	700, 707, 708, 0, 244, 292, 251, 243, 463, 0,
	0, 1722, 1723, 1724, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 602, 616, 0, 630, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 679, 0, 615, 0, 0, 623, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 236, 0, 678, 0, 0, 499, 0, 0,
	676, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 234, 0,
	419, 387, 482, 218, 263, 412, 392, 417, 399, 266,
	0, 0, 418, 337, 468, 406, 479, 500, 501, 242,
	367, 490, 457, 496, 514, 211, 239, 381, 450, 485,
	441, 360, 464, 465, 299, 440, 273, 195, 335, 506,
	209, 427, 226, 216, 470, 488, 268, 410, 202, 452,
	477, 223, 431, 0, 0, 516, 204, 475, 449, 356,
	296, 297, 203, 0, 411, 247, 271, 237, 376, 472,
	473, 235, 517, 213, 495, 206, 0, 494, 369, 467,
	476, 357, 347, 205, 474, 355, 346, 302, 648, 649,
	259, 282, 404, 340, 405, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 518, 219, 220, 221,
	0, 258, 262, 270, 272, 278, 279, 286, 333, 380,
	403, 401, 407, 0, 462, 480, 491, 498, 504, 505,
	507, 508, 509, 510, 511, 513, 512, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 224, 484, 443, 685,
	677, 635, 689, 637, 686, 687, 632, 633, 636, 688,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 680,
	622, 621, 0, 628, 629, 0, 638, 639, 641, 645,
	646, 647, 650, 651, 652, 660, 662, 663, 661, 664,
	665, 666, 669, 670, 671, 672, 667, 668, 673, 620,
	191, 207, 334, 0, 408, 267, 515, 493, 489, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 395, 396, 397, 398, 400,
	402, 409, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 451, 469, 471, 483,
	497, 502, 428, 277, 478, 503, 0, 343, 0, 0,
	345, 260, 280, 291, 0, 492, 448, 212, 416, 269,
	201, 230, 215, 238, 253, 256, 295, 354, 361, 390,
	394, 274, 250, 228, 413, 225, 432, 454, 455, 456,
	458, 358, 245, 393, 0, 359, 341, 460, 461, 287,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 619, 0, 0,
	0, 249, 624, 0, 0, 0, 332, 246, 0, 0,
	391, 0, 197, 0, 434, 233, 342, 339, 466, 261,
	252, 248, 232, 288, 349, 389, 453, 383, 631, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 626,
	627, 0, 0, 0, 0, 0, 0, 1838, 0, 294,
	231, 196, 374, 445, 265, 0, 87, 0, 0, 188,
	189, 190, 695, 702, 703, 704, 705, 706, 696, 698,
	0, 0, 222, 697, 229, 642, 644, 643, 653, 654,
	655, 656, 657, 658, 659, 640, 700, 707, 708, 1839,
	244, 292, 251, 243, 463, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	602, 616, 0, 630, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 679, 0,
	615, 0, 0, 623, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 236, 0,
	678, 0, 0, 499, 0, 0, 676, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 234, 0, 419, 387, 482, 218,
	263, 412, 392, 417, 399, 266, 0, 0, 418, 337,
	468, 406, 479, 500, 501, 242, 367, 490, 457, 496,
	514, 211, 239, 381, 450, 485, 441, 360, 464, 465,
	299, 440, 273, 195, 335, 506, 209, 427, 226, 216,
	470, 488, 268, 410, 202, 452, 477, 223, 431, 0,
	0, 516, 204, 475, 449, 356, 296, 297, 203, 0,
	411, 247, 271, 237, 376, 472, 473, 235, 517, 213,
	495, 206, 0, 494, 369, 467, 476, 357, 347, 205,
	474, 355, 346, 302, 648, 649, 259, 282, 404, 340,
	405, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 518, 219, 220, 221, 0, 258, 262, 270,
	272, 278, 279, 286, 333, 380, 403, 401, 407, 0,
	462, 480, 491, 498, 504, 505, 507, 508, 509, 510,
	511, 513, 512, 368, 285, 442, 301, 338, 0, 0,
	386, 420, 224, 484, 443, 685, 677, 635, 689, 637,
	686, 687, 632, 633, 636, 688, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 680, 622, 621, 0, 628,
	629, 0, 638, 639, 641, 645, 646, 647, 650, 651,
	652, 660, 662, 663, 661, 664, 665, 666, 669, 670,
	671, 672, 667, 668, 673, 620, 191, 207, 334, 0,
	408, 267, 515, 493, 489, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 395, 396, 397, 398, 400, 402, 409, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 451, 469, 471, 483, 497, 502, 428, 277,
	478, 503, 0, 343, 0, 0, 345, 260, 280, 291,
	0, 492, 448, 212, 416, 269, 201, 230, 215, 238,
	253, 256, 295, 354, 361, 390, 394, 274, 250, 228,
	413, 225, 432, 454, 455, 456, 458, 358, 245, 393,
	0, 0, 341, 460, 461, 287, 359, 0, 0, 0,
	78, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 619, 0,
	0, 0, 249, 624, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 631,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 87, 0, 0,
	188, 189, 190, 695, 702, 703, 704, 705, 706, 696,
	698, 0, 0, 222, 697, 229, 642, 644, 643, 653,
	654, 655, 656, 657, 658, 659, 640, 700, 707, 708,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 602, 616, 0, 630, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 679,
	0, 615, 0, 0, 623, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 678, 0, 0, 499, 0, 0, 676, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 648, 649, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 685, 677, 635, 689,
	637, 686, 687, 632, 633, 636, 688, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 680, 622, 621, 0,
	628, 629, 0, 638, 639, 641, 645, 646, 647, 650,
	651, 652, 660, 662, 663, 661, 664, 665, 666, 669,
	670, 671, 672, 667, 668, 673, 620, 191, 207, 334,
	86, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 619, 0, 0, 0, 249, 624,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 631, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 87, 0, 0, 188, 189, 190, 695,
	702, 703, 704, 705, 706, 696, 698, 0, 0, 222,
	697, 229, 642, 644, 643, 653, 654, 655, 656, 657,
	658, 659, 640, 700, 707, 708, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 602, 616, 0,
	630, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 613,
	614, 0, 0, 0, 0, 679, 0, 615, 0, 0,
	623, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 678, 0, 0,
	499, 0, 0, 676, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 2896, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 648, 649, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 685, 677, 635, 689, 637, 686, 687, 632,
	633, 636, 688, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 680, 622, 621, 0, 628, 629, 0, 638,
	639, 641, 645, 646, 647, 650, 651, 652, 660, 662,
	663, 661, 664, 665, 666, 669, 670, 671, 672, 667,
	668, 673, 620, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	619, 0, 0, 0, 249, 624, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 631, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 87,
	0, 1324, 188, 189, 190, 695, 702, 703, 704, 705,
	706, 696, 698, 0, 0, 222, 697, 229, 642, 644,
	643, 653, 654, 655, 656, 657, 658, 659, 640, 700,
	707, 708, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 602, 616, 0, 630, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 679, 0, 615, 0, 0, 623, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 678, 0, 0, 499, 0, 0, 676,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 648, 649, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 685, 677,
	635, 689, 637, 686, 687, 632, 633, 636, 688, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 680, 622,
	621, 0, 628, 629, 0, 638, 639, 641, 645, 646,
	647, 650, 651, 652, 660, 662, 663, 661, 664, 665,
	666, 669, 670, 671, 672, 667, 668, 673, 620, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 619, 0, 0, 0,
	249, 624, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 631, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 87, 0, 0, 188, 189,
	190, 695, 702, 703, 704, 705, 706, 696, 698, 0,
	0, 222, 697, 229, 642, 644, 643, 653, 654, 655,
	656, 657, 658, 659, 640, 700, 707, 708, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 602,
	616, 0, 630, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 614, 789, 0, 0, 0, 679, 0, 615,
	0, 0, 623, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 678,
	0, 0, 499, 0, 0, 676, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 648, 649, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 685, 677, 635, 689, 637, 686,
	687, 632, 633, 636, 688, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 680, 622, 621, 0, 628, 629,
	0, 638, 639, 641, 645, 646, 647, 650, 651, 652,
	660, 662, 663, 661, 664, 665, 666, 669, 670, 671,
	672, 667, 668, 673, 620, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 619, 0, 0, 0, 249, 624, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 631, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 87, 0, 0, 188, 189, 190, 695, 702, 703,
	704, 705, 706, 696, 698, 0, 0, 222, 697, 229,
	642, 644, 643, 653, 654, 655, 656, 657, 658, 659,
	640, 700, 707, 708, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 602, 616, 0, 630, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 613, 614, 0,
	0, 0, 0, 679, 0, 615, 0, 0, 623, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 678, 0, 0, 499, 0,
	0, 676, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 648,
	649, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	685, 677, 635, 689, 637, 686, 687, 632, 633, 636,
	688, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	680, 622, 621, 0, 628, 629, 0, 638, 639, 641,
	645, 646, 647, 650, 651, 652, 660, 662, 663, 661,
	664, 665, 666, 669, 670, 671, 672, 667, 668, 673,
	620, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 619, 0,
	0, 0, 249, 624, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 631,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 87, 0, 0,
	188, 189, 190, 695, 702, 703, 704, 705, 706, 696,
	698, 0, 0, 222, 697, 229, 642, 644, 643, 653,
	654, 655, 656, 657, 658, 659, 640, 700, 707, 708,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 0, 630, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 679,
	0, 615, 0, 0, 623, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 678, 0, 0, 499, 0, 0, 676, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 648, 649, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 685, 677, 635, 689,
	637, 686, 687, 632, 633, 636, 688, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 680, 622, 621, 0,
	628, 629, 0, 638, 639, 641, 645, 646, 647, 650,
	651, 652, 660, 662, 663, 661, 664, 665, 666, 669,
	670, 671, 672, 667, 668, 673, 620, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	702, 703, 0, 0, 0, 0, 1667, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 1007, 499, 0, 0, 0,
	0, 0, 1004, 1005, 331, 965, 300, 192, 210, 998,
	1002, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 0, 341, 460, 461, 287, 359,
	0, 0, 0, 78, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	332, 246, 0, 0, 391, 0, 197, 0, 434, 233,
	342, 339, 466, 261, 252, 248, 232, 288, 349, 389,
	453, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 231, 196, 374, 445, 265, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 244, 292, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 236, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 234, 0,
	419, 387, 482, 218, 263, 412, 392, 417, 399, 266,
	0, 0, 418, 337, 468, 406, 479, 500, 501, 242,
	367, 490, 457, 496, 514, 211, 239, 381, 450, 485,
	441, 360, 464, 465, 299, 440, 273, 195, 335, 506,
	209, 427, 226, 216, 470, 488, 268, 410, 202, 452,
	477, 223, 431, 0, 0, 516, 204, 475, 449, 356,
	296, 297, 203, 0, 411, 247, 271, 237, 376, 472,
	473, 235, 517, 213, 495, 206, 0, 494, 369, 467,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	259, 282, 404, 340, 405, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 518, 219, 220, 221,
	0, 258, 262, 270, 272, 278, 279, 286, 333, 380,
	403, 401, 407, 0, 462, 480, 491, 498, 504, 505,
	507, 508, 509, 510, 511, 513, 512, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 224, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 86, 408, 267, 515, 493, 489, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 395, 396, 397, 398, 400,
	402, 409, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 451, 469, 471, 483,
	497, 502, 428, 277, 478, 503, 0, 343, 0, 0,
	345, 260, 280, 291, 0, 492, 448, 212, 416, 269,
	201, 230, 215, 238, 253, 256, 295, 354, 361, 390,
	394, 274, 250, 228, 413, 225, 432, 454, 455, 456,
	458, 358, 245, 393, 0, 1343, 341, 460, 461, 287,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 1345, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 332, 246, 0, 0,
	391, 0, 197, 0, 434, 233, 342, 339, 466, 261,
	252, 248, 232, 288, 349, 389, 453, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	231, 196, 374, 445, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	244, 292, 251, 243, 463, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 1176, 0, 1177, 1178,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 236, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 234, 0, 419, 387, 482, 218,
	263, 412, 392, 417, 399, 266, 0, 0, 418, 337,
	468, 406, 479, 500, 501, 242, 367, 490, 457, 496,
	514, 211, 239, 381, 450, 485, 441, 360, 464, 465,
	299, 440, 273, 195, 335, 506, 209, 427, 226, 216,
	470, 488, 268, 410, 202, 452, 477, 223, 431, 0,
	0, 516, 204, 475, 449, 356, 296, 297, 203, 0,
	411, 247, 271, 237, 376, 472, 473, 235, 517, 213,
	495, 206, 0, 494, 369, 467, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 259, 282, 404, 340,
	405, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 518, 219, 220, 221, 0, 258, 262, 270,
	272, 278, 279, 286, 333, 380, 403, 401, 407, 0,
	462, 480, 491, 498, 504, 505, 507, 508, 509, 510,
	511, 513, 512, 368, 285, 442, 301, 338, 0, 0,
	386, 420, 224, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 348, 433, 481, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 267, 515, 493, 489, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 395, 396, 397, 398, 400, 402, 409, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 451, 469, 471, 483, 497, 502, 428, 277,
	478, 503, 0, 343, 0, 0, 345, 260, 280, 291,
	0, 492, 448, 212, 416, 269, 201, 230, 215, 238,
	253, 256, 295, 354, 361, 390, 394, 274, 250, 228,
	413, 225, 432, 454, 455, 456, 458, 358, 245, 393,
	0, 359, 341, 460, 461, 287, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 332, 246, 0, 0, 391, 0, 197, 0,
	434, 233, 342, 339, 466, 261, 252, 248, 232, 288,
	349, 389, 453, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 231, 196, 374, 445,
	265, 0, 0, 0, 0, 188, 189, 190, 1286, 1289,
	0, 0, 0, 0, 1285, 1288, 0, 0, 222, 1284,
	229, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 244, 292, 251, 243,
	463, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 236, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	234, 0, 419, 387, 482, 218, 263, 412, 392, 417,
	399, 266, 0, 0, 418, 337, 468, 406, 479, 500,
	501, 242, 367, 490, 457, 496, 514, 211, 239, 381,
	450, 485, 441, 360, 464, 465, 299, 440, 273, 195,
	335, 506, 209, 427, 226, 216, 470, 488, 268, 410,
	202, 452, 477, 223, 431, 0, 0, 516, 204, 475,
	449, 356, 296, 297, 203, 0, 411, 247, 271, 237,
	376, 472, 473, 235, 517, 213, 495, 206, 0, 494,
	369, 467, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 259, 282, 404, 340, 405, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 518, 219,
	220, 221, 0, 258, 262, 270, 272, 278, 279, 286,
	333, 380, 403, 401, 407, 0, 462, 480, 491, 498,
	504, 505, 507, 508, 509, 510, 511, 513, 512, 368,
	285, 442, 301, 338, 0, 0, 386, 420, 224, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 348, 433, 481, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 267, 515, 493,
	489, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 395, 396, 397,
	398, 400, 402, 409, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 451, 469,
	471, 483, 497, 502, 428, 277, 478, 503, 0, 343,
	0, 0, 345, 260, 280, 291, 0, 492, 448, 212,
	416, 269, 201, 230, 215, 238, 253, 256, 295, 354,
	361, 390, 394, 274, 250, 228, 413, 225, 432, 454,
	455, 456, 458, 358, 245, 393, 0, 0, 341, 460,
	461, 287, 359, 0, 0, 0, 78, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 87, 0, 1324, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 86, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 1778, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 1776, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 965, 300, 192,
	210, 963, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 1778, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 1324, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 2826, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 2114, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2099, 0, 0, 0, 2100, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 1368, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 2910, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	2826, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 1618, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 1491, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 1489,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 1487, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 1485, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 1483, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 1479, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 1477,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 1475, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 1452, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 1352, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 594, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	593, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 359, 341, 460, 461, 287, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 332, 246, 0, 0, 391, 0, 197,
	0, 434, 233, 342, 339, 466, 261, 252, 248, 232,
	288, 349, 389, 453, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 231, 196, 374,
	445, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 244, 292, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 236, 0, 0, 540, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 234, 0, 419, 387, 482, 218, 263, 412, 392,
	417, 399, 266, 0, 0, 418, 337, 468, 406, 479,
	500, 501, 242, 367, 490, 457, 496, 514, 211, 239,
	381, 450, 485, 441, 360, 464, 465, 299, 440, 273,
	195, 335, 506, 209, 427, 226, 216, 470, 488, 268,
	410, 202, 452, 477, 223, 431, 0, 0, 516, 204,
	475, 449, 356, 296, 297, 203, 0, 411, 247, 271,
	237, 376, 472, 473, 235, 517, 213, 495, 206, 0,
	494, 369, 467, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 259, 282, 404, 340, 405, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 518,
	219, 220, 221, 0, 258, 262, 270, 272, 278, 279,
	286, 333, 380, 403, 401, 407, 0, 462, 480, 491,
	498, 504, 505, 507, 508, 509, 510, 511, 513, 512,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 224,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 267, 515,
	493, 489, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 395, 396,
	397, 398, 400, 402, 409, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 451,
	469, 471, 483, 497, 502, 428, 277, 478, 503, 0,
	343, 0, 0, 345, 260, 280, 291, 0, 492, 448,
	212, 416, 269, 201, 230, 215, 238, 253, 256, 295,
	354, 361, 390, 394, 274, 250, 228, 413, 225, 432,
	454, 455, 456, 458, 358, 245, 393, 0, 359, 341,
	460, 461, 287, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 332,
	246, 0, 0, 391, 0, 197, 0, 434, 233, 342,
	339, 466, 261, 252, 248, 232, 288, 349, 389, 453,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 231, 196, 374, 445, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 244, 292, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 236, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 234, 0, 419,
	387, 482, 218, 263, 412, 392, 417, 399, 266, 0,
	0, 418, 337, 468, 406, 479, 500, 501, 242, 367,
	490, 457, 496, 514, 211, 239, 381, 450, 485, 441,
	360, 464, 465, 299, 440, 273, 195, 335, 506, 209,
	427, 226, 216, 470, 488, 268, 410, 202, 452, 477,
	223, 431, 0, 0, 516, 204, 475, 449, 356, 296,
	297, 203, 0, 411, 247, 271, 237, 376, 472, 473,
	235, 517, 213, 495, 206, 0, 494, 369, 467, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 259,
	282, 404, 340, 405, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 518, 219, 220, 221, 0,
	258, 262, 270, 272, 278, 279, 286, 333, 380, 403,
	401, 407, 0, 462, 480, 491, 498, 504, 505, 507,
	508, 509, 510, 511, 513, 512, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 224, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 267, 515, 493, 489, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 2915, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 395, 396, 397, 398, 400, 402,
	409, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 451, 469, 471, 483, 497,
	502, 428, 277, 478, 503, 0, 343, 0, 0, 345,
	260, 280, 291, 0, 492, 448, 212, 416, 269, 201,
	230, 215, 238, 253, 256, 295, 354, 361, 390, 394,
	274, 250, 228, 413, 225, 432, 454, 455, 456, 458,
	358, 245, 393, 0, 359, 341, 460, 461, 287, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 332, 246, 0, 0, 391,
	0, 197, 0, 434, 233, 342, 339, 466, 261, 252,
	248, 232, 288, 349, 389, 453, 383, 0, 336, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 231,
	196, 374, 445, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 244,
	292, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 236, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 234, 0, 419, 387, 482, 218, 263,
	412, 392, 417, 399, 266, 0, 0, 418, 337, 468,
	406, 479, 500, 501, 242, 367, 490, 457, 496, 514,
	211, 239, 381, 450, 485, 441, 360, 464, 465, 299,
	440, 273, 195, 335, 506, 209, 427, 226, 216, 470,
	488, 268, 410, 202, 452, 477, 223, 431, 0, 0,
	516, 204, 475, 449, 356, 296, 297, 203, 0, 411,
	247, 271, 237, 376, 472, 473, 235, 517, 213, 495,
	206, 0, 494, 369, 467, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 259, 282, 404, 340, 405,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 518, 219, 220, 221, 0, 258, 262, 270, 272,
	278, 279, 286, 333, 380, 403, 401, 407, 0, 462,
	480, 491, 498, 504, 505, 507, 508, 509, 510, 511,
	513, 512, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 224, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	267, 515, 493, 489, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	395, 396, 397, 398, 400, 402, 409, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 451, 469, 471, 483, 497, 502, 428, 277, 478,
	503, 0, 343, 0, 0, 345, 260, 280, 291, 0,
	492, 448, 212, 416, 269, 201, 230, 215, 238, 253,
	256, 295, 354, 361, 390, 394, 274, 250, 228, 413,
	225, 432, 454, 455, 456, 458, 358, 245, 393, 0,
	359, 341, 460, 461, 287, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 332, 246, 0, 0, 391, 0, 197, 0, 434,
	233, 342, 339, 466, 261, 252, 248, 232, 288, 349,
	389, 453, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 231, 196, 374, 445, 265,
	0, 0, 0, 0, 188, 2563, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 244, 292, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 236, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 234,
	0, 419, 387, 482, 218, 263, 412, 392, 417, 399,
	266, 0, 0, 418, 337, 468, 406, 479, 500, 501,
	242, 367, 490, 457, 496, 514, 211, 239, 381, 450,
	485, 441, 360, 464, 465, 299, 440, 273, 195, 335,
	506, 209, 427, 226, 216, 470, 488, 268, 410, 202,
	452, 477, 223, 431, 0, 0, 516, 204, 475, 449,
	356, 296, 297, 203, 0, 411, 247, 271, 237, 376,
	472, 473, 235, 517, 213, 495, 206, 0, 494, 369,
	467, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 259, 282, 404, 340, 405, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 518, 219, 220,
	221, 0, 258, 262, 270, 272, 278, 279, 286, 333,
	380, 403, 401, 407, 0, 462, 480, 491, 498, 504,
	505, 507, 508, 509, 510, 511, 513, 512, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 224, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 267, 515, 493, 489,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 395, 396, 397, 398,
	400, 402, 409, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 451, 469, 471,
	483, 497, 502, 428, 277, 478, 503, 0, 343, 0,
	0, 345, 260, 280, 291, 0, 492, 448, 212, 416,
	269, 201, 230, 215, 238, 253, 256, 295, 354, 361,
	390, 394, 274, 250, 228, 413, 225, 432, 454, 455,
	456, 458, 358, 245, 393, 0, 359, 341, 460, 461,
	287, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 332, 246, 0,
	0, 391, 0, 197, 0, 434, 233, 342, 339, 466,
	261, 252, 248, 232, 288, 349, 389, 453, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 231, 196, 374, 445, 265, 0, 0, 0, 0,
	188, 2095, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 244, 292, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 236,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 234, 0, 419, 387, 482,
	218, 263, 412, 392, 417, 399, 266, 0, 0, 418,
	337, 468, 406, 479, 500, 501, 242, 367, 490, 457,
	496, 514, 211, 239, 381, 450, 485, 441, 360, 464,
	465, 299, 440, 273, 195, 335, 506, 209, 427, 226,
	216, 470, 488, 268, 410, 202, 452, 477, 223, 431,
	0, 0, 516, 204, 475, 449, 356, 296, 297, 203,
	0, 411, 247, 271, 237, 376, 472, 473, 235, 517,
	213, 495, 206, 0, 494, 369, 467, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 259, 282, 404,
	340, 405, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 518, 219, 220, 221, 0, 258, 262,
	270, 272, 278, 279, 286, 333, 380, 403, 401, 407,
	0, 462, 480, 491, 498, 504, 505, 507, 508, 509,
	510, 511, 513, 512, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 224, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 267, 515, 493, 489, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 395, 396, 397, 398, 400, 402, 409, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 451, 469, 471, 483, 497, 502, 428,
	277, 478, 503, 0, 343, 0, 0, 345, 260, 280,
	291, 0, 492, 448, 212, 416, 269, 201, 230, 215,
	238, 253, 256, 295, 354, 361, 390, 394, 274, 250,
	228, 413, 225, 432, 454, 455, 456, 458, 358, 245,
	393, 0, 0, 341, 460, 461, 287,
}

var yyPact = [...]int{
	3651, -1000, -417, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1959, 1991, -1000, -1000,
	-1000, -1000, 2125, -1000, 649, 1654, -1000, 1962, 5004, -1000,
	40300, 389, -1000, 39108, 388, 2913, 40300, -1000, 93, -1000,
	79, 40300, 88, 38512, -1000, -1000, -307, 17046, 1873, -23,
	-25, 40300, -1000, -1000, -1000, -1000, 2099, 1560, -1000, 302,
	-1000, -1000, -1000, -1000, -1000, -1000, 37916, -1000, -1000, -1000,
	1973, 1918, 2131, 570, 1872, -1000, 2024, 1560, -1000, 17046,
	2065, 2006, 16450, -1000, 16450, 344, -1000, -1000, 12268, -1000,
	-1000, 23016, 40300, 28380, 200, -1000, 1962, -1000, -1000, -1000,
	97, -1000, 265, 1513, -1000, 1511, -1000, 616, 652, 282,
	420, 412, 281, 276, 274, 270, 268, 267, 254, 253,
	261, -1000, 620, 620, -174, -176, 609, 336, 336, 336,
	363, 1907, 1903, -1000, 588, -1000, 620, 620, 620, 259,
	620, 620, 620, 620, 211, 210, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 285, 1962, 190, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40300, 108,
	40300, -1000, 491, 40300, 714, 714, -11, 714, 714, 714,
	714, 100, 546, -32, -1000, 96, 169, 83, 187, 708,
	178, -1000, -1000, 183, 708, 1133, -1000, 582, 77, -1000,
	714, 714, -1000, 9864, 151, 9864, 9864, -1000, 1944, -1000,
	-1000, -1000, -1000, 1142, -1000, 360, -1000, -1000, -1000, -1000,
	40300, 37320, 296, 643, -1000, -1000, -1000, 57, -1000, -1000,
	1284, 945, 17046, 896, -1000, 826, 538, -1000, -1000, -1000,
	-1000, -1000, 404, 17642, 17642, 17642, 17642, -1000, -1000, 1521,
	1521, 1521, 1521, 17642, 1521, 17642, 1521, 1521, 1521, 1521,
	17046, 1521, 1521, 1521, -1000, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 1521, 1521, 1521, 489, 1521, 1521, 1521, 1521,
	1521, -1000, -1000, -1000, -1000, 1521, 1521, 1521, 1521, 1521,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20627,
	-1000, 14662, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 40300, -1000, 1521, 111, 40300, 40300, 258, 2024, 1560,
	-1000, 2099, 2059, 302, -1000, 2247, 1473, 1312, 1077, 1560,
	1447, 40300, -1000, 1529, -1000, -1000, -1000, 1774, 1071, 1132,
	-1000, -1000, -1000, -1000, 1393, 17046, -1000, -1000, 2113, -1000,
	20031, 488, 781, 2110, 36724, -1000, 344, 344, 1477, 11667,
	-71, -1000, -1000, -1000, 642, 25996, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1944, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1522, 40300,
	-1000, -1000, 4848, 1083, -1000, 1651, -1000, 1508, -1000, 1578,
	17046, 1669, 385, 1083, 373, 371, 368, -1000, -111, -1000,
	-1000, -1000, -1000, -1000, -1000, 620, 620, 620, -1000, 249,
	2062, 5004, 5656, -1000, -1000, -1000, 36128, 1645, 1083, -1000,
	1642, -1000, 715, 453, 468, 468, 1083, -1000, -1000, 40300,
	1083, 709, 706, 40300, 40300, -1000, 35532, -1000, 34936, 34340,
	997, 40300, 33744, 33148, 32552, 31956, 31360, -1000, 1787, -1000,
	1802, -1000, -1000, -1000, 40300, 40300, 40300, 257, -1000, -1000,
	40300, 1083, -1000, -1000, 994, 991, 983, 620, 620, 981,
	1131, 1126, 1121, 620, 620, 980, 1120, 27188, 1119, 188,
	978, 960, 957, 927, 1112, 172, 1107, 924, 909, 942,
	40300, 1640, 40300, -1000, 146, 563, 308, 637, 1962, 1868,
	1471, 356, 381, 1083, 345, 345, 40300, -1000, 10465, -1000,
	-1000, 1106, 17046, -1000, 711, 708, 708, -1000, -1000, -1000,
	-1000, -1000, -1000, 714, 40300, 711, -1000, -1000, -1000, 708,
	714, 40300, 714, 714, 714, 714, 708, 708, 708, 714,
	40300, 40300, 40300, 40300, 40300, 40300, 40300, 40300, 40300, 9864,
	582, 714, -319, -1000, 1105, -1000, 1749, -1000, -1000, -1000,
	-1000, -1000, -1000, 9864, 9864, -1000, -1000, -1000, -1000, 85,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -90,
	1469, 30764, -1000, -320, -321, -323, -328, -1000, -1000, -1000,
	-329, -330, -1000, -1000, -1000, 17046, 17046, 17046, 17046, -206,
	-1000, 728, 17642, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	800, 590, 17642, 17642, 17642, 17642, 17642, 17642, 17642, 17642,
	17642, 17642, 17642, 17642, 17642, 17642, 17642, 840, 6310, 6310,
	538, 538, 538, 538, -1000, 16450, 17046, 17046, 538, -1000,
	1083, 30168, 16450, 16450, 17046, 1939, 660, 945, 40300, -1000,
	1077, -1000, -1000, -1000, 908, -1000, 40300, 40300, 76, 17046,
	17046, 17046, 17046, 17046, 17046, 13465, 17046, 17046, 17046, 17046,
	17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046,
	17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046,
	17046, 17046, 12869, 10465, 16450, 16450, 16450, 16450, 16450, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 487, 1500, 1208, 1345, -1000, 1467, -1000, -166, 22420,
	17046, 1104, 2109, 1681, 40300, -1000, -1000, -1000, 2024, -1000,
	2024, 1500, 1932, 1792, 16450, -1000, -1000, 1932, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1145, -1000, 40300, 1447,
	1999, 40300, 1780, 1088, 255, -1000, 17046, 17046, 1440, -1000,
	1178, 40300, -1000, -206, -1000, 29572, -1000, -1000, 9263, -1000,
	40300, 251, 40300, -1000, 21824, 28976, 11066, -71, -1000, 11066,
	1400, -1000, -50, -57, 14061, 537, -1000, -1000, -1000, 609,
	18834, 1210, 537, 19, -1000, -1000, -1000, 1578, -1000, 1578,
	1578, 1578, 1578, 255, 255, 255, 255, -1000, -1000, -1000,
	-1000, -1000, 1639, 1636, -1000, 1578, 1578, 1578, 1578, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1635, 1635, 1635, 1623,
	1623, 328, -1000, 17046, 186, 28380, 1980, 922, 1421, 146,
	347, 1668, 1083, 1083, 1083, 347, -1000, 1065, 1059, 1028,
	-1000, -408, 1437, -1000, -1000, 2053, -1000, -1000, 696, 741,
	735, 717, 40300, 116, 246, -1000, 326, -1000, 28380, 1083,
	705, 468, 1083, -1000, 1083, -1000, -1000, -1000, -1000, -1000,
	1083, 1433, -1000, 1426, 798, 729, 794, 718, 1433, -1000,
	-1000, -152, 1433, -1000, 1433, -1000, 1433, -1000, 1433, -1000,
	1433, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 597,
	40300, 116, 840, -1000, 354, -1000, -1000, -1000, 840, 840,
	-1000, -1000, -1000, -1000, 1087, 1085, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -395, 40300, -1000, 129, 635,
	206, 244, 195, 40300, 145, 2015, 2008, 2002, 189, 209,
	40300, 40300, 345, 1728, 40300, 1986, 40300, -1000, -1000, -1000,
	-1000, -1000, 945, 40300, -1000, -1000, 714, 714, -1000, -1000,
	40300, 714, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	714, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 40300, -1000, -1000, -1000,
	-1000, 40300, -1000, -1000, -1000, -1000, -1000, 114, -52, 283,
	-1000, -1000, -1000, -1000, -1000, 2019, -1000, 945, 698, 686,
	-1000, 1521, -1000, -1000, 788, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 800, 17642, 17642, 17642, 1491, 382, 1507, 1518,
	1528, 867, 867, 805, 805, 543, 543, 543, 543, 543,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1078, -1000,
	1453, -1000, 1319, 1332, 1077, -1000, 1453, 1453, 1282, 16450,
	-1000, -1000, 671, -1000, 17046, 1077, -1000, -1000, 1077, 1077,
	1430, 1420, 2108, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1082, 1421, 1421, 1421, 1421, 1421,
	17046, 1307, -1000, -1000, -1000, 1905, 1899, 1077, 1284, 1077,
	1418, -1000, 1866, 1421, 1845, 1837, 1812, 1411, 1806, 1778,
	1773, 1421, 1421, 1421, 1239, 1752, 1744, 1740, 1736, 1719,
	1710, 1702, 1657, 1643, 1421, 1077, 16450, 16450, 1410, 1521,
	486, -1000, 1453, 1077, 1077, 1453, 1453, 10465, 1077, -1000,
	40300, -1000, -304, -1000, -55, 520, 1521, -1000, 27188, 1077,
	-1000, 6373, -1000, 41492, -1000, -1000, -1000, -1000, -1000, 25400,
	1314, 1932, -1000, -1000, 1521, 1496, -1000, -1000, 255, 3,
	24804, -1000, -1000, 945, 945, 17046, -1000, -1000, -1000, -1000,
	-1000, -1000, 478, 2089, 295, 1521, -1000, 1278, 1992, -1000,
	-1000, -1000, 1998, 19435, -1000, 1521, 1521, 40300, 1621, 1321,
	-1000, 433, -1000, 1400, -71, -67, -1000, -1000, -1000, -1000,
	945, -1000, 1012, 252, 3012, -1000, 325, -1000, -1000, -1000,
	-1000, 1887, 9, -1000, -1000, -1000, 255, 255, -1000, -1000,
	-1000, -1000, -1000, -1000, 1075, 1075, -1000, -1000, -1000, -1000,
	-1000, 919, -1000, -1000, -1000, 915, -1000, -1000, 1615, 1764,
	186, -1000, -1000, 620, 1073, -1000, -1000, 1894, 620, 620,
	40300, -1000, -1000, 1203, 1980, 129, 40300, 674, 1727, -1000,
	1668, 1668, 1668, 40300, -1000, -1000, -1000, -1000, -1000, -1000,
	-402, 69, 278, -1000, -1000, -1000, 331, 40300, 1486, -1000,
	112, -1000, 1192, -1000, 40300, -1000, 1465, 1634, 1083, 1083,
	-1000, -1000, -1000, 40300, 1521, -1000, -1000, -1000, -1000, 376,
	1958, 1953, 116, 112, 537, 1083, -1000, -1000, -1000, -1000,
	-1000, -398, 1458, 366, 119, 263, 40300, 40300, 40300, 40300,
	40300, 411, -1000, -1000, -1000, -1000, 101, -1000, -1000, 101,
	-1000, -1000, -1000, -1000, 197, 351, -1000, 40300, 40300, 531,
	-1000, -1000, -1000, 708, -1000, -1000, 708, -1000, -1000, -1000,
	-1000, -1000, 1938, 40300, -53, -354, -1000, -350, 17046, -1000,
	-1000, -1000, -1000, 902, 358, 1507, 17642, 17642, 16450, -144,
	204, 204, 840, -1000, -1000, -1000, 17046, 17046, 1294, 598,
	-1000, 17046, 955, -1000, -1000, -1000, 17046, 17046, 17046, 1077,
	227, -1000, -1000, -1000, -1000, -1000, 2098, -1000, 17046, 17046,
	17046, -1000, -1000, 17046, 17046, -1000, 17046, 17046, 18238, 1077,
	18238, 17046, 17046, 18238, -1000, -1000, -1000, -1000, 18238, 17046,
	17046, 17046, 17046, 17046, 17046, 17046, 17046, 17046, -1000, -1000,
	1453, 1453, 16450, 10465, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 520, -1000, 468, 468, 468, 40300,
	-1000, -1000, -1000, -1000, -1000, -1000, 1395, 2013, -1000, 1804,
	1798, 2097, 2089, -1000, 21824, 1932, -1000, -1000, 40300, -297,
	-1000, 1859, 1917, -1000, -1000, -1000, -1000, 8662, 2024, 17046,
	1724, 40300, 1521, -1000, 21228, 40300, 40300, 21824, 21824, 21824,
	21824, 21824, -1000, 1757, 1743, -1000, 1761, 1742, 1827, 40300,
	-1000, 1435, 1077, 2059, 19435, 302, 17046, 23612, 1310, 21824,
	-1000, -1000, 21824, 40300, 8061, -1000, -1000, -66, -73, -1000,
	-1000, -1000, -1000, 609, -1000, -1000, 695, 1997, 1883, -1000,
	-1000, -1000, -1000, 1413, -1000, 1408, 1386, 1391, 133, -1000,
	1648, 1934, 620, 620, -1000, 914, -1000, 1083, 1069, 1046,
	-1000, -1000, -1000, 365, -1000, 1984, 40300, 1723, 1717, 1715,
	-1000, -407, 911, 1633, 1523, 17046, 1632, 2051, 1327, 40300,
	-1000, -1000, 40300, -1000, 153, -1000, 186, 40300, -1000, -1000,
	-1000, 246, 40300, -1000, 6100, 112, -1000, -1000, -1000, -1000,
	-1000, -1000, 40300, 179, -1000, 1628, 1094, -1000, -1000, 1516,
	-1000, -1000, -1000, -1000, 110, 191, 99, 1045, 99, -1000,
	40300, 479, 1764, 40300, -1000, -1000, -1000, 714, 714, -1000,
	-1000, 1915, -1000, 1083, 1421, 17642, 17642, -1000, 538, -1000,
	1521, 1077, 1578, 1578, -1000, 1578, 1623, -1000, 1578, 67,
	1578, 58, 1578, -1000, -1000, 1077, 1077, 1212, 1091, -118,
	-1000, 945, 17046, 1630, 1624, 1421, -1000, 1577, 1561, 17046,
	1421, 1421, 1421, -1000, 945, 1411, 1574, 1232, -1000, -1000,
	-1000, -1000, 1357, 1421, 1562, -295, 1077, 1365, 1365, 1365,
	1365, 1365, 1345, 1345, 1345, 1345, -1000, -1000, 1077, -1000,
	-1000, 2017, 2017, 2017, 1336, 40896, 40300, -1000, -1000, -1000,
	-1000, 2089, 2083, 1330, -1000, -1000, 3, 343, -1000, 1833,
	1917, -1000, 2050, 1851, 2049, -1000, -1000, -1000, 945, -1000,
	1960, 1228, -1000, 632, 1281, -1000, -1000, 15854, 1343, 1789,
	429, 1336, 1316, 1992, 1678, 1713, 1665, -1000, -1000, -1000,
	-1000, 1741, -1000, 1720, -1000, -1000, 1529, -1000, -1000, 1208,
	1077, 1478, 251, 21824, 1266, 1266, -1000, 428, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 764, 5442, 2130, -1000, 1027,
	-1000, 967, -1000, 700, 699, -1000, 40300, 1559, -1000, 255,
	1019, 255, 910, -1000, 906, -1000, -1000, -226, -1000, -1000,
	1691, 1733, -1000, -1000, -1000, -1000, 40300, -1000, -1000, 40300,
	40300, 40300, 1552, 2044, -1000, 17046, 1546, 627, 1454, 40300,
	40300, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 332, 620, -373, 208, 202, 620, 620, 620, -1000,
	-1000, 1324, 1305, -1000, -171, -1000, 17046, -1000, -1000, -1000,
	884, 884, -1000, 1529, -1000, -1000, -1000, 1187, -1000, -1000,
	-155, 40300, 40300, 40300, 40300, -1000, 850, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 538,
	17642, -1000, -1000, 255, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17046, -1000, 17046, -1000, 2024, 1018, 945,
	17046, 17046, -1000, 862, 832, 1421, -1000, -1000, -1000, 1077,
	18238, -1000, 18238, -1000, 17046, 203, 204, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1521, 1921,
	1521, 1521, 23612, -1000, -1000, 2083, 2070, 2037, 1823, 1847,
	1847, 1833, -1000, 2034, 2033, -1000, 1016, 2031, 1014, 693,
	-1000, 40300, 17046, 1521, -1000, 300, 40300, 1521, 40300, -1000,
	2067, -1000, -1000, 17046, 1545, -1000, 17046, -1000, -1000, -1000,
	-1000, -1000, -1000, 6310, 2089, 1266, -1000, -1000, 551, -1000,
	17046, -1000, -1000, -1000, 3830, -1000, -1000, -1000, -1000, -1000,
	1535, 17046, -1000, -1000, -1000, 1184, 1166, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1529, -1000, -1000, -1000, -1000,
	246, -405, 1442, 40300, 825, -1000, 1272, 1327, 217, 1521,
	1011, 620, 620, 620, 806, 803, 27188, 310, -1000, 246,
	-1000, -177, -181, 1421, -1000, -1000, 1994, -1000, -1000, 10465,
	-1000, -1000, 1525, 1638, -1000, -1000, -1000, 256, -1000, 1421,
	1421, 1077, -1000, 1421, 1421, 1161, 1157, -1000, -1000, 1232,
	-1000, 1072, -1000, 203, 1077, 1709, -1000, -1000, 6310, -1000,
	24208, -1000, 2028, 2026, 27784, 27784, 520, 2070, -1000, 17046,
	17046, 1815, 820, -1000, -1000, -1000, -1000, 1006, 1004, -1000,
	947, -1000, 2129, -1000, 945, -1000, 1521, -1000, 418, 1281,
	-1000, 2024, 945, 40300, 945, -5, 2067, -1000, 1421, -1000,
	1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
	1521, 1521, 40300, 1397, -1000, -1000, 1990, 1222, 68, -1000,
	1216, -1000, -1000, 426, -1000, 17046, -1000, 27188, 904, 869,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 302, 1318,
	-1000, 608, 40300, 40300, 1077, 247, -160, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 17046, -1000, 1077, 1707,
	-1000, -255, -1000, 1207, -1000, -1000, -1000, -1000, -1000, 1207,
	1207, -1000, -1000, 945, 1284, -1000, 775, -1000, -1000, -1000,
	-1000, -1000, 40300, 1281, 40300, -1000, 1201, 1077, 1521, 2024,
	-1000, 1191, -1000, 302, -1000, 1351, 1523, -1000, -1000, -1000,
	15258, -1000, -1000, -1000, -1000, -153, 10465, 7460, 1181, -1000,
	-1000, 1772, -148, -168, 1411, -1000, -341, -1000, -1000, 26592,
	-1000, -1000, -1000, -1000, -1000, 1236, -1000, -1000, 23612, 39704,
	-1000, 1694, 762, -153, 17046, 1308, 1077, -1000, -24, -1000,
	-1000, -1000, -1000, -1000, 1516, -1000, 1769, -1000, 1077, -1000,
	-1000, -1000, 1153, -1000, 3482, -259, 1693, 1690, 2095, -1000,
	-1000, -1000, 761, 828, -1000, -1000, -1000, -1000, 1350, 40300,
	-1000, 327, -1000, -1000, -155, -156, -1000, -1000, 39704, -250,
	537, 6310, -1000, -1000, 2127, -1000, 2100, 529, 529, -1000,
	-1000, -413, 1149, 155, -1000, -163, -1000, -1000, 1979, -5,
	-1000, -1000, -1000, 317, 860, -1000, -1000, 796, -413, -1000,
	-169, -260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6310, 199, 199, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2487, 2486, 22, 1, 2484, 2482, 2480, 48, 95,
	181, 21, 187, 106, 2479, 2477, 2476, 2474, 2473, 2471,
	2470, 214, 212, 205, 2469, 2461, 2459, 2458, 2457, 2456,
	2455, 2453, 2452, 2449, 208, 161, 180, 2448, 2447, 2445,
	104, 168, 83, 85, 177, 2443, 2439, 78, 2436, 2435,
	2434, 172, 171, 166, 635, 2433, 163, 103, 36, 2432,
	2431, 2430, 2423, 2419, 2418, 2416, 2415, 2414, 2411, 2408,
	2407, 2396, 2395, 2393, 2392, 2391, 174, 2390, 2389, 16,
	2387, 80, 2386, 2385, 2384, 2383, 122, 2382, 2380, 2379,
	2376, 2375, 2374, 2373, 139, 2371, 2370, 2369, 2368, 183,
	2367, 2366, 149, 102, 101, 2364, 2362, 94, 178, 2361,
	118, 2360, 2359, 2358, 145, 2357, 4739, 2356, 65, 61,
	2355, 59, 81, 47, 50, 37, 5, 2353, 2351, 55,
	86, 2350, 100, 66, 2346, 99, 96, 2345, 2344, 9,
	7, 2343, 2, 6, 4, 69, 2342, 2341, 117, 2340,
	2339, 2338, 90, 2335, 2333, 3468, 2329, 84, 123, 98,
	76, 2327, 33, 71, 2326, 2325, 2322, 2321, 2320, 40,
	2319, 2318, 2316, 132, 68, 165, 25, 58, 42, 133,
	2309, 43, 82, 2304, 138, 137, 2297, 73, 31, 32,
	2294, 30, 129, 111, 28, 93, 135, 2292, 2289, 41,
	75, 2288, 2287, 2284, 2283, 2282, 2279, 74, 2278, 44,
	2277, 182, 2276, 14, 2275, 39, 27, 2274, 70, 116,
	67, 29, 2269, 157, 2268, 53, 158, 127, 153, 2267,
	2263, 2262, 2261, 179, 264, 2260, 2253, 169, 160, 141,
	148, 2250, 269, 2248, 2246, 92, 1276, 1524, 46, 159,
	2245, 2244, 2424, 134, 23, 20, 2243, 265, 2239, 2235,
	2234, 185, 162, 108, 892, 45, 2222, 2221, 12, 2217,
	2209, 2208, 2207, 2205, 2204, 243, 2203, 2201, 2199, 184,
	63, 8, 152, 77, 2198, 2196, 2195, 120, 97, 2192,
	156, 154, 121, 170, 2191, 164, 140, 125, 2190, 488,
	2189, 2187, 2186, 2185, 2184, 91, 2182, 2180, 2179, 2178,
	150, 142, 119, 88, 2177, 89, 115, 143, 147, 38,
	2176, 34, 2172, 2169, 2167, 176, 26, 2166, 10, 60,
	52, 17, 105, 151, 2163, 0, 2162, 13, 167, 275,
	144, 2161, 2160, 3, 11, 15, 2159, 130, 2158, 2157,
	2152, 19, 35, 18, 24, 110, 79, 2151, 2146, 4254,
	3014, 124, 2144, 189,
}

//line sql.y:6876
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 357, 358, 358, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 335, 335,
	335, 338, 338, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	361, 361, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 264, 264, 26, 26, 26, 26, 26, 100,
	100, 337, 337, 336, 328, 328, 327, 327, 326, 334,
	334, 333, 333, 332, 38, 39, 48, 48, 48, 48,
	49, 50, 339, 339, 301, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 303, 303, 289, 289, 302, 302, 302, 302, 302,
	302, 302, 288, 288, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 350, 350, 198,
	198, 198, 198, 198, 198, 120, 120, 129, 129, 129,
	129, 129, 118, 118, 119, 117, 117, 117, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 128, 128, 124, 124, 124, 125, 125, 125, 126,
	126, 351, 351, 351, 351, 268, 268, 268, 268, 271,
	271, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	270, 270, 270, 270, 270, 272, 272, 272, 272, 272,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 274, 274, 274, 274, 274,
	274, 274, 274, 287, 287, 275, 275, 282, 282, 283,
	283, 283, 284, 284, 284, 285, 285, 280, 280, 280,
	280, 280, 280, 281, 281, 281, 290, 315, 315, 314,
	314, 312, 312, 312, 312, 312, 312, 312, 312, 299,
	299, 309, 309, 309, 309, 309, 298, 298, 294, 294,
	294, 295, 295, 296, 296, 293, 293, 297, 297, 311,
	311, 310, 310, 291, 291, 292, 292, 317, 352, 352,
	352, 352, 352, 353, 353, 318, 344, 345, 343, 343,
	343, 343, 343, 81, 81, 81, 241, 241, 241, 307,
	307, 306, 306, 306, 308, 308, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 236, 236, 236,
	342, 342, 342, 342, 342, 342, 341, 341, 341, 304,
	304, 304, 340, 340, 57, 57, 182, 182, 355, 355,
	356, 356, 356, 45, 45, 45, 45, 45, 45, 44,
	44, 44, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 46, 46, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	86, 86, 87, 87, 87, 87, 89, 89, 89, 320,
	320, 58, 58, 3, 3, 138, 140, 141, 141, 139,
	139, 139, 139, 139, 139, 60, 60, 59, 59, 143,
	142, 144, 144, 144, 1, 1, 2, 2, 4, 4,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 286, 286, 286, 319, 319, 321, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 323, 323, 323,
	61, 61, 324, 276, 277, 278, 5, 6, 300, 322,
	96, 96, 28, 37, 37, 29, 29, 29, 29, 30,
	30, 62, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 235, 235, 243, 243, 234, 234, 257,
	257, 257, 237, 237, 237, 238, 238, 349, 349, 349,
	231, 231, 64, 64, 64, 66, 66, 67, 68, 68,
	259, 259, 260, 260, 69, 70, 82, 82, 82, 82,
	82, 82, 85, 85, 85, 15, 15, 15, 15, 78,
	78, 78, 14, 14, 65, 65, 72, 346, 346, 347,
	348, 348, 348, 348, 73, 75, 31, 31, 31, 31,
	31, 31, 106, 106, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 101, 101, 101, 95,
	95, 362, 76, 77, 77, 99, 99, 99, 92, 92,
	92, 98, 98, 98, 16, 16, 17, 217, 217, 18,
	18, 103, 103, 105, 105, 105, 105, 105, 107, 107,
	107, 107, 107, 107, 107, 102, 102, 104, 104, 104,
	104, 250, 250, 250, 249, 249, 132, 132, 134, 133,
	133, 135, 135, 136, 136, 136, 136, 180, 180, 158,
	158, 215, 215, 213, 213, 214, 214, 216, 216, 216,
	216, 219, 219, 137, 137, 137, 137, 145, 145, 146,
	146, 147, 147, 258, 258, 255, 255, 255, 254, 254,
	151, 151, 151, 153, 152, 152, 152, 152, 154, 154,
	156, 156, 155, 155, 157, 162, 162, 161, 161, 159,
	159, 159, 159, 160, 160, 160, 160, 163, 163, 116,
	116, 116, 116, 116, 116, 116, 127, 127, 127, 127,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 83, 83, 83,
	232, 232, 164, 164, 172, 172, 172, 172, 165, 165,
	165, 165, 165, 165, 165, 173, 173, 173, 179, 174,
	174, 170, 170, 170, 170, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 266, 266, 331, 331, 330, 330, 329,
	329, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 363, 363, 279, 279, 279, 279, 171, 171,
	171, 171, 171, 97, 97, 97, 97, 97, 263, 263,
	263, 267, 267, 267, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 185,
	185, 93, 93, 183, 183, 184, 186, 186, 181, 181,
	181, 167, 167, 167, 187, 187, 188, 188, 189, 189,
	191, 190, 190, 192, 193, 193, 193, 194, 194, 195,
	195, 195, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 108, 108, 108, 108, 110, 110,
	109, 109, 79, 79, 80, 80, 80, 114, 114, 115,
	115, 115, 112, 112, 113, 113, 211, 211, 196, 196,
	196, 203, 203, 203, 199, 199, 201, 201, 201, 202,
	202, 202, 200, 208, 208, 210, 210, 209, 209, 205,
	205, 206, 206, 207, 207, 207, 204, 204, 166, 166,
	166, 166, 166, 212, 212, 212, 212, 220, 220, 176,
	176, 178, 178, 177, 131, 221, 221, 225, 222, 222,
	226, 226, 226, 226, 226, 223, 223, 224, 224, 251,
	251, 251, 230, 230, 242, 242, 239, 239, 240, 240,
	233, 233, 244, 244, 244, 74, 175, 175, 316, 316,
	313, 247, 247, 248, 248, 252, 252, 256, 256, 253,
	253, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 359, 360, 261, 262, 262,
	262,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 1, 1, 0,
	2, 2, 3, 3, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 1, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 2, 3, 3, 3, 5,
	2, 3, 3, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 3, 4, 3,
	7, 0, 3, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 9, 6,
	6, 6, 2, 2, 3, 3, 3, 1, 1, 1,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 6, 6, 6, 4, 4, 4, 7, 8, 6,
	5, 6, 8, 11, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -357, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 303, 304, 306,
	307, 308, 309, -85, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -359,
	11, 434, 252, 251, 28, -12, 468, 85, -358, 605,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -362, -76, -76, 12, 13, -76, -301,
	-303, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -325, -44, -41, 223, 220, 267,
	119, 120, 257, 258, 259, 222, 241, 256, 260, 255,
	276, -40, 80, 33, 468, 471, -308, 219, 225, 226,
	435, 122, 121, 75, 221, -305, 357, 500, 575, -56,
	577, 101, 103, 576, 44, 231, 578, 579, 580, 506,
	581, 240, 582, 583, 584, 585, 591, 547, 592, 593,
	594, 123, 7, -76, -256, -252, -335, -246, 88, 89,
	90, 465, 243, 498, 499, 292, 80, 41, 354, 357,
	500, 575, 303, 317, 311, 338, 330, 466, 501, 295,
	244, 280, 572, 328, 131, 577, 298, 502, 258, 362,
	363, 364, 101, 306, 401, 590, 297, 503, 588, 103,
	576, 79, 51, 44, 253, 326, 227, 322, 578, 281,
	504, 476, 274, 122, 119, 597, 36, 320, 50, 30,
	587, 121, 49, 579, 146, 505, 580, 506, 366, 345,
	566, 48, 367, 259, 507, 83, 264, 470, 301, 574,
	368, 321, 369, 291, 586, 224, 508, 558, 370, 371,
	567, 509, 346, 350, 510, 393, 372, 604, 52, 511,
	512, 568, 120, 513, 78, 581, 315, 316, 514, 289,
	242, 395, 342, 447, 454, 455, 107, 108, 450, 109,
	456, 110, 457, 458, 459, 448, 111, 104, 449, 460,
	461, 343, 344, 112, 462, 106, 105, 451, 453, 113,
	463, 240, 35, 373, 467, 293, 58, 268, 396, 46,
	348, 601, 45, 562, 515, 565, 341, 337, 444, 53,
	516, 517, 518, 519, 582, 340, 314, 336, 596, 4,
	286, 583, 62, 226, 352, 351, 353, 275, 392, 333,
	520, 521, 522, 247, 81, 523, 323, 21, 524, 525,
	374, 282, 526, 56, 527, 528, 399, 256, 529, 54,
	584, 39, 261, 598, 585, 530, 531, 532, 533, 263,
	534, 376, 535, 375, 347, 349, 270, 377, 469, 536,
	302, 319, 260, 589, 537, 248, 573, 262, 267, 255,
	400, 249, 538, 539, 540, 541, 542, 296, 557, 543,
	544, 307, 591, 445, 43, 545, 546, 547, 548, 549,
	290, 285, 394, 403, 61, 82, 359, 550, 571, 313,
	283, 551, 304, 55, 592, 593, 594, 277, 595, 9,
	602, 603, 379, 123, 287, 288, 47, 334, 269, 552,
	299, 553, 324, 325, 339, 312, 335, 305, 559, 271,
	380, 446, 257, 554, 402, 284, 355, 360, 300, 473,
	276, 381, 570, 472, 332, 329, 278, 555, 382, 232,
	272, 273, 556, 560, 383, 384, 294, 385, 386, 387,
	388, 389, 391, 390, 279, 471, 310, 327, 361, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 443, 230, -76,
	230, -155, -252, 230, -223, 363, -243, 365, 378, 373,
	383, 371, -235, 374, 376, 270, -349, 393, 230, 380,
	218, 366, 375, 384, 385, 294, 391, 386, 390, 279,
	387, 388, 389, -335, 172, 580, 595, 131, 331, 370,
	368, 394, 562, -252, 305, -259, 310, -247, -335, -246,
	308, -155, -82, 558, 222, -261, -261, -101, 562, 564,
	-174, -116, 139, -127, -130, -121, -122, -168, -169, -170,
	-171, -128, -181, 161, 162, 169, 140, -179, -131, 26,
	464, 436, 435, 172, 31, 214, 68, 69, 438, 439,
	142, 57, 411, 412, -129, 406, 413, 408, 441, 442,
	114, 443, 104, 106, 105, 444, 445, 446, 343, 344,
	447, 448, 449, 107, 108, 109, 110, 111, 112, 113,
	450, 453, 451, 452, 454, 455, 456, 461, 462, 457,
	458, 459, 460, 463, -247, -252, 235, 405, 229, 167,
	434, -123, -119, -8, -177, 404, 409, 410, 414, 407,
	-335, -246, -125, -124, -164, 91, 97, 102, 98, -354,
	115, -359, 92, 93, 94, 95, 96, 116, 117, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	44, 379, 379, -155, -76, -76, -76, -76, -189, -99,
	-191, -10, -8, -359, 8, -76, -8, -9, -13, -34,
	-36, 494, -35, -252, -196, -211, 12, 157, 42, 50,
	-194, -195, -12, -8, -116, 19, 23, 24, -104, 163,
	-116, -252, -77, -104, -233, 234, -76, -76, -222, -264,
	305, -226, 394, 393, -248, -224, -247, -245, -223, 392,
	223, 23, 474, 138, 25, 27, 141, 172, 126, 19,
	142, 37, 225, 331, 241, 171, 237, 435, 218, 72,
	475, 406, 408, 404, 411, 437, 438, 405, 365, 31,
	13, 477, 28, 251, 24, 38, 165, 220, 145, 478,
	254, 26, 252, 114, 117, 480, 22, 75, 246, 14,
	239, 40, 16, 481, 482, 17, 235, 234, 157, 231,
	70, 11, 214, 29, 154, 66, 483, 133, 484, 485,
	486, 487, 127, 68, 155, 20, 599, 409, 410, 33,
	563, 464, 265, 167, 73, 59, 564, 139, 407, 488,
	489, 115, 490, 118, 76, 569, 135, 18, 71, 42,
	491, 266, 492, 236, 600, 493, 397, 494, 156, 221,
	434, 69, 495, 229, 378, 8, 440, 32, 250, 238,
	125, 67, 496, 230, 144, 441, 442, 233, 128, 116,
	7, 132, 34, 12, 74, 77, 412, 413, 414, 57,
	124, 468, 143, 15, 497, 398, 137, 131, -302, 155,
	-288, -292, -247, 245, -318, 241, -155, -311, -310, -247,
	-359, -100, -242, 231, 239, 238, 132, -339, 135, 287,
	405, 229, -51, -52, -53, -223, 171, 579, -86, 262,
	266, 86, 86, -292, -291, -290, -340, 266, 245, -317,
	-309, 237, 246, -298, 238, 239, -293, 231, 133, -340,
	-293, 236, 246, 266, 266, 123, 266, 123, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 261, -299, 147,
	-299, 472, 472, -305, -340, -340, -340, 233, 35, 35,
	-244, -293, 233, 25, -299, -299, -299, -223, 171, -299,
	-299, -299, -299, 274, 274, -299, -299, -299, -299, -299,
	-299, -299, -299, -299, -299, -299, -299, -299, -299, -299,
	-299, -299, 230, -339, -108, 390, 294, 80, -54, 276,
	-37, -155, -242, 231, 232, -339, 263, -155, 215, -155,
	-237, 155, 15, -237, -234, 379, 377, 364, 369, -237,
	-237, -237, -237, 277, 362, -294, 231, 35, 242, 379,
	277, 362, 277, 278, 277, 278, 372, 382, 277, -257,
	14, 157, 405, 367, 371, 270, 230, 271, 232, 381,
	278, -257, 92, -238, 155, 379, 273, -237, -237, -262,
	-359, -248, 331, -335, 565, -262, -262, 32, 89, 233,
	-247, -78, -247, 92, -15, -11, -22, -21, -23, 147,
	-106, 379, -94, 172, 580, 566, 567, 568, 565, 376,
	573, 571, 569, 277, 570, 86, 135, 137, 138, 4,
	-116, 154, -165, 147, 148, 149, 150, 151, 152, 153,
	157, 139, 141, 155, 156, 136, 158, 159, 160, 161,
	162, 163, 164, 166, 165, 167, 168, 171, 216, 217,
	-122, -122, -122, -122, -179, -359, -359, -359, -122, -232,
	-359, -122, -359, -359, -359, -359, -185, -116, -359, -363,
	-359, -363, -363, -279, -359, -279, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, 215, -359, -359, -359, -359, -359, -279,
	-279, -279, -279, -279, 102, 97, 91, -181, 98, 92,
	-247, -252, -8, -9, -174, -261, -346, -347, -158, -155,
	-359, 294, -247, -247, 263, -194, -12, -8, -189, -195,
	-191, -8, -76, -92, -105, 63, 64, -107, 24, 38,
	67, 65, 23, -360, 87, -360, -211, -360, 86, -36,
	-215, 85, 61, 43, 92, 92, 86, 21, -190, -192,
	-116, 14, -250, 4, -249, 25, -247, 92, 215, 100,
	14, -156, 29, -155, -233, -233, 86, 305, -226, -264,
	-228, -227, 395, 397, 147, -251, -247, 92, 31, 87,
	86, -155, -268, -271, -273, -272, -274, -269, -270, 328,
	329, 172, 332, 334, 335, 336, 337, 338, 339, 340,
	341, 342, 345, 32, 253, 324, 325, 326, 327, 346,
	347, 348, 349, 350, 351, 352, 353, 311, 330, 466,
	312, 313, 314, 315, 316, 317, 319, 320, 321, 322,
	323, -338, -335, 85, 87, 86, -275, 85, -116, -108,
	230, -335, 231, 231, 231, -76, 434, -299, -299, -299,
	261, 19, -44, -41, -325, 18, -40, -41, 223, 119,
	120, 220, 85, -288, 85, -297, -338, -335, 85, 133,
	236, 132, -296, -293, -296, -297, -335, -181, -335, 133,
	133, -219, -247, -219, -219, 23, -219, 23, -219, 23,
	94, -247, -219, 23, -219, 23, -219, 23, -219, 23,
	-219, 23, 31, 78, 79, 31, 81, 82, 83, -181,
	-181, -288, -223, -155, -335, 94, 94, 94, -299, -299,
	94, 92, 92, 92, -299, -299, 94, 92, -254, -252,
	92, 92, -341, 247, 291, 293, 94, 94, 94, 94,
	31, 92, -342, 31, 587, 586, 588, 589, 590, 92,
	94, 31, 94, 31, 94, -247, 85, -155, -114, 281,
	218, 220, 223, 76, 92, 295, 299, 300, 147, 44,
	86, 233, 230, -335, -239, 235, -239, -247, -253, -252,
	-245, 92, -116, -295, 14, 157, -257, -257, -237, -155,
	-295, -257, -237, -155, -237, -237, -237, -237, -257, -257,
	-257, -237, -252, -252, -155, -155, -155, -155, -155, -155,
	-155, -262, -238, -237, 565, 92, -231, 14, 76, -262,
	-262, -260, 308, 342, 559, 560, 561, 86, 468, -148,
	-155, 565, 565, 565, 565, 565, 565, -116, -116, -116,
	-116, 490, -172, 115, 139, 116, 117, -130, -173, -177,
	-179, 99, 157, 141, 155, 156, -121, -122, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -263, -335, 92, 172, -126, -125, 98, -354, -126,
	-102, -104, -116, -116, -335, -247, -102, -102, -116, -98,
	24, 38, -183, -184, 143, -181, -360, -360, 94, 98,
	-247, -247, -91, -90, 416, 417, 418, 419, 421, 422,
	423, 426, 427, 431, 432, 415, 433, 420, 425, 428,
	429, 430, 424, 327, -116, -116, -116, -116, -116, -116,
	-83, -116, 126, 127, 128, -116, -116, -175, -174, -334,
	-333, -332, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -103, 24, 38, -102, -248,
	-253, -245, -102, -103, -103, -102, -102, 215, -211, -360,
	86, -348, 397, 398, 563, -255, 266, -254, 25, -175,
	92, 14, -217, 77, -247, -194, -194, 63, 64, 59,
	-102, -107, -360, -35, 25, -213, -247, 62, 92, -280,
	-223, 354, 355, -116, -116, 86, -193, 27, 28, -155,
	-249, 163, -253, -155, -218, 266, -155, -133, -135, -136,
	-137, -158, -180, -359, -138, 486, 483, 14, -148, -149,
	-157, -252, -226, -228, 86, 396, 398, 399, 76, 118,
	-116, -281, 171, -307, -306, -305, -288, -290, -291, -292,
	87, -281, -284, 360, 359, -275, -275, -275, -275, -275,
	-280, -280, -280, -280, 85, 85, -275, -275, -275, -275,
	-282, 85, -282, -282, -283, 85, -283, -318, -116, -315,
	-314, -312, -313, 240, 101, 556, 514, 468, 506, 547,
	77, -310, -193, 94, -360, -114, -240, 235, -316, -313,
	-335, -335, -335, -240, -335, 92, -335, 92, -335, 92,
	-87, -58, -1, 599, 600, 601, 86, 19, -289, -288,
	-57, 291, -321, -322, 266, -317, -311, -297, 133, -296,
	-297, -297, -335, 86, 29, 123, 123, 123, 123, 468,
	220, 32, -288, -57, -263, 233, -263, -263, 92, 92,
	-236, 595, -148, -110, 283, 147, 272, 272, 230, 230,
	285, -155, 296, 298, 297, 295, 299, 300, 23, 23,
	23, 284, 286, 288, 274, -155, -155, -239, 76, -150,
	-155, 26, -252, -155, -237, -237, -155, -237, -237, -155,
	-247, -94, 397, 86, 468, 22, -95, 22, -359, 115,
	116, 117, -173, -121, -122, -121, 138, 254, 86, -360,
	25, 86, 77, -360, -360, -360, 86, 14, -102, -186,
	-184, 145, -116, -360, -360, -360, 86, 86, 14, -267,
	25, -360, -360, -360, -360, -360, -185, -360, 14, 86,
	86, -360, -360, 86, 86, -360, 86, 86, 86, -331,
	86, 86, 86, 86, -360, -360, -360, -360, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, -360, -360,
	-102, -102, -359, 215, -360, -360, -360, -360, -360, -248,
	-347, 562, 398, -162, -161, -159, 74, 234, 75, -359,
	-254, -360, -126, 89, -214, 89, -213, -167, -247, 94,
	98, -196, -132, -134, 14, -107, -179, 87, 86, -280,
	-200, -205, -234, -247, 92, 172, -192, 215, -163, 15,
	-166, 32, 57, -11, -359, -359, 32, 86, -151, -153,
	-152, -154, 66, 70, 72, 67, 68, 69, 73, -258,
	25, -133, -9, -8, -359, -359, -359, -155, -148, -361,
	14, 77, -361, 86, 215, -227, -229, 400, 397, 403,
	-335, 92, -86, 86, -305, -292, -197, -111, 40, -285,
	361, -280, -280, -287, 92, -287, 94, 94, 87, -47,
	-42, -43, 33, 80, -312, -299, 92, 39, -299, -299,
	-247, 87, -193, -110, -155, 139, 76, -316, -316, -316,
	-252, -2, 598, 604, 133, 85, 364, 18, -213, 86,
	87, -182, 292, 87, -88, -247, 87, 85, -297, -297,
	-247, -359, 230, 31, 31, -57, -182, -281, -335, 597,
	596, 87, 232, 290, -115, 411, -112, 92, 88, -155,
	-155, -155, -155, -155, 223, 220, -355, 301, -355, 275,
	233, -148, -155, 86, -81, 249, 244, -257, -257, 33,
	-155, 397, 574, 572, -116, 138, 254, -130, -122, -104,
	465, -265, 172, 328, 253, 326, 322, 342, 333, 359,
	324, 360, 321, 320, 319, -265, -263, -116, -116, -189,
	146, -116, 144, -116, -116, -116, -360, 172, 328, 14,
	-116, -116, -116, -332, -116, -116, -116, -330, -329, -126,
	-181, -360, -330, -116, -116, -329, -329, -333, -333, -333,
	-333, -333, -174, -174, -174, -174, -360, -360, -103, -248,
	-159, -293, -293, -293, -219, 86, -230, 22, 14, 57,
	57, -132, -163, -133, -107, -247, -203, 558, -208, 46,
	-206, -207, 47, -204, 48, 56, 163, -194, -116, -220,
	76, -221, -225, -181, -176, -178, -177, -359, -212, -360,
	-247, -219, -221, -135, -136, -136, -135, -136, 66, 66,
	66, 71, 66, 71, 66, -152, -252, -360, -360, -9,
	-9, -116, -255, 77, -133, -133, -157, -252, 163, 397,
	401, 402, -305, -353, 115, 139, 31, 76, 357, 101,
	-351, 171, -352, 236, 132, 133, 248, 25, 41, 87,
	86, 87, 86, 87, 86, -241, 505, 139, -43, -42,
	-299, -299, 94, -335, 92, 92, 232, 26, -155, 76,
	76, 76, -89, 602, 94, 85, -3, 80, -116, 85,
	19, -288, -181, -323, -276, -324, -277, -278, -5, -6,
	-300, 57, 101, -61, 44, 231, 582, 583, 123, 595,
	-315, -213, -319, -321, -155, -118, -359, -117, -119, -123,
	161, 162, -182, -155, -109, 281, 289, 85, -113, 89,
	-337, 77, 272, 357, 272, -356, 302, 92, -356, -155,
	-81, -47, -155, -237, -237, 33, -335, -360, -130, -122,
	-359, -360, -275, -275, -275, -283, -275, 316, -275, 316,
	-275, -360, -360, 86, -360, 22, -360, -93, 440, -116,
	86, 86, -360, 85, 85, -116, -360, -360, -360, -331,
	86, -360, 86, -360, 86, -266, 557, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -160, 22,
	-160, -160, -360, 89, -155, -163, -187, 16, -200, 51,
	334, -210, -209, 55, 47, -207, 19, 49, 19, 30,
	-220, 86, 147, 86, -360, -360, 86, 57, 215, -360,
	-163, -146, -145, 76, 77, -147, 76, -145, 66, 66,
	-215, -360, -360, 86, -218, -133, -163, -163, 215, 115,
	-359, -120, -129, -118, 12, 92, 92, -335, 133, 133,
	-155, 85, -280, 92, -280, 94, 94, 505, 31, 81,
	82, 83, 31, 78, 79, -155, -155, -155, -155, -320,
	85, 19, -116, 85, 147, 87, -213, -213, 268, 157,
	-299, 580, 274, 274, -299, -299, -299, 87, -360, 86,
	-286, 468, 471, -116, -124, -124, -215, 87, -328, 468,
	-336, -247, -247, -247, -247, 94, 96, -121, -280, -116,
	-116, -194, 92, -116, -116, 94, 94, -360, -360, -330,
	-329, -116, -360, -143, -142, -144, 566, 115, 31, -265,
	-359, 66, 18, 16, -359, -359, -255, -187, -188, 17,
	19, -201, 53, -199, 52, -199, -209, 19, 19, 92,
	19, 92, 133, -225, -116, -178, 57, -11, -247, -176,
	-247, -189, -116, 85, -116, -126, -163, -163, -116, -169,
	443, 104, 106, 105, 444, 445, 446, 343, 344, 447,
	448, 449, 107, 108, 109, 110, 111, 112, 113, 450,
	453, 451, 454, 455, 456, 461, 462, 457, 458, 459,
	460, 463, 85, -116, 87, 87, -215, -319, -58, 87,
	-213, 94, 87, 269, -177, -359, 92, -299, -299, -299,
	94, 94, -254, -352, -321, 472, 472, -360, 25, -327,
	-326, -248, 85, 77, -97, 157, 468, -360, -360, -360,
	-360, -360, 87, 87, -360, -360, 86, -360, -142, -144,
	-360, 76, -126, -216, -360, -247, 236, 19, 19, -216,
	-216, -162, -188, -116, -174, -202, 54, 76, 118, 92,
	92, 92, 12, -176, 215, -194, -213, -140, 364, -189,
	-360, -213, 87, 25, 87, 604, 133, 87, -177, -96,
	-359, 265, -254, 92, 92, -11, 86, 147, -213, -155,
	-360, 466, 73, 469, -116, -360, 76, 478, 566, 86,
	-360, -360, -360, 76, 118, -221, -247, 87, -360, -359,
	-194, 87, -198, -11, 85, -3, 265, -79, 468, -326,
	-304, -248, 92, 94, 87, 62, 467, 470, -331, -247,
	236, -255, -141, -139, -247, 520, -344, -345, 76, -353,
	-350, 115, 139, 101, -351, 124, 125, -79, -116, 85,
	-360, -80, 280, 562, -337, 62, -360, -360, 86, 22,
	-268, -60, 530, -345, 76, -344, 76, 13, 12, 115,
	92, 87, -213, 241, -328, 468, -139, 527, -281, -126,
	-343, 249, 244, 247, 32, -343, -4, 603, 87, 282,
	469, -59, 26, -140, 243, 31, 115, 94, -4, 470,
	530, -126, -143, -142, -142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 781,
	781, 781, 0, 781, 0, 0, 781, -2, -2, 781,
	1267, 0, 781, 0, 0, -2, 713, 715, 0, 717,
	-2, 0, 0, 726, 1767, 1767, 776, 0, 0, 0,
	0, 0, 781, 781, 781, 781, 1128, 48, 781, 0,
	83, 84, 732, 733, 734, 63, 0, 1765, 1, 3,
	69, 73, 0, 0, 0, 56, 1137, 0, 76, 0,
	0, 785, 0, 783, 0, 1250, 781, 781, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 540, 476, 519, 474, 505, -2, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 359, 359, 0, 0, -2, 462, 462, 462,
	0, 0, 0, 502, 1252, 414, 359, 359, 359, 0,
	359, 359, 359, 359, 0, 0, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 1154, 153, 1268, 1265, 1266, 38, 39,
	40, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 0, 1244,
	0, 640, 882, 0, 702, 702, 0, 702, 702, 702,
	702, 0, 0, 0, 652, 0, 0, 0, 0, 699,
	0, 668, 669, 0, 699, 0, 675, 705, 0, 680,
	702, 702, 683, 1768, 0, 1768, 1768, 1235, 0, 696,
	694, 708, 709, 712, 716, 0, 721, 724, 1261, 1262,
	0, 739, 47, 1504, 731, 744, 745, 0, 777, 778,
	43, 979, 0, 904, 909, 920, 933, 934, 935, 936,
	937, 939, 940, 0, 0, 0, 0, 945, 946, 0,
	0, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	1109, 0, 1072, 1072, 996, 1072, 1074, 1074, 0, 0,
	0, 1764, 1544, 1552, 1553, 1575, 1660, 1708, 1548, 1549,
	1530, 1542, 1545, 1533, 1534, 1536, 1538, 1543, 1550, 1556,
	1535, 1555, 1554, 0, 1531, 1532, 1537, 1547, 1551, 1539,
	1540, 1541, 1546, 1557, 1118, 0, 0, 0, 0, 0,
	0, 261, 262, 978, 1224, 1074, 1074, 1074, 1074, 1074,
	-2, -2, 208, 209, 210, 211, 212, 213, 214, 0,
	204, 0, 266, 267, 263, 264, 265, 962, 963, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	1767, 0, 754, 0, 0, 0, 0, 0, 1137, 0,
	1129, 1128, 61, 0, 781, -2, 0, 0, 0, 0,
	45, 0, 50, 841, 75, 74, 1176, 0, 0, 0,
	57, 1138, 65, 67, 1139, 0, 786, 787, 0, 817,
	821, 0, 782, 0, 0, 1251, 1250, 1250, 100, 0,
	1704, 1228, -2, -2, 0, 0, 1263, 1264, 1237, -2,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, -2, 0, 0,
	165, 166, 0, 41, 386, 0, 161, 0, 379, 325,
	0, 1154, 0, 0, 0, 0, 0, 781, 0, 1245,
	142, 143, 150, 151, 152, 359, 359, 359, 516, 0,
	0, 153, 153, 483, 484, 485, 0, 0, -2, 384,
	0, 463, 0, 0, 373, 373, 377, 375, 376, 0,
	0, 0, 0, 0, 0, 496, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 360,
	0, 514, 515, 415, 0, 0, 0, 0, 494, 495,
	0, 0, 1253, 1254, 0, 0, 0, 359, 359, 0,
	0, 0, 0, 359, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1167, 0, 0, 0, -2, 0,
	632, 0, 0, 0, 1246, 1246, 0, 639, 0, 641,
	642, 0, 0, 643, 0, 699, 699, 697, 698, 645,
	646, 647, 648, 702, 0, 0, 368, 369, 370, 699,
	702, 0, 702, 702, 702, 702, 699, 699, 699, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	705, 702, 0, 676, 0, 677, 678, 681, 682, 684,
	1769, 1770, 1284, 1768, 1768, 688, 692, 1236, 714, 722,
	725, 742, 740, 741, 743, 735, 736, 737, 738, 0,
	756, 757, 762, 0, 0, 0, 0, 768, 769, 770,
	0, 0, 773, 774, 775, 0, 0, 0, 0, 0,
	902, 0, 0, 968, 969, 970, 971, 972, 973, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	941, 942, 943, 944, 947, 0, 0, 0, 952, 953,
	0, 0, 0, 0, 0, 791, 0, 1110, 0, 994,
	0, 995, 997, 998, 0, 999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 0, 0, 801, 801, 0, 0, 197,
	198, 199, 200, 201, 215, 216, 217, 218, 219, 268,
	1118, 0, 978, 0, 0, 44, 746, 747, 0, 865,
	1256, 0, 0, 797, 0, 55, 64, 66, 1137, 59,
	1137, 0, 803, 0, 0, -2, -2, 804, 810, 811,
	812, 813, 814, 52, 1766, 53, 0, 72, 0, 46,
	0, 0, 0, 0, 337, 1179, 0, 0, 1130, 1131,
	1134, 0, 818, 1586, 822, 0, 824, 825, 0, 784,
	0, 98, 0, 881, 0, 0, 0, 1704, 1234, 0,
	102, 103, 0, 0, 0, 343, 1239, 1240, 1241, -2,
	366, 0, 343, 332, 276, 277, 278, 325, 280, 325,
	325, 325, 325, 337, 337, 337, 337, 308, 309, 310,
	311, 312, 0, 0, 295, 325, 325, 325, 325, 315,
	316, 317, 318, 319, 320, 321, 322, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 327, 327, 327, 329,
	329, 0, 42, 0, 347, 0, 1134, 0, 0, 1167,
	1248, 1258, 0, 0, 0, 1248, 120, 0, 0, 0,
	517, 551, 477, 506, 518, 0, 480, 481, -2, 0,
	0, 462, 0, 464, 0, 367, 0, -2, 0, 377,
	0, 373, 377, 374, 377, 365, 378, 498, 499, 500,
	0, 581, 851, 0, 0, 0, 0, 0, 587, 588,
	589, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 507, 508, 509, 510, 511, 512, 513, 0,
	0, 464, 0, 503, 0, 416, 417, 418, 0, 0,
	421, 422, 423, 424, 0, 0, 427, 428, 429, 868,
	869, 430, 431, 456, 457, 458, 432, 433, 434, 435,
	436, 437, 438, 450, 451, 452, 453, 454, 455, 439,
	440, 441, 442, 443, 444, 447, 0, 135, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1246, 0, 0, 0, 0, 800, 883, 1269,
	1270, 703, 704, 0, 371, 372, 702, 702, 649, 689,
	0, 702, 653, 690, 654, 656, 655, 657, 670, 671,
	702, 660, 700, 701, 661, 662, 663, 664, 665, 666,
	667, 685, 672, 673, 674, 706, 0, 710, 711, 686,
	687, 0, 723, 727, 728, 729, 730, 0, 0, 759,
	94, 764, 765, 766, 767, 779, 772, 980, 899, 900,
	901, 0, 903, 906, 0, 964, 966, 908, 910, 975,
	976, 977, 0, 0, 0, 0, 0, 914, 918, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 938, 1088, 1089, 1090, 955, 269, 270, 0, 956,
	0, 815, 0, 0, 0, 954, 0, 0, 0, 0,
	792, 793, 1116, 1113, 0, 0, 1073, 1075, 0, 0,
	0, 0, 0, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1091, 0, 0, 0, 0, 0,
	1109, 0, 957, 958, 959, 0, 0, 0, 1257, 0,
	130, 131, 0, 0, 0, 0, 0, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 1119,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 749, 750, 752, 0, 885, 0, 866, 0, 0,
	755, 0, 796, 0, 799, 58, 60, 808, 809, 0,
	826, 805, 54, 49, 0, 0, 843, 1177, 337, 1199,
	0, 341, 342, 1140, 1141, 0, 1133, 1135, 1136, 77,
	823, 819, 0, 897, 0, 0, 880, 0, 829, 831,
	832, 833, 863, 0, 836, 0, 0, 0, 0, 0,
	96, 882, 1229, 101, 0, 0, 106, 107, 1230, 1231,
	1232, 1233, 0, 540, -2, 411, 167, 169, 170, 171,
	162, -2, 335, 333, 334, 279, 337, 337, 302, 303,
	304, 305, 306, 307, 0, 0, 296, 297, 298, 299,
	290, 0, 291, 292, 293, 0, 294, 385, 0, 1142,
	348, 349, 351, 359, 0, 354, 355, 0, 359, 359,
	0, 380, 381, 0, 1134, 1158, 0, 0, 0, 1259,
	1258, 1258, 1258, 0, 155, 156, 157, 158, 159, 160,
	576, 0, 0, 552, 574, 575, 153, 0, 0, 163,
	466, 465, 0, 608, 0, 383, 0, 0, 377, 377,
	362, 363, 501, 0, 0, 583, 584, 585, 586, 0,
	0, 0, 464, 466, 343, 0, 419, 420, 425, 426,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 468, 538, 535, 468,
	539, 1155, 1156, 1157, 0, 0, 633, 0, 0, 403,
	92, 1247, 638, 699, 659, 691, 699, 651, 658, 679,
	719, 763, 0, 0, 0, 0, 771, 0, 0, 907,
	965, 967, 911, 0, 915, 919, 0, 0, 0, 0,
	0, 0, 0, 961, 985, 986, 0, 0, 1128, 0,
	1114, 0, 0, 993, 1076, 1077, 0, 0, 0, 0,
	0, 1004, 1005, 1006, 1007, 1008, 0, 1010, 0, 0,
	0, 1014, 1015, 0, 0, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1030, 1031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1042, 981,
	0, 0, 801, 0, 1078, 1079, 1080, 1081, 1082, 1119,
	748, 751, 753, 839, 886, 887, 0, 0, 0, 0,
	867, 1255, 794, 795, 798, -2, 0, 0, 1121, 0,
	0, 826, 897, 827, 0, 806, 51, 842, 0, 1181,
	1180, 1193, 1206, 338, 339, 340, 1132, 0, 1137, 0,
	1217, 0, 0, 1209, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 873, 0, 0, 0, 0,
	864, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	344, 345, 144, 153, 413, 168, 393, 0, 0, 275,
	336, 300, 301, 0, 323, 0, 0, 0, 406, 116,
	1146, 1145, 359, 359, 350, 0, 353, 0, 0, 0,
	1260, 326, 382, 0, 134, 0, 0, 0, 0, 0,
	140, 546, 0, 0, 553, 0, 0, 0, 475, 0,
	486, 487, 0, 580, -2, 629, 347, 0, 361, 364,
	852, 0, 0, 488, 0, 466, 492, 493, 504, 448,
	449, 446, 0, 0, 1168, 1169, 1174, 1172, 1173, 121,
	524, 526, 525, 529, 0, 0, 470, 0, 470, 522,
	0, 403, 1142, 0, 637, 404, 405, 702, 702, 758,
	95, 0, 761, 0, 0, 0, 0, 912, 916, 816,
	0, 0, 325, 325, 1096, 325, 329, 1099, 325, 1101,
	325, 1104, 325, 1107, 1108, 0, 0, 0, 0, 1111,
	992, 1117, 0, 0, 0, 0, 1003, 0, 0, 0,
	0, 0, 0, 132, 133, 1045, 0, 0, 1047, 1049,
	1050, 1020, 1046, 0, 0, 1043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 983, 0, 1120,
	888, 893, 893, 893, 0, 0, 0, 1242, 1243, 1122,
	1123, 897, 1124, 828, 807, 844, 1199, 0, 1192, 0,
	-2, 1201, 0, 0, 0, 1207, 820, 78, 898, 81,
	0, 1217, 1225, 0, 1208, 1219, 1221, 0, 0, 0,
	1213, 0, 897, 830, 859, 861, 0, 856, 871, 872,
	874, 0, 876, 0, 878, 879, 841, 835, 837, 0,
	0, 0, 98, 0, 897, 897, 97, 0, 884, 108,
	109, 110, 412, 172, 177, 0, 0, 0, 182, 0,
	184, 0, 394, 0, 272, 274, 0, 0, 175, 337,
	0, 337, 0, 330, 0, 395, 407, 0, 1143, 1144,
	0, 0, 352, 356, 357, 358, 0, 1249, 136, 0,
	0, 0, 549, 0, 577, 0, 0, 0, 0, 0,
	0, 164, 467, 609, 610, 611, 612, 613, 614, 615,
	616, 0, 359, 0, 0, 0, 359, 359, 359, 621,
	346, 0, 0, 605, 602, 489, 0, 202, 203, 205,
	0, 0, 491, 841, 1159, 1160, 1161, 0, 1171, 1175,
	124, 0, 0, 0, 0, 536, 0, 469, 537, 634,
	635, 636, 93, 644, 650, 760, 780, 905, 913, 917,
	0, 949, 1094, 337, 1097, 1098, 1100, 1102, 1103, 1105,
	1106, 950, 951, 0, 988, 0, 990, 1137, 0, 1115,
	0, 0, 1002, 0, 0, 0, 1011, 1012, 1013, 0,
	0, 1019, 0, 1021, 0, 0, 0, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 984, 0, 0,
	0, 0, 865, -2, 62, 1124, 1126, 0, 1186, 1184,
	1184, 1194, 1195, 0, 0, 1202, 0, 0, 0, 0,
	82, 0, 0, 0, 1222, 0, 0, 0, 0, 99,
	1128, 853, 860, 0, 0, 854, 0, 855, 875, 877,
	834, -2, 838, 0, 897, 897, 88, 89, 0, 178,
	0, 180, 195, 196, 0, 183, 185, 186, 271, 273,
	0, 0, 313, 324, 314, 0, 0, 408, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 841, 137, 138, 139, 541,
	0, 551, 0, 0, 0, 544, 0, 478, 0, 0,
	0, 359, 359, 359, 0, 0, 0, 0, 582, 0,
	590, 0, 0, 0, 206, 207, 0, 1170, 523, 0,
	122, 123, 0, 0, 528, 471, 472, 1083, 1095, 0,
	0, 0, 1112, 0, 0, 0, 0, 1009, 1017, 0,
	1048, 0, 1024, 0, 0, 0, 571, 572, 0, 1044,
	0, 894, 0, 0, 0, 0, 885, 1126, 80, 0,
	0, 1189, 0, 1182, 1185, 1183, 1196, 0, 0, 1203,
	0, 1205, 0, 1226, 1227, 1220, 0, 1212, 1215, 1211,
	1214, 1137, 857, 0, 862, 0, 1128, 87, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 331, 0, 0, 0, 542,
	0, 554, 545, 0, 619, 0, 623, 0, 0, 0,
	626, 627, 628, 387, 606, 603, 604, 490, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 987, 989, 991,
	1000, 1001, 1092, 1093, 1018, 1022, 0, 1025, 0, 0,
	1026, 0, 573, 0, 890, 847, 848, 895, 896, 0,
	0, 840, 79, 1127, 1125, 1178, 0, 1187, 1188, 1197,
	1198, 1204, 0, 1210, 0, 85, 0, 0, 0, 1137,
	179, 0, 189, 0, 550, 0, 553, 543, 617, 618,
	0, 630, 622, 624, 625, 1162, 0, 0, 0, 530,
	948, 0, 0, 0, 1045, 1027, 0, 569, 570, 0,
	889, 891, 892, 1190, 1191, 1218, 1216, 858, 865, 0,
	86, 388, 393, 1162, 0, 0, 0, 520, 1164, 127,
	128, 459, 460, 461, 121, 1084, 0, 1087, 0, 849,
	850, 555, 0, 557, 0, -2, 389, 390, 0, 173,
	190, 191, 0, 0, 194, 187, 188, 117, 0, 0,
	631, 0, 1165, 1166, 124, 1085, 1023, 556, 0, 0,
	343, 0, 566, 391, 0, 392, 0, 0, 0, 192,
	193, 578, 0, 0, 527, 0, 558, 559, 567, 0,
	396, 398, 399, 0, 0, 397, 547, 0, 578, 1163,
	0, 0, 568, 564, 400, 401, 402, 579, 548, 1086,
	0, 560, 561, 562, 563,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 605,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:524
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:529
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:565
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:606
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:619
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:629
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:635
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:838
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:842
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:876
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:909
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:931
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:935
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:941
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:945
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:949
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:955
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:967
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:973
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:977
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1051
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1093
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1100
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1129
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1136
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1147
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1158
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1164
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1190
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1220
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1230
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1234
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1240
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1250
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1255
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1288
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1297
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1335
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1376
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1380
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1411
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1441
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1477
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1510
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1514
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = Armscii8Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = ASCIIStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = Big5Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			yyVAL.str = UBinaryStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.str = Cp1250Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1541
		{
			yyVAL.str = Cp1251Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = Cp1256Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = Cp1257Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = Cp850Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = Cp852Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = Cp866Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = Cp932Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = Dec8Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = EucjpmsStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = EuckrStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = Gb18030Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = Gb2312Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = GbkStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = Geostd8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = GreekStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = HebrewStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = Hp8Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = Keybcs2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = Koi8rStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = Koi8uStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = Latin1Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Latin2Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = Latin5Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = Latin7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = MacceStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = MacromanStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = SjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = Swe7Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Tis620Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Ucs2Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = UjisStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Utf16Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Utf16leStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Utf32Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Utf8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Utf8mb4Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1730
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1734
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1738
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1742
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1973
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1990
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2000
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2072
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2081
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2087
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2097
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2101
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2106
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2110
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2114
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2118
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2122
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2126
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2142
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2146
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2150
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2154
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2158
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = yyDollar[2].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.str = "key"
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2216
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2226
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2236
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2240
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2246
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2250
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2256
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2260
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2266
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2272
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2276
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2280
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2284
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2288
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2297
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2303
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2309
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2315
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2321
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2325
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2329
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2333
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2337
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2372
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2378
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2386
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2392
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2402
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2406
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2410
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2414
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2418
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2422
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2426
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2430
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2434
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2438
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2442
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2446
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2450
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2454
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2458
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2462
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2466
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2470
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2474
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2478
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2482
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2486
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2490
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2494
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2498
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2502
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2506
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2510
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2514
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2518
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2522
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2573
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2577
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2586
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2604
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2608
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2617
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2621
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2625
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 478:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2633
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2639
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2685
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2689
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2693
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2697
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2701
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2705
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2729
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2747
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2751
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2769
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2773
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2777
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2781
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2785
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2802
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2822
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2846
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2858
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2889
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2899
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2903
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2928
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2935
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2948
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2957
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2965
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2972
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2983
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2992
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3000
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3009
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3016
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3028
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3037
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3052
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3057
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3061
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3066
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3070
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3076
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3082
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3088
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3098
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3102
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3108
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3114
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3120
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3126
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3132
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3136
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3150
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3156
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3162
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3166
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3170
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3176
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3180
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3185
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3189
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3194
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3198
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3204
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3208
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3212
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3216
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3220
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3224
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3228
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3232
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3236
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3240
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3244
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3248
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3252
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3256
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3260
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3264
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3268
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3272
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3276
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3280
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3284
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3288
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3308
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3323
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3327
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3332
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3337
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3342
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3347
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3352
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3358
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3364
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3371
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3378
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3385
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3393
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3397
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3403
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3409
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3415
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3421
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3427
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3433
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3445
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.str = ""
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3467
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3509
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3595
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3603
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = "extended "
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3754
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3772
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3776
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3786
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3792
		{
			yyVAL.empty = struct{}{}
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.empty = struct{}{}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.empty = struct{}{}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3855
		{
			yyVAL.empty = struct{}{}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.empty = struct{}{}
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3860
		{
			yyVAL.empty = struct{}{}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.empty = struct{}{}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3878
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3882
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3886
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3890
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3894
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3898
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = yyDollar[1].str
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = yyDollar[1].str
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = yyDollar[1].str
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3975
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3979
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3985
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3991
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3995
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3999
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4003
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4051
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4085
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4106
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4110
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4114
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			setAllowComments(yylex, true)
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.strs = nil
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4148
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4161
		{
			yyVAL.str = ""
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = SQLCacheStr
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4213
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4232
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			yyVAL.strs = nil
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4253
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = SQLCacheStr
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = DistinctStr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = DistinctStr
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = StraightJoinHint
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4289
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4299
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4303
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4307
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4311
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4324
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4336
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4340
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4346
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4352
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4356
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4366
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4370
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4374
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4378
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4384
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4388
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4394
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4398
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4407
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4413
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4423
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4433
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4437
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4451
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4468
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4472
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4476
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4480
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4488
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4503
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4508
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4529
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4533
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4537
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4543
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4549
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4553
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4557
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4561
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4567
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4571
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4581
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4610
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4616
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4620
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4626
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4630
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4634
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4638
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4643
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4647
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4651
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4655
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4672
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4676
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4680
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4684
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4688
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4696
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4707
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4711
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4853
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4869
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4923
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4927
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4931
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4947
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4951
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4958
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4962
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4966
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4970
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4976
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4980
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4984
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4988
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4992
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4996
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5000
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5006
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5010
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5014
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5021
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5027
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5031
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5310
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5319
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5325
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5329
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5347
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5351
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5355
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5359
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5363
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5367
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5371
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5375
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5379
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5383
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5387
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5393
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5397
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5401
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5405
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5409
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5413
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5417
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5421
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5425
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5480
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5484
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5488
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5492
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5496
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5520
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5524
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5530
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5534
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5538
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5542
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5546
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5552
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5556
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5560
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5564
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5576
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5580
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5584
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5588
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5603
		{
			yyVAL.str = string("")
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5613
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5617
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5623
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5638
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5642
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5646
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5652
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5675
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5693
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5699
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5705
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5709
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5715
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5720
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5724
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5728
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5737
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5743
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5747
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5751
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5760
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5764
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5768
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5772
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5779
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5783
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5787
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5791
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5797
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5801
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5805
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5827
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5831
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5846
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5855
		{
			yyVAL.str = "cascaded"
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5859
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5863
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5872
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5878
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5884
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5890
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5908
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5912
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5918
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5922
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5928
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5932
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5936
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5941
		{
			yyVAL.str = ""
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5945
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5949
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5954
		{
			yyVAL.str = ""
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			yyVAL.str = " header"
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = ""
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = " manifest on"
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5971
		{
			yyVAL.str = " manifest off"
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5980
		{
			yyVAL.str = " overwrite on"
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5984
		{
			yyVAL.str = " overwrite off"
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5990
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5995
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5999
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6009
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = ""
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6028
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6048
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6052
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6057
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6061
		{
			yyVAL.str = " optionally"
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6074
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6078
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6082
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6086
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6090
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6096
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6100
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6108
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6117
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6123
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6133
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6137
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6143
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6158
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6168
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6174
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6184
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6188
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6192
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6196
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6200
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6208
		{
			yyVAL.str = "charset"
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6237
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6242
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6247
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6250
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6255
		{
			yyVAL.empty = struct{}{}
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6257
		{
			yyVAL.empty = struct{}{}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6259
		{
			yyVAL.empty = struct{}{}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6263
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6272
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6279
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6283
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6300
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6306
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6310
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6316
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6327
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6855
		{
			decNesting(yylex)
		}
	case 1767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6860
		{
			skipToEnd(yylex)
		}
	case 1768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6865
		{
			skipToEnd(yylex)
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6869
		{
			skipToEnd(yylex)
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6873
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
