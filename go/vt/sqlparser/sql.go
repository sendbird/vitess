// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const UNDERSCORE_UTF8MB4 = 57483
const UNDERSCORE_UTF8 = 57484
const UNDERSCORE_LATIN1 = 57485
const INTERVAL = 57486
const JSON_EXTRACT_OP = 57487
const JSON_UNQUOTE_EXTRACT_OP = 57488
const CREATE = 57489
const ALTER = 57490
const DROP = 57491
const RENAME = 57492
const ANALYZE = 57493
const ADD = 57494
const FLUSH = 57495
const CHANGE = 57496
const MODIFY = 57497
const REVERT = 57498
const SCHEMA = 57499
const TABLE = 57500
const INDEX = 57501
const VIEW = 57502
const TO = 57503
const IGNORE = 57504
const IF = 57505
const PRIMARY = 57506
const COLUMN = 57507
const SPATIAL = 57508
const FULLTEXT = 57509
const KEY_BLOCK_SIZE = 57510
const CHECK = 57511
const INDEXES = 57512
const ACTION = 57513
const CASCADE = 57514
const CONSTRAINT = 57515
const FOREIGN = 57516
const NO = 57517
const REFERENCES = 57518
const RESTRICT = 57519
const SHOW = 57520
const DESCRIBE = 57521
const EXPLAIN = 57522
const DATE = 57523
const ESCAPE = 57524
const REPAIR = 57525
const OPTIMIZE = 57526
const TRUNCATE = 57527
const COALESCE = 57528
const EXCHANGE = 57529
const REBUILD = 57530
const PARTITIONING = 57531
const REMOVE = 57532
const MAXVALUE = 57533
const PARTITION = 57534
const REORGANIZE = 57535
const LESS = 57536
const THAN = 57537
const PROCEDURE = 57538
const TRIGGER = 57539
const VINDEX = 57540
const VINDEXES = 57541
const DIRECTORY = 57542
const NAME = 57543
const UPGRADE = 57544
const STATUS = 57545
const VARIABLES = 57546
const WARNINGS = 57547
const CASCADED = 57548
const DEFINER = 57549
const OPTION = 57550
const SQL = 57551
const UNDEFINED = 57552
const SEQUENCE = 57553
const MERGE = 57554
const TEMPORARY = 57555
const TEMPTABLE = 57556
const INVOKER = 57557
const SECURITY = 57558
const FIRST = 57559
const AFTER = 57560
const LAST = 57561
const VITESS_MIGRATION = 57562
const CANCEL = 57563
const RETRY = 57564
const COMPLETE = 57565
const BEGIN = 57566
const START = 57567
const TRANSACTION = 57568
const COMMIT = 57569
const ROLLBACK = 57570
const SAVEPOINT = 57571
const RELEASE = 57572
const WORK = 57573
const BIT = 57574
const TINYINT = 57575
const SMALLINT = 57576
const MEDIUMINT = 57577
const INT = 57578
const INTEGER = 57579
const BIGINT = 57580
const INTNUM = 57581
const REAL = 57582
const DOUBLE = 57583
const FLOAT_TYPE = 57584
const DECIMAL = 57585
const NUMERIC = 57586
const TIME = 57587
const TIMESTAMP = 57588
const DATETIME = 57589
const YEAR = 57590
const CHAR = 57591
const VARCHAR = 57592
const BOOL = 57593
const CHARACTER = 57594
const VARBINARY = 57595
const NCHAR = 57596
const TEXT = 57597
const TINYTEXT = 57598
const MEDIUMTEXT = 57599
const LONGTEXT = 57600
const BLOB = 57601
const TINYBLOB = 57602
const MEDIUMBLOB = 57603
const LONGBLOB = 57604
const JSON = 57605
const ENUM = 57606
const GEOMETRY = 57607
const POINT = 57608
const LINESTRING = 57609
const POLYGON = 57610
const GEOMETRYCOLLECTION = 57611
const MULTIPOINT = 57612
const MULTILINESTRING = 57613
const MULTIPOLYGON = 57614
const NULLX = 57615
const AUTO_INCREMENT = 57616
const APPROXNUM = 57617
const SIGNED = 57618
const UNSIGNED = 57619
const ZEROFILL = 57620
const CODE = 57621
const COLLATION = 57622
const COLUMNS = 57623
const DATABASES = 57624
const ENGINES = 57625
const EVENT = 57626
const EXTENDED = 57627
const FIELDS = 57628
const FULL = 57629
const FUNCTION = 57630
const GTID_EXECUTED = 57631
const KEYSPACES = 57632
const OPEN = 57633
const PLUGINS = 57634
const PRIVILEGES = 57635
const PROCESSLIST = 57636
const SCHEMAS = 57637
const TABLES = 57638
const TRIGGERS = 57639
const USER = 57640
const VGTID_EXECUTED = 57641
const VITESS_KEYSPACES = 57642
const VITESS_METADATA = 57643
const VITESS_MIGRATIONS = 57644
const VITESS_REPLICATION_STATUS = 57645
const VITESS_SHARDS = 57646
const VITESS_TABLETS = 57647
const VSCHEMA = 57648
const NAMES = 57649
const GLOBAL = 57650
const SESSION = 57651
const ISOLATION = 57652
const LEVEL = 57653
const READ = 57654
const WRITE = 57655
const ONLY = 57656
const REPEATABLE = 57657
const COMMITTED = 57658
const UNCOMMITTED = 57659
const SERIALIZABLE = 57660
const CURRENT_TIMESTAMP = 57661
const DATABASE = 57662
const CURRENT_DATE = 57663
const CURRENT_TIME = 57664
const LOCALTIME = 57665
const LOCALTIMESTAMP = 57666
const CURRENT_USER = 57667
const UTC_DATE = 57668
const UTC_TIME = 57669
const UTC_TIMESTAMP = 57670
const DAY = 57671
const DAY_HOUR = 57672
const DAY_MICROSECOND = 57673
const DAY_MINUTE = 57674
const DAY_SECOND = 57675
const HOUR = 57676
const HOUR_MICROSECOND = 57677
const HOUR_MINUTE = 57678
const HOUR_SECOND = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MINUTE_MICROSECOND = 57682
const MINUTE_SECOND = 57683
const MONTH = 57684
const QUARTER = 57685
const SECOND = 57686
const SECOND_MICROSECOND = 57687
const YEAR_MONTH = 57688
const WEEK = 57689
const REPLACE = 57690
const CONVERT = 57691
const CAST = 57692
const SUBSTR = 57693
const SUBSTRING = 57694
const GROUP_CONCAT = 57695
const SEPARATOR = 57696
const TIMESTAMPADD = 57697
const TIMESTAMPDIFF = 57698
const MATCH = 57699
const AGAINST = 57700
const BOOLEAN = 57701
const LANGUAGE = 57702
const WITH = 57703
const QUERY = 57704
const EXPANSION = 57705
const WITHOUT = 57706
const VALIDATION = 57707
const UNUSED = 57708
const ARRAY = 57709
const CUME_DIST = 57710
const DESCRIPTION = 57711
const DENSE_RANK = 57712
const EMPTY = 57713
const EXCEPT = 57714
const FIRST_VALUE = 57715
const GROUPING = 57716
const GROUPS = 57717
const JSON_TABLE = 57718
const LAG = 57719
const LAST_VALUE = 57720
const LATERAL = 57721
const LEAD = 57722
const MEMBER = 57723
const NTH_VALUE = 57724
const NTILE = 57725
const OF = 57726
const OVER = 57727
const PERCENT_RANK = 57728
const RANK = 57729
const RECURSIVE = 57730
const ROW_NUMBER = 57731
const SYSTEM = 57732
const WINDOW = 57733
const ACTIVE = 57734
const ADMIN = 57735
const BUCKETS = 57736
const CLONE = 57737
const COMPONENT = 57738
const DEFINITION = 57739
const ENFORCED = 57740
const EXCLUDE = 57741
const FOLLOWING = 57742
const GEOMCOLLECTION = 57743
const GET_MASTER_PUBLIC_KEY = 57744
const HISTOGRAM = 57745
const HISTORY = 57746
const INACTIVE = 57747
const INVISIBLE = 57748
const LOCKED = 57749
const MASTER_COMPRESSION_ALGORITHMS = 57750
const MASTER_PUBLIC_KEY_PATH = 57751
const MASTER_TLS_CIPHERSUITES = 57752
const MASTER_ZSTD_COMPRESSION_LEVEL = 57753
const NESTED = 57754
const NETWORK_NAMESPACE = 57755
const NOWAIT = 57756
const NULLS = 57757
const OJ = 57758
const OLD = 57759
const OPTIONAL = 57760
const ORDINALITY = 57761
const ORGANIZATION = 57762
const OTHERS = 57763
const PATH = 57764
const PERSIST = 57765
const PERSIST_ONLY = 57766
const PRECEDING = 57767
const PRIVILEGE_CHECKS_USER = 57768
const PROCESS = 57769
const RANDOM = 57770
const REFERENCE = 57771
const REQUIRE_ROW_FORMAT = 57772
const RESOURCE = 57773
const RESPECT = 57774
const RESTART = 57775
const RETAIN = 57776
const REUSE = 57777
const ROLE = 57778
const SECONDARY = 57779
const SECONDARY_ENGINE = 57780
const SECONDARY_LOAD = 57781
const SECONDARY_UNLOAD = 57782
const SKIP = 57783
const SRID = 57784
const THREAD_PRIORITY = 57785
const TIES = 57786
const UNBOUNDED = 57787
const VCPU = 57788
const VISIBLE = 57789
const FORMAT = 57790
const TREE = 57791
const VITESS = 57792
const TRADITIONAL = 57793
const LOCAL = 57794
const LOW_PRIORITY = 57795
const NO_WRITE_TO_BINLOG = 57796
const LOGS = 57797
const ERROR = 57798
const GENERAL = 57799
const HOSTS = 57800
const OPTIMIZER_COSTS = 57801
const USER_RESOURCES = 57802
const SLOW = 57803
const CHANNEL = 57804
const RELAY = 57805
const EXPORT = 57806
const AVG_ROW_LENGTH = 57807
const CONNECTION = 57808
const CHECKSUM = 57809
const DELAY_KEY_WRITE = 57810
const ENCRYPTION = 57811
const ENGINE = 57812
const INSERT_METHOD = 57813
const MAX_ROWS = 57814
const MIN_ROWS = 57815
const PACK_KEYS = 57816
const PASSWORD = 57817
const FIXED = 57818
const DYNAMIC = 57819
const COMPRESSED = 57820
const REDUNDANT = 57821
const COMPACT = 57822
const ROW_FORMAT = 57823
const STATS_AUTO_RECALC = 57824
const STATS_PERSISTENT = 57825
const STATS_SAMPLE_PAGES = 57826
const STORAGE = 57827
const MEMORY = 57828
const DISK = 57829

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	505, 137,
	-2, 143,
	-1, 45,
	115, 143,
	154, 143,
	269, 143,
	-2, 366,
	-1, 52,
	33, 516,
	176, 516,
	187, 516,
	220, 530,
	221, 530,
	-2, 518,
	-1, 57,
	178, 540,
	-2, 538,
	-1, 108,
	175, 1007,
	-2, 116,
	-1, 110,
	1, 138,
	505, 138,
	-2, 143,
	-1, 120,
	116, 269,
	181, 269,
	-2, 360,
	-1, 139,
	115, 143,
	154, 143,
	269, 143,
	-2, 375,
	-1, 603,
	161, 1028,
	-2, 1024,
	-1, 604,
	161, 1029,
	-2, 1025,
	-1, 618,
	57, 608,
	-2, 616,
	-1, 655,
	129, 1380,
	-2, 109,
	-1, 656,
	129, 1261,
	-2, 110,
	-1, 662,
	129, 1312,
	-2, 1001,
	-1, 803,
	129, 1195,
	-2, 998,
	-1, 839,
	186, 38,
	191, 38,
	-2, 280,
	-1, 916,
	1, 413,
	505, 413,
	-2, 143,
	-1, 1115,
	57, 609,
	-2, 621,
	-1, 1116,
	57, 610,
	-2, 622,
	-1, 1168,
	1, 310,
	505, 310,
	-2, 143,
	-1, 1171,
	23, 162,
	-2, 164,
	-1, 1244,
	116, 269,
	181, 269,
	-2, 360,
	-1, 1253,
	186, 39,
	191, 39,
	-2, 281,
	-1, 1466,
	161, 1033,
	-2, 1027,
	-1, 1584,
	1, 311,
	505, 311,
	-2, 143,
	-1, 1825,
	75, 91,
	84, 91,
	-2, 95,
	-1, 1996,
	47, 969,
	-2, 963,
	-1, 2173,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 649,
}

const yyPrivate = 57344

const yyLast = 31906

var yyAct = [...]int{
	603, 2209, 2372, 2347, 2095, 2334, 2278, 1843, 1850, 2235,
	2007, 3, 1770, 1097, 1651, 2010, 2008, 1130, 979, 1851,
	2138, 2011, 2227, 2164, 2144, 90, 1523, 633, 1544, 1821,
	2240, 1540, 1997, 560, 2005, 927, 544, 575, 34, 1934,
	1790, 539, 1616, 1872, 1895, 1621, 1123, 611, 176, 542,
	1636, 176, 1798, 507, 176, 1873, 1557, 148, 1570, 523,
	1810, 176, 1874, 574, 1562, 1581, 33, 660, 806, 176,
	35, 1782, 1561, 1117, 1953, 634, 1729, 1450, 535, 1649,
	1251, 176, 1360, 1459, 869, 1463, 956, 134, 1682, 1623,
	1866, 1635, 1160, 1409, 834, 1827, 613, 1139, 1525, 1564,
	85, 1100, 1482, 523, 546, 1427, 523, 176, 523, 615,
	89, 619, 1357, 997, 813, 840, 1633, 1612, 835, 810,
	836, 657, 1159, 1258, 1343, 1549, 1157, 1016, 814, 636,
	1143, 625, 972, 1365, 1220, 92, 912, 837, 117, 647,
	620, 623, 977, 1269, 621, 70, 1516, 1243, 1225, 118,
	79, 530, 1070, 8, 91, 83, 622, 71, 7, 1545,
	6, 151, 1073, 111, 1680, 112, 847, 1914, 1913, 1329,
	1942, 998, 1792, 1943, 178, 179, 180, 1416, 1520, 1521,
	84, 822, 641, 1415, 646, 627, 1414, 817, 1413, 1412,
	1411, 1398, 533, 119, 534, 1403, 2368, 874, 1768, 1993,
	807, 2065, 2187, 2275, 2274, 2205, 113, 873, 2206, 72,
	643, 872, 480, 597, 531, 2386, 2357, 614, 1719, 2385,
	2325, 871, 2380, 2210, 2348, 612, 1668, 2356, 1970, 654,
	2127, 1234, 628, 1801, 885, 886, 1008, 889, 890, 891,
	892, 1769, 635, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 1802, 850,
	72, 2324, 661, 74, 1628, 1575, 72, 1921, 96, 2044,
	2045, 1920, 113, 829, 828, 536, 827, 2043, 875, 876,
	877, 1161, 1717, 1162, 998, 1941, 81, 1626, 851, 1716,
	2287, 1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1024, 72, 637, 1034, 98, 99, 975, 102,
	1836, 887, 108, 1835, 882, 173, 1837, 946, 475, 1522,
	1576, 1577, 178, 179, 180, 608, 1004, 934, 607, 996,
	934, 1510, 935, 1859, 521, 935, 113, 81, 610, 2118,
	933, 618, 932, 81, 1596, 1595, 510, 510, 2141, 1008,
	510, 510, 2253, 2116, 1402, 911, 947, 525, 951, 952,
	2097, 940, 519, 1349, 1319, 915, 1693, 1691, 1692, 649,
	650, 1104, 1896, 821, 1625, 823, 1650, 1917, 1683, 2091,
	81, 1404, 1405, 1406, 2384, 888, 830, 2092, 1462, 1344,
	1695, 497, 1696, 955, 1697, 949, 950, 969, 917, 1698,
	496, 1929, 894, 893, 2271, 974, 1320, 826, 1321, 921,
	922, 494, 1502, 1491, 1492, 1493, 1494, 1504, 1495, 1496,
	1497, 1509, 1505, 1498, 1499, 1506, 1507, 1508, 1500, 1501,
	1503, 826, 948, 818, 2099, 1685, 2098, 941, 1687, 1004,
	820, 819, 2369, 1652, 953, 178, 179, 180, 587, 491,
	593, 594, 591, 592, 954, 590, 589, 588, 505, 1688,
	2200, 826, 910, 824, 858, 856, 2381, 1558, 867, 1717,
	866, 865, 831, 502, 510, 176, 864, 176, 1686, 863,
	176, 862, 1237, 861, 595, 596, 860, 824, 1003, 1000,
	1001, 1002, 1007, 1009, 1006, 2064, 1005, 855, 967, 868,
	511, 511, 2376, 999, 511, 511, 1855, 1933, 523, 523,
	523, 1350, 1689, 811, 2378, 944, 811, 930, 843, 936,
	937, 938, 939, 1919, 914, 842, 523, 523, 811, 2288,
	1358, 1634, 809, 481, 1930, 483, 498, 648, 513, 990,
	512, 487, 976, 485, 489, 499, 490, 963, 484, 965,
	495, 1674, 1354, 486, 500, 501, 503, 517, 516, 504,
	968, 493, 514, 859, 857, 34, 2323, 1627, 984, 878,
	825, 2142, 2072, 1916, 1936, 1980, 1718, 1257, 1979, 1935,
	1978, 80, 1232, 1231, 1230, 962, 964, 1954, 970, 1047,
	1048, 1049, 1050, 1051, 825, 1052, 1053, 1054, 1055, 1056,
	1906, 1003, 1000, 1001, 1002, 1007, 1009, 1006, 176, 1005,
	913, 849, 1936, 1355, 1228, 849, 999, 1935, 479, 75,
	1771, 1773, 474, 1670, 825, 176, 110, 2309, 511, 2178,
	1956, 1748, 80, 1331, 1330, 1332, 1333, 1334, 80, 1105,
	613, 1110, 1256, 1095, 523, 1846, 1044, 2160, 176, 1832,
	1107, 981, 982, 523, 1111, 931, 1797, 923, 943, 523,
	615, 2374, 1108, 920, 2375, 1739, 2373, 1125, 1127, 945,
	848, 657, 1096, 960, 848, 80, 1660, 961, 1147, 852,
	842, 993, 884, 1096, 71, 1058, 991, 966, 992, 853,
	1847, 1109, 1958, 925, 1962, 89, 1957, 1928, 1955, 1582,
	1927, 1045, 1046, 1960, 1348, 515, 849, 1101, 1024, 959,
	1034, 1034, 1959, 2042, 1849, 1434, 630, 929, 1844, 849,
	92, 1745, 973, 508, 1014, 1961, 1963, 1772, 2319, 1432,
	1433, 1431, 1853, 1854, 1011, 957, 2154, 1845, 509, 870,
	1072, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1366, 1015,
	1014, 1076, 1078, 1124, 1081, 1083, 1684, 1086, 1098, 1669,
	105, 1351, 1163, 1106, 994, 848, 1129, 1126, 614, 612,
	1972, 842, 845, 846, 1483, 811, 849, 849, 848, 839,
	843, 1045, 1046, 852, 842, 1885, 1012, 1013, 1011, 1153,
	1154, 1013, 1011, 853, 1345, 1068, 1346, 1852, 838, 1347,
	1483, 916, 1755, 2249, 1014, 2052, 176, 2051, 1014, 1855,
	1221, 854, 661, 1656, 106, 1268, 536, 1267, 1255, 1229,
	1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1024, 1667, 1662, 1034, 848, 848, 883, 523, 1665,
	1253, 928, 842, 845, 846, 858, 811, 1662, 1262, 1140,
	839, 843, 1266, 856, 2328, 523, 523, 2362, 523, 1666,
	523, 523, 958, 523, 523, 523, 523, 523, 523, 2047,
	2302, 1045, 1046, 1664, 1124, 1367, 1148, 2382, 523, 1730,
	2186, 1158, 176, 1302, 1338, 2329, 1112, 1263, 1032, 1033,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 176, 2185,
	1034, 2303, 1012, 1013, 1011, 2070, 1249, 1848, 1870, 523,
	1974, 176, 1297, 1298, 1235, 1236, 1722, 1723, 1724, 1869,
	1014, 1242, 1356, 1012, 1013, 1011, 176, 1631, 1261, 1023,
	1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1024, 1014, 176, 1034, 81, 1339, 1299, 1337, 1324, 176,
	2383, 1323, 1322, 1227, 1336, 1313, 1307, 1430, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 523, 523, 523,
	1260, 1240, 1305, 1306, 1252, 1304, 1370, 1303, 1311, 1312,
	1239, 1278, 1238, 1374, 652, 1376, 1377, 1378, 1379, 2363,
	2265, 2306, 1383, 1362, 1133, 2153, 1315, 176, 2305, 1271,
	2304, 1272, 2248, 1274, 1276, 2246, 1397, 1280, 1282, 1284,
	1286, 1288, 1259, 1259, 178, 179, 180, 1335, 1452, 1368,
	1369, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1024, 2224, 1373, 1034, 1451, 1359, 2183, 1300, 2050,
	1380, 1381, 1382, 1134, 1454, 1023, 1022, 1032, 1033, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1024, 523, 1426, 1034,
	1879, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1372, 1464, 113, 1871,
	828, 1428, 827, 1453, 1326, 1867, 1550, 1551, 523, 523,
	1743, 1233, 1678, 1744, 1677, 1456, 1457, 1543, 1529, 1742,
	1471, 1474, 1396, 176, 1788, 2354, 1484, 1399, 1363, 1393,
	1394, 1395, 1012, 1013, 1011, 1327, 1486, 1528, 1485, 1314,
	1310, 1485, 1429, 178, 179, 180, 1466, 1794, 1309, 176,
	1014, 1308, 523, 1012, 1013, 1011, 1530, 1135, 1531, 971,
	1364, 1465, 176, 1125, 1517, 523, 2094, 1325, 1788, 2332,
	176, 1014, 176, 1137, 176, 176, 523, 1788, 2313, 523,
	1027, 1028, 1029, 1030, 1031, 1024, 1464, 1124, 1034, 2155,
	523, 89, 1455, 1537, 657, 1512, 1513, 657, 2269, 1012,
	1013, 1011, 2340, 1560, 2292, 1124, 2338, 89, 1012, 1013,
	1011, 1536, 1795, 2203, 1124, 2342, 2343, 1014, 86, 2268,
	1853, 1854, 178, 179, 180, 2339, 1014, 1788, 2201, 87,
	2208, 1602, 1603, 1604, 1605, 1466, 1662, 1124, 1136, 2158,
	1124, 1417, 1418, 1419, 1420, 523, 1585, 627, 2062, 2061,
	1555, 1637, 1638, 1639, 2058, 2059, 1641, 1643, 1586, 1897,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 1568, 523,
	1034, 1799, 1012, 1013, 1011, 523, 1262, 2058, 2057, 1262,
	1538, 1262, 1618, 1124, 1589, 1852, 1422, 1424, 1425, 1661,
	1014, 1882, 1469, 1470, 1624, 1553, 95, 1855, 1590, 1573,
	1807, 1124, 1572, 1737, 1124, 1423, 1010, 94, 1588, 93,
	1587, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 88, 523,
	95, 1451, 1717, 1915, 1224, 1899, 1451, 1451, 178, 179,
	180, 94, 1839, 93, 536, 661, 1806, 1648, 661, 178,
	179, 180, 1807, 1644, 1828, 1597, 86, 1598, 1599, 1600,
	1601, 1893, 1894, 88, 1614, 1615, 1655, 87, 604, 1658,
	1619, 1659, 176, 1608, 1609, 1610, 1611, 1546, 1547, 176,
	1640, 1630, 1632, 1629, 176, 176, 1124, 88, 176, 1663,
	176, 178, 179, 180, 2318, 1642, 176, 1671, 1653, 1654,
	1807, 1828, 1619, 176, 1580, 1788, 1787, 1788, 1673, 1672,
	1124, 1657, 94, 1675, 1676, 850, 177, 1829, 1807, 177,
	81, 1124, 177, 1010, 1124, 2060, 1831, 524, 1799, 177,
	2130, 176, 523, 1574, 1708, 1709, 1784, 177, 2037, 1711,
	1224, 1223, 1169, 1168, 851, 1124, 1662, 1717, 1712, 177,
	1760, 88, 1759, 1737, 1259, 1662, 563, 562, 2006, 565,
	566, 567, 568, 1620, 1829, 1681, 564, 2188, 2153, 569,
	1645, 524, 1548, 1717, 524, 177, 524, 1128, 1467, 1468,
	1737, 1518, 1473, 1476, 1477, 1407, 1023, 1022, 1032, 1033,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 1701, 2153,
	1034, 1353, 1155, 617, 1726, 1727, 1728, 833, 1737, 1511,
	832, 2280, 1514, 1515, 1131, 2260, 2180, 2189, 2190, 2191,
	1293, 2192, 1226, 1617, 2093, 1428, 2054, 1733, 1900, 1613,
	1607, 1732, 1606, 1535, 1341, 1254, 1734, 1250, 1222, 107,
	1875, 1876, 915, 2096, 1740, 1741, 2281, 1290, 1628, 176,
	1747, 1715, 2359, 1750, 1751, 2165, 2166, 176, 2335, 2168,
	2077, 1757, 2076, 1758, 2075, 523, 1429, 1725, 2193, 2194,
	1294, 1295, 1296, 2006, 1886, 1702, 1793, 1400, 2028, 2026,
	81, 2171, 1132, 2029, 2027, 2170, 2025, 1876, 1762, 1763,
	1764, 1765, 1766, 1537, 1291, 1292, 2024, 176, 176, 1803,
	2371, 1534, 1789, 2355, 1776, 1812, 1815, 1816, 1817, 1813,
	1542, 1814, 1818, 1838, 1754, 2165, 2166, 1812, 1815, 1816,
	1817, 1813, 2159, 1814, 1818, 34, 2030, 2081, 1816, 1817,
	1986, 1985, 1998, 2000, 1823, 2146, 2301, 2239, 1122, 1118,
	1785, 2001, 2241, 2145, 631, 2149, 1995, 1352, 1101, 606,
	1767, 1857, 632, 1119, 1593, 1775, 1880, 1860, 1861, 523,
	880, 1479, 879, 1822, 176, 2106, 1781, 1875, 1939, 2151,
	983, 176, 1841, 86, 1786, 1480, 1796, 523, 1532, 1533,
	1121, 1908, 1120, 523, 87, 86, 1907, 1262, 1262, 114,
	88, 1826, 88, 523, 2073, 1830, 87, 1833, 1862, 1863,
	1864, 1865, 1705, 1624, 1694, 1912, 1550, 1551, 1892, 1903,
	2315, 1842, 1122, 1118, 1721, 2276, 176, 176, 176, 176,
	176, 1856, 1820, 1539, 1756, 639, 640, 1119, 1868, 1984,
	95, 93, 176, 176, 2129, 2247, 2245, 1983, 2244, 2237,
	1878, 94, 1877, 93, 95, 2150, 2148, 1910, 176, 2078,
	1646, 1883, 1115, 1116, 1121, 94, 1120, 93, 1466, 1887,
	1888, 1889, 638, 1242, 95, 94, 88, 1901, 1902, 1911,
	523, 2236, 2139, 1465, 1451, 94, 1799, 2361, 2360, 2361,
	1784, 1909, 1761, 1749, 1746, 1149, 1141, 2307, 1952, 1140,
	1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1024, 1946, 1947, 1034, 523, 100, 101, 613, 2049,
	629, 97, 1948, 1949, 82, 176, 1, 1966, 1967, 523,
	1968, 1969, 2337, 492, 1937, 1931, 1519, 1938, 523, 1099,
	1971, 1975, 1976, 1944, 506, 523, 523, 2333, 176, 176,
	176, 176, 176, 177, 1989, 177, 1952, 2018, 177, 1965,
	176, 1964, 1951, 1950, 1328, 176, 2003, 1318, 176, 2211,
	2277, 176, 176, 176, 2084, 1988, 1622, 841, 2009, 139,
	1583, 1584, 619, 2009, 2350, 104, 524, 524, 524, 1735,
	1736, 2015, 804, 1987, 103, 844, 176, 2038, 942, 1990,
	2039, 1647, 1111, 2204, 524, 524, 2012, 1752, 2033, 2034,
	1858, 620, 1594, 2020, 2021, 621, 2023, 1175, 1173, 2031,
	2019, 2071, 2036, 2022, 1174, 1172, 1177, 176, 2048, 1176,
	2040, 2035, 1171, 1401, 523, 520, 1819, 174, 2046, 89,
	1362, 523, 1164, 1142, 881, 482, 2063, 176, 1679, 488,
	1042, 1982, 1834, 658, 651, 2014, 2143, 176, 1981, 1994,
	2085, 1996, 1791, 1999, 1992, 2300, 2055, 2056, 2238, 572,
	2067, 176, 2083, 2080, 176, 2314, 2066, 1591, 1138, 1753,
	1067, 1481, 1565, 545, 2107, 2082, 177, 1527, 1421, 2017,
	1624, 561, 558, 559, 2088, 1777, 1800, 543, 2087, 537,
	2068, 2069, 2079, 177, 1150, 1811, 1973, 1809, 1808, 1703,
	1569, 2101, 1977, 2104, 2105, 2167, 2102, 2163, 1563, 1783,
	1592, 1918, 524, 176, 2090, 995, 177, 2108, 522, 1114,
	532, 524, 816, 1478, 2124, 2286, 1720, 524, 2109, 2126,
	2110, 2114, 1113, 1489, 1490, 60, 38, 527, 2367, 986,
	2004, 2119, 2120, 645, 32, 31, 30, 29, 28, 23,
	22, 21, 20, 19, 2131, 25, 18, 17, 2135, 2147,
	16, 109, 659, 2140, 47, 808, 44, 815, 176, 42,
	2137, 116, 2152, 115, 45, 41, 2169, 918, 39, 27,
	2172, 26, 15, 14, 13, 12, 11, 10, 9, 5,
	2156, 2157, 4, 989, 2161, 24, 2, 2175, 0, 0,
	0, 2162, 0, 176, 0, 0, 176, 176, 176, 523,
	0, 0, 2173, 2179, 0, 0, 2182, 0, 2184, 2174,
	0, 2176, 2177, 0, 0, 0, 2181, 2212, 523, 523,
	523, 0, 0, 2111, 2112, 0, 2113, 2207, 0, 2115,
	2199, 2117, 0, 2217, 1023, 1022, 1032, 1033, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1024, 0, 0, 1034, 0,
	0, 2202, 0, 523, 523, 523, 176, 0, 0, 0,
	0, 2216, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2223, 0, 2231, 2232, 2234, 523,
	0, 523, 2233, 2218, 2219, 2220, 2221, 2222, 2243, 2254,
	2250, 2225, 2226, 2242, 0, 2256, 524, 2252, 0, 2228,
	0, 523, 0, 0, 0, 2128, 0, 0, 613, 0,
	2009, 0, 0, 524, 524, 34, 524, 0, 524, 524,
	613, 524, 524, 524, 524, 524, 524, 0, 0, 0,
	2258, 523, 2264, 2270, 0, 0, 524, 0, 2273, 2012,
	177, 2272, 2262, 2012, 536, 0, 0, 0, 2263, 2279,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 2297, 0, 2296, 524, 2266, 177,
	2267, 2299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 0, 177, 2282, 2283, 2284, 2285, 2308,
	2289, 0, 2290, 2291, 2293, 0, 0, 0, 2294, 2295,
	177, 523, 176, 0, 0, 0, 2310, 177, 2317, 0,
	2312, 0, 2311, 523, 0, 0, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 524, 524, 524, 0, 0,
	523, 0, 2320, 0, 34, 0, 0, 2012, 2330, 523,
	523, 0, 2336, 2341, 0, 2349, 0, 2344, 0, 0,
	0, 0, 0, 2322, 0, 177, 573, 2279, 2351, 2358,
	0, 0, 0, 0, 2009, 0, 0, 0, 2364, 0,
	0, 0, 0, 34, 0, 0, 0, 0, 2345, 2370,
	0, 0, 0, 0, 2377, 2251, 0, 0, 0, 0,
	0, 0, 2379, 0, 0, 0, 2259, 0, 0, 2261,
	0, 0, 0, 0, 175, 0, 0, 478, 0, 0,
	518, 0, 2365, 2366, 0, 524, 2123, 478, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 524, 2122, 0,
	0, 0, 0, 644, 0, 644, 0, 659, 659, 659,
	0, 177, 172, 478, 0, 0, 0, 2298, 536, 0,
	0, 0, 0, 1891, 0, 985, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 177, 136, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	177, 0, 0, 524, 0, 0, 0, 0, 177, 0,
	177, 0, 177, 177, 524, 0, 0, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 0,
	146, 0, 0, 0, 0, 135, 1023, 1022, 1032, 1033,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 0, 0,
	1034, 0, 0, 0, 0, 153, 0, 154, 0, 0,
	0, 0, 0, 1245, 1246, 145, 144, 171, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	0, 0, 1034, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1145, 1102, 0, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 524, 1165, 0,
	0, 0, 2121, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1247, 147, 0, 1244, 0, 141, 142,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 1018, 524, 1021, 0,
	0, 0, 0, 609, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 0, 1019, 1020, 1017, 1023, 1022, 1032, 1033, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1024, 0, 0, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 812, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 177, 177, 0, 0, 177, 0, 177, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 177, 1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1024, 1945, 0, 1034, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	524, 0, 0, 0, 1023, 1022, 1032, 1033, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1024, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	1264, 0, 1034, 0, 1270, 1270, 0, 1270, 0, 1270,
	1270, 0, 1279, 1270, 1270, 1270, 1270, 1270, 0, 1731,
	0, 0, 0, 143, 0, 1264, 1264, 808, 0, 0,
	0, 478, 0, 478, 0, 137, 478, 0, 138, 1023,
	1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1024, 0, 0, 1034, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 659, 659, 0,
	0, 0, 0, 0, 0, 177, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 524, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 478, 524, 1458, 0, 659, 0,
	0, 524, 0, 0, 0, 0, 0, 0, 0, 1264,
	0, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 177, 177, 177, 177, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 177, 0, 0, 0, 0, 0, 0, 0, 919,
	0, 924, 0, 0, 926, 0, 177, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1145, 0, 0, 659, 524, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 0, 0, 0,
	0, 0, 478, 524, 524, 0, 177, 177, 177, 177,
	177, 0, 0, 0, 815, 0, 172, 0, 177, 0,
	0, 0, 0, 177, 0, 0, 177, 0, 0, 177,
	177, 177, 0, 0, 0, 0, 0, 0, 808, 0,
	114, 0, 136, 0, 815, 0, 0, 1265, 0, 0,
	0, 605, 73, 156, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 1265, 0, 0, 0, 0, 478, 0,
	0, 0, 1152, 0, 146, 177, 0, 0, 808, 135,
	0, 0, 524, 0, 1316, 0, 0, 0, 0, 524,
	0, 0, 0, 0, 0, 177, 0, 478, 0, 153,
	0, 154, 0, 0, 0, 177, 0, 123, 124, 145,
	144, 171, 1361, 616, 0, 73, 0, 0, 0, 177,
	0, 0, 177, 0, 0, 0, 0, 0, 478, 0,
	0, 0, 0, 616, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 1385, 478, 478, 478, 478,
	478, 478, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 121, 147, 128,
	120, 177, 141, 142, 0, 0, 0, 157, 0, 0,
	0, 1714, 0, 478, 0, 0, 162, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 130, 125, 126, 127, 131, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 644, 1361, 644, 644, 0, 0,
	644, 644, 644, 0, 0, 0, 1265, 0, 0, 0,
	0, 177, 114, 0, 177, 177, 177, 524, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 644, 644, 644,
	644, 644, 0, 0, 0, 0, 524, 524, 524, 1316,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 1778, 626, 0, 1840, 0, 0,
	0, 524, 524, 524, 177, 0, 0, 0, 478, 0,
	0, 153, 0, 154, 1361, 1342, 478, 0, 478, 0,
	478, 1571, 0, 171, 0, 0, 0, 524, 0, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 1371, 143, 0, 524,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 137,
	0, 0, 138, 114, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 0, 0, 0, 0, 0, 156, 0, 0, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 1410, 0, 0, 0, 0, 1541, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 1904, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 153, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 524,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 524, 167,
	168, 169, 170, 0, 0, 0, 0, 524, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 149, 0, 0, 0, 478, 0,
	157, 0, 0, 0, 0, 478, 0, 0, 0, 162,
	478, 478, 0, 0, 478, 0, 1706, 0, 0, 978,
	978, 978, 478, 0, 1270, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 1552, 0, 1991, 73,
	0, 0, 0, 0, 1556, 0, 1559, 659, 0, 1410,
	0, 1264, 1043, 616, 2016, 1270, 1264, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 0, 1069, 1071, 1074,
	1074, 1074, 1071, 1074, 1074, 1071, 1074, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 149, 0, 644, 644, 0,
	0, 1103, 0, 0, 616, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 616, 644, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 1264, 0, 0, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 0, 0, 0, 0,
	0, 167, 168, 169, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 1699, 1700,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 172, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 136, 0,
	478, 0, 0, 0, 0, 1713, 0, 1890, 0, 156,
	0, 0, 0, 0, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 1361, 0, 0,
	0, 0, 167, 168, 169, 170, 0, 0, 1541, 0,
	146, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 478, 478, 478, 478, 478, 2213, 2214, 2215,
	0, 0, 0, 0, 0, 153, 0, 154, 478, 478,
	0, 0, 0, 1245, 1246, 145, 144, 171, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 2229, 2229, 2229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 644, 0, 0, 0, 0,
	0, 0, 0, 1264, 0, 0, 0, 0, 2255, 0,
	2257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1247, 147, 0, 1244, 0, 141, 142,
	1541, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 478, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1192, 0, 0, 0, 0, 1265, 0,
	659, 0, 1825, 1265, 478, 478, 478, 478, 478, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 978, 978,
	978, 478, 0, 0, 478, 0, 0, 478, 2041, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2326, 478, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 1265, 0, 0, 0, 1264, 0, 2331,
	0, 0, 0, 478, 0, 0, 0, 0, 659, 659,
	0, 0, 0, 478, 0, 0, 0, 0, 1180, 0,
	1922, 1923, 1924, 1925, 1926, 0, 0, 478, 0, 0,
	478, 0, 0, 0, 0, 0, 1410, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 1193, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 0,
	1215, 1216, 1217, 1218, 1219, 1194, 1195, 1196, 1197, 1178,
	1179, 1207, 0, 1181, 478, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 478, 478, 478, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	2053, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	72, 36, 37, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 2074, 0, 0, 40, 66, 67, 0, 64, 68,
	0, 0, 1316, 0, 0, 0, 0, 65, 0, 1208,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	1265, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2100, 53, 0, 2103, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 46,
	49, 48, 51, 0, 63, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	77, 76, 0, 0, 61, 62, 50, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 2195, 0, 0,
	2196, 2197, 2198, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 55, 0, 56, 57,
	58, 59, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 2321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 0, 73, 0, 0, 1566,
	1566, 1566, 1566, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 1566,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2125, 0, 0, 0, 0, 0, 0, 0,
	2132, 2133, 2134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 0, 73,
	0, 2013, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2316, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 73, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 2352, 0, 2353, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 202, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 980, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 202, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 2042, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 980, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 202, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 2002, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 980, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 202, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 1554, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 980, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 202, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 980, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 202, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 980, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 803, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 674, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	662, 656, 655, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 803, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 1156,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 674, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	662, 656, 655, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 786, 772, 404, 0, 721, 789, 691, 709, 799,
	712, 715, 755, 670, 734, 328, 706, 0, 695, 666,
	701, 667, 693, 723, 235, 690, 774, 737, 788, 286,
	232, 672, 696, 342, 711, 187, 757, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 795, 290, 744, 0, 389, 313, 0, 0, 0,
	725, 778, 732, 768, 720, 756, 680, 743, 790, 707,
	752, 791, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 703, 749, 785,
	704, 751, 230, 274, 237, 229, 406, 796, 777, 0,
	0, 803, 787, 727, 754, 802, 665, 746, 0, 668,
	671, 798, 781, 699, 240, 0, 0, 0, 0, 0,
	0, 0, 724, 733, 765, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 742, 0, 0, 0,
	676, 669, 0, 0, 0, 0, 722, 0, 0, 0,
	679, 0, 698, 766, 0, 663, 258, 673, 314, 0,
	770, 780, 719, 438, 784, 717, 716, 761, 677, 776,
	710, 285, 675, 282, 182, 198, 0, 708, 324, 363,
	369, 775, 694, 702, 221, 700, 367, 338, 423, 205,
	248, 360, 343, 365, 741, 759, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 653,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 674, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 689, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 771, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	662, 656, 655, 283, 292, 763, 801, 337, 368, 211,
	425, 388, 684, 688, 682, 683, 735, 736, 685, 792,
	793, 794, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	0, 767, 678, 0, 686, 687, 0, 773, 782, 783,
	740, 181, 195, 288, 797, 357, 251, 452, 432, 428,
	664, 681, 227, 692, 0, 0, 705, 713, 714, 726,
	728, 729, 730, 731, 739, 747, 748, 750, 758, 760,
	762, 764, 769, 779, 800, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 738, 745, 298, 245,
	263, 273, 753, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 1460, 0, 541, 0,
	0, 0, 235, 540, 0, 0, 0, 286, 232, 0,
	1461, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 585,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 81, 0, 0,
	178, 179, 180, 563, 562, 552, 565, 566, 567, 568,
	0, 0, 209, 564, 216, 597, 569, 570, 571, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 538, 556, 0, 584, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 554,
	642, 0, 0, 0, 601, 0, 555, 0, 0, 547,
	548, 550, 549, 551, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 600, 0,
	0, 438, 0, 0, 598, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	587, 599, 593, 594, 591, 592, 586, 590, 589, 588,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 0, 602,
	578, 579, 580, 581, 583, 0, 595, 596, 582, 181,
	195, 288, 0, 357, 251, 452, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 541, 0, 0, 0,
	235, 540, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 585, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 576, 577,
	0, 0, 0, 0, 0, 0, 1578, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 0, 178, 179,
	180, 563, 562, 552, 565, 566, 567, 568, 0, 0,
	209, 564, 216, 597, 569, 570, 571, 1579, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 538, 556, 0, 584, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 554, 0, 0,
	0, 0, 601, 0, 555, 0, 0, 547, 548, 550,
	549, 551, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 600, 0, 0, 438,
	0, 0, 598, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 587, 599,
	593, 594, 591, 592, 586, 590, 589, 588, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 0, 602, 578, 579,
	580, 581, 583, 0, 595, 596, 582, 181, 195, 288,
	0, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 72, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 541, 0, 0, 0, 235,
	540, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 585, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 0, 178, 179, 180,
	563, 562, 552, 565, 566, 567, 568, 0, 0, 209,
	564, 216, 597, 569, 570, 571, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 538, 556, 0, 584, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 0, 0, 0,
	0, 601, 0, 555, 0, 0, 547, 548, 550, 549,
	551, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 600, 0, 0, 438, 0,
	0, 598, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 587, 599, 593,
	594, 591, 592, 586, 590, 589, 588, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 602, 578, 579, 580,
	581, 583, 0, 595, 596, 582, 181, 195, 288, 80,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 541, 0, 0, 0, 235, 540, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 585, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 1124, 178, 179, 180, 563, 562,
	552, 565, 566, 567, 568, 0, 0, 209, 564, 216,
	597, 569, 570, 571, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	538, 556, 0, 584, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 0, 0, 0, 0, 601,
	0, 555, 0, 0, 547, 548, 550, 549, 551, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 600, 0, 0, 438, 0, 0, 598,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 587, 599, 593, 594, 591,
	592, 586, 590, 589, 588, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 602, 578, 579, 580, 581, 583,
	0, 595, 596, 582, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 541, 0, 0, 0, 235, 540, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 585, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 0, 178, 179, 180, 563, 562, 552, 565,
	566, 567, 568, 0, 0, 209, 564, 216, 597, 569,
	570, 571, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 538, 556,
	0, 584, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 642, 0, 0, 0, 601, 0, 555,
	0, 0, 547, 548, 550, 549, 551, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 600, 0, 0, 438, 0, 0, 598, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 587, 599, 593, 594, 591, 592, 586,
	590, 589, 588, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 602, 578, 579, 580, 581, 583, 0, 595,
	596, 582, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 541,
	0, 0, 0, 235, 540, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	585, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 81, 0,
	0, 178, 179, 180, 563, 1475, 552, 565, 566, 567,
	568, 0, 0, 209, 564, 216, 597, 569, 570, 571,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 538, 556, 0, 584,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 642, 0, 0, 0, 601, 0, 555, 0, 0,
	547, 548, 550, 549, 551, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 600,
	0, 0, 438, 0, 0, 598, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 587, 599, 593, 594, 591, 592, 586, 590, 589,
	588, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	602, 578, 579, 580, 581, 583, 0, 595, 596, 582,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 541, 0, 0,
	0, 235, 540, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 585, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 81, 0, 0, 178,
	179, 180, 563, 1472, 552, 565, 566, 567, 568, 0,
	0, 209, 564, 216, 597, 569, 570, 571, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 538, 556, 0, 584, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 642,
	0, 0, 0, 601, 0, 555, 0, 0, 547, 548,
	550, 549, 551, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 600, 0, 0,
	438, 0, 0, 598, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 587,
	599, 593, 594, 591, 592, 586, 590, 589, 588, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 602, 578,
	579, 580, 581, 583, 0, 595, 596, 582, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 541, 0, 0, 0, 235,
	540, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 585, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 0, 178, 179, 180,
	563, 562, 552, 565, 566, 567, 568, 0, 0, 209,
	564, 216, 597, 569, 570, 571, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 538, 556, 0, 584, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 0, 0, 0,
	0, 601, 0, 555, 0, 0, 547, 548, 550, 549,
	551, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 600, 0, 0, 438, 0,
	0, 598, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 587, 599, 593,
	594, 591, 592, 586, 590, 589, 588, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 602, 578, 579, 580,
	581, 583, 0, 595, 596, 582, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 585, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 563, 562,
	552, 565, 566, 567, 568, 0, 0, 209, 564, 216,
	597, 569, 570, 571, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 556, 0, 584, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 0, 0, 0, 0, 601,
	0, 555, 0, 0, 547, 548, 550, 549, 551, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 600, 0, 0, 438, 0, 0, 598,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 2346, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 587, 599, 593, 594, 591,
	592, 586, 590, 589, 588, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 602, 578, 579, 580, 581, 583,
	0, 595, 596, 582, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 585, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 1124, 178, 179, 180, 563, 562, 552, 565,
	566, 567, 568, 0, 0, 209, 564, 216, 597, 569,
	570, 571, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 556,
	0, 584, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 0, 0, 0, 0, 601, 0, 555,
	0, 0, 547, 548, 550, 549, 551, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 600, 0, 0, 438, 0, 0, 598, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 587, 599, 593, 594, 591, 592, 586,
	590, 589, 588, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 602, 578, 579, 580, 581, 583, 0, 595,
	596, 582, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	585, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 81, 0,
	0, 178, 179, 180, 563, 562, 552, 565, 566, 567,
	568, 0, 0, 209, 564, 216, 597, 569, 570, 571,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 556, 0, 584,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 0, 0, 0, 0, 601, 0, 555, 0, 0,
	547, 548, 550, 549, 551, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 600,
	0, 0, 438, 0, 0, 598, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 587, 599, 593, 594, 591, 592, 586, 590, 589,
	588, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	602, 578, 579, 580, 581, 583, 0, 595, 596, 582,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1023, 1022, 1032, 1033, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1024, 0, 0, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 848, 438, 0,
	0, 0, 0, 0, 845, 846, 285, 811, 282, 182,
	198, 839, 843, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 1144, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 1146,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 1012, 1013, 1011,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 72, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 81, 0, 1124, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 80, 357, 251, 452,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 72, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 80, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 1526, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 1524, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 811,
	282, 182, 198, 809, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 1526, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 1317, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 1124, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	2230, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 1779,
	0, 0, 1780, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 1167, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 1166, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 2327, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 2230, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1146, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 1408,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	1289, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 1287, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 1285, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 1283, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 1281, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	1277, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 1275, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 1273, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 1248, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 1151, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 988,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	528, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 476, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231,
}

var yyPact = [...]int{
	4434, -1000, -350, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1635, 1709, -1000, -1000, -1000, -1000, 1766,
	-1000, 677, 1426, -1000, 1630, 3151, -1000, 31401, 447, -1000,
	30903, 443, 236, 31401, -1000, 119, -1000, 86, 31401, 111,
	30405, -1000, -1000, -277, 13471, 1577, 15, 12, 31401, -1000,
	1729, 1467, -1000, 260, -1000, -1000, -1000, -1000, -1000, -1000,
	29907, -1000, -1000, -1000, 1633, 1623, 1770, 577, 1574, -1000,
	1683, 1467, -1000, 13471, 1715, 1674, 11977, -1000, 11977, 358,
	-1000, -1000, 9486, -1000, -1000, 18453, 31401, 31401, 257, -1000,
	1630, -1000, -1000, 232, -1000, 265, 1396, -1000, 1393, -1000,
	589, 602, 288, 355, 354, 277, 274, 272, 270, 267,
	262, 261, 259, 293, -1000, 610, 610, -171, -175, 3504,
	343, 343, 343, 391, 1599, 1597, -1000, 659, -1000, 610,
	610, 231, 610, 610, 610, 610, 186, 185, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 287, 1630, 179, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31401, 233, 31401, -1000, 532, 31401,
	704, 704, 29, 704, 704, 704, 704, 141, 482, 4,
	-1000, 136, 175, 138, 173, 723, 372, 88, -1000, -1000,
	176, 723, 1049, 585, 92, -1000, 704, 7486, 7486, 7486,
	-1000, 1610, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	390, -1000, -1000, -1000, -1000, 31401, 29409, 254, 635, -1000,
	-1000, -1000, 16, -1000, -1000, 1202, 805, -1000, 13471, 2515,
	1307, 1307, -1000, -1000, 539, -1000, -1000, 14965, 14965, 14965,
	14965, 14965, -1000, 14965, 14965, 14965, 14965, 14965, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1307, 524, -1000, -1000, 1307, 1307, 1307, 1307,
	1307, 1307, 1307, 1307, 13471, 1307, 1307, 1307, 1307, 1307,
	1307, 1307, 1307, 1307, 1307, 1307, 1307, 1307, 1307, 1307,
	1307, 1307, 1307, -1000, -1000, 10981, -1000, 31401, -1000, 1307,
	134, 1683, 1467, -1000, 1729, 1695, 260, -1000, 1661, 1271,
	1306, 1082, 1467, 1363, 31401, -1000, 1401, -1000, -1000, -1000,
	1493, 953, 1047, -1000, -1000, -1000, -1000, 1134, 13471, -1000,
	-1000, 1744, -1000, 16459, 517, 779, 1743, 28911, -1000, 358,
	358, 1388, 8986, -46, -1000, -1000, -1000, 633, 20445, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1610, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1328, 31401, -1000, -1000, 4103, 1116,
	-1000, 1425, -1000, 1326, -1000, 1409, 1434, 439, 1116, 408,
	407, 406, -1000, -134, -1000, -1000, -1000, -1000, -1000, 610,
	610, 276, 3151, 3937, -1000, -1000, -1000, 28413, 1424, 1116,
	-1000, 1422, -1000, 701, 461, 494, 494, 1116, -1000, -1000,
	31401, 1116, 700, 698, 31401, 31401, -1000, 27915, -1000, 27417,
	26919, 889, 31401, 26421, 25923, 25425, 24927, 24429, -1000, 1488,
	-1000, 1461, -1000, -1000, -1000, 31401, 31401, 31401, 235, -1000,
	-1000, 31401, 1116, -1000, -1000, 885, 883, 610, 610, 864,
	1041, 1038, 1030, 610, 610, 863, 1029, 22437, 172, 860,
	859, 856, 1055, 1025, 140, 925, 855, 853, 31401, 1421,
	31401, -1000, 165, 630, 273, 632, 1630, 1575, 1387, 374,
	438, 1116, 350, 350, -1000, 7986, -1000, -1000, 1018, 13471,
	-1000, 736, 723, 723, -1000, -1000, -1000, -1000, -1000, -1000,
	704, 31401, 736, -1000, -1000, -1000, 723, 704, 31401, 704,
	704, 704, 704, 723, 723, 723, 704, 31401, 31401, 31401,
	31401, 31401, 31401, 31401, 31401, 31401, 7486, 7486, 7486, 585,
	704, -281, -1000, 1017, -1000, 1473, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 108, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -85, 1371, 23931, -1000, -282, -283,
	-284, -286, -1000, -1000, -1000, -289, -295, -1000, -1000, -1000,
	13471, 13471, 13471, 13471, 1164, 588, 14965, 861, 592, 14965,
	14965, 14965, 14965, 14965, 14965, 14965, 14965, 14965, 14965, 14965,
	14965, 14965, 14965, 14965, 928, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1116, 1162, 1337, 1337, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 15463, 9984, 7986, 11977,
	11977, 13471, 13471, 12973, 12475, 11977, 1609, 649, 805, 31401,
	-1000, 1082, -1000, -1000, 14467, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31401, 31401, 66,
	11977, 11977, 11977, 11977, 11977, 1295, 1178, 1309, -1000, 1367,
	-1000, -151, 17955, 13471, 1008, -1000, -1000, -1000, 1683, -1000,
	1683, 1295, 1587, 1514, 11977, -1000, -1000, 1587, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1330, -1000, 31401, 1363,
	1670, 31401, 1520, 1007, 235, -1000, 13471, 13471, 1358, -1000,
	1061, 31401, -1000, -1000, 23433, -1000, -1000, 6986, -1000, 31401,
	258, 31401, -1000, 21939, 22935, 8486, -46, -1000, 8486, 1319,
	-1000, -63, -10, 10482, 545, -1000, -1000, -1000, 3504, 15961,
	1193, 1586, 51, -1000, -1000, -1000, 1409, -1000, 1409, 1409,
	1409, 1409, 235, 235, 235, 235, -1000, -1000, -1000, -1000,
	-1000, 1419, 1417, -1000, 1409, 1409, 1409, 1409, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1416, 1416, 1416, 1410, 1410,
	330, -1000, 13471, 189, 31401, 1651, 835, 165, 351, 1443,
	1116, 1116, 1116, 351, -1000, 1275, 1233, -1000, 1356, -1000,
	-1000, 1703, -1000, -1000, 660, 743, 735, 498, 31401, 142,
	234, -1000, 327, -1000, 31401, 1116, 696, 494, 1116, -1000,
	1116, -1000, -1000, -1000, -1000, 515, -1000, -1000, 1116, 1341,
	-1000, 1332, 763, 729, 749, 722, 1341, -1000, -1000, -152,
	1341, -1000, 1341, -1000, 1341, -1000, 1341, -1000, 1341, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 593, 31401, 142,
	928, -1000, 373, -1000, -1000, 928, 928, -1000, -1000, -1000,
	-1000, 1004, 1002, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-338, 31401, -1000, 152, 627, 220, 263, 284, 31401, 128,
	1653, 163, 182, 31401, 31401, 350, 1471, 31401, 1648, 31401,
	-1000, -1000, -1000, -1000, 805, 31401, -1000, -1000, 704, 704,
	-1000, -1000, 31401, 704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 704, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31401, 31401, -1000, -1000, -1000, -1000, -1000, 129, -40, 198,
	-1000, -1000, -1000, -1000, -1000, 1664, -1000, 805, 588, 672,
	614, -1000, -1000, 814, -1000, -1000, 2628, -1000, -1000, -1000,
	-1000, 861, 14965, 14965, 14965, 680, 2628, 2679, 746, 880,
	556, 1014, 1014, 557, 557, 557, 557, 557, 1096, 1096,
	-1000, -1000, -1000, -1000, 1082, 14965, -1000, -1000, -1000, 1082,
	11977, 11977, 1339, -1000, 1307, 504, -1000, 1199, 1199, 1015,
	1070, 709, 1742, 1199, 619, 1741, 1199, 1199, 11977, -1000,
	-1000, 675, -1000, 13471, 1082, -1000, 789, 1338, 1336, 1740,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1199, 1082, 1082, 1199, 1199, 1082, -1000, 31401, -1000,
	-271, -1000, -89, 548, 1307, -1000, 22437, 1082, 1202, -1000,
	-1000, -1000, -1000, -1000, 19947, 1394, 1587, -1000, -1000, 1307,
	1291, -1000, -1000, 235, 32, 1037, 805, 805, 13471, -1000,
	-1000, -1000, -1000, -1000, -1000, 495, 1733, 203, 1307, -1000,
	1286, 1523, -1000, -1000, -1000, 1669, 17457, 31401, 1359, 1312,
	-1000, 488, -1000, 1319, -46, -19, -1000, -1000, -1000, -1000,
	805, -1000, 1222, -1000, 3383, -1000, 342, -1000, -1000, -1000,
	-1000, 616, 1668, 1582, 38, -1000, -1000, -1000, 235, 235,
	-1000, -1000, 545, 545, 545, 545, 995, 995, -1000, -1000,
	-1000, -1000, -1000, 827, -1000, -1000, -1000, 816, -1000, -1000,
	994, 1479, 189, -1000, -1000, 610, 970, 1589, 31401, -1000,
	-1000, 1186, 152, 31401, 664, 1470, -1000, 1443, 1443, 1443,
	31401, -1000, -1000, -1000, -1000, 2437, 31401, 1247, -1000, 137,
	-1000, 1154, 31401, -1000, 1220, 1415, 1116, 1116, -1000, -1000,
	7986, -1000, 31401, 1307, -1000, -1000, -1000, -1000, 425, 1627,
	1622, 142, 137, 545, 1116, -1000, -1000, -1000, -1000, -1000,
	-336, 1218, 396, 144, 181, 31401, 31401, 31401, 31401, 31401,
	531, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 183, 356,
	-1000, 31401, 31401, 423, -1000, -1000, -1000, 723, -1000, -1000,
	723, -1000, -1000, -1000, -1000, -1000, 1607, 31401, -44, -311,
	-1000, -306, -1000, -1000, -1000, -1000, 680, 2628, 2604, -1000,
	14965, 14965, -1000, 2628, -1000, 1199, 1199, 11977, 11977, 7986,
	-1000, -1000, 432, 928, 432, 14965, 14965, -1000, 14965, 14965,
	-1000, -147, 1366, 642, -1000, 13471, 784, -1000, -1000, 14965,
	14965, 13471, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 404, 402, 399, 31401, -1000, -1000, 1687, -1000, 1546,
	1545, 1738, 1733, -1000, 21939, 1587, -1000, -1000, 31401, -266,
	-1000, 1572, 1557, -1000, -1000, -1000, -1000, 6486, 1683, 13471,
	1469, 31401, 1307, -1000, 16958, 31401, 31401, 21939, 21939, 21939,
	21939, 21939, -1000, 1502, 1492, -1000, 1485, 1484, 1532, 31401,
	-1000, 1196, 1082, 1695, 17457, 258, 1333, 21939, -1000, -1000,
	21939, 31401, 5986, -1000, -1000, -52, -64, -1000, -1000, -1000,
	3504, -1000, -1000, -1000, -1000, 767, 14965, 1769, -1000, 949,
	-1000, -1000, 690, 688, -1000, 31401, 1413, -1000, -1000, -1000,
	545, 545, -1000, -1000, -1000, -1000, 1173, -1000, 1150, 1311,
	1144, 80, -1000, 1433, 1606, 610, 610, -1000, 813, -1000,
	1116, -1000, -1000, 395, -1000, 1640, 31401, 1460, 1458, 1456,
	-1000, 1702, 1293, 31401, -1000, -1000, 31401, -1000, 1542, 189,
	31401, -1000, -1000, -1000, -1000, 234, 31401, -1000, 1337, 137,
	-1000, -1000, -1000, -1000, -1000, -1000, 31401, 155, -1000, 1411,
	1059, -1000, 1438, -1000, -1000, -1000, -1000, 145, 219, -1000,
	31401, 385, 1479, 31401, -1000, -1000, -1000, 704, 704, -1000,
	-1000, 1604, -1000, 1116, -1000, 14965, 2628, 2628, -1000, -1000,
	-1000, 1082, -1000, 1082, 1409, 1409, -1000, 1409, 1410, -1000,
	1409, 99, 1409, 85, 1082, 1082, 2572, 2408, 2376, 1974,
	1307, -141, -1000, 805, 13471, 1620, 1316, 668, 1307, 1307,
	1307, 1132, 31401, -1000, -1000, -1000, -1000, 1733, 1728, 1304,
	-1000, -1000, 32, 299, -1000, 1560, 1557, -1000, 1699, 1568,
	1698, -1000, -1000, -1000, 805, -1000, 1611, 1354, -1000, 607,
	1085, -1000, -1000, 11479, 1135, 1537, 486, 1132, 1385, 1523,
	1451, 1455, 1511, -1000, -1000, -1000, -1000, 1491, -1000, 1487,
	-1000, -1000, 1401, -1000, -1000, 1178, 1733, 21939, 1238, 1238,
	-1000, 468, -1000, -1000, -1000, -1000, -1000, -1000, 2628, 112,
	-1000, -1000, -1000, 1403, 14965, -1000, -1000, 235, 947, 235,
	807, -1000, 788, -1000, -1000, -213, -1000, -1000, 1408, 1462,
	-1000, -1000, 31401, -1000, -1000, 31401, 31401, 31401, 31401, -1000,
	-1000, 249, -1000, 1123, 1109, -1000, -173, -1000, -1000, 1401,
	-1000, -1000, -1000, 1125, -1000, -155, 1116, 31401, 31401, 31401,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2628, -1000,
	-1000, -1000, 359, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 14965, 14965, 14965, 14965, 14965, 1683, 942, 805, 14965,
	14965, -1000, 19449, 21441, 21441, 18951, -1000, 1728, 1726, 1692,
	1556, 1562, 1562, 1560, -1000, 1691, 1689, -1000, 915, 1688,
	912, 686, -1000, 31401, 13471, 1307, -1000, 297, 31401, 1307,
	31401, -1000, 1719, -1000, -1000, 13471, 1402, -1000, 13471, -1000,
	-1000, -1000, -1000, -1000, 1719, 1238, -1000, -1000, 567, -1000,
	31401, 905, 545, -1000, 545, 1114, 1093, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1401, -1000, -1000, -1000, 1293,
	192, 313, -1000, 234, -1000, -178, -179, 1662, -1000, -1000,
	7986, -1000, -1000, 1398, 1441, -1000, -1000, -1000, 789, 789,
	789, 789, 151, 1082, -1000, 789, 789, 1100, -1000, -1000,
	-1000, 1100, 1100, 548, 1726, -1000, 13471, 13471, 1554, 796,
	-1000, -1000, -1000, -1000, 910, 908, -1000, 901, -1000, 1747,
	-1000, 805, -1000, 1307, -1000, 466, 1085, -1000, 1683, 805,
	31401, 805, 1683, -1000, 1073, -1000, -1000, -1000, -1000, -1000,
	1657, 1307, -1000, -1000, -1000, -1000, 260, 1280, -1000, 599,
	31401, 31401, -1000, -1000, -1000, -1000, 1082, 190, -159, -1000,
	-1000, -1000, 20943, -1000, -1000, -1000, -1000, -1000, 805, 1202,
	-1000, 780, -1000, -1000, -1000, -1000, -1000, 31401, 1085, 31401,
	-1000, 1064, -1000, 1454, 1084, 260, 13969, -154, 7986, 5486,
	1020, -1000, -1000, 1513, -150, -164, -1000, -1000, -1000, -1000,
	911, -1000, -1000, 1448, -1000, 1737, -1000, -1000, -1000, 755,
	899, -1000, -1000, -1000, -154, 789, 1082, -1000, -27, -1000,
	-1000, -1000, -1000, -1000, 1438, -1000, 1510, -1000, -1000, 1739,
	472, 472, -1000, -1000, -1000, -1000, -1000, 328, -1000, -1000,
	-155, -156, -1000, -1000, -1000, 278, 848, -1000, 159, -1000,
	-160, -1000, -1000, -1000, -1000, -165, -1000,
}

var yyPgo = [...]int{
	0, 2066, 37, 66, 145, 11, 150, 70, 2065, 2063,
	2062, 2059, 160, 158, 153, 2058, 2057, 2056, 2055, 2054,
	2053, 2052, 2051, 2049, 2048, 156, 131, 141, 2047, 2045,
	2044, 87, 147, 55, 62, 149, 2043, 2041, 43, 2039,
	2036, 2034, 165, 163, 626, 2031, 161, 79, 2030, 2027,
	2026, 2025, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016,
	2015, 2014, 268, 2013, 2009, 3, 2008, 39, 2007, 2006,
	2005, 2004, 2003, 2002, 1999, 113, 1996, 1995, 1993, 154,
	1992, 1990, 76, 388, 83, 85, 1989, 1985, 73, 136,
	1984, 88, 124, 1981, 1980, 210, 71, 29, 1979, 72,
	64, 1978, 23, 1977, 1975, 93, 1970, 1969, 1968, 60,
	1967, 1965, 2574, 1964, 58, 99, 12, 52, 1959, 1957,
	127, 1956, 49, 41, 1955, 1953, 33, 1952, 1951, 162,
	1948, 105, 13, 1947, 15, 63, 21, 1943, 104, 1942,
	36, 44, 1941, 102, 1940, 1939, 20, 9, 47, 1938,
	25, 97, 125, 27, 75, 100, 1937, 1935, 30, 40,
	1928, 1925, 1924, 1923, 1922, 1921, 32, 1919, 24, 1916,
	146, 1915, 31, 17, 22, 56, 143, 34, 10, 1914,
	159, 1913, 16, 126, 92, 122, 1912, 1911, 1910, 139,
	172, 1909, 1908, 35, 132, 112, 116, 1906, 187, 1905,
	1904, 67, 1338, 1929, 18, 130, 1903, 1902, 2336, 82,
	98, 26, 1897, 86, 1896, 1895, 1893, 151, 142, 77,
	881, 74, 1892, 1889, 1886, 1885, 1884, 1878, 1877, 148,
	28, 65, 117, 42, 1872, 1870, 1863, 90, 68, 1861,
	120, 118, 94, 166, 1858, 133, 123, 80, 1855, 84,
	1854, 1852, 1845, 1844, 57, 1841, 1840, 1839, 1837, 128,
	114, 89, 50, 1836, 45, 91, 115, 119, 1834, 14,
	138, 6, 1830, 1, 0, 1829, 4, 134, 181, 137,
	1827, 1824, 2, 1807, 5, 1804, 1799, 101, 1796, 1793,
	1792, 8, 19, 7, 1786, 1784, 3191, 46, 95, 1781,
	152,
}

//line sql.y:5602
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 294, 295, 295, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 274, 274, 274, 277, 277,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 298, 298, 107,
	107, 105, 105, 106, 106, 175, 175, 15, 16, 16,
	185, 185, 184, 184, 184, 186, 186, 186, 186, 220,
	220, 17, 17, 17, 17, 17, 80, 80, 276, 276,
	275, 273, 273, 272, 272, 271, 29, 30, 39, 39,
	39, 39, 40, 41, 278, 278, 250, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 252,
	252, 239, 239, 251, 251, 251, 251, 251, 251, 251,
	238, 238, 94, 94, 156, 156, 156, 156, 156, 156,
	156, 156, 290, 290, 157, 157, 157, 157, 157, 157,
	291, 291, 291, 291, 222, 222, 222, 222, 225, 225,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 224,
	224, 224, 224, 224, 226, 226, 226, 226, 226, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 228, 228, 228, 228, 228, 228,
	228, 228, 237, 237, 229, 229, 232, 232, 233, 233,
	233, 234, 234, 234, 235, 235, 230, 230, 230, 230,
	231, 231, 231, 240, 264, 264, 263, 263, 261, 261,
	261, 261, 249, 249, 258, 258, 258, 258, 258, 248,
	248, 244, 244, 244, 245, 245, 246, 246, 243, 243,
	247, 247, 260, 260, 259, 241, 241, 242, 242, 266,
	292, 292, 292, 292, 293, 293, 267, 283, 284, 282,
	282, 282, 282, 282, 67, 67, 67, 197, 197, 197,
	256, 256, 255, 255, 255, 257, 257, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 192, 192, 192, 281, 281,
	281, 281, 281, 281, 280, 280, 280, 253, 253, 253,
	279, 279, 47, 47, 141, 141, 36, 36, 36, 36,
	36, 36, 35, 35, 35, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 37, 37, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 236,
	236, 236, 268, 268, 269, 269, 19, 28, 28, 20,
	20, 20, 20, 21, 21, 48, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 285, 285, 191, 191, 199, 199,
	190, 190, 213, 213, 213, 193, 193, 193, 194, 194,
	289, 289, 289, 50, 50, 52, 52, 53, 54, 54,
	215, 215, 216, 216, 55, 56, 68, 68, 68, 68,
	68, 68, 70, 70, 70, 9, 9, 9, 9, 64,
	64, 64, 8, 8, 51, 51, 58, 286, 286, 287,
	288, 288, 288, 288, 59, 61, 22, 22, 22, 22,
	22, 22, 87, 87, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 81, 81, 81, 76,
	76, 299, 62, 63, 63, 79, 79, 79, 73, 73,
	73, 78, 78, 78, 84, 84, 86, 86, 86, 86,
	86, 88, 88, 88, 88, 88, 88, 88, 83, 83,
	85, 85, 85, 85, 206, 206, 206, 205, 205, 96,
	96, 98, 97, 97, 99, 99, 100, 100, 100, 139,
	115, 115, 173, 173, 172, 172, 174, 174, 174, 174,
	176, 176, 101, 101, 101, 101, 102, 102, 103, 103,
	104, 104, 214, 214, 211, 211, 211, 210, 210, 108,
	108, 108, 110, 109, 109, 109, 109, 111, 111, 113,
	113, 112, 112, 114, 116, 116, 116, 116, 116, 117,
	117, 95, 95, 95, 95, 95, 95, 95, 95, 188,
	188, 119, 119, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 130, 130, 130, 130, 130, 130,
	120, 120, 120, 120, 120, 120, 120, 82, 82, 131,
	131, 131, 138, 132, 132, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	127, 127, 127, 127, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 300, 300, 129, 128,
	128, 128, 128, 128, 128, 128, 77, 77, 77, 77,
	77, 219, 219, 219, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 144, 144, 74,
	74, 142, 142, 143, 145, 145, 140, 140, 140, 122,
	122, 122, 122, 122, 122, 122, 122, 124, 124, 124,
	146, 146, 147, 147, 148, 148, 150, 149, 149, 151,
	152, 152, 152, 153, 153, 154, 154, 154, 38, 38,
	38, 38, 38, 33, 33, 33, 33, 34, 34, 34,
	89, 89, 89, 89, 91, 91, 90, 90, 65, 65,
	66, 66, 66, 92, 92, 93, 93, 93, 93, 170,
	170, 155, 155, 155, 162, 162, 162, 158, 158, 160,
	160, 160, 161, 161, 161, 159, 167, 167, 169, 169,
	168, 168, 164, 164, 165, 165, 166, 166, 166, 163,
	163, 121, 121, 121, 121, 121, 171, 171, 171, 171,
	177, 177, 134, 134, 136, 136, 135, 137, 178, 178,
	182, 179, 179, 183, 183, 183, 183, 183, 180, 180,
	181, 181, 207, 207, 207, 187, 187, 198, 198, 195,
	195, 196, 196, 189, 189, 200, 200, 200, 60, 133,
	133, 265, 265, 262, 203, 203, 204, 204, 208, 208,
	212, 212, 209, 209, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 296, 297, 217,
	218, 218, 218,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 3, 4, 2,
	3, 2, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 5, 4, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 4, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -294, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 164, -40, -30, 165, -41, 167, 166,
	202, 168, 195, 72, 241, 242, 244, 245, 246, 247,
	-70, 200, 201, 170, 34, 43, 31, 32, 35, 173,
	-4, -25, 6, -296, 9, 365, 197, 196, 26, -6,
	378, 83, -295, 505, -170, -155, 20, 31, 27, -154,
	-150, -79, -155, 18, 16, 5, -62, -299, -62, -62,
	10, 11, -62, -250, -252, 83, 137, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -270, -35, -32,
	169, 166, 210, 106, 107, 202, 203, 204, 168, 186,
	201, 205, 200, 219, -31, 78, 31, 378, 381, -257,
	165, 171, 172, 366, 109, 108, 73, 167, -254, 291,
	482, -46, 484, 98, 100, 483, 42, 176, 485, 486,
	487, 488, 185, 489, 490, 491, 492, 498, 499, 500,
	501, 110, 5, -62, -212, -208, -274, -202, 86, 87,
	88, 375, 188, 409, 410, 235, 78, 39, 291, 482,
	241, 255, 249, 276, 268, 376, 411, 238, 189, 223,
	479, 266, 115, 484, 412, 203, 296, 297, 298, 98,
	244, 333, 497, 240, 413, 495, 100, 483, 77, 49,
	42, 198, 264, 260, 485, 224, 414, 386, 217, 109,
	106, 504, 34, 258, 48, 28, 494, 108, 47, 486,
	128, 415, 487, 300, 281, 473, 46, 301, 204, 416,
	81, 380, 481, 302, 259, 303, 234, 493, 170, 417,
	465, 304, 305, 474, 418, 282, 286, 419, 325, 306,
	50, 420, 421, 475, 107, 422, 76, 488, 253, 254,
	423, 232, 187, 327, 280, 185, 33, 307, 377, 236,
	56, 211, 328, 44, 284, 43, 469, 424, 472, 279,
	275, 51, 425, 426, 427, 428, 489, 278, 252, 274,
	503, 229, 490, 60, 172, 288, 287, 289, 218, 324,
	271, 429, 430, 431, 192, 79, 432, 261, 19, 433,
	434, 308, 225, 435, 54, 436, 437, 331, 201, 438,
	52, 491, 37, 206, 492, 439, 440, 441, 442, 443,
	310, 444, 309, 283, 285, 213, 311, 379, 445, 257,
	205, 496, 446, 193, 480, 207, 210, 200, 332, 194,
	447, 448, 449, 450, 451, 239, 452, 453, 245, 498,
	41, 454, 455, 456, 457, 233, 228, 326, 335, 59,
	80, 293, 458, 478, 251, 226, 459, 242, 53, 499,
	500, 501, 220, 502, 7, 313, 110, 230, 231, 45,
	272, 212, 460, 461, 262, 263, 277, 250, 273, 243,
	466, 214, 314, 202, 462, 334, 227, 294, 383, 219,
	315, 477, 382, 270, 267, 221, 463, 316, 177, 215,
	216, 464, 467, 317, 318, 237, 319, 320, 321, 322,
	323, 222, 381, 248, 265, 295, 346, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 175, -62, 175, -112, -208, 175,
	-180, 297, -199, 299, 312, 307, 317, 305, -191, 308,
	310, 213, -289, 325, 175, 314, 164, 155, 300, 309,
	318, 319, 237, 320, 323, 222, -285, -274, 487, 502,
	115, 269, 304, 302, 326, 469, 322, 321, -208, 243,
	-215, 248, -203, -274, -202, 246, -112, -68, 465, 168,
	-217, -217, -81, 469, 471, -132, -95, -118, 121, -123,
	29, 24, -122, -119, -140, -137, -138, 155, 156, 158,
	157, 159, 91, 144, 145, 152, 122, 160, -127, -125,
	-126, -128, 90, 89, 99, 92, 93, 94, 95, 102,
	103, 104, -203, -208, -135, -2, 66, 67, 366, 367,
	368, 369, 374, 370, 124, 55, 342, 336, 345, 344,
	343, 340, 341, 338, 339, 372, 373, 101, 180, 337,
	174, 150, 365, -274, -202, -296, 42, 313, 313, -112,
	-62, -148, -79, -150, -4, -2, -296, 6, -62, -2,
	-3, -7, -25, -27, 405, -26, -208, -155, -170, 10,
	139, 40, 48, -153, -154, -6, -2, -95, 17, 21,
	22, -85, 146, -95, -208, -63, -85, -189, 179, -62,
	-62, -179, -220, 243, -183, 326, 325, -204, -181, -203,
	-201, -180, 324, 169, 384, 120, 23, 25, 123, 155,
	17, 124, 35, 171, 269, 186, 154, 182, 366, 164,
	70, 385, 338, 339, 336, 342, 368, 369, 337, 299,
	29, 11, 387, 26, 196, 22, 36, 148, 166, 127,
	199, 24, 197, 101, 104, 390, 20, 73, 191, 12,
	184, 38, 14, 391, 392, 15, 180, 179, 139, 176,
	68, 9, 160, 27, 136, 64, 393, 117, 394, 395,
	396, 397, 66, 137, 18, 340, 341, 31, 470, 398,
	374, 208, 150, 71, 57, 471, 121, 399, 400, 102,
	401, 105, 74, 476, 118, 16, 69, 40, 402, 209,
	403, 181, 404, 329, 405, 138, 167, 365, 67, 406,
	174, 312, 6, 371, 30, 195, 183, 112, 65, 407,
	175, 126, 372, 373, 178, 103, 5, 116, 32, 10,
	72, 75, 343, 344, 345, 55, 111, 378, 125, 13,
	408, 330, 119, 115, -251, 137, -238, -242, -203, 190,
	-267, 186, -112, -260, -259, -203, -80, -198, 176, 184,
	183, 116, -278, 118, 230, 337, 174, -42, -43, -180,
	154, 207, 84, 84, -242, -241, -240, -279, 209, 190,
	-266, -258, 182, 191, -248, 183, 184, -243, 176, 117,
	-279, -243, 181, 191, 209, 209, 110, 209, 110, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 206, -249,
	129, -249, 382, 382, -254, -279, -279, -279, 178, 33,
	33, -200, -243, 178, 23, -249, -249, -180, 154, -249,
	-249, -249, -249, 217, 217, -249, -249, -249, -249, -249,
	-249, -249, -249, -249, -249, -249, -249, -249, -249, -249,
	175, -278, -89, 323, 237, 78, -44, 219, -28, -112,
	-198, 176, 177, -278, -112, 161, -112, -193, 137, 13,
	-193, -190, 313, 311, 298, 303, -193, -193, -193, -193,
	220, 296, -244, 176, 33, 187, 313, 220, 296, 220,
	221, 220, 221, 306, 316, 220, -213, 12, 139, 337,
	301, 305, 213, 175, 214, 177, 315, -274, 472, 221,
	-213, 90, -194, 137, 313, 216, -193, -218, -296, -204,
	269, -218, -218, 30, 178, -203, -64, -203, 90, -9,
	-5, -13, -12, -14, 129, -87, 313, -75, 155, 487,
	473, 474, 475, 472, 310, 480, 478, 476, 220, 477,
	84, 120, 118, 119, 136, -95, -120, 139, 121, 137,
	138, 123, 141, 140, 151, 144, 145, 146, 147, 148,
	149, 150, 142, 143, 154, 129, 130, 131, 132, 133,
	134, 135, -188, -296, -138, 162, 163, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -296, 161, -296,
	-296, -296, -296, -296, -296, -296, -296, -144, -95, -296,
	-300, -296, -300, -129, -296, -300, -129, -300, -129, -300,
	-300, -129, -300, -129, -300, -300, -129, -296, -296, -296,
	-296, -296, -296, -296, -296, -2, -3, -132, -217, -286,
	-287, -115, -112, -296, 237, -153, -6, -2, -148, -154,
	-150, -2, -62, -73, -86, 61, 62, -88, 22, 36,
	65, 63, 21, -297, 85, -297, -170, -297, 84, -27,
	-173, 83, 59, 41, 90, 90, 84, 19, -149, -151,
	-95, 12, -206, -205, 23, -203, 90, 161, 97, 12,
	-113, 27, -112, -189, -189, 84, 243, -183, -220, -185,
	-184, 327, 329, 129, -207, -203, 90, 29, 85, 84,
	-112, -222, -225, -227, -226, -228, -223, -224, 266, 267,
	155, 270, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 30, 198, 262, 263, 264, 265, 282, 283,
	284, 285, 286, 287, 288, 289, 249, 268, 376, 250,
	251, 252, 253, 254, 255, 257, 258, 259, 260, 261,
	-277, -274, 83, 85, 84, -229, 83, -89, 175, -274,
	176, 176, 176, -62, 365, -249, -249, 206, -35, -32,
	-270, 16, -31, -32, 169, 106, 107, 166, 83, -238,
	83, -247, -277, -274, 83, 117, 181, 116, -246, -243,
	-246, -247, -274, -140, -203, -208, -274, 117, 117, -176,
	-203, -176, -176, 21, -176, 21, -176, 21, 92, -203,
	-176, 21, -176, 21, -176, 21, -176, 21, -176, 21,
	29, 76, 77, 29, 79, 80, 81, -140, -140, -238,
	-180, -112, -274, 92, 92, -249, -249, 92, 90, 90,
	90, -249, -249, 92, 90, -210, -208, 90, -280, 192,
	234, 236, 92, 92, 92, 92, 29, 90, -281, 29,
	494, 493, 495, 496, 497, 92, 29, 92, 29, 92,
	-203, 83, -112, -92, 224, 164, 166, 169, 74, 90,
	238, 129, 42, 84, 178, 175, -274, -195, 180, -195,
	-209, -208, -201, 90, -95, -245, 12, 139, -213, -213,
	-193, -112, -245, -213, -193, -112, -193, -193, -193, -193,
	-213, -213, -213, -193, -208, -208, -112, -112, -112, -112,
	-112, -112, -112, -218, -218, -218, -194, -193, 472, 90,
	74, -216, 246, 280, 466, 467, 468, 84, 378, -105,
	-112, 472, 472, 472, 472, 472, 472, -95, -95, -95,
	-95, -130, 102, 121, 103, 104, -123, -131, -135, -138,
	96, 139, 137, 138, 123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-219, -274, 90, 155, -274, -120, -122, -122, -203, -84,
	22, 36, -83, -85, -204, -209, -201, -83, -83, -95,
	-95, -140, 90, -83, -140, 90, -83, -83, -78, 22,
	36, -142, -143, 125, -140, -297, -123, -203, -203, -72,
	-71, 347, 348, 349, 350, 352, 353, 354, 357, 358,
	362, 363, 346, 364, 351, 356, 359, 360, 361, 355,
	265, -83, -84, -84, -83, -83, -170, -297, 84, -288,
	329, 330, 470, -211, 209, -210, 23, -133, -132, 90,
	-153, -153, 61, 62, 57, -83, -88, -297, -26, 23,
	-172, -203, 60, 90, -230, -180, -95, -95, 84, -152,
	25, 26, -112, -205, 146, -209, -112, -175, 209, -112,
	-97, -99, -100, -101, -115, -139, -296, 12, -105, -106,
	-114, -208, -183, -185, 84, 328, 330, 331, 74, 105,
	-95, -231, 154, -256, -255, -254, -238, -240, -241, -242,
	85, -156, -94, 38, -234, 294, 293, -229, -229, -229,
	-229, -229, -230, -230, -230, -230, 83, 83, -229, -229,
	-229, -229, -232, 83, -232, -232, -233, 83, -233, -267,
	-95, -264, -263, -261, -262, 185, 98, 378, 75, -259,
	-152, 92, -92, -196, 180, -265, -262, -274, -274, -274,
	-196, -274, 90, -274, 90, 84, 17, -239, -238, -47,
	234, -269, 209, -266, -260, -247, 117, -246, -247, -247,
	161, -274, 84, 27, 110, 110, 110, 110, 378, 166,
	30, -238, -47, -219, 178, -219, -219, 90, 90, -192,
	502, -105, -91, 226, 129, 215, 215, 175, 175, 228,
	-112, 239, 240, 238, 21, 227, 229, 231, 217, -112,
	-112, -195, 74, -107, -112, 24, -208, -112, -193, -193,
	-112, -193, -193, -112, -203, -75, 329, 84, 378, 20,
	-76, 20, 102, 103, 104, -131, -123, -123, -123, -82,
	199, 120, -297, -123, -297, -83, -83, 84, -296, 161,
	-297, -297, 84, 75, 23, 12, 12, -297, 12, 12,
	-297, -297, -83, -145, -143, 127, -95, -297, -297, 84,
	84, 12, -297, -297, -297, -297, -297, -287, 469, 330,
	-116, 72, 179, 73, -296, -210, -297, -124, -203, 92,
	95, -155, -96, -98, 12, -88, -138, 85, 84, -230,
	-159, -164, -190, -274, 90, 155, -151, 161, -117, 13,
	-121, 30, 55, -5, -296, -296, 30, 84, -108, -110,
	-109, -111, 64, 68, 70, 65, 66, 67, 71, -214,
	23, -97, -3, -2, -296, -112, -105, -298, 12, 75,
	-298, 84, 161, -184, -186, 332, 329, 335, -274, 90,
	84, -254, -242, -293, 102, 121, 29, 74, 291, 98,
	-291, -292, 181, 116, 117, 193, 23, 39, -235, 295,
	-230, -230, -231, -231, -231, -231, -237, 90, -237, 92,
	92, 85, -38, -33, -34, 31, 78, -261, -249, 90,
	37, -203, 85, -91, -112, 121, 74, -265, -265, -265,
	-208, 16, -172, 84, 85, -141, 235, 85, -203, 85,
	83, -247, -247, -204, -203, -296, 175, 29, 29, -47,
	-141, -231, -274, 504, 503, 85, 177, 233, -93, 342,
	90, 86, -112, -112, -112, -112, -112, 169, 166, 218,
	178, -105, -112, 84, -67, 194, 189, -213, -213, 31,
	-112, 329, 481, 479, -82, 120, -123, -123, -297, -297,
	-85, -84, -204, -221, 155, 266, 198, 264, 260, 280,
	271, 293, 262, 294, -219, -221, -123, -123, -123, -123,
	375, -148, 128, -95, 126, -123, -123, -95, 176, 176,
	176, -176, -187, 20, 12, 55, 55, -96, -117, -97,
	-88, -203, -162, 465, -167, 44, -165, -166, 45, -163,
	46, 54, 146, -153, -95, -177, 74, -178, -182, -140,
	-134, -136, -135, -296, -171, -297, -203, -176, -178, -99,
	-100, -100, -99, -100, 64, 64, 64, 69, 64, 69,
	64, -109, -208, -297, -297, -3, -175, 75, -97, -97,
	-114, -208, 146, 329, 333, 334, -254, 102, -123, 10,
	90, 117, 117, -112, 83, -231, -231, 85, 84, 85,
	84, 85, 84, -197, 415, 121, -34, -33, -249, -249,
	92, -274, 177, 24, -112, 74, 74, 74, 17, -238,
	-140, 55, -264, -172, -268, -269, -112, -122, -141, -112,
	-90, 224, 232, 83, 87, -276, 75, 215, 291, 215,
	-112, -67, -38, -112, -193, -193, 31, -274, -123, -297,
	-297, -229, -229, -229, -233, -229, 254, -229, 254, -297,
	-297, 20, 20, 20, 20, -296, -74, 371, -95, 84,
	84, -297, -296, -296, -296, -297, -112, -117, -146, 14,
	-159, 49, 272, -169, -168, 53, 45, -166, 17, 47,
	17, 28, -177, 84, 129, 84, -297, -297, 84, 55,
	161, -297, -117, -103, -102, 74, 75, -104, 74, -102,
	64, 64, -173, -297, -117, -97, -117, -117, 161, -126,
	83, -123, -230, 90, -230, 92, 92, 415, 29, 79,
	80, 81, 29, 76, 77, -112, -112, -112, -112, -172,
	211, 85, -297, 84, -236, 378, 381, -173, 85, -273,
	378, -275, -274, -203, -203, -203, -230, -274, -123, -123,
	-123, -123, -123, -153, 90, -123, -123, -174, -297, -203,
	181, -174, -174, -211, -146, -147, 15, 17, -160, 51,
	-158, 50, -158, -168, 17, 17, 90, 17, 90, 117,
	-182, -95, -136, 55, -5, -203, -134, -203, -148, -95,
	83, -95, -148, -117, -172, 85, -231, -231, 85, 85,
	-173, 212, -292, -269, 382, 382, 23, -272, -271, -204,
	83, 75, -297, -297, -297, -297, -77, 139, 378, -297,
	-297, -297, 84, -297, -297, -297, -116, -147, -95, -132,
	-161, 52, 74, 105, 90, 90, 90, 10, -134, 161,
	-153, -172, -153, 85, -157, 23, -296, -5, 84, 129,
	-172, -112, -297, 376, 71, 379, -203, 181, 74, 105,
	-178, -203, 85, -283, -284, 74, -293, -290, 102, 121,
	98, -291, 111, 112, -5, -123, 208, -65, 378, -271,
	-253, -204, 90, 92, 85, 60, 377, 380, -284, 74,
	11, 10, 102, 90, -65, -297, -297, -66, 223, 469,
	-276, 60, -282, 194, 189, 192, 30, -282, 186, -273,
	378, 188, 29, 102, 225, 379, 380,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 601, 601, 601, 0,
	601, 0, 0, 601, -2, -2, 601, 1030, 0, 601,
	0, 0, -2, 534, 535, 0, 537, -2, 0, 0,
	546, 1469, 1469, 596, 0, 0, 0, 0, 0, 601,
	894, 45, 601, 0, 80, 81, 552, 553, 554, 60,
	0, 1467, 1, 3, 66, 70, 0, 0, 0, 53,
	903, 0, 73, 0, 0, 605, 0, 603, 0, 1013,
	601, 601, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 408, 369, 411, 367, 397,
	-2, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 262, 262, 0, 0, -2,
	360, 360, 360, 0, 0, 0, 394, 1015, 315, 262,
	262, 0, 262, 262, 262, 262, 0, 0, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 920, 143, 1031, 1028, 1029, 35, 36,
	37, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 0, 1007, 0, 464, 691, 0,
	525, 525, 0, 525, 525, 525, 525, 0, 0, 0,
	476, 0, 0, 0, 0, 522, 0, 0, 495, 497,
	0, 522, 0, 528, 0, 509, 525, 1470, 1470, 1470,
	998, 0, 519, 517, 531, 532, 514, 515, 533, 536,
	0, 541, 544, 1024, 1025, 0, 559, 44, 1253, 551,
	564, 565, 0, 597, 598, 40, 743, 701, 0, 707,
	709, 0, 745, 746, 747, 748, 749, 0, 0, 0,
	0, 0, 770, 0, 0, 0, 0, 0, 776, 777,
	778, 779, 879, 880, 881, 882, 883, 884, 885, 886,
	711, 712, 876, 0, 987, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 867, 0, 836, 836, 836, 836,
	836, 836, 836, 836, 836, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 1469, 0, 574, 0,
	0, 903, 0, 895, 894, 58, 0, 601, -2, 0,
	0, 0, 0, 42, 0, 47, 652, 72, 71, 939,
	0, 0, 0, 54, 904, 62, 64, 905, 0, 606,
	607, 0, 630, 634, 0, 602, 0, 0, 1014, 1013,
	1013, 97, 0, 1412, 991, -2, -2, 0, 0, 1026,
	1027, 1000, -2, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, -2, 0, 0, 153, 154, 0, 38,
	288, 0, 149, 0, 282, 234, 920, 0, 0, 0,
	0, 0, 601, 0, 1008, 134, 135, 141, 142, 262,
	262, 0, 143, 143, 376, 377, 378, 0, 0, -2,
	286, 0, 361, 0, 0, 276, 276, 280, 278, 279,
	0, 0, 0, 0, 0, 0, 388, 0, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	263, 0, 406, 407, 316, 0, 0, 0, 0, 386,
	387, 0, 0, 1016, 1017, 0, 0, 262, 262, 0,
	0, 0, 0, 262, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 933, 0, 0, 0, -2, 0, 456, 0,
	0, 0, 1009, 1009, 463, 0, 465, 466, 0, 0,
	467, 0, 522, 522, 520, 521, 469, 470, 471, 472,
	525, 0, 0, 271, 272, 273, 522, 525, 0, 525,
	525, 525, 525, 522, 522, 522, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 1470, 1470, 528,
	525, 0, 505, 0, 506, 507, 510, 511, 1471, 1472,
	1045, 512, 513, 999, 542, 545, 562, 560, 561, 563,
	555, 556, 557, 558, 0, 576, 577, 582, 0, 0,
	0, 0, 588, 589, 590, 0, 0, 593, 594, 595,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 731, 732, 733, 734,
	735, 736, 708, 0, 723, 0, 0, 765, 766, 767,
	768, 769, 771, 772, 773, 774, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 0, 868, 0,
	797, 0, 798, 806, 0, 799, 807, 800, 808, 801,
	802, 809, 803, 810, 804, 805, 811, 0, 0, 0,
	0, 614, 614, 0, 0, 742, 0, 0, 41, 566,
	567, 0, 674, 1019, 0, 52, 61, 63, 903, 56,
	903, 0, 616, 0, 0, -2, -2, 617, 623, 624,
	625, 626, 627, 49, 1468, 50, 0, 69, 0, 43,
	0, 0, 0, 0, 246, 942, 0, 0, 896, 897,
	900, 0, 631, 635, 0, 637, 638, 0, 604, 0,
	95, 0, 690, 0, 0, 0, 1412, 997, 0, 99,
	100, 0, 0, 0, 250, 1002, 1003, 1004, -2, 269,
	0, -2, 241, 185, 186, 187, 234, 189, 234, 234,
	234, 234, 246, 246, 246, 246, 217, 218, 219, 220,
	221, 0, 0, 204, 234, 234, 234, 234, 224, 225,
	226, 227, 228, 229, 230, 231, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 236, 236, 236, 238, 238,
	0, 39, 0, 254, 0, 900, 0, 933, 1011, 1021,
	0, 0, 0, 1011, 117, 0, 0, 409, 370, 398,
	410, 0, 373, 374, -2, 0, 0, 360, 0, 362,
	0, 270, 0, -2, 0, 280, 0, 276, 280, 277,
	280, 268, 281, 390, 876, 0, 391, 392, 0, 428,
	660, 0, 0, 0, 0, 0, 434, 435, 436, 0,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	399, 400, 401, 402, 403, 404, 405, 0, 0, 362,
	0, 395, 0, 317, 318, 0, 0, 321, 322, 323,
	324, 0, 0, 327, 328, 329, 677, 678, 330, 354,
	355, 356, 331, 332, 333, 334, 335, 336, 337, 348,
	349, 350, 351, 352, 353, 338, 339, 340, 341, 342,
	345, 0, 127, 924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1009, 0, 0, 0, 0,
	692, 1032, 1033, 526, 527, 0, 274, 275, 525, 525,
	473, 496, 0, 525, 477, 498, 478, 480, 479, 481,
	500, 501, 525, 484, 523, 524, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 502, 503, 504, 529,
	0, 0, 543, 547, 548, 549, 550, 0, 0, 579,
	91, 584, 585, 586, 587, 599, 592, 744, 702, 703,
	704, 706, 724, 0, 726, 728, 713, 714, 739, 740,
	741, 0, 0, 0, 0, 737, 718, 0, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	764, 851, 852, 853, 0, 0, 762, 763, 775, 0,
	0, 0, 615, 628, 877, 0, -2, 0, 0, 0,
	0, 747, 879, 0, 747, 879, 0, 0, 0, 612,
	613, 874, 871, 0, 0, 837, 0, 0, 0, 0,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 0, 0, 0, 0, 0, 0, 986, 0, 569,
	570, 572, 0, 694, 0, 675, 0, 0, 1020, 575,
	55, 57, 621, 622, 0, 639, 618, 51, 46, 0,
	0, 654, 940, 246, 962, 0, 906, 907, 0, 899,
	901, 902, 74, 636, 632, 0, 699, 0, 0, 689,
	0, 642, 644, 645, 646, 672, 0, 0, 0, 0,
	93, 691, 992, 98, 0, 0, 103, 104, 993, 994,
	995, 996, 0, 136, -2, 312, 155, 157, 158, 159,
	150, 294, 0, 0, 244, 242, 243, 188, 246, 246,
	211, 212, 250, 250, 250, 250, 0, 0, 205, 206,
	207, 208, 199, 0, 200, 201, 202, 0, 203, 287,
	0, 908, 255, 256, 258, 262, 0, 0, 0, 283,
	284, 0, 924, 0, 0, 0, 1022, 1021, 1021, 1021,
	0, 145, 146, 147, 148, 143, 0, 0, 151, 364,
	363, 0, 0, 285, 0, 0, 280, 280, 265, 266,
	0, 393, 0, 0, 430, 431, 432, 433, 0, 0,
	0, 362, 364, 250, 0, 319, 320, 325, 326, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 424, 425, 426, 921, 922, 923, 0, 0,
	457, 0, 0, 304, 89, 1010, 462, 522, 483, 499,
	522, 475, 482, 508, 539, 583, 0, 0, 0, 0,
	591, 0, 725, 727, 729, 715, 737, 719, 0, 716,
	0, 0, 710, 722, 780, 0, 0, 0, 614, 0,
	784, 785, 0, 0, 0, 0, 0, 844, 0, 0,
	845, 0, 894, 0, 872, 0, 0, 796, 838, 0,
	0, 0, 839, 840, 841, 842, 843, 568, 571, 573,
	650, 0, 0, 0, 0, 676, 1018, 0, 887, 0,
	0, 639, 699, 640, 0, 619, 48, 653, 0, 944,
	943, 956, 969, 247, 248, 249, 898, 0, 903, 0,
	980, 0, 0, 972, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 682, 0, 0, 0, 0,
	673, 0, 0, 0, 0, -2, 0, 0, 87, 88,
	0, 0, 0, 101, 102, 0, 0, 108, 251, 252,
	143, 314, 156, 160, 165, 0, 0, 0, 169, 0,
	171, 295, 0, 181, 183, 0, 0, 163, 184, 245,
	250, 250, 213, 214, 215, 216, 0, 232, 0, 0,
	0, 307, 113, 912, 911, 262, 262, 257, 0, 260,
	0, 1023, 235, 0, 126, 0, 0, 0, 0, 0,
	132, 0, 368, 0, 379, 380, 0, 427, 0, 254,
	0, 264, 267, 877, 661, 0, 0, 381, 0, 364,
	384, 385, 396, 346, 347, 344, 0, 0, 934, 935,
	0, 938, 118, 416, 418, 417, 421, 0, 0, 414,
	0, 304, 908, 0, 461, 305, 306, 525, 525, 578,
	92, 0, 581, 0, 717, 0, 738, 720, 781, 782,
	629, 0, 878, 0, 234, 234, 857, 234, 238, 860,
	234, 862, 234, 865, 0, 0, 0, 0, 0, 0,
	0, 869, 795, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1005, 1006, 888, 889, 699, 890, 641,
	620, 655, 962, 0, 955, 0, -2, 964, 0, 0,
	0, 970, 633, 75, 700, 78, 0, 980, 988, 0,
	971, 982, 984, 0, 0, 0, 976, 0, 699, 643,
	668, 670, 0, 665, 680, 681, 683, 0, 685, 0,
	687, 688, 652, 648, 649, 0, 699, 0, 699, 699,
	94, 0, 693, 105, 106, 107, 313, 166, 167, 0,
	170, 180, 182, 0, 0, 209, 210, 246, 0, 246,
	0, 239, 0, 296, 308, 0, 909, 910, 0, 0,
	259, 261, 0, 1012, 128, 0, 0, 0, 0, 152,
	365, 0, 253, 0, 0, 452, 449, 382, 383, 652,
	925, 926, 927, 0, 937, 121, 0, 0, 0, 0,
	458, 459, 460, 90, 468, 474, 580, 600, 721, 783,
	786, 854, 246, 858, 859, 861, 863, 864, 866, 788,
	787, 0, 0, 0, 0, 0, 903, 0, 873, 0,
	0, 814, 0, 0, 0, 674, 59, 890, 892, 0,
	949, 947, 947, 957, 958, 0, 0, 965, 0, 0,
	0, 0, 79, 0, 0, 0, 985, 0, 0, 0,
	0, 96, 894, 662, 669, 0, 0, 663, 0, 664,
	684, 686, 647, -2, 894, 699, 85, 86, 0, 168,
	0, 0, 250, 233, 250, 0, 0, 309, 913, 914,
	915, 916, 917, 918, 919, 652, 129, 130, 131, 371,
	0, 0, 429, 0, 437, 0, 0, 0, 936, 415,
	0, 119, 120, 0, 0, 420, 855, 856, 0, 0,
	0, 0, 846, 0, 870, 0, 0, 0, 696, 656,
	657, 0, 0, 694, 892, 77, 0, 0, 952, 0,
	945, 948, 946, 959, 0, 0, 966, 0, 968, 0,
	989, 990, 983, 0, 975, 978, 974, 977, 903, 666,
	0, 671, 903, 84, 0, 174, 222, 223, 237, 240,
	0, 0, 289, 453, 450, 451, 0, 122, 123, 0,
	0, 0, 789, 791, 790, 792, 0, 0, 0, 794,
	812, 813, 0, 695, 697, 698, 651, 76, 893, 891,
	941, 0, 950, 951, 960, 961, 967, 0, 973, 0,
	82, 0, 83, 290, 294, 0, 0, 928, 0, 0,
	0, 422, 793, 0, 0, 0, 658, 659, 953, 954,
	981, 979, 667, 291, 292, 0, 161, 175, 176, 0,
	0, 179, 172, 173, 928, 0, 0, 412, 930, 124,
	125, 357, 358, 359, 118, 847, 0, 850, 293, 0,
	0, 0, 177, 178, 114, 454, 455, 0, 931, 932,
	121, 848, 297, 299, 300, 0, 0, 298, 0, 419,
	0, 301, 302, 303, 929, 0, 849,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 122, 3, 3, 3, 149, 141, 3,
	83, 85, 146, 144, 84, 145, 161, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 505,
	130, 129, 131, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 123, 124, 125,
	126, 127, 128, 132, 133, 134, 135, 136, 137, 138,
	139, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:449
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:454
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:455
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:459
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:492
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:498
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:502
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:506
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:511
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:515
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:521
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:527
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:533
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:537
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:546
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:552
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:556
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:562
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:568
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:572
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:576
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:599
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:605
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:616
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:623
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:636
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:741
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:753
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:765
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:769
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:781
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:785
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:803
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:807
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:813
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:817
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:823
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:827
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:836
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:858
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:862
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:868
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:872
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:876
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:882
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:886
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:890
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:894
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:900
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:904
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:943
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:947
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:952
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:962
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:967
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:972
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:978
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:995
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1002
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1009
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1014
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1019
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1024
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1031
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1038
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1049
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1059
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1065
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1069
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1097
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1103
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1107
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1114
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1118
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1124
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1134
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1139
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1148
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1167
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1173
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1194
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1198
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1204
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1210
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1215
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1220
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1225
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1230
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1237
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1241
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1246
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1255
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1261
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1272
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1279
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1283
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1287
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1291
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1522
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1531
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1549
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1557
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1561
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1565
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1611
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1620
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1626
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1630
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1636
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1640
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1645
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1649
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1665
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1669
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1673
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1677
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1681
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = "key"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = ""
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1749
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1759
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1765
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1769
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1775
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1779
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1785
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1791
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1795
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1799
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1803
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1812
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1818
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1824
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1830
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1836
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1840
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1844
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1848
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1852
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1874
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1878
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1887
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1893
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1907
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1917
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1921
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1925
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1937
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1945
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1949
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1953
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1961
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1965
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1969
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1985
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1989
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1993
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1997
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2001
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2005
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2009
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2013
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2017
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2021
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2025
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2089
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2098
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2102
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2106
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2114
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2120
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2134
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2138
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2142
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2146
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2150
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2154
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2158
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2162
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2166
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2170
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2174
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2178
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2182
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2186
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2190
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2194
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2198
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2202
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2206
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2210
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2214
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2218
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2224
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2234
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2238
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2242
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2246
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2250
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2254
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2258
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2262
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2266
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2272
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2278
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2285
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2292
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2298
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2302
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2309
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2316
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2338
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2342
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2346
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2359
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2369
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2373
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2384
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2391
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2398
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2405
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2413
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2417
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2421
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2425
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2429
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2433
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2437
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2441
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2445
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2449
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2453
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2457
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2461
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2465
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2469
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2473
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2477
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2481
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2485
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2489
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2493
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2497
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2506
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2510
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2517
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2527
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2531
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2537
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2543
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2547
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2557
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2566
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2570
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2576
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2580
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2585
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2595
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2599
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2607
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2615
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2619
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2627
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2631
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2675
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2683
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = "extended "
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2818
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2822
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2856
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2860
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2870
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.empty = struct{}{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.empty = struct{}{}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.empty = struct{}{}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2894
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2916
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2920
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.empty = struct{}{}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.empty = struct{}{}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.empty = struct{}{}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.empty = struct{}{}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2937
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2943
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2948
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2952
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2956
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2960
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2964
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2968
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = yyDollar[1].str
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2996
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3023
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3029
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3045
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3055
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3061
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3065
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3069
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3073
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			setAllowComments(yylex, true)
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.strs = nil
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = SQLCacheStr
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3261
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3266
		{
			yyVAL.strs = nil
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3282
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = SQLCacheStr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = DistinctStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = DistinctStr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = StraightJoinHint
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3318
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3328
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3332
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3336
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3340
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3345
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3365
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3369
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3375
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3381
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3395
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3399
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3403
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3409
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3415
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3419
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3428
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3434
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3444
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3448
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3462
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3479
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3483
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3487
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3491
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3499
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.empty = struct{}{}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.empty = struct{}{}
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3519
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3523
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3540
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3544
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3548
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3554
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3560
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3564
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3568
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3572
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3578
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3582
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3592
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3612
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3621
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3625
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3629
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3633
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3648
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3652
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3656
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3660
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3664
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3668
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3676
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3692
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3696
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3702
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3706
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3710
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3714
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3718
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &ComparisonExpr{Left: &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}, Operator: yyDollar[3].comparisonExprOperatorUnion(), Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3748
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3752
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3756
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3760
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3764
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3768
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3774
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3778
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3782
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3786
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3790
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3794
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3798
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3807
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3817
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3821
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3828
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3834
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3844
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3852
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3856
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3860
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3864
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3868
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3884
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3888
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3892
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3896
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3900
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3904
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3908
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3912
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3916
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3920
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3924
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3928
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3932
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3936
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3940
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3944
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3948
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3952
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3956
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3960
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3964
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3982
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3986
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3990
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3994
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4004
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4008
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4012
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4032
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4040
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4048
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4052
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4056
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4066
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4070
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4074
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4079
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4084
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4089
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4095
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4100
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4113
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4118
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4123
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4128
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4136
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4140
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4148
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4152
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4156
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4160
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4164
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4168
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4172
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4176
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4180
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4184
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4188
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4194
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4198
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4202
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4206
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4210
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4214
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4218
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4222
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4226
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4246
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4276
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4280
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4284
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4288
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4292
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4312
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4316
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4320
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4324
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4328
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4332
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4338
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4342
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4346
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4350
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4354
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4358
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4362
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4371
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = string("")
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4386
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4390
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4396
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4405
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4411
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4415
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4419
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4425
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4483
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4492
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4501
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4507
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4513
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4517
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4523
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4528
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4532
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4536
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4545
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4551
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4555
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4559
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4568
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4572
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4576
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4580
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4587
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4591
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4595
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4599
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4605
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4609
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4613
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = yyDollar[3].str
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4658
		{
			yyVAL.str = yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = "cascaded"
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = yyDollar[3].str
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4704
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4708
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4714
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4718
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4722
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = ""
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4744
		{
			yyVAL.str = " header"
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4749
		{
			yyVAL.str = ""
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = " manifest on"
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.str = " manifest off"
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = ""
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = " overwrite on"
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = " overwrite off"
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4776
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = yyDollar[1].str
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = ""
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = yyDollar[1].str
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = ""
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = " optionally"
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4860
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4864
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4868
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4872
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4876
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4882
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4886
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4894
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4903
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4909
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4919
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4923
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4929
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4945
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4955
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4961
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4971
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4975
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4979
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4983
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4987
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4995
		{
			yyVAL.str = "charset"
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5022
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5034
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5042
		{
			yyVAL.empty = struct{}{}
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.empty = struct{}{}
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.empty = struct{}{}
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5050
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5059
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5066
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5070
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5097
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5103
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5572
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5581
		{
			decNesting(yylex)
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5586
		{
			skipToEnd(yylex)
		}
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5591
		{
			skipToEnd(yylex)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			skipToEnd(yylex)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
