// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const UNDERSCORE_UTF8MB3 = 57540
const INTERVAL = 57541
const JSON_EXTRACT_OP = 57542
const JSON_UNQUOTE_EXTRACT_OP = 57543
const CREATE = 57544
const ALTER = 57545
const DROP = 57546
const RENAME = 57547
const ANALYZE = 57548
const ADD = 57549
const FLUSH = 57550
const CHANGE = 57551
const MODIFY = 57552
const DEALLOCATE = 57553
const REVERT = 57554
const SCHEMA = 57555
const TABLE = 57556
const INDEX = 57557
const VIEW = 57558
const TO = 57559
const IGNORE = 57560
const IF = 57561
const PRIMARY = 57562
const COLUMN = 57563
const SPATIAL = 57564
const FULLTEXT = 57565
const KEY_BLOCK_SIZE = 57566
const CHECK = 57567
const INDEXES = 57568
const ACTION = 57569
const CASCADE = 57570
const CONSTRAINT = 57571
const FOREIGN = 57572
const NO = 57573
const REFERENCES = 57574
const RESTRICT = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const COALESCE = 57584
const EXCHANGE = 57585
const REBUILD = 57586
const PARTITIONING = 57587
const REMOVE = 57588
const PREPARE = 57589
const EXECUTE = 57590
const MAXVALUE = 57591
const PARTITION = 57592
const REORGANIZE = 57593
const LESS = 57594
const THAN = 57595
const PROCEDURE = 57596
const TRIGGER = 57597
const VINDEX = 57598
const VINDEXES = 57599
const DIRECTORY = 57600
const NAME = 57601
const UPGRADE = 57602
const STATUS = 57603
const VARIABLES = 57604
const WARNINGS = 57605
const CASCADED = 57606
const DEFINER = 57607
const OPTION = 57608
const SQL = 57609
const UNDEFINED = 57610
const SEQUENCE = 57611
const MERGE = 57612
const TEMPORARY = 57613
const TEMPTABLE = 57614
const INVOKER = 57615
const SECURITY = 57616
const FIRST = 57617
const AFTER = 57618
const LAST = 57619
const VITESS_MIGRATION = 57620
const CANCEL = 57621
const RETRY = 57622
const COMPLETE = 57623
const CLEANUP = 57624
const THROTTLE = 57625
const UNTHROTTLE = 57626
const EXPIRE = 57627
const RATIO = 57628
const BEGIN = 57629
const START = 57630
const TRANSACTION = 57631
const COMMIT = 57632
const ROLLBACK = 57633
const SAVEPOINT = 57634
const RELEASE = 57635
const WORK = 57636
const BIT = 57637
const TINYINT = 57638
const SMALLINT = 57639
const MEDIUMINT = 57640
const INT = 57641
const INTEGER = 57642
const BIGINT = 57643
const INTNUM = 57644
const REAL = 57645
const DOUBLE = 57646
const FLOAT_TYPE = 57647
const DECIMAL_TYPE = 57648
const NUMERIC = 57649
const TIME = 57650
const TIMESTAMP = 57651
const DATETIME = 57652
const YEAR = 57653
const CHAR = 57654
const VARCHAR = 57655
const BOOL = 57656
const CHARACTER = 57657
const VARBINARY = 57658
const NCHAR = 57659
const TEXT = 57660
const TINYTEXT = 57661
const MEDIUMTEXT = 57662
const LONGTEXT = 57663
const BLOB = 57664
const TINYBLOB = 57665
const MEDIUMBLOB = 57666
const LONGBLOB = 57667
const JSON = 57668
const JSON_SCHEMA_VALID = 57669
const JSON_SCHEMA_VALIDATION_REPORT = 57670
const ENUM = 57671
const GEOMETRY = 57672
const POINT = 57673
const LINESTRING = 57674
const POLYGON = 57675
const GEOMETRYCOLLECTION = 57676
const MULTIPOINT = 57677
const MULTILINESTRING = 57678
const MULTIPOLYGON = 57679
const ASCII = 57680
const UNICODE = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const CODE = 57688
const COLLATION = 57689
const COLUMNS = 57690
const DATABASES = 57691
const ENGINES = 57692
const EVENT = 57693
const EXTENDED = 57694
const FIELDS = 57695
const FULL = 57696
const FUNCTION = 57697
const GTID_EXECUTED = 57698
const KEYSPACES = 57699
const OPEN = 57700
const PLUGINS = 57701
const PRIVILEGES = 57702
const PROCESSLIST = 57703
const SCHEMAS = 57704
const TABLES = 57705
const TRIGGERS = 57706
const USER = 57707
const VGTID_EXECUTED = 57708
const VITESS_KEYSPACES = 57709
const VITESS_METADATA = 57710
const VITESS_MIGRATIONS = 57711
const VITESS_REPLICATION_STATUS = 57712
const VITESS_SHARDS = 57713
const VITESS_TABLETS = 57714
const VITESS_TARGET = 57715
const VSCHEMA = 57716
const VITESS_THROTTLED_APPS = 57717
const NAMES = 57718
const GLOBAL = 57719
const SESSION = 57720
const ISOLATION = 57721
const LEVEL = 57722
const READ = 57723
const WRITE = 57724
const ONLY = 57725
const REPEATABLE = 57726
const COMMITTED = 57727
const UNCOMMITTED = 57728
const SERIALIZABLE = 57729
const CURRENT_TIMESTAMP = 57730
const DATABASE = 57731
const CURRENT_DATE = 57732
const NOW = 57733
const CURRENT_TIME = 57734
const LOCALTIME = 57735
const LOCALTIMESTAMP = 57736
const CURRENT_USER = 57737
const UTC_DATE = 57738
const UTC_TIME = 57739
const UTC_TIMESTAMP = 57740
const DAY = 57741
const DAY_HOUR = 57742
const DAY_MICROSECOND = 57743
const DAY_MINUTE = 57744
const DAY_SECOND = 57745
const HOUR = 57746
const HOUR_MICROSECOND = 57747
const HOUR_MINUTE = 57748
const HOUR_SECOND = 57749
const MICROSECOND = 57750
const MINUTE = 57751
const MINUTE_MICROSECOND = 57752
const MINUTE_SECOND = 57753
const MONTH = 57754
const QUARTER = 57755
const SECOND = 57756
const SECOND_MICROSECOND = 57757
const YEAR_MONTH = 57758
const WEEK = 57759
const REPLACE = 57760
const CONVERT = 57761
const CAST = 57762
const SUBSTR = 57763
const SUBSTRING = 57764
const GROUP_CONCAT = 57765
const SEPARATOR = 57766
const TIMESTAMPADD = 57767
const TIMESTAMPDIFF = 57768
const WEIGHT_STRING = 57769
const LTRIM = 57770
const RTRIM = 57771
const TRIM = 57772
const JSON_ARRAY = 57773
const JSON_OBJECT = 57774
const JSON_QUOTE = 57775
const JSON_DEPTH = 57776
const JSON_TYPE = 57777
const JSON_LENGTH = 57778
const JSON_VALID = 57779
const JSON_ARRAY_APPEND = 57780
const JSON_ARRAY_INSERT = 57781
const JSON_INSERT = 57782
const JSON_MERGE = 57783
const JSON_MERGE_PATCH = 57784
const JSON_MERGE_PRESERVE = 57785
const JSON_REMOVE = 57786
const JSON_REPLACE = 57787
const JSON_SET = 57788
const JSON_UNQUOTE = 57789
const MATCH = 57790
const AGAINST = 57791
const BOOLEAN = 57792
const LANGUAGE = 57793
const WITH = 57794
const QUERY = 57795
const EXPANSION = 57796
const WITHOUT = 57797
const VALIDATION = 57798
const UNUSED = 57799
const ARRAY = 57800
const CUME_DIST = 57801
const DESCRIPTION = 57802
const DENSE_RANK = 57803
const EMPTY = 57804
const EXCEPT = 57805
const FIRST_VALUE = 57806
const GROUPING = 57807
const GROUPS = 57808
const JSON_TABLE = 57809
const LAG = 57810
const LAST_VALUE = 57811
const LATERAL = 57812
const LEAD = 57813
const NTH_VALUE = 57814
const NTILE = 57815
const OF = 57816
const OVER = 57817
const PERCENT_RANK = 57818
const RANK = 57819
const RECURSIVE = 57820
const ROW_NUMBER = 57821
const SYSTEM = 57822
const WINDOW = 57823
const ACTIVE = 57824
const ADMIN = 57825
const AUTOEXTEND_SIZE = 57826
const BUCKETS = 57827
const CLONE = 57828
const COLUMN_FORMAT = 57829
const COMPONENT = 57830
const DEFINITION = 57831
const ENFORCED = 57832
const ENGINE_ATTRIBUTE = 57833
const EXCLUDE = 57834
const FOLLOWING = 57835
const GEOMCOLLECTION = 57836
const GET_MASTER_PUBLIC_KEY = 57837
const HISTOGRAM = 57838
const HISTORY = 57839
const INACTIVE = 57840
const INVISIBLE = 57841
const LOCKED = 57842
const MASTER_COMPRESSION_ALGORITHMS = 57843
const MASTER_PUBLIC_KEY_PATH = 57844
const MASTER_TLS_CIPHERSUITES = 57845
const MASTER_ZSTD_COMPRESSION_LEVEL = 57846
const NESTED = 57847
const NETWORK_NAMESPACE = 57848
const NOWAIT = 57849
const NULLS = 57850
const OJ = 57851
const OLD = 57852
const OPTIONAL = 57853
const ORDINALITY = 57854
const ORGANIZATION = 57855
const OTHERS = 57856
const PARTIAL = 57857
const PATH = 57858
const PERSIST = 57859
const PERSIST_ONLY = 57860
const PRECEDING = 57861
const PRIVILEGE_CHECKS_USER = 57862
const PROCESS = 57863
const RANDOM = 57864
const REFERENCE = 57865
const REQUIRE_ROW_FORMAT = 57866
const RESOURCE = 57867
const RESPECT = 57868
const RESTART = 57869
const RETAIN = 57870
const REUSE = 57871
const ROLE = 57872
const SECONDARY = 57873
const SECONDARY_ENGINE = 57874
const SECONDARY_ENGINE_ATTRIBUTE = 57875
const SECONDARY_LOAD = 57876
const SECONDARY_UNLOAD = 57877
const SIMPLE = 57878
const SKIP = 57879
const SRID = 57880
const THREAD_PRIORITY = 57881
const TIES = 57882
const UNBOUNDED = 57883
const VCPU = 57884
const VISIBLE = 57885
const RETURNING = 57886
const FORMAT = 57887
const TREE = 57888
const VITESS = 57889
const TRADITIONAL = 57890
const LOCAL = 57891
const LOW_PRIORITY = 57892
const NO_WRITE_TO_BINLOG = 57893
const LOGS = 57894
const ERROR = 57895
const GENERAL = 57896
const HOSTS = 57897
const OPTIMIZER_COSTS = 57898
const USER_RESOURCES = 57899
const SLOW = 57900
const CHANNEL = 57901
const RELAY = 57902
const EXPORT = 57903
const AVG_ROW_LENGTH = 57904
const CONNECTION = 57905
const CHECKSUM = 57906
const DELAY_KEY_WRITE = 57907
const ENCRYPTION = 57908
const ENGINE = 57909
const INSERT_METHOD = 57910
const MAX_ROWS = 57911
const MIN_ROWS = 57912
const PACK_KEYS = 57913
const PASSWORD = 57914
const FIXED = 57915
const DYNAMIC = 57916
const COMPRESSED = 57917
const REDUNDANT = 57918
const COMPACT = 57919
const ROW_FORMAT = 57920
const STATS_AUTO_RECALC = 57921
const STATS_PERSISTENT = 57922
const STATS_SAMPLE_PAGES = 57923
const STORAGE = 57924
const MEMORY = 57925
const DISK = 57926
const PARTITIONS = 57927
const LINEAR = 57928
const RANGE = 57929
const LIST = 57930
const SUBPARTITION = 57931
const SUBPARTITIONS = 57932
const HASH = 57933

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	609, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	332, 153,
	-2, 492,
	-1, 55,
	35, 728,
	232, 728,
	243, 728,
	278, 742,
	279, 742,
	-2, 730,
	-1, 60,
	234, 755,
	-2, 753,
	-1, 114,
	231, 1280,
	-2, 119,
	-1, 116,
	1, 146,
	609, 146,
	-2, 153,
	-1, 127,
	132, 378,
	237, 378,
	-2, 481,
	-1, 146,
	131, 153,
	171, 153,
	332, 153,
	-2, 501,
	-1, 693,
	216, 1301,
	-2, 1297,
	-1, 694,
	216, 1302,
	-2, 1298,
	-1, 769,
	59, 823,
	-2, 838,
	-1, 806,
	147, 1707,
	-2, 112,
	-1, 807,
	147, 1549,
	-2, 113,
	-1, 813,
	147, 1632,
	-2, 1274,
	-1, 961,
	147, 1477,
	-2, 1271,
	-1, 1002,
	242, 41,
	247, 41,
	-2, 389,
	-1, 1085,
	1, 543,
	609, 543,
	-2, 153,
	-1, 1322,
	59, 824,
	-2, 843,
	-1, 1323,
	59, 825,
	-2, 844,
	-1, 1376,
	131, 153,
	171, 153,
	332, 153,
	-2, 428,
	-1, 1455,
	132, 378,
	237, 378,
	-2, 481,
	-1, 1464,
	242, 42,
	247, 42,
	-2, 390,
	-1, 1771,
	216, 1306,
	-2, 1300,
	-1, 1854,
	131, 153,
	171, 153,
	332, 153,
	-2, 429,
	-1, 1861,
	25, 174,
	-2, 176,
	-1, 2108,
	86, 39,
	-2, 880,
	-1, 2160,
	77, 94,
	86, 94,
	-2, 900,
	-1, 2227,
	584, 655,
	-2, 629,
	-1, 2364,
	49, 1242,
	-2, 1236,
	-1, 2584,
	86, 39,
	-2, 881,
	-1, 2622,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 872,
	-1, 2902,
	584, 655,
	-2, 643,
	-1, 2960,
	22, 1634,
	32, 1634,
	172, 1634,
	254, 1634,
	312, 1634,
	313, 1634,
	314, 1634,
	315, 1634,
	316, 1634,
	317, 1634,
	318, 1634,
	320, 1634,
	321, 1634,
	322, 1634,
	323, 1634,
	324, 1634,
	325, 1634,
	326, 1634,
	327, 1634,
	328, 1634,
	329, 1634,
	330, 1634,
	331, 1634,
	333, 1634,
	335, 1634,
	336, 1634,
	337, 1634,
	338, 1634,
	339, 1634,
	340, 1634,
	341, 1634,
	342, 1634,
	343, 1634,
	346, 1634,
	347, 1634,
	348, 1634,
	349, 1634,
	350, 1634,
	351, 1634,
	352, 1634,
	353, 1634,
	354, 1634,
	467, 1634,
	-2, 587,
}

const yyPrivate = 57344

const yyLast = 43789

var yyAct = [...]int{
	693, 2724, 2725, 2323, 2723, 2883, 3022, 2990, 2958, 2991,
	3014, 2698, 1379, 2511, 2942, 1785, 2417, 1851, 2424, 1148,
	2062, 1805, 2465, 2474, 784, 2835, 702, 2685, 2479, 2476,
	695, 2475, 2473, 2478, 2477, 2375, 1787, 2738, 2378, 686,
	37, 2858, 762, 2096, 2494, 2432, 2493, 1301, 1337, 3,
	611, 186, 1921, 2379, 186, 2593, 576, 186, 2376, 2321,
	684, 685, 591, 96, 186, 2743, 2285, 696, 2322, 1824,
	2373, 687, 186, 2587, 637, 2496, 2154, 2613, 2123, 2131,
	2365, 2579, 1884, 2268, 609, 2192, 2224, 186, 607, 2193,
	1809, 2516, 1909, 1889, 1952, 2194, 155, 1840, 964, 2143,
	36, 811, 1828, 785, 2115, 1741, 38, 1324, 2098, 591,
	1765, 1829, 591, 186, 591, 603, 1629, 766, 608, 770,
	141, 2260, 1908, 1930, 1480, 1671, 1816, 1681, 808, 1891,
	1462, 1966, 2186, 992, 1368, 91, 997, 787, 2162, 1346,
	764, 95, 1831, 620, 1304, 1233, 1578, 1693, 1648, 1768,
	1169, 968, 971, 615, 972, 1126, 1574, 1000, 1469, 998,
	1906, 1558, 999, 1880, 1003, 1367, 1737, 1365, 1351, 776,
	1140, 1583, 1810, 98, 1010, 1097, 1428, 159, 119, 117,
	771, 118, 1454, 1081, 124, 125, 772, 798, 76, 774,
	97, 598, 1240, 85, 2892, 1236, 2217, 1778, 89, 3015,
	1146, 1923, 1924, 1925, 1923, 2686, 2462, 2244, 2243, 1964,
	2215, 1543, 580, 773, 77, 8, 7, 2678, 6, 2276,
	2277, 1034, 2484, 2642, 2916, 120, 778, 1740, 547, 2728,
	792, 126, 797, 1636, 90, 2481, 1433, 2915, 1635, 1170,
	188, 189, 190, 1039, 1634, 1782, 1783, 2728, 965, 1633,
	1632, 2484, 990, 1631, 1614, 1623, 2979, 599, 1170, 601,
	1900, 602, 2094, 87, 2361, 2567, 765, 763, 102, 2125,
	3031, 2989, 976, 981, 2994, 3005, 805, 2238, 1954, 2482,
	1641, 812, 2831, 2830, 1894, 1331, 1013, 2691, 1038, 779,
	2692, 786, 1037, 989, 120, 988, 987, 3030, 986, 2952,
	3018, 2488, 2911, 1014, 2008, 1040, 1042, 1043, 2482, 104,
	105, 3003, 108, 2727, 2699, 114, 2910, 2943, 183, 1949,
	2951, 542, 2284, 2963, 188, 189, 190, 2549, 2916, 1048,
	2488, 2727, 1054, 1443, 1369, 78, 1370, 182, 80, 2095,
	78, 758, 759, 760, 761, 1180, 2413, 769, 2252, 2414,
	2415, 2275, 2251, 985, 1084, 1090, 1091, 78, 1846, 1847,
	78, 121, 120, 2171, 1180, 1036, 2170, 580, 2006, 2172,
	2420, 2005, 1116, 1845, 164, 800, 801, 1143, 1051, 1052,
	1053, 2134, 1056, 1057, 1058, 1059, 756, 1093, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 755, 2135, 2218, 577, 2756,
	2485, 983, 87, 581, 1784, 2421, 2176, 87, 1121, 1122,
	1104, 2884, 2183, 1104, 1893, 1105, 1117, 2968, 1105, 1110,
	2513, 161, 580, 162, 87, 2995, 1103, 87, 1102, 2485,
	2423, 2966, 1864, 1863, 1176, 980, 2590, 1168, 982, 580,
	2972, 2973, 2311, 181, 2418, 563, 2996, 1080, 2434, 2435,
	2540, 2538, 1622, 1176, 1202, 2967, 580, 561, 593, 589,
	587, 2434, 2435, 1564, 2517, 1624, 1625, 1626, 2419, 2261,
	1533, 1308, 2225, 1142, 2247, 2840, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1211, 1210, 1212, 1213, 1978, 1975, 1977,
	1976, 1979, 1980, 1931, 985, 1079, 1055, 558, 1967, 2506,
	2425, 1118, 1972, 1123, 1111, 2514, 572, 2507, 1984, 1559,
	1985, 3017, 1986, 1124, 1534, 1133, 1535, 1135, 1137, 984,
	1125, 568, 1119, 1120, 1086, 2263, 2680, 2679, 1987, 1061,
	1060, 2980, 186, 985, 186, 977, 2515, 186, 1971, 1969,
	1023, 1021, 979, 978, 2815, 993, 2676, 87, 1934, 994,
	1825, 1447, 165, 2433, 994, 1132, 1134, 1973, 581, 1083,
	1032, 171, 1031, 1030, 1029, 2436, 2433, 591, 1150, 591,
	591, 1028, 1027, 1026, 1114, 1311, 1025, 1020, 2436, 2006,
	1970, 1033, 2436, 2267, 591, 591, 3001, 3032, 969, 969,
	548, 983, 550, 564, 1006, 583, 1214, 582, 554, 2312,
	552, 556, 565, 557, 1214, 551, 1005, 562, 1575, 1907,
	553, 566, 567, 570, 573, 574, 575, 571, 569, 1468,
	560, 584, 799, 581, 2264, 37, 1175, 1172, 1173, 1174,
	1179, 1181, 1178, 969, 1177, 1162, 1953, 967, 1958, 1005,
	581, 1171, 1897, 1041, 1571, 1175, 1172, 1173, 1174, 1179,
	1181, 1178, 1130, 1177, 991, 1082, 1131, 581, 2675, 2891,
	1171, 2216, 2249, 1811, 1812, 3026, 1136, 1565, 2099, 2101,
	984, 1566, 1567, 1050, 1156, 1044, 2455, 2219, 156, 1012,
	2280, 1898, 2246, 1441, 1024, 1022, 1440, 2422, 2020, 1896,
	1129, 1217, 1218, 1219, 1220, 1439, 2235, 1572, 1437, 546,
	2909, 1225, 541, 1228, 2259, 2880, 2286, 2258, 1951, 984,
	2629, 1151, 2609, 1138, 1100, 2167, 1106, 1107, 1108, 1109,
	2591, 1215, 1216, 1899, 1467, 2130, 2086, 1777, 2897, 1355,
	1280, 1095, 1852, 1895, 1299, 1012, 116, 1214, 2270, 1144,
	1145, 2007, 2270, 2269, 1213, 2412, 186, 2269, 1127, 1584,
	591, 591, 81, 781, 2486, 2487, 1221, 111, 2726, 1141,
	1545, 1544, 1546, 1547, 1548, 2905, 186, 2490, 1035, 1152,
	1153, 1113, 2640, 2641, 2671, 2603, 2726, 1312, 1011, 1968,
	2304, 1012, 1115, 2486, 2487, 591, 86, 2841, 2288, 186,
	1099, 86, 585, 1314, 591, 1300, 2490, 1318, 1315, 77,
	591, 1165, 1163, 766, 1164, 1089, 1092, 1568, 86, 1101,
	578, 86, 1371, 808, 1166, 1012, 1694, 1563, 2034, 764,
	1317, 157, 1238, 1242, 1239, 579, 1012, 112, 169, 2100,
	1694, 2208, 2971, 2426, 1011, 1185, 1653, 2430, 1184, 1185,
	1005, 1008, 1009, 2752, 969, 2429, 1294, 2647, 1002, 1006,
	1654, 1655, 1652, 2646, 2298, 2297, 2296, 2290, 1300, 2294,
	1316, 2289, 1938, 2287, 95, 1477, 1476, 1948, 2292, 1001,
	177, 1286, 1287, 1288, 1289, 1290, 2970, 2291, 3024, 2431,
	1011, 3025, 1049, 3023, 2427, 1012, 1466, 1946, 1305, 2428,
	1943, 1128, 1585, 1023, 2293, 2295, 98, 1950, 2997, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	1643, 1645, 1646, 1943, 1011, 176, 178, 179, 180, 1015,
	1005, 1085, 1021, 3033, 1017, 1011, 2630, 1947, 1018, 1016,
	1098, 1005, 1008, 1009, 1644, 969, 1302, 87, 2921, 1002,
	1006, 2873, 1356, 2012, 2013, 2014, 763, 1313, 3028, 1019,
	1945, 1651, 765, 2823, 186, 1336, 1331, 2822, 1429, 1333,
	1560, 1186, 1561, 1698, 2813, 1562, 812, 1699, 1438, 1206,
	1207, 1208, 1209, 1211, 1210, 1212, 1213, 1553, 1361, 1362,
	2922, 1366, 1186, 2874, 1011, 707, 708, 709, 2716, 1015,
	1005, 591, 2715, 1464, 1017, 2705, 2654, 2706, 1018, 1016,
	2653, 1473, 2643, 2043, 2463, 1475, 1551, 3034, 1478, 1479,
	591, 591, 2451, 591, 2190, 591, 591, 2189, 591, 591,
	591, 591, 591, 591, 188, 189, 190, 1319, 2637, 188,
	189, 190, 1509, 2174, 591, 1202, 1903, 2279, 186, 1514,
	1552, 1554, 694, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1211, 1210, 1212, 1213, 1540, 186, 1538, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1211, 1210, 1212, 1213, 591, 1550,
	186, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212,
	1213, 1573, 1537, 1186, 591, 1536, 186, 1526, 1520, 1460,
	803, 1528, 1183, 187, 1184, 1185, 187, 1517, 1516, 187,
	1515, 2306, 186, 1489, 592, 2998, 187, 1453, 2900, 186,
	1186, 2899, 2877, 1183, 187, 1184, 1185, 1539, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 591, 2876, 187,
	1186, 1472, 1511, 2875, 1340, 1482, 2818, 1483, 2803, 1485,
	1487, 591, 591, 1491, 1493, 1495, 1497, 1499, 2546, 1436,
	2802, 592, 2751, 2749, 592, 187, 592, 1474, 1471, 186,
	1208, 1209, 1211, 1210, 1212, 1213, 2999, 2712, 1450, 1463,
	1451, 1449, 1186, 1470, 1470, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1188, 1341, 1508, 2651, 1510, 1580, 2636, 188,
	189, 190, 2851, 1331, 2518, 1817, 1818, 2454, 1202, 2453,
	2019, 1444, 1445, 1446, 1186, 591, 2199, 1512, 2187, 1675,
	1679, 1296, 1962, 1331, 1183, 1961, 1184, 1185, 1684, 591,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212,
	1213, 1808, 1678, 1678, 591, 591, 1676, 1676, 1790, 1576,
	1442, 1183, 1615, 1184, 1185, 1581, 1549, 1541, 1586, 1587,
	1531, 1527, 1523, 120, 988, 987, 1522, 986, 1521, 1649,
	2510, 1183, 1591, 1184, 1185, 1342, 1518, 1519, 1647, 1598,
	1599, 1600, 1524, 1525, 1590, 1657, 1588, 188, 189, 190,
	1139, 1919, 1186, 1592, 92, 1594, 1595, 1596, 1597, 1331,
	1769, 94, 1601, 1738, 1155, 93, 2848, 186, 1612, 2121,
	3016, 2847, 591, 1183, 1613, 1184, 1185, 1186, 1656, 94,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 2985, 1331, 2807, 186, 1611, 2602, 591,
	1795, 1650, 1796, 2121, 2949, 1183, 2806, 1184, 1185, 186,
	2697, 1619, 1620, 591, 2226, 1738, 2121, 2929, 186, 1331,
	186, 2204, 186, 186, 591, 2025, 1186, 591, 2132, 188,
	189, 190, 1680, 1917, 2024, 1769, 2051, 1331, 591, 1686,
	1687, 2374, 1771, 808, 2121, 2925, 808, 1202, 2986, 1695,
	1198, 2602, 1199, 1773, 1774, 1186, 1860, 1861, 1400, 2544,
	1331, 2917, 1331, 95, 2132, 2030, 1200, 1201, 1197, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212, 1213,
	2604, 1186, 95, 1183, 1182, 1184, 1185, 1770, 2121, 2893,
	100, 1772, 1801, 591, 1775, 1776, 1186, 2904, 1827, 2140,
	1910, 1911, 1912, 101, 2121, 1914, 1916, 1918, 1183, 1331,
	1184, 1185, 1186, 1344, 100, 2407, 99, 1771, 2140, 1186,
	591, 2689, 2890, 1202, 2006, 94, 591, 1473, 1944, 778,
	1473, 1800, 1473, 1855, 1789, 2602, 1856, 2029, 1942, 1838,
	1186, 1870, 1871, 1872, 1873, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1211, 1210, 1212, 1213, 101, 1183, 2021, 1184,
	1185, 92, 1822, 2071, 1331, 1803, 1932, 100, 2563, 99,
	1886, 591, 93, 591, 1859, 2563, 1331, 2442, 1343, 591,
	591, 1820, 2976, 1331, 1892, 1943, 1183, 2349, 1184, 1185,
	1843, 1842, 2826, 1331, 2063, 1844, 812, 1858, 1388, 812,
	1857, 2139, 2888, 2021, 188, 189, 190, 2163, 1915, 2121,
	2814, 2056, 1183, 2040, 1184, 1185, 2039, 186, 1929, 1943,
	1902, 1723, 2932, 1331, 186, 87, 1331, 1183, 1926, 1184,
	1185, 186, 186, 2689, 1331, 186, 1331, 186, 2121, 2687,
	1887, 1943, 1331, 1183, 186, 1184, 1185, 1901, 1882, 1883,
	1183, 186, 1184, 1185, 187, 2140, 187, 1937, 1905, 187,
	1940, 1815, 1941, 1913, 2607, 1331, 1182, 1331, 1335, 1955,
	2164, 1183, 1780, 1184, 1185, 1887, 1013, 186, 1936, 2166,
	1401, 1865, 591, 1866, 1867, 1868, 1869, 1939, 1935, 592,
	1627, 592, 592, 1014, 1570, 1956, 2056, 1331, 1957, 1876,
	1877, 1878, 1879, 1470, 1959, 1960, 592, 592, 1363, 1715,
	1704, 1705, 1706, 1707, 1717, 1708, 1709, 1710, 1722, 1718,
	1711, 1712, 1719, 1720, 1721, 1713, 1714, 1716, 2444, 2443,
	2440, 2441, 1186, 1965, 2440, 2439, 1186, 768, 1414, 1417,
	1418, 1419, 1420, 1421, 1422, 2117, 1423, 1424, 1425, 1426,
	1427, 1402, 1403, 1404, 1405, 1386, 1387, 1415, 1186, 1389,
	94, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1186, 996, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 2140, 1331, 995, 1649, 2021, 1331, 1186, 2837, 1990,
	2006, 2245, 1186, 1432, 2229, 2222, 2223, 1186, 1338, 2017,
	677, 2121, 2120, 2804, 1186, 1432, 1431, 2763, 2023, 1377,
	1376, 2670, 1186, 3011, 87, 2811, 2512, 2021, 2667, 2672,
	1186, 2649, 1997, 1998, 1186, 2555, 2554, 2000, 1434, 1885,
	2508, 2468, 2016, 2464, 2018, 2230, 2001, 1186, 2004, 2838,
	2624, 186, 1881, 1875, 1874, 2163, 1556, 1186, 1465, 186,
	1461, 2466, 2565, 1430, 591, 2105, 1650, 2092, 1186, 113,
	591, 2015, 590, 1183, 2196, 1184, 1185, 1183, 187, 1184,
	1185, 591, 592, 592, 2561, 2109, 1084, 3009, 1678, 2552,
	2195, 1900, 1676, 2614, 2615, 2103, 2551, 1793, 187, 1183,
	1186, 1184, 1185, 1416, 186, 2191, 2620, 2655, 186, 2031,
	2033, 1183, 2080, 1184, 1185, 1330, 2079, 592, 2164, 810,
	2992, 187, 966, 2173, 973, 1186, 592, 2006, 1183, 2078,
	1184, 1185, 592, 1183, 37, 1184, 1185, 2196, 1183, 2077,
	1184, 1185, 2914, 2156, 2136, 1183, 2049, 1184, 1185, 1771,
	2076, 1617, 1339, 1183, 1186, 1184, 1185, 2656, 2657, 2658,
	2856, 1183, 2617, 1184, 1185, 1183, 2460, 1184, 1185, 2122,
	2459, 591, 2619, 2458, 2374, 2659, 2209, 186, 1183, 2118,
	1184, 1185, 2075, 1991, 186, 1186, 2083, 2084, 1183, 2393,
	1184, 1185, 2392, 1305, 1770, 2093, 2982, 1186, 591, 1183,
	2950, 1184, 1185, 1807, 2155, 591, 2114, 2074, 1799, 1473,
	1473, 2396, 2608, 1618, 591, 2354, 2397, 1501, 2119, 2221,
	1504, 2177, 2660, 2661, 2161, 2129, 2353, 2184, 2185, 2242,
	2394, 1183, 2872, 1184, 1185, 2395, 2073, 2366, 2368, 2595,
	186, 186, 186, 186, 186, 2241, 2369, 2594, 2165, 2168,
	1186, 2742, 2733, 1892, 2732, 2744, 1183, 2175, 1184, 1185,
	2598, 186, 186, 2178, 1502, 1503, 782, 2072, 1329, 1325,
	1505, 1506, 1507, 2398, 783, 2149, 2150, 186, 2188, 2066,
	2363, 1569, 754, 1326, 2438, 1183, 187, 1184, 1185, 2181,
	2197, 2145, 2148, 2149, 2150, 2146, 591, 2147, 2151, 2200,
	1690, 2205, 2731, 2210, 2211, 2212, 1046, 2206, 1797, 1798,
	1328, 2526, 1327, 2240, 1691, 1045, 1183, 1453, 1184, 1185,
	2195, 2273, 92, 592, 92, 1154, 2237, 2236, 1183, 94,
	1184, 1185, 2065, 93, 121, 93, 2600, 1817, 1818, 2231,
	2232, 94, 592, 592, 2303, 592, 3020, 592, 592, 2239,
	592, 592, 592, 592, 592, 592, 2456, 591, 1678, 1994,
	1678, 2299, 1676, 1678, 1676, 764, 592, 1676, 1678, 2889,
	187, 2833, 1676, 591, 2262, 2282, 2343, 2265, 2281, 2437,
	2153, 1183, 1804, 1184, 1185, 2198, 2352, 187, 186, 1983,
	2201, 2202, 591, 2326, 2351, 2336, 2337, 2338, 2339, 1982,
	592, 591, 187, 790, 791, 2329, 1981, 2580, 591, 591,
	2330, 186, 186, 186, 186, 186, 592, 2010, 187, 2283,
	2343, 2300, 2271, 186, 99, 2272, 2371, 2863, 186, 101,
	2862, 186, 2317, 186, 187, 2750, 186, 186, 186, 2748,
	100, 187, 99, 2747, 2740, 2386, 2406, 770, 2668, 1186,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 592,
	2599, 2597, 2469, 1927, 2357, 2356, 2342, 1318, 2156, 1448,
	101, 2452, 789, 592, 592, 1186, 2344, 2380, 100, 2739,
	186, 100, 1186, 99, 2588, 2324, 2117, 2324, 2132, 2355,
	2324, 187, 94, 591, 1186, 2324, 2358, 2348, 2313, 1186,
	101, 591, 2041, 3013, 3012, 3012, 186, 103, 771, 2408,
	1791, 100, 2409, 2387, 772, 1357, 2390, 186, 1348, 1186,
	3013, 2399, 2492, 2388, 2389, 2878, 2391, 88, 2403, 2404,
	95, 2064, 1186, 2385, 2410, 186, 2635, 592, 186, 1580,
	1, 106, 107, 2416, 2345, 2346, 2347, 780, 2527, 2639,
	2965, 592, 559, 1781, 2448, 1303, 2446, 2061, 2377, 2447,
	2993, 2961, 2962, 2377, 2060, 1542, 592, 592, 2500, 2499,
	2331, 2332, 2333, 2334, 2335, 1532, 2059, 2700, 1739, 2834,
	1183, 2057, 1184, 1185, 2472, 1933, 2666, 810, 1890, 810,
	810, 2470, 1892, 2491, 1004, 146, 2503, 1853, 1854, 2945,
	110, 2053, 962, 109, 1157, 1159, 1183, 1007, 1184, 1185,
	2560, 1112, 1928, 1183, 2052, 1184, 1185, 2690, 2182, 2521,
	591, 186, 2522, 1862, 2519, 1183, 1383, 1184, 1185, 187,
	1183, 1381, 1184, 1185, 592, 2530, 1382, 1380, 2529, 1385,
	1384, 2042, 2566, 2536, 1621, 588, 2152, 184, 1372, 2471,
	1183, 1349, 1184, 1185, 1047, 549, 2445, 1963, 187, 555,
	1226, 592, 1616, 1183, 2350, 1184, 1185, 2169, 809, 802,
	1792, 187, 2107, 2382, 2592, 592, 2362, 2364, 186, 2124,
	187, 2367, 187, 2360, 187, 187, 592, 2449, 2450, 592,
	2871, 2741, 2930, 1329, 1325, 2179, 2638, 1345, 2581, 2582,
	592, 2032, 1692, 1832, 1642, 2586, 613, 186, 1326, 2589,
	612, 610, 2110, 1297, 2133, 2596, 2601, 2524, 2525, 2621,
	1189, 697, 2097, 1358, 2144, 2142, 186, 2141, 1992, 186,
	186, 186, 1839, 1322, 1323, 1328, 2611, 1327, 2618, 591,
	591, 2616, 2612, 2957, 1834, 1830, 2625, 2116, 621, 614,
	606, 2500, 2499, 2632, 2626, 592, 2498, 2248, 2627, 2628,
	2673, 2674, 2509, 2250, 2180, 2633, 2634, 2505, 1167, 1321,
	1309, 1310, 600, 975, 1689, 2839, 2895, 2009, 2548, 1320,
	1702, 1703, 592, 591, 591, 591, 591, 2902, 592, 2480,
	2684, 2461, 2227, 2533, 2534, 1920, 2535, 63, 41, 2537,
	2650, 2539, 2652, 2541, 1730, 1353, 2145, 2148, 2149, 2150,
	2146, 595, 2147, 2151, 810, 2978, 2614, 2615, 1158, 796,
	1373, 32, 31, 2696, 30, 29, 28, 23, 22, 21,
	20, 19, 25, 592, 18, 592, 17, 16, 2483, 2694,
	2695, 592, 592, 2711, 2988, 3019, 115, 50, 47, 45,
	123, 122, 48, 44, 186, 1087, 42, 27, 1678, 26,
	1678, 15, 1676, 14, 1676, 13, 12, 11, 10, 2736,
	9, 5, 4, 35, 34, 33, 1161, 24, 591, 187,
	591, 2, 2214, 1922, 0, 0, 187, 1332, 1334, 0,
	0, 2719, 0, 187, 187, 2708, 0, 187, 2765, 187,
	0, 0, 2720, 0, 2729, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 37, 2759, 2746, 0,
	2707, 1678, 2644, 2645, 2761, 1676, 2757, 2745, 2755, 0,
	2737, 2753, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 591, 0, 0, 592, 764, 2380, 0, 0, 0,
	2380, 0, 0, 0, 186, 0, 2769, 591, 0, 0,
	0, 0, 2812, 0, 0, 0, 0, 0, 0, 0,
	591, 0, 0, 0, 2677, 2766, 2767, 0, 2681, 2682,
	2683, 2808, 0, 0, 2809, 2324, 0, 2324, 0, 2836,
	2824, 2810, 0, 0, 0, 2853, 2854, 0, 0, 0,
	0, 591, 2857, 2828, 2829, 591, 591, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 2816, 0,
	0, 0, 0, 0, 1297, 1678, 2377, 0, 0, 1676,
	1481, 1481, 0, 1481, 591, 1481, 1481, 0, 1490, 1481,
	1481, 1481, 1481, 1481, 0, 2867, 2864, 2865, 0, 0,
	2866, 1297, 0, 1297, 966, 2882, 2881, 0, 2869, 0,
	0, 0, 0, 0, 0, 2879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 0, 0, 0, 2885,
	0, 0, 0, 0, 0, 0, 0, 0, 1555, 0,
	186, 0, 0, 0, 0, 0, 2887, 0, 2380, 0,
	764, 0, 0, 187, 1577, 0, 0, 0, 591, 186,
	0, 187, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 0, 592, 0, 2901, 0, 2898, 0, 0, 2906,
	0, 0, 0, 592, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 37, 0, 0, 0, 810, 0, 0,
	0, 591, 0, 2903, 0, 0, 187, 2894, 0, 0,
	187, 810, 810, 0, 0, 0, 0, 0, 0, 0,
	2819, 2820, 2821, 0, 0, 591, 591, 0, 0, 0,
	2928, 0, 0, 0, 2923, 2933, 0, 0, 591, 0,
	0, 0, 0, 0, 2836, 2946, 2936, 186, 591, 37,
	2944, 2941, 2938, 2953, 2937, 2935, 2940, 2939, 0, 2931,
	0, 0, 2956, 0, 0, 0, 2974, 2964, 0, 2969,
	0, 0, 0, 592, 0, 1672, 0, 0, 0, 187,
	0, 0, 0, 2981, 0, 0, 187, 0, 0, 1685,
	0, 0, 2987, 0, 0, 0, 1297, 591, 0, 0,
	592, 0, 0, 0, 1700, 1701, 591, 592, 0, 0,
	0, 0, 3007, 3002, 3004, 0, 592, 0, 3000, 3010,
	3008, 0, 0, 0, 0, 3006, 0, 0, 0, 0,
	0, 0, 0, 3021, 0, 1678, 0, 0, 0, 1676,
	3027, 810, 187, 187, 187, 187, 187, 3029, 0, 0,
	0, 0, 2377, 0, 0, 3035, 0, 3037, 3038, 2854,
	3036, 0, 0, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 1678, 187,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 1806,
	0, 0, 0, 1696, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 1353, 0, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 0, 0, 1332, 1779, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 973, 592, 0, 0, 0, 0, 1802,
	0, 0, 0, 592, 0, 0, 0, 0, 0, 0,
	592, 592, 0, 187, 187, 187, 187, 187, 0, 0,
	966, 0, 0, 0, 0, 187, 973, 0, 0, 0,
	187, 0, 0, 187, 0, 187, 0, 0, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 966, 0, 1672, 0, 0, 182, 0, 0, 1672,
	1672, 0, 187, 0, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	121, 1904, 143, 592, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 182, 0, 1306, 153, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	161, 0, 162, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 2003, 0, 0, 0, 0, 0, 1456, 1457,
	152, 151, 181, 0, 0, 0, 0, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 0, 0,
	0, 0, 592, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 970, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	1458, 154, 0, 1455, 0, 148, 149, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 187,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 810, 0,
	0, 592, 592, 0, 0, 0, 2022, 0, 0, 0,
	2026, 0, 2027, 2028, 1806, 0, 0, 0, 0, 0,
	2111, 2036, 0, 0, 2037, 2038, 165, 0, 0, 0,
	0, 2126, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 592, 592, 592, 0,
	0, 2044, 2045, 2046, 2047, 2048, 0, 2050, 0, 0,
	0, 0, 0, 2054, 0, 2055, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 2067, 2068, 2069,
	2070, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	2081, 2082, 0, 0, 0, 0, 0, 0, 2087, 2088,
	2089, 2090, 2091, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 187, 0, 0, 0,
	0, 2203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 0, 592, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 156, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 2233, 150, 0, 0, 0, 0,
	0, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 2771, 2773, 2772, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 643, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 145, 0, 592, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 592,
	0, 0, 0, 185, 0, 0, 545, 0, 0, 586,
	157, 0, 592, 0, 0, 0, 545, 169, 0, 0,
	0, 0, 0, 0, 545, 0, 1672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 592, 0, 0, 0, 592, 592, 0,
	0, 0, 0, 0, 0, 795, 0, 795, 0, 177,
	0, 0, 1297, 0, 1297, 545, 0, 1297, 0, 0,
	0, 0, 1297, 0, 0, 157, 592, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 810, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 1481, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 2359, 0, 177, 1088, 0, 1094, 0, 0,
	1096, 810, 187, 0, 0, 1297, 0, 0, 2384, 1481,
	1297, 0, 0, 0, 0, 0, 0, 0, 2310, 0,
	592, 187, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 2325, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2340,
	2341, 0, 0, 592, 0, 0, 0, 0, 0, 0,
	0, 2777, 2778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 592, 0,
	0, 0, 0, 966, 0, 0, 1297, 0, 0, 0,
	592, 1806, 0, 0, 0, 0, 0, 0, 0, 187,
	592, 0, 0, 2383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2401, 2402, 688, 0, 638, 692, 640, 689, 690, 0,
	636, 639, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 641,
	642, 2770, 2774, 2775, 2776, 2779, 2780, 2781, 2789, 2791,
	666, 2790, 2792, 2793, 2794, 2797, 2798, 2799, 2800, 2795,
	2796, 2801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1360, 0, 2528, 0, 0, 0, 0, 0,
	0, 2532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2542, 2543, 2545, 2547, 0,
	0, 0, 0, 0, 0, 2553, 0, 0, 0, 0,
	2557, 2558, 2559, 0, 0, 0, 0, 2562, 0, 0,
	0, 0, 0, 2564, 0, 0, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 0, 0, 2578, 0,
	0, 0, 0, 0, 2583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1806, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2605, 2606, 0,
	0, 2610, 0, 0, 545, 0, 545, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2622,
	2623, 0, 0, 2701, 2702, 2703, 2704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2688,
	0, 0, 0, 1297, 0, 0, 0, 0, 2758, 0,
	2760, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 0, 1423,
	1424, 1425, 1426, 1427, 1402, 1403, 1404, 1405, 1386, 1387,
	1415, 1513, 1389, 182, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 0, 0, 1399, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 0, 1298, 0, 121, 0, 143,
	0, 0, 2717, 1557, 0, 0, 2718, 0, 0, 0,
	164, 1806, 2722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2827, 0, 0,
	0, 0, 0, 0, 0, 1589, 0, 0, 704, 79,
	810, 153, 1593, 0, 0, 0, 142, 0, 545, 0,
	0, 0, 0, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	0, 0, 0, 0, 0, 0, 0, 161, 777, 162,
	0, 2860, 0, 0, 0, 2860, 2860, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 152, 151, 181,
	0, 545, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2825, 0, 0, 0, 0, 0, 767, 0, 0, 2832,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 2842, 2843, 2844, 0, 2845,
	2846, 0, 0, 0, 0, 2849, 0, 2850, 0, 2852,
	2855, 0, 0, 0, 0, 0, 2859, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 147, 128, 154, 135,
	127, 0, 148, 149, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 136, 0,
	0, 0, 0, 0, 2886, 0, 0, 0, 0, 1297,
	0, 2924, 139, 137, 132, 133, 134, 138, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 810, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 2954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2959, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 1826, 0, 2908, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2913,
	0, 0, 0, 0, 2918, 0, 1298, 0, 0, 0,
	2919, 2920, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 156, 0, 2959, 0, 0, 2926,
	0, 0, 0, 1298, 0, 1298, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	2977, 0, 0, 0, 0, 0, 0, 0, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 2983,
	0, 0, 150, 2984, 545, 0, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	1602, 1603, 545, 545, 545, 545, 545, 545, 545, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 604, 0, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 1988, 1989, 0, 788, 1993, 0,
	0, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 1999, 795, 177, 0, 0, 0,
	0, 0, 795, 795, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 795, 1579, 795, 795, 795, 795, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 795, 1147, 0, 1147, 1147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 1579, 0,
	545, 0, 545, 0, 545, 1841, 0, 0, 0, 0,
	0, 767, 1222, 1223, 1224, 0, 1227, 0, 1229, 1230,
	1231, 1232, 0, 1235, 1237, 1237, 0, 1237, 1241, 1241,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 0, 1281, 1282,
	1283, 1284, 1285, 0, 0, 0, 0, 1241, 1241, 1241,
	1241, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 2160, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 767, 78, 39, 40,
	80, 0, 767, 153, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	2207, 43, 69, 70, 0, 67, 71, 0, 0, 161,
	0, 162, 0, 0, 68, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 545, 1456, 1457, 152,
	151, 181, 0, 545, 545, 0, 0, 545, 0, 1995,
	0, 0, 0, 56, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 545, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 2253, 2254, 2255, 2256, 2257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 1630, 2266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 1458,
	154, 0, 1455, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 49,
	52, 51, 54, 0, 66, 0, 0, 75, 72, 0,
	0, 1234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 83, 82, 0, 0, 64, 65, 53, 0, 795,
	795, 0, 0, 73, 74, 0, 0, 0, 0, 0,
	1579, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 604, 57, 58, 0, 59, 60, 61, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	545, 0, 0, 2457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2504, 0, 0, 0, 150, 1147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 2520, 1147,
	1147, 2523, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 2213, 144, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 545, 545, 545, 545, 545, 0, 86, 0,
	0, 0, 0, 0, 2585, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 545, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 795, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 1298, 0, 0, 1298,
	2648, 0, 0, 0, 1298, 0, 0, 0, 0, 0,
	0, 0, 1435, 0, 0, 0, 0, 0, 795, 2662,
	0, 0, 2663, 2664, 2665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 0, 0,
	0, 0, 1298, 545, 545, 545, 545, 545, 0, 0,
	0, 0, 0, 0, 0, 2400, 0, 0, 0, 0,
	545, 0, 0, 1529, 0, 545, 0, 0, 545, 2411,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1582, 0, 0,
	0, 0, 545, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1637, 1638, 1639, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 1683, 0, 0, 0, 0, 0, 0, 1688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 1724, 1725, 1726, 1727, 1728, 1729,
	1731, 1735, 1736, 604, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 1814, 0, 0, 0, 0, 0, 545, 0,
	0, 545, 545, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 2907, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 87,
	0, 0, 0, 0, 0, 698, 705, 706, 707, 708,
	709, 699, 701, 0, 0, 2102, 700, 0, 1888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	710, 711, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 1298, 0, 0, 0,
	0, 0, 0, 2137, 2138, 0, 0, 0, 0, 0,
	0, 0, 2157, 0, 2158, 2159, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 2501, 2502, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 87,
	0, 0, 0, 0, 0, 698, 705, 706, 707, 708,
	709, 699, 701, 0, 0, 0, 700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	710, 711, 0, 0, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 2234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2501, 2502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 688,
	0, 545, 692, 0, 689, 690, 0, 2106, 0, 691,
	705, 706, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 2381, 0, 79, 0, 0, 1833,
	1833, 1833, 1833, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2157, 767, 0, 705,
	706, 1833, 0, 0, 1833, 1677, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 1529,
	0, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 0, 0, 0, 2489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2497, 0, 0, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 0, 2531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2301, 2302, 0,
	0, 0, 2305, 0, 0, 0, 0, 2307, 2308, 2309,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 2314,
	2315, 2316, 0, 0, 1742, 2318, 0, 2319, 2320, 2631,
	0, 0, 2327, 2328, 0, 0, 0, 0, 0, 0,
	1742, 1742, 1742, 1742, 1742, 604, 604, 604, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2467, 0, 2730, 0,
	2734, 2735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2381, 0, 79, 0, 2381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2550, 0, 0, 0, 0, 0,
	0, 2556, 0, 0, 0, 2817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2896, 0, 0, 0, 0, 0,
	0, 0, 2669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2927, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2709, 0, 2710, 0, 0, 0, 0, 2713,
	2714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2762, 0, 0, 2764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2868, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 0, 0, 944, 929, 462,
	2975, 875, 947, 844, 863, 957, 866, 869, 911, 823,
	889, 378, 860, 815, 848, 818, 855, 819, 846, 877,
	250, 843, 931, 893, 946, 333, 247, 825, 849, 392,
	865, 197, 913, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 953, 337, 899,
	0, 446, 363, 0, 0, 0, 879, 935, 887, 925,
	874, 912, 833, 898, 948, 861, 908, 949, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 2947, 0, 2948, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 857, 905, 943, 858, 907, 245,
	293, 252, 244, 466, 954, 934, 822, 886, 942, 0,
	0, 214, 945, 881, 0, 910, 0, 960, 817, 901,
	0, 820, 824, 956, 938, 852, 255, 0, 0, 0,
	0, 0, 0, 0, 878, 888, 922, 872, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 897, 0, 0,
	0, 829, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 832,
	0, 851, 923, 0, 814, 276, 826, 364, 237, 0,
	927, 937, 873, 502, 941, 871, 870, 917, 830, 933,
	864, 332, 828, 301, 192, 210, 0, 862, 374, 417,
	423, 932, 847, 856, 235, 854, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 896, 915, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 1149, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 842, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 928,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 920, 959,
	387, 422, 225, 487, 445, 837, 841, 835, 902, 836,
	891, 892, 838, 950, 951, 952, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 924, 831, 0, 839, 840,
	0, 930, 939, 940, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 895, 191, 207, 335, 955,
	410, 268, 518, 496, 492, 816, 834, 242, 845, 853,
	0, 859, 867, 868, 880, 882, 883, 884, 885, 903,
	904, 906, 914, 916, 919, 921, 926, 936, 958, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 894, 900, 346,
	261, 281, 292, 909, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 890, 918, 342, 463, 464, 288, 360,
	0, 0, 944, 929, 462, 0, 875, 947, 844, 863,
	957, 866, 869, 911, 823, 889, 378, 860, 815, 848,
	818, 855, 819, 846, 877, 250, 843, 931, 893, 946,
	333, 247, 825, 849, 392, 865, 197, 913, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 953, 337, 899, 0, 446, 363, 0, 0,
	0, 879, 935, 887, 925, 874, 912, 833, 898, 948,
	861, 908, 949, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 857,
	905, 943, 858, 907, 245, 293, 252, 244, 466, 954,
	934, 822, 886, 942, 0, 0, 214, 945, 881, 0,
	910, 0, 960, 817, 901, 0, 820, 824, 956, 938,
	852, 255, 0, 0, 0, 0, 0, 0, 0, 878,
	888, 922, 872, 0, 0, 0, 0, 0, 2412, 0,
	850, 0, 897, 0, 0, 0, 829, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 832, 0, 851, 923, 0, 814,
	276, 826, 364, 237, 0, 927, 937, 873, 502, 941,
	871, 870, 917, 830, 933, 864, 332, 828, 301, 192,
	210, 0, 862, 374, 417, 423, 932, 847, 856, 235,
	854, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 896, 915, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 1149, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 842, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 928, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 920, 959, 387, 422, 225, 487, 445,
	837, 841, 835, 902, 836, 891, 892, 838, 950, 951,
	952, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	924, 831, 0, 839, 840, 0, 930, 939, 940, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	895, 191, 207, 335, 955, 410, 268, 518, 496, 492,
	816, 834, 242, 845, 853, 0, 859, 867, 868, 880,
	882, 883, 884, 885, 903, 904, 906, 914, 916, 919,
	921, 926, 936, 958, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 894, 900, 346, 261, 281, 292, 909, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 890, 918,
	342, 463, 464, 288, 360, 0, 0, 944, 929, 462,
	0, 875, 947, 844, 863, 957, 866, 869, 911, 823,
	889, 378, 860, 815, 848, 818, 855, 819, 846, 877,
	250, 843, 931, 893, 946, 333, 247, 825, 849, 392,
	865, 197, 913, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 953, 337, 899,
	0, 446, 363, 0, 0, 0, 879, 935, 887, 925,
	874, 912, 833, 898, 948, 861, 908, 949, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 857, 905, 943, 858, 907, 245,
	293, 252, 244, 466, 954, 934, 822, 886, 942, 0,
	0, 214, 945, 881, 0, 910, 0, 960, 817, 901,
	0, 820, 824, 956, 938, 852, 255, 0, 0, 0,
	0, 0, 0, 0, 878, 888, 922, 872, 0, 0,
	0, 0, 0, 2370, 0, 850, 0, 897, 0, 0,
	0, 829, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 832,
	0, 851, 923, 0, 814, 276, 826, 364, 237, 0,
	927, 937, 873, 502, 941, 871, 870, 917, 830, 933,
	864, 332, 828, 301, 192, 210, 0, 862, 374, 417,
	423, 932, 847, 856, 235, 854, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 896, 915, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 1149, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 842, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 928,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 920, 959,
	387, 422, 225, 487, 445, 837, 841, 835, 902, 836,
	891, 892, 838, 950, 951, 952, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 924, 831, 0, 839, 840,
	0, 930, 939, 940, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 895, 191, 207, 335, 955,
	410, 268, 518, 496, 492, 816, 834, 242, 845, 853,
	0, 859, 867, 868, 880, 882, 883, 884, 885, 903,
	904, 906, 914, 916, 919, 921, 926, 936, 958, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 894, 900, 346,
	261, 281, 292, 909, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 890, 918, 342, 463, 464, 288, 360,
	0, 0, 944, 929, 462, 0, 875, 947, 844, 863,
	957, 866, 869, 911, 823, 889, 378, 860, 815, 848,
	818, 855, 819, 846, 877, 250, 843, 931, 893, 946,
	333, 247, 825, 849, 392, 865, 197, 913, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 953, 337, 899, 0, 446, 363, 0, 0,
	0, 879, 935, 887, 925, 874, 912, 833, 898, 948,
	861, 908, 949, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 857,
	905, 943, 858, 907, 245, 293, 252, 244, 466, 954,
	934, 822, 886, 942, 0, 0, 214, 945, 881, 0,
	910, 0, 960, 817, 901, 0, 820, 824, 956, 938,
	852, 255, 0, 0, 0, 0, 0, 0, 0, 878,
	888, 922, 872, 0, 0, 0, 0, 0, 1821, 0,
	850, 0, 897, 0, 0, 0, 829, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 832, 0, 851, 923, 0, 814,
	276, 826, 364, 237, 0, 927, 937, 873, 502, 941,
	871, 870, 917, 830, 933, 864, 332, 828, 301, 192,
	210, 0, 862, 374, 417, 423, 932, 847, 856, 235,
	854, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 896, 915, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 1149, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 842, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 928, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 920, 959, 387, 422, 225, 487, 445,
	837, 841, 835, 902, 836, 891, 892, 838, 950, 951,
	952, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	924, 831, 0, 839, 840, 0, 930, 939, 940, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	895, 191, 207, 335, 955, 410, 268, 518, 496, 492,
	816, 834, 242, 845, 853, 0, 859, 867, 868, 880,
	882, 883, 884, 885, 903, 904, 906, 914, 916, 919,
	921, 926, 936, 958, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 894, 900, 346, 261, 281, 292, 909, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 890, 918,
	342, 463, 464, 288, 360, 0, 0, 944, 929, 462,
	0, 875, 947, 844, 863, 957, 866, 869, 911, 823,
	889, 378, 860, 815, 848, 818, 855, 819, 846, 877,
	250, 843, 931, 893, 946, 333, 247, 825, 849, 392,
	865, 197, 913, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 953, 337, 899,
	0, 446, 363, 0, 0, 0, 879, 935, 887, 925,
	874, 912, 833, 898, 948, 861, 908, 949, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 857, 905, 943, 858, 907, 245,
	293, 252, 244, 466, 954, 934, 822, 886, 942, 0,
	0, 214, 945, 881, 0, 910, 0, 960, 817, 901,
	0, 820, 824, 956, 938, 852, 255, 0, 0, 0,
	0, 0, 0, 0, 878, 888, 922, 872, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 897, 0, 0,
	0, 829, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 832,
	0, 851, 923, 0, 814, 276, 826, 364, 237, 0,
	927, 937, 873, 502, 941, 871, 870, 917, 830, 933,
	864, 332, 828, 301, 192, 210, 0, 862, 374, 417,
	423, 932, 847, 856, 235, 854, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 896, 915, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 1149, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 842, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 928,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 920, 959,
	387, 422, 225, 487, 445, 837, 841, 835, 902, 836,
	891, 892, 838, 950, 951, 952, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 924, 831, 0, 839, 840,
	0, 930, 939, 940, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 895, 191, 207, 335, 955,
	410, 268, 518, 496, 492, 816, 834, 242, 845, 853,
	0, 859, 867, 868, 880, 882, 883, 884, 885, 903,
	904, 906, 914, 916, 919, 921, 926, 936, 958, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 894, 900, 346,
	261, 281, 292, 909, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 890, 918, 342, 463, 464, 288, 360,
	0, 0, 944, 929, 462, 0, 875, 947, 844, 863,
	957, 866, 869, 911, 823, 889, 378, 860, 815, 848,
	818, 855, 819, 846, 877, 250, 843, 931, 893, 946,
	333, 247, 825, 849, 392, 865, 197, 913, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 953, 337, 899, 0, 446, 363, 0, 0,
	0, 879, 935, 887, 925, 874, 912, 833, 898, 948,
	861, 908, 949, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 857,
	905, 943, 858, 907, 245, 293, 252, 244, 466, 954,
	934, 822, 886, 942, 0, 0, 214, 945, 881, 0,
	910, 0, 960, 817, 901, 0, 820, 824, 956, 938,
	852, 255, 0, 0, 0, 0, 0, 0, 0, 878,
	888, 922, 872, 0, 0, 0, 0, 0, 0, 0,
	850, 0, 897, 0, 0, 0, 829, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 832, 0, 851, 923, 0, 814,
	276, 826, 364, 237, 0, 927, 937, 873, 502, 941,
	871, 870, 917, 830, 933, 864, 332, 828, 301, 192,
	210, 0, 862, 374, 417, 423, 932, 847, 856, 235,
	854, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 896, 915, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 1149, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 842, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 928, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 920, 959, 387, 422, 225, 487, 445,
	837, 841, 835, 902, 836, 891, 892, 838, 950, 951,
	952, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	924, 831, 0, 839, 840, 0, 930, 939, 940, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	895, 191, 207, 335, 955, 410, 268, 518, 496, 492,
	816, 834, 242, 845, 853, 0, 859, 867, 868, 880,
	882, 883, 884, 885, 903, 904, 906, 914, 916, 919,
	921, 926, 936, 958, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 894, 900, 346, 261, 281, 292, 909, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 890, 918,
	342, 463, 464, 288, 360, 0, 0, 944, 929, 462,
	0, 875, 947, 844, 863, 957, 866, 869, 911, 823,
	889, 378, 860, 815, 848, 818, 855, 819, 846, 877,
	250, 843, 931, 893, 946, 333, 247, 825, 849, 392,
	865, 197, 913, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 953, 337, 899,
	0, 446, 363, 0, 0, 0, 879, 935, 887, 925,
	874, 912, 833, 898, 948, 861, 908, 949, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 857, 905, 943, 858, 907, 245,
	293, 252, 244, 466, 954, 934, 822, 886, 942, 0,
	0, 961, 945, 881, 0, 910, 0, 960, 817, 901,
	0, 820, 824, 956, 938, 852, 255, 0, 0, 0,
	0, 0, 0, 0, 878, 888, 922, 872, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 897, 0, 0,
	0, 829, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 832,
	0, 851, 923, 0, 814, 276, 826, 364, 237, 0,
	927, 937, 873, 502, 941, 871, 870, 917, 830, 933,
	864, 332, 828, 301, 192, 210, 0, 862, 374, 417,
	423, 932, 847, 856, 235, 854, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 896, 915, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 827, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 842, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 928,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 813, 807, 806, 302, 339, 920, 959,
	387, 422, 225, 487, 445, 837, 841, 835, 902, 836,
	891, 892, 838, 950, 951, 952, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 924, 831, 0, 839, 840,
	0, 930, 939, 940, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 895, 191, 207, 335, 955,
	410, 268, 518, 496, 492, 816, 834, 242, 845, 853,
	0, 859, 867, 868, 880, 882, 883, 884, 885, 903,
	904, 906, 914, 916, 919, 921, 926, 936, 958, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 894, 900, 346,
	261, 281, 292, 909, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 890, 918, 342, 463, 464, 288, 360,
	0, 0, 944, 929, 462, 0, 875, 947, 844, 863,
	957, 866, 869, 911, 823, 889, 378, 860, 815, 848,
	818, 855, 819, 846, 877, 250, 843, 931, 893, 946,
	333, 247, 825, 849, 392, 865, 197, 913, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 953, 337, 899, 0, 446, 363, 0, 0,
	0, 879, 935, 887, 925, 874, 912, 833, 898, 948,
	861, 908, 949, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 857,
	905, 943, 858, 907, 245, 293, 252, 244, 466, 954,
	934, 822, 886, 942, 0, 0, 961, 945, 881, 0,
	910, 0, 960, 817, 901, 0, 820, 824, 956, 938,
	852, 255, 0, 0, 0, 0, 0, 0, 0, 878,
	888, 922, 872, 0, 0, 0, 0, 0, 0, 0,
	850, 0, 897, 0, 0, 0, 829, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 832, 0, 851, 923, 0, 814,
	276, 826, 364, 237, 0, 927, 937, 873, 502, 941,
	871, 870, 917, 830, 933, 864, 332, 828, 301, 192,
	210, 0, 862, 374, 417, 423, 932, 847, 856, 235,
	854, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 896, 915, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 1364, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 827, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 842, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 928, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 813, 807,
	806, 302, 339, 920, 959, 387, 422, 225, 487, 445,
	837, 841, 835, 902, 836, 891, 892, 838, 950, 951,
	952, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	924, 831, 0, 839, 840, 0, 930, 939, 940, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	895, 191, 207, 335, 955, 410, 268, 518, 496, 492,
	816, 834, 242, 845, 853, 0, 859, 867, 868, 880,
	882, 883, 884, 885, 903, 904, 906, 914, 916, 919,
	921, 926, 936, 958, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 894, 900, 346, 261, 281, 292, 909, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 890, 918,
	342, 463, 464, 288, 360, 0, 0, 944, 929, 462,
	0, 875, 947, 844, 863, 957, 866, 869, 911, 823,
	889, 378, 860, 815, 848, 818, 855, 819, 846, 877,
	250, 843, 931, 893, 946, 333, 247, 825, 849, 392,
	865, 197, 913, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 953, 337, 899,
	0, 446, 363, 0, 0, 0, 879, 935, 887, 925,
	874, 912, 833, 898, 948, 861, 908, 949, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 857, 905, 943, 858, 907, 245,
	293, 252, 244, 466, 954, 934, 822, 886, 942, 0,
	0, 961, 945, 881, 0, 910, 0, 960, 817, 901,
	0, 820, 824, 956, 938, 852, 255, 0, 0, 0,
	0, 0, 0, 0, 878, 888, 922, 872, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 897, 0, 0,
	0, 829, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 832,
	0, 851, 923, 0, 814, 276, 826, 364, 237, 0,
	927, 937, 873, 502, 941, 871, 870, 917, 830, 933,
	864, 332, 828, 301, 192, 210, 0, 862, 374, 417,
	423, 932, 847, 856, 235, 854, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 896, 915, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 804, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 827, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 842, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 928,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 813, 807, 806, 302, 339, 920, 959,
	387, 422, 225, 487, 445, 837, 841, 835, 902, 836,
	891, 892, 838, 950, 951, 952, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 924, 831, 0, 839, 840,
	0, 930, 939, 940, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 895, 191, 207, 335, 955,
	410, 268, 518, 496, 492, 816, 834, 242, 845, 853,
	0, 859, 867, 868, 880, 882, 883, 884, 885, 903,
	904, 906, 914, 916, 919, 921, 926, 936, 958, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 894, 900, 346,
	261, 281, 292, 909, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 890, 918, 342, 463, 464, 288, 360,
	0, 0, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 1766,
	0, 622, 0, 0, 0, 250, 627, 0, 0, 0,
	333, 247, 0, 1767, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 634, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	87, 0, 0, 188, 189, 190, 698, 705, 706, 707,
	708, 709, 699, 701, 0, 0, 223, 700, 230, 645,
	647, 646, 656, 657, 658, 659, 660, 661, 662, 643,
	703, 710, 711, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 605, 619, 0, 633, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 617, 793, 0,
	0, 0, 682, 0, 618, 0, 0, 626, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 681, 0, 0, 502, 0,
	0, 679, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 651,
	652, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	688, 680, 638, 692, 640, 689, 690, 635, 636, 639,
	691, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	683, 625, 624, 0, 631, 632, 0, 641, 642, 644,
	648, 649, 650, 653, 654, 655, 663, 665, 666, 664,
	667, 668, 669, 672, 673, 674, 675, 670, 671, 676,
	623, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 622, 0, 0, 0, 250, 627, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 634, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	87, 0, 0, 188, 189, 190, 698, 705, 706, 707,
	708, 709, 699, 701, 0, 0, 223, 700, 230, 645,
	647, 646, 656, 657, 658, 659, 660, 661, 662, 643,
	703, 710, 711, 0, 245, 293, 252, 244, 466, 0,
	0, 1732, 1733, 1734, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 605, 619, 0, 633, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 617, 0, 0,
	0, 0, 682, 0, 618, 0, 0, 626, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 681, 0, 0, 502, 0,
	0, 679, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 651,
	652, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	688, 680, 638, 692, 640, 689, 690, 635, 636, 639,
	691, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	683, 625, 624, 0, 631, 632, 0, 641, 642, 644,
	648, 649, 650, 653, 654, 655, 663, 665, 666, 664,
	667, 668, 669, 672, 673, 674, 675, 670, 671, 676,
	623, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 622, 0, 0, 0, 250, 627, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 634, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 629, 630, 0, 0, 0, 0, 0,
	0, 1848, 0, 295, 232, 196, 375, 447, 266, 0,
	87, 0, 0, 188, 189, 190, 698, 705, 706, 707,
	708, 709, 699, 701, 0, 0, 223, 700, 230, 645,
	647, 646, 656, 657, 658, 659, 660, 661, 662, 643,
	703, 710, 711, 1849, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 605, 619, 0, 633, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 617, 0, 0,
	0, 0, 682, 0, 618, 0, 0, 626, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 681, 0, 0, 502, 0,
	0, 679, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 651,
	652, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	688, 680, 638, 692, 640, 689, 690, 635, 636, 639,
	691, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	683, 625, 624, 0, 631, 632, 0, 641, 642, 644,
	648, 649, 650, 653, 654, 655, 663, 665, 666, 664,
	667, 668, 669, 672, 673, 674, 675, 670, 671, 676,
	623, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 0,
	342, 463, 464, 288, 360, 0, 0, 0, 78, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 86,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 2934, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 2870, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 1331, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 793, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 705, 706, 0, 0, 0, 0, 1677, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 1012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 1011, 502, 0, 0, 0, 0, 0, 1008,
	1009, 332, 969, 301, 192, 210, 1002, 1006, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 0, 342, 463, 464, 288, 360,
	0, 0, 0, 78, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 86, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 1350,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	1352, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	1183, 0, 1184, 1185, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 1293, 1296, 0, 0,
	0, 0, 1292, 1295, 0, 0, 223, 1291, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 0,
	342, 463, 464, 288, 360, 0, 0, 0, 78, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 1331, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 86,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 1788, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 1786, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 969, 301, 192, 210, 967, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 1788, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 1331, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 2861, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 2127, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2112, 0, 0, 0, 2113, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 1375, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1374, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 2955, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 2861, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 1628,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1500, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1498, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1496, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1494, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1492, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1488, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1486, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1484, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 1459, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 1359,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 775, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 596, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 543, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 2960, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 2584,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 2108,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 0, 342, 463, 464, 288,
}

var yyPact = [...]int{
	5199, -1000, -411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2030, 2193, -1000, -1000,
	-1000, -1000, 2259, -1000, 682, 1714, -1000, 2033, 4366, -1000,
	41980, 481, -1000, 40780, 478, 236, 41980, -1000, 164, -1000,
	158, 41980, 159, 40180, -1000, -1000, -307, 17970, 1968, 25,
	6, 41980, -1000, -1000, -1000, -1000, 2223, 1669, -1000, 332,
	-1000, -1000, -1000, -1000, -1000, -1000, 39580, -1000, -1000, -1000,
	2042, 2032, 2265, 606, 1954, -1000, 2134, 1669, -1000, 17970,
	2183, 2110, 17370, -1000, 17370, 397, -1000, -1000, 12560, -1000,
	-1000, 23980, 41980, 29980, 313, -1000, 2033, -1000, -1000, -1000,
	81, -1000, 292, 1637, -1000, 1625, -1000, 612, 692, 320,
	428, 427, 319, 316, 315, 314, 307, 306, 305, 303,
	329, -1000, 631, 631, -181, -185, 3314, 411, 378, 378,
	451, 2010, 2001, -1000, 658, -1000, 631, 631, 631, 335,
	631, 631, 631, 631, 265, 264, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 274, 2033, 257, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41980, 123, 41980, -1000, 525, 41980, 785, 785, 58,
	785, 785, 785, 785, 151, 549, -8, -1000, 148, 254,
	140, 252, 744, 294, -1000, -1000, 249, 744, 1198, -1000,
	614, 103, -1000, 785, 785, -1000, 10140, 152, 10140, 10140,
	-1000, 2023, -1000, -1000, -1000, -1000, 1215, -1000, 450, -1000,
	-1000, -1000, -1000, 41980, 38980, 327, 677, -1000, -1000, -1000,
	67, -1000, -1000, 1338, 1210, 17970, 1038, -1000, 1251, 576,
	-1000, -1000, -1000, -1000, -1000, 514, 18570, 18570, 18570, 18570,
	-1000, -1000, 1480, 1480, 1480, 1480, 18570, 1480, 18570, 1480,
	1480, 1480, 1480, 17970, 1480, 1480, 1480, -1000, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 524, 1480,
	1480, 1480, 1480, 1480, -1000, -1000, -1000, -1000, 1480, 1480,
	1480, 1480, 1480, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21575, -1000, 14970, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 41980, -1000, 1480, 186, 41980,
	41980, 321, 2134, 1669, -1000, 2223, 2152, 332, -1000, 2400,
	1436, 1272, 1212, 1669, 1522, 41980, -1000, 1653, -1000, -1000,
	-1000, 1821, 1101, 1183, -1000, -1000, -1000, -1000, 1432, 17970,
	-1000, -1000, 2234, -1000, 20975, 523, 852, 2231, 38380, -1000,
	397, 397, 1562, 11955, -62, -1000, -1000, -1000, 675, 27580,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2023, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1663, 41980, -1000, -1000, 4039, 1111, -1000, 1708,
	-1000, 1659, -1000, 1683, 17970, 1736, 477, 1111, 473, 464,
	461, -1000, -102, -1000, -1000, -1000, -1000, -1000, -1000, 631,
	631, 631, -1000, 299, 2180, 4366, 5138, -1000, -1000, -1000,
	37780, 1705, 1111, -1000, 1703, -1000, 763, 497, 556, 556,
	1111, -1000, -1000, 41980, 1111, 743, 742, 1111, 1111, 41980,
	41980, -1000, 37180, -1000, 36580, 35980, 1019, 41980, 35380, 34780,
	34180, 33580, 32980, -1000, 1916, -1000, 1919, -1000, -1000, -1000,
	41980, 1111, 41980, 41980, 301, -1000, -1000, 41980, 1111, -1000,
	-1000, 1016, 1014, 1013, 631, 631, 1004, 1176, 1174, 1170,
	631, 631, 1003, 1169, 28780, 1168, 232, 1001, 998, 972,
	1033, 1165, 180, 1164, 985, 956, 957, 41980, 1701, 41980,
	-1000, 237, 751, 381, 670, 2033, 1967, 1548, 420, 476,
	1111, 382, 382, 41980, -1000, 10745, -1000, -1000, 1163, 17970,
	-1000, 745, 744, 744, -1000, -1000, -1000, -1000, -1000, -1000,
	785, 41980, 745, -1000, -1000, -1000, 744, 785, 41980, 785,
	785, 785, 785, 744, 744, 744, 785, 41980, 41980, 41980,
	41980, 41980, 41980, 41980, 41980, 41980, 10140, 614, 785, -315,
	-1000, 1160, -1000, 1867, -1000, -1000, -1000, -1000, -1000, -1000,
	10140, 10140, -1000, -1000, -1000, -1000, 153, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -88, 1544, 32380, -1000,
	-316, -319, -320, -325, -1000, -1000, -1000, -331, -336, -1000,
	-1000, -1000, 17970, 17970, 17970, 17970, -211, -1000, 805, 18570,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 862, 705, 18570,
	18570, 18570, 18570, 18570, 18570, 18570, 18570, 18570, 18570, 18570,
	18570, 18570, 18570, 18570, 25780, 6507, 6507, 576, 576, 576,
	576, -1000, 17370, 17970, 17970, 576, -1000, 1111, 31780, 17370,
	17370, 17970, 2006, 697, 1210, 41980, -1000, 1212, -1000, -1000,
	-1000, 879, -1000, 41980, 41980, 1233, 17970, 17970, 17970, 17970,
	17970, 17970, 13765, 17970, 17970, 17970, 17970, 17970, 17970, 17970,
	17970, 17970, 17970, 17970, 17970, 17970, 17970, 17970, 17970, 17970,
	17970, 17970, 17970, 17970, 17970, 17970, 17970, 17970, 17970, 13165,
	10745, 17370, 17370, 17370, 17370, 17370, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 521, 1489,
	1479, 1520, -1000, 1526, -1000, -153, 23380, 17970, 1156, 2226,
	1750, 41980, -1000, -1000, -1000, 2134, -1000, 2134, 1489, 1975,
	1879, 17370, -1000, -1000, 1975, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1290, -1000, 41980, 1522, 2087, 41980, 1871,
	1149, 318, -1000, 17970, 17970, 1515, -1000, 1178, 41980, -1000,
	-211, -1000, 31180, -1000, -1000, 9535, -1000, 41980, 293, 41980,
	-1000, 22780, 30580, 11350, -62, -1000, 11350, 1449, -1000, -24,
	-41, 14365, 571, -1000, -1000, -1000, 3314, 19770, 1309, 571,
	82, -1000, -1000, -1000, 1683, -1000, 1683, 1683, 1683, 1683,
	318, 318, 318, 318, -1000, -1000, -1000, -1000, -1000, 1699,
	1698, -1000, 1683, 1683, 1683, 1683, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1697, 1697, 1697, 1684, 1684, 356, -1000,
	17970, 183, 29980, 2040, 952, 1476, 237, 383, 1744, 1111,
	1111, 1111, 383, -1000, 1456, 1281, 1199, -1000, -402, 1482,
	-1000, -1000, 2174, -1000, -1000, 703, 809, 780, 762, 41980,
	211, 291, -1000, 357, -1000, 29980, 1111, 739, 556, 1111,
	-1000, 1111, -1000, -1000, -1000, -1000, -1000, 1111, -1000, -1000,
	1473, -1000, 1439, 837, 774, 814, 754, 1473, -1000, -1000,
	-150, 1473, -1000, 1473, -1000, 1473, -1000, 1473, -1000, 1473,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 686, 139,
	41980, 211, 25780, -1000, 414, -1000, -1000, -1000, 25780, 25780,
	-1000, -1000, -1000, -1000, 1133, 1130, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -390, 41980, -1000, 224, 642,
	276, 317, 281, 41980, 201, 2113, 2106, 2096, 233, 263,
	41980, 41980, 382, 1837, 41980, 2063, 41980, -1000, -1000, -1000,
	-1000, -1000, 1210, 41980, -1000, -1000, 785, 785, -1000, -1000,
	41980, 785, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	785, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 41980, -1000, -1000, -1000,
	-1000, 41980, -1000, -1000, -1000, -1000, -1000, 86, -27, 282,
	-1000, -1000, -1000, -1000, -1000, 2125, -1000, 1210, 711, 707,
	-1000, 1480, -1000, -1000, 838, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 862, 18570, 18570, 18570, 1072, 443, 1327, 895,
	922, 818, 818, 1007, 1007, 586, 586, 586, 586, 586,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1129, -1000,
	1639, -1000, 1723, 1288, 1212, -1000, 1639, 1639, 1391, 17370,
	-1000, -1000, 683, -1000, 17970, 1212, -1000, -1000, 1212, 1212,
	1470, 1467, 2218, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 988, 1476, 1476, 1476, 1476, 1476,
	17970, 1362, -1000, -1000, -1000, 2258, 2245, 1212, 1338, 1212,
	1465, -1000, 2225, 1476, 2220, 2208, 2201, 1448, 2175, 1976,
	1923, 1476, 1476, 1476, 1417, 1911, 1880, 1851, 1826, 1794,
	1783, 1773, 1760, 1756, 1476, 1212, 17370, 17370, 1457, 1480,
	520, -1000, 1639, 1212, 1212, 1639, 1639, 10745, 1212, -1000,
	41980, -1000, -304, -1000, -60, 604, 1480, -1000, 28780, 1212,
	-1000, 6448, -1000, 43180, -1000, -1000, -1000, -1000, -1000, 26980,
	1671, 1975, -1000, -1000, 1480, 1655, -1000, -1000, 318, 55,
	26380, -1000, -1000, 1210, 1210, 17970, -1000, -1000, -1000, -1000,
	-1000, -1000, 519, 2203, 349, 1480, -1000, 1509, 1955, -1000,
	-1000, -1000, 2085, 20375, -1000, 1480, 1480, 41980, 1771, 1533,
	-1000, 509, -1000, 1449, -62, -35, -1000, -1000, -1000, -1000,
	1210, -1000, 951, 297, 330, -1000, 401, -1000, -1000, -1000,
	-1000, 1979, 60, -1000, -1000, -1000, 318, 318, -1000, -1000,
	-1000, -1000, -1000, -1000, 1126, 1126, -1000, -1000, -1000, -1000,
	-1000, 933, -1000, -1000, -1000, 930, -1000, -1000, 1748, 1787,
	183, -1000, -1000, 631, 1124, -1000, -1000, 1990, 631, 631,
	41980, -1000, -1000, 1274, 2040, 224, 41980, 702, 1830, -1000,
	1744, 1744, 1744, 41980, -1000, -1000, -1000, -1000, -1000, -1000,
	-392, 63, 322, -1000, -1000, -1000, 3249, 41980, 1649, -1000,
	189, -1000, 1267, -1000, 41980, -1000, 1647, 1690, 1111, 1111,
	-1000, -1000, -1000, 41980, 1480, -1000, -1000, -1000, -1000, 475,
	2026, 2025, -1000, -1000, -230, 211, 189, 571, 1111, -1000,
	-1000, -1000, -1000, -1000, -393, 1644, 459, 193, 260, 41980,
	41980, 41980, 41980, 41980, 493, -1000, -1000, -1000, -1000, 177,
	-1000, -1000, 177, -1000, -1000, -1000, -1000, 259, 400, -1000,
	41980, 41980, 507, -1000, -1000, -1000, 744, -1000, -1000, 744,
	-1000, -1000, -1000, -1000, -1000, 2018, 41980, -47, -359, -1000,
	-356, 17970, -1000, -1000, -1000, -1000, 909, 435, 1327, 18570,
	18570, 17370, -144, 544, 544, 25780, -1000, -1000, -1000, 17970,
	17970, 1412, 644, -1000, 17970, 967, -1000, -1000, -1000, 17970,
	17970, 17970, 1212, 280, -1000, -1000, -1000, -1000, -1000, 2214,
	-1000, 17970, 17970, 17970, -1000, -1000, 17970, 17970, -1000, 17970,
	17970, 19170, 1212, 19170, 17970, 17970, 19170, -1000, -1000, -1000,
	-1000, 19170, 17970, 17970, 17970, 17970, 17970, 17970, 17970, 17970,
	17970, -1000, -1000, 1639, 1639, 17370, 10745, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 604, -1000, 556,
	556, 556, 41980, -1000, -1000, -1000, -1000, -1000, -1000, 1441,
	2102, -1000, 1899, 1888, 2202, 2203, -1000, 22780, 1975, -1000,
	-1000, 41980, -298, -1000, 1964, 1920, -1000, -1000, -1000, -1000,
	8930, 2134, 17970, 1828, 41980, 1480, -1000, 22180, 41980, 41980,
	22780, 22780, 22780, 22780, 22780, -1000, 1856, 1853, -1000, 1894,
	1875, 1937, 41980, -1000, 1635, 1212, 2152, 20375, 332, 17970,
	24580, 1378, 22780, -1000, -1000, 22780, 41980, 8325, -1000, -1000,
	-52, -53, -1000, -1000, -1000, -1000, 3314, -1000, -1000, 339,
	2084, 1973, -1000, -1000, -1000, -1000, 1588, -1000, 1584, 1431,
	1582, 139, -1000, 1724, 2017, 631, 631, -1000, 928, -1000,
	1111, 1117, 1115, -1000, -1000, -1000, 453, -1000, 2060, 41980,
	1827, 1824, 1820, -1000, -400, 920, 1688, 1711, 17970, 1686,
	2173, 1358, 41980, -1000, -1000, 41980, -1000, 178, -1000, 183,
	41980, -1000, -1000, -1000, 291, 41980, -1000, 6254, -1000, 189,
	-1000, -1000, -1000, -1000, -1000, -1000, 41980, 227, -1000, 1685,
	1181, -1000, -1000, 1679, -1000, -1000, -1000, -1000, 157, 273,
	171, 1112, 171, -1000, 41980, 503, 1787, 41980, -1000, -1000,
	-1000, 785, 785, -1000, -1000, 2008, -1000, 1111, 1476, 18570,
	18570, -1000, 576, -1000, 1480, 1212, 1683, 1683, -1000, 1683,
	1684, -1000, 1683, 144, 1683, 143, 1683, -1000, -1000, 1212,
	1212, 1313, 1136, -114, -1000, 1210, 17970, 1740, 1733, 1476,
	-1000, 1681, 1680, 17970, 1476, 1476, 1476, -1000, 1210, 1448,
	1728, 1429, -1000, -1000, -1000, -1000, 1422, 1476, 1706, -296,
	1212, 1550, 1550, 1550, 1550, 1550, 1520, 1520, 1520, 1520,
	-1000, -1000, 1212, -1000, -1000, 2115, 2115, 2115, 1495, 42580,
	41980, -1000, -1000, -1000, -1000, 2203, 2198, 1372, -1000, -1000,
	55, 395, -1000, 1922, 1920, -1000, 2172, 1941, 2171, -1000,
	-1000, -1000, 1210, -1000, 2036, 1305, -1000, 638, 1334, -1000,
	-1000, 16770, 1518, 1885, 506, 1495, 1389, 1955, 1747, 1816,
	2470, -1000, -1000, -1000, -1000, 1836, -1000, 1770, -1000, -1000,
	1653, -1000, -1000, 1479, 1212, 1694, 293, 22780, 1353, 1353,
	-1000, 504, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 821,
	6124, 2254, -1000, 1106, -1000, 946, 192, 918, -1000, -1000,
	631, 631, -1000, 730, 724, -1000, 41980, 1676, -1000, 318,
	1103, 318, 916, -1000, 912, -1000, -1000, -1000, -1000, 1806,
	1874, -1000, -1000, -1000, -1000, 41980, -1000, -1000, 41980, 41980,
	41980, 1673, 2159, -1000, 17970, 1666, 637, 1672, 41980, 41980,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 399, 631, -367, 262, 261, 631, 631, 631, -401,
	-1000, -1000, 1492, 1487, -1000, -182, -1000, 17970, -1000, -1000,
	-1000, 901, 901, -1000, 1653, -1000, -1000, -1000, 1263, -1000,
	-1000, -155, 41980, 41980, 41980, 41980, -1000, 911, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	576, 18570, -1000, -1000, 318, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17970, -1000, 17970, -1000, 2134, 1085,
	1210, 17970, 17970, -1000, 908, 904, 1476, -1000, -1000, -1000,
	1212, 19170, -1000, 19170, -1000, 17970, 198, 544, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1480,
	1966, 1480, 1480, 24580, -1000, -1000, 2198, 2192, 2155, 1928,
	1933, 1933, 1922, -1000, 2154, 2150, -1000, 1071, 2146, 1070,
	720, -1000, 41980, 17970, 1480, -1000, 352, 41980, 1480, 41980,
	-1000, 2190, -1000, -1000, 17970, 1662, -1000, 17970, -1000, -1000,
	-1000, -1000, -1000, -1000, 6507, 2203, 1353, -1000, -1000, 592,
	-1000, 17970, -1000, -1000, -1000, 3597, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1068, 1056, -1000, -1000, 1658, 17970,
	-1000, -1000, -1000, 1259, 1248, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1653, -1000, -1000, -1000, -1000, 291, -399, 1668,
	41980, 880, -1000, 1463, 1358, 284, 1480, 1054, 631, 631,
	631, 873, 869, 28780, 1446, -1000, 41980, 343, -1000, 291,
	-1000, -190, -191, 1476, -1000, -1000, 2076, -1000, -1000, 10745,
	-1000, -1000, 1643, 1702, -1000, -1000, -1000, 328, -1000, 1476,
	1476, 1212, -1000, 1476, 1476, 1224, 1219, -1000, -1000, 1429,
	-1000, 1116, -1000, 198, 1212, 1814, -1000, -1000, 6507, -1000,
	25180, -1000, 2141, 2138, 29380, 29380, 604, 2192, -1000, 17970,
	16170, 1908, 875, -1000, -1000, -1000, -1000, 1051, 1046, -1000,
	1030, -1000, 2243, -1000, 1210, -1000, 1480, -1000, 499, 1334,
	-1000, 2134, 1210, 41980, 1210, 56, 2190, -1000, 1476, -1000,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, -1000, -1000, 41980, 1455, -1000, -1000, 2074, 1375,
	61, -1000, 1342, -1000, -1000, 472, -1000, 17970, -1000, 28780,
	1029, 1026, -1000, -1000, -1000, -1000, -401, -1000, -1000, -1000,
	-1000, -1000, -1000, 332, 1351, -1000, 628, 41980, 41980, 1212,
	243, -168, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17970, -1000, 1212, 1796, -1000, -242, -1000, 1315, -1000,
	-1000, -1000, -1000, -1000, 1315, 1315, -1000, -1000, 1210, 1338,
	-1000, -1000, 872, -1000, -1000, -1000, -1000, -1000, 41980, 1334,
	41980, -1000, 1298, 1212, 1480, 2134, -1000, 1270, -1000, 332,
	-1000, 1477, 1711, -1000, -1000, -1000, 15570, -1000, -1000, -1000,
	-1000, -1000, 207, -152, 10745, 7720, 1257, -1000, -1000, 1868,
	-148, -172, 1448, -1000, -346, -1000, -1000, 28180, -1000, -1000,
	-1000, -1000, -1000, 1252, -1000, -1000, 24580, 41380, -1000, -142,
	326, -152, 17970, 1437, 1212, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -25, -1000, -1000, -1000, -1000, -1000, 1679,
	-1000, 1864, -1000, 1212, -1000, -1000, -1000, 1247, -1000, 1366,
	-262, 1774, -1000, -97, -1000, -1000, -1000, 793, 1023, -1000,
	-1000, -1000, -1000, -1000, -1000, 1089, 41980, -1000, 354, -1000,
	-1000, -155, -158, -1000, -1000, 41380, -254, 571, 6507, -1000,
	1741, 1677, 2221, -1000, -1000, -1000, -1000, -1000, -1000, -408,
	1223, 238, -1000, -170, -1000, -1000, 2050, 56, -1000, 2238,
	-1000, 2222, 643, 643, -1000, 864, -408, -1000, -174, -263,
	-1000, -1000, -1000, -1000, -1000, 353, 902, -1000, -1000, -1000,
	-1000, 6507, -1000, -1000, -1000, 216, 216, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2613, 2612, 22, 10, 34, 33, 2611, 39, 100,
	188, 49, 193, 106, 2607, 2606, 2605, 2604, 2603, 2602,
	2601, 218, 216, 215, 2600, 2598, 2597, 2596, 2595, 2593,
	2591, 2589, 2587, 2586, 213, 169, 189, 2585, 2583, 2582,
	120, 182, 89, 95, 185, 2581, 2580, 85, 2579, 2578,
	2577, 181, 179, 178, 746, 2576, 177, 123, 52, 2575,
	2574, 2568, 2567, 2566, 2564, 2562, 2561, 2560, 2559, 2558,
	2557, 2556, 2555, 2554, 2552, 2551, 268, 2549, 2548, 14,
	2545, 83, 2541, 2534, 2528, 2527, 133, 2525, 2522, 2521,
	27, 2520, 2519, 2517, 2511, 2510, 2509, 2508, 150, 2507,
	2506, 2505, 2504, 190, 2503, 2502, 149, 110, 127, 2499,
	2498, 107, 183, 2497, 131, 2494, 2493, 2492, 161, 2487,
	4797, 2486, 75, 61, 2483, 118, 84, 60, 67, 30,
	3, 2480, 2479, 74, 88, 2478, 104, 76, 2477, 102,
	111, 2475, 2474, 8, 5, 2473, 1, 4, 2, 77,
	2472, 2471, 116, 2462, 2458, 2457, 99, 2455, 2454, 3323,
	2453, 97, 142, 108, 81, 2452, 43, 79, 2451, 2450,
	2444, 2442, 2441, 50, 2440, 2436, 2434, 148, 47, 166,
	38, 71, 53, 143, 2433, 153, 86, 2432, 147, 145,
	2431, 73, 37, 42, 2427, 63, 139, 126, 24, 103,
	135, 2425, 2422, 65, 78, 2421, 2420, 2413, 2411, 2409,
	2407, 80, 2406, 55, 2404, 197, 2403, 21, 2402, 48,
	41, 2400, 69, 124, 70, 35, 2399, 172, 2398, 58,
	167, 134, 165, 2397, 2394, 2392, 2390, 187, 269, 2389,
	2387, 175, 170, 156, 160, 94, 2386, 272, 2385, 2384,
	101, 1052, 1740, 19, 168, 2381, 2378, 3692, 146, 36,
	15, 2377, 155, 2376, 2375, 2374, 191, 200, 125, 991,
	66, 2372, 2371, 12, 2370, 2369, 2367, 2366, 2361, 2356,
	236, 32, 31, 29, 192, 90, 17, 163, 82, 2353,
	2348, 2347, 132, 98, 2342, 162, 159, 136, 174, 2341,
	171, 158, 130, 2337, 221, 28, 2333, 2332, 2330, 2329,
	96, 2328, 2327, 2325, 2324, 154, 152, 129, 92, 2318,
	93, 122, 164, 151, 46, 2316, 44, 2315, 2314, 23,
	184, 25, 2309, 11, 68, 59, 20, 105, 227, 2308,
	0, 2307, 13, 176, 273, 157, 2305, 2295, 6, 7,
	9, 2292, 2291, 2290, 2285, 144, 2283, 2282, 2280, 2279,
	18, 45, 16, 26, 121, 91, 2270, 2257, 4438, 1845,
	138, 2237, 195,
}

//line sql.y:7072
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 366, 367, 367, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 340, 340,
	340, 343, 343, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	370, 370, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 342, 342, 341, 333, 333, 332, 332, 331, 339,
	339, 338, 338, 337, 38, 39, 48, 48, 48, 48,
	49, 50, 344, 344, 306, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 308, 308, 294, 294, 307, 307, 307, 307, 307,
	307, 307, 293, 293, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 359, 359, 359, 358, 358, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 360, 360, 360, 360, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 292, 292, 280, 280, 287,
	287, 288, 288, 288, 289, 289, 289, 290, 290, 285,
	285, 285, 285, 285, 285, 286, 286, 286, 295, 320,
	320, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 304, 304, 314, 314, 314, 314, 314, 303, 303,
	299, 299, 299, 300, 300, 301, 301, 298, 298, 302,
	302, 316, 316, 315, 315, 296, 296, 297, 297, 322,
	361, 361, 361, 361, 361, 362, 362, 323, 351, 353,
	353, 353, 352, 352, 349, 350, 348, 348, 348, 348,
	348, 81, 81, 81, 245, 245, 246, 246, 312, 312,
	311, 311, 311, 313, 313, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 240, 240, 240, 347,
	347, 347, 347, 347, 347, 346, 346, 346, 309, 309,
	309, 345, 345, 57, 57, 186, 186, 364, 364, 365,
	365, 365, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 86, 86, 87, 87, 87, 87, 89, 89,
	89, 325, 325, 58, 58, 3, 3, 142, 144, 145,
	145, 143, 143, 143, 143, 143, 143, 60, 60, 59,
	59, 147, 146, 148, 148, 148, 1, 1, 2, 2,
	4, 4, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 291, 291, 291, 324, 324, 326,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	92, 91, 91, 90, 93, 93, 93, 93, 93, 93,
	93, 93, 328, 328, 328, 61, 61, 329, 281, 282,
	283, 5, 6, 305, 327, 100, 100, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 239, 239,
	248, 248, 238, 238, 262, 262, 262, 241, 241, 241,
	242, 242, 357, 357, 357, 235, 235, 64, 64, 64,
	66, 66, 67, 68, 68, 264, 264, 265, 265, 69,
	70, 82, 82, 82, 82, 82, 82, 85, 85, 85,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 354, 354, 355, 356, 356, 356, 356, 73,
	75, 31, 31, 31, 31, 31, 31, 110, 110, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 105, 105, 105, 99, 99, 371, 76, 77, 77,
	103, 103, 103, 96, 96, 96, 102, 102, 102, 16,
	16, 17, 221, 221, 18, 18, 107, 107, 109, 109,
	109, 109, 109, 111, 111, 111, 111, 111, 111, 111,
	106, 106, 108, 108, 108, 108, 255, 255, 255, 254,
	254, 136, 136, 138, 137, 137, 139, 139, 140, 140,
	140, 140, 184, 184, 162, 162, 219, 219, 217, 217,
	218, 218, 220, 220, 220, 220, 223, 223, 141, 141,
	141, 141, 149, 149, 150, 150, 151, 151, 263, 263,
	260, 260, 260, 259, 259, 155, 155, 155, 157, 156,
	156, 156, 156, 158, 158, 160, 160, 159, 159, 161,
	166, 166, 165, 165, 163, 163, 163, 163, 164, 164,
	164, 164, 167, 167, 120, 120, 120, 120, 120, 120,
	120, 131, 131, 131, 131, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 83, 83, 83, 236, 236, 168, 168, 176,
	176, 176, 176, 169, 169, 169, 169, 169, 169, 169,
	177, 177, 177, 183, 178, 178, 174, 174, 174, 174,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 271, 271,
	336, 336, 335, 335, 334, 334, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 372, 372, 284,
	284, 284, 284, 175, 175, 175, 175, 175, 101, 101,
	101, 101, 101, 268, 268, 268, 272, 272, 272, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 189, 189, 97, 97, 187, 187,
	188, 190, 190, 185, 185, 185, 171, 171, 171, 191,
	191, 191, 192, 192, 193, 193, 195, 194, 194, 196,
	197, 197, 197, 198, 198, 199, 199, 199, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	112, 112, 112, 112, 114, 114, 113, 113, 79, 79,
	80, 80, 80, 118, 118, 119, 119, 119, 116, 116,
	117, 117, 215, 215, 200, 200, 200, 207, 207, 207,
	203, 203, 205, 205, 205, 206, 206, 206, 204, 212,
	212, 214, 214, 213, 213, 209, 209, 210, 210, 211,
	211, 211, 208, 208, 170, 170, 170, 170, 170, 216,
	216, 216, 216, 224, 224, 180, 180, 182, 182, 181,
	135, 225, 225, 229, 226, 226, 230, 230, 230, 230,
	230, 227, 227, 228, 228, 256, 256, 256, 234, 234,
	247, 247, 243, 243, 244, 244, 237, 237, 249, 249,
	249, 74, 179, 179, 321, 321, 318, 252, 252, 253,
	253, 257, 257, 261, 261, 258, 258, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 368, 369, 266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 1, 1, 1, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 6, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -366, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 219, -49, -39, 220,
	-50, 222, 221, 258, 223, 251, 74, 304, 305, 307,
	308, 309, 310, -85, 256, 257, 225, 36, 45, 33,
	34, 37, 229, 264, 265, 228, -10, -34, 8, -368,
	11, 435, 253, 252, 28, -12, 469, 85, -367, 609,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -371, -76, -76, 12, 13, -76, -306,
	-308, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -330, -44, -41, 224, 221, 268,
	119, 120, 258, 259, 260, 223, 242, 257, 261, 256,
	277, -40, 80, 33, 469, 472, -313, 220, 226, 227,
	436, 122, 121, 75, 222, -310, 358, 501, 579, -56,
	581, 101, 103, 580, 44, 232, 582, 583, 584, 508,
	585, 241, 586, 587, 588, 589, 595, 550, 596, 597,
	598, 123, 7, -76, -261, -257, -340, -251, 88, 89,
	90, 466, 244, 499, 500, 293, 80, 41, 355, 358,
	501, 579, 304, 318, 312, 339, 331, 467, 502, 296,
	245, 281, 576, 329, 131, 581, 299, 503, 259, 363,
	364, 504, 365, 101, 307, 402, 594, 298, 505, 592,
	103, 580, 79, 51, 44, 254, 327, 228, 323, 582,
	282, 506, 477, 275, 122, 119, 601, 36, 321, 50,
	30, 591, 121, 49, 583, 146, 507, 584, 508, 367,
	346, 570, 48, 368, 260, 509, 83, 265, 471, 302,
	578, 369, 322, 370, 292, 590, 225, 510, 562, 371,
	372, 571, 511, 347, 351, 512, 394, 373, 608, 52,
	513, 514, 572, 120, 515, 78, 585, 316, 317, 516,
	290, 243, 396, 343, 448, 455, 456, 107, 108, 451,
	109, 457, 110, 458, 459, 460, 449, 111, 104, 450,
	461, 462, 344, 345, 112, 463, 106, 105, 452, 454,
	113, 464, 241, 35, 374, 468, 294, 58, 269, 397,
	46, 349, 605, 45, 566, 517, 569, 342, 338, 445,
	53, 518, 519, 520, 521, 586, 341, 315, 337, 600,
	4, 287, 587, 62, 227, 353, 352, 354, 276, 393,
	334, 522, 523, 524, 248, 81, 525, 324, 21, 526,
	527, 375, 283, 528, 56, 529, 530, 400, 257, 531,
	54, 588, 39, 532, 262, 602, 589, 533, 534, 535,
	536, 264, 537, 377, 538, 376, 348, 350, 271, 378,
	470, 539, 303, 320, 261, 593, 540, 249, 577, 263,
	268, 256, 401, 250, 541, 542, 543, 544, 545, 297,
	561, 546, 547, 308, 595, 446, 43, 548, 549, 550,
	551, 552, 291, 286, 395, 404, 61, 82, 360, 553,
	554, 575, 314, 284, 555, 305, 55, 596, 597, 598,
	278, 599, 9, 606, 607, 380, 123, 288, 289, 47,
	335, 270, 556, 300, 557, 325, 326, 340, 313, 336,
	306, 563, 272, 381, 447, 258, 558, 403, 285, 356,
	361, 301, 474, 277, 382, 574, 473, 333, 330, 279,
	559, 383, 233, 273, 274, 560, 564, 384, 385, 295,
	386, 387, 388, 389, 390, 392, 391, 280, 472, 311,
	328, 362, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	444, 231, -76, 231, -159, -257, 231, -227, 364, -248,
	366, 379, 374, 384, 372, -239, 375, 377, 271, -357,
	394, 231, 381, 219, 367, 376, 385, 386, 295, 392,
	387, 391, 280, 388, 389, 390, -340, 172, 584, 599,
	131, 332, 371, 369, 395, 566, -257, 306, -264, 311,
	-252, -340, -251, 309, -159, -82, 562, 223, -266, -266,
	-105, 566, 568, -178, -120, 139, -131, -134, -125, -126,
	-172, -173, -174, -175, -132, -185, 161, 162, 169, 140,
	-183, -135, 26, 465, 437, 436, 172, 31, 215, 68,
	69, 439, 440, 142, 57, 412, 413, -133, 407, 414,
	409, 442, 443, 114, 444, 104, 106, 105, 445, 446,
	447, 344, 345, 448, 449, 450, 107, 108, 109, 110,
	111, 112, 113, 451, 454, 452, 453, 455, 456, 457,
	462, 463, 458, 459, 460, 461, 464, -252, -257, 236,
	406, 230, 167, 435, -127, -123, -8, -181, 405, 410,
	411, 415, 408, -340, -251, -129, -128, -168, 91, 97,
	102, 98, -363, 115, -368, 92, 93, 94, 95, 96,
	116, 117, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 44, 380, 380, -159, -76, -76,
	-76, -76, -193, -103, -195, -10, -8, -368, 8, -76,
	-8, -9, -13, -34, -36, 495, -35, -257, -200, -215,
	12, 157, 42, 50, -198, -199, -12, -8, -120, 19,
	23, 24, -108, 163, -120, -257, -77, -108, -237, 235,
	-76, -76, -226, -269, 306, -230, 395, 394, -253, -228,
	-252, -250, -227, 393, 224, 23, 475, 138, 25, 27,
	141, 172, 126, 19, 142, 37, 226, 332, 242, 171,
	238, 436, 219, 72, 476, 407, 409, 405, 412, 438,
	439, 406, 366, 31, 13, 478, 28, 252, 24, 38,
	165, 221, 145, 479, 255, 26, 253, 114, 117, 481,
	22, 75, 247, 14, 240, 40, 16, 482, 483, 17,
	236, 235, 157, 232, 70, 11, 215, 29, 154, 66,
	484, 133, 485, 486, 487, 488, 127, 68, 155, 20,
	603, 410, 411, 33, 567, 465, 266, 167, 73, 59,
	568, 139, 408, 489, 490, 115, 491, 118, 76, 573,
	135, 18, 71, 42, 492, 267, 493, 237, 604, 494,
	398, 495, 156, 222, 435, 69, 496, 230, 379, 8,
	441, 32, 251, 239, 125, 67, 497, 231, 144, 442,
	443, 234, 128, 116, 7, 132, 34, 12, 74, 77,
	413, 414, 415, 57, 124, 469, 143, 15, 498, 399,
	137, 131, -307, 155, -293, -297, -252, 246, -323, 242,
	-159, -316, -315, -252, -368, -104, -247, 232, 240, 239,
	132, -344, 135, 288, 406, 230, -51, -52, -53, -227,
	171, 583, -86, 263, 267, 86, 86, -297, -296, -295,
	-345, 267, 246, -322, -314, 238, 247, -303, 239, 240,
	-298, 232, 133, -345, -298, 237, 247, 242, 246, 267,
	267, 123, 267, 123, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 262, -304, 147, -304, 473, 473, -310,
	-345, 242, -345, -345, 234, 35, 35, -249, -298, 234,
	25, -304, -304, -304, -227, 171, -304, -304, -304, -304,
	275, 275, -304, -304, -304, -304, -304, -304, -304, -304,
	-304, -304, -304, -304, -304, -304, -304, -304, -304, 231,
	-344, -112, 391, 295, 80, -54, 277, -37, -159, -247,
	232, 233, -344, 264, -159, 216, -159, -241, 155, 15,
	-241, -238, 380, 378, 365, 370, -241, -241, -241, -241,
	278, 363, -299, 232, 35, 243, 380, 278, 363, 278,
	279, 278, 279, 373, 383, 278, -262, 14, 157, 406,
	368, 372, 271, 231, 272, 233, 382, 279, -262, 92,
	-242, 155, 380, 274, -241, -241, -267, -368, -253, 332,
	-340, 569, -267, -267, 32, 89, 234, -252, -78, -252,
	92, -15, -11, -22, -21, -23, 147, -110, 380, -98,
	172, 584, 570, 571, 572, 569, 377, 577, 575, 573,
	278, 574, 86, 135, 137, 138, 4, -120, 154, -169,
	147, 148, 149, 150, 151, 152, 153, 157, 139, 141,
	155, 156, 136, 158, 159, 160, 161, 162, 163, 164,
	166, 165, 167, 168, 171, 217, 218, -126, -126, -126,
	-126, -183, -368, -368, -368, -126, -236, -368, -126, -368,
	-368, -368, -368, -189, -120, -368, -372, -368, -372, -372,
	-284, -368, -284, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	216, -368, -368, -368, -368, -368, -284, -284, -284, -284,
	-284, 102, 97, 91, -185, 98, 92, -252, -257, -8,
	-9, -178, -266, -354, -355, -162, -159, -368, 295, -252,
	-252, 264, -198, -12, -8, -193, -199, -195, -8, -76,
	-96, -109, 63, 64, -111, 24, 38, 67, 65, 23,
	-369, 87, -369, -215, -369, 86, -36, -219, 85, 61,
	43, 92, 92, 86, 21, -194, -196, -120, 14, -255,
	4, -254, 25, -252, 92, 216, 100, 14, -160, 29,
	-159, -237, -237, 86, 306, -230, -269, -232, -231, 396,
	398, 147, -256, -252, 92, 31, 87, 86, -159, -273,
	-276, -278, -277, -279, -274, -275, 329, 330, 172, 333,
	335, 336, 337, 338, 339, 340, 341, 342, 343, 346,
	32, 254, 325, 326, 327, 328, 347, 348, 349, 350,
	351, 352, 353, 354, 312, 331, 467, 313, 314, 315,
	316, 317, 318, 320, 321, 322, 323, 324, -343, -340,
	85, 87, 86, -280, 85, -120, -112, 231, -340, 232,
	232, 232, -76, 435, -304, -304, -304, 262, 19, -44,
	-41, -330, 18, -40, -41, 224, 119, 120, 221, 85,
	-293, 85, -302, -343, -340, 85, 133, 237, 132, -301,
	-298, -301, -302, -340, -185, -340, 133, 133, -340, -340,
	-223, -252, -223, -223, 23, -223, 23, -223, 23, 94,
	-252, -223, 23, -223, 23, -223, 23, -223, 23, -223,
	23, 31, 78, 79, 31, 81, 82, 83, -185, -340,
	-185, -293, -227, -159, -340, 94, 94, 94, -304, -304,
	94, 92, 92, 92, -304, -304, 94, 92, -259, -257,
	92, 92, -346, 248, 292, 294, 94, 94, 94, 94,
	31, 92, -347, 31, 591, 590, 592, 593, 594, 92,
	94, 31, 94, 31, 94, -252, 85, -159, -118, 282,
	219, 221, 224, 76, 92, 296, 300, 301, 147, 44,
	86, 234, 231, -340, -243, 236, -243, -252, -258, -257,
	-250, 92, -120, -300, 14, 157, -262, -262, -241, -159,
	-300, -262, -241, -159, -241, -241, -241, -241, -262, -262,
	-262, -241, -257, -257, -159, -159, -159, -159, -159, -159,
	-159, -267, -242, -241, 569, 92, -235, 14, 76, -267,
	-267, -265, 309, 343, 563, 564, 565, 86, 469, -152,
	-159, 569, 569, 569, 569, 569, 569, -120, -120, -120,
	-120, 491, -176, 115, 139, 116, 117, -134, -177, -181,
	-183, 99, 157, 141, 155, 156, -125, -126, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -268, -252, 92, 172, -130, -129, 98, -363, -130,
	-106, -108, -120, -120, -340, -252, -106, -106, -120, -102,
	24, 38, -187, -188, 143, -185, -369, -369, 94, 98,
	-252, -252, -95, -94, 417, 418, 419, 420, 422, 423,
	424, 427, 428, 432, 433, 416, 434, 421, 426, 429,
	430, 431, 425, 328, -120, -120, -120, -120, -120, -120,
	-83, -120, 126, 127, 128, -120, -120, -179, -178, -339,
	-338, -337, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -107, 24, 38, -106, -253,
	-258, -250, -106, -107, -107, -106, -106, 216, -215, -369,
	86, -356, 398, 399, 567, -260, 267, -259, 25, -179,
	92, 14, -221, 77, -252, -198, -198, 63, 64, 59,
	-106, -111, -369, -35, 25, -217, -252, 62, 92, -285,
	-227, 355, 356, -120, -120, 86, -197, 27, 28, -159,
	-254, 163, -258, -159, -222, 267, -159, -137, -139, -140,
	-141, -162, -184, -368, -142, 487, 484, 14, -152, -153,
	-161, -257, -230, -232, 86, 397, 399, 400, 76, 118,
	-120, -286, 171, -312, -311, -310, -293, -295, -296, -297,
	87, -286, -289, 361, 360, -280, -280, -280, -280, -280,
	-285, -285, -285, -285, 85, 85, -280, -280, -280, -280,
	-287, 85, -287, -287, -288, 85, -288, -323, -120, -320,
	-319, -317, -318, 241, 101, 560, 516, 469, 508, 550,
	77, -315, -197, 94, -369, -118, -244, 236, -321, -318,
	-340, -340, -340, -244, -340, 92, -340, 92, -340, 92,
	-87, -58, -1, 603, 604, 605, 86, 19, -294, -293,
	-57, 292, -326, -327, 267, -322, -316, -302, 133, -301,
	-302, -302, -340, 86, 29, 123, 123, 123, 123, 469,
	221, 32, -245, 507, 139, -293, -57, -268, 234, -268,
	-268, 92, 92, -240, 599, -152, -114, 284, 147, 273,
	273, 231, 231, 286, -159, 297, 299, 298, 296, 300,
	301, 23, 23, 23, 285, 287, 289, 275, -159, -159,
	-243, 76, -154, -159, 26, -257, -159, -241, -241, -159,
	-241, -241, -159, -252, -98, 398, 86, 469, 22, -99,
	22, -368, 115, 116, 117, -177, -125, -126, -125, 138,
	255, 86, -369, 25, 86, 77, -369, -369, -369, 86,
	14, -106, -190, -188, 145, -120, -369, -369, -369, 86,
	86, 14, -272, 25, -369, -369, -369, -369, -369, -189,
	-369, 14, 86, 86, -369, -369, 86, 86, -369, 86,
	86, 86, -336, 86, 86, 86, 86, -369, -369, -369,
	-369, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, -369, -369, -106, -106, -368, 216, -369, -369, -369,
	-369, -369, -253, -355, 566, 399, -166, -165, -163, 74,
	235, 75, -368, -259, -369, -130, 89, -218, 89, -217,
	-171, -252, 94, 98, -200, -136, -138, 14, -111, -183,
	87, 86, -285, -204, -209, -238, -252, 92, 172, -196,
	216, -167, 15, -170, 32, 57, -11, -368, -368, 32,
	86, -155, -157, -156, -158, 66, 70, 72, 67, 68,
	69, 73, -263, 25, -137, -9, -8, -368, -368, -368,
	-159, -152, -370, 14, 77, -370, 86, 216, -231, -233,
	401, 398, 404, -340, 92, -86, 86, -310, -297, -201,
	-115, 40, -290, 362, -285, -285, -292, 92, -292, 94,
	94, 87, -47, -42, -43, 33, 80, -317, -304, 92,
	39, -304, -304, -252, 87, -197, -114, -159, 139, 76,
	-321, -321, -321, -257, -2, 602, 608, 133, 85, 365,
	18, -217, 86, 87, -186, 293, 87, -88, -252, 87,
	85, -302, -302, -252, -368, 231, 31, 31, 507, -57,
	-186, -286, -340, 601, 600, 87, 233, 291, -119, 412,
	-116, 92, 88, -159, -159, -159, -159, -159, 224, 221,
	-364, 302, -364, 276, 234, -152, -159, 86, -81, 250,
	245, -262, -262, 33, -159, 398, 578, 576, -120, 138,
	255, -134, -126, -108, 466, -270, 172, 329, 254, 327,
	323, 343, 334, 360, 325, 361, 322, 321, 320, -270,
	-268, -120, -120, -193, 146, -120, 144, -120, -120, -120,
	-369, 172, 329, 14, -120, -120, -120, -337, -120, -120,
	-120, -335, -334, -130, -185, -369, -335, -120, -120, -334,
	-334, -338, -338, -338, -338, -338, -178, -178, -178, -178,
	-369, -369, -107, -253, -163, -298, -298, -298, -223, 86,
	-234, 22, 14, 57, 57, -136, -167, -137, -111, -252,
	-207, 562, -212, 46, -210, -211, 47, -208, 48, 56,
	163, -198, -120, -224, 76, -225, -229, -185, -180, -182,
	-181, -368, -216, -369, -252, -223, -225, -139, -140, -140,
	-139, -140, 66, 66, 66, 71, 66, 71, 66, -156,
	-257, -369, -369, -9, -9, -120, -260, 77, -137, -137,
	-161, -257, 163, 398, 402, 403, -310, -362, 115, 139,
	31, 76, 358, 101, -360, 171, 504, 555, 560, 516,
	508, 550, -361, 237, 132, 133, 249, 25, 41, 87,
	86, 87, 86, 87, 86, -246, -245, -43, -42, -304,
	-304, 94, -340, 92, 92, 233, 26, -159, 76, 76,
	76, -89, 606, 94, 85, -3, 80, -120, 85, 19,
	-293, -185, -328, -281, -329, -282, -283, -5, -6, -305,
	-92, 57, 101, -61, 44, 232, 586, 587, 123, -368,
	599, -320, -217, -324, -326, -159, -122, -368, -121, -123,
	-127, 161, 162, -186, -159, -113, 282, 290, 85, -117,
	89, -342, 77, 273, 358, 273, -365, 303, 92, -365,
	-159, -81, -47, -159, -241, -241, 33, -340, -369, -134,
	-126, -368, -369, -280, -280, -280, -288, -280, 317, -280,
	317, -280, -369, -369, 86, -369, 22, -369, -97, 441,
	-120, 86, 86, -369, 85, 85, -120, -369, -369, -369,
	-336, 86, -369, 86, -369, 86, -271, 561, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -164,
	22, -164, -164, -369, 89, -159, -167, -191, 16, -204,
	51, 335, -214, -213, 55, 47, -211, 19, 49, 19,
	30, -224, 86, 147, 86, -369, -369, 86, 57, 216,
	-369, -167, -150, -149, 76, 77, -151, 76, -149, 66,
	66, -219, -369, -369, 86, -222, -137, -167, -167, 216,
	115, -368, -124, -133, -122, 12, 92, 92, -340, -359,
	590, 591, 31, 94, -304, -304, 133, 133, -159, 85,
	-285, 92, -285, 94, 94, 31, 81, 82, 83, 31,
	78, 79, -159, -159, -159, -159, -325, 85, 19, -120,
	85, 147, 87, -217, -217, 269, 157, -304, 584, 275,
	275, -304, -304, -304, -91, -90, 606, 87, -369, 86,
	-291, 469, 472, -120, -128, -128, -219, 87, -333, 469,
	-341, -252, -252, -252, -252, 94, 96, -125, -285, -120,
	-120, -198, 92, -120, -120, 94, 94, -369, -369, -335,
	-334, -120, -369, -147, -146, -148, 570, 115, 31, -270,
	-368, 66, 18, 16, -368, -368, -260, -191, -192, 17,
	19, -205, 53, -203, 52, -203, -213, 19, 19, 92,
	19, 92, 133, -229, -120, -182, 57, -11, -252, -180,
	-252, -193, -120, 85, -120, -130, -167, -167, -120, -173,
	444, 104, 106, 105, 445, 446, 447, 344, 345, 448,
	449, 450, 107, 108, 109, 110, 111, 112, 113, 451,
	454, 452, 455, 456, 457, 462, 463, 458, 459, 460,
	461, 464, 92, 92, 85, -120, 87, 87, -219, -324,
	-58, 87, -217, 94, 87, 270, -181, -368, 92, -304,
	-304, -304, 94, 94, -259, -369, 86, -252, -361, -326,
	473, 473, -369, 25, -332, -331, -253, 85, 77, -101,
	157, 469, -369, -369, -369, -369, -369, 87, 87, -369,
	-369, 86, -369, -146, -148, -369, 76, -130, -220, -369,
	-252, 237, 19, 19, -220, -220, -166, -192, -120, -178,
	23, -206, 54, 76, 118, 92, 92, 92, 12, -180,
	216, -198, -217, -144, 365, -193, -369, -217, 87, 25,
	87, 608, 133, 87, -181, -100, -368, 266, -259, 92,
	92, -90, -93, -11, 86, 147, -217, -159, -369, 467,
	73, 470, -120, -369, 76, 479, 570, 86, -369, -369,
	-369, 76, 118, -225, -252, 87, -369, -368, -198, 87,
	-202, -11, 85, -3, 266, -281, -329, -282, -283, -5,
	-6, -305, -79, 469, -331, -309, -253, 92, 94, 87,
	62, 468, 471, -336, -252, 237, -260, -145, -143, -252,
	522, -352, -351, 465, -362, -358, 115, 139, 101, -360,
	560, 516, 124, 125, -79, -120, 85, -369, -80, 281,
	566, -342, 62, -369, -369, 86, 22, -273, -60, 533,
	-349, -350, 76, -353, 371, 532, 553, 115, 92, 87,
	-217, 242, -333, 469, -143, 529, -286, -130, -350, 76,
	-349, 76, 13, 12, -4, 607, 87, 283, 470, -59,
	26, -144, -348, 250, 245, 248, 32, -348, 94, -4,
	471, 533, 244, 31, 115, -130, -147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 816,
	816, 816, 0, 816, 0, 0, 816, -2, -2, 816,
	1303, 0, 816, 0, 0, -2, 748, 750, 0, 752,
	-2, 0, 0, 761, 1806, 1806, 811, 0, 0, 0,
	0, 0, 816, 816, 816, 816, 1164, 48, 816, 0,
	83, 84, 767, 768, 769, 63, 0, 1804, 1, 3,
	69, 73, 0, 0, 0, 56, 1173, 0, 76, 0,
	0, 820, 0, 818, 0, 1286, 816, 816, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 562, 495, 541, 493, 527, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 524, 1288, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1190, 153, 1304, 1301, 1302, 38, 39,
	40, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 0, 1280, 0, 675, 917, 0, 737, 737, 0,
	737, 737, 737, 737, 0, 0, 0, 687, 0, 0,
	0, 0, 734, 0, 703, 704, 0, 734, 0, 710,
	740, 0, 715, 737, 737, 718, 1807, 0, 1807, 1807,
	1271, 0, 731, 729, 743, 744, 747, 751, 0, 756,
	759, 1297, 1298, 0, 774, 47, 1541, 766, 779, 780,
	0, 812, 813, 43, 1014, 0, 939, 944, 955, 968,
	969, 970, 971, 972, 974, 975, 0, 0, 0, 0,
	980, 981, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 1144, 0, 1107, 1107, 1031, 1107, 1109,
	1109, 0, 0, 0, 1803, 1581, 1589, 1590, 1612, 1698,
	1747, 1585, 1586, 1567, 1579, 1582, 1570, 1571, 1573, 1575,
	1580, 1587, 1593, 1572, 1592, 1591, 0, 1568, 1569, 1574,
	1584, 1588, 1576, 1577, 1578, 1583, 1594, 1153, 0, 0,
	0, 0, 0, 0, 273, 274, 1013, 1260, 1109, 1109,
	1109, 1109, 1109, -2, -2, 219, 220, 221, 222, 223,
	224, 225, 0, 215, 0, 278, 279, 275, 276, 277,
	997, 998, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 1806, 0, 789, 0, 0, 0,
	0, 0, 1173, 0, 1165, 1164, 61, 0, 816, -2,
	0, 0, 0, 0, 45, 0, 50, 876, 75, 74,
	1212, 0, 0, 0, 57, 1174, 65, 67, 1175, 0,
	821, 822, 0, 852, 856, 0, 817, 0, 0, 1287,
	1286, 1286, 100, 0, 1743, 1264, -2, -2, 0, 0,
	1299, 1300, 1273, -2, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, -2, 0, 0, 165, 166, 0, 41, 398, 0,
	161, 0, 391, 337, 0, 1190, 0, 0, 0, 0,
	0, 816, 0, 1281, 142, 143, 150, 151, 152, 371,
	371, 371, 538, 0, 0, 153, 153, 502, 503, 504,
	0, 0, -2, 396, 0, 482, 0, 0, 385, 385,
	389, 387, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 0, 372, 0, 536, 537, 434,
	0, 0, 0, 0, 0, 514, 515, 0, 0, 1289,
	1290, 0, 0, 0, 371, 371, 0, 0, 0, 0,
	371, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1203, 0, 0, 0, -2, 0, 667, 0, 0,
	0, 1282, 1282, 0, 674, 0, 676, 677, 0, 0,
	678, 0, 734, 734, 732, 733, 680, 681, 682, 683,
	737, 0, 0, 380, 381, 382, 734, 737, 0, 737,
	737, 737, 737, 734, 734, 734, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 740, 737, 0,
	711, 0, 712, 713, 716, 717, 719, 1808, 1809, 1320,
	1807, 1807, 723, 727, 1272, 749, 757, 760, 777, 775,
	776, 778, 770, 771, 772, 773, 0, 791, 792, 797,
	0, 0, 0, 0, 803, 804, 805, 0, 0, 808,
	809, 810, 0, 0, 0, 0, 0, 937, 0, 0,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 976, 977, 978,
	979, 982, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 826, 0, 1145, 0, 1029, 0, 1030, 1032,
	1033, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1292, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 836, 836, 0, 0, 208, 209, 210, 211,
	212, 226, 227, 228, 229, 230, 280, 1153, 0, 1013,
	0, 0, 44, 781, 782, 0, 900, 1292, 0, 0,
	832, 0, 55, 64, 66, 1173, 59, 1173, 0, 838,
	0, 0, -2, -2, 839, 845, 846, 847, 848, 849,
	52, 1805, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 349, 1215, 0, 0, 1166, 1167, 1170, 0, 853,
	1623, 857, 0, 859, 860, 0, 819, 0, 98, 0,
	916, 0, 0, 0, 1743, 1270, 0, 102, 103, 0,
	0, 0, 355, 1275, 1276, 1277, -2, 378, 0, 355,
	344, 288, 289, 290, 337, 292, 337, 337, 337, 337,
	349, 349, 349, 349, 320, 321, 322, 323, 324, 0,
	0, 307, 337, 337, 337, 337, 327, 328, 329, 330,
	331, 332, 333, 334, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 339, 339, 339, 341, 341, 0, 42,
	0, 359, 0, 1170, 0, 0, 1203, 1284, 1294, 0,
	0, 0, 1284, 120, 0, 0, 0, 539, 573, 496,
	528, 540, 0, 499, 500, -2, 0, 0, 481, 0,
	483, 0, 379, 0, -2, 0, 389, 0, 385, 389,
	386, 389, 377, 390, 518, 519, 520, 0, 522, 523,
	603, 886, 0, 0, 0, 0, 0, 609, 610, 611,
	0, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 529, 530, 531, 532, 533, 534, 535, 0, 0,
	0, 483, 0, 525, 0, 435, 436, 437, 0, 0,
	440, 441, 442, 443, 0, 0, 446, 447, 448, 903,
	904, 449, 450, 475, 476, 477, 451, 452, 453, 454,
	455, 456, 457, 469, 470, 471, 472, 473, 474, 458,
	459, 460, 461, 462, 463, 466, 0, 135, 1194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 0, 0, 0, 835, 918, 1305,
	1306, 738, 739, 0, 383, 384, 737, 737, 684, 724,
	0, 737, 688, 725, 689, 691, 690, 692, 705, 706,
	737, 695, 735, 736, 696, 697, 698, 699, 700, 701,
	702, 720, 707, 708, 709, 741, 0, 745, 746, 721,
	722, 0, 758, 762, 763, 764, 765, 0, 0, 794,
	94, 799, 800, 801, 802, 814, 807, 1015, 934, 935,
	936, 0, 938, 941, 0, 999, 1001, 943, 945, 1010,
	1011, 1012, 0, 0, 0, 0, 0, 949, 953, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 973, 1123, 1124, 1125, 990, 281, 282, 0, 991,
	0, 850, 0, 0, 0, 989, 0, 0, 0, 0,
	827, 828, 1151, 1148, 0, 0, 1108, 1110, 0, 0,
	0, 0, 0, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1126, 0, 0, 0, 0, 0,
	1144, 0, 992, 993, 994, 0, 0, 0, 1293, 0,
	130, 131, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 837, 1154,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 1259,
	0, 784, 785, 787, 0, 920, 0, 901, 0, 0,
	790, 0, 831, 0, 834, 58, 60, 843, 844, 0,
	861, 840, 54, 49, 0, 0, 878, 1213, 349, 1235,
	0, 353, 354, 1176, 1177, 0, 1169, 1171, 1172, 77,
	858, 854, 0, 932, 0, 0, 915, 0, 864, 866,
	867, 868, 898, 0, 871, 0, 0, 0, 0, 0,
	96, 917, 1265, 101, 0, 0, 106, 107, 1266, 1267,
	1268, 1269, 0, 562, -2, 430, 167, 169, 170, 171,
	162, -2, 347, 345, 346, 291, 349, 349, 314, 315,
	316, 317, 318, 319, 0, 0, 308, 309, 310, 311,
	302, 0, 303, 304, 305, 0, 306, 397, 0, 1178,
	360, 361, 363, 371, 0, 366, 367, 0, 371, 371,
	0, 392, 393, 0, 1170, 1194, 0, 0, 0, 1295,
	1294, 1294, 1294, 0, 155, 156, 157, 158, 159, 160,
	598, 0, 0, 574, 596, 597, 153, 0, 0, 163,
	485, 484, 0, 630, 0, 395, 0, 0, 389, 389,
	374, 375, 521, 0, 0, 605, 606, 607, 608, 0,
	0, 0, 510, 424, 0, 483, 485, 355, 0, 438,
	439, 444, 445, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 555, 556, 487,
	560, 557, 487, 561, 1191, 1192, 1193, 0, 0, 668,
	0, 0, 421, 92, 1283, 673, 734, 694, 726, 734,
	686, 693, 714, 754, 798, 0, 0, 0, 0, 806,
	0, 0, 942, 1000, 1002, 946, 0, 950, 954, 0,
	0, 0, 0, 0, 0, 0, 996, 1020, 1021, 0,
	0, 1164, 0, 1149, 0, 0, 1028, 1111, 1112, 0,
	0, 0, 0, 0, 1039, 1040, 1041, 1042, 1043, 0,
	1045, 0, 0, 0, 1049, 1050, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 0, 0, 1063, 1064, 1065,
	1066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 1016, 0, 0, 836, 0, 1113, 1114, 1115,
	1116, 1117, 1154, 783, 786, 788, 874, 921, 922, 0,
	0, 0, 0, 902, 1291, 829, 830, 833, -2, 0,
	0, 1156, 0, 0, 861, 932, 862, 0, 841, 51,
	877, 0, 1217, 1216, 1229, 1242, 350, 351, 352, 1168,
	0, 1173, 0, 1253, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 905, 0, 0, 908, 0,
	0, 0, 0, 899, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 356, 357, 144, 153, 432, 168, 405,
	0, 0, 287, 348, 312, 313, 0, 335, 0, 0,
	0, 426, 116, 1182, 1181, 371, 371, 362, 0, 365,
	0, 0, 0, 1296, 338, 394, 0, 134, 0, 0,
	0, 0, 0, 140, 568, 0, 0, 575, 0, 0,
	0, 494, 0, 505, 506, 0, 602, -2, 664, 359,
	0, 373, 376, 887, 0, 0, 507, 0, 425, 485,
	512, 513, 526, 467, 468, 465, 0, 0, 1204, 1205,
	1210, 1208, 1209, 121, 546, 548, 547, 551, 0, 0,
	489, 0, 489, 544, 0, 421, 1178, 0, 672, 422,
	423, 737, 737, 793, 95, 0, 796, 0, 0, 0,
	0, 947, 951, 851, 0, 0, 337, 337, 1131, 337,
	341, 1134, 337, 1136, 337, 1139, 337, 1142, 1143, 0,
	0, 0, 0, 1146, 1027, 1152, 0, 0, 0, 0,
	1038, 0, 0, 0, 0, 0, 0, 132, 133, 1080,
	0, 0, 1082, 1084, 1085, 1055, 1081, 0, 0, 1078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 1018, 0, 1155, 923, 928, 928, 928, 0, 0,
	0, 1278, 1279, 1157, 1158, 932, 1159, 863, 842, 879,
	1235, 0, 1228, 0, -2, 1237, 0, 0, 0, 1243,
	855, 78, 933, 81, 0, 1253, 1261, 0, 1244, 1255,
	1257, 0, 0, 0, 1249, 0, 932, 865, 894, 896,
	0, 891, 906, 907, 909, 0, 911, 0, 913, 914,
	876, 870, 872, 0, 0, 0, 98, 0, 932, 932,
	97, 0, 919, 108, 109, 110, 431, 172, 177, 0,
	0, 0, 182, 0, 184, 0, 0, 0, 189, 190,
	371, 371, 406, 0, 284, 286, 0, 0, 175, 349,
	0, 349, 0, 342, 0, 407, 427, 1179, 1180, 0,
	0, 364, 368, 369, 370, 0, 1285, 136, 0, 0,
	0, 571, 0, 599, 0, 0, 0, 0, 0, 0,
	164, 486, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 371, 0, 0, 0, 371, 371, 371, 0,
	656, 358, 0, 0, 627, 624, 508, 0, 213, 214,
	216, 0, 0, 511, 876, 1195, 1196, 1197, 0, 1207,
	1211, 124, 0, 0, 0, 0, 558, 0, 488, 559,
	669, 670, 671, 93, 679, 685, 795, 815, 940, 948,
	952, 0, 984, 1129, 349, 1132, 1133, 1135, 1137, 1138,
	1140, 1141, 985, 986, 0, 1023, 0, 1025, 1173, 0,
	1150, 0, 0, 1037, 0, 0, 0, 1046, 1047, 1048,
	0, 0, 1054, 0, 1056, 0, 0, 0, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1019, 0,
	0, 0, 0, 900, -2, 62, 1159, 1162, 0, 1222,
	1220, 1220, 1230, 1231, 0, 0, 1238, 0, 0, 0,
	0, 82, 0, 0, 0, 1258, 0, 0, 0, 0,
	99, 1164, 888, 895, 0, 0, 889, 0, 890, 910,
	912, 869, -2, 873, 0, 932, 932, 88, 89, 0,
	178, 0, 180, 206, 207, 0, 183, 185, 186, 187,
	193, 194, 195, 188, 0, 0, 283, 285, 0, 0,
	325, 336, 326, 0, 0, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 876, 137, 138, 139, 563, 0, 573, 0,
	0, 0, 566, 0, 497, 0, 0, 0, 371, 371,
	371, 0, 0, 0, 0, 641, 0, 0, 604, 0,
	612, 0, 0, 0, 217, 218, 0, 1206, 545, 0,
	122, 123, 0, 0, 550, 490, 491, 1118, 1130, 0,
	0, 0, 1147, 0, 0, 0, 0, 1044, 1052, 0,
	1083, 0, 1059, 0, 0, 0, 593, 594, 0, 1079,
	0, 929, 0, 0, 0, 0, 920, 1162, 80, 0,
	0, 1225, 0, 1218, 1221, 1219, 1232, 0, 0, 1239,
	0, 1241, 0, 1262, 1263, 1256, 0, 1248, 1251, 1247,
	1250, 1173, 892, 0, 897, 0, 1164, 87, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 0, 0, 340, 343, 0, 0,
	0, 564, 0, 576, 567, 0, 654, 0, 658, 0,
	0, 0, 661, 662, 663, 640, 0, 644, 399, 628,
	625, 626, 509, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 1022, 1024, 1026, 1035, 1036, 1127, 1128, 1053,
	1057, 0, 1060, 0, 0, 1061, 0, 595, 0, 925,
	882, 883, 930, 931, 0, 0, 875, 79, 1163, 1160,
	1161, 1214, 0, 1223, 1224, 1233, 1234, 1240, 0, 1246,
	0, 85, 0, 0, 0, 1173, 179, 0, 198, 0,
	572, 0, 575, 565, 652, 653, 0, 665, 657, 659,
	660, 642, -2, 1198, 0, 0, 0, 552, 983, 0,
	0, 0, 1080, 1062, 0, 591, 592, 0, 924, 926,
	927, 1226, 1227, 1254, 1252, 893, 900, 0, 86, 412,
	405, 1198, 0, 0, 0, 645, 646, 647, 648, 649,
	650, 651, 542, 1200, 127, 128, 478, 479, 480, 121,
	1119, 0, 1122, 0, 884, 885, 577, 0, 579, 0,
	-2, 400, 413, 0, 173, 199, 200, 0, 0, 203,
	204, 205, 196, 197, 117, 0, 0, 666, 0, 1201,
	1202, 124, 1120, 1058, 578, 0, 0, 355, 0, 588,
	401, 402, 0, 408, 409, 410, 411, 201, 202, 600,
	0, 0, 549, 0, 580, 581, 589, 0, 403, 0,
	404, 0, 0, 0, 569, 0, 600, 1199, 0, 0,
	590, 586, 414, 416, 417, 0, 0, 415, 601, 570,
	1121, 0, 418, 419, 420, 582, 583, 584, 585,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 216, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 609,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:530
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:535
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:540
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:576
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:595
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:599
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:605
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:611
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:630
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:636
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:640
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:646
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:825
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:849
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:853
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:859
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:887
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:897
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:901
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:907
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:920
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:942
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:946
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:952
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:960
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:966
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:978
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:984
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:988
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1016
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1036
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1051
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1056
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1062
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1088
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1104
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1118
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1123
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1128
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1133
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1140
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1147
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1158
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1169
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1175
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1183
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1211
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1231
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1235
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1241
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1245
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1251
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1261
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1266
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1299
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1308
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1351
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1356
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1361
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1416
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1424
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1430
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1434
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1460
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1507
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1518
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1525
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1769
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1775
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1779
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1783
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1789
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1793
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1800
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1804
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1808
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1812
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2034
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2043
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2048
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2052
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2060
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2064
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2070
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2095
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2142
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2151
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2157
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2171
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2176
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2180
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2184
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2188
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2192
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2196
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2212
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2216
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2220
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2224
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2228
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2296
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2306
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2310
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2316
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2320
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2326
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2330
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2336
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2342
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2346
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2350
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2358
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2367
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2373
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2379
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2385
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2393
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2398
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2402
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2408
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2414
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2420
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2424
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2428
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2432
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2436
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2459
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2468
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2477
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2483
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2497
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2501
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2507
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2511
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2515
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2519
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2523
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2527
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2531
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2535
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2539
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2543
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2547
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2551
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2555
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2559
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2563
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2567
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2571
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2575
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2579
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2583
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2587
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2591
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2595
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2599
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2627
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2632
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2636
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2691
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2709
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2713
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2722
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2730
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2738
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2744
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2758
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2762
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2766
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2770
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2774
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2778
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2782
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2786
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2790
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2794
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2798
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2802
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2806
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2810
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2814
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2818
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2822
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2826
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2830
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2834
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2838
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2842
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2846
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2864
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2912
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2919
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2926
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2933
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2939
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2949
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2956
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2963
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2975
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2985
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2989
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2993
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3016
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3045
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3052
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3065
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3100
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3109
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3117
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3126
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3133
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3145
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3154
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3169
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3183
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3187
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3193
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3199
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3205
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3209
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3215
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3219
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3225
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3231
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3237
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3243
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3253
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3257
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3261
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3267
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3273
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3279
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3283
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3287
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3293
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3297
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3302
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3306
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3311
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3315
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3321
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3325
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3329
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3333
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3337
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3341
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3345
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3349
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3353
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3357
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3361
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3365
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3369
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3373
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3377
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3381
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3385
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3389
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3393
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3397
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3401
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3405
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3425
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3440
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3444
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3449
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3454
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3459
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3464
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3469
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3475
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3481
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3486
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3492
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3498
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3502
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3508
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3513
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3517
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3522
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3527
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3532
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3537
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3543
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3549
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3556
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3563
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3570
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3582
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3588
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3594
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3600
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3606
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3612
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3618
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3630
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3646
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3652
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3656
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3689
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3704
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3708
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3728
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3748
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3909
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.str = "extended "
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3939
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3943
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3947
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3957
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3961
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3971
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4045
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4063
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4067
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4071
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4075
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4079
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4083
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = yyDollar[1].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = yyDollar[1].str
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4160
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4170
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4176
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4180
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4184
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4188
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4236
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4313
		{
			setAllowComments(yylex, true)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4317
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4323
		{
			yyVAL.strs = nil
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4341
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = SQLCacheStr
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4398
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4408
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4417
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.strs = nil
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4430
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4438
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = SQLCacheStr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = DistinctStr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = DistinctStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = StraightJoinHint
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4474
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4484
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4488
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4492
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4496
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4509
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4521
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4525
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4531
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4537
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4551
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4555
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4559
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4563
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4569
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4573
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4579
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4583
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4592
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4598
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4608
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4618
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4622
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4630
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4636
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4640
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4653
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4657
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4661
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4665
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4673
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4693
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4701
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4714
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4718
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4722
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4728
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4734
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4738
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4742
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4746
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4752
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4756
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4776
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4786
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4795
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4801
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4811
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4815
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4819
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4823
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4828
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4832
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4836
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4840
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4869
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4888
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4896
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4900
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4934
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5108
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5112
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5116
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5122
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5126
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5132
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5136
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5143
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5147
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5151
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5155
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5161
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5165
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5169
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5173
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5177
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5181
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5185
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5191
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5195
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5199
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5206
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5212
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5216
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5495
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5504
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5510
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5514
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5520
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5532
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5536
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5540
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5544
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5548
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5552
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5556
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5560
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5564
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5568
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5572
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5578
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5582
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5586
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5590
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5594
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5598
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5602
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5606
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5610
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5665
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5669
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5673
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5677
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5681
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5705
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5709
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5715
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5719
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5723
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5727
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5731
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5737
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5741
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5745
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5749
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5753
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5757
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5761
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5765
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5769
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5773
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.str = string("")
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5792
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5798
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5802
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5808
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5823
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5827
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5831
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:5856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:5860
		{
			yyLOCAL = &GroupBy{
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:5866
		{
			yyLOCAL = &GroupBy{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5886
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5892
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5898
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5908
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5913
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5917
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5921
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5930
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5936
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5940
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5944
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5953
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5957
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5961
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5965
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5972
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5976
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5980
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5984
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5990
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5994
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5998
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6003
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6020
		{
			yyVAL.str = ""
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = ""
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6048
		{
			yyVAL.str = "cascaded"
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6065
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6071
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6077
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6083
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6092
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6101
		{
			yyVAL.str = ""
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6111
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6115
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6121
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6125
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6129
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6134
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6138
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6151
		{
			yyVAL.str = " header"
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6160
		{
			yyVAL.str = " manifest on"
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6164
		{
			yyVAL.str = " manifest off"
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6169
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6173
		{
			yyVAL.str = " overwrite on"
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6177
		{
			yyVAL.str = " overwrite off"
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6183
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6188
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6192
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6202
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6212
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6217
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6221
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6227
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6231
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6241
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6245
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6250
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = " optionally"
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6267
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6271
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6275
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6279
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6283
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6289
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6293
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6297
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6301
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6310
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6316
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6320
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6326
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6330
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6336
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6351
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6355
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6361
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6367
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6371
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6377
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6381
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6385
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6389
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6393
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6401
		{
			yyVAL.str = "charset"
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6433
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6443
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6448
		{
			yyVAL.empty = struct{}{}
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.empty = struct{}{}
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6452
		{
			yyVAL.empty = struct{}{}
		}
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6456
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6465
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6472
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6476
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6482
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6493
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6499
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6503
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6509
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6513
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6520
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7042
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7051
		{
			decNesting(yylex)
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7056
		{
			skipToEnd(yylex)
		}
	case 1807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7061
		{
			skipToEnd(yylex)
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7065
		{
			skipToEnd(yylex)
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7069
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
