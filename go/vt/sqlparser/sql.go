// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const INTERVAL = 57537
const JSON_EXTRACT_OP = 57538
const JSON_UNQUOTE_EXTRACT_OP = 57539
const CREATE = 57540
const ALTER = 57541
const DROP = 57542
const RENAME = 57543
const ANALYZE = 57544
const ADD = 57545
const FLUSH = 57546
const CHANGE = 57547
const MODIFY = 57548
const DEALLOCATE = 57549
const REVERT = 57550
const SCHEMA = 57551
const TABLE = 57552
const INDEX = 57553
const VIEW = 57554
const TO = 57555
const IGNORE = 57556
const IF = 57557
const PRIMARY = 57558
const COLUMN = 57559
const SPATIAL = 57560
const FULLTEXT = 57561
const KEY_BLOCK_SIZE = 57562
const CHECK = 57563
const INDEXES = 57564
const ACTION = 57565
const CASCADE = 57566
const CONSTRAINT = 57567
const FOREIGN = 57568
const NO = 57569
const REFERENCES = 57570
const RESTRICT = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const COALESCE = 57580
const EXCHANGE = 57581
const REBUILD = 57582
const PARTITIONING = 57583
const REMOVE = 57584
const PREPARE = 57585
const EXECUTE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const VINDEX = 57594
const VINDEXES = 57595
const DIRECTORY = 57596
const NAME = 57597
const UPGRADE = 57598
const STATUS = 57599
const VARIABLES = 57600
const WARNINGS = 57601
const CASCADED = 57602
const DEFINER = 57603
const OPTION = 57604
const SQL = 57605
const UNDEFINED = 57606
const SEQUENCE = 57607
const MERGE = 57608
const TEMPORARY = 57609
const TEMPTABLE = 57610
const INVOKER = 57611
const SECURITY = 57612
const FIRST = 57613
const AFTER = 57614
const LAST = 57615
const VITESS_MIGRATION = 57616
const CANCEL = 57617
const RETRY = 57618
const COMPLETE = 57619
const CLEANUP = 57620
const BEGIN = 57621
const START = 57622
const TRANSACTION = 57623
const COMMIT = 57624
const ROLLBACK = 57625
const SAVEPOINT = 57626
const RELEASE = 57627
const WORK = 57628
const BIT = 57629
const TINYINT = 57630
const SMALLINT = 57631
const MEDIUMINT = 57632
const INT = 57633
const INTEGER = 57634
const BIGINT = 57635
const INTNUM = 57636
const REAL = 57637
const DOUBLE = 57638
const FLOAT_TYPE = 57639
const DECIMAL_TYPE = 57640
const NUMERIC = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const TEXT = 57652
const TINYTEXT = 57653
const MEDIUMTEXT = 57654
const LONGTEXT = 57655
const BLOB = 57656
const TINYBLOB = 57657
const MEDIUMBLOB = 57658
const LONGBLOB = 57659
const JSON = 57660
const JSON_SCHEMA_VALID = 57661
const JSON_SCHEMA_VALIDATION_REPORT = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const NOW = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const JSON_ARRAY = 57760
const JSON_OBJECT = 57761
const JSON_QUOTE = 57762
const JSON_DEPTH = 57763
const JSON_TYPE = 57764
const JSON_LENGTH = 57765
const JSON_VALID = 57766
const JSON_ARRAY_APPEND = 57767
const JSON_ARRAY_INSERT = 57768
const JSON_INSERT = 57769
const JSON_MERGE = 57770
const JSON_MERGE_PATCH = 57771
const JSON_MERGE_PRESERVE = 57772
const JSON_REMOVE = 57773
const JSON_REPLACE = 57774
const JSON_SET = 57775
const JSON_UNQUOTE = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const WITHOUT = 57784
const VALIDATION = 57785
const UNUSED = 57786
const ARRAY = 57787
const CUME_DIST = 57788
const DESCRIPTION = 57789
const DENSE_RANK = 57790
const EMPTY = 57791
const EXCEPT = 57792
const FIRST_VALUE = 57793
const GROUPING = 57794
const GROUPS = 57795
const JSON_TABLE = 57796
const LAG = 57797
const LAST_VALUE = 57798
const LATERAL = 57799
const LEAD = 57800
const NTH_VALUE = 57801
const NTILE = 57802
const OF = 57803
const OVER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const RECURSIVE = 57807
const ROW_NUMBER = 57808
const SYSTEM = 57809
const WINDOW = 57810
const ACTIVE = 57811
const ADMIN = 57812
const BUCKETS = 57813
const CLONE = 57814
const COMPONENT = 57815
const DEFINITION = 57816
const ENFORCED = 57817
const EXCLUDE = 57818
const FOLLOWING = 57819
const GEOMCOLLECTION = 57820
const GET_MASTER_PUBLIC_KEY = 57821
const HISTOGRAM = 57822
const HISTORY = 57823
const INACTIVE = 57824
const INVISIBLE = 57825
const LOCKED = 57826
const MASTER_COMPRESSION_ALGORITHMS = 57827
const MASTER_PUBLIC_KEY_PATH = 57828
const MASTER_TLS_CIPHERSUITES = 57829
const MASTER_ZSTD_COMPRESSION_LEVEL = 57830
const NESTED = 57831
const NETWORK_NAMESPACE = 57832
const NOWAIT = 57833
const NULLS = 57834
const OJ = 57835
const OLD = 57836
const OPTIONAL = 57837
const ORDINALITY = 57838
const ORGANIZATION = 57839
const OTHERS = 57840
const PATH = 57841
const PERSIST = 57842
const PERSIST_ONLY = 57843
const PRECEDING = 57844
const PRIVILEGE_CHECKS_USER = 57845
const PROCESS = 57846
const RANDOM = 57847
const REFERENCE = 57848
const REQUIRE_ROW_FORMAT = 57849
const RESOURCE = 57850
const RESPECT = 57851
const RESTART = 57852
const RETAIN = 57853
const REUSE = 57854
const ROLE = 57855
const SECONDARY = 57856
const SECONDARY_ENGINE = 57857
const SECONDARY_LOAD = 57858
const SECONDARY_UNLOAD = 57859
const SKIP = 57860
const SRID = 57861
const THREAD_PRIORITY = 57862
const TIES = 57863
const UNBOUNDED = 57864
const VCPU = 57865
const VISIBLE = 57866
const RETURNING = 57867
const FORMAT = 57868
const TREE = 57869
const VITESS = 57870
const TRADITIONAL = 57871
const LOCAL = 57872
const LOW_PRIORITY = 57873
const NO_WRITE_TO_BINLOG = 57874
const LOGS = 57875
const ERROR = 57876
const GENERAL = 57877
const HOSTS = 57878
const OPTIMIZER_COSTS = 57879
const USER_RESOURCES = 57880
const SLOW = 57881
const CHANNEL = 57882
const RELAY = 57883
const EXPORT = 57884
const AVG_ROW_LENGTH = 57885
const CONNECTION = 57886
const CHECKSUM = 57887
const DELAY_KEY_WRITE = 57888
const ENCRYPTION = 57889
const ENGINE = 57890
const INSERT_METHOD = 57891
const MAX_ROWS = 57892
const MIN_ROWS = 57893
const PACK_KEYS = 57894
const PASSWORD = 57895
const FIXED = 57896
const DYNAMIC = 57897
const COMPRESSED = 57898
const REDUNDANT = 57899
const COMPACT = 57900
const ROW_FORMAT = 57901
const STATS_AUTO_RECALC = 57902
const STATS_PERSISTENT = 57903
const STATS_SAMPLE_PAGES = 57904
const STORAGE = 57905
const MEMORY = 57906
const DISK = 57907
const PARTITIONS = 57908
const LINEAR = 57909
const RANGE = 57910
const LIST = 57911
const SUBPARTITION = 57912
const SUBPARTITIONS = 57913
const HASH = 57914

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	590, 145,
	-2, 151,
	-1, 48,
	128, 151,
	168, 151,
	324, 151,
	-2, 457,
	-1, 55,
	35, 672,
	228, 672,
	239, 672,
	274, 686,
	275, 686,
	-2, 674,
	-1, 60,
	230, 697,
	-2, 695,
	-1, 114,
	227, 1212,
	-2, 119,
	-1, 116,
	1, 146,
	590, 146,
	-2, 151,
	-1, 126,
	129, 358,
	233, 358,
	-2, 451,
	-1, 145,
	128, 151,
	168, 151,
	324, 151,
	-2, 466,
	-1, 670,
	212, 1233,
	-2, 1229,
	-1, 671,
	212, 1234,
	-2, 1230,
	-1, 745,
	59, 765,
	-2, 780,
	-1, 782,
	144, 1627,
	-2, 112,
	-1, 783,
	144, 1474,
	-2, 113,
	-1, 789,
	144, 1556,
	-2, 1206,
	-1, 934,
	144, 1405,
	-2, 1203,
	-1, 973,
	238, 41,
	243, 41,
	-2, 369,
	-1, 1050,
	1, 505,
	590, 505,
	-2, 151,
	-1, 1283,
	59, 766,
	-2, 785,
	-1, 1284,
	59, 767,
	-2, 786,
	-1, 1337,
	128, 151,
	168, 151,
	324, 151,
	-2, 401,
	-1, 1415,
	129, 358,
	233, 358,
	-2, 451,
	-1, 1424,
	238, 42,
	243, 42,
	-2, 370,
	-1, 1714,
	212, 1238,
	-2, 1232,
	-1, 1796,
	128, 151,
	168, 151,
	324, 151,
	-2, 402,
	-1, 1803,
	25, 170,
	-2, 172,
	-1, 2032,
	86, 39,
	-2, 821,
	-1, 2083,
	77, 94,
	86, 94,
	-2, 841,
	-1, 2148,
	565, 600,
	-2, 587,
	-1, 2279,
	49, 1174,
	-2, 1168,
	-1, 2483,
	86, 39,
	-2, 822,
	-1, 2521,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 814,
	-1, 2828,
	22, 1558,
	32, 1558,
	169, 1558,
	250, 1558,
	304, 1558,
	305, 1558,
	306, 1558,
	307, 1558,
	308, 1558,
	309, 1558,
	310, 1558,
	312, 1558,
	313, 1558,
	314, 1558,
	315, 1558,
	316, 1558,
	317, 1558,
	318, 1558,
	319, 1558,
	320, 1558,
	321, 1558,
	322, 1558,
	323, 1558,
	325, 1558,
	327, 1558,
	328, 1558,
	329, 1558,
	330, 1558,
	331, 1558,
	332, 1558,
	333, 1558,
	334, 1558,
	335, 1558,
	338, 1558,
	339, 1558,
	340, 1558,
	341, 1558,
	342, 1558,
	343, 1558,
	344, 1558,
	345, 1558,
	346, 1558,
	454, 1558,
	-2, 545,
}

const yyPrivate = 57344

const yyLast = 40736

var yyAct = [...]int{
	670, 2609, 2611, 679, 2879, 2238, 2610, 2760, 2873, 1793,
	1748, 2587, 2826, 2829, 672, 2830, 2416, 2331, 1340, 1986,
	2810, 2372, 2338, 2290, 1114, 2736, 2293, 96, 1728, 2713,
	3, 738, 2624, 2398, 1262, 2020, 2399, 2294, 1730, 663,
	37, 591, 2340, 2492, 2486, 1857, 2291, 2202, 2629, 2237,
	673, 182, 1003, 661, 182, 760, 555, 182, 2055, 2236,
	662, 617, 571, 664, 182, 2401, 2512, 2078, 2288, 1767,
	2280, 588, 182, 2047, 2478, 1298, 2115, 1831, 2185, 2145,
	1826, 1847, 587, 2116, 1062, 2117, 154, 182, 787, 1752,
	1782, 589, 36, 2067, 761, 2039, 937, 1772, 38, 1684,
	1771, 1631, 583, 1285, 740, 2022, 1683, 1866, 1422, 571,
	1579, 140, 571, 182, 571, 1438, 1394, 742, 1708, 746,
	1759, 1846, 1899, 1621, 1833, 2109, 963, 2085, 1329, 1774,
	1307, 600, 95, 784, 968, 1265, 1530, 763, 1643, 1598,
	1133, 1429, 91, 1526, 941, 974, 1844, 595, 944, 1512,
	1711, 945, 969, 970, 1326, 1822, 971, 1312, 1328, 752,
	1753, 1112, 1680, 981, 1107, 117, 118, 1389, 123, 124,
	1046, 774, 747, 750, 1535, 97, 76, 578, 748, 85,
	98, 1204, 1200, 89, 2880, 1414, 2369, 2390, 2769, 1091,
	1859, 2138, 1859, 1860, 1861, 1005, 2164, 2163, 2570, 157,
	2387, 2136, 1721, 1897, 768, 1498, 773, 2193, 1019, 1020,
	2194, 1023, 1024, 1025, 1026, 1134, 528, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1008, 754, 125, 2614, 749, 77, 8, 90,
	7, 6, 2791, 579, 2388, 2790, 938, 119, 102, 1725,
	1726, 1586, 739, 1585, 741, 1584, 1583, 2614, 184, 185,
	186, 1582, 1581, 781, 1568, 581, 2394, 582, 2845, 788,
	2018, 1573, 2276, 2466, 1134, 2049, 949, 762, 2893, 954,
	961, 2855, 960, 959, 984, 2870, 2546, 1591, 2709, 104,
	105, 985, 108, 2708, 755, 114, 2355, 2580, 179, 1007,
	2581, 523, 1006, 1009, 1010, 1011, 2892, 1838, 78, 78,
	78, 178, 80, 1292, 2820, 2883, 119, 1016, 1021, 2613,
	1144, 734, 735, 736, 737, 1937, 2786, 745, 2868, 2588,
	2791, 1836, 2058, 78, 2811, 120, 1885, 2819, 2201, 2450,
	178, 2613, 1404, 2785, 2094, 2328, 2329, 2093, 162, 2019,
	2095, 1673, 184, 185, 186, 776, 777, 2059, 2327, 2642,
	1788, 1789, 1049, 1330, 120, 1331, 2172, 2192, 1934, 1787,
	2171, 2391, 1166, 1098, 1110, 1100, 1081, 162, 732, 1144,
	119, 731, 1086, 1087, 2761, 87, 87, 87, 1082, 1935,
	2099, 1075, 558, 2718, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1175, 1174, 1176, 1177, 159, 1069, 160, 2106, 1727,
	87, 1070, 1069, 1097, 1099, 1140, 2418, 1070, 1132, 1068,
	2139, 1067, 1806, 1805, 2228, 2489, 569, 177, 2441, 2439,
	1572, 573, 567, 545, 159, 1269, 160, 1665, 1654, 1655,
	1656, 1657, 1667, 1658, 1659, 1660, 1672, 1668, 1661, 1662,
	1669, 1670, 1671, 1663, 1664, 1666, 177, 558, 2146, 1045,
	1911, 1908, 1910, 1909, 1867, 1518, 178, 1835, 958, 1083,
	1055, 1056, 1076, 1088, 1140, 558, 1109, 2141, 558, 544,
	1574, 1575, 1576, 1089, 2167, 2411, 1900, 2882, 1905, 1488,
	120, 542, 142, 2412, 1913, 1513, 1914, 2419, 1915, 1084,
	1085, 1090, 1058, 162, 1104, 1051, 1095, 2180, 958, 1044,
	1096, 558, 2572, 2420, 2571, 1022, 1902, 1916, 962, 1028,
	1101, 1027, 1904, 182, 2696, 182, 956, 992, 182, 990,
	1870, 539, 163, 1489, 152, 1490, 87, 1768, 2846, 141,
	553, 168, 1094, 1906, 964, 976, 1102, 965, 965, 1001,
	1000, 2568, 999, 998, 997, 550, 571, 571, 571, 996,
	159, 163, 160, 2344, 1903, 2866, 2887, 1272, 995, 994,
	168, 989, 1407, 1048, 571, 571, 2229, 1002, 1416, 1417,
	151, 150, 177, 1178, 2877, 1178, 942, 942, 559, 942,
	1428, 977, 1527, 940, 2023, 2025, 1139, 1136, 1137, 1138,
	1143, 1145, 1142, 1845, 1141, 1935, 1126, 2184, 775, 953,
	2181, 1135, 955, 2362, 1065, 37, 1071, 1072, 1073, 1074,
	529, 1891, 531, 546, 1523, 561, 1120, 560, 535, 1012,
	533, 537, 547, 538, 2166, 532, 1402, 543, 957, 1111,
	534, 548, 549, 551, 565, 564, 552, 2768, 541, 562,
	2137, 1401, 2354, 559, 155, 1139, 1136, 1137, 1138, 1143,
	1145, 1142, 2567, 1141, 1047, 1519, 2197, 993, 1949, 991,
	1135, 559, 1400, 2156, 559, 146, 1418, 153, 957, 1415,
	2169, 147, 148, 155, 983, 1018, 1837, 163, 1181, 1182,
	1183, 1184, 2140, 983, 1427, 2719, 168, 1524, 1189, 1398,
	1192, 2490, 527, 522, 1179, 1180, 958, 559, 950, 2757,
	2392, 2393, 1079, 2774, 1517, 952, 951, 1794, 1116, 1117,
	1103, 1260, 2179, 2395, 2784, 2178, 81, 983, 2527, 1887,
	1754, 1755, 182, 1178, 1185, 2508, 571, 571, 2090, 1105,
	2054, 2010, 1720, 1316, 1241, 1500, 1499, 1501, 1502, 1503,
	1060, 2024, 182, 1177, 2326, 2612, 86, 86, 86, 1936,
	2187, 757, 2187, 116, 956, 2186, 1092, 2186, 1108, 740,
	1278, 571, 2780, 1276, 1261, 182, 1064, 2612, 111, 1275,
	571, 86, 982, 1279, 1004, 2563, 571, 986, 976, 742,
	983, 982, 2502, 2875, 1273, 1901, 2876, 987, 2874, 1202,
	1054, 1203, 1206, 1057, 784, 1536, 1066, 1520, 1332, 155,
	1130, 563, 77, 2221, 1129, 1644, 1127, 1128, 1172, 1173,
	1175, 1174, 1176, 1177, 2129, 982, 983, 1255, 2638, 556,
	983, 976, 979, 980, 1150, 942, 1261, 1277, 1150, 973,
	977, 95, 1148, 1149, 557, 112, 1149, 1247, 1248, 1249,
	1250, 1251, 1644, 1514, 1963, 1515, 2538, 1150, 1516, 2537,
	972, 1266, 1874, 1603, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1437, 957, 1604, 1605, 1602,
	173, 174, 175, 176, 1436, 149, 1426, 1884, 982, 98,
	1017, 1882, 992, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 990, 1078, 1093, 2862, 1263, 173,
	174, 175, 176, 1063, 1886, 143, 1080, 739, 144, 1274,
	2729, 1292, 2528, 1317, 982, 1297, 741, 2888, 982, 986,
	976, 2863, 2836, 1879, 976, 979, 980, 182, 942, 987,
	788, 1390, 973, 977, 1050, 1537, 2834, 1879, 1322, 1323,
	1294, 1399, 1593, 1595, 1596, 2838, 2839, 1150, 2890, 988,
	2342, 2343, 1147, 1327, 1148, 1149, 1147, 2835, 1148, 1149,
	1883, 2223, 571, 1594, 1424, 2447, 184, 185, 186, 1507,
	1623, 2704, 1433, 2703, 1881, 1147, 1435, 1148, 1149, 571,
	571, 2796, 571, 1280, 571, 571, 2694, 571, 571, 571,
	571, 571, 571, 1170, 1171, 1172, 1173, 1175, 1174, 1176,
	1177, 2889, 571, 2603, 1405, 1406, 182, 1471, 2750, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	87, 2602, 182, 2797, 2545, 173, 174, 175, 176, 1292,
	1292, 2544, 1506, 571, 1601, 182, 1168, 1169, 1170, 1171,
	1172, 1173, 1175, 1174, 1176, 1177, 1525, 1624, 1505, 571,
	2751, 182, 2370, 2360, 2341, 1941, 1942, 1943, 1420, 1150,
	1484, 1495, 779, 2777, 1474, 1475, 2344, 182, 2113, 1413,
	1480, 1481, 1150, 2112, 182, 1147, 1841, 1148, 1149, 1508,
	1432, 1493, 1150, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 571, 571, 571, 1440, 1492, 1441, 1468, 1443,
	1445, 1491, 1482, 1449, 1451, 1453, 1455, 1457, 1476, 1397,
	1473, 1504, 1431, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1152, 1472, 1434, 182, 1494, 1411, 1409, 684, 685, 686,
	1447, 1423, 1954, 1430, 1430, 2776, 1150, 1301, 1292, 1532,
	2754, 1953, 1410, 2415, 2753, 1648, 1959, 1466, 1467, 1649,
	1540, 2752, 2699, 2637, 2445, 1292, 2635, 1544, 1150, 1546,
	1547, 1548, 1549, 1469, 1995, 1292, 1553, 1150, 2599, 1622,
	1119, 1150, 2542, 1628, 1628, 1625, 1629, 2534, 2122, 1972,
	1567, 2110, 1634, 571, 1626, 1626, 1302, 1147, 1257, 1148,
	1149, 1528, 1895, 1403, 1760, 1761, 1894, 1751, 571, 571,
	1147, 1733, 1148, 1149, 1569, 1533, 960, 959, 2726, 1496,
	1147, 1483, 1148, 1149, 1479, 1599, 1478, 1477, 1958, 1303,
	1150, 184, 185, 186, 94, 1606, 1597, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	119, 1681, 1542, 1150, 1106, 2725, 1607, 1538, 1539, 1166,
	2864, 2196, 2688, 1563, 1564, 1565, 1712, 2687, 182, 1566,
	1305, 1543, 2586, 571, 1147, 2056, 1148, 1149, 1550, 1551,
	1552, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1174,
	1176, 1177, 1292, 1600, 2045, 2881, 1147, 182, 1148, 1149,
	571, 2851, 1292, 1681, 2056, 1147, 2147, 1148, 1149, 1147,
	182, 1148, 1149, 2765, 571, 2045, 2817, 1150, 101, 182,
	2125, 182, 92, 182, 182, 571, 2045, 2804, 571, 100,
	1714, 99, 1738, 93, 1739, 1304, 100, 1630, 2289, 571,
	94, 1712, 2045, 2800, 1636, 1637, 2064, 1645, 2501, 784,
	1803, 1802, 784, 2792, 1292, 95, 2045, 2770, 1147, 1150,
	1148, 1149, 1716, 1717, 2578, 2767, 1150, 184, 185, 186,
	2321, 2535, 1150, 2501, 95, 2501, 1150, 2503, 1713, 1935,
	1952, 1147, 2063, 1148, 1149, 1146, 1166, 1292, 1948, 1744,
	1770, 2462, 1292, 1715, 571, 2779, 1718, 1719, 1292, 1987,
	2086, 1848, 1849, 1850, 1950, 1714, 1852, 1854, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1175, 1174, 1176, 1177, 2045,
	571, 2045, 2695, 1150, 1797, 2064, 571, 1433, 2578, 1292,
	1433, 1732, 1433, 1743, 1780, 1798, 2064, 754, 1878, 2045,
	2576, 1812, 1813, 1814, 1815, 1147, 2462, 1148, 1149, 1292,
	1150, 1879, 1292, 1765, 2842, 2692, 1746, 2350, 1868, 2564,
	2506, 1292, 1807, 2087, 1808, 1809, 1810, 1811, 571, 1828,
	1622, 1763, 2089, 1801, 1834, 1622, 1622, 1150, 2264, 1784,
	1818, 1819, 1820, 1821, 1785, 788, 2203, 1147, 788, 1148,
	1149, 1800, 1799, 1786, 1147, 1950, 1148, 1149, 1146, 1292,
	1147, 671, 1148, 1149, 1147, 2522, 1148, 1149, 184, 185,
	186, 182, 2097, 1980, 1150, 1840, 1865, 1969, 182, 1980,
	1292, 2352, 2351, 182, 182, 1968, 101, 182, 1879, 182,
	2348, 2349, 2464, 1862, 1829, 1873, 182, 100, 1876, 99,
	1877, 1824, 1825, 182, 1758, 1839, 1880, 1843, 1296, 2334,
	1851, 1147, 183, 1148, 1149, 183, 1723, 1150, 183, 2460,
	2348, 2347, 1577, 572, 1888, 183, 1522, 2205, 1829, 1871,
	1875, 182, 571, 183, 1872, 984, 1889, 1324, 1147, 967,
	1148, 1149, 985, 966, 1150, 2064, 1292, 2807, 183, 1150,
	1950, 1292, 1430, 1890, 2335, 744, 2453, 1150, 1892, 1893,
	184, 185, 186, 1879, 1855, 1147, 1292, 1148, 1149, 87,
	572, 1935, 2165, 572, 183, 572, 184, 185, 186, 2337,
	1853, 1898, 2715, 1926, 1927, 1393, 2150, 1299, 1929, 2215,
	2214, 2213, 2207, 2332, 2211, 2685, 2206, 1930, 2204, 2452,
	2649, 1150, 1147, 2209, 1148, 1149, 2562, 2342, 2343, 2143,
	2144, 2559, 2208, 2540, 2333, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1175, 1174, 1176, 1177, 1599, 2114, 1919, 2210,
	2212, 2004, 87, 1150, 2456, 1945, 2086, 1947, 1166, 2003,
	1150, 1162, 2455, 1163, 1150, 1147, 2339, 1148, 1149, 2045,
	2044, 1393, 1392, 1338, 1337, 1395, 1946, 1164, 1165, 1161,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1174, 1176,
	1177, 2041, 1147, 1827, 1148, 1149, 2413, 1147, 1933, 1148,
	1149, 2375, 92, 2002, 182, 1147, 94, 1148, 1149, 94,
	2371, 2151, 182, 93, 1600, 654, 1823, 571, 1628, 2087,
	2029, 2547, 1944, 571, 1817, 2016, 1816, 2033, 1935, 1626,
	1510, 2341, 1425, 1421, 571, 2001, 1391, 113, 2551, 2373,
	2417, 2119, 2000, 2344, 1049, 2716, 1999, 2513, 2514, 1147,
	2027, 1148, 1149, 1838, 2848, 1736, 2818, 182, 2859, 2857,
	182, 1962, 1462, 1950, 2831, 2789, 2519, 1292, 1150, 2118,
	1960, 2548, 2549, 2550, 2734, 2096, 1166, 570, 2060, 1150,
	2516, 1147, 2367, 1148, 1149, 2552, 2553, 37, 1147, 1714,
	1148, 1149, 1147, 2366, 1148, 1149, 2080, 2365, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1175, 1174, 1176, 1177, 2289,
	1150, 2130, 1463, 1464, 1465, 1920, 2119, 1570, 2311, 571,
	2518, 2046, 2308, 2312, 786, 182, 1459, 939, 2042, 946,
	1150, 2309, 182, 1266, 2307, 1750, 2310, 1713, 1742, 2017,
	2007, 2008, 1300, 2313, 571, 2073, 2074, 1150, 2336, 2079,
	1998, 571, 2749, 2507, 2142, 1433, 1433, 2269, 2268, 2043,
	571, 1997, 2628, 2100, 2630, 1150, 2038, 2494, 2121, 2053,
	2084, 1150, 2162, 1460, 1461, 2493, 2497, 2278, 2107, 2108,
	2161, 2281, 2283, 182, 182, 182, 182, 182, 1521, 2088,
	2284, 730, 1996, 2104, 1834, 2091, 1147, 758, 1148, 1149,
	182, 182, 2098, 2346, 2123, 759, 2619, 1147, 2618, 1148,
	1149, 1014, 1990, 2101, 1013, 2427, 182, 1640, 2069, 2072,
	2073, 2074, 2070, 2111, 2071, 2075, 2158, 2118, 92, 1989,
	2190, 1641, 1118, 2157, 120, 1622, 94, 2120, 1147, 93,
	1148, 1149, 2499, 2126, 1760, 1761, 2127, 1988, 92, 2160,
	2131, 2132, 2133, 1985, 1413, 94, 2617, 2885, 1147, 93,
	1148, 1149, 2363, 2152, 2153, 1923, 2766, 2711, 740, 1628,
	2345, 1628, 2220, 2077, 1628, 1147, 2159, 1148, 1149, 1628,
	1626, 2216, 1626, 1747, 1912, 1626, 766, 767, 2479, 1939,
	1626, 571, 101, 1147, 99, 1148, 1149, 1150, 2741, 1147,
	2267, 1148, 1149, 100, 183, 99, 183, 571, 2266, 183,
	2182, 2198, 2625, 2740, 94, 2258, 2251, 2252, 2253, 2254,
	2244, 2199, 182, 101, 2636, 2245, 571, 2241, 2634, 2633,
	2626, 2560, 2200, 2498, 100, 571, 99, 572, 572, 572,
	2496, 2376, 571, 571, 1863, 182, 182, 182, 182, 182,
	1408, 765, 101, 100, 2487, 572, 572, 182, 2217, 2258,
	2232, 2056, 182, 100, 182, 2041, 182, 2301, 1970, 182,
	182, 182, 2861, 2860, 1150, 1734, 1318, 1309, 2271, 1984,
	2860, 746, 103, 2246, 2247, 2248, 2249, 2250, 2861, 2272,
	2755, 2286, 2320, 2533, 1150, 2188, 106, 107, 2189, 756,
	88, 1279, 1, 2295, 2361, 2833, 540, 2259, 2257, 1724,
	1264, 182, 554, 2239, 2270, 2239, 1497, 1487, 2239, 1150,
	2589, 1682, 2263, 2239, 571, 1147, 2273, 1148, 1149, 2712,
	2381, 2379, 571, 2322, 747, 1869, 2323, 182, 2558, 1832,
	748, 975, 2397, 2303, 2304, 2302, 2306, 182, 2305, 2314,
	1150, 2358, 2359, 145, 2318, 95, 1983, 1795, 2300, 1532,
	2324, 1796, 182, 2813, 110, 182, 2330, 2260, 2261, 2262,
	935, 109, 2386, 978, 1077, 2428, 1981, 1864, 2579, 2105,
	1804, 2357, 2356, 2383, 2382, 2380, 2292, 1344, 1342, 1343,
	1341, 2292, 2405, 1346, 1345, 1290, 1286, 1971, 2465, 2404,
	1571, 1977, 1147, 568, 1148, 1149, 2076, 180, 2396, 1333,
	1287, 1310, 1834, 183, 1015, 530, 2353, 572, 572, 2408,
	2377, 1896, 1147, 536, 1148, 1149, 1190, 2265, 2092, 785,
	778, 1735, 1976, 183, 2459, 1740, 1741, 1289, 2031, 1288,
	2423, 2422, 1290, 1286, 2297, 571, 182, 1147, 2491, 1148,
	1149, 2277, 572, 2425, 2426, 2279, 183, 1287, 2048, 2430,
	2282, 572, 2275, 2748, 2627, 2805, 2102, 572, 2437, 2431,
	1306, 786, 786, 786, 2378, 1961, 1197, 1642, 1147, 1775,
	1148, 1149, 1283, 1284, 1289, 1592, 1288, 593, 592, 1121,
	1123, 590, 2034, 2057, 1153, 674, 2021, 1319, 2068, 2066,
	2434, 2435, 182, 2436, 2065, 1921, 2438, 1781, 2440, 2485,
	2442, 2515, 2511, 2825, 1777, 1773, 2480, 2481, 2040, 601,
	2536, 594, 586, 2530, 2403, 182, 2168, 2414, 2170, 2488,
	2495, 2069, 2072, 2073, 2074, 2070, 2103, 2071, 2075, 2500,
	2510, 2513, 2514, 182, 2410, 1131, 182, 182, 182, 1282,
	580, 948, 2517, 1639, 2717, 2772, 571, 571, 1938, 2449,
	1281, 2525, 2526, 1652, 1653, 2368, 2565, 2566, 2405, 2524,
	2523, 2520, 2148, 1856, 63, 2404, 2531, 41, 575, 2844,
	2532, 1122, 772, 32, 31, 30, 29, 28, 23, 22,
	21, 20, 19, 25, 18, 1258, 17, 16, 571, 571,
	571, 571, 2854, 2884, 2389, 115, 50, 47, 45, 122,
	121, 48, 44, 1052, 42, 27, 26, 2541, 183, 2543,
	15, 2569, 14, 13, 12, 2573, 2574, 2575, 11, 10,
	9, 5, 4, 35, 34, 33, 1125, 2583, 2584, 24,
	2, 2385, 2384, 2135, 1628, 1858, 1628, 0, 0, 0,
	0, 1270, 1271, 572, 0, 1626, 0, 1626, 0, 0,
	0, 0, 0, 182, 0, 2585, 0, 0, 0, 0,
	572, 572, 0, 572, 0, 572, 572, 0, 572, 572,
	572, 572, 572, 572, 2594, 2598, 1314, 571, 0, 571,
	0, 2622, 2606, 572, 2615, 786, 0, 183, 0, 0,
	2605, 1334, 0, 0, 0, 2595, 1628, 0, 2651, 0,
	2623, 0, 0, 183, 2645, 2632, 2643, 1626, 740, 2631,
	0, 2641, 2647, 0, 572, 37, 183, 0, 2639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 0, 183, 571, 0, 0, 0, 2295, 0, 0,
	0, 2295, 0, 2693, 0, 2655, 182, 0, 183, 0,
	0, 0, 2652, 2653, 0, 183, 0, 0, 0, 571,
	0, 0, 0, 2690, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 572, 572, 572, 2691, 0, 2239, 0,
	2239, 0, 2732, 2714, 2705, 2707, 2731, 571, 1628, 2706,
	2735, 571, 571, 2700, 2701, 2702, 0, 0, 0, 1626,
	2689, 0, 2697, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2742, 2743, 0, 2292,
	571, 0, 0, 0, 0, 0, 2745, 0, 2744, 0,
	2759, 2747, 0, 0, 0, 0, 0, 0, 0, 2756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 2762, 0, 571, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 2764, 0, 0, 0,
	0, 182, 0, 2758, 0, 0, 2295, 939, 0, 572,
	572, 0, 0, 0, 0, 0, 571, 182, 0, 0,
	1258, 0, 0, 0, 1439, 1439, 2781, 1439, 0, 1439,
	1439, 0, 1448, 1439, 1439, 1439, 1439, 1439, 0, 2775,
	0, 0, 2778, 0, 0, 1258, 1258, 939, 0, 0,
	0, 37, 0, 0, 0, 0, 0, 0, 571, 0,
	2771, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 572, 0, 0, 0, 1509, 2798,
	571, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 571, 1529, 0, 0, 2806, 183, 0,
	0, 572, 182, 571, 2714, 2814, 37, 2821, 0, 2812,
	0, 183, 0, 0, 0, 572, 0, 0, 2803, 0,
	183, 0, 183, 2832, 183, 183, 572, 2840, 2837, 572,
	2824, 0, 0, 0, 2847, 0, 0, 786, 786, 786,
	572, 0, 0, 571, 2858, 2856, 2853, 0, 0, 0,
	0, 0, 571, 2865, 0, 0, 0, 0, 1628, 2867,
	2872, 0, 0, 2871, 2869, 0, 0, 0, 0, 1626,
	2878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2886, 0, 0, 0, 0, 0, 2891, 0, 0, 178,
	0, 0, 0, 0, 0, 572, 2895, 1628, 2732, 2894,
	1412, 2896, 2897, 2292, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 120, 0, 142, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 162, 572, 1635, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 1650, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 141, 178, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 786, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 120, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 1416, 1417, 151, 150, 177, 0, 0, 1737, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 183, 183, 0, 0, 183, 0,
	183, 152, 0, 0, 0, 1749, 141, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 1314,
	0, 0, 786, 0, 0, 0, 0, 159, 0, 160,
	786, 0, 0, 786, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 572, 939, 129, 130, 151, 150, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 1418,
	153, 0, 1415, 0, 147, 148, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 939, 0, 0, 0, 0,
	0, 946, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 127, 153, 134, 126, 0, 147, 148,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 0, 0, 0, 0, 138, 136,
	131, 132, 133, 137, 0, 0, 0, 0, 0, 0,
	128, 0, 655, 0, 0, 183, 0, 0, 0, 139,
	0, 0, 155, 183, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 526, 0, 183, 566,
	0, 183, 0, 0, 0, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 1932, 149, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 143, 0,
	572, 144, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 143, 0, 0, 144, 0, 0, 0, 0,
	0, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 786, 0, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 572, 0,
	0, 0, 173, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 0, 0, 572, 572, 0, 183, 183, 183, 183,
	183, 0, 0, 0, 2124, 0, 0, 0, 183, 0,
	0, 0, 0, 183, 0, 183, 0, 183, 0, 0,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 0, 0, 0, 2149, 0, 0, 0,
	0, 0, 0, 0, 0, 2154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 0, 1258, 0, 0, 1258, 0, 0, 0,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 786, 526, 0, 2852,
	526, 0, 0, 0, 0, 0, 0, 0, 0, 1361,
	0, 0, 1439, 0, 0, 0, 572, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2274, 0, 0, 0, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 1258, 0, 0, 2299, 1439, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 572, 572, 939,
	0, 0, 1258, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 1295, 0, 0, 0, 0, 0, 0, 572,
	572, 572, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	2274, 0, 0, 0, 0, 0, 0, 0, 572, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 79,
	0, 1375, 1378, 1379, 1380, 1381, 1382, 1383, 0, 1384,
	1385, 1386, 1387, 1388, 1363, 1364, 1365, 1366, 1347, 1348,
	1376, 0, 1350, 0, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 0, 572, 1360, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 0, 79, 0,
	0, 1749, 1749, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 572, 572, 0, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 947, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 0, 2590, 2591, 2592, 2593, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 1258, 0,
	0, 0, 183, 0, 0, 0, 0, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 1259, 0, 0, 0, 1258, 526, 0,
	0, 0, 2644, 0, 2646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 572, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 1749, 526,
	0, 0, 0, 183, 572, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 1554, 1555, 526, 526, 526,
	526, 526, 526, 526, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 2738, 572, 0, 526, 2738, 2738, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 0, 0, 0, 0, 771, 771, 0, 0,
	0, 1749, 1259, 0, 0, 1293, 1722, 0, 0, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 771, 1531, 771, 771, 771, 771, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 1258, 0, 2799, 0, 0, 0, 0, 584, 0,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 786, 786, 0, 0, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 2822, 0,
	764, 0, 526, 0, 0, 0, 0, 0, 2827, 1531,
	0, 526, 0, 526, 0, 526, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 1113, 1113, 1113, 2827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 1186, 1187, 1188, 0, 1191, 0, 1193, 1194,
	1195, 1196, 0, 1199, 1201, 1201, 0, 1201, 1205, 1205,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 0, 1242, 1243, 1244, 1245, 1246,
	0, 0, 0, 0, 1205, 1205, 1205, 1205, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2657, 2659,
	2658, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 623, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	526, 0, 0, 1267, 0, 526, 526, 0, 0, 526,
	0, 1924, 0, 0, 1349, 0, 0, 0, 526, 0,
	0, 0, 1268, 0, 0, 526, 0, 0, 743, 0,
	0, 0, 743, 0, 0, 0, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 1951, 0, 0, 525, 1955, 0,
	1956, 1957, 0, 0, 0, 0, 0, 574, 0, 1965,
	0, 0, 1966, 1967, 0, 733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 1973,
	1974, 1975, 0, 0, 1978, 0, 1979, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 943, 0, 1991, 1992,
	1993, 1994, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 2006, 0, 0, 0, 0, 0, 0, 2011,
	2012, 2013, 2014, 2015, 0, 1745, 0, 0, 0, 1375,
	1378, 1379, 1380, 1381, 1382, 1383, 2028, 1384, 1385, 1386,
	1387, 1388, 1363, 1364, 1365, 1366, 1347, 1348, 1376, 0,
	1350, 0, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 0, 0, 1360, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 771, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 526, 0, 0, 0,
	2660, 2661, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 526, 0, 0, 0, 0, 0, 0, 665,
	0, 618, 669, 620, 666, 667, 1151, 616, 619, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	0, 0, 0, 0, 1198, 0, 621, 622, 2656, 2662,
	2663, 2664, 2672, 2674, 643, 2673, 2675, 2676, 2677, 2680,
	2681, 2682, 2683, 2678, 2679, 2684, 0, 526, 0, 0,
	0, 0, 0, 0, 2134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 526, 526, 526, 526,
	1113, 1113, 1113, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 526, 526, 0, 0, 0, 0, 0, 0,
	2240, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2255, 2256, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	1259, 0, 0, 1259, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 0, 2298, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2316, 2317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 1053, 0, 1059, 0,
	0, 1061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1259, 0, 0, 0, 0, 1259, 526, 526, 526,
	526, 526, 0, 0, 0, 0, 0, 0, 0, 2315,
	0, 0, 0, 0, 526, 0, 1485, 0, 526, 0,
	0, 526, 2325, 1531, 0, 0, 0, 0, 0, 0,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 43, 69, 70, 0, 67, 71,
	0, 1776, 0, 526, 0, 0, 0, 68, 0, 2429,
	0, 0, 0, 0, 0, 0, 2433, 0, 0, 1259,
	0, 0, 0, 0, 0, 0, 0, 0, 1396, 526,
	2443, 2444, 2446, 2448, 0, 0, 56, 0, 0, 526,
	2454, 0, 0, 0, 2457, 2458, 0, 87, 0, 0,
	2461, 0, 0, 0, 526, 0, 2463, 526, 0, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 0,
	0, 2477, 947, 0, 0, 0, 0, 2482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	2504, 2505, 0, 0, 2509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2521, 0, 0, 0, 0, 0, 526, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 49, 52,
	51, 54, 0, 66, 0, 0, 75, 72, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	83, 82, 2577, 0, 64, 65, 53, 526, 0, 0,
	0, 0, 73, 74, 0, 0, 0, 1587, 1588, 1589,
	1590, 0, 0, 0, 0, 526, 0, 0, 526, 526,
	526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 59, 60, 61, 62, 0, 0, 0, 1632, 1633,
	1940, 0, 0, 2604, 0, 0, 1638, 0, 0, 2608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 1675, 1676, 1677, 1678, 1679, 584, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 0, 1259, 0, 1259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1757, 81, 0, 0,
	0, 2009, 0, 0, 0, 0, 2710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 1470,
	2720, 2721, 2722, 1792, 2723, 2724, 0, 0, 86, 2727,
	0, 2728, 0, 2730, 2733, 0, 743, 0, 0, 0,
	2737, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 2061, 2062, 1485, 0,
	0, 0, 0, 0, 0, 2081, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2763, 0,
	1541, 0, 1830, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 2783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2788, 0, 0, 0, 0,
	2793, 0, 0, 0, 0, 0, 2794, 2795, 0, 2155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 2801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2843, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 0, 2849, 0, 0, 0, 2850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 1762, 675, 682, 683, 684, 685, 686,
	676, 678, 1766, 0, 1769, 677, 0, 1580, 0, 0,
	1776, 0, 0, 0, 0, 1964, 0, 0, 680, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 2296, 0,
	79, 0, 0, 1776, 1776, 1776, 1776, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 1776, 0, 0, 1776, 0, 0,
	0, 2406, 2407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2402, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 1907, 0, 0, 0, 0, 1917, 1918, 0, 0,
	1922, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 2030, 0, 0, 682, 683,
	0, 0, 0, 2529, 1627, 0, 0, 0, 0, 0,
	0, 2195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2218,
	2219, 0, 0, 0, 2222, 0, 0, 0, 0, 2224,
	2225, 2226, 0, 0, 0, 0, 0, 2230, 2231, 0,
	0, 1685, 2233, 0, 2234, 2235, 0, 0, 0, 2242,
	2243, 0, 0, 0, 0, 0, 0, 1685, 1685, 1685,
	1685, 1685, 584, 584, 584, 584, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2616, 0, 2620,
	2621, 0, 0, 2319, 0, 0, 0, 0, 0, 0,
	682, 683, 0, 2083, 0, 0, 1627, 0, 0, 0,
	0, 0, 2296, 0, 79, 0, 2296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2128, 0,
	0, 0, 0, 0, 0, 0, 0, 2698, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 0,
	0, 0, 0, 0, 0, 0, 2173, 2174, 2175, 2176,
	2177, 0, 0, 0, 2451, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 2183, 0, 0, 0, 0, 0,
	0, 2296, 0, 0, 0, 0, 0, 0, 0, 2191,
	0, 0, 0, 0, 0, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2773, 0, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2802, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 2561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2364, 0, 2596, 0, 2597, 0,
	0, 0, 0, 2600, 2601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2607, 0, 0, 0, 0,
	2400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2421, 0, 0, 2424, 0,
	0, 0, 0, 2640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2648, 0, 0, 2650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2746, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2554, 0, 0, 2555,
	2556, 2557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2841, 351,
	0, 0, 917, 903, 448, 0, 850, 920, 819, 838,
	930, 841, 844, 885, 798, 863, 369, 835, 791, 823,
	794, 830, 795, 821, 852, 244, 818, 905, 867, 919,
	325, 241, 800, 824, 383, 840, 193, 887, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 926, 329, 873, 0, 433, 354, 0, 0,
	0, 854, 909, 861, 899, 849, 886, 808, 872, 921,
	836, 882, 922, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 2815, 0, 2816,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 832,
	879, 916, 833, 881, 239, 285, 246, 238, 452, 927,
	908, 0, 0, 209, 918, 856, 0, 884, 0, 933,
	793, 875, 0, 796, 799, 929, 912, 827, 249, 0,
	0, 0, 0, 0, 0, 0, 853, 862, 896, 847,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 871,
	0, 0, 0, 804, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	807, 0, 826, 897, 0, 790, 268, 801, 355, 231,
	2782, 901, 911, 848, 485, 915, 846, 845, 891, 805,
	907, 839, 324, 803, 293, 188, 205, 0, 837, 365,
	406, 412, 906, 822, 831, 229, 829, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 870, 889, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 1115,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 817, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 902, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 894, 932, 378, 411, 219, 471, 432,
	812, 816, 810, 876, 811, 865, 866, 813, 923, 924,
	925, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	898, 806, 0, 814, 815, 0, 904, 913, 914, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 869, 187, 202,
	327, 928, 400, 261, 499, 479, 475, 792, 809, 236,
	820, 828, 0, 834, 842, 843, 855, 857, 858, 859,
	860, 877, 878, 880, 888, 890, 893, 895, 900, 910,
	931, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 868, 874, 338, 254, 273, 284, 883,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 864,
	892, 334, 449, 450, 280, 351, 0, 0, 917, 903,
	448, 0, 850, 920, 819, 838, 930, 841, 844, 885,
	798, 863, 369, 835, 791, 823, 794, 830, 795, 821,
	852, 244, 818, 905, 867, 919, 325, 241, 800, 824,
	383, 840, 193, 887, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 926, 329,
	873, 0, 433, 354, 0, 0, 0, 854, 909, 861,
	899, 849, 886, 808, 872, 921, 836, 882, 922, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 832, 879, 916, 833, 881,
	239, 285, 246, 238, 452, 927, 908, 0, 0, 209,
	918, 856, 0, 884, 0, 933, 793, 875, 0, 796,
	799, 929, 912, 827, 249, 0, 0, 0, 0, 0,
	0, 0, 853, 862, 896, 847, 0, 0, 0, 0,
	0, 2326, 0, 825, 0, 871, 0, 0, 0, 804,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 807, 0, 826, 897,
	0, 790, 268, 801, 355, 231, 0, 901, 911, 848,
	485, 915, 846, 845, 891, 805, 907, 839, 324, 803,
	293, 188, 205, 0, 837, 365, 406, 412, 906, 822,
	831, 229, 829, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 870, 889, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 1115, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 817,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 902, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 894,
	932, 378, 411, 219, 471, 432, 812, 816, 810, 876,
	811, 865, 866, 813, 923, 924, 925, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 898, 806, 0, 814,
	815, 0, 904, 913, 914, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 869, 187, 202, 327, 928, 400, 261,
	499, 479, 475, 792, 809, 236, 820, 828, 0, 834,
	842, 843, 855, 857, 858, 859, 860, 877, 878, 880,
	888, 890, 893, 895, 900, 910, 931, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 868,
	874, 338, 254, 273, 284, 883, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 864, 892, 334, 449, 450,
	280, 351, 0, 0, 917, 903, 448, 0, 850, 920,
	819, 838, 930, 841, 844, 885, 798, 863, 369, 835,
	791, 823, 794, 830, 795, 821, 852, 244, 818, 905,
	867, 919, 325, 241, 800, 824, 383, 840, 193, 887,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 926, 329, 873, 0, 433, 354,
	0, 0, 0, 854, 909, 861, 899, 849, 886, 808,
	872, 921, 836, 882, 922, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 832, 879, 916, 833, 881, 239, 285, 246, 238,
	452, 927, 908, 0, 0, 209, 918, 856, 0, 884,
	0, 933, 793, 875, 0, 796, 799, 929, 912, 827,
	249, 0, 0, 0, 0, 0, 0, 0, 853, 862,
	896, 847, 0, 0, 0, 0, 0, 2285, 0, 825,
	0, 871, 0, 0, 0, 804, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 807, 0, 826, 897, 0, 790, 268, 801,
	355, 231, 0, 901, 911, 848, 485, 915, 846, 845,
	891, 805, 907, 839, 324, 803, 293, 188, 205, 0,
	837, 365, 406, 412, 906, 822, 831, 229, 829, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 870,
	889, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 1115, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 817, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 902, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 894, 932, 378, 411, 219,
	471, 432, 812, 816, 810, 876, 811, 865, 866, 813,
	923, 924, 925, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 898, 806, 0, 814, 815, 0, 904, 913,
	914, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 869,
	187, 202, 327, 928, 400, 261, 499, 479, 475, 792,
	809, 236, 820, 828, 0, 834, 842, 843, 855, 857,
	858, 859, 860, 877, 878, 880, 888, 890, 893, 895,
	900, 910, 931, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 868, 874, 338, 254, 273,
	284, 883, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 864, 892, 334, 449, 450, 280, 351, 0, 0,
	917, 903, 448, 0, 850, 920, 819, 838, 930, 841,
	844, 885, 798, 863, 369, 835, 791, 823, 794, 830,
	795, 821, 852, 244, 818, 905, 867, 919, 325, 241,
	800, 824, 383, 840, 193, 887, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	926, 329, 873, 0, 433, 354, 0, 0, 0, 854,
	909, 861, 899, 849, 886, 808, 872, 921, 836, 882,
	922, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 832, 879, 916,
	833, 881, 239, 285, 246, 238, 452, 927, 908, 0,
	0, 209, 918, 856, 0, 884, 0, 933, 793, 875,
	0, 796, 799, 929, 912, 827, 249, 0, 0, 0,
	0, 0, 0, 0, 853, 862, 896, 847, 0, 0,
	0, 0, 0, 1764, 0, 825, 0, 871, 0, 0,
	0, 804, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 807, 0,
	826, 897, 0, 790, 268, 801, 355, 231, 0, 901,
	911, 848, 485, 915, 846, 845, 891, 805, 907, 839,
	324, 803, 293, 188, 205, 0, 837, 365, 406, 412,
	906, 822, 831, 229, 829, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 870, 889, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 1115, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 817, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 902, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 894, 932, 378, 411, 219, 471, 432, 812, 816,
	810, 876, 811, 865, 866, 813, 923, 924, 925, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 898, 806,
	0, 814, 815, 0, 904, 913, 914, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 869, 187, 202, 327, 928,
	400, 261, 499, 479, 475, 792, 809, 236, 820, 828,
	0, 834, 842, 843, 855, 857, 858, 859, 860, 877,
	878, 880, 888, 890, 893, 895, 900, 910, 931, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 868, 874, 338, 254, 273, 284, 883, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 864, 892, 334,
	449, 450, 280, 351, 0, 0, 917, 903, 448, 0,
	850, 920, 819, 838, 930, 841, 844, 885, 798, 863,
	369, 835, 791, 823, 794, 830, 795, 821, 852, 244,
	818, 905, 867, 919, 325, 241, 800, 824, 383, 840,
	193, 887, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 926, 329, 873, 0,
	433, 354, 0, 0, 0, 854, 909, 861, 899, 849,
	886, 808, 872, 921, 836, 882, 922, 287, 226, 192,
	366, 434, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 832, 879, 916, 833, 881, 239, 285,
	246, 238, 452, 927, 908, 0, 0, 209, 918, 856,
	0, 884, 0, 933, 793, 875, 0, 796, 799, 929,
	912, 827, 249, 0, 0, 0, 0, 0, 0, 0,
	853, 862, 896, 847, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 871, 0, 0, 0, 804, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 807, 0, 826, 897, 0, 790,
	268, 801, 355, 231, 0, 901, 911, 848, 485, 915,
	846, 845, 891, 805, 907, 839, 324, 803, 293, 188,
	205, 0, 837, 365, 406, 412, 906, 822, 831, 229,
	829, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 870, 889, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 1115, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 817, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	902, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 894, 932, 378,
	411, 219, 471, 432, 812, 816, 810, 876, 811, 865,
	866, 813, 923, 924, 925, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 898, 806, 0, 814, 815, 0,
	904, 913, 914, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 869, 187, 202, 327, 928, 400, 261, 499, 479,
	475, 792, 809, 236, 820, 828, 0, 834, 842, 843,
	855, 857, 858, 859, 860, 877, 878, 880, 888, 890,
	893, 895, 900, 910, 931, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 868, 874, 338,
	254, 273, 284, 883, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 864, 892, 334, 449, 450, 280, 351,
	0, 0, 917, 903, 448, 0, 850, 920, 819, 838,
	930, 841, 844, 885, 798, 863, 369, 835, 791, 823,
	794, 830, 795, 821, 852, 244, 818, 905, 867, 919,
	325, 241, 800, 824, 383, 840, 193, 887, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 926, 329, 873, 0, 433, 354, 0, 0,
	0, 854, 909, 861, 899, 849, 886, 808, 872, 921,
	836, 882, 922, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 832,
	879, 916, 833, 881, 239, 285, 246, 238, 452, 927,
	908, 0, 0, 209, 918, 856, 0, 884, 0, 933,
	793, 875, 0, 796, 799, 929, 912, 827, 249, 0,
	0, 0, 0, 0, 0, 0, 853, 862, 896, 847,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 871,
	0, 0, 0, 804, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	807, 0, 826, 897, 0, 790, 268, 801, 355, 231,
	0, 901, 911, 848, 485, 915, 846, 845, 891, 805,
	907, 839, 324, 803, 293, 188, 205, 0, 837, 365,
	406, 412, 906, 822, 831, 229, 829, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 870, 889, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 1115,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 817, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 902, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 894, 932, 378, 411, 219, 471, 432,
	812, 816, 810, 876, 811, 865, 866, 813, 923, 924,
	925, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	898, 806, 0, 814, 815, 0, 904, 913, 914, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 869, 187, 202,
	327, 928, 400, 261, 499, 479, 475, 792, 809, 236,
	820, 828, 0, 834, 842, 843, 855, 857, 858, 859,
	860, 877, 878, 880, 888, 890, 893, 895, 900, 910,
	931, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 868, 874, 338, 254, 273, 284, 883,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 864,
	892, 334, 449, 450, 280, 351, 0, 0, 917, 903,
	448, 0, 850, 920, 819, 838, 930, 841, 844, 885,
	798, 863, 369, 835, 791, 823, 794, 830, 795, 821,
	852, 244, 818, 905, 867, 919, 325, 241, 800, 824,
	383, 840, 193, 887, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 926, 329,
	873, 0, 433, 354, 0, 0, 0, 854, 909, 861,
	899, 849, 886, 808, 872, 921, 836, 882, 922, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 832, 879, 916, 833, 881,
	239, 285, 246, 238, 452, 927, 908, 0, 0, 934,
	918, 856, 0, 884, 0, 933, 793, 875, 0, 796,
	799, 929, 912, 827, 249, 0, 0, 0, 0, 0,
	0, 0, 853, 862, 896, 847, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 871, 0, 0, 0, 804,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 807, 0, 826, 897,
	0, 790, 268, 801, 355, 231, 0, 901, 911, 848,
	485, 915, 846, 845, 891, 805, 907, 839, 324, 803,
	293, 188, 205, 0, 837, 365, 406, 412, 906, 822,
	831, 229, 829, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 870, 889, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 802, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 817,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 902, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 789, 783, 782, 294, 331, 894,
	932, 378, 411, 219, 471, 432, 812, 816, 810, 876,
	811, 865, 866, 813, 923, 924, 925, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 898, 806, 0, 814,
	815, 0, 904, 913, 914, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 869, 187, 202, 327, 928, 400, 261,
	499, 479, 475, 792, 809, 236, 820, 828, 0, 834,
	842, 843, 855, 857, 858, 859, 860, 877, 878, 880,
	888, 890, 893, 895, 900, 910, 931, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 868,
	874, 338, 254, 273, 284, 883, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 864, 892, 334, 449, 450,
	280, 351, 0, 0, 917, 903, 448, 0, 850, 920,
	819, 838, 930, 841, 844, 885, 798, 863, 369, 835,
	791, 823, 794, 830, 795, 821, 852, 244, 818, 905,
	867, 919, 325, 241, 800, 824, 383, 840, 193, 887,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 926, 329, 873, 0, 433, 354,
	0, 0, 0, 854, 909, 861, 899, 849, 886, 808,
	872, 921, 836, 882, 922, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 832, 879, 916, 833, 881, 239, 285, 246, 238,
	452, 927, 908, 0, 0, 934, 918, 856, 0, 884,
	0, 933, 793, 875, 0, 796, 799, 929, 912, 827,
	249, 0, 0, 0, 0, 0, 0, 0, 853, 862,
	896, 847, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 871, 0, 0, 0, 804, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 807, 0, 826, 897, 0, 790, 268, 801,
	355, 231, 0, 901, 911, 848, 485, 915, 846, 845,
	891, 805, 907, 839, 324, 803, 293, 188, 205, 0,
	837, 365, 406, 412, 906, 822, 831, 229, 829, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 870,
	889, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 1325, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 802, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 817, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 902, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	789, 783, 782, 294, 331, 894, 932, 378, 411, 219,
	471, 432, 812, 816, 810, 876, 811, 865, 866, 813,
	923, 924, 925, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 898, 806, 0, 814, 815, 0, 904, 913,
	914, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 869,
	187, 202, 327, 928, 400, 261, 499, 479, 475, 792,
	809, 236, 820, 828, 0, 834, 842, 843, 855, 857,
	858, 859, 860, 877, 878, 880, 888, 890, 893, 895,
	900, 910, 931, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 868, 874, 338, 254, 273,
	284, 883, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 864, 892, 334, 449, 450, 280, 351, 0, 0,
	917, 903, 448, 0, 850, 920, 819, 838, 930, 841,
	844, 885, 798, 863, 369, 835, 791, 823, 794, 830,
	795, 821, 852, 244, 818, 905, 867, 919, 325, 241,
	800, 824, 383, 840, 193, 887, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	926, 329, 873, 0, 433, 354, 0, 0, 0, 854,
	909, 861, 899, 849, 886, 808, 872, 921, 836, 882,
	922, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 832, 879, 916,
	833, 881, 239, 285, 246, 238, 452, 927, 908, 0,
	0, 934, 918, 856, 0, 884, 0, 933, 793, 875,
	0, 796, 799, 929, 912, 827, 249, 0, 0, 0,
	0, 0, 0, 0, 853, 862, 896, 847, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 871, 0, 0,
	0, 804, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 807, 0,
	826, 897, 0, 790, 268, 801, 355, 231, 0, 901,
	911, 848, 485, 915, 846, 845, 891, 805, 907, 839,
	324, 803, 293, 188, 205, 0, 837, 365, 406, 412,
	906, 822, 831, 229, 829, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 870, 889, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 780, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 802, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 817, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 902, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 789, 783, 782, 294,
	331, 894, 932, 378, 411, 219, 471, 432, 812, 816,
	810, 876, 811, 865, 866, 813, 923, 924, 925, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 898, 806,
	0, 814, 815, 0, 904, 913, 914, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 869, 187, 202, 327, 928,
	400, 261, 499, 479, 475, 792, 809, 236, 820, 828,
	0, 834, 842, 843, 855, 857, 858, 859, 860, 877,
	878, 880, 888, 890, 893, 895, 900, 910, 931, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 868, 874, 338, 254, 273, 284, 883, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 864, 892, 334,
	449, 450, 280, 351, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 1709, 0, 602, 0, 0, 0, 244,
	607, 0, 0, 0, 325, 241, 0, 1710, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 614, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 87, 0, 0, 184, 185, 186,
	675, 682, 683, 684, 685, 686, 676, 678, 0, 0,
	217, 677, 224, 625, 627, 626, 633, 634, 635, 636,
	637, 638, 639, 623, 680, 687, 688, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 585, 599, 0, 613, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 769,
	0, 0, 0, 659, 0, 598, 0, 0, 606, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 658, 0, 0, 485, 0,
	0, 656, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 628, 629, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 665, 657, 618, 669, 620, 666,
	667, 615, 616, 619, 668, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 660, 605, 604, 0, 611, 612,
	0, 621, 622, 624, 630, 631, 632, 640, 642, 643,
	641, 644, 645, 646, 649, 650, 651, 652, 647, 648,
	653, 603, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 602, 0, 0, 0,
	244, 607, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 614, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 609, 610,
	0, 0, 0, 0, 0, 0, 1790, 0, 287, 226,
	192, 366, 434, 259, 0, 87, 0, 0, 184, 185,
	186, 675, 682, 683, 684, 685, 686, 676, 678, 0,
	0, 217, 677, 224, 625, 627, 626, 633, 634, 635,
	636, 637, 638, 639, 623, 680, 687, 688, 1791, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 585, 599, 0, 613,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	0, 0, 0, 0, 659, 0, 598, 0, 0, 606,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 658, 0, 0, 485,
	0, 0, 656, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 628, 629, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 665, 657, 618, 669, 620,
	666, 667, 615, 616, 619, 668, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 660, 605, 604, 0, 611,
	612, 0, 621, 622, 624, 630, 631, 632, 640, 642,
	643, 641, 644, 645, 646, 649, 650, 651, 652, 647,
	648, 653, 603, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 0, 334, 449, 450, 280,
	351, 0, 0, 0, 78, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 602, 0, 0, 0, 244, 607, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 614, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 87, 0, 0, 184, 185, 186, 675, 682, 683,
	684, 685, 686, 676, 678, 0, 0, 217, 677, 224,
	625, 627, 626, 633, 634, 635, 636, 637, 638, 639,
	623, 680, 687, 688, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 585, 599, 0, 613, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 597, 0, 0, 0, 0,
	659, 0, 598, 0, 0, 606, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 658, 0, 0, 485, 0, 0, 656, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 628, 629, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 665, 657, 618, 669, 620, 666, 667, 615, 616,
	619, 668, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 660, 605, 604, 0, 611, 612, 0, 621, 622,
	624, 630, 631, 632, 640, 642, 643, 641, 644, 645,
	646, 649, 650, 651, 652, 647, 648, 653, 603, 187,
	202, 327, 86, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 602, 0, 0, 0, 244, 607, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 614, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 87, 0, 0, 184, 185, 186, 675, 682,
	683, 684, 685, 686, 676, 678, 0, 0, 217, 677,
	224, 625, 627, 626, 633, 634, 635, 636, 637, 638,
	639, 623, 680, 687, 688, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 585, 599, 0, 613, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 597, 0, 0, 0,
	0, 659, 0, 598, 0, 0, 606, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 658, 0, 0, 485, 0, 0, 656,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 2809,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 628, 629, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 665, 657, 618, 669, 620, 666, 667, 615,
	616, 619, 668, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 660, 605, 604, 0, 611, 612, 0, 621,
	622, 624, 630, 631, 632, 640, 642, 643, 641, 644,
	645, 646, 649, 650, 651, 652, 647, 648, 653, 603,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 602, 0, 0, 0, 244, 607,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 614, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 87, 0, 1292, 184, 185, 186, 675,
	682, 683, 684, 685, 686, 676, 678, 0, 0, 217,
	677, 224, 625, 627, 626, 633, 634, 635, 636, 637,
	638, 639, 623, 680, 687, 688, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 585, 599, 0, 613, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 0, 0,
	0, 0, 659, 0, 598, 0, 0, 606, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 658, 0, 0, 485, 0, 0,
	656, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 628, 629, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 665, 657, 618, 669, 620, 666, 667,
	615, 616, 619, 668, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 660, 605, 604, 0, 611, 612, 0,
	621, 622, 624, 630, 631, 632, 640, 642, 643, 641,
	644, 645, 646, 649, 650, 651, 652, 647, 648, 653,
	603, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 602, 0, 0, 0, 244,
	607, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 614, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 87, 0, 0, 184, 185, 186,
	675, 682, 683, 684, 685, 686, 676, 678, 0, 0,
	217, 677, 224, 625, 627, 626, 633, 634, 635, 636,
	637, 638, 639, 623, 680, 687, 688, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 585, 599, 0, 613, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 769,
	0, 0, 0, 659, 0, 598, 0, 0, 606, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 658, 0, 0, 485, 0,
	0, 656, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 628, 629, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 665, 657, 618, 669, 620, 666,
	667, 615, 616, 619, 668, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 660, 605, 604, 0, 611, 612,
	0, 621, 622, 624, 630, 631, 632, 640, 642, 643,
	641, 644, 645, 646, 649, 650, 651, 652, 647, 648,
	653, 603, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 602, 0, 0, 0,
	244, 607, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 614, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 87, 0, 0, 184, 185,
	186, 675, 682, 683, 684, 685, 686, 676, 678, 0,
	0, 217, 677, 224, 625, 627, 626, 633, 634, 635,
	636, 637, 638, 639, 623, 680, 687, 688, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 585, 599, 0, 613,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	0, 0, 0, 0, 659, 0, 598, 0, 0, 606,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 658, 0, 0, 485,
	0, 0, 656, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 628, 629, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 665, 657, 618, 669, 620,
	666, 667, 615, 616, 619, 668, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 660, 605, 604, 0, 611,
	612, 0, 621, 622, 624, 630, 631, 632, 640, 642,
	643, 641, 644, 645, 646, 649, 650, 651, 652, 647,
	648, 653, 603, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 602, 0, 0,
	0, 244, 607, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 614, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 87, 0, 0, 184,
	185, 186, 675, 682, 683, 684, 685, 686, 676, 678,
	0, 0, 217, 677, 224, 625, 627, 626, 633, 634,
	635, 636, 637, 638, 639, 623, 680, 687, 688, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 599, 0,
	613, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 0, 0, 0, 0, 659, 0, 598, 0, 0,
	606, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 658, 0, 0,
	485, 0, 0, 656, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 628, 629, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 665, 657, 618, 669,
	620, 666, 667, 615, 616, 619, 668, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 660, 605, 604, 0,
	611, 612, 0, 621, 622, 624, 630, 631, 632, 640,
	642, 643, 641, 644, 645, 646, 649, 650, 651, 652,
	647, 648, 653, 603, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 682, 683, 0, 0, 0, 0,
	1627, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 982, 485, 0, 0, 0, 0, 0, 979, 980,
	324, 942, 293, 188, 205, 973, 977, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 1311, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 1313,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 1147, 0, 1148, 1149,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 1254, 1257, 0, 0,
	0, 0, 1253, 1256, 0, 0, 217, 1252, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	0, 334, 449, 450, 280, 351, 0, 0, 0, 78,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 86, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 0, 334, 449, 450,
	280, 351, 0, 0, 0, 78, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 87, 0, 1292, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 86, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 1731, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1486, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 1729, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 942, 293, 188,
	205, 940, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 1731, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 1292, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 2739, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 2036, 0,
	0, 0, 2037, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1336, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	351, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 2823,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 2739, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 1578,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 1458, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 1456, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	351, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 1454,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	1452, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 1450, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 1446, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 1444, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 1442, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 1419, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 1320, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1124, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	351, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 576,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 524, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 2828, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 2483,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	2032, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 87, 0, 334, 449, 450,
	280, 675, 682, 683, 684, 685, 686, 676, 678, 0,
	0, 0, 677, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2406, 2407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 669, 0,
	666, 667, 0, 0, 0, 668,
}

var yyPact = [...]int{
	5312, -1000, -407, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1946, 2005, -1000, -1000,
	-1000, -1000, 2104, -1000, 693, 1672, -1000, 1923, 2956, -1000,
	38669, 476, -1000, 37507, 475, 264, 38669, -1000, 134, -1000,
	123, 38669, 130, 36926, -1000, -1000, -282, 16000, 1867, 9,
	6, 38669, -1000, -1000, -1000, -1000, 2065, 1587, -1000, 325,
	-1000, -1000, -1000, -1000, -1000, -1000, 36345, -1000, -1000, -1000,
	1927, 1926, 2107, 607, 1875, -1000, 1994, 1587, -1000, 16000,
	2052, 1983, 15419, -1000, 15419, 377, -1000, -1000, 11923, -1000,
	-1000, 21239, 38669, 27049, 480, -1000, 1923, -1000, -1000, 350,
	-1000, 285, 1497, -1000, 1493, -1000, 597, 696, 308, 406,
	404, 306, 305, 296, 291, 290, 289, 287, 286, 319,
	-1000, 640, 640, -158, -161, 333, 311, 311, 311, 399,
	1899, 1896, -1000, 660, -1000, 640, 640, 347, 640, 640,
	640, 640, 250, 248, 640, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 282,
	1923, 232, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 38669, 242, 38669, -1000, 538, 38669, 761, 761,
	49, 761, 761, 761, 761, 117, 677, 4, -1000, 114,
	225, 108, 227, 752, 146, 170, -1000, -1000, 229, 752,
	1162, 616, 104, -1000, 761, 9579, 9579, 9579, -1000, 1920,
	-1000, -1000, -1000, -1000, -1000, -1000, 1091, -1000, 396, -1000,
	-1000, -1000, -1000, 38669, 35764, 301, 666, -1000, -1000, -1000,
	46, -1000, -1000, 1299, 853, 16000, 979, -1000, 1545, 565,
	-1000, -1000, -1000, -1000, -1000, 491, 16581, 16581, 16581, 16581,
	-1000, -1000, 1524, 1524, 1524, 1524, 16581, 1524, 16581, 1524,
	1524, 1524, 1524, 16000, 1524, 1524, 1524, -1000, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 532, 1524, 1524, 1524, 1524,
	1524, -1000, -1000, -1000, -1000, 1524, 1524, 1524, 1524, 1524,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18905,
	-1000, 13676, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 38669, -1000, 1524, 144, 38669, 38669, 307, 1994, 1587,
	-1000, 2065, 2036, 325, -1000, 2239, 1311, 1700, 952, 1587,
	1462, 38669, -1000, 1542, -1000, -1000, -1000, 1801, 1104, 1137,
	-1000, -1000, -1000, -1000, 1249, 16000, -1000, -1000, 2083, -1000,
	18324, 531, 823, 2082, 35183, -1000, 377, 377, 1491, 11337,
	-23, -1000, -1000, -1000, 664, 24725, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1607, 38669, -1000, -1000, 4585,
	1143, -1000, 1671, -1000, 1605, -1000, 1610, 16000, 1684, 472,
	1143, 444, 423, 408, -1000, -83, -1000, -1000, -1000, -1000,
	-1000, 640, 640, -1000, 314, 2051, 2956, 2882, -1000, -1000,
	-1000, 34602, 1668, 1143, -1000, 1667, -1000, 756, 461, 563,
	563, 1143, -1000, -1000, 38669, 1143, 754, 745, 38669, 38669,
	-1000, 34021, -1000, 33440, 32859, 1046, 38669, 32278, 31697, 31116,
	30535, 29954, -1000, 1815, -1000, 1751, -1000, -1000, -1000, 38669,
	38669, 38669, 329, -1000, -1000, 38669, 1143, -1000, -1000, 1037,
	1026, 640, 640, 1024, 1135, 1134, 1132, 640, 640, 1018,
	1129, 25887, 245, 1017, 1012, 997, 1040, 1127, 174, 1027,
	948, 995, 38669, 1665, 38669, -1000, 217, 638, 373, 663,
	1923, 1864, 1480, 394, 470, 1143, 360, 360, 38669, -1000,
	10165, -1000, -1000, 1123, 16000, -1000, 791, 752, 752, -1000,
	-1000, -1000, -1000, -1000, -1000, 761, 38669, 791, -1000, -1000,
	-1000, 752, 761, 38669, 761, 761, 761, 761, 752, 752,
	752, 761, 38669, 38669, 38669, 38669, 38669, 38669, 38669, 38669,
	38669, 9579, 9579, 9579, 616, 761, -286, -1000, 1122, -1000,
	1761, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	129, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-64, 1476, 29373, -1000, -288, -289, -294, -295, -1000, -1000,
	-1000, -297, -299, -1000, -1000, -1000, 16000, 16000, 16000, 16000,
	-191, -1000, 837, 16581, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 945, 725, 16581, 16581, 16581, 16581, 16581, 16581, 16581,
	16581, 16581, 16581, 16581, 16581, 16581, 16581, 16581, 888, 6428,
	6428, 565, 565, 565, 565, -1000, 15419, 16000, 16000, 565,
	-1000, 1143, 28792, 15419, 15419, 16000, 1913, 675, 853, 38669,
	-1000, 952, -1000, -1000, -1000, 1061, -1000, 38669, 38669, 31,
	16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000,
	16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000,
	16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000,
	12509, 10165, 15419, 15419, 15419, 15419, 15419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 530,
	1519, 1300, 1412, -1000, 1470, -1000, -139, 20658, 16000, 1119,
	2081, 1698, 38669, -1000, -1000, -1000, 1994, -1000, 1994, 1519,
	2192, 1799, 15419, -1000, -1000, 2192, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1205, -1000, 38669, 1462, 1978, 38669,
	1793, 1115, 383, -1000, 16000, 16000, 1458, -1000, 1177, 38669,
	-1000, -191, -1000, 28211, -1000, -1000, 8993, -1000, 38669, 274,
	38669, -1000, 22982, 27630, 10751, -23, -1000, 10751, 1407, -1000,
	-18, -29, 13090, 549, -1000, -1000, -1000, 333, 17743, 1264,
	549, 70, -1000, -1000, -1000, 1610, -1000, 1610, 1610, 1610,
	1610, 383, 383, 383, 383, -1000, -1000, -1000, -1000, -1000,
	1661, 1659, -1000, 1610, 1610, 1610, 1610, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1651, 1651, 1651, 1628, 1628, 349,
	-1000, 16000, 230, 27049, 1937, 992, 1362, 217, 371, 1696,
	1143, 1143, 1143, 371, -1000, 1528, 1512, -1000, -392, 1447,
	-1000, -1000, 2045, -1000, -1000, 700, 781, 769, 554, 38669,
	176, 267, -1000, 348, -1000, 27049, 1143, 732, 563, 1143,
	-1000, 1143, -1000, -1000, -1000, -1000, -1000, 1143, 1442, -1000,
	1517, 861, 768, 847, 764, 1442, -1000, -1000, -120, 1442,
	-1000, 1442, -1000, 1442, -1000, 1442, -1000, 1442, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 697, 38669, 176, 888,
	-1000, 391, -1000, -1000, 888, 888, -1000, -1000, -1000, -1000,
	1114, 1110, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -377,
	38669, -1000, 206, 651, 247, 295, 261, 38669, 168, 1981,
	213, 246, 38669, 38669, 360, 1759, 38669, 1959, 38669, -1000,
	-1000, -1000, -1000, -1000, 853, 38669, -1000, -1000, 761, 761,
	-1000, -1000, 38669, 761, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 761, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38669, 38669, -1000, -1000, -1000, -1000, -1000, 105, -20, 303,
	-1000, -1000, -1000, -1000, -1000, 1987, -1000, 853, 708, 711,
	-1000, 1524, -1000, -1000, 950, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 945, 16581, 16581, 16581, 1253, 417, 1663, 1500,
	890, 845, 845, 658, 658, 588, 588, 588, 588, 588,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1106, -1000,
	1504, -1000, 1355, 1065, 952, -1000, 1504, 1504, 1142, 15419,
	-1000, -1000, 712, -1000, 16000, 952, -1000, -1000, 952, 952,
	1439, 1431, 2074, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1164, 1362, 1362, 1362, 2166, 2135,
	952, 1299, 952, 1427, -1000, 2110, 1362, 2090, 2013, 1887,
	1313, 1881, 1863, 1846, 1362, 1362, 1362, 1088, 1826, 1795,
	1784, 1680, 1676, 1669, 1637, 1593, 1585, 1362, 952, 15419,
	15419, 1409, 1524, 529, -1000, 1504, 952, 952, 1504, 1504,
	10165, 952, -1000, 38669, -1000, -277, -1000, -40, 520, 1524,
	-1000, 25887, 952, -1000, 6266, -1000, 39831, -1000, -1000, -1000,
	-1000, -1000, 24144, 1697, 2192, -1000, -1000, 1524, 1603, -1000,
	-1000, 383, 55, 23563, -1000, -1000, 853, 853, 16000, -1000,
	-1000, -1000, -1000, -1000, -1000, 528, 2066, 300, 1524, -1000,
	1350, 1872, -1000, -1000, -1000, 1968, 19491, -1000, 1524, 38669,
	1662, 1386, -1000, 526, -1000, 1407, -23, -44, -1000, -1000,
	-1000, -1000, 853, -1000, 1420, 284, 304, -1000, 351, -1000,
	-1000, -1000, -1000, 1873, 54, -1000, -1000, -1000, 383, 383,
	-1000, -1000, -1000, -1000, -1000, -1000, 1099, 1099, -1000, -1000,
	-1000, -1000, -1000, 989, -1000, -1000, -1000, 984, -1000, -1000,
	1580, 1756, 230, -1000, -1000, 640, 1096, 1885, 38669, -1000,
	-1000, 1233, 1937, 206, 38669, 688, 1755, -1000, 1696, 1696,
	1696, 38669, -1000, -1000, -1000, -1000, -382, 61, 335, -1000,
	-1000, -1000, 459, 38669, 1563, -1000, 169, -1000, 1219, -1000,
	38669, -1000, 1539, 1646, 1143, 1143, -1000, -1000, -1000, 38669,
	1524, -1000, -1000, -1000, -1000, 446, 1922, 1915, 176, 169,
	549, 1143, -1000, -1000, -1000, -1000, -1000, -385, 1525, 405,
	197, 278, 38669, 38669, 38669, 38669, 38669, 505, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 235, 380, -1000, 38669,
	38669, 521, -1000, -1000, -1000, 752, -1000, -1000, 752, -1000,
	-1000, -1000, -1000, -1000, 1917, 38669, -21, -352, -1000, -347,
	16000, -1000, -1000, -1000, -1000, 1126, 415, 1663, 16581, 16581,
	15419, -115, 1317, 1317, 888, -1000, -1000, -1000, 16000, 16000,
	1318, 670, -1000, 16000, 830, -1000, -1000, -1000, 16000, 16000,
	16000, 952, 255, -1000, -1000, -1000, 16000, 16000, -1000, -1000,
	16000, 16000, -1000, 16000, 16000, 17162, 952, 17162, 16000, 16000,
	17162, -1000, -1000, -1000, -1000, 17162, 16000, 16000, 16000, 16000,
	16000, 16000, 16000, 16000, 16000, -1000, -1000, 1504, 1504, 15419,
	10165, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 520, -1000, 563, 563, 563, 38669, -1000, -1000, -1000,
	-1000, -1000, -1000, 1392, 2006, -1000, 1821, 1820, 2071, 2066,
	-1000, 22982, 2192, -1000, -1000, 38669, -271, -1000, 1851, 1854,
	-1000, -1000, -1000, -1000, 8407, 1994, 16000, 1753, 38669, 1524,
	-1000, 20077, 38669, 38669, 22982, 22982, 22982, 22982, 22982, -1000,
	1788, 1776, -1000, 1785, 1772, 1797, 38669, -1000, 1499, 952,
	2036, 19491, 16000, 21820, 1293, 22982, -1000, -1000, 22982, 38669,
	7821, -1000, -1000, -30, -47, -1000, -1000, -1000, -1000, 333,
	-1000, -1000, 1518, 1965, 1882, -1000, -1000, -1000, -1000, 1474,
	-1000, 1444, 1371, 1435, 160, -1000, 1681, 1914, 640, 640,
	-1000, 969, -1000, 1143, -1000, -1000, -1000, 384, -1000, 1956,
	38669, 1741, 1737, 1726, -1000, -401, 968, 1645, 1679, 16000,
	1636, 2042, 1333, 38669, -1000, -1000, 38669, -1000, 143, -1000,
	230, 38669, -1000, -1000, -1000, 267, 38669, -1000, 5963, 169,
	-1000, -1000, -1000, -1000, -1000, -1000, 38669, 207, -1000, 1631,
	1064, -1000, -1000, 1683, -1000, -1000, -1000, -1000, 147, 244,
	-1000, 38669, 519, 1756, 38669, -1000, -1000, -1000, 761, 761,
	-1000, -1000, 1902, -1000, 1143, 1362, 16581, 16581, -1000, 565,
	-1000, 1524, 952, 1610, 1610, -1000, 1610, 1628, -1000, 1610,
	120, 1610, 119, 1610, -1000, -1000, 952, 952, 1078, 953,
	-92, -1000, 853, 16000, 1553, 1510, 1362, -1000, 1597, 1589,
	1362, 1362, -1000, 853, 1313, 1473, 1305, -1000, -1000, -1000,
	-1000, 1360, 1362, 1446, -269, 952, 1433, 1433, 1433, 1433,
	1433, 1412, 1412, 1412, 1412, -1000, -1000, 952, -1000, -1000,
	1986, 1986, 1986, 1365, 39250, 38669, -1000, -1000, -1000, -1000,
	2066, 2058, 1339, -1000, -1000, 55, 374, -1000, 1840, 1854,
	-1000, 2041, 1847, 2034, -1000, -1000, -1000, 853, -1000, 1932,
	1262, -1000, 648, 1291, -1000, -1000, 14838, 1374, 1816, 523,
	1365, 1289, 1872, 1691, 1724, 2285, -1000, -1000, -1000, -1000,
	1774, -1000, 1720, -1000, -1000, 1542, -1000, -1000, 1300, 1419,
	274, 22982, 1260, 1260, -1000, 516, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 807, 40330, 2101, -1000, 1095, -1000, 1279,
	-1000, 729, 726, -1000, 38669, 1568, -1000, 383, 1090, 383,
	947, -1000, 940, -1000, -1000, -206, -1000, -1000, 1710, 1727,
	-1000, -1000, 38669, -1000, -1000, 38669, 38669, 38669, 1566, 2032,
	-1000, 16000, 1561, 641, 1372, 38669, 38669, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 397, 640, -367,
	243, 241, 640, 640, 640, -1000, -1000, 1353, 1342, -1000,
	-159, -1000, 16000, -1000, -1000, -1000, 1043, 1043, -1000, 1542,
	-1000, -1000, -1000, 1185, -1000, -1000, -127, 38669, 38669, 38669,
	38669, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 565, 16581, -1000, -1000, 383, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 16000, -1000, 16000, -1000, 1994,
	1086, 853, 16000, 16000, -1000, 937, 919, -1000, -1000, 952,
	17162, -1000, 17162, -1000, 16000, 226, 1317, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1524, 1910,
	1524, 1524, 21820, -1000, -1000, 2058, 2015, 2031, 1829, 1832,
	1832, 1840, -1000, 2030, 2029, -1000, 1074, 2025, 1071, 698,
	-1000, 38669, 16000, 1524, -1000, 302, 38669, 1524, 38669, -1000,
	2055, -1000, -1000, 16000, 1555, -1000, 16000, -1000, -1000, -1000,
	-1000, -1000, 6428, 2066, 1260, -1000, -1000, 594, -1000, 16000,
	-1000, -1000, -1000, 4614, -1000, -1000, -1000, -1000, -1000, 1550,
	16000, -1000, -1000, -1000, 1180, 1175, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1542, -1000, -1000, -1000, -1000, 267,
	-394, 1368, 38669, 902, -1000, 1335, 1333, 258, 1524, 1070,
	640, 640, 640, 889, 887, 25887, 318, -1000, 267, -1000,
	-167, -172, 1362, -1000, -1000, 1962, -1000, -1000, 10165, -1000,
	-1000, 1537, 1688, -1000, 239, -1000, 1362, 1362, 952, -1000,
	1362, 1362, 1168, 1131, -1000, 1305, -1000, 834, -1000, 226,
	952, 1718, -1000, -1000, 6428, -1000, 22401, -1000, 2014, 1999,
	26468, 26468, 520, 2015, -1000, 16000, 16000, 1818, 942, -1000,
	-1000, -1000, -1000, 1069, 1062, -1000, 1058, -1000, 2098, -1000,
	853, -1000, 1524, -1000, 497, 1291, -1000, 1994, 853, 38669,
	853, 27, 2055, -1000, 1362, -1000, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 38669, 1226, -1000, -1000, 1961,
	1278, 58, -1000, 1270, -1000, -1000, 451, -1000, 16000, -1000,
	25887, 1053, 981, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 325, 1309, -1000, 628, 38669, 38669, 952, 270, -131,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16000,
	-1000, 952, 1709, -1000, -221, -1000, 1267, -1000, -1000, -1000,
	-1000, -1000, 1267, 1267, -1000, -1000, 853, 1299, -1000, 915,
	-1000, -1000, -1000, -1000, -1000, 38669, 1291, 38669, -1000, 1256,
	952, 1524, 1994, -1000, 1240, -1000, 325, -1000, 1502, 1679,
	-1000, -1000, -1000, 14257, -1000, -1000, -1000, -1000, -122, 10165,
	7235, 1229, -1000, -1000, 1714, -118, -144, 1313, -1000, -309,
	-1000, -1000, 25306, -1000, -1000, -1000, -1000, -1000, 1287, -1000,
	-1000, 21820, 38088, -1000, 1708, 831, -122, 16000, 1369, 952,
	-1000, -9, -1000, -1000, -1000, -1000, -1000, 1683, -1000, 1712,
	-1000, 952, -1000, -1000, -1000, 1215, -1000, 3727, -235, 1703,
	1702, 2080, -1000, -1000, -1000, 792, 839, -1000, -1000, -1000,
	-1000, 1173, 38669, -1000, 327, -1000, -1000, -127, -128, -1000,
	-1000, 38088, -228, 549, 6428, -1000, -1000, 2096, -1000, 2087,
	552, 552, -1000, -1000, -404, 1208, 208, -1000, -142, -1000,
	-1000, 1951, 27, -1000, -1000, -1000, 326, 896, -1000, -1000,
	864, -404, -1000, -152, -238, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6428, 204, 204, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2465, 2463, 21, 4, 2462, 2461, 2460, 39, 92,
	176, 30, 179, 98, 2459, 2456, 2455, 2454, 2453, 2452,
	2451, 241, 240, 238, 2450, 2449, 2448, 2444, 2443, 2442,
	2440, 2436, 2435, 2434, 236, 159, 173, 2433, 2432, 2431,
	111, 185, 83, 85, 169, 2430, 2429, 76, 2428, 2427,
	2426, 166, 165, 763, 2425, 199, 107, 45, 2424, 2423,
	2422, 2417, 2416, 2414, 2413, 2412, 2411, 2410, 2409, 2408,
	2407, 2406, 2405, 2404, 2403, 248, 2402, 2401, 20, 2399,
	78, 2398, 2397, 2394, 126, 2393, 2392, 2385, 2384, 2383,
	2380, 2379, 140, 2378, 2375, 2374, 2373, 175, 2371, 2370,
	150, 118, 101, 2369, 2365, 103, 170, 2364, 122, 2356,
	2348, 2347, 149, 2346, 4430, 2344, 65, 60, 2343, 71,
	91, 53, 50, 14, 5, 2342, 2341, 61, 82, 2339,
	95, 67, 2338, 100, 97, 2335, 2334, 12, 7, 2333,
	6, 1, 2, 66, 2332, 2331, 110, 2327, 2325, 2324,
	93, 2319, 2318, 4743, 2317, 90, 129, 105, 74, 2316,
	35, 58, 2315, 2314, 2313, 2312, 2311, 41, 2308, 2307,
	2305, 139, 34, 162, 26, 63, 37, 131, 2299, 147,
	79, 2297, 138, 2296, 2295, 44, 32, 31, 2290, 27,
	130, 120, 55, 94, 142, 2286, 2285, 48, 73, 2284,
	2283, 2282, 2280, 2278, 2275, 70, 2271, 43, 2268, 202,
	2264, 10, 2258, 75, 25, 2251, 69, 115, 68, 23,
	2250, 160, 2249, 46, 154, 128, 158, 2248, 2247, 2246,
	171, 275, 2243, 2241, 84, 164, 143, 146, 2236, 276,
	2235, 2234, 88, 1501, 1735, 24, 157, 2231, 2229, 3222,
	136, 38, 28, 2227, 189, 2226, 2223, 2220, 177, 161,
	123, 963, 47, 2218, 2217, 18, 2214, 2213, 2210, 2209,
	2208, 2207, 116, 2205, 2204, 2203, 181, 89, 9, 155,
	80, 2200, 2199, 2198, 125, 96, 2197, 153, 152, 134,
	163, 2194, 174, 141, 108, 2193, 52, 2192, 2191, 2190,
	2184, 2183, 86, 2181, 2177, 2173, 2161, 151, 148, 124,
	81, 2159, 77, 121, 145, 144, 33, 2158, 36, 2155,
	2151, 2150, 168, 29, 2149, 11, 49, 59, 19, 99,
	106, 2141, 0, 2140, 16, 167, 279, 156, 2137, 2136,
	8, 13, 15, 2132, 2130, 135, 2129, 2126, 2125, 22,
	42, 17, 3, 2122, 2120, 4028, 3163, 127, 2102, 182,
}

//line sql.y:6713
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 353, 354, 354, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 332, 332,
	332, 335, 335, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 82, 82, 22, 23, 23, 23, 23,
	357, 357, 148, 148, 146, 146, 147, 147, 216, 216,
	24, 25, 25, 226, 226, 225, 225, 225, 227, 227,
	227, 227, 261, 261, 26, 26, 26, 26, 26, 98,
	98, 334, 334, 333, 325, 325, 324, 324, 323, 331,
	331, 330, 330, 329, 38, 39, 48, 48, 48, 48,
	49, 50, 336, 336, 298, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 300, 300, 286,
	286, 299, 299, 299, 299, 299, 299, 299, 285, 285,
	109, 109, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 348, 348, 196, 196, 196, 196, 196,
	196, 118, 118, 127, 127, 127, 127, 127, 116, 116,
	117, 115, 115, 115, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 126, 126, 122,
	122, 122, 123, 123, 123, 124, 124, 349, 349, 349,
	349, 265, 265, 265, 265, 268, 268, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 267, 267, 267, 267,
	267, 269, 269, 269, 269, 269, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 271, 271, 271, 271, 271, 271, 271, 271, 284,
	284, 272, 272, 279, 279, 280, 280, 280, 281, 281,
	281, 282, 282, 277, 277, 277, 277, 277, 277, 278,
	278, 278, 287, 312, 312, 311, 311, 309, 309, 309,
	309, 296, 296, 306, 306, 306, 306, 306, 295, 295,
	291, 291, 291, 292, 292, 293, 293, 290, 290, 294,
	294, 308, 308, 307, 307, 288, 288, 289, 289, 314,
	350, 350, 350, 350, 350, 351, 351, 315, 341, 342,
	340, 340, 340, 340, 340, 80, 80, 80, 238, 238,
	238, 304, 304, 303, 303, 303, 305, 305, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 233, 233, 233, 339,
	339, 339, 339, 339, 339, 338, 338, 338, 301, 301,
	301, 337, 337, 56, 56, 180, 180, 45, 45, 45,
	45, 45, 45, 44, 44, 44, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 46,
	46, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	84, 84, 85, 85, 85, 85, 87, 87, 87, 317,
	317, 57, 57, 3, 3, 136, 138, 139, 139, 137,
	137, 137, 137, 137, 137, 60, 60, 59, 59, 141,
	140, 142, 142, 142, 1, 1, 2, 2, 4, 4,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 283, 283, 283, 316, 316, 318, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 320, 320, 320,
	58, 58, 321, 273, 274, 275, 5, 6, 297, 319,
	94, 94, 28, 37, 37, 29, 29, 29, 29, 30,
	30, 61, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	343, 343, 232, 232, 240, 240, 231, 231, 254, 254,
	254, 234, 234, 234, 235, 235, 347, 347, 347, 63,
	63, 63, 65, 65, 66, 67, 67, 256, 256, 257,
	257, 68, 69, 81, 81, 81, 81, 81, 81, 83,
	83, 83, 15, 15, 15, 15, 77, 77, 77, 14,
	14, 64, 64, 71, 344, 344, 345, 346, 346, 346,
	346, 72, 74, 31, 31, 31, 31, 31, 31, 104,
	104, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 99, 99, 99, 93, 93, 358, 75,
	76, 76, 97, 97, 97, 90, 90, 90, 96, 96,
	96, 16, 16, 17, 215, 215, 18, 18, 101, 101,
	103, 103, 103, 103, 103, 105, 105, 105, 105, 105,
	105, 105, 100, 100, 102, 102, 102, 102, 247, 247,
	247, 246, 246, 130, 130, 132, 131, 131, 133, 133,
	134, 134, 134, 134, 178, 156, 156, 213, 213, 211,
	211, 212, 212, 214, 214, 214, 214, 217, 217, 135,
	135, 135, 135, 143, 143, 144, 144, 145, 145, 255,
	255, 252, 252, 252, 251, 251, 149, 149, 149, 151,
	150, 150, 150, 150, 152, 152, 154, 154, 153, 153,
	155, 160, 160, 159, 159, 157, 157, 157, 157, 158,
	158, 158, 158, 161, 161, 114, 114, 114, 114, 114,
	114, 114, 125, 125, 125, 125, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 229, 229, 162, 162, 170, 170, 170,
	170, 163, 163, 163, 163, 163, 163, 163, 171, 171,
	171, 177, 172, 172, 168, 168, 168, 168, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 263, 263, 328, 328, 327, 327, 326, 326, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	359, 359, 276, 276, 276, 276, 169, 169, 169, 169,
	169, 95, 95, 95, 95, 95, 260, 260, 260, 264,
	264, 264, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 183, 183, 91,
	91, 181, 181, 182, 184, 184, 179, 179, 179, 165,
	165, 165, 185, 185, 186, 186, 187, 187, 189, 188,
	188, 190, 191, 191, 191, 192, 192, 193, 193, 193,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 106, 106, 106, 106, 108, 108, 107, 107,
	78, 78, 79, 79, 79, 112, 112, 113, 113, 113,
	110, 110, 111, 111, 209, 209, 194, 194, 194, 201,
	201, 201, 197, 197, 199, 199, 199, 200, 200, 200,
	198, 206, 206, 208, 208, 207, 207, 203, 203, 204,
	204, 205, 205, 205, 202, 202, 164, 164, 164, 164,
	164, 210, 210, 210, 210, 218, 218, 174, 174, 176,
	176, 175, 129, 219, 219, 223, 220, 220, 224, 224,
	224, 224, 224, 221, 221, 222, 222, 248, 248, 248,
	228, 228, 239, 239, 236, 236, 237, 237, 230, 230,
	241, 241, 241, 73, 173, 173, 313, 313, 310, 244,
	244, 245, 245, 249, 249, 253, 253, 250, 250, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 355, 356,
	258, 259, 259, 259,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 3, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 5, 5, 6, 4, 4,
	8, 6, 8, 6, 8, 5, 4, 2, 2, 1,
	2, 2, 2, 8, 8, 6, 5, 4, 4, 4,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 0, 2, 0, 2, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -353, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -82, -33, 32, -38, -48, 215, -49, -39, 216,
	-50, 218, 217, 254, 219, 247, 74, 296, 297, 299,
	300, 301, 302, -83, 252, 253, 221, 36, 45, 33,
	34, 37, 225, 260, 261, 224, -10, -34, 8, -355,
	11, 425, 249, 248, 28, -12, 456, 85, -354, 590,
	-209, -194, 22, 33, 29, -193, -189, -97, -194, 20,
	18, 7, -75, -358, -75, -75, 12, 13, -75, -298,
	-300, 85, 152, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -322, -44, -41, 220, 217, 264, 119,
	120, 254, 255, 256, 219, 238, 253, 257, 252, 273,
	-40, 80, 33, 456, 459, -305, 216, 222, 223, 426,
	122, 121, 75, 218, -302, 350, 560, -55, 562, 101,
	103, 561, 44, 228, 563, 564, 565, 566, 237, 567,
	568, 569, 570, 576, 577, 578, 579, 123, 7, -75,
	-253, -249, -332, -243, 88, 89, 90, 453, 240, 486,
	487, 289, 80, 41, 347, 350, 560, 296, 310, 304,
	331, 323, 454, 488, 292, 241, 277, 557, 321, 128,
	562, 295, 489, 255, 355, 356, 357, 101, 299, 392,
	575, 294, 490, 573, 103, 561, 79, 51, 44, 250,
	319, 224, 315, 563, 278, 491, 464, 271, 122, 119,
	582, 36, 313, 50, 30, 572, 121, 49, 564, 143,
	492, 565, 359, 338, 551, 48, 360, 256, 493, 83,
	261, 458, 559, 361, 314, 362, 288, 571, 221, 494,
	543, 363, 364, 552, 495, 339, 343, 496, 384, 365,
	589, 52, 497, 498, 553, 120, 499, 78, 566, 308,
	309, 500, 286, 239, 386, 335, 435, 442, 443, 107,
	108, 438, 109, 444, 110, 445, 446, 447, 436, 111,
	104, 437, 448, 449, 336, 337, 112, 450, 106, 105,
	439, 441, 113, 451, 237, 35, 366, 455, 290, 58,
	265, 387, 46, 341, 586, 45, 547, 501, 550, 334,
	330, 53, 502, 503, 504, 505, 567, 333, 307, 329,
	581, 4, 283, 568, 62, 223, 345, 344, 346, 272,
	383, 326, 506, 507, 508, 244, 81, 509, 316, 21,
	510, 511, 367, 279, 512, 56, 513, 514, 390, 253,
	515, 54, 569, 39, 258, 583, 570, 516, 517, 518,
	519, 260, 520, 369, 521, 368, 340, 342, 267, 370,
	457, 522, 312, 257, 574, 523, 245, 558, 259, 264,
	252, 391, 246, 524, 525, 526, 527, 528, 293, 542,
	529, 530, 300, 576, 43, 531, 532, 533, 534, 287,
	282, 385, 394, 61, 82, 352, 535, 556, 306, 280,
	536, 297, 55, 577, 578, 579, 274, 580, 9, 587,
	588, 372, 123, 284, 285, 47, 327, 266, 537, 538,
	317, 318, 332, 305, 328, 298, 544, 268, 373, 254,
	539, 393, 281, 348, 353, 461, 273, 374, 555, 460,
	325, 322, 275, 540, 375, 229, 269, 270, 541, 545,
	376, 377, 291, 378, 379, 380, 381, 382, 276, 459,
	303, 320, 354, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 434, 227, -75, 227, -153, -249, 227, -221, 356,
	-240, 358, 371, 366, 376, 364, -232, 367, 369, 267,
	-347, 384, 227, 373, 215, 169, 359, 368, 377, 378,
	291, 379, 382, 276, -343, -332, 565, 580, 128, 324,
	363, 361, 385, 547, 381, 380, -249, 298, -256, 303,
	-244, -332, -243, 301, -153, -81, 543, 219, -258, -258,
	-99, 547, 549, -172, -114, 136, -125, -128, -119, -120,
	-166, -167, -168, -169, -126, -179, 158, 159, 166, 137,
	-177, -129, 26, 452, 427, 426, 169, 31, 211, 68,
	69, 429, 430, 139, 57, 402, 403, -127, 397, 404,
	399, 432, 433, 114, 434, 104, 106, 105, 336, 337,
	435, 436, 437, 107, 108, 109, 110, 111, 112, 113,
	438, 441, 439, 440, 442, 443, 444, 449, 450, 445,
	446, 447, 448, 451, -244, -249, 232, 396, 226, 164,
	425, -121, -117, -8, -175, 395, 400, 401, 405, 398,
	-332, -243, -123, -122, -162, 91, 97, 102, 98, -352,
	115, -355, 92, 93, 94, 95, 96, 116, 117, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	44, 372, 372, -153, -75, -75, -75, -75, -187, -97,
	-189, -10, -8, -355, 8, -75, -8, -9, -13, -34,
	-36, 482, -35, -249, -194, -209, 12, 154, 42, 50,
	-192, -193, -12, -8, -114, 19, 23, 24, -102, 160,
	-114, -249, -76, -102, -230, 231, -75, -75, -220, -261,
	298, -224, 385, 384, -245, -222, -244, -242, -221, 383,
	220, 23, 462, 135, 25, 27, 138, 169, 19, 139,
	37, 222, 324, 238, 168, 234, 426, 215, 72, 463,
	397, 399, 395, 402, 428, 429, 396, 358, 31, 13,
	465, 28, 248, 24, 38, 162, 217, 142, 466, 251,
	26, 249, 114, 117, 468, 22, 75, 243, 14, 236,
	40, 16, 469, 470, 17, 232, 231, 154, 228, 70,
	11, 211, 29, 151, 66, 471, 130, 472, 473, 474,
	475, 68, 152, 20, 584, 400, 401, 33, 548, 452,
	262, 164, 73, 59, 549, 136, 398, 476, 477, 115,
	478, 118, 76, 554, 132, 18, 71, 42, 479, 263,
	480, 233, 585, 481, 388, 482, 153, 218, 425, 69,
	483, 226, 371, 8, 431, 32, 247, 235, 125, 67,
	484, 227, 141, 432, 433, 230, 116, 7, 129, 34,
	12, 74, 77, 403, 404, 405, 57, 124, 456, 140,
	15, 485, 389, 134, 128, -299, 152, -285, -289, -244,
	242, -315, 238, -153, -308, -307, -244, -355, -98, -239,
	228, 236, 235, 129, -336, 132, 284, 396, 226, -51,
	-52, -221, 168, -84, 259, 263, 86, 86, -289, -288,
	-287, -337, 263, 242, -314, -306, 234, 243, -295, 235,
	236, -290, 228, 130, -337, -290, 233, 243, 263, 263,
	123, 263, 123, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 258, -296, 144, -296, 460, 460, -302, -337,
	-337, -337, 230, 35, 35, -241, -290, 230, 25, -296,
	-296, -221, 168, -296, -296, -296, -296, 271, 271, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, -296, 227, -336, -106, 382, 291, 80,
	-53, 273, -37, -153, -239, 228, 229, -336, 260, -153,
	212, -153, -234, 152, 15, -234, -231, 372, 370, 357,
	362, -234, -234, -234, -234, 274, 355, -291, 228, 35,
	239, 372, 274, 355, 274, 275, 274, 275, 365, 375,
	274, -254, 14, 154, 396, 360, 364, 267, 227, 268,
	229, 374, -332, 550, 275, -254, 92, -235, 152, 372,
	270, -234, -259, -355, -245, 324, -259, -259, 32, 89,
	230, -244, -77, -244, 92, -15, -11, -22, -21, -23,
	144, -104, 372, -92, 169, 565, 551, 552, 553, 550,
	369, 558, 556, 554, 274, 555, 86, 132, 134, 135,
	4, -114, 151, -163, 144, 145, 146, 147, 148, 149,
	150, 154, 136, 138, 152, 153, 133, 155, 156, 157,
	158, 159, 160, 161, 163, 162, 164, 165, 168, 213,
	214, -120, -120, -120, -120, -177, -355, -355, -355, -120,
	-229, -355, -120, -355, -355, -355, -355, -183, -114, -355,
	-359, -355, -359, -359, -276, -355, -276, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, 212, -355, -355, -355, -355, -355, -276, -276, -276,
	-276, -276, 102, 97, 91, -179, 98, 92, -244, -249,
	-8, -9, -172, -258, -344, -345, -156, -153, -355, 291,
	-244, -244, 260, -192, -12, -8, -187, -193, -189, -8,
	-75, -90, -103, 63, 64, -105, 24, 38, 67, 65,
	23, -356, 87, -356, -209, -356, 86, -36, -213, 85,
	61, 43, 92, 92, 86, 21, -188, -190, -114, 14,
	-247, 4, -246, 25, -244, 92, 212, 100, 14, -154,
	29, -153, -230, -230, 86, 298, -224, -261, -226, -225,
	386, 388, 144, -248, -244, 92, 31, 87, 86, -153,
	-265, -268, -270, -269, -271, -266, -267, 321, 322, 169,
	325, 327, 328, 329, 330, 331, 332, 333, 334, 335,
	338, 32, 250, 317, 318, 319, 320, 339, 340, 341,
	342, 343, 344, 345, 346, 304, 323, 454, 305, 306,
	307, 308, 309, 310, 312, 313, 314, 315, 316, -335,
	-332, 85, 87, 86, -272, 85, -114, -106, 227, -332,
	228, 228, 228, -75, 425, -296, -296, 258, 19, -44,
	-41, -322, 18, -40, -41, 220, 119, 120, 217, 85,
	-285, 85, -294, -335, -332, 85, 130, 233, 129, -293,
	-290, -293, -294, -332, -179, -332, 130, 130, -217, -244,
	-217, -217, 23, -217, 23, -217, 23, 94, -244, -217,
	23, -217, 23, -217, 23, -217, 23, -217, 23, 31,
	78, 79, 31, 81, 82, 83, -179, -179, -285, -221,
	-153, -332, 94, 94, -296, -296, 94, 92, 92, 92,
	-296, -296, 94, 92, -251, -249, 92, -338, 244, 288,
	290, 94, 94, 94, 94, 31, 92, -339, 31, 572,
	571, 573, 574, 575, 94, 31, 94, 31, 94, -244,
	85, -153, -112, 278, 215, 217, 220, 76, 92, 292,
	144, 44, 86, 230, 227, -332, -236, 232, -236, -244,
	-250, -249, -242, 92, -114, -292, 14, 154, -254, -254,
	-234, -153, -292, -254, -234, -153, -234, -234, -234, -234,
	-254, -254, -254, -234, -249, -249, -153, -153, -153, -153,
	-153, -153, -153, -259, -259, -259, -235, -234, 550, 92,
	76, -257, 301, 335, 544, 545, 546, 86, 456, -146,
	-153, 550, 550, 550, 550, 550, 550, -114, -114, -114,
	-114, 478, -170, 115, 136, 116, 117, -128, -171, -175,
	-177, 99, 154, 138, 152, 153, -119, -120, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -260, -332, 92, 169, -124, -123, 98, -352, -124,
	-100, -102, -114, -114, -332, -244, -100, -100, -114, -96,
	24, 38, -181, -182, 140, -179, -356, -356, 94, 98,
	-244, -244, -89, -88, 407, 408, 409, 410, 412, 413,
	414, 417, 418, 422, 423, 406, 424, 411, 416, 419,
	420, 421, 415, 320, -114, -114, -114, -114, -114, -114,
	-173, -172, -331, -330, -329, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -101, 24,
	38, -100, -245, -250, -242, -100, -101, -101, -100, -100,
	212, -209, -356, 86, -346, 388, 389, 548, -252, 263,
	-251, 25, -173, 92, 14, -215, 77, -244, -192, -192,
	63, 64, 59, -100, -105, -356, -35, 25, -211, -244,
	62, 92, -277, -221, 347, 348, -114, -114, 86, -191,
	27, 28, -153, -246, 160, -250, -153, -216, 263, -153,
	-131, -133, -134, -135, -156, -178, -355, -136, 471, 14,
	-146, -147, -155, -249, -224, -226, 86, 387, 389, 390,
	76, 118, -114, -278, 168, -304, -303, -302, -285, -287,
	-288, -289, 87, -278, -281, 353, 352, -272, -272, -272,
	-272, -272, -277, -277, -277, -277, 85, 85, -272, -272,
	-272, -272, -279, 85, -279, -279, -280, 85, -280, -315,
	-114, -312, -311, -309, -310, 237, 101, 456, 77, -307,
	-191, 94, -356, -112, -237, 232, -313, -310, -332, -332,
	-332, -237, -332, 92, -332, 92, -85, -57, -1, 584,
	585, 586, 86, 19, -286, -285, -56, 288, -318, -319,
	263, -314, -308, -294, 130, -293, -294, -294, -332, 86,
	29, 123, 123, 123, 123, 456, 217, 32, -285, -56,
	-260, 230, -260, -260, 92, 92, -233, 580, -146, -108,
	280, 144, 269, 269, 227, 227, 282, -153, 293, 295,
	294, 292, 23, 281, 283, 285, 271, -153, -153, -236,
	76, -148, -153, 26, -249, -153, -234, -234, -153, -234,
	-234, -153, -244, -92, 388, 86, 456, 22, -93, 22,
	-355, 115, 116, 117, -171, -119, -120, -119, 135, 251,
	86, -356, 25, 86, 77, -356, -356, -356, 86, 14,
	-100, -184, -182, 142, -114, -356, -356, -356, 86, 86,
	14, -264, 25, -356, -356, -356, 86, 86, -356, -356,
	86, 86, -356, 86, 86, 86, -328, 86, 86, 86,
	86, -356, -356, -356, -356, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, -356, -356, -100, -100, -355,
	212, -356, -356, -356, -356, -356, -245, -345, 547, 389,
	-160, -159, -157, 74, 231, 75, -355, -251, -356, -124,
	89, -212, 89, -211, -165, -244, 94, 98, -194, -130,
	-132, 14, -105, -177, 87, 86, -277, -198, -203, -231,
	-244, 92, 169, -190, 212, -161, 15, -164, 32, 57,
	-11, -355, -355, 32, 86, -149, -151, -150, -152, 66,
	70, 72, 67, 68, 69, 73, -255, 25, -131, -9,
	-8, -355, -355, -153, -146, -357, 14, 77, -357, 86,
	212, -225, -227, 391, 388, 394, -332, 92, -84, 86,
	-302, -289, -195, -109, 40, -282, 354, -277, -277, -284,
	92, -284, 94, 94, 87, -47, -42, -43, 33, 80,
	-309, -296, 92, 39, -244, 87, -191, -108, -153, 136,
	76, -313, -313, -313, -249, -2, 583, 589, 130, 85,
	357, 18, -211, 86, 87, -180, 289, 87, -86, -244,
	87, 85, -294, -294, -244, -355, 227, 31, 31, -56,
	-180, -278, -332, 582, 581, 87, 229, 287, -113, 402,
	-110, 92, 88, -153, -153, -153, -153, -153, 220, 217,
	272, 230, -146, -153, 86, -80, 246, 241, -254, -254,
	33, -153, 388, 559, 557, -114, 135, 251, -128, -120,
	-102, 453, -262, 169, 321, 250, 319, 315, 335, 326,
	352, 317, 353, 314, 313, 312, -262, -260, -114, -114,
	-187, 143, -114, 141, -114, -114, -114, -356, 169, 321,
	-114, -114, -329, -114, -114, -114, -327, -326, -124, -179,
	-356, -327, -114, -114, -326, -326, -330, -330, -330, -330,
	-330, -172, -172, -172, -172, -356, -356, -101, -245, -157,
	-290, -290, -290, -217, 86, -228, 22, 14, 57, 57,
	-130, -161, -131, -105, -244, -201, 543, -206, 46, -204,
	-205, 47, -202, 48, 56, 160, -192, -114, -218, 76,
	-219, -223, -179, -174, -176, -175, -355, -210, -356, -244,
	-217, -219, -133, -134, -134, -133, -134, 66, 66, 66,
	71, 66, 71, 66, -150, -249, -356, -356, -9, -114,
	-252, 77, -131, -131, -155, -249, 160, 388, 392, 393,
	-302, -351, 115, 136, 31, 76, 350, 101, -349, 168,
	-350, 233, 129, 130, 245, 25, 41, 87, 86, 87,
	86, 87, 86, -238, 492, 136, -43, -42, -296, -296,
	94, -332, 229, 26, -153, 76, 76, 76, -87, 587,
	94, 85, -3, 80, -114, 85, 19, -285, -179, -320,
	-273, -321, -274, -275, -5, -6, -297, 57, 101, -58,
	44, 228, 567, 568, 123, 580, -312, -211, -316, -318,
	-153, -116, -355, -115, -117, -121, 158, 159, -180, -153,
	-107, 278, 286, 85, -111, 89, -334, 77, 269, 350,
	269, -153, -80, -47, -153, -234, -234, 33, -332, -356,
	-128, -120, -355, -356, -272, -272, -272, -280, -272, 309,
	-272, 309, -272, -356, -356, 86, -356, 22, -356, -91,
	431, -114, 86, 86, -356, 85, 85, -356, -356, -328,
	86, -356, 86, -356, 86, -263, 542, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -158, 22,
	-158, -158, -356, 89, -153, -161, -185, 16, -198, 51,
	327, -208, -207, 55, 47, -205, 19, 49, 19, 30,
	-218, 86, 144, 86, -356, -356, 86, 57, 212, -356,
	-161, -144, -143, 76, 77, -145, 76, -143, 66, 66,
	-213, -356, 86, -216, -131, -161, -161, 212, 115, -355,
	-118, -127, -116, 12, 92, 92, -332, 130, 130, -153,
	85, -277, 92, -277, 94, 94, 492, 31, 81, 82,
	83, 31, 78, 79, -153, -153, -153, -153, -317, 85,
	19, -114, 85, 144, 87, -211, -211, 265, 154, -296,
	565, 271, 271, -296, -296, -296, 87, -356, 86, -283,
	456, 459, -114, -122, -122, -213, 87, -325, 456, -333,
	-244, -244, -244, -244, -119, -277, -114, -114, -192, 92,
	-114, -114, 94, 94, -356, -327, -326, -114, -356, -141,
	-140, -142, 551, 115, 31, -262, -355, 66, 18, 16,
	-355, -355, -252, -185, -186, 17, 19, -199, 53, -197,
	52, -197, -207, 19, 19, 92, 19, 92, 130, -223,
	-114, -176, 57, -11, -244, -174, -244, -187, -114, 85,
	-114, -124, -161, -161, -114, -167, 434, 104, 106, 105,
	336, 337, 435, 436, 437, 107, 108, 109, 110, 111,
	112, 113, 438, 441, 439, 442, 443, 444, 449, 450,
	445, 446, 447, 448, 451, 85, -114, 87, 87, -213,
	-316, -57, 87, -211, 94, 87, 266, -175, -355, 92,
	-296, -296, -296, 94, 94, -251, -350, -318, 460, 460,
	-356, 25, -324, -323, -245, 85, 77, -95, 154, 456,
	-356, -356, -356, -356, -356, 87, 87, -356, -356, 86,
	-356, -140, -142, -356, 76, -124, -214, -356, -244, 233,
	19, 19, -214, -214, -160, -186, -114, -172, -200, 54,
	76, 118, 92, 92, 92, 12, -174, 212, -192, -211,
	-138, 357, -187, -356, -211, 87, 25, 87, 589, 130,
	87, -175, -94, -355, 262, -251, 92, 92, -11, 86,
	144, -211, -153, -356, 454, 73, 457, -114, -356, 76,
	466, 551, 86, -356, -356, -356, 76, 118, -219, -244,
	87, -356, -355, -192, 87, -196, -11, 85, -3, 262,
	-78, 456, -323, -301, -245, 92, 94, 87, 62, 455,
	458, -328, -244, 233, -252, -139, -137, -244, 506, -341,
	-342, 76, -351, -348, 115, 136, 101, -349, 124, 125,
	-78, -114, 85, -356, -79, 277, 547, -334, 62, -356,
	-356, 86, 22, -265, -60, 516, -342, 76, -341, 76,
	13, 12, 115, 92, 87, -211, 238, -325, 456, -137,
	513, -278, -124, -340, 246, 241, 244, 32, -340, -4,
	588, 87, 279, 457, -59, 26, -138, 240, 31, 115,
	94, -4, 458, 516, -124, -141, -140, -140,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 758,
	758, 758, 0, 758, 0, 0, 758, -2, -2, 758,
	1235, 0, 758, 0, 0, -2, 690, 692, 0, 694,
	-2, 0, 0, 703, 1720, 1720, 753, 0, 0, 0,
	0, 0, 758, 758, 758, 758, 1096, 48, 758, 0,
	83, 84, 709, 710, 711, 63, 0, 1718, 1, 3,
	69, 73, 0, 0, 0, 56, 1105, 0, 76, 0,
	0, 762, 0, 760, 0, 1218, 758, 758, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 520, 460, 503, 458, 489, -2, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 351, 351, 0, 0, -2, 451, 451, 451, 0,
	0, 0, 486, 1220, 406, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1122,
	151, 1236, 1233, 1234, 38, 39, 40, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 0, 1212, 0, 620, 858, 0, 681, 681,
	0, 681, 681, 681, 681, 0, 0, 0, 632, 0,
	0, 0, 0, 678, 0, 0, 651, 653, 0, 678,
	0, 684, 0, 665, 681, 1721, 1721, 1721, 1203, 0,
	675, 673, 687, 688, 670, 671, 689, 693, 0, 698,
	701, 1229, 1230, 0, 716, 47, 1466, 708, 721, 722,
	0, 754, 755, 43, 952, 0, 880, 885, 896, 909,
	910, 911, 912, 913, 915, 916, 0, 0, 0, 0,
	921, 922, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 1077, 0, 1040, 1040, 969, 1040, 1042,
	1042, 0, 0, 0, 1717, 1506, 1514, 1515, 1510, 1511,
	1492, 1504, 1507, 1495, 1496, 1498, 1500, 1505, 1512, 1518,
	1497, 1517, 1516, 0, 1493, 1494, 1499, 1509, 1513, 1501,
	1502, 1503, 1508, 1519, 1086, 0, 0, 0, 0, 0,
	0, 257, 258, 951, 1192, 1042, 1042, 1042, 1042, 1042,
	-2, -2, 204, 205, 206, 207, 208, 209, 210, 0,
	200, 0, 262, 263, 259, 260, 261, 935, 936, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	1720, 0, 731, 0, 0, 0, 0, 0, 1105, 0,
	1097, 1096, 61, 0, 758, -2, 0, 0, 0, 0,
	45, 0, 50, 817, 75, 74, 1144, 0, 0, 0,
	57, 1106, 65, 67, 1107, 0, 763, 764, 0, 794,
	798, 0, 759, 0, 0, 1219, 1218, 1218, 100, 0,
	1661, 1196, -2, -2, 0, 0, 1231, 1232, 1205, -2,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, -2, 0, 0, 161, 162, 0,
	41, 378, 0, 157, 0, 371, 321, 0, 1122, 0,
	0, 0, 0, 0, 758, 0, 1213, 142, 143, 149,
	150, 351, 351, 500, 0, 0, 151, 151, 467, 468,
	469, 0, 0, -2, 376, 0, 452, 0, 0, 365,
	365, 369, 367, 368, 0, 0, 0, 0, 0, 0,
	480, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 352, 0, 498, 499, 407, 0,
	0, 0, 0, 478, 479, 0, 0, 1221, 1222, 0,
	0, 351, 351, 0, 0, 0, 0, 351, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 1135, 0, 0, 0,
	-2, 0, 612, 0, 0, 0, 1214, 1214, 0, 619,
	0, 621, 622, 0, 0, 623, 0, 678, 678, 676,
	677, 625, 626, 627, 628, 681, 0, 0, 360, 361,
	362, 678, 681, 0, 681, 681, 681, 681, 678, 678,
	678, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 1721, 1721, 684, 681, 0, 661, 0, 662,
	663, 666, 667, 1722, 1723, 1251, 668, 669, 1204, 691,
	699, 702, 719, 717, 718, 720, 712, 713, 714, 715,
	0, 733, 734, 739, 0, 0, 0, 0, 745, 746,
	747, 0, 0, 750, 751, 752, 0, 0, 0, 0,
	0, 878, 0, 0, 941, 942, 943, 944, 945, 946,
	947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 917, 918, 919, 920, 923, 0, 0, 0, 928,
	929, 0, 0, 0, 0, 0, 768, 0, 1078, 0,
	967, 0, 968, 970, 971, 0, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 778, 778, 0, 0, 193, 194, 195,
	196, 197, 211, 212, 213, 214, 215, 264, 1086, 0,
	951, 0, 0, 44, 723, 724, 0, 841, 1224, 0,
	0, 774, 0, 55, 64, 66, 1105, 59, 1105, 0,
	780, 0, 0, -2, -2, 781, 787, 788, 789, 790,
	791, 52, 1719, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 333, 1147, 0, 0, 1098, 1099, 1102, 0,
	795, 1547, 799, 0, 801, 802, 0, 761, 0, 98,
	0, 857, 0, 0, 0, 1661, 1202, 0, 102, 103,
	0, 0, 0, 339, 1207, 1208, 1209, -2, 358, 0,
	339, 328, 272, 273, 274, 321, 276, 321, 321, 321,
	321, 333, 333, 333, 333, 304, 305, 306, 307, 308,
	0, 0, 291, 321, 321, 321, 321, 311, 312, 313,
	314, 315, 316, 317, 318, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 323, 323, 323, 325, 325, 0,
	42, 0, 343, 0, 1102, 0, 0, 1135, 1216, 1226,
	0, 0, 0, 1216, 120, 0, 0, 501, 531, 461,
	490, 502, 0, 464, 465, -2, 0, 0, 451, 0,
	453, 0, 359, 0, -2, 0, 369, 0, 365, 369,
	366, 369, 357, 370, 482, 483, 484, 0, 561, 827,
	0, 0, 0, 0, 0, 567, 568, 569, 0, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 491,
	492, 493, 494, 495, 496, 497, 0, 0, 453, 0,
	487, 0, 408, 409, 0, 0, 412, 413, 414, 415,
	0, 0, 418, 419, 420, 844, 845, 421, 445, 446,
	447, 422, 423, 424, 425, 426, 427, 428, 439, 440,
	441, 442, 443, 444, 429, 430, 431, 432, 433, 436,
	0, 135, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 777,
	859, 1237, 1238, 682, 683, 0, 363, 364, 681, 681,
	629, 652, 0, 681, 633, 654, 634, 636, 635, 637,
	656, 657, 681, 640, 679, 680, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 658, 659, 660, 685,
	0, 0, 700, 704, 705, 706, 707, 0, 0, 736,
	94, 741, 742, 743, 744, 756, 749, 953, 875, 876,
	877, 0, 879, 882, 0, 937, 939, 884, 886, 948,
	949, 950, 0, 0, 0, 0, 0, 890, 894, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 914, 1056, 1057, 1058, 931, 265, 266, 0, 932,
	0, 792, 0, 0, 0, 930, 0, 0, 0, 0,
	769, 770, 1084, 1081, 0, 0, 1041, 1043, 0, 0,
	0, 0, 0, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1059, 0, 0, 0, 0, 0,
	0, 1225, 0, 130, 131, 0, 0, 0, 0, 0,
	1013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 779, 1087, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 1191, 0, 726, 727, 729, 0, 861, 0,
	842, 0, 0, 732, 0, 773, 0, 776, 58, 60,
	785, 786, 0, 803, 782, 54, 49, 0, 0, 819,
	1145, 333, 1167, 0, 337, 338, 1108, 1109, 0, 1101,
	1103, 1104, 77, 800, 796, 0, 873, 0, 0, 856,
	0, 806, 808, 809, 810, 839, 0, 813, 0, 0,
	0, 0, 96, 858, 1197, 101, 0, 0, 106, 107,
	1198, 1199, 1200, 1201, 0, 520, -2, 403, 163, 165,
	166, 167, 158, -2, 331, 329, 330, 275, 333, 333,
	298, 299, 300, 301, 302, 303, 0, 0, 292, 293,
	294, 295, 286, 0, 287, 288, 289, 0, 290, 377,
	0, 1110, 344, 345, 347, 351, 0, 0, 0, 372,
	373, 0, 1102, 1126, 0, 0, 0, 1227, 1226, 1226,
	1226, 0, 153, 154, 155, 156, 556, 0, 0, 532,
	554, 555, 151, 0, 0, 159, 455, 454, 0, 588,
	0, 375, 0, 0, 369, 369, 354, 355, 485, 0,
	0, 563, 564, 565, 566, 0, 0, 0, 453, 455,
	339, 0, 410, 411, 416, 417, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	517, 518, 519, 1123, 1124, 1125, 0, 0, 613, 0,
	0, 395, 92, 1215, 618, 678, 639, 655, 678, 631,
	638, 664, 696, 740, 0, 0, 0, 0, 748, 0,
	0, 883, 938, 940, 887, 0, 891, 895, 0, 0,
	0, 0, 0, 0, 0, 934, 958, 959, 0, 0,
	1096, 0, 1082, 0, 0, 966, 1044, 1045, 0, 0,
	0, 0, 0, 977, 978, 979, 0, 0, 982, 983,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 997, 998, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 954, 0, 0, 778,
	0, 1046, 1047, 1048, 1049, 1050, 1087, 725, 728, 730,
	815, 862, 863, 0, 0, 0, 0, 843, 1223, 771,
	772, 775, -2, 0, 0, 1089, 0, 0, 803, 873,
	804, 0, 783, 51, 818, 0, 1149, 1148, 1161, 1174,
	334, 335, 336, 1100, 0, 1105, 0, 1185, 0, 0,
	1177, 0, 0, 0, 0, 0, 0, 0, 0, 846,
	0, 0, 849, 0, 0, 0, 0, 840, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 340, 341, 144, 151,
	405, 164, 385, 0, 0, 271, 332, 296, 297, 0,
	319, 0, 0, 0, 398, 116, 1114, 1113, 351, 351,
	346, 0, 349, 0, 1228, 322, 374, 0, 134, 0,
	0, 0, 0, 0, 140, 526, 0, 0, 533, 0,
	0, 0, 459, 0, 470, 471, 0, 560, -2, 609,
	343, 0, 353, 356, 828, 0, 0, 472, 0, 455,
	476, 477, 488, 437, 438, 435, 0, 0, 1136, 1137,
	1142, 1140, 1141, 121, 508, 510, 509, 513, 0, 0,
	506, 0, 395, 1110, 0, 617, 396, 397, 681, 681,
	735, 95, 0, 738, 0, 0, 0, 0, 888, 892,
	793, 0, 0, 321, 321, 1064, 321, 325, 1067, 321,
	1069, 321, 1072, 321, 1075, 1076, 0, 0, 0, 0,
	1079, 965, 1085, 0, 0, 0, 0, 976, 0, 0,
	0, 0, 132, 133, 1013, 0, 0, 1015, 1017, 1018,
	988, 1014, 0, 0, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 955, 956, 0, 1088, 864,
	869, 869, 869, 0, 0, 0, 1210, 1211, 1090, 1091,
	873, 1092, 805, 784, 820, 1167, 0, 1160, 0, -2,
	1169, 0, 0, 0, 1175, 797, 78, 874, 81, 0,
	1185, 1193, 0, 1176, 1187, 1189, 0, 0, 0, 1181,
	0, 873, 807, 835, 837, 0, 832, 847, 848, 850,
	0, 852, 0, 854, 855, 817, 812, 814, 0, 0,
	98, 0, 873, 873, 97, 0, 860, 108, 109, 110,
	404, 168, 173, 0, 0, 0, 178, 0, 180, 0,
	386, 0, 268, 270, 0, 0, 171, 333, 0, 333,
	0, 326, 0, 387, 399, 0, 1111, 1112, 0, 0,
	348, 350, 0, 1217, 136, 0, 0, 0, 529, 0,
	557, 0, 0, 0, 0, 0, 0, 160, 456, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 351, 0,
	0, 0, 351, 351, 351, 601, 342, 0, 0, 585,
	582, 473, 0, 198, 199, 201, 0, 0, 475, 817,
	1127, 1128, 1129, 0, 1139, 1143, 124, 0, 0, 0,
	0, 614, 615, 616, 93, 624, 630, 737, 757, 881,
	889, 893, 0, 925, 1062, 333, 1065, 1066, 1068, 1070,
	1071, 1073, 1074, 926, 927, 0, 961, 0, 963, 1105,
	0, 1083, 0, 0, 975, 0, 0, 980, 981, 0,
	0, 987, 0, 989, 0, 0, 0, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 957, 0, 0,
	0, 0, 841, -2, 62, 1092, 1094, 0, 1154, 1152,
	1152, 1162, 1163, 0, 0, 1170, 0, 0, 0, 0,
	82, 0, 0, 0, 1190, 0, 0, 0, 0, 99,
	1096, 829, 836, 0, 0, 830, 0, 831, 851, 853,
	811, -2, 0, 873, 873, 88, 89, 0, 174, 0,
	176, 191, 192, 0, 179, 181, 182, 267, 269, 0,
	0, 309, 320, 310, 0, 0, 400, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 817, 137, 138, 139, 521, 0,
	531, 0, 0, 0, 524, 0, 462, 0, 0, 0,
	351, 351, 351, 0, 0, 0, 0, 562, 0, 570,
	0, 0, 0, 202, 203, 0, 1138, 507, 0, 122,
	123, 0, 0, 512, 1051, 1063, 0, 0, 0, 1080,
	0, 0, 0, 0, 985, 0, 1016, 0, 992, 0,
	0, 0, 551, 552, 0, 1012, 0, 870, 0, 0,
	0, 0, 861, 1094, 80, 0, 0, 1157, 0, 1150,
	1153, 1151, 1164, 0, 0, 1171, 0, 1173, 0, 1194,
	1195, 1188, 0, 1180, 1183, 1179, 1182, 1105, 833, 0,
	838, 0, 1096, 87, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 327, 0,
	0, 0, 522, 0, 534, 525, 0, 599, 0, 603,
	0, 0, 0, 606, 607, 608, 379, 586, 583, 584,
	474, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	960, 962, 964, 973, 974, 1060, 1061, 986, 990, 0,
	993, 0, 0, 994, 0, 553, 0, 866, 823, 824,
	871, 872, 0, 0, 816, 79, 1095, 1093, 1146, 0,
	1155, 1156, 1165, 1166, 1172, 0, 1178, 0, 85, 0,
	0, 0, 1105, 175, 0, 185, 0, 530, 0, 533,
	523, 597, 598, 0, 610, 602, 604, 605, 1130, 0,
	0, 0, 514, 924, 0, 0, 0, 1013, 995, 0,
	549, 550, 0, 865, 867, 868, 1158, 1159, 1186, 1184,
	834, 841, 0, 86, 380, 385, 1130, 0, 0, 0,
	504, 1132, 127, 128, 448, 449, 450, 121, 1052, 0,
	1055, 0, 825, 826, 535, 0, 537, 0, -2, 381,
	382, 0, 169, 186, 187, 0, 0, 190, 183, 184,
	117, 0, 0, 611, 0, 1133, 1134, 124, 1053, 991,
	536, 0, 0, 339, 0, 546, 383, 0, 384, 0,
	0, 0, 188, 189, 558, 0, 0, 511, 0, 538,
	539, 547, 0, 388, 390, 391, 0, 0, 389, 527,
	0, 558, 1131, 0, 0, 548, 544, 392, 393, 394,
	559, 528, 1054, 0, 540, 541, 542, 543,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 212, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 590,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:514
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:560
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:595
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:601
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:605
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:624
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:630
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:718
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:833
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:837
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:857
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:871
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:881
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:904
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:926
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:936
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:940
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:944
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:950
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:954
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:958
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:968
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:972
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1020
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1035
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1046
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1066
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1072
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1088
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1095
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1124
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1131
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1142
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1153
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1159
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1163
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1208
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1212
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1218
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1228
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1233
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1242
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1266
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1275
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1354
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1358
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1441
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1492
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1708
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1712
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1716
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1720
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1951
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1960
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1968
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2050
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2059
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2065
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2075
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2079
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2084
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2088
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2104
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2108
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2112
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2116
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2120
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2188
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2198
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2202
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2208
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2212
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2218
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2222
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2228
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2234
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2238
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2242
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2246
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2250
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2259
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2265
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2271
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2277
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2283
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2287
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2291
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2295
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2299
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2317
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2321
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2325
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2334
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2340
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2354
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2364
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2368
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2372
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2448
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2452
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2456
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2460
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2464
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2468
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2472
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2517
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2523
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2536
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2545
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2549
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2553
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2557
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2561
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2567
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2571
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2675
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2679
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2685
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2689
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2693
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2697
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2701
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2705
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2737
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2790
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2794
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2811
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2843
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2850
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2875
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2884
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2892
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2901
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2908
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2920
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2929
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2944
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2958
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2962
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2968
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2974
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2980
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2990
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2994
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3000
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3006
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3012
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3018
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3024
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3036
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3042
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3048
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3054
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3058
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3062
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3068
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3072
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3077
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3081
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3086
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3090
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3096
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3100
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3104
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3108
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3112
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3116
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3120
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3124
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3128
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3132
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3136
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3140
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3144
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3148
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3152
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3156
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3160
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3164
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3168
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3172
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3176
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3180
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3185
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3189
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3200
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3204
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3210
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3215
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3219
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3224
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3229
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3234
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3239
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3244
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3250
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3256
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3263
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3270
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3277
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3295
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3301
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3307
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3313
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3319
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3325
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3337
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3359
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3363
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3386
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3392
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3396
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3499
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3503
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = "extended "
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3634
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3654
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3672
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3676
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3686
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3692
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.empty = struct{}{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.empty = struct{}{}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3745
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3768
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3772
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3776
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3780
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3784
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3788
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = yyDollar[1].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3802
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3865
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3869
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3875
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3881
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3885
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3889
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3893
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3979
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4018
		{
			setAllowComments(yylex, true)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4028
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4042
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4046
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = SQLCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4064
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4068
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4103
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4122
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4127
		{
			yyVAL.strs = nil
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4139
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = DistinctStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = StraightJoinHint
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4179
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4189
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4193
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4197
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4201
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4226
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4230
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4236
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4242
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4256
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4260
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4264
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4268
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4274
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4280
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4284
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4293
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4299
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4303
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4309
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4313
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4319
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4323
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4337
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4354
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4358
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4362
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4366
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4374
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.empty = struct{}{}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4394
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4402
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4415
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4419
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4423
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4429
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4435
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4439
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4443
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4447
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4453
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4457
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4481
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4496
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4502
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4512
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4516
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4520
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4524
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4529
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4533
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4537
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4541
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4551
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4558
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4562
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4566
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4570
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4574
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4677
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4707
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4711
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4719
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4727
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4731
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4735
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4739
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4743
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4747
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4751
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4820
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4824
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4831
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4835
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4839
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4843
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4849
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4853
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4857
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4861
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4865
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4869
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4873
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4879
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4883
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4887
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4894
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4900
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5163
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5172
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5178
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5182
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5198
		{
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5200
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5204
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5208
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5212
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5216
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5220
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5224
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5228
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5232
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5236
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5240
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5246
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5250
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5254
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5258
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5262
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5266
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5270
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5274
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5278
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5333
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5337
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5341
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5345
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5349
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5373
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5377
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5383
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5387
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5391
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5395
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5399
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5405
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5409
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5413
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5417
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5421
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5425
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5429
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5441
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5456
		{
			yyVAL.str = string("")
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5460
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5466
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5470
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5476
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5491
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5495
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5499
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5528
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5546
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5552
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5558
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5562
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5568
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5573
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5577
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5581
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5590
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5596
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5600
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5604
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5613
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5617
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5621
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5625
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5632
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5636
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5640
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5644
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5650
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5654
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5658
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5663
		{
			yyVAL.str = ""
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5667
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5675
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5680
		{
			yyVAL.str = ""
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5684
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5699
		{
			yyVAL.str = ""
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5703
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5708
		{
			yyVAL.str = "cascaded"
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5725
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5731
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5737
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5743
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5752
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5761
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5771
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5775
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5781
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5785
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5789
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5794
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5798
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5807
		{
			yyVAL.str = ""
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5811
		{
			yyVAL.str = " header"
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5816
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5820
		{
			yyVAL.str = " manifest on"
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5824
		{
			yyVAL.str = " manifest off"
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = ""
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = " overwrite on"
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = " overwrite off"
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5843
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5848
		{
			yyVAL.str = ""
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5852
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5868
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5872
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = ""
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5887
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5891
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5897
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5901
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5910
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.str = " optionally"
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5927
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5931
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5935
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5939
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5943
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5949
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5953
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5957
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5961
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5970
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5976
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5986
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5990
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5996
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6011
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6021
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6027
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6037
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6041
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6045
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6049
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6053
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6061
		{
			yyVAL.str = "charset"
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6088
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6095
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6098
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6100
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6103
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			yyVAL.empty = struct{}{}
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.empty = struct{}{}
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.empty = struct{}{}
		}
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6116
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6125
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6132
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6136
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6153
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6169
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6173
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6684
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6693
		{
			decNesting(yylex)
		}
	case 1720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6698
		{
			skipToEnd(yylex)
		}
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6703
		{
			skipToEnd(yylex)
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6707
		{
			skipToEnd(yylex)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6711
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
