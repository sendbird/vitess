// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const JSON_EXTRACT_OP = 57544
const JSON_UNQUOTE_EXTRACT_OP = 57545
const CREATE = 57546
const ALTER = 57547
const DROP = 57548
const RENAME = 57549
const ANALYZE = 57550
const ADD = 57551
const FLUSH = 57552
const CHANGE = 57553
const MODIFY = 57554
const DEALLOCATE = 57555
const REVERT = 57556
const SCHEMA = 57557
const TABLE = 57558
const INDEX = 57559
const VIEW = 57560
const TO = 57561
const IGNORE = 57562
const IF = 57563
const PRIMARY = 57564
const COLUMN = 57565
const SPATIAL = 57566
const FULLTEXT = 57567
const KEY_BLOCK_SIZE = 57568
const CHECK = 57569
const INDEXES = 57570
const ACTION = 57571
const CASCADE = 57572
const CONSTRAINT = 57573
const FOREIGN = 57574
const NO = 57575
const REFERENCES = 57576
const RESTRICT = 57577
const SHOW = 57578
const DESCRIBE = 57579
const EXPLAIN = 57580
const DATE = 57581
const ESCAPE = 57582
const REPAIR = 57583
const OPTIMIZE = 57584
const TRUNCATE = 57585
const COALESCE = 57586
const EXCHANGE = 57587
const REBUILD = 57588
const PARTITIONING = 57589
const REMOVE = 57590
const PREPARE = 57591
const EXECUTE = 57592
const MAXVALUE = 57593
const PARTITION = 57594
const REORGANIZE = 57595
const LESS = 57596
const THAN = 57597
const PROCEDURE = 57598
const TRIGGER = 57599
const VINDEX = 57600
const VINDEXES = 57601
const DIRECTORY = 57602
const NAME = 57603
const UPGRADE = 57604
const STATUS = 57605
const VARIABLES = 57606
const WARNINGS = 57607
const CASCADED = 57608
const DEFINER = 57609
const OPTION = 57610
const SQL = 57611
const UNDEFINED = 57612
const SEQUENCE = 57613
const MERGE = 57614
const TEMPORARY = 57615
const TEMPTABLE = 57616
const INVOKER = 57617
const SECURITY = 57618
const FIRST = 57619
const AFTER = 57620
const LAST = 57621
const VITESS_MIGRATION = 57622
const CANCEL = 57623
const RETRY = 57624
const COMPLETE = 57625
const CLEANUP = 57626
const THROTTLE = 57627
const UNTHROTTLE = 57628
const EXPIRE = 57629
const RATIO = 57630
const BEGIN = 57631
const START = 57632
const TRANSACTION = 57633
const COMMIT = 57634
const ROLLBACK = 57635
const SAVEPOINT = 57636
const RELEASE = 57637
const WORK = 57638
const BIT = 57639
const TINYINT = 57640
const SMALLINT = 57641
const MEDIUMINT = 57642
const INT = 57643
const INTEGER = 57644
const BIGINT = 57645
const INTNUM = 57646
const REAL = 57647
const DOUBLE = 57648
const FLOAT_TYPE = 57649
const DECIMAL_TYPE = 57650
const NUMERIC = 57651
const TIME = 57652
const TIMESTAMP = 57653
const DATETIME = 57654
const YEAR = 57655
const CHAR = 57656
const VARCHAR = 57657
const BOOL = 57658
const CHARACTER = 57659
const VARBINARY = 57660
const NCHAR = 57661
const TEXT = 57662
const TINYTEXT = 57663
const MEDIUMTEXT = 57664
const LONGTEXT = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const JSON_SCHEMA_VALID = 57671
const JSON_SCHEMA_VALIDATION_REPORT = 57672
const ENUM = 57673
const GEOMETRY = 57674
const POINT = 57675
const LINESTRING = 57676
const POLYGON = 57677
const GEOMETRYCOLLECTION = 57678
const MULTIPOINT = 57679
const MULTILINESTRING = 57680
const MULTIPOLYGON = 57681
const ASCII = 57682
const UNICODE = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const CODE = 57690
const COLLATION = 57691
const COLUMNS = 57692
const DATABASES = 57693
const ENGINES = 57694
const EVENT = 57695
const EXTENDED = 57696
const FIELDS = 57697
const FULL = 57698
const FUNCTION = 57699
const GTID_EXECUTED = 57700
const KEYSPACES = 57701
const OPEN = 57702
const PLUGINS = 57703
const PRIVILEGES = 57704
const PROCESSLIST = 57705
const SCHEMAS = 57706
const TABLES = 57707
const TRIGGERS = 57708
const USER = 57709
const VGTID_EXECUTED = 57710
const VITESS_KEYSPACES = 57711
const VITESS_METADATA = 57712
const VITESS_MIGRATIONS = 57713
const VITESS_REPLICATION_STATUS = 57714
const VITESS_SHARDS = 57715
const VITESS_TABLETS = 57716
const VITESS_TARGET = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const REGEXP_INSTR = 57792
const REGEXP_LIKE = 57793
const REGEXP_REPLACE = 57794
const REGEXP_SUBSTR = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const WITHOUT = 57803
const VALIDATION = 57804
const UNUSED = 57805
const ARRAY = 57806
const BYTE = 57807
const CUME_DIST = 57808
const DESCRIPTION = 57809
const DENSE_RANK = 57810
const EMPTY = 57811
const EXCEPT = 57812
const FIRST_VALUE = 57813
const GROUPING = 57814
const GROUPS = 57815
const JSON_TABLE = 57816
const LAG = 57817
const LAST_VALUE = 57818
const LATERAL = 57819
const LEAD = 57820
const NTH_VALUE = 57821
const NTILE = 57822
const OF = 57823
const OVER = 57824
const PERCENT_RANK = 57825
const RANK = 57826
const RECURSIVE = 57827
const ROW_NUMBER = 57828
const SYSTEM = 57829
const WINDOW = 57830
const ACTIVE = 57831
const ADMIN = 57832
const AUTOEXTEND_SIZE = 57833
const BUCKETS = 57834
const CLONE = 57835
const COLUMN_FORMAT = 57836
const COMPONENT = 57837
const DEFINITION = 57838
const ENFORCED = 57839
const ENGINE_ATTRIBUTE = 57840
const EXCLUDE = 57841
const FOLLOWING = 57842
const GEOMCOLLECTION = 57843
const GET_MASTER_PUBLIC_KEY = 57844
const HISTOGRAM = 57845
const HISTORY = 57846
const INACTIVE = 57847
const INVISIBLE = 57848
const LOCKED = 57849
const MASTER_COMPRESSION_ALGORITHMS = 57850
const MASTER_PUBLIC_KEY_PATH = 57851
const MASTER_TLS_CIPHERSUITES = 57852
const MASTER_ZSTD_COMPRESSION_LEVEL = 57853
const NESTED = 57854
const NETWORK_NAMESPACE = 57855
const NOWAIT = 57856
const NULLS = 57857
const OJ = 57858
const OLD = 57859
const OPTIONAL = 57860
const ORDINALITY = 57861
const ORGANIZATION = 57862
const OTHERS = 57863
const PARTIAL = 57864
const PATH = 57865
const PERSIST = 57866
const PERSIST_ONLY = 57867
const PRECEDING = 57868
const PRIVILEGE_CHECKS_USER = 57869
const PROCESS = 57870
const RANDOM = 57871
const REFERENCE = 57872
const REQUIRE_ROW_FORMAT = 57873
const RESOURCE = 57874
const RESPECT = 57875
const RESTART = 57876
const RETAIN = 57877
const REUSE = 57878
const ROLE = 57879
const SECONDARY = 57880
const SECONDARY_ENGINE = 57881
const SECONDARY_ENGINE_ATTRIBUTE = 57882
const SECONDARY_LOAD = 57883
const SECONDARY_UNLOAD = 57884
const SIMPLE = 57885
const SKIP = 57886
const SRID = 57887
const THREAD_PRIORITY = 57888
const TIES = 57889
const UNBOUNDED = 57890
const VCPU = 57891
const VISIBLE = 57892
const RETURNING = 57893
const FORMAT = 57894
const TREE = 57895
const VITESS = 57896
const TRADITIONAL = 57897
const LOCAL = 57898
const LOW_PRIORITY = 57899
const NO_WRITE_TO_BINLOG = 57900
const LOGS = 57901
const ERROR = 57902
const GENERAL = 57903
const HOSTS = 57904
const OPTIMIZER_COSTS = 57905
const USER_RESOURCES = 57906
const SLOW = 57907
const CHANNEL = 57908
const RELAY = 57909
const EXPORT = 57910
const AVG_ROW_LENGTH = 57911
const CONNECTION = 57912
const CHECKSUM = 57913
const DELAY_KEY_WRITE = 57914
const ENCRYPTION = 57915
const ENGINE = 57916
const INSERT_METHOD = 57917
const MAX_ROWS = 57918
const MIN_ROWS = 57919
const PACK_KEYS = 57920
const PASSWORD = 57921
const FIXED = 57922
const DYNAMIC = 57923
const COMPRESSED = 57924
const REDUNDANT = 57925
const COMPACT = 57926
const ROW_FORMAT = 57927
const STATS_AUTO_RECALC = 57928
const STATS_PERSISTENT = 57929
const STATS_SAMPLE_PAGES = 57930
const STORAGE = 57931
const MEMORY = 57932
const DISK = 57933
const PARTITIONS = 57934
const LINEAR = 57935
const RANGE = 57936
const LIST = 57937
const SUBPARTITION = 57938
const SUBPARTITIONS = 57939
const HASH = 57940

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	616, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	334, 153,
	-2, 498,
	-1, 55,
	35, 739,
	234, 739,
	245, 739,
	280, 753,
	281, 753,
	-2, 741,
	-1, 60,
	236, 766,
	-2, 764,
	-1, 114,
	233, 1311,
	-2, 119,
	-1, 116,
	1, 146,
	616, 146,
	-2, 153,
	-1, 127,
	133, 384,
	239, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	334, 153,
	-2, 507,
	-1, 705,
	218, 1332,
	-2, 1328,
	-1, 706,
	218, 1333,
	-2, 1329,
	-1, 781,
	59, 834,
	-2, 849,
	-1, 818,
	148, 1745,
	-2, 112,
	-1, 819,
	148, 1582,
	-2, 113,
	-1, 825,
	148, 1666,
	-2, 1305,
	-1, 973,
	148, 1510,
	-2, 1302,
	-1, 1014,
	244, 41,
	249, 41,
	-2, 395,
	-1, 1098,
	1, 554,
	616, 554,
	-2, 153,
	-1, 1341,
	59, 835,
	-2, 854,
	-1, 1342,
	59, 836,
	-2, 855,
	-1, 1395,
	132, 153,
	173, 153,
	334, 153,
	-2, 434,
	-1, 1474,
	133, 384,
	239, 384,
	-2, 487,
	-1, 1483,
	244, 42,
	249, 42,
	-2, 396,
	-1, 1792,
	218, 1337,
	-2, 1331,
	-1, 1880,
	132, 153,
	173, 153,
	334, 153,
	-2, 435,
	-1, 1887,
	25, 174,
	-2, 176,
	-1, 2140,
	87, 39,
	-2, 891,
	-1, 2197,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2265,
	591, 666,
	-2, 640,
	-1, 2408,
	49, 1273,
	-2, 1267,
	-1, 2638,
	87, 39,
	-2, 892,
	-1, 2676,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 2973,
	591, 666,
	-2, 654,
	-1, 3040,
	22, 1668,
	32, 1668,
	174, 1668,
	256, 1668,
	314, 1668,
	315, 1668,
	316, 1668,
	317, 1668,
	318, 1668,
	319, 1668,
	320, 1668,
	322, 1668,
	323, 1668,
	324, 1668,
	325, 1668,
	326, 1668,
	327, 1668,
	328, 1668,
	329, 1668,
	330, 1668,
	331, 1668,
	332, 1668,
	333, 1668,
	335, 1668,
	337, 1668,
	338, 1668,
	339, 1668,
	340, 1668,
	341, 1668,
	342, 1668,
	343, 1668,
	344, 1668,
	345, 1668,
	348, 1668,
	349, 1668,
	350, 1668,
	351, 1668,
	352, 1668,
	353, 1668,
	354, 1668,
	355, 1668,
	356, 1668,
	473, 1668,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 44431

var yyAct = [...]int{
	705, 2780, 3102, 2782, 2954, 3073, 2781, 714, 3112, 3074,
	2753, 1398, 3038, 2557, 1830, 3016, 1810, 2463, 2363, 2470,
	1877, 2090, 707, 2740, 2520, 2511, 694, 37, 2900, 2525,
	2424, 2421, 2522, 2521, 622, 2519, 2524, 695, 796, 2523,
	96, 1812, 2799, 774, 2540, 2478, 2930, 2128, 1947, 2425,
	1161, 186, 2539, 1356, 186, 3, 583, 186, 618, 2804,
	2422, 2641, 598, 1320, 186, 1046, 2647, 2325, 2361, 692,
	693, 708, 186, 644, 2667, 1850, 2168, 2419, 2542, 2409,
	2155, 2191, 2633, 615, 2578, 1110, 1452, 186, 2362, 1834,
	614, 1915, 2230, 2562, 2308, 1910, 2262, 616, 1935, 2232,
	2231, 976, 823, 797, 778, 1866, 782, 155, 2161, 598,
	1855, 38, 598, 186, 598, 2180, 36, 776, 1978, 2147,
	2130, 2300, 1786, 1692, 799, 1854, 1343, 1762, 1842, 141,
	1022, 610, 1650, 1917, 1956, 1934, 1994, 2224, 1009, 1761,
	1481, 95, 1004, 1499, 2199, 1387, 1702, 1365, 1599, 627,
	1857, 1323, 1248, 1714, 1669, 1182, 1595, 1488, 980, 820,
	1932, 983, 1012, 1579, 1015, 984, 91, 1010, 1011, 1906,
	1386, 1370, 1384, 788, 1153, 1835, 1214, 1758, 1159, 1447,
	119, 117, 159, 118, 124, 125, 1604, 1094, 810, 786,
	97, 784, 76, 1255, 85, 605, 783, 2963, 1251, 2255,
	1139, 89, 3103, 2741, 98, 2508, 1473, 1949, 2253, 1048,
	1949, 1950, 1951, 2284, 2283, 1803, 1992, 188, 189, 190,
	8, 2530, 1064, 1065, 1066, 2696, 1069, 1070, 1071, 1072,
	120, 554, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 804,
	977, 809, 90, 7, 1051, 126, 6, 790, 2733, 1026,
	587, 606, 1564, 2316, 785, 77, 1183, 775, 587, 2317,
	777, 2986, 102, 2987, 2785, 1789, 2530, 1807, 1808, 2528,
	1657, 817, 1183, 1656, 824, 1061, 1655, 1654, 1653, 2527,
	2785, 1025, 798, 188, 189, 190, 1001, 1000, 999, 120,
	998, 2534, 584, 1652, 1635, 1644, 608, 791, 609, 1002,
	1052, 1055, 1056, 104, 105, 3059, 108, 2126, 87, 114,
	2405, 2614, 183, 3077, 1982, 549, 182, 2157, 993, 988,
	3123, 1350, 2275, 3072, 2528, 1067, 3093, 1980, 2278, 1662,
	2579, 2896, 2895, 1050, 587, 770, 771, 772, 773, 570,
	121, 781, 143, 1049, 3106, 2746, 2534, 1926, 2747, 2784,
	3120, 568, 2987, 164, 3026, 2982, 3086, 120, 1981, 2754,
	3017, 1975, 1193, 3025, 2324, 2784, 2981, 3043, 78, 812,
	813, 78, 1920, 78, 80, 78, 1838, 2036, 1193, 2596,
	1462, 2292, 2127, 2208, 153, 2291, 2207, 1872, 1873, 2209,
	142, 565, 2171, 2460, 2461, 1388, 2459, 1389, 2315, 2033,
	579, 2531, 1871, 1129, 997, 1097, 1103, 1104, 768, 767,
	1156, 161, 3048, 162, 1146, 575, 1148, 2172, 2256, 2955,
	2220, 2644, 2817, 1134, 1135, 2351, 3046, 1890, 1889, 130,
	131, 152, 151, 181, 1117, 3052, 3053, 587, 1106, 1118,
	1130, 1809, 2034, 2480, 2481, 1123, 87, 2164, 2165, 87,
	3047, 87, 588, 87, 1145, 1147, 2531, 2559, 1117, 2587,
	588, 1189, 995, 1118, 1181, 587, 2585, 596, 1643, 600,
	594, 1116, 2301, 1115, 2563, 1327, 2287, 1189, 1068, 3078,
	1554, 2263, 1957, 1995, 555, 1585, 557, 571, 3105, 590,
	2552, 589, 561, 1580, 559, 563, 572, 564, 2553, 558,
	3079, 569, 1093, 587, 560, 573, 574, 577, 580, 581,
	582, 578, 576, 1919, 567, 591, 1155, 1150, 1136, 1138,
	1645, 1646, 1647, 1099, 1555, 1131, 1556, 2735, 1137, 2734,
	1124, 147, 128, 154, 135, 127, 588, 148, 149, 186,
	2303, 186, 2560, 165, 186, 1838, 2012, 2561, 2013, 2479,
	2014, 1143, 171, 136, 2015, 1144, 997, 1092, 1074, 1836,
	1837, 2482, 1073, 2000, 1997, 1149, 2880, 139, 137, 132,
	133, 134, 138, 1035, 598, 1163, 598, 598, 1215, 129,
	996, 1999, 2352, 1330, 992, 2731, 1033, 994, 140, 1142,
	87, 598, 598, 1132, 1133, 3060, 1960, 1851, 1006, 1466,
	2905, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1223,
	1225, 1226, 2006, 2003, 2005, 2004, 2007, 2008, 2001, 37,
	1044, 1096, 1005, 1998, 2482, 1043, 1006, 1042, 1041, 2034,
	1040, 1113, 3124, 1119, 1120, 1121, 1122, 1039, 1038, 588,
	1045, 1037, 1024, 1032, 981, 3116, 1229, 981, 1175, 1018,
	1229, 979, 1127, 3084, 981, 1017, 1157, 1158, 1188, 1185,
	1186, 1187, 1192, 1194, 1191, 1487, 1190, 588, 2962, 156,
	2254, 1596, 1933, 1184, 1188, 1185, 1186, 1187, 1192, 1194,
	1191, 1063, 1190, 997, 2222, 989, 1024, 811, 2307, 1184,
	1586, 592, 991, 990, 1587, 1588, 2304, 2730, 1054, 2257,
	2501, 1979, 1986, 1592, 1017, 588, 2289, 2645, 1053, 585,
	1169, 1232, 1233, 1234, 1235, 1057, 1003, 1095, 1036, 2286,
	1460, 1240, 1459, 1243, 586, 2131, 2133, 1458, 1836, 1837,
	2320, 1034, 996, 1318, 2048, 2273, 1593, 2951, 1456, 1313,
	553, 995, 1023, 548, 1584, 1923, 1977, 150, 1017, 1020,
	1021, 2683, 981, 2663, 1165, 1166, 1014, 1018, 186, 116,
	2532, 2533, 598, 598, 2299, 1151, 2980, 2298, 2204, 1236,
	1164, 1486, 2968, 2536, 1230, 1231, 2167, 1013, 186, 2114,
	1802, 2694, 2695, 1374, 144, 1924, 1023, 145, 1295, 2310,
	1024, 1108, 1333, 1922, 2309, 2162, 1337, 598, 1878, 1229,
	81, 186, 778, 1331, 1226, 2458, 598, 793, 776, 1336,
	2783, 1334, 598, 1178, 2277, 2532, 2533, 157, 1566, 1565,
	1567, 1568, 1569, 1319, 169, 1154, 2783, 1925, 2536, 1744,
	2035, 1257, 1253, 3051, 1254, 86, 1024, 1921, 86, 1140,
	86, 1605, 86, 2976, 1112, 111, 1176, 1024, 2310, 1177,
	2344, 1126, 1047, 2309, 2726, 2657, 820, 77, 2276, 996,
	3114, 1715, 1128, 3115, 1996, 3113, 177, 1589, 1105, 1102,
	1390, 1179, 1335, 1024, 1114, 2246, 95, 3050, 1197, 1198,
	1301, 1302, 1303, 1304, 1305, 1715, 1319, 2062, 2132, 1581,
	1023, 1582, 1062, 1198, 1583, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 2813, 2701, 1324, 2700,
	1964, 176, 178, 179, 180, 112, 2906, 1736, 1725, 1726,
	1727, 1728, 1738, 1729, 1730, 1731, 1743, 1739, 1732, 1733,
	1740, 1741, 1742, 1734, 1735, 1737, 1023, 1976, 1496, 98,
	1495, 1027, 1017, 1485, 1098, 1969, 1029, 1023, 1974, 3080,
	1030, 1028, 1321, 1017, 1020, 1021, 1375, 981, 775, 1972,
	1332, 1014, 1018, 1035, 1033, 2684, 186, 1355, 777, 3118,
	1448, 1031, 2995, 1023, 2888, 2944, 1199, 1969, 1027, 1017,
	1457, 824, 1973, 1029, 1141, 1111, 1606, 1030, 1028, 1352,
	2887, 1380, 1381, 1217, 1218, 1219, 1220, 1221, 1222, 1224,
	1223, 1225, 1226, 598, 3125, 1483, 1221, 1222, 1224, 1223,
	1225, 1226, 1199, 1492, 1971, 2996, 1385, 1494, 2945, 2878,
	1497, 1498, 598, 598, 1674, 598, 1199, 598, 598, 2773,
	598, 598, 598, 598, 598, 598, 2772, 2708, 1675, 1227,
	1228, 1673, 1350, 1338, 1529, 1530, 2760, 598, 2761, 1719,
	1493, 186, 1535, 1720, 1664, 1666, 1667, 1463, 1464, 1465,
	1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226, 186, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1201, 1528, 1665, 87,
	1531, 598, 2707, 186, 1199, 2040, 2041, 2042, 1574, 3126,
	1199, 2697, 1572, 1672, 1594, 3090, 1350, 598, 2509, 186,
	2058, 719, 720, 721, 1479, 2497, 2228, 2227, 1196, 1549,
	1197, 1198, 1929, 1199, 1575, 186, 1561, 2346, 1559, 1199,
	3081, 1558, 186, 1539, 1540, 815, 1557, 1547, 1472, 1545,
	1546, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	598, 1489, 1489, 1541, 1196, 1538, 1197, 1198, 1532, 1537,
	1536, 1508, 1573, 1491, 598, 598, 1571, 2053, 1196, 2971,
	1197, 1198, 1215, 1359, 2319, 1455, 1501, 2052, 1502, 1490,
	1504, 1506, 186, 2057, 1510, 1512, 1514, 1516, 1518, 2556,
	1560, 2970, 1470, 1468, 1482, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1224, 1223, 1225, 1226, 3088, 1350, 2948, 1609,
	2947, 1601, 3033, 1350, 1469, 2946, 1613, 2883, 1615, 1616,
	1617, 1618, 2868, 1360, 2867, 1622, 1196, 2812, 1197, 1198,
	598, 1199, 1196, 1533, 1197, 1198, 2810, 1634, 1699, 1699,
	2769, 2705, 2690, 1705, 598, 1215, 2564, 2047, 1670, 1696,
	1700, 2500, 2499, 1697, 1697, 1196, 2237, 1197, 1198, 598,
	598, 1196, 1597, 1197, 1198, 2225, 1461, 1315, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226, 1000,
	999, 120, 998, 1199, 1990, 1716, 188, 189, 190, 1989,
	2691, 1349, 1833, 1668, 1815, 1636, 1677, 706, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1678, 1611, 1199, 3031, 1350, 1607, 1608, 1602, 1199,
	188, 189, 190, 1199, 2211, 1633, 186, 1570, 1632, 1562,
	1612, 598, 1552, 1548, 1759, 1544, 1543, 1619, 1620, 1621,
	1199, 2593, 1640, 1641, 1542, 1361, 1790, 1152, 187, 1199,
	1168, 187, 2153, 3104, 187, 186, 3068, 1350, 598, 599,
	1671, 187, 1350, 1196, 2913, 1197, 1198, 1350, 186, 187,
	2153, 3023, 598, 1820, 92, 1821, 94, 186, 2912, 186,
	2872, 186, 186, 598, 187, 93, 598, 2871, 1676, 2752,
	1759, 188, 189, 190, 100, 1945, 2091, 598, 1792, 188,
	189, 190, 3029, 1350, 1199, 92, 599, 1350, 2169, 599,
	187, 599, 94, 1199, 2264, 1196, 93, 1197, 1198, 1887,
	1794, 1795, 95, 2929, 1350, 1790, 2153, 3003, 1199, 2242,
	1363, 1886, 2678, 820, 1199, 1350, 820, 2656, 2079, 1199,
	1350, 95, 2512, 2658, 1791, 1196, 2453, 1197, 1198, 2153,
	2999, 1196, 598, 1197, 1198, 1196, 2034, 1197, 1198, 1936,
	1937, 1938, 1853, 2049, 1940, 1942, 1944, 1199, 2991, 1350,
	1826, 1350, 1196, 1195, 1197, 1198, 2975, 1792, 2153, 598,
	2177, 1196, 2177, 1197, 1198, 598, 1492, 2927, 1350, 1492,
	1891, 1492, 1892, 1893, 1894, 1895, 1362, 1968, 1882, 1896,
	1897, 1898, 1899, 1881, 1814, 2153, 2964, 2169, 1902, 1903,
	1904, 1905, 1350, 1701, 1864, 2744, 2961, 2924, 1350, 790,
	1707, 1708, 2630, 1848, 2610, 1958, 1199, 2200, 1828, 2326,
	2610, 1350, 598, 2420, 598, 1885, 1196, 1199, 1197, 1198,
	598, 598, 1912, 1846, 2656, 1196, 101, 1197, 1198, 1918,
	2916, 1350, 2200, 1199, 1869, 1868, 2488, 100, 824, 99,
	1196, 824, 1197, 1198, 1884, 1883, 1196, 2393, 1197, 1198,
	1970, 1196, 1793, 1197, 1198, 1796, 1797, 2176, 186, 2656,
	1955, 1928, 188, 189, 190, 186, 1943, 188, 189, 190,
	2201, 1941, 186, 186, 2891, 1350, 186, 1870, 186, 1196,
	2203, 1197, 1198, 2153, 2879, 186, 1913, 2049, 1026, 2632,
	1350, 2328, 186, 1908, 1909, 2201, 1825, 1927, 1489, 1931,
	2629, 1350, 1939, 2744, 1350, 2034, 1963, 1350, 1969, 1966,
	2084, 1967, 2177, 1983, 2153, 2742, 2627, 1350, 186, 2068,
	1025, 1913, 2067, 598, 1969, 1965, 1962, 1961, 1969, 1350,
	1952, 1199, 2661, 1350, 1195, 1350, 1841, 1985, 1196, 1354,
	1197, 1198, 3056, 1987, 1988, 1199, 1805, 1984, 1648, 1196,
	101, 1197, 1198, 1199, 1843, 1844, 1591, 2338, 2337, 2336,
	2330, 100, 2334, 99, 2329, 1196, 2327, 1197, 1198, 2084,
	1350, 2332, 94, 2025, 2026, 1199, 2490, 2489, 2028, 1382,
	2331, 1215, 2486, 2487, 1211, 1008, 1212, 2029, 1199, 1007,
	1993, 1670, 1215, 2486, 2485, 1199, 3006, 2333, 2335, 87,
	1213, 1227, 1228, 1210, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1224, 1223, 1225, 1226, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1224, 1223, 1225, 1226, 2177, 1350, 2591, 1350,
	2018, 1350, 2902, 1199, 2049, 1350, 2099, 1350, 2044, 2149,
	2046, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1223,
	1225, 1226, 1357, 2045, 94, 1199, 2034, 2285, 780, 3082,
	1199, 1451, 2267, 1196, 2869, 1197, 1198, 1199, 2260, 2261,
	2153, 2152, 2959, 2824, 1199, 1451, 1450, 1196, 2612, 1197,
	1198, 1396, 1395, 2725, 2032, 1196, 186, 1197, 1198, 1199,
	2722, 2703, 2602, 1199, 186, 2601, 1453, 1911, 2554, 598,
	2709, 2514, 2510, 1671, 1699, 598, 2268, 1196, 2043, 1197,
	1198, 2234, 2049, 2141, 1907, 2137, 598, 2876, 1901, 1697,
	1196, 1900, 1197, 1198, 1577, 1484, 187, 1196, 187, 1197,
	1198, 187, 1480, 2124, 1449, 2135, 87, 3099, 113, 2727,
	186, 1097, 2558, 2608, 186, 2233, 2674, 2061, 2668, 2669,
	2599, 2710, 2711, 2712, 2903, 1926, 1818, 37, 2229, 2210,
	1638, 599, 3097, 599, 599, 1196, 2193, 1197, 1198, 3075,
	2985, 1199, 2598, 2921, 2671, 1199, 2123, 2506, 599, 599,
	2505, 2504, 2420, 2247, 2077, 1792, 2173, 1196, 2673, 1197,
	1198, 1199, 1196, 2234, 1197, 1198, 2019, 1199, 2439, 1196,
	1524, 1197, 1198, 2154, 2438, 2442, 1196, 598, 1197, 1198,
	2443, 2440, 3062, 186, 3024, 1832, 2441, 1358, 2071, 1824,
	186, 1196, 1639, 1197, 1198, 1196, 2163, 1197, 1198, 2410,
	2412, 1791, 2662, 2150, 598, 1199, 1324, 2125, 2413, 1199,
	2444, 598, 2186, 2187, 2803, 1492, 1492, 2398, 2259, 2397,
	598, 1525, 1526, 1527, 2122, 2943, 2192, 2805, 2121, 2151,
	2652, 2407, 2221, 2223, 2713, 2236, 2059, 2282, 2214, 2166,
	2239, 2240, 2146, 1199, 2120, 2649, 2198, 2484, 186, 186,
	186, 186, 186, 2648, 794, 1199, 2281, 1590, 1520, 1199,
	2202, 766, 795, 1199, 2051, 1918, 2205, 1059, 2218, 186,
	186, 2215, 2212, 1196, 2238, 1197, 1198, 1196, 1058, 1197,
	1198, 2714, 2715, 2716, 2794, 186, 2793, 92, 2108, 2226,
	2572, 2233, 2107, 1196, 1711, 1197, 1198, 2313, 93, 1196,
	2235, 1197, 1198, 1167, 598, 1521, 1522, 1523, 1712, 2243,
	92, 2274, 121, 2111, 2112, 187, 2654, 94, 2244, 599,
	599, 93, 2248, 2249, 2250, 1351, 1353, 1843, 1844, 3110,
	94, 2280, 1472, 2502, 2792, 187, 2022, 1196, 2106, 1197,
	1198, 1196, 2105, 1197, 1198, 2960, 2104, 1699, 2898, 1699,
	776, 2483, 1699, 2343, 599, 2269, 2270, 1699, 187, 2190,
	1829, 2011, 1697, 599, 1697, 598, 2010, 1697, 2279, 599,
	2339, 2009, 1697, 2634, 2364, 1196, 2364, 1197, 1198, 2364,
	802, 803, 2302, 2038, 2364, 598, 99, 1196, 2321, 1197,
	1198, 1196, 2935, 1197, 1198, 1196, 2322, 1197, 1198, 2934,
	186, 2305, 2811, 2809, 598, 2182, 2185, 2186, 2187, 2183,
	2366, 2184, 2188, 2808, 2801, 2383, 2396, 2723, 598, 2376,
	2377, 2378, 2379, 101, 2395, 598, 598, 2340, 186, 186,
	186, 186, 186, 2369, 100, 100, 99, 2653, 2370, 2651,
	186, 2515, 1199, 1953, 1467, 186, 2323, 801, 186, 2800,
	186, 782, 101, 186, 186, 186, 2423, 2417, 2432, 2642,
	2426, 2423, 2357, 100, 2452, 1348, 1344, 2169, 2383, 3101,
	3100, 1337, 2193, 2149, 2400, 2311, 2353, 2069, 2312, 1816,
	1345, 2401, 1376, 1199, 1367, 3100, 2382, 1199, 101, 2498,
	2371, 2372, 2373, 2374, 2375, 1199, 106, 107, 186, 100,
	2388, 99, 3101, 103, 2949, 1822, 1823, 1347, 2689, 1346,
	94, 598, 2389, 2390, 2391, 792, 2399, 2414, 2415, 598,
	88, 1, 2693, 187, 186, 2103, 3045, 2402, 2392, 566,
	1806, 2454, 1322, 2538, 2455, 3076, 784, 186, 3041, 2434,
	2435, 783, 2437, 3042, 1563, 1553, 2755, 95, 2517, 2495,
	2496, 1199, 1760, 2433, 2445, 186, 2436, 1601, 186, 2456,
	599, 2449, 2450, 2899, 2518, 1959, 2102, 2721, 2573, 2431,
	2101, 2462, 1916, 1016, 1196, 1199, 1197, 1198, 2100, 599,
	599, 2493, 599, 2494, 599, 599, 146, 599, 599, 599,
	599, 599, 599, 1879, 1880, 2546, 2545, 3019, 2492, 110,
	974, 109, 1019, 1125, 599, 1954, 2745, 2219, 187, 2537,
	1888, 1402, 2516, 1400, 1401, 1196, 1918, 1197, 1198, 1196,
	1399, 1197, 1198, 1404, 1403, 187, 2549, 1196, 2070, 1197,
	1198, 2607, 2613, 1642, 2094, 1199, 595, 2189, 599, 184,
	187, 1391, 1368, 1060, 598, 186, 2565, 2570, 2571, 2568,
	2567, 556, 2491, 1991, 599, 562, 187, 1241, 2093, 1637,
	2575, 2394, 2206, 2580, 2581, 1199, 2582, 821, 2576, 2584,
	1199, 2586, 187, 2588, 2589, 814, 2583, 1817, 2139, 187,
	2428, 1199, 2646, 1196, 2406, 1197, 1198, 2408, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 599, 2156, 2411,
	1199, 1348, 1344, 2404, 186, 1199, 2942, 1196, 2802, 1197,
	1198, 599, 599, 3004, 2216, 1364, 1345, 2060, 2092, 1713,
	1858, 1663, 2692, 2635, 2636, 1199, 2640, 620, 619, 187,
	617, 2142, 2170, 186, 1202, 2643, 709, 2129, 2650, 1377,
	2181, 1341, 1342, 1347, 2179, 1346, 2178, 2020, 2089, 2655,
	2675, 1865, 186, 2088, 2670, 186, 186, 186, 2666, 2665,
	3037, 2672, 1860, 1856, 2087, 598, 598, 1196, 2148, 1197,
	1198, 684, 628, 621, 613, 2686, 2544, 599, 2679, 2728,
	2729, 2681, 2682, 2085, 2288, 2680, 2546, 2545, 2081, 2555,
	2687, 599, 2698, 2699, 1717, 2688, 2290, 1196, 1718, 1197,
	1198, 2217, 1196, 2551, 1197, 1198, 599, 599, 2080, 598,
	598, 598, 598, 1196, 1180, 1197, 1198, 1340, 607, 987,
	1710, 2904, 2966, 2037, 2595, 2704, 1339, 2706, 1723, 1724,
	2973, 2526, 1196, 2739, 1197, 1198, 2507, 1196, 2265, 1197,
	1198, 1946, 63, 41, 2732, 1751, 602, 3058, 2736, 2737,
	2738, 1171, 808, 32, 2751, 31, 30, 1196, 29, 1197,
	1198, 1351, 1804, 28, 23, 22, 1699, 21, 1699, 2749,
	2750, 20, 19, 187, 25, 18, 17, 16, 599, 2529,
	3071, 1697, 3109, 1697, 2768, 115, 50, 47, 186, 45,
	123, 122, 48, 2364, 1827, 2364, 44, 1100, 42, 27,
	26, 15, 187, 14, 2797, 599, 13, 12, 11, 10,
	9, 2762, 598, 5, 598, 187, 4, 35, 34, 599,
	33, 2764, 1174, 24, 187, 2, 187, 2776, 187, 187,
	599, 2252, 2786, 599, 1948, 0, 1699, 37, 0, 0,
	0, 2423, 0, 2820, 599, 0, 2426, 2826, 0, 2777,
	2426, 1697, 2798, 0, 0, 2806, 776, 0, 2816, 2822,
	0, 806, 0, 2807, 0, 0, 2818, 2814, 2182, 2185,
	2186, 2187, 2183, 0, 2184, 2188, 598, 0, 2668, 2669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	2877, 0, 598, 0, 0, 0, 1930, 0, 2830, 599,
	0, 0, 0, 0, 0, 598, 2827, 2828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2881,
	0, 2873, 2875, 0, 0, 2874, 599, 0, 0, 611,
	2889, 0, 599, 0, 2919, 0, 0, 2918, 2893, 2894,
	0, 0, 598, 1699, 0, 0, 598, 598, 0, 2884,
	2885, 2886, 0, 0, 2922, 2901, 0, 0, 1697, 0,
	0, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 599,
	0, 599, 0, 0, 0, 0, 0, 599, 599, 2953,
	0, 2939, 2936, 2937, 0, 2938, 0, 0, 2950, 0,
	0, 0, 0, 0, 0, 2426, 0, 0, 0, 0,
	0, 2952, 0, 0, 0, 2941, 0, 0, 776, 0,
	598, 2956, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 0, 2958, 186, 0, 0, 0, 187,
	187, 0, 0, 187, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 598, 186, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 2972, 0, 2977, 2965, 0,
	0, 0, 0, 0, 0, 37, 2969, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 182, 0,
	599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 2974, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 598, 598, 0, 0,
	0, 2997, 0, 0, 2423, 0, 0, 37, 0, 3007,
	0, 0, 598, 2050, 0, 3002, 0, 2054, 3010, 2055,
	2056, 186, 598, 3015, 3018, 3027, 3012, 3011, 2064, 3009,
	3014, 2065, 2066, 3013, 0, 0, 3005, 3036, 2213, 0,
	0, 3054, 3044, 0, 3049, 0, 2901, 3020, 0, 0,
	0, 0, 0, 161, 0, 162, 0, 3061, 2072, 2073,
	2074, 2075, 2076, 0, 2078, 0, 0, 0, 0, 0,
	2082, 3070, 2083, 0, 0, 181, 2086, 598, 0, 0,
	0, 0, 0, 0, 2095, 2096, 2097, 2098, 0, 598,
	2466, 3083, 3085, 0, 0, 0, 0, 2109, 2110, 1699,
	3098, 3092, 0, 3096, 0, 2115, 2116, 2117, 2118, 2119,
	3095, 3094, 0, 0, 1697, 1827, 0, 0, 0, 0,
	3111, 0, 0, 187, 0, 0, 2136, 3119, 0, 0,
	3117, 187, 0, 0, 0, 2467, 599, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 0, 3128,
	0, 1699, 2919, 599, 3129, 3130, 0, 0, 0, 0,
	0, 2469, 3127, 0, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 2464, 0, 187, 0, 0,
	0, 187, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 2480, 2481, 171, 0, 0, 0, 0, 2465,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 2471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 599, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2479, 0,
	0, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	2482, 156, 0, 0, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 187, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2468,
	0, 0, 0, 2380, 2381, 0, 0, 0, 0, 0,
	0, 0, 599, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 187, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 2429, 0, 0, 0,
	0, 0, 599, 599, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 2447, 2448, 0, 0, 187, 177, 0,
	0, 0, 187, 0, 0, 187, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 156,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	2472, 0, 0, 0, 2476, 0, 0, 0, 599, 0,
	0, 0, 2475, 0, 0, 0, 599, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2477, 0, 0, 0,
	0, 2473, 187, 0, 0, 187, 2474, 0, 0, 0,
	2574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2590, 2592, 2594, 0, 0, 0, 0, 0,
	0, 2600, 0, 0, 0, 0, 2604, 2605, 2606, 0,
	0, 0, 0, 2609, 0, 0, 0, 0, 0, 2611,
	0, 0, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 0, 0, 2625, 0, 2626, 2628, 0, 2631,
	0, 0, 0, 0, 2637, 0, 0, 157, 0, 0,
	0, 599, 187, 0, 169, 0, 0, 0, 1454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2659,
	2660, 0, 0, 2664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 2676, 2677, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	187, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 599, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 685, 0, 0,
	0, 2743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 599, 599, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2765, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 0, 0, 0, 0, 2774, 0, 0, 0, 2775,
	0, 0, 0, 0, 0, 2779, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 822, 0, 0, 978,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 1704, 0, 0, 0, 0, 0, 0, 1709, 599,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 1746, 1747, 1748, 1749, 1750, 1752,
	1756, 1757, 611, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	1800, 1801, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 2890, 0, 0, 0, 0, 187, 0, 611, 599,
	2897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 2907, 2908,
	2909, 0, 2910, 2911, 0, 0, 0, 0, 2914, 0,
	2915, 0, 2917, 2920, 1839, 1840, 0, 0, 0, 2923,
	2925, 2926, 2928, 2931, 0, 1419, 0, 0, 0, 599,
	0, 0, 0, 599, 599, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2957, 599, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1914, 0, 0, 0, 0, 0, 599, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 552, 187, 0, 593, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 0, 2979, 0, 0, 552,
	599, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	2984, 0, 0, 0, 789, 0, 0, 0, 0, 0,
	0, 0, 2992, 0, 551, 0, 0, 1407, 2993, 2994,
	807, 0, 807, 0, 601, 0, 0, 0, 0, 0,
	552, 0, 769, 0, 0, 0, 3000, 0, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 599, 0, 0, 0, 0, 0,
	3028, 3030, 3032, 982, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 599,
	3057, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 0, 3087, 3089, 3091, 0,
	0, 0, 0, 0, 0, 0, 599, 1433, 1436, 1437,
	1438, 1439, 1440, 1441, 0, 1442, 1443, 1444, 1445, 1446,
	1421, 1422, 1423, 1424, 1405, 1406, 1434, 0, 1408, 0,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 3121,
	3122, 1418, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	0, 822, 0, 822, 822, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 2063, 1170, 1172,
	0, 2258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 143, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 1471,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 153, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 153, 162, 0, 0,
	0, 0, 142, 0, 0, 0, 1435, 0, 0, 0,
	0, 0, 0, 1475, 1476, 152, 151, 181, 0, 0,
	0, 0, 1316, 161, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 0, 0, 0, 0,
	0, 1475, 1476, 152, 151, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	1329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1372, 147, 1477, 154, 0, 1474,
	0, 148, 149, 822, 0, 0, 0, 165, 0, 1392,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 147, 1477, 154, 0, 1474, 0, 148,
	149, 0, 0, 0, 0, 165, 552, 0, 552, 0,
	0, 552, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1101,
	0, 1107, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2341,
	2342, 0, 0, 156, 2345, 0, 0, 0, 0, 2347,
	2348, 2349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2354, 2355, 2356, 0, 0, 1763, 2358, 0, 2359,
	2360, 156, 0, 0, 2367, 2368, 0, 0, 0, 0,
	0, 0, 1763, 1763, 1763, 1763, 1763, 611, 611, 611,
	611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2384, 2385, 2386, 2387, 0, 0, 0, 0,
	978, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 1316, 0, 0, 0, 0, 0, 1500,
	1500, 0, 1500, 0, 1500, 1500, 0, 1509, 1500, 1500,
	1500, 1500, 1500, 0, 0, 0, 0, 0, 0, 150,
	1316, 2418, 0, 1316, 978, 0, 0, 0, 144, 0,
	0, 145, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2451, 0,
	0, 0, 0, 0, 0, 789, 144, 0, 1576, 145,
	0, 157, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	177, 0, 0, 0, 0, 0, 0, 822, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 822, 822, 0, 0, 0, 0, 0, 177, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1693, 2597, 0,
	0, 0, 0, 0, 0, 2603, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 1721, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 0, 1317, 0, 1831, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 822, 0, 0, 1550, 0, 0, 0, 0,
	822, 0, 0, 822, 0, 0, 0, 0, 0, 0,
	552, 0, 2724, 0, 978, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 1600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 2748, 0, 0, 0, 552,
	0, 0, 0, 1578, 0, 0, 0, 0, 1623, 1624,
	552, 552, 552, 552, 552, 552, 552, 0, 0, 985,
	3069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 1614, 2766, 0, 2767, 978, 0, 0, 552,
	2770, 2771, 985, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	0, 0, 0, 0, 2778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2787,
	0, 2788, 2789, 0, 2790, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 0, 0, 0, 0, 978,
	0, 1693, 0, 0, 0, 807, 0, 1693, 1693, 2815,
	0, 0, 807, 807, 0, 0, 0, 0, 1317, 0,
	2823, 0, 0, 2825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2870, 0, 0, 0, 0,
	0, 0, 807, 1600, 807, 807, 807, 807, 807, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 807, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 1600, 0, 552, 0, 552, 0, 552, 1867,
	0, 0, 2940, 611, 1420, 2832, 2834, 2833, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 1852,
	0, 0, 1651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1433, 1436, 1437, 1438, 1439, 1440, 1441, 0,
	1442, 1443, 1444, 1445, 1446, 1421, 1422, 1423, 1424, 1405,
	1406, 1434, 0, 1408, 611, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 0, 0, 1418, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2983, 0,
	822, 0, 0, 0, 0, 0, 2988, 0, 0, 2989,
	0, 2990, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 2143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 3055, 552,
	552, 0, 0, 552, 0, 2023, 0, 0, 0, 0,
	0, 1435, 552, 0, 0, 0, 0, 0, 0, 552,
	0, 3064, 0, 3065, 0, 3066, 0, 0, 1651, 0,
	0, 0, 0, 0, 2241, 2002, 2838, 2839, 0, 0,
	0, 0, 2016, 2017, 0, 552, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 1831, 2027, 0, 0, 0, 0, 0, 2266, 0,
	0, 0, 0, 0, 0, 0, 0, 2271, 0, 0,
	3107, 0, 3108, 0, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 696, 0, 645,
	700, 647, 697, 698, 0, 643, 646, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 649, 2831, 2835, 2836, 2837,
	2840, 2841, 2842, 2850, 2852, 673, 2851, 2853, 2854, 2855,
	2858, 2859, 2860, 2861, 2856, 2857, 2862, 2863, 2864, 2865,
	2866, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 807, 1316, 0, 1316,
	0, 0, 1316, 0, 0, 0, 0, 1316, 0, 0,
	1600, 0, 0, 552, 0, 78, 39, 40, 80, 0,
	0, 1550, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 43,
	69, 70, 1500, 67, 71, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 2403, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 552, 0, 0, 0, 822, 0, 0, 0, 1316,
	0, 56, 2430, 1500, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 2251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 1316, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 2245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 552, 552, 552, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 552, 46, 49,
	52, 51, 54, 0, 66, 0, 0, 75, 72, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 2293, 2294,
	2295, 2296, 2297, 0, 0, 0, 0, 807, 0, 0,
	55, 83, 82, 0, 0, 64, 65, 53, 0, 1651,
	2306, 0, 0, 73, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1317, 0, 1317,
	0, 2403, 1317, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 57, 58, 0, 59, 60, 61, 62,
	0, 807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1317,
	0, 0, 0, 0, 1317, 552, 552, 552, 552, 552,
	0, 0, 0, 0, 0, 0, 0, 2446, 0, 0,
	0, 0, 552, 0, 0, 1550, 0, 552, 0, 0,
	552, 2457, 1600, 0, 0, 0, 0, 0, 779, 0,
	79, 0, 1831, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 779, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2756, 2757, 2758, 2759,
	0, 1317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 2503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 552, 1316, 0, 1316, 0,
	0, 0, 0, 0, 2541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2566, 0, 0, 2569, 0,
	0, 0, 0, 0, 1316, 0, 0, 0, 0, 2819,
	0, 2821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2639, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 2932,
	0, 0, 0, 2932, 2932, 0, 0, 0, 0, 552,
	0, 0, 552, 552, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 2702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2717, 0, 0, 2718, 2719, 2720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 1317, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 2998,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 822, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 1160, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 2138, 0, 0, 717, 718,
	779, 1237, 1238, 1239, 1698, 1242, 3039, 1244, 1245, 1246,
	1247, 0, 1250, 1252, 1252, 0, 1252, 1256, 1256, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 0, 1294, 0, 1296, 1297,
	1298, 1299, 1300, 0, 0, 0, 0, 1256, 1256, 1256,
	1256, 1256, 1306, 1307, 1308, 1309, 0, 0, 0, 0,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 552, 0, 0, 0, 0, 779, 0, 0, 0,
	779, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 710,
	717, 718, 719, 720, 721, 711, 713, 0, 0, 0,
	712, 0, 0, 0, 2978, 0, 0, 1317, 0, 0,
	0, 0, 0, 715, 722, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 710, 717, 718, 719, 720, 721, 711,
	713, 0, 0, 0, 712, 0, 0, 0, 1550, 0,
	2547, 2548, 0, 0, 0, 0, 0, 715, 722, 723,
	0, 0, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 2547, 2548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 0, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 696, 1024, 0, 700, 0, 697,
	698, 0, 0, 0, 699, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 1023, 509, 0, 0, 0,
	0, 0, 1020, 1021, 335, 981, 304, 192, 212, 1014,
	1018, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 1859, 0, 390, 429, 227, 494, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 352, 442,
	491, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 421, 422,
	423, 424, 986, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 717, 718, 345, 470, 471, 290, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2174, 2175, 0, 0, 0, 0, 0, 0, 0,
	2194, 0, 2195, 2196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2427, 0, 79, 0, 0, 1859, 1859,
	1859, 1859, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2194, 779, 0, 0, 0,
	1859, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2791, 0, 2795, 2796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2427,
	0, 79, 0, 2427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1306, 1307, 1308, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	363, 0, 0, 956, 941, 469, 0, 886, 959, 855,
	874, 969, 877, 880, 922, 834, 900, 381, 871, 827,
	859, 829, 866, 830, 857, 888, 252, 854, 943, 904,
	958, 336, 249, 836, 860, 395, 876, 197, 924, 443,
	236, 346, 343, 476, 264, 255, 251, 235, 291, 353,
	393, 463, 387, 965, 340, 910, 3001, 453, 366, 0,
	0, 79, 890, 947, 898, 936, 885, 923, 844, 909,
	960, 872, 919, 961, 297, 234, 299, 196, 378, 454,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 3021,
	0, 3022, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 868, 916, 955, 869, 918, 247, 295, 254, 246,
	473, 966, 946, 833, 897, 954, 0, 0, 216, 957,
	892, 0, 921, 0, 972, 828, 912, 0, 831, 835,
	968, 950, 863, 257, 0, 0, 0, 0, 0, 0,
	0, 889, 899, 933, 937, 883, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 908, 0, 0, 0, 840,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 843, 0, 862,
	934, 0, 826, 278, 837, 367, 239, 0, 939, 949,
	884, 509, 953, 882, 881, 928, 841, 945, 875, 335,
	839, 304, 192, 212, 0, 873, 377, 420, 430, 944,
	858, 867, 237, 865, 428, 391, 492, 220, 266, 417,
	397, 426, 404, 269, 907, 926, 427, 341, 478, 411,
	489, 510, 511, 245, 371, 500, 467, 506, 524, 213,
	242, 385, 460, 495, 450, 364, 474, 475, 303, 449,
	276, 195, 339, 516, 211, 436, 229, 218, 480, 498,
	271, 415, 203, 462, 487, 226, 440, 0, 0, 526,
	205, 485, 459, 360, 300, 301, 204, 0, 416, 250,
	274, 240, 380, 482, 483, 238, 527, 215, 505, 207,
	1162, 504, 373, 477, 486, 361, 351, 206, 484, 359,
	350, 306, 325, 326, 262, 285, 409, 344, 410, 286,
	369, 368, 370, 199, 496, 0, 200, 0, 455, 497,
	528, 221, 222, 224, 853, 261, 265, 273, 275, 281,
	282, 289, 337, 384, 408, 406, 412, 940, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 372, 288, 451, 305, 342, 931, 971, 390, 429,
	227, 494, 452, 848, 852, 846, 913, 847, 902, 903,
	849, 962, 963, 964, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 935, 842, 0, 850, 851, 0, 942,
	951, 952, 547, 352, 442, 491, 307, 319, 322, 312,
	331, 0, 332, 308, 309, 314, 316, 317, 318, 323,
	324, 328, 334, 421, 422, 423, 424, 906, 191, 208,
	338, 967, 413, 270, 525, 503, 499, 198, 210, 845,
	244, 856, 864, 0, 870, 878, 879, 891, 893, 894,
	895, 896, 914, 915, 917, 925, 927, 930, 932, 938,
	948, 970, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 431, 432, 433, 434, 435, 438,
	439, 444, 445, 446, 447, 448, 456, 457, 461, 479,
	481, 493, 507, 512, 437, 280, 488, 513, 0, 347,
	905, 911, 349, 263, 283, 294, 920, 502, 458, 214,
	425, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 441, 464,
	465, 466, 468, 362, 248, 398, 901, 929, 345, 470,
	471, 290, 363, 0, 0, 956, 941, 469, 0, 886,
	959, 855, 874, 969, 877, 880, 922, 834, 900, 381,
	871, 827, 859, 829, 866, 830, 857, 888, 252, 854,
	943, 904, 958, 336, 249, 836, 860, 395, 876, 197,
	924, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 965, 340, 910, 0, 453,
	366, 0, 0, 0, 890, 947, 898, 936, 885, 923,
	844, 909, 960, 872, 919, 961, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 868, 916, 955, 869, 918, 247, 295,
	254, 246, 473, 966, 946, 833, 897, 954, 0, 0,
	216, 957, 892, 0, 921, 0, 972, 828, 912, 0,
	831, 835, 968, 950, 863, 257, 0, 0, 0, 0,
	0, 0, 0, 889, 899, 933, 937, 883, 0, 0,
	0, 0, 0, 2458, 0, 861, 0, 908, 0, 0,
	0, 840, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 843,
	0, 862, 934, 0, 826, 278, 837, 367, 239, 0,
	939, 949, 884, 509, 953, 882, 881, 928, 841, 945,
	875, 335, 839, 304, 192, 212, 0, 873, 377, 420,
	430, 944, 858, 867, 237, 865, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 907, 926, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 1162, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 853, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 940,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 931, 971,
	390, 429, 227, 494, 452, 848, 852, 846, 913, 847,
	902, 903, 849, 962, 963, 964, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 935, 842, 0, 850, 851,
	0, 942, 951, 952, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 906,
	191, 208, 338, 967, 413, 270, 525, 503, 499, 198,
	210, 845, 244, 856, 864, 0, 870, 878, 879, 891,
	893, 894, 895, 896, 914, 915, 917, 925, 927, 930,
	932, 938, 948, 970, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 905, 911, 349, 263, 283, 294, 920, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 901, 929,
	345, 470, 471, 290, 363, 0, 0, 956, 941, 469,
	0, 886, 959, 855, 874, 969, 877, 880, 922, 834,
	900, 381, 871, 827, 859, 829, 866, 830, 857, 888,
	252, 854, 943, 904, 958, 336, 249, 836, 860, 395,
	876, 197, 924, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 965, 340, 910,
	0, 453, 366, 0, 0, 0, 890, 947, 898, 936,
	885, 923, 844, 909, 960, 872, 919, 961, 297, 234,
	299, 196, 378, 454, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 868, 916, 955, 869, 918,
	247, 295, 254, 246, 473, 966, 946, 833, 897, 954,
	0, 0, 216, 957, 892, 0, 921, 0, 972, 828,
	912, 0, 831, 835, 968, 950, 863, 257, 0, 0,
	0, 0, 0, 0, 0, 889, 899, 933, 937, 883,
	0, 0, 0, 0, 0, 2416, 0, 861, 0, 908,
	0, 0, 0, 840, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 843, 0, 862, 934, 0, 826, 278, 837, 367,
	239, 0, 939, 949, 884, 509, 953, 882, 881, 928,
	841, 945, 875, 335, 839, 304, 192, 212, 0, 873,
	377, 420, 430, 944, 858, 867, 237, 865, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 907, 926,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 487, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 1162, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 853, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 940, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 372, 288, 451, 305, 342,
	931, 971, 390, 429, 227, 494, 452, 848, 852, 846,
	913, 847, 902, 903, 849, 962, 963, 964, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 935, 842, 0,
	850, 851, 0, 942, 951, 952, 547, 352, 442, 491,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 421, 422, 423,
	424, 906, 191, 208, 338, 967, 413, 270, 525, 503,
	499, 198, 210, 845, 244, 856, 864, 0, 870, 878,
	879, 891, 893, 894, 895, 896, 914, 915, 917, 925,
	927, 930, 932, 938, 948, 970, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 280,
	488, 513, 0, 347, 905, 911, 349, 263, 283, 294,
	920, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	901, 929, 345, 470, 471, 290, 363, 0, 0, 956,
	941, 469, 0, 886, 959, 855, 874, 969, 877, 880,
	922, 834, 900, 381, 871, 827, 859, 829, 866, 830,
	857, 888, 252, 854, 943, 904, 958, 336, 249, 836,
	860, 395, 876, 197, 924, 443, 236, 346, 343, 476,
	264, 255, 251, 235, 291, 353, 393, 463, 387, 965,
	340, 910, 0, 453, 366, 0, 0, 0, 890, 947,
	898, 936, 885, 923, 844, 909, 960, 872, 919, 961,
	297, 234, 299, 196, 378, 454, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 868, 916, 955,
	869, 918, 247, 295, 254, 246, 473, 966, 946, 833,
	897, 954, 0, 0, 216, 957, 892, 0, 921, 0,
	972, 828, 912, 0, 831, 835, 968, 950, 863, 257,
	0, 0, 0, 0, 0, 0, 0, 889, 899, 933,
	937, 883, 0, 0, 0, 0, 0, 1847, 0, 861,
	0, 908, 0, 0, 0, 840, 832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 887,
	0, 0, 0, 843, 0, 862, 934, 0, 826, 278,
	837, 367, 239, 0, 939, 949, 884, 509, 953, 882,
	881, 928, 841, 945, 875, 335, 839, 304, 192, 212,
	0, 873, 377, 420, 430, 944, 858, 867, 237, 865,
	428, 391, 492, 220, 266, 417, 397, 426, 404, 269,
	907, 926, 427, 341, 478, 411, 489, 510, 511, 245,
	371, 500, 467, 506, 524, 213, 242, 385, 460, 495,
	450, 364, 474, 475, 303, 449, 276, 195, 339, 516,
	211, 436, 229, 218, 480, 498, 271, 415, 203, 462,
	487, 226, 440, 0, 0, 526, 205, 485, 459, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 482,
	483, 238, 527, 215, 505, 207, 1162, 504, 373, 477,
	486, 361, 351, 206, 484, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	496, 0, 200, 0, 455, 497, 528, 221, 222, 224,
	853, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 940, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 372, 288, 451,
	305, 342, 931, 971, 390, 429, 227, 494, 452, 848,
	852, 846, 913, 847, 902, 903, 849, 962, 963, 964,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 935,
	842, 0, 850, 851, 0, 942, 951, 952, 547, 352,
	442, 491, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 421,
	422, 423, 424, 906, 191, 208, 338, 967, 413, 270,
	525, 503, 499, 198, 210, 845, 244, 856, 864, 0,
	870, 878, 879, 891, 893, 894, 895, 896, 914, 915,
	917, 925, 927, 930, 932, 938, 948, 970, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	431, 432, 433, 434, 435, 438, 439, 444, 445, 446,
	447, 448, 456, 457, 461, 479, 481, 493, 507, 512,
	437, 280, 488, 513, 0, 347, 905, 911, 349, 263,
	283, 294, 920, 502, 458, 214, 425, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 441, 464, 465, 466, 468, 362,
	248, 398, 901, 929, 345, 470, 471, 290, 363, 0,
	0, 956, 941, 469, 0, 886, 959, 855, 874, 969,
	877, 880, 922, 834, 900, 381, 871, 827, 859, 829,
	866, 830, 857, 888, 252, 854, 943, 904, 958, 336,
	249, 836, 860, 395, 876, 197, 924, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 965, 340, 910, 0, 453, 366, 0, 0, 0,
	890, 947, 898, 936, 885, 923, 844, 909, 960, 872,
	919, 961, 297, 234, 299, 196, 378, 454, 268, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 868,
	916, 955, 869, 918, 247, 295, 254, 246, 473, 966,
	946, 833, 897, 954, 0, 0, 216, 957, 892, 0,
	921, 0, 972, 828, 912, 0, 831, 835, 968, 950,
	863, 257, 0, 0, 0, 0, 0, 0, 0, 889,
	899, 933, 937, 883, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 908, 0, 0, 0, 840, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 0, 843, 0, 862, 934, 0,
	826, 278, 837, 367, 239, 0, 939, 949, 884, 509,
	953, 882, 881, 928, 841, 945, 875, 335, 839, 304,
	192, 212, 0, 873, 377, 420, 430, 944, 858, 867,
	237, 865, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 907, 926, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 1162, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 853, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 940, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 931, 971, 390, 429, 227, 494,
	452, 848, 852, 846, 913, 847, 902, 903, 849, 962,
	963, 964, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 935, 842, 0, 850, 851, 0, 942, 951, 952,
	547, 352, 442, 491, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 421, 422, 423, 424, 906, 191, 208, 338, 967,
	413, 270, 525, 503, 499, 198, 210, 845, 244, 856,
	864, 0, 870, 878, 879, 891, 893, 894, 895, 896,
	914, 915, 917, 925, 927, 930, 932, 938, 948, 970,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 905, 911,
	349, 263, 283, 294, 920, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 901, 929, 345, 470, 471, 290,
	363, 0, 0, 956, 941, 469, 0, 886, 959, 855,
	874, 969, 877, 880, 922, 834, 900, 381, 871, 827,
	859, 829, 866, 830, 857, 888, 252, 854, 943, 904,
	958, 336, 249, 836, 860, 395, 876, 197, 924, 443,
	236, 346, 343, 476, 264, 255, 251, 235, 291, 353,
	393, 463, 387, 965, 340, 910, 0, 453, 366, 0,
	0, 0, 890, 947, 898, 936, 885, 923, 844, 909,
	960, 872, 919, 961, 297, 234, 299, 196, 378, 454,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 868, 916, 955, 869, 918, 247, 295, 254, 246,
	473, 966, 946, 833, 897, 954, 0, 0, 216, 957,
	892, 0, 921, 0, 972, 828, 912, 0, 831, 835,
	968, 950, 863, 257, 0, 0, 0, 0, 0, 0,
	0, 889, 899, 933, 937, 883, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 908, 0, 0, 0, 840,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 843, 0, 862,
	934, 0, 826, 278, 837, 367, 239, 0, 939, 949,
	884, 509, 953, 882, 881, 928, 841, 945, 875, 335,
	839, 304, 192, 212, 0, 873, 377, 420, 430, 944,
	858, 867, 237, 865, 428, 391, 492, 220, 266, 417,
	397, 426, 404, 269, 907, 926, 427, 341, 478, 411,
	489, 510, 511, 245, 371, 500, 467, 506, 524, 213,
	242, 385, 460, 495, 450, 364, 474, 475, 303, 449,
	276, 195, 339, 516, 211, 436, 229, 218, 480, 498,
	271, 415, 203, 462, 487, 226, 440, 0, 0, 526,
	205, 485, 459, 360, 300, 301, 204, 0, 416, 250,
	274, 240, 380, 482, 483, 238, 527, 215, 505, 207,
	1162, 504, 373, 477, 486, 361, 351, 206, 484, 359,
	350, 306, 325, 326, 262, 285, 409, 344, 410, 286,
	369, 368, 370, 199, 496, 0, 200, 0, 455, 497,
	528, 221, 222, 224, 853, 261, 265, 273, 275, 281,
	282, 289, 337, 384, 408, 406, 412, 940, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 372, 288, 451, 305, 342, 931, 971, 390, 429,
	227, 494, 452, 848, 852, 846, 913, 847, 902, 903,
	849, 962, 963, 964, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 935, 842, 0, 850, 851, 0, 942,
	951, 952, 547, 352, 442, 491, 307, 319, 322, 312,
	331, 0, 332, 308, 309, 314, 316, 317, 318, 323,
	324, 328, 334, 421, 422, 423, 424, 906, 191, 208,
	338, 967, 413, 270, 525, 503, 499, 198, 210, 845,
	244, 856, 864, 0, 870, 878, 879, 891, 893, 894,
	895, 896, 914, 915, 917, 925, 927, 930, 932, 938,
	948, 970, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 431, 432, 433, 434, 435, 438,
	439, 444, 445, 446, 447, 448, 456, 457, 461, 479,
	481, 493, 507, 512, 437, 280, 488, 513, 0, 347,
	905, 911, 349, 263, 283, 294, 920, 502, 458, 214,
	425, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 441, 464,
	465, 466, 468, 362, 248, 398, 901, 929, 345, 470,
	471, 290, 363, 0, 0, 956, 941, 469, 0, 886,
	959, 855, 874, 969, 877, 880, 922, 834, 900, 381,
	871, 827, 859, 829, 866, 830, 857, 888, 252, 854,
	943, 904, 958, 336, 249, 836, 860, 395, 876, 197,
	924, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 965, 340, 910, 0, 453,
	366, 0, 0, 0, 890, 947, 898, 936, 885, 923,
	844, 909, 960, 872, 919, 961, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 868, 916, 955, 869, 918, 247, 295,
	254, 246, 473, 966, 946, 833, 897, 954, 0, 0,
	973, 957, 892, 0, 921, 0, 972, 828, 912, 0,
	831, 835, 968, 950, 863, 257, 0, 0, 0, 0,
	0, 0, 0, 889, 899, 933, 937, 883, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 908, 0, 0,
	0, 840, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 843,
	0, 862, 934, 0, 826, 278, 837, 367, 239, 0,
	939, 949, 884, 509, 953, 882, 881, 928, 841, 945,
	875, 335, 839, 304, 192, 212, 0, 873, 377, 420,
	430, 944, 858, 867, 237, 865, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 907, 926, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 838, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 853, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 940,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 825, 819, 818, 305, 342, 931, 971,
	390, 429, 227, 494, 452, 848, 852, 846, 913, 847,
	902, 903, 849, 962, 963, 964, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 935, 842, 0, 850, 851,
	0, 942, 951, 952, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 906,
	191, 208, 338, 967, 413, 270, 525, 503, 499, 198,
	210, 845, 244, 856, 864, 0, 870, 878, 879, 891,
	893, 894, 895, 896, 914, 915, 917, 925, 927, 930,
	932, 938, 948, 970, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 905, 911, 349, 263, 283, 294, 920, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 901, 929,
	345, 470, 471, 290, 363, 0, 0, 956, 941, 469,
	0, 886, 959, 855, 874, 969, 877, 880, 922, 834,
	900, 381, 871, 827, 859, 829, 866, 830, 857, 888,
	252, 854, 943, 904, 958, 336, 249, 836, 860, 395,
	876, 197, 924, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 965, 340, 910,
	0, 453, 366, 0, 0, 0, 890, 947, 898, 936,
	885, 923, 844, 909, 960, 872, 919, 961, 297, 234,
	299, 196, 378, 454, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 868, 916, 955, 869, 918,
	247, 295, 254, 246, 473, 966, 946, 833, 897, 954,
	0, 0, 973, 957, 892, 0, 921, 0, 972, 828,
	912, 0, 831, 835, 968, 950, 863, 257, 0, 0,
	0, 0, 0, 0, 0, 889, 899, 933, 937, 883,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 908,
	0, 0, 0, 840, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 843, 0, 862, 934, 0, 826, 278, 837, 367,
	239, 0, 939, 949, 884, 509, 953, 882, 881, 928,
	841, 945, 875, 335, 839, 304, 192, 212, 0, 873,
	377, 420, 430, 944, 858, 867, 237, 865, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 907, 926,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 1383, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 838, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 853, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 940, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 825, 819, 818, 305, 342,
	931, 971, 390, 429, 227, 494, 452, 848, 852, 846,
	913, 847, 902, 903, 849, 962, 963, 964, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 935, 842, 0,
	850, 851, 0, 942, 951, 952, 547, 352, 442, 491,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 421, 422, 423,
	424, 906, 191, 208, 338, 967, 413, 270, 525, 503,
	499, 198, 210, 845, 244, 856, 864, 0, 870, 878,
	879, 891, 893, 894, 895, 896, 914, 915, 917, 925,
	927, 930, 932, 938, 948, 970, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 280,
	488, 513, 0, 347, 905, 911, 349, 263, 283, 294,
	920, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	901, 929, 345, 470, 471, 290, 363, 0, 0, 956,
	941, 469, 0, 886, 959, 855, 874, 969, 877, 880,
	922, 834, 900, 381, 871, 827, 859, 829, 866, 830,
	857, 888, 252, 854, 943, 904, 958, 336, 249, 836,
	860, 395, 876, 197, 924, 443, 236, 346, 343, 476,
	264, 255, 251, 235, 291, 353, 393, 463, 387, 965,
	340, 910, 0, 453, 366, 0, 0, 0, 890, 947,
	898, 936, 885, 923, 844, 909, 960, 872, 919, 961,
	297, 234, 299, 196, 378, 454, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 868, 916, 955,
	869, 918, 247, 295, 254, 246, 473, 966, 946, 833,
	897, 954, 0, 0, 973, 957, 892, 0, 921, 0,
	972, 828, 912, 0, 831, 835, 968, 950, 863, 257,
	0, 0, 0, 0, 0, 0, 0, 889, 899, 933,
	937, 883, 0, 0, 0, 0, 0, 0, 0, 861,
	0, 908, 0, 0, 0, 840, 832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 887,
	0, 0, 0, 843, 0, 862, 934, 0, 826, 278,
	837, 367, 239, 0, 939, 949, 884, 509, 953, 882,
	881, 928, 841, 945, 875, 335, 839, 304, 192, 212,
	0, 873, 377, 420, 430, 944, 858, 867, 237, 865,
	428, 391, 492, 220, 266, 417, 397, 426, 404, 269,
	907, 926, 427, 341, 478, 411, 489, 510, 511, 245,
	371, 500, 467, 506, 524, 213, 242, 385, 460, 495,
	450, 364, 474, 475, 303, 449, 276, 195, 339, 516,
	211, 436, 229, 218, 480, 498, 271, 415, 203, 462,
	816, 226, 440, 0, 0, 526, 205, 485, 459, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 482,
	483, 238, 527, 215, 505, 207, 838, 504, 373, 477,
	486, 361, 351, 206, 484, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	496, 0, 200, 0, 455, 497, 528, 221, 222, 224,
	853, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 940, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 825, 819, 818,
	305, 342, 931, 971, 390, 429, 227, 494, 452, 848,
	852, 846, 913, 847, 902, 903, 849, 962, 963, 964,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 935,
	842, 0, 850, 851, 0, 942, 951, 952, 547, 352,
	442, 491, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 421,
	422, 423, 424, 906, 191, 208, 338, 967, 413, 270,
	525, 503, 499, 198, 210, 845, 244, 856, 864, 0,
	870, 878, 879, 891, 893, 894, 895, 896, 914, 915,
	917, 925, 927, 930, 932, 938, 948, 970, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	431, 432, 433, 434, 435, 438, 439, 444, 445, 446,
	447, 448, 456, 457, 461, 479, 481, 493, 507, 512,
	437, 280, 488, 513, 0, 347, 905, 911, 349, 263,
	283, 294, 920, 502, 458, 214, 425, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 441, 464, 465, 466, 468, 362,
	248, 398, 901, 929, 345, 470, 471, 290, 363, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 1787, 0,
	629, 0, 0, 0, 252, 634, 0, 0, 0, 336,
	249, 0, 1788, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 641, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 636, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	87, 0, 0, 188, 189, 190, 710, 717, 718, 719,
	720, 721, 711, 713, 0, 0, 225, 712, 232, 652,
	654, 653, 663, 664, 665, 666, 667, 668, 669, 650,
	715, 722, 723, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 612, 626, 0, 640, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 623, 624, 805,
	0, 0, 0, 690, 0, 625, 0, 0, 633, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 689, 0, 0, 509,
	0, 0, 687, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 0, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	658, 659, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 696, 688, 645, 700, 647, 697, 698, 642, 643,
	646, 699, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 691, 632, 631, 0, 638, 639, 0, 648, 649,
	651, 655, 656, 657, 660, 661, 662, 670, 672, 673,
	671, 674, 675, 676, 679, 680, 681, 682, 677, 678,
	683, 701, 702, 703, 704, 630, 191, 208, 338, 0,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 363, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 629, 0, 0,
	0, 252, 634, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 641, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 87, 0, 0,
	188, 189, 190, 710, 717, 718, 719, 720, 721, 711,
	713, 0, 0, 225, 712, 232, 652, 654, 653, 663,
	664, 665, 666, 667, 668, 669, 650, 715, 722, 723,
	0, 247, 295, 254, 246, 473, 0, 0, 1753, 1754,
	1755, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 612, 626, 0, 640, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 624, 0, 0, 0, 0,
	690, 0, 625, 0, 0, 633, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 689, 0, 0, 509, 0, 0, 687,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 658, 659, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 696, 688,
	645, 700, 647, 697, 698, 642, 643, 646, 699, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 691, 632,
	631, 0, 638, 639, 0, 648, 649, 651, 655, 656,
	657, 660, 661, 662, 670, 672, 673, 671, 674, 675,
	676, 679, 680, 681, 682, 677, 678, 683, 701, 702,
	703, 704, 630, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 629, 0, 0, 0, 252, 634,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 641, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 636, 637, 0, 0,
	0, 0, 0, 0, 1874, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 87, 0, 0, 188, 189, 190,
	710, 717, 718, 719, 720, 721, 711, 713, 0, 0,
	225, 712, 232, 652, 654, 653, 663, 664, 665, 666,
	667, 668, 669, 650, 715, 722, 723, 1875, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 612, 626,
	0, 640, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 690, 0, 625,
	0, 0, 633, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	689, 0, 0, 509, 0, 0, 687, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 658, 659, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 696, 688, 645, 700, 647,
	697, 698, 642, 643, 646, 699, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 691, 632, 631, 0, 638,
	639, 0, 648, 649, 651, 655, 656, 657, 660, 661,
	662, 670, 672, 673, 671, 674, 675, 676, 679, 680,
	681, 682, 677, 678, 683, 701, 702, 703, 704, 630,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 0,
	345, 470, 471, 290, 363, 0, 0, 0, 78, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 629, 0, 0, 0,
	252, 634, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 641, 340, 0,
	0, 453, 366, 0, 0, 0, 0, 0, 636, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 454, 268, 0, 87, 0, 0, 188,
	189, 190, 710, 717, 718, 719, 720, 721, 711, 713,
	0, 0, 225, 712, 232, 652, 654, 653, 663, 664,
	665, 666, 667, 668, 669, 650, 715, 722, 723, 0,
	247, 295, 254, 246, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	612, 626, 0, 640, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 624, 0, 0, 0, 0, 690,
	0, 625, 0, 0, 633, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 367,
	239, 0, 689, 0, 0, 509, 0, 0, 687, 0,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 430, 0, 0, 0, 237, 0, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 0, 0,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 487, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 0, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 658, 659, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 372, 288, 451, 305, 342,
	0, 0, 390, 429, 227, 494, 452, 696, 688, 645,
	700, 647, 697, 698, 642, 643, 646, 699, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 691, 632, 631,
	0, 638, 639, 0, 648, 649, 651, 655, 656, 657,
	660, 661, 662, 670, 672, 673, 671, 674, 675, 676,
	679, 680, 681, 682, 677, 678, 683, 701, 702, 703,
	704, 630, 191, 208, 338, 86, 413, 270, 525, 503,
	499, 198, 210, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 280,
	488, 513, 0, 347, 0, 0, 349, 263, 283, 294,
	0, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	0, 363, 345, 470, 471, 290, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 629, 0, 0, 0, 252, 634, 0,
	0, 0, 336, 249, 0, 0, 395, 0, 197, 0,
	443, 236, 346, 343, 476, 264, 255, 251, 235, 291,
	353, 393, 463, 387, 641, 340, 0, 0, 453, 366,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 234, 299, 196, 378,
	454, 268, 0, 87, 0, 0, 188, 189, 190, 710,
	717, 718, 719, 720, 721, 711, 713, 0, 0, 225,
	712, 232, 652, 654, 653, 663, 664, 665, 666, 667,
	668, 669, 650, 715, 722, 723, 0, 247, 295, 254,
	246, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 612, 626, 0,
	640, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 690, 0, 625, 0,
	0, 633, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 689,
	0, 0, 509, 0, 0, 687, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 430,
	0, 0, 0, 237, 0, 428, 391, 492, 220, 266,
	417, 397, 426, 404, 269, 3008, 0, 427, 341, 478,
	411, 489, 510, 511, 245, 371, 500, 467, 506, 524,
	213, 242, 385, 460, 495, 450, 364, 474, 475, 303,
	449, 276, 195, 339, 516, 211, 436, 229, 218, 480,
	498, 271, 415, 203, 462, 487, 226, 440, 0, 0,
	526, 205, 485, 459, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 482, 483, 238, 527, 215, 505,
	207, 0, 504, 373, 477, 486, 361, 351, 206, 484,
	359, 350, 306, 658, 659, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 496, 0, 200, 0, 455,
	497, 528, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 372, 288, 451, 305, 342, 0, 0, 390,
	429, 227, 494, 452, 696, 688, 645, 700, 647, 697,
	698, 642, 643, 646, 699, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 691, 632, 631, 0, 638, 639,
	0, 648, 649, 651, 655, 656, 657, 660, 661, 662,
	670, 672, 673, 671, 674, 675, 676, 679, 680, 681,
	682, 677, 678, 683, 701, 702, 703, 704, 630, 191,
	208, 338, 0, 413, 270, 525, 503, 499, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 431, 432, 433, 434, 435,
	438, 439, 444, 445, 446, 447, 448, 456, 457, 461,
	479, 481, 493, 507, 512, 437, 280, 488, 513, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 502, 458,
	214, 425, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 441,
	464, 465, 466, 468, 362, 248, 398, 0, 363, 345,
	470, 471, 290, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	629, 0, 0, 0, 252, 634, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 641, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 636, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	87, 0, 1350, 188, 189, 190, 710, 717, 718, 719,
	720, 721, 711, 713, 0, 0, 225, 712, 232, 652,
	654, 653, 663, 664, 665, 666, 667, 668, 669, 650,
	715, 722, 723, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 612, 626, 0, 640, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 690, 0, 625, 0, 0, 633, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 689, 0, 0, 509,
	0, 0, 687, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 0, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	658, 659, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 696, 688, 645, 700, 647, 697, 698, 642, 643,
	646, 699, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 691, 632, 631, 0, 638, 639, 0, 648, 649,
	651, 655, 656, 657, 660, 661, 662, 670, 672, 673,
	671, 674, 675, 676, 679, 680, 681, 682, 677, 678,
	683, 701, 702, 703, 704, 630, 191, 208, 338, 0,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 363, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 629, 0, 0,
	0, 252, 634, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 641, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 87, 0, 0,
	188, 189, 190, 710, 717, 718, 719, 720, 721, 711,
	713, 0, 0, 225, 712, 232, 652, 654, 653, 663,
	664, 665, 666, 667, 668, 669, 650, 715, 722, 723,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 612, 626, 0, 640, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 624, 805, 0, 0, 0,
	690, 0, 625, 0, 0, 633, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 689, 0, 0, 509, 0, 0, 687,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 658, 659, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 696, 688,
	645, 700, 647, 697, 698, 642, 643, 646, 699, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 691, 632,
	631, 0, 638, 639, 0, 648, 649, 651, 655, 656,
	657, 660, 661, 662, 670, 672, 673, 671, 674, 675,
	676, 679, 680, 681, 682, 677, 678, 683, 701, 702,
	703, 704, 630, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 629, 0, 0, 0, 252, 634,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 641, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 636, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 87, 0, 0, 188, 189, 190,
	710, 717, 718, 719, 720, 721, 711, 713, 0, 0,
	225, 712, 232, 652, 654, 653, 663, 664, 665, 666,
	667, 668, 669, 650, 715, 722, 723, 0, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 612, 626,
	0, 640, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 690, 0, 625,
	0, 0, 633, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	689, 0, 0, 509, 0, 0, 687, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 658, 659, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 696, 688, 645, 700, 647,
	697, 698, 642, 643, 646, 699, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 691, 632, 631, 0, 638,
	639, 0, 648, 649, 651, 655, 656, 657, 660, 661,
	662, 670, 672, 673, 671, 674, 675, 676, 679, 680,
	681, 682, 677, 678, 683, 701, 702, 703, 704, 630,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 363,
	345, 470, 471, 290, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 629, 0, 0, 0, 252, 634, 0, 0, 0,
	336, 249, 0, 0, 395, 0, 197, 0, 443, 236,
	346, 343, 476, 264, 255, 251, 235, 291, 353, 393,
	463, 387, 641, 340, 0, 0, 453, 366, 0, 0,
	0, 0, 0, 636, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 234, 299, 196, 378, 454, 268,
	0, 87, 0, 0, 188, 189, 190, 710, 717, 718,
	719, 720, 721, 711, 713, 0, 0, 225, 712, 232,
	652, 654, 653, 663, 664, 665, 666, 667, 668, 669,
	650, 715, 722, 723, 0, 247, 295, 254, 246, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 626, 0, 640, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 623, 624,
	0, 0, 0, 0, 690, 0, 625, 0, 0, 633,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 689, 0, 0,
	509, 0, 0, 687, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 430, 0, 0,
	0, 237, 0, 428, 391, 492, 220, 266, 417, 397,
	426, 404, 269, 0, 0, 427, 341, 478, 411, 489,
	510, 511, 245, 371, 500, 467, 506, 524, 213, 242,
	385, 460, 495, 450, 364, 474, 475, 303, 449, 276,
	195, 339, 516, 211, 436, 229, 218, 480, 498, 271,
	415, 203, 462, 487, 226, 440, 0, 0, 526, 205,
	485, 459, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 482, 483, 238, 527, 215, 505, 207, 0,
	504, 373, 477, 486, 361, 351, 206, 484, 359, 350,
	306, 658, 659, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 496, 0, 200, 0, 455, 497, 528,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	372, 288, 451, 305, 342, 0, 0, 390, 429, 227,
	494, 452, 696, 688, 645, 700, 647, 697, 698, 642,
	643, 646, 699, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 691, 632, 631, 0, 638, 639, 0, 648,
	649, 651, 655, 656, 657, 660, 661, 662, 670, 672,
	673, 671, 674, 675, 676, 679, 680, 681, 682, 677,
	678, 683, 701, 702, 703, 704, 630, 191, 208, 338,
	0, 413, 270, 525, 503, 499, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 431, 432, 433, 434, 435, 438, 439,
	444, 445, 446, 447, 448, 456, 457, 461, 479, 481,
	493, 507, 512, 437, 280, 488, 513, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 502, 458, 214, 425,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 441, 464, 465,
	466, 468, 362, 248, 398, 0, 363, 345, 470, 471,
	290, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 443, 236, 346, 343, 476,
	264, 255, 251, 235, 291, 353, 393, 463, 387, 0,
	340, 0, 0, 453, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 454, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 717, 718, 0, 0, 0,
	0, 1698, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 367, 239, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 304, 192, 212,
	0, 0, 377, 420, 430, 0, 0, 0, 237, 0,
	428, 391, 492, 220, 266, 417, 397, 426, 404, 269,
	0, 0, 427, 341, 478, 411, 489, 510, 511, 245,
	371, 500, 467, 506, 524, 213, 242, 385, 460, 495,
	450, 364, 474, 475, 303, 449, 276, 195, 339, 516,
	211, 436, 229, 218, 480, 498, 271, 415, 203, 462,
	487, 226, 440, 0, 0, 526, 205, 485, 459, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 482,
	483, 238, 527, 215, 505, 207, 0, 504, 373, 477,
	486, 361, 351, 206, 484, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	496, 0, 200, 0, 455, 497, 528, 221, 222, 224,
	0, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 372, 288, 451,
	305, 342, 0, 0, 390, 429, 227, 494, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 352,
	442, 491, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 421,
	422, 423, 424, 0, 191, 208, 338, 0, 413, 270,
	525, 503, 499, 198, 210, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	431, 432, 433, 434, 435, 438, 439, 444, 445, 446,
	447, 448, 456, 457, 461, 479, 481, 493, 507, 512,
	437, 280, 488, 513, 0, 347, 0, 0, 349, 263,
	283, 294, 0, 502, 458, 214, 425, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 441, 464, 465, 466, 468, 362,
	248, 398, 0, 0, 345, 470, 471, 290, 363, 0,
	0, 0, 78, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 0, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 0, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 352, 442, 491, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 421, 422, 423, 424, 0, 191, 208, 338, 86,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 1369, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 1371, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 0, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 0, 0, 0,
	188, 189, 190, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 1196, 0, 1197,
	1198, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 352, 442,
	491, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 421, 422,
	423, 424, 0, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 0, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 189, 190,
	1312, 1315, 0, 0, 0, 0, 1311, 1314, 0, 0,
	225, 1310, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 0,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 0,
	345, 470, 471, 290, 363, 0, 0, 0, 78, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 0, 340, 0,
	0, 453, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 454, 268, 0, 87, 0, 1350, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 367,
	239, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 430, 0, 0, 0, 237, 0, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 0, 0,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 487, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 0, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 372, 288, 451, 305, 342,
	0, 0, 390, 429, 227, 494, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 352, 442, 491,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 421, 422, 423,
	424, 0, 191, 208, 338, 86, 413, 270, 525, 503,
	499, 198, 210, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 280,
	488, 513, 0, 347, 0, 0, 349, 263, 283, 294,
	0, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	0, 363, 345, 470, 471, 290, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 336, 249, 0, 0, 395, 0, 197, 0,
	443, 236, 346, 343, 476, 264, 255, 251, 235, 291,
	353, 393, 463, 387, 0, 340, 0, 0, 453, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 234, 299, 196, 378,
	454, 268, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 321, 330, 329, 310, 311, 313, 315, 320,
	327, 333, 0, 0, 0, 0, 0, 247, 295, 254,
	246, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 430,
	0, 0, 0, 237, 0, 428, 391, 492, 220, 266,
	417, 397, 426, 404, 269, 0, 0, 427, 341, 478,
	411, 489, 510, 511, 245, 371, 500, 467, 506, 524,
	213, 242, 385, 460, 495, 450, 364, 474, 475, 303,
	449, 276, 195, 339, 516, 211, 436, 229, 218, 480,
	498, 271, 415, 203, 462, 487, 226, 440, 0, 0,
	526, 205, 485, 459, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 482, 483, 238, 527, 215, 505,
	207, 0, 504, 373, 477, 486, 361, 351, 206, 484,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 496, 0, 200, 0, 455,
	497, 528, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 372, 288, 451, 305, 342, 0, 0, 390,
	429, 227, 494, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 352, 442, 491, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 421, 422, 423, 424, 0, 191,
	208, 338, 0, 413, 270, 525, 503, 499, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 431, 432, 433, 434, 435,
	438, 439, 444, 445, 446, 447, 448, 456, 457, 461,
	479, 481, 493, 507, 512, 437, 280, 488, 513, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 502, 458,
	214, 425, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 441,
	464, 465, 466, 468, 362, 248, 398, 0, 363, 345,
	470, 471, 290, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 1813,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 0, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 1811, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 352, 442, 491, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 421, 422, 423, 424, 0, 191, 208, 338, 0,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 363, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 0, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 335, 981, 304, 192, 212, 979,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 352, 442,
	491, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 421, 422,
	423, 424, 0, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 1813, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 0, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 1551, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 0,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 363,
	345, 470, 471, 290, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	336, 249, 0, 0, 395, 0, 197, 0, 443, 236,
	346, 343, 476, 264, 255, 251, 235, 291, 353, 393,
	463, 387, 0, 340, 0, 0, 453, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 234, 299, 196, 378, 454, 268,
	0, 0, 0, 1350, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	321, 330, 329, 310, 311, 313, 315, 320, 327, 333,
	0, 0, 0, 0, 0, 247, 295, 254, 246, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	509, 0, 0, 0, 2933, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 430, 0, 0,
	0, 237, 0, 428, 391, 492, 220, 266, 417, 397,
	426, 404, 269, 0, 0, 427, 341, 478, 411, 489,
	510, 511, 245, 371, 500, 467, 506, 524, 213, 242,
	385, 460, 495, 450, 364, 474, 475, 303, 449, 276,
	195, 339, 516, 211, 436, 229, 218, 480, 498, 271,
	415, 203, 462, 487, 226, 440, 0, 0, 526, 205,
	485, 459, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 482, 483, 238, 527, 215, 505, 207, 0,
	504, 373, 477, 486, 361, 351, 206, 484, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 496, 0, 200, 0, 455, 497, 528,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	372, 288, 451, 305, 342, 0, 0, 390, 429, 227,
	494, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 352, 442, 491, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 421, 422, 423, 424, 0, 191, 208, 338,
	0, 413, 270, 525, 503, 499, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 431, 432, 433, 434, 435, 438, 439,
	444, 445, 446, 447, 448, 456, 457, 461, 479, 481,
	493, 507, 512, 437, 280, 488, 513, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 502, 458, 214, 425,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 441, 464, 465,
	466, 468, 362, 248, 398, 0, 363, 345, 470, 471,
	290, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 443, 236, 346, 343, 476,
	264, 255, 251, 235, 291, 353, 393, 463, 387, 0,
	340, 0, 0, 453, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 454, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 367, 239, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 304, 192, 212,
	0, 0, 377, 420, 430, 0, 0, 0, 237, 0,
	428, 391, 492, 220, 266, 417, 397, 426, 404, 269,
	0, 0, 427, 341, 478, 411, 489, 510, 511, 245,
	371, 500, 467, 506, 524, 213, 242, 385, 460, 495,
	450, 364, 474, 475, 303, 449, 276, 195, 339, 516,
	211, 436, 229, 218, 480, 498, 271, 415, 203, 462,
	487, 226, 440, 0, 0, 526, 205, 485, 459, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 482,
	483, 238, 527, 215, 505, 207, 0, 504, 373, 477,
	486, 361, 351, 206, 484, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	496, 0, 200, 0, 455, 497, 528, 221, 222, 224,
	0, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 372, 288, 451,
	305, 342, 0, 0, 390, 429, 227, 494, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 352,
	442, 491, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 421,
	422, 423, 424, 0, 191, 208, 338, 0, 413, 270,
	525, 503, 499, 198, 210, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	431, 432, 433, 434, 435, 438, 439, 444, 445, 446,
	447, 448, 456, 457, 461, 479, 481, 493, 507, 512,
	437, 280, 488, 513, 0, 347, 0, 0, 349, 263,
	283, 294, 0, 502, 458, 214, 425, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 441, 464, 465, 466, 468, 362,
	248, 398, 0, 363, 345, 470, 471, 290, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 0, 0, 336, 249, 0, 0, 395, 0,
	197, 0, 443, 236, 346, 343, 476, 264, 255, 251,
	235, 291, 353, 393, 463, 387, 0, 340, 0, 0,
	453, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 234, 299,
	196, 378, 454, 268, 0, 0, 0, 0, 188, 189,
	190, 0, 2159, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 321, 330, 329, 310, 311, 313,
	315, 320, 327, 333, 0, 0, 0, 0, 0, 247,
	295, 254, 246, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 430, 0, 0, 0, 237, 0, 428, 391, 492,
	220, 266, 417, 397, 426, 404, 269, 0, 0, 427,
	341, 478, 411, 489, 510, 511, 245, 371, 500, 467,
	506, 524, 213, 242, 385, 460, 495, 450, 364, 474,
	475, 303, 449, 276, 195, 339, 516, 211, 436, 229,
	218, 480, 498, 271, 415, 203, 462, 487, 226, 440,
	0, 0, 526, 205, 485, 459, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 482, 483, 238, 527,
	215, 505, 207, 0, 504, 373, 477, 486, 361, 351,
	206, 484, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 496, 0, 200,
	0, 455, 497, 528, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 372, 288, 451, 305, 342, 0,
	0, 390, 429, 227, 494, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 352, 442, 491, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 421, 422, 423, 424,
	0, 191, 208, 338, 0, 413, 270, 525, 503, 499,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 431, 432, 433,
	434, 435, 438, 439, 444, 445, 446, 447, 448, 456,
	457, 461, 479, 481, 493, 507, 512, 437, 280, 488,
	513, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	502, 458, 214, 425, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 441, 464, 465, 466, 468, 362, 248, 398, 0,
	363, 345, 470, 471, 290, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 443,
	236, 346, 343, 476, 264, 255, 251, 235, 291, 353,
	393, 463, 387, 0, 340, 0, 0, 453, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 454,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 2144, 0, 0, 0, 2145, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 367, 239, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 304, 192, 212, 0, 0, 377, 420, 430, 0,
	0, 0, 237, 0, 428, 391, 492, 220, 266, 417,
	397, 426, 404, 269, 0, 0, 427, 341, 478, 411,
	489, 510, 511, 245, 371, 500, 467, 506, 524, 213,
	242, 385, 460, 495, 450, 364, 474, 475, 303, 449,
	276, 195, 339, 516, 211, 436, 229, 218, 480, 498,
	271, 415, 203, 462, 487, 226, 440, 0, 0, 526,
	205, 485, 459, 360, 300, 301, 204, 0, 416, 250,
	274, 240, 380, 482, 483, 238, 527, 215, 505, 207,
	0, 504, 373, 477, 486, 361, 351, 206, 484, 359,
	350, 306, 325, 326, 262, 285, 409, 344, 410, 286,
	369, 368, 370, 199, 496, 0, 200, 0, 455, 497,
	528, 221, 222, 224, 0, 261, 265, 273, 275, 281,
	282, 289, 337, 384, 408, 406, 412, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 372, 288, 451, 305, 342, 0, 0, 390, 429,
	227, 494, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 352, 442, 491, 307, 319, 322, 312,
	331, 0, 332, 308, 309, 314, 316, 317, 318, 323,
	324, 328, 334, 421, 422, 423, 424, 0, 191, 208,
	338, 0, 413, 270, 525, 503, 499, 198, 210, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 431, 432, 433, 434, 435, 438,
	439, 444, 445, 446, 447, 448, 456, 457, 461, 479,
	481, 493, 507, 512, 437, 280, 488, 513, 0, 347,
	0, 0, 349, 263, 283, 294, 0, 502, 458, 214,
	425, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 441, 464,
	465, 466, 468, 362, 248, 398, 0, 363, 345, 470,
	471, 290, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 1394, 0, 0, 0, 336, 249,
	0, 0, 395, 0, 197, 0, 443, 236, 346, 343,
	476, 264, 255, 251, 235, 291, 353, 393, 463, 387,
	0, 340, 0, 0, 453, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 234, 299, 196, 378, 454, 268, 0, 0,
	0, 0, 188, 189, 190, 0, 1393, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 321, 330,
	329, 310, 311, 313, 315, 320, 327, 333, 0, 0,
	0, 0, 0, 247, 295, 254, 246, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 430, 0, 0, 0, 237,
	0, 428, 391, 492, 220, 266, 417, 397, 426, 404,
	269, 0, 0, 427, 341, 478, 411, 489, 510, 511,
	245, 371, 500, 467, 506, 524, 213, 242, 385, 460,
	495, 450, 364, 474, 475, 303, 449, 276, 195, 339,
	516, 211, 436, 229, 218, 480, 498, 271, 415, 203,
	462, 487, 226, 440, 0, 0, 526, 205, 485, 459,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	482, 483, 238, 527, 215, 505, 207, 0, 504, 373,
	477, 486, 361, 351, 206, 484, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 496, 0, 200, 0, 455, 497, 528, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 372, 288,
	451, 305, 342, 0, 0, 390, 429, 227, 494, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	352, 442, 491, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	421, 422, 423, 424, 0, 191, 208, 338, 0, 413,
	270, 525, 503, 499, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 431, 432, 433, 434, 435, 438, 439, 444, 445,
	446, 447, 448, 456, 457, 461, 479, 481, 493, 507,
	512, 437, 280, 488, 513, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 502, 458, 214, 425, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 441, 464, 465, 466, 468,
	362, 248, 398, 0, 363, 345, 470, 471, 290, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 0, 340, 0,
	0, 453, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 454, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 367,
	239, 0, 0, 0, 0, 509, 0, 0, 0, 3035,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 430, 0, 0, 0, 237, 0, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 0, 0,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 487, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 0, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 372, 288, 451, 305, 342,
	0, 0, 390, 429, 227, 494, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 352, 442, 491,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 421, 422, 423,
	424, 0, 191, 208, 338, 0, 413, 270, 525, 503,
	499, 198, 210, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 280,
	488, 513, 0, 347, 0, 0, 349, 263, 283, 294,
	0, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	0, 363, 345, 470, 471, 290, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 336, 249, 0, 0, 395, 0, 197, 0,
	443, 236, 346, 343, 476, 264, 255, 251, 235, 291,
	353, 393, 463, 387, 0, 340, 0, 0, 453, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 234, 299, 196, 378,
	454, 268, 0, 0, 0, 0, 188, 189, 190, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 321, 330, 329, 310, 311, 313, 315, 320,
	327, 333, 0, 0, 0, 0, 0, 247, 295, 254,
	246, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 430,
	0, 0, 0, 237, 0, 428, 391, 492, 220, 266,
	417, 397, 426, 404, 269, 0, 0, 427, 341, 478,
	411, 489, 510, 511, 245, 371, 500, 467, 506, 524,
	213, 242, 385, 460, 495, 450, 364, 474, 475, 303,
	449, 276, 195, 339, 516, 211, 436, 229, 218, 480,
	498, 271, 415, 203, 462, 487, 226, 440, 0, 0,
	526, 205, 485, 459, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 482, 483, 238, 527, 215, 505,
	207, 0, 504, 373, 477, 486, 361, 351, 206, 484,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 496, 0, 200, 0, 455,
	497, 528, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 372, 288, 451, 305, 342, 0, 0, 390,
	429, 227, 494, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 352, 442, 491, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 421, 422, 423, 424, 0, 191,
	208, 338, 0, 413, 270, 525, 503, 499, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 431, 432, 433, 434, 435,
	438, 439, 444, 445, 446, 447, 448, 456, 457, 461,
	479, 481, 493, 507, 512, 437, 280, 488, 513, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 502, 458,
	214, 425, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 441,
	464, 465, 466, 468, 362, 248, 398, 0, 363, 345,
	470, 471, 290, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 0, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 0, 0, 0, 509,
	0, 0, 0, 2933, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 0, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 352, 442, 491, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 421, 422, 423, 424, 0, 191, 208, 338, 0,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 363, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 0, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 352, 442,
	491, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 421, 422,
	423, 424, 0, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 0, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 0,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 363,
	345, 470, 471, 290, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	336, 249, 0, 0, 395, 0, 197, 0, 443, 236,
	346, 343, 476, 264, 255, 251, 235, 291, 353, 393,
	463, 387, 0, 340, 0, 0, 453, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 234, 299, 196, 378, 454, 268,
	0, 0, 0, 0, 188, 189, 190, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	321, 330, 329, 310, 311, 313, 315, 320, 327, 333,
	0, 0, 0, 0, 0, 247, 295, 254, 246, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 430, 0, 0,
	0, 237, 0, 428, 391, 492, 220, 266, 417, 397,
	426, 404, 269, 0, 0, 427, 341, 478, 411, 489,
	510, 511, 245, 371, 500, 467, 506, 524, 213, 242,
	385, 460, 495, 450, 364, 474, 475, 303, 449, 276,
	195, 339, 516, 211, 436, 229, 218, 480, 498, 271,
	415, 203, 462, 487, 226, 440, 0, 0, 526, 205,
	485, 459, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 482, 483, 238, 527, 215, 505, 207, 0,
	504, 373, 477, 486, 361, 351, 206, 484, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 496, 0, 200, 0, 455, 497, 528,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	372, 288, 451, 305, 342, 0, 0, 390, 429, 227,
	494, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 352, 442, 491, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 421, 422, 423, 424, 0, 191, 208, 338,
	0, 413, 270, 525, 503, 499, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 431, 432, 433, 434, 435, 438, 439,
	444, 445, 446, 447, 448, 456, 457, 461, 479, 481,
	493, 507, 512, 437, 280, 488, 513, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 502, 458, 214, 425,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 441, 464, 465,
	466, 468, 362, 248, 398, 0, 363, 345, 470, 471,
	290, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 443, 236, 346, 343, 476,
	264, 255, 251, 235, 291, 353, 393, 463, 387, 0,
	340, 0, 0, 453, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 454, 268, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 367, 239, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 304, 192, 212,
	0, 0, 377, 420, 430, 0, 0, 0, 237, 0,
	428, 391, 492, 220, 266, 417, 397, 426, 404, 269,
	0, 0, 427, 341, 478, 411, 489, 510, 511, 245,
	371, 500, 467, 506, 524, 213, 242, 385, 460, 495,
	450, 364, 474, 475, 303, 449, 276, 195, 339, 516,
	211, 436, 229, 218, 480, 498, 271, 415, 203, 462,
	487, 226, 440, 0, 0, 526, 205, 485, 459, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 482,
	483, 238, 527, 215, 505, 207, 0, 504, 373, 477,
	486, 361, 351, 206, 484, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	496, 0, 200, 0, 455, 497, 528, 221, 222, 224,
	0, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 372, 288, 451,
	305, 342, 0, 0, 390, 429, 227, 494, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 352,
	442, 491, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 421,
	422, 423, 424, 0, 191, 208, 338, 0, 413, 270,
	525, 503, 499, 198, 210, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	431, 432, 433, 434, 435, 438, 439, 444, 445, 446,
	447, 448, 456, 457, 461, 479, 481, 493, 507, 512,
	437, 280, 488, 513, 0, 347, 0, 0, 349, 263,
	283, 294, 0, 502, 458, 214, 425, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 441, 464, 465, 466, 468, 362,
	248, 398, 0, 363, 345, 470, 471, 290, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 0, 0, 336, 249, 0, 0, 395, 0,
	197, 0, 443, 236, 346, 343, 476, 264, 255, 251,
	235, 291, 353, 393, 463, 387, 0, 340, 0, 0,
	453, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 234, 299,
	196, 378, 454, 268, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 321, 330, 329, 310, 311, 313,
	315, 320, 327, 333, 0, 0, 0, 0, 0, 247,
	295, 254, 246, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 430, 0, 0, 0, 237, 0, 428, 391, 492,
	220, 266, 417, 397, 426, 404, 269, 0, 0, 427,
	341, 478, 411, 489, 510, 511, 245, 371, 500, 467,
	506, 524, 213, 242, 385, 460, 495, 450, 364, 474,
	475, 303, 449, 276, 195, 339, 516, 211, 436, 229,
	218, 480, 498, 271, 415, 203, 462, 487, 226, 440,
	0, 0, 526, 205, 485, 459, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 482, 483, 238, 527,
	215, 505, 207, 0, 504, 373, 477, 486, 361, 351,
	206, 484, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 496, 0, 200,
	0, 455, 497, 528, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 372, 288, 451, 305, 342, 0,
	0, 390, 429, 227, 494, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 352, 442, 491, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 421, 422, 423, 424,
	0, 191, 208, 338, 1649, 413, 270, 525, 503, 499,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 431, 432, 433,
	434, 435, 438, 439, 444, 445, 446, 447, 448, 456,
	457, 461, 479, 481, 493, 507, 512, 437, 280, 488,
	513, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	502, 458, 214, 425, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 441, 464, 465, 466, 468, 362, 248, 398, 0,
	363, 345, 470, 471, 290, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 1519,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 443,
	236, 346, 343, 476, 264, 255, 251, 235, 291, 353,
	393, 463, 387, 0, 340, 0, 0, 453, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 454,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 367, 239, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 304, 192, 212, 0, 0, 377, 420, 430, 0,
	0, 0, 237, 0, 428, 391, 492, 220, 266, 417,
	397, 426, 404, 269, 0, 0, 427, 341, 478, 411,
	489, 510, 511, 245, 371, 500, 467, 506, 524, 213,
	242, 385, 460, 495, 450, 364, 474, 475, 303, 449,
	276, 195, 339, 516, 211, 436, 229, 218, 480, 498,
	271, 415, 203, 462, 487, 226, 440, 0, 0, 526,
	205, 485, 459, 360, 300, 301, 204, 0, 416, 250,
	274, 240, 380, 482, 483, 238, 527, 215, 505, 207,
	0, 504, 373, 477, 486, 361, 351, 206, 484, 359,
	350, 306, 325, 326, 262, 285, 409, 344, 410, 286,
	369, 368, 370, 199, 496, 0, 200, 0, 455, 497,
	528, 221, 222, 224, 0, 261, 265, 273, 275, 281,
	282, 289, 337, 384, 408, 406, 412, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 372, 288, 451, 305, 342, 0, 0, 390, 429,
	227, 494, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 352, 442, 491, 307, 319, 322, 312,
	331, 0, 332, 308, 309, 314, 316, 317, 318, 323,
	324, 328, 334, 421, 422, 423, 424, 0, 191, 208,
	338, 0, 413, 270, 525, 503, 499, 198, 210, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 431, 432, 433, 434, 435, 438,
	439, 444, 445, 446, 447, 448, 456, 457, 461, 479,
	481, 493, 507, 512, 437, 280, 488, 513, 0, 347,
	0, 0, 349, 263, 283, 294, 0, 502, 458, 214,
	425, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 441, 464,
	465, 466, 468, 362, 248, 398, 0, 363, 345, 470,
	471, 290, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 1517, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 336, 249,
	0, 0, 395, 0, 197, 0, 443, 236, 346, 343,
	476, 264, 255, 251, 235, 291, 353, 393, 463, 387,
	0, 340, 0, 0, 453, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 234, 299, 196, 378, 454, 268, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 321, 330,
	329, 310, 311, 313, 315, 320, 327, 333, 0, 0,
	0, 0, 0, 247, 295, 254, 246, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 430, 0, 0, 0, 237,
	0, 428, 391, 492, 220, 266, 417, 397, 426, 404,
	269, 0, 0, 427, 341, 478, 411, 489, 510, 511,
	245, 371, 500, 467, 506, 524, 213, 242, 385, 460,
	495, 450, 364, 474, 475, 303, 449, 276, 195, 339,
	516, 211, 436, 229, 218, 480, 498, 271, 415, 203,
	462, 487, 226, 440, 0, 0, 526, 205, 485, 459,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	482, 483, 238, 527, 215, 505, 207, 0, 504, 373,
	477, 486, 361, 351, 206, 484, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 496, 0, 200, 0, 455, 497, 528, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 372, 288,
	451, 305, 342, 0, 0, 390, 429, 227, 494, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	352, 442, 491, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	421, 422, 423, 424, 0, 191, 208, 338, 0, 413,
	270, 525, 503, 499, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 431, 432, 433, 434, 435, 438, 439, 444, 445,
	446, 447, 448, 456, 457, 461, 479, 481, 493, 507,
	512, 437, 280, 488, 513, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 502, 458, 214, 425, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 441, 464, 465, 466, 468,
	362, 248, 398, 0, 363, 345, 470, 471, 290, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 1515, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 0, 340, 0,
	0, 453, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 454, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 367,
	239, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 430, 0, 0, 0, 237, 0, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 0, 0,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 487, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 0, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 372, 288, 451, 305, 342,
	0, 0, 390, 429, 227, 494, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 352, 442, 491,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 421, 422, 423,
	424, 0, 191, 208, 338, 0, 413, 270, 525, 503,
	499, 198, 210, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 280,
	488, 513, 0, 347, 0, 0, 349, 263, 283, 294,
	0, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	0, 363, 345, 470, 471, 290, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	1513, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 336, 249, 0, 0, 395, 0, 197, 0,
	443, 236, 346, 343, 476, 264, 255, 251, 235, 291,
	353, 393, 463, 387, 0, 340, 0, 0, 453, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 234, 299, 196, 378,
	454, 268, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 321, 330, 329, 310, 311, 313, 315, 320,
	327, 333, 0, 0, 0, 0, 0, 247, 295, 254,
	246, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 430,
	0, 0, 0, 237, 0, 428, 391, 492, 220, 266,
	417, 397, 426, 404, 269, 0, 0, 427, 341, 478,
	411, 489, 510, 511, 245, 371, 500, 467, 506, 524,
	213, 242, 385, 460, 495, 450, 364, 474, 475, 303,
	449, 276, 195, 339, 516, 211, 436, 229, 218, 480,
	498, 271, 415, 203, 462, 487, 226, 440, 0, 0,
	526, 205, 485, 459, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 482, 483, 238, 527, 215, 505,
	207, 0, 504, 373, 477, 486, 361, 351, 206, 484,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 496, 0, 200, 0, 455,
	497, 528, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 372, 288, 451, 305, 342, 0, 0, 390,
	429, 227, 494, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 352, 442, 491, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 421, 422, 423, 424, 0, 191,
	208, 338, 0, 413, 270, 525, 503, 499, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 431, 432, 433, 434, 435,
	438, 439, 444, 445, 446, 447, 448, 456, 457, 461,
	479, 481, 493, 507, 512, 437, 280, 488, 513, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 502, 458,
	214, 425, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 441,
	464, 465, 466, 468, 362, 248, 398, 0, 363, 345,
	470, 471, 290, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 1511, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 0, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 0, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 352, 442, 491, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 421, 422, 423, 424, 0, 191, 208, 338, 0,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 374, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 363, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 1507, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 0, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 352, 442,
	491, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 421, 422,
	423, 424, 0, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 1505, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 0, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 0,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 363,
	345, 470, 471, 290, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 1503, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	336, 249, 0, 0, 395, 0, 197, 0, 443, 236,
	346, 343, 476, 264, 255, 251, 235, 291, 353, 393,
	463, 387, 0, 340, 0, 0, 453, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 234, 299, 196, 378, 454, 268,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	321, 330, 329, 310, 311, 313, 315, 320, 327, 333,
	0, 0, 0, 0, 0, 247, 295, 254, 246, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 430, 0, 0,
	0, 237, 0, 428, 391, 492, 220, 266, 417, 397,
	426, 404, 269, 0, 0, 427, 341, 478, 411, 489,
	510, 511, 245, 371, 500, 467, 506, 524, 213, 242,
	385, 460, 495, 450, 364, 474, 475, 303, 449, 276,
	195, 339, 516, 211, 436, 229, 218, 480, 498, 271,
	415, 203, 462, 487, 226, 440, 0, 0, 526, 205,
	485, 459, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 482, 483, 238, 527, 215, 505, 207, 0,
	504, 373, 477, 486, 361, 351, 206, 484, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 496, 0, 200, 0, 455, 497, 528,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	372, 288, 451, 305, 342, 0, 0, 390, 429, 227,
	494, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 352, 442, 491, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 421, 422, 423, 424, 0, 191, 208, 338,
	0, 413, 270, 525, 503, 499, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 431, 432, 433, 434, 435, 438, 439,
	444, 445, 446, 447, 448, 456, 457, 461, 479, 481,
	493, 507, 512, 437, 280, 488, 513, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 502, 458, 214, 425,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 441, 464, 465,
	466, 468, 362, 248, 398, 0, 363, 345, 470, 471,
	290, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 336, 249, 0,
	0, 395, 0, 197, 0, 443, 236, 346, 343, 476,
	264, 255, 251, 235, 291, 353, 393, 463, 387, 0,
	340, 0, 0, 453, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 234, 299, 196, 378, 454, 268, 0, 1478, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 321, 330, 329,
	310, 311, 313, 315, 320, 327, 333, 0, 0, 0,
	0, 0, 247, 295, 254, 246, 473, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 367, 239, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 304, 192, 212,
	0, 0, 377, 420, 430, 0, 0, 0, 237, 0,
	428, 391, 492, 220, 266, 417, 397, 426, 404, 269,
	0, 0, 427, 341, 478, 411, 489, 510, 511, 245,
	371, 500, 467, 506, 524, 213, 242, 385, 460, 495,
	450, 364, 474, 475, 303, 449, 276, 195, 339, 516,
	211, 436, 229, 218, 480, 498, 271, 415, 203, 462,
	487, 226, 440, 0, 0, 526, 205, 485, 459, 360,
	300, 301, 204, 0, 416, 250, 274, 240, 380, 482,
	483, 238, 527, 215, 505, 207, 0, 504, 373, 477,
	486, 361, 351, 206, 484, 359, 350, 306, 325, 326,
	262, 285, 409, 344, 410, 286, 369, 368, 370, 199,
	496, 0, 200, 0, 455, 497, 528, 221, 222, 224,
	0, 261, 265, 273, 275, 281, 282, 289, 337, 384,
	408, 406, 412, 0, 472, 490, 501, 508, 514, 515,
	517, 518, 519, 520, 521, 523, 522, 372, 288, 451,
	305, 342, 0, 0, 390, 429, 227, 494, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 352,
	442, 491, 307, 319, 322, 312, 331, 0, 332, 308,
	309, 314, 316, 317, 318, 323, 324, 328, 334, 421,
	422, 423, 424, 0, 191, 208, 338, 0, 413, 270,
	525, 503, 499, 198, 210, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 243, 258, 260, 267, 279,
	284, 287, 292, 293, 296, 302, 348, 354, 355, 356,
	357, 374, 375, 376, 379, 382, 383, 386, 388, 389,
	392, 396, 400, 401, 402, 403, 405, 407, 414, 419,
	431, 432, 433, 434, 435, 438, 439, 444, 445, 446,
	447, 448, 456, 457, 461, 479, 481, 493, 507, 512,
	437, 280, 488, 513, 0, 347, 0, 0, 349, 263,
	283, 294, 0, 502, 458, 214, 425, 272, 202, 233,
	217, 241, 256, 259, 298, 358, 365, 394, 399, 277,
	253, 231, 418, 228, 441, 464, 465, 466, 468, 362,
	248, 398, 0, 363, 345, 470, 471, 290, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 0, 1378, 252,
	0, 0, 0, 0, 336, 249, 0, 0, 395, 0,
	197, 0, 443, 236, 346, 343, 476, 264, 255, 251,
	235, 291, 353, 393, 463, 387, 0, 340, 0, 0,
	453, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 234, 299,
	196, 378, 454, 268, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 321, 330, 329, 310, 311, 313,
	315, 320, 327, 333, 0, 0, 0, 0, 0, 247,
	295, 254, 246, 473, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 367, 239,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 304, 192, 212, 0, 0, 377,
	420, 430, 0, 0, 0, 237, 0, 428, 391, 492,
	220, 266, 417, 397, 426, 404, 269, 0, 0, 427,
	341, 478, 411, 489, 510, 511, 245, 371, 500, 467,
	506, 524, 213, 242, 385, 460, 495, 450, 364, 474,
	475, 303, 449, 276, 195, 339, 516, 211, 436, 229,
	218, 480, 498, 271, 415, 203, 462, 487, 226, 440,
	0, 0, 526, 205, 485, 459, 360, 300, 301, 204,
	0, 416, 250, 274, 240, 380, 482, 483, 238, 527,
	215, 505, 207, 0, 504, 373, 477, 486, 361, 351,
	206, 484, 359, 350, 306, 325, 326, 262, 285, 409,
	344, 410, 286, 369, 368, 370, 199, 496, 0, 200,
	0, 455, 497, 528, 221, 222, 224, 0, 261, 265,
	273, 275, 281, 282, 289, 337, 384, 408, 406, 412,
	0, 472, 490, 501, 508, 514, 515, 517, 518, 519,
	520, 521, 523, 522, 372, 288, 451, 305, 342, 0,
	0, 390, 429, 227, 494, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 352, 442, 491, 307,
	319, 322, 312, 331, 0, 332, 308, 309, 314, 316,
	317, 318, 323, 324, 328, 334, 421, 422, 423, 424,
	0, 191, 208, 338, 0, 413, 270, 525, 503, 499,
	198, 210, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 243, 258, 260, 267, 279, 284, 287, 292,
	293, 296, 302, 348, 354, 355, 356, 357, 374, 375,
	376, 379, 382, 383, 386, 388, 389, 392, 396, 400,
	401, 402, 403, 405, 407, 414, 419, 431, 432, 433,
	434, 435, 438, 439, 444, 445, 446, 447, 448, 456,
	457, 461, 479, 481, 493, 507, 512, 437, 280, 488,
	513, 0, 347, 0, 0, 349, 263, 283, 294, 0,
	502, 458, 214, 425, 272, 202, 233, 217, 241, 256,
	259, 298, 358, 365, 394, 399, 277, 253, 231, 418,
	228, 441, 464, 465, 466, 468, 362, 248, 398, 0,
	363, 345, 470, 471, 290, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 336, 249, 0, 0, 395, 0, 197, 0, 443,
	236, 346, 343, 476, 264, 255, 251, 235, 291, 353,
	393, 463, 387, 0, 340, 0, 0, 453, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 234, 299, 196, 378, 454,
	268, 0, 0, 0, 0, 188, 189, 190, 0, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 321, 330, 329, 310, 311, 313, 315, 320, 327,
	333, 0, 0, 0, 0, 0, 247, 295, 254, 246,
	473, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 367, 239, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 304, 192, 212, 0, 0, 377, 420, 430, 0,
	0, 0, 237, 0, 428, 391, 492, 220, 266, 417,
	397, 426, 404, 269, 0, 0, 427, 341, 478, 411,
	489, 510, 511, 245, 371, 500, 467, 506, 524, 213,
	242, 385, 460, 495, 450, 364, 474, 475, 303, 449,
	276, 195, 339, 516, 211, 436, 229, 218, 480, 498,
	271, 415, 203, 462, 487, 226, 440, 0, 0, 526,
	205, 485, 459, 360, 300, 301, 204, 0, 416, 250,
	274, 240, 380, 482, 483, 238, 527, 215, 505, 207,
	0, 504, 373, 477, 486, 361, 351, 206, 484, 359,
	350, 306, 325, 326, 262, 285, 409, 344, 410, 286,
	369, 368, 370, 199, 496, 0, 200, 0, 455, 497,
	528, 221, 222, 224, 0, 261, 265, 273, 275, 281,
	282, 289, 337, 384, 408, 406, 412, 0, 472, 490,
	501, 508, 514, 515, 517, 518, 519, 520, 521, 523,
	522, 372, 288, 451, 305, 342, 0, 0, 390, 429,
	227, 494, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 352, 442, 491, 307, 319, 322, 312,
	331, 0, 332, 308, 309, 314, 316, 317, 318, 323,
	324, 328, 334, 421, 422, 423, 424, 0, 191, 208,
	338, 0, 413, 270, 525, 503, 499, 198, 210, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 243,
	258, 260, 267, 279, 284, 287, 292, 293, 296, 302,
	348, 354, 355, 356, 357, 374, 375, 376, 379, 382,
	383, 386, 388, 389, 392, 396, 400, 401, 402, 403,
	405, 407, 414, 419, 431, 432, 433, 434, 435, 438,
	439, 444, 445, 446, 447, 448, 456, 457, 461, 479,
	481, 493, 507, 512, 437, 280, 488, 513, 0, 347,
	0, 0, 349, 263, 283, 294, 0, 502, 458, 214,
	425, 272, 202, 233, 217, 241, 256, 259, 298, 358,
	365, 394, 399, 277, 253, 231, 418, 228, 441, 464,
	465, 466, 468, 362, 248, 398, 0, 363, 345, 470,
	471, 290, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 336, 249,
	0, 0, 395, 0, 197, 0, 443, 236, 346, 343,
	476, 264, 255, 251, 235, 291, 353, 393, 463, 387,
	0, 340, 0, 0, 453, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 234, 299, 196, 378, 454, 268, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 321, 330,
	329, 310, 311, 313, 315, 320, 327, 333, 0, 0,
	0, 0, 0, 247, 295, 254, 246, 473, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 367, 239, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 304, 192,
	212, 0, 0, 377, 420, 430, 0, 0, 0, 237,
	0, 428, 391, 492, 220, 266, 417, 397, 426, 404,
	269, 0, 0, 427, 341, 478, 411, 489, 510, 511,
	245, 371, 500, 467, 506, 524, 213, 242, 385, 460,
	495, 450, 364, 474, 475, 303, 449, 276, 195, 339,
	516, 211, 436, 229, 218, 480, 498, 271, 415, 203,
	462, 487, 226, 440, 0, 0, 526, 205, 485, 459,
	360, 300, 301, 204, 0, 416, 250, 274, 240, 380,
	482, 483, 238, 527, 215, 505, 207, 0, 504, 373,
	477, 486, 361, 351, 206, 484, 359, 350, 306, 325,
	326, 262, 285, 409, 344, 410, 286, 369, 368, 370,
	199, 496, 0, 200, 0, 455, 497, 528, 221, 222,
	224, 0, 261, 265, 273, 275, 281, 282, 289, 337,
	384, 408, 406, 412, 0, 472, 490, 501, 508, 514,
	515, 517, 518, 519, 520, 521, 523, 522, 372, 288,
	451, 305, 342, 0, 0, 390, 429, 227, 494, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	352, 442, 491, 307, 319, 322, 312, 331, 0, 332,
	308, 309, 314, 316, 317, 318, 323, 324, 328, 334,
	421, 422, 423, 424, 0, 191, 208, 338, 0, 413,
	270, 525, 503, 499, 198, 210, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 787, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 243, 258, 260, 267,
	279, 284, 287, 292, 293, 296, 302, 348, 354, 355,
	356, 357, 374, 375, 376, 379, 382, 383, 386, 388,
	389, 392, 396, 400, 401, 402, 403, 405, 407, 414,
	419, 431, 432, 433, 434, 435, 438, 439, 444, 445,
	446, 447, 448, 456, 457, 461, 479, 481, 493, 507,
	512, 437, 280, 488, 513, 0, 347, 0, 0, 349,
	263, 283, 294, 0, 502, 458, 214, 425, 272, 202,
	233, 217, 241, 256, 259, 298, 358, 365, 394, 399,
	277, 253, 231, 418, 228, 441, 464, 465, 466, 468,
	362, 248, 398, 0, 363, 345, 470, 471, 290, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 0, 0, 336, 249, 0, 0, 395,
	0, 197, 0, 443, 236, 346, 343, 476, 264, 255,
	251, 235, 291, 353, 393, 463, 387, 0, 340, 0,
	0, 453, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 234,
	299, 196, 378, 454, 268, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 321, 330, 329, 310, 311,
	313, 315, 320, 327, 333, 0, 0, 0, 0, 0,
	247, 295, 254, 246, 473, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 278, 0, 367,
	239, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 304, 192, 212, 0, 0,
	377, 420, 430, 0, 0, 0, 237, 0, 428, 391,
	492, 220, 266, 417, 397, 426, 404, 269, 0, 0,
	427, 341, 478, 411, 489, 510, 511, 245, 371, 500,
	467, 506, 524, 213, 242, 385, 460, 495, 450, 364,
	474, 475, 303, 449, 276, 195, 339, 516, 211, 436,
	229, 218, 480, 498, 271, 415, 203, 462, 487, 226,
	440, 0, 0, 526, 205, 485, 459, 360, 300, 301,
	204, 0, 416, 250, 274, 240, 380, 482, 483, 238,
	527, 215, 505, 207, 0, 504, 373, 477, 486, 361,
	351, 206, 484, 359, 350, 306, 325, 326, 262, 285,
	409, 344, 410, 286, 369, 368, 370, 199, 496, 0,
	200, 0, 455, 497, 528, 221, 222, 224, 0, 261,
	265, 273, 275, 281, 282, 289, 337, 384, 408, 406,
	412, 0, 472, 490, 501, 508, 514, 515, 517, 518,
	519, 520, 521, 523, 522, 372, 288, 451, 305, 342,
	0, 0, 390, 429, 227, 494, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 352, 442, 491,
	307, 319, 322, 312, 331, 0, 332, 308, 309, 314,
	316, 317, 318, 323, 324, 328, 334, 421, 422, 423,
	424, 0, 191, 208, 338, 0, 413, 270, 525, 503,
	499, 198, 210, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 243, 258, 260, 267, 279, 284, 287,
	292, 293, 296, 302, 348, 354, 355, 356, 357, 374,
	375, 376, 379, 382, 383, 386, 388, 389, 392, 396,
	400, 401, 402, 403, 405, 407, 414, 419, 431, 432,
	433, 434, 435, 438, 439, 444, 445, 446, 447, 448,
	456, 457, 461, 479, 481, 493, 507, 512, 437, 603,
	488, 513, 0, 347, 0, 0, 349, 263, 283, 294,
	0, 502, 458, 214, 425, 272, 202, 233, 217, 241,
	256, 259, 298, 358, 365, 394, 399, 277, 253, 231,
	418, 228, 441, 464, 465, 466, 468, 362, 248, 398,
	0, 363, 345, 470, 471, 290, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 336, 249, 0, 0, 395, 0, 197, 0,
	443, 236, 346, 343, 476, 264, 255, 251, 235, 291,
	353, 393, 463, 387, 0, 340, 0, 0, 453, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 234, 299, 196, 378,
	454, 268, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 321, 330, 329, 310, 311, 313, 315, 320,
	327, 333, 0, 0, 0, 0, 0, 247, 295, 254,
	246, 473, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 367, 239, 0, 0,
	550, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 304, 192, 212, 0, 0, 377, 420, 430,
	0, 0, 0, 237, 0, 428, 391, 492, 220, 266,
	417, 397, 426, 404, 269, 0, 0, 427, 341, 478,
	411, 489, 510, 511, 245, 371, 500, 467, 506, 524,
	213, 242, 385, 460, 495, 450, 364, 474, 475, 303,
	449, 276, 195, 339, 516, 211, 436, 229, 218, 480,
	498, 271, 415, 203, 462, 487, 226, 440, 0, 0,
	526, 205, 485, 459, 360, 300, 301, 204, 0, 416,
	250, 274, 240, 380, 482, 483, 238, 527, 215, 505,
	207, 0, 504, 373, 477, 486, 361, 351, 206, 484,
	359, 350, 306, 325, 326, 262, 285, 409, 344, 410,
	286, 369, 368, 370, 199, 496, 0, 200, 0, 455,
	497, 528, 221, 222, 224, 0, 261, 265, 273, 275,
	281, 282, 289, 337, 384, 408, 406, 412, 0, 472,
	490, 501, 508, 514, 515, 517, 518, 519, 520, 521,
	523, 522, 372, 288, 451, 305, 342, 0, 0, 390,
	429, 227, 494, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 352, 442, 491, 307, 319, 322,
	312, 331, 0, 332, 308, 309, 314, 316, 317, 318,
	323, 324, 328, 334, 421, 422, 423, 424, 0, 191,
	208, 338, 0, 413, 270, 525, 503, 499, 198, 210,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	243, 258, 260, 267, 279, 284, 287, 292, 293, 296,
	302, 348, 354, 355, 356, 357, 374, 375, 376, 379,
	382, 383, 386, 388, 389, 392, 396, 400, 401, 402,
	403, 405, 407, 414, 419, 431, 432, 433, 434, 435,
	438, 439, 444, 445, 446, 447, 448, 456, 457, 461,
	479, 481, 493, 507, 512, 437, 280, 488, 513, 0,
	347, 0, 0, 349, 263, 283, 294, 0, 502, 458,
	214, 425, 272, 202, 233, 217, 241, 256, 259, 298,
	358, 365, 394, 399, 277, 253, 231, 418, 228, 441,
	464, 465, 466, 468, 362, 248, 398, 0, 363, 345,
	470, 471, 290, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 336,
	249, 0, 0, 395, 0, 197, 0, 443, 236, 346,
	343, 476, 264, 255, 251, 235, 291, 353, 393, 463,
	387, 0, 340, 0, 0, 453, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 234, 299, 196, 378, 454, 268, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 321,
	330, 329, 310, 311, 313, 315, 320, 327, 333, 0,
	0, 0, 0, 0, 247, 295, 254, 246, 473, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 367, 239, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 304,
	192, 212, 0, 0, 377, 420, 430, 0, 0, 0,
	237, 0, 428, 391, 492, 220, 266, 417, 397, 426,
	404, 269, 0, 0, 427, 341, 478, 411, 489, 510,
	511, 245, 371, 500, 467, 506, 524, 213, 242, 385,
	460, 495, 450, 364, 474, 475, 303, 449, 276, 195,
	339, 516, 211, 436, 229, 218, 480, 498, 271, 415,
	203, 462, 487, 226, 440, 0, 0, 526, 205, 485,
	459, 360, 300, 301, 204, 0, 416, 250, 274, 240,
	380, 482, 483, 238, 527, 215, 505, 207, 0, 504,
	373, 477, 486, 361, 351, 206, 484, 359, 350, 306,
	325, 326, 262, 285, 409, 344, 410, 286, 369, 368,
	370, 199, 496, 0, 200, 0, 455, 497, 528, 221,
	222, 224, 0, 261, 265, 273, 275, 281, 282, 289,
	337, 384, 408, 406, 412, 0, 472, 490, 501, 508,
	514, 515, 517, 518, 519, 520, 521, 523, 522, 372,
	288, 451, 305, 342, 0, 0, 390, 429, 227, 494,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 352, 442, 491, 307, 319, 322, 312, 331, 0,
	332, 308, 309, 314, 316, 317, 318, 323, 324, 328,
	334, 421, 422, 423, 424, 0, 191, 208, 338, 0,
	413, 270, 525, 503, 499, 198, 210, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 243, 258, 260,
	267, 279, 284, 287, 292, 293, 296, 302, 348, 354,
	355, 356, 357, 3040, 375, 376, 379, 382, 383, 386,
	388, 389, 392, 396, 400, 401, 402, 403, 405, 407,
	414, 419, 431, 432, 433, 434, 435, 438, 439, 444,
	445, 446, 447, 448, 456, 457, 461, 479, 481, 493,
	507, 512, 437, 280, 488, 513, 0, 347, 0, 0,
	349, 263, 283, 294, 0, 502, 458, 214, 425, 272,
	202, 233, 217, 241, 256, 259, 298, 358, 365, 394,
	399, 277, 253, 231, 418, 228, 441, 464, 465, 466,
	468, 362, 248, 398, 0, 363, 345, 470, 471, 290,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 336, 249, 0, 0,
	395, 0, 197, 0, 443, 236, 346, 343, 476, 264,
	255, 251, 235, 291, 353, 393, 463, 387, 0, 340,
	0, 0, 453, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	234, 299, 196, 378, 454, 268, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 321, 330, 329, 310,
	311, 313, 315, 320, 327, 333, 0, 0, 0, 0,
	0, 247, 295, 254, 246, 473, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	367, 239, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 304, 192, 212, 0,
	0, 377, 420, 430, 0, 0, 0, 237, 0, 428,
	391, 492, 220, 266, 417, 397, 426, 404, 269, 0,
	0, 427, 341, 478, 411, 489, 510, 511, 245, 371,
	500, 467, 506, 524, 213, 242, 385, 460, 495, 450,
	364, 474, 475, 303, 449, 276, 195, 339, 516, 211,
	436, 229, 218, 480, 498, 271, 415, 203, 462, 487,
	226, 440, 0, 0, 526, 205, 485, 459, 360, 300,
	301, 204, 0, 416, 250, 274, 240, 380, 482, 483,
	238, 527, 215, 505, 207, 0, 504, 373, 477, 486,
	361, 351, 206, 484, 359, 350, 306, 325, 326, 262,
	285, 409, 344, 410, 286, 369, 368, 370, 199, 496,
	0, 200, 0, 455, 497, 528, 221, 222, 224, 0,
	261, 265, 273, 275, 281, 282, 289, 337, 384, 408,
	406, 412, 0, 472, 490, 501, 508, 514, 515, 517,
	518, 519, 520, 521, 523, 522, 372, 288, 451, 305,
	342, 0, 0, 390, 429, 227, 494, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 352, 442,
	491, 307, 319, 322, 312, 331, 0, 332, 308, 309,
	314, 316, 317, 318, 323, 324, 328, 334, 421, 422,
	423, 424, 0, 191, 208, 338, 0, 413, 270, 525,
	503, 499, 198, 210, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 243, 258, 260, 267, 279, 284,
	287, 292, 293, 296, 302, 348, 354, 355, 356, 357,
	374, 375, 376, 379, 382, 383, 386, 388, 389, 392,
	396, 400, 401, 402, 403, 405, 407, 414, 419, 431,
	432, 433, 434, 435, 438, 439, 444, 445, 446, 447,
	448, 456, 457, 461, 479, 481, 493, 507, 512, 437,
	280, 488, 513, 0, 347, 0, 0, 349, 263, 283,
	294, 0, 502, 458, 214, 425, 272, 202, 233, 217,
	241, 256, 259, 298, 358, 365, 394, 399, 277, 253,
	231, 418, 228, 441, 464, 465, 466, 468, 362, 248,
	398, 0, 363, 345, 470, 471, 290, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 336, 249, 0, 0, 395, 0, 197,
	0, 443, 236, 346, 343, 476, 264, 255, 251, 235,
	291, 353, 393, 463, 387, 0, 340, 0, 0, 453,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 234, 299, 196,
	378, 454, 268, 0, 0, 0, 0, 188, 2638, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 321, 330, 329, 310, 311, 313, 315,
	320, 327, 333, 0, 0, 0, 0, 0, 247, 295,
	254, 246, 473, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 367, 239, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 304, 192, 212, 0, 0, 377, 420,
	430, 0, 0, 0, 237, 0, 428, 391, 492, 220,
	266, 417, 397, 426, 404, 269, 0, 0, 427, 341,
	478, 411, 489, 510, 511, 245, 371, 500, 467, 506,
	524, 213, 242, 385, 460, 495, 450, 364, 474, 475,
	303, 449, 276, 195, 339, 516, 211, 436, 229, 218,
	480, 498, 271, 415, 203, 462, 487, 226, 440, 0,
	0, 526, 205, 485, 459, 360, 300, 301, 204, 0,
	416, 250, 274, 240, 380, 482, 483, 238, 527, 215,
	505, 207, 0, 504, 373, 477, 486, 361, 351, 206,
	484, 359, 350, 306, 325, 326, 262, 285, 409, 344,
	410, 286, 369, 368, 370, 199, 496, 0, 200, 0,
	455, 497, 528, 221, 222, 224, 0, 261, 265, 273,
	275, 281, 282, 289, 337, 384, 408, 406, 412, 0,
	472, 490, 501, 508, 514, 515, 517, 518, 519, 520,
	521, 523, 522, 372, 288, 451, 305, 342, 0, 0,
	390, 429, 227, 494, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 352, 442, 491, 307, 319,
	322, 312, 331, 0, 332, 308, 309, 314, 316, 317,
	318, 323, 324, 328, 334, 421, 422, 423, 424, 0,
	191, 208, 338, 0, 413, 270, 525, 503, 499, 198,
	210, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 243, 258, 260, 267, 279, 284, 287, 292, 293,
	296, 302, 348, 354, 355, 356, 357, 374, 375, 376,
	379, 382, 383, 386, 388, 389, 392, 396, 400, 401,
	402, 403, 405, 407, 414, 419, 431, 432, 433, 434,
	435, 438, 439, 444, 445, 446, 447, 448, 456, 457,
	461, 479, 481, 493, 507, 512, 437, 280, 488, 513,
	0, 347, 0, 0, 349, 263, 283, 294, 0, 502,
	458, 214, 425, 272, 202, 233, 217, 241, 256, 259,
	298, 358, 365, 394, 399, 277, 253, 231, 418, 228,
	441, 464, 465, 466, 468, 362, 248, 398, 0, 363,
	345, 470, 471, 290, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	336, 249, 0, 0, 395, 0, 197, 0, 443, 236,
	346, 343, 476, 264, 255, 251, 235, 291, 353, 393,
	463, 387, 0, 340, 0, 0, 453, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 234, 299, 196, 378, 454, 268,
	0, 0, 0, 0, 188, 2140, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	321, 330, 329, 310, 311, 313, 315, 320, 327, 333,
	0, 0, 0, 0, 0, 247, 295, 254, 246, 473,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 367, 239, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	304, 192, 212, 0, 0, 377, 420, 430, 0, 0,
	0, 237, 0, 428, 391, 492, 220, 266, 417, 397,
	426, 404, 269, 0, 0, 427, 341, 478, 411, 489,
	510, 511, 245, 371, 500, 467, 506, 524, 213, 242,
	385, 460, 495, 450, 364, 474, 475, 303, 449, 276,
	195, 339, 516, 211, 436, 229, 218, 480, 498, 271,
	415, 203, 462, 487, 226, 440, 0, 0, 526, 205,
	485, 459, 360, 300, 301, 204, 0, 416, 250, 274,
	240, 380, 482, 483, 238, 527, 215, 505, 207, 0,
	504, 373, 477, 486, 361, 351, 206, 484, 359, 350,
	306, 325, 326, 262, 285, 409, 344, 410, 286, 369,
	368, 370, 199, 496, 0, 200, 0, 455, 497, 528,
	221, 222, 224, 0, 261, 265, 273, 275, 281, 282,
	289, 337, 384, 408, 406, 412, 0, 472, 490, 501,
	508, 514, 515, 517, 518, 519, 520, 521, 523, 522,
	372, 288, 451, 305, 342, 0, 0, 390, 429, 227,
	494, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 352, 442, 491, 307, 319, 322, 312, 331,
	0, 332, 308, 309, 314, 316, 317, 318, 323, 324,
	328, 334, 421, 422, 423, 424, 0, 191, 208, 338,
	0, 413, 270, 525, 503, 499, 198, 210, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 243, 258,
	260, 267, 279, 284, 287, 292, 293, 296, 302, 348,
	354, 355, 356, 357, 374, 375, 376, 379, 382, 383,
	386, 388, 389, 392, 396, 400, 401, 402, 403, 405,
	407, 414, 419, 431, 432, 433, 434, 435, 438, 439,
	444, 445, 446, 447, 448, 456, 457, 461, 479, 481,
	493, 507, 512, 437, 280, 488, 513, 0, 347, 0,
	0, 349, 263, 283, 294, 0, 502, 458, 214, 425,
	272, 202, 233, 217, 241, 256, 259, 298, 358, 365,
	394, 399, 277, 253, 231, 418, 228, 441, 464, 465,
	466, 468, 362, 248, 398, 0, 0, 345, 470, 471,
	290,
}

var yyPact = [...]int{
	5927, -1000, -415, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2038, 2231, -1000, -1000,
	-1000, -1000, 2234, -1000, 769, 1772, -1000, 2031, 319, -1000,
	42601, 520, -1000, 41387, 517, 128, 42601, -1000, 172, -1000,
	164, 42601, 168, 40780, -1000, -1000, -267, 18918, 1967, 37,
	36, 42601, -1000, -1000, -1000, -1000, 2195, 1770, -1000, 377,
	-1000, -1000, -1000, -1000, -1000, -1000, 40173, -1000, -1000, -1000,
	2051, 2015, 2253, 658, 1962, -1000, 2116, 1770, -1000, 18918,
	2178, 2107, 18311, -1000, 18311, 460, -1000, -1000, 14052, -1000,
	-1000, 24391, 42601, 30461, 461, -1000, 2031, -1000, -1000, -1000,
	136, -1000, 367, 1622, -1000, 1618, -1000, 518, 712, 384,
	472, 459, 382, 379, 378, 371, 369, 368, 366, 361,
	386, -1000, 714, 714, -126, -136, 3179, 474, 425, 425,
	489, 1993, 1982, -1000, 666, -1000, 714, 714, 714, 315,
	714, 714, 714, 714, 295, 291, 714, 714, 714, 714,
	714, 714, 714, 714, 714, 714, 714, 714, 714, 714,
	714, 714, 714, 334, 2031, 254, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 42601, 182,
	42601, -1000, 583, 42601, 839, 839, 101, 839, 839, 839,
	839, 175, 627, 31, -1000, 170, 323, 153, 249, 835,
	191, -1000, -1000, 246, 835, 1254, -1000, 679, 144, -1000,
	839, 839, -1000, 11604, 204, 11604, 11604, -1000, 2021, -1000,
	-1000, -1000, -1000, 1260, -1000, 484, -1000, -1000, -1000, -1000,
	42601, 39566, 373, 733, -1000, -1000, -1000, 92, -1000, -1000,
	1386, 1032, 18918, 931, -1000, 1564, 636, -1000, -1000, -1000,
	-1000, -1000, 565, 19525, 19525, 19525, 19525, -1000, -1000, 1633,
	1633, 1633, 1633, 19525, 1633, 19525, 1633, 1633, 1633, 1633,
	18918, 1633, 1633, 1633, -1000, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, -1000, 1633, 580, 1633, 1633, 1633,
	1633, 1633, -1000, -1000, -1000, -1000, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21958, -1000, 16490, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42601, -1000, 1633,
	188, 42601, 42601, 327, 2116, 1770, -1000, 2195, 2166, 377,
	-1000, 2428, 1663, 1383, 1274, 1770, 1572, 42601, -1000, 1686,
	-1000, -1000, -1000, 1876, 1130, 1252, -1000, -1000, -1000, -1000,
	1409, 18918, -1000, -1000, 2220, -1000, 21351, 575, 865, 2218,
	38959, -1000, 460, 460, 1612, 13440, 7, -1000, -1000, -1000,
	732, 28033, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2021, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1714, 42601, -1000, -1000, 4053, 1310,
	-1000, 1768, -1000, 1708, -1000, 1730, 18918, 1780, 515, 1310,
	503, 498, 496, -1000, -47, -1000, -1000, -1000, -1000, -1000,
	-1000, 714, 714, 714, -1000, 345, 2175, 319, 4441, -1000,
	-1000, -1000, 38352, 1766, 1310, -1000, 1759, -1000, 819, 542,
	562, 562, 1310, -1000, -1000, 42601, 1310, 816, 814, 1310,
	1310, 42601, 42601, -1000, 37745, -1000, 37138, 36531, 1066, 42601,
	35924, 35317, 34710, 34103, 33496, -1000, 1977, -1000, 1889, -1000,
	-1000, -1000, 42601, 1310, 1310, 42601, 42601, 343, -1000, -1000,
	42601, 1310, -1000, -1000, 1065, 1064, 1060, 714, 714, 1058,
	1251, 1243, 1242, 714, 714, 1042, 1240, 29247, 1239, 240,
	1041, 1036, 1033, 1095, 1236, 231, 1234, 1071, 1067, 1029,
	42601, 1758, 42601, -1000, 219, 678, 402, 729, 2031, 1963,
	1589, 477, 513, 1310, 443, 443, 42601, -1000, 12216, -1000,
	-1000, 1225, 18918, -1000, 837, 835, 835, -1000, -1000, -1000,
	-1000, -1000, -1000, 839, 42601, 837, -1000, -1000, -1000, 835,
	839, 42601, 839, 839, 839, 839, 835, 835, 835, 839,
	42601, 42601, 42601, 42601, 42601, 42601, 42601, 42601, 42601, 11604,
	679, 839, -272, -1000, 1202, -1000, 1866, -1000, -1000, -1000,
	-1000, -1000, -1000, 11604, 11604, -1000, -1000, -1000, -1000, 167,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -40,
	1581, 32889, -1000, -273, -288, -289, -290, -1000, -1000, -1000,
	-293, -296, -1000, -1000, -1000, 18918, 18918, 18918, 18918, -159,
	-1000, 948, 19525, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1003, 892, 19525, 19525, 19525, 19525, 19525, 19525, 19525, 19525,
	19525, 19525, 19525, 19525, 19525, 19525, 19525, -1000, -1000, 26212,
	7758, 7758, 636, 636, 636, 636, -1000, 18311, 18918, 18918,
	636, -1000, 1310, 32282, 18311, 18311, 18918, 2020, 727, 1032,
	42601, -1000, 1274, -1000, -1000, -1000, 964, -1000, 42601, 42601,
	509, 18918, 18918, 18918, 18918, 18918, 18918, 15271, 18918, 18918,
	18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918,
	18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918,
	18918, 18918, 18918, 18918, 14664, 12216, 18311, 18311, 18311, 18311,
	18311, -1000, -1000, -1000, -1000, -1000, 18918, 18918, 18918, 18918,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 572, 1539, 1352,
	1567, -1000, 1579, -1000, -123, 23784, 18918, 1201, 2215, 1799,
	42601, -1000, -1000, -1000, 2116, -1000, 2116, 1539, 2192, 1880,
	18311, -1000, -1000, 2192, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1347, -1000, 42601, 1572, 2085, 42601, 1873, 1199,
	381, -1000, 18918, 18918, 1569, -1000, 1647, 42601, -1000, -159,
	-1000, 31675, -1000, -1000, 10992, -1000, 42601, 338, 42601, -1000,
	23177, 31068, 12828, 7, -1000, 12828, 1510, -1000, 13, -4,
	15878, 635, -1000, -1000, -1000, 3179, 7241, 1343, 635, 75,
	-1000, -1000, -1000, 1730, -1000, 1730, 1730, 1730, 1730, 381,
	381, 381, 381, -1000, -1000, -1000, -1000, -1000, 1755, 1752,
	-1000, 1730, 1730, 1730, 1730, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1748, 1748, 1748, 1731, 1731, 420, -1000, 18918,
	280, 30461, 2050, 1027, 1279, 219, 444, 1798, 1310, 1310,
	1310, 444, -1000, 1498, 1493, 1302, -1000, -400, 1563, -1000,
	-1000, 2174, -1000, -1000, 723, 850, 849, 749, 42601, 198,
	337, -1000, 410, -1000, 30461, 1310, 786, 562, 1310, -1000,
	1310, -1000, -1000, -1000, -1000, -1000, 1310, -1000, -1000, 1557,
	-1000, 1541, 900, 845, 868, 834, 1557, -1000, -1000, -104,
	1557, -1000, 1557, -1000, 1557, -1000, 1557, -1000, 1557, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 724, 197,
	-199, 42601, 198, 26212, -1000, 476, -1000, -1000, -1000, 26212,
	26212, -1000, -1000, -1000, -1000, 1196, 1191, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -390, 42601, -1000, 207,
	726, 299, 358, 340, 42601, 324, 2098, 2093, 2088, 269,
	287, 42601, 42601, 443, 1840, 42601, 2060, 42601, -1000, -1000,
	-1000, -1000, -1000, 1032, 42601, -1000, -1000, 839, 839, -1000,
	-1000, 42601, 839, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 839, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42601, -1000, -1000,
	-1000, -1000, 42601, -1000, -1000, -1000, -1000, -1000, 108, 9,
	365, -1000, -1000, -1000, -1000, -1000, 2111, -1000, 1032, 750,
	764, -1000, 1633, -1000, -1000, 979, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1003, 19525, 19525, 19525, 1108, 487, 1575,
	1601, 842, 907, 907, 851, 851, 644, 644, 644, 644,
	644, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1174,
	-1000, 1667, -1000, 1989, 1090, 1274, -1000, 1667, 1667, 1096,
	18311, -1000, -1000, 751, -1000, 18918, 1274, -1000, -1000, 1274,
	1274, 1555, 1552, 2213, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1913, 1279, 1279, 1279, 1279,
	1279, 18918, 1424, -1000, -1000, -1000, 2471, 2451, 1274, 1386,
	1274, 1543, -1000, 2446, 1279, 2427, 2416, 2411, 1309, 2381,
	2321, 2297, 1279, 1279, 1279, 1669, 2241, 2233, 2229, 2188,
	2009, 2005, 2001, 1955, 1951, 1279, 1274, 18311, 18311, 1520,
	1633, 571, -1000, 1667, 1274, 1274, 1667, 1667, 1907, 1891,
	1887, 1809, 12216, 1274, -1000, 42601, -1000, -256, -1000, -9,
	661, 1633, -1000, 29247, 1274, -1000, 6795, -1000, 43815, -1000,
	-1000, -1000, -1000, -1000, 27426, 1745, 2192, -1000, -1000, 1633,
	1703, -1000, -1000, 381, 77, 26819, 631, 631, 100, 1032,
	1032, 18918, -1000, -1000, -1000, -1000, -1000, -1000, 568, 2202,
	370, 1633, -1000, 1545, 2089, -1000, -1000, -1000, 2084, 20744,
	-1000, 1633, 1633, 42601, 1538, 1513, -1000, 560, -1000, 1510,
	7, -7, -1000, -1000, -1000, -1000, 1032, -1000, 1231, 339,
	2931, -1000, 413, -1000, -1000, -1000, -1000, 1978, 66, -1000,
	-1000, -1000, 212, 381, -1000, -1000, -1000, -1000, -1000, -1000,
	1172, 1172, -1000, -1000, -1000, -1000, -1000, 1022, -1000, -1000,
	-1000, 1021, -1000, -1000, 1790, 1832, 280, -1000, -1000, 714,
	1163, -1000, -1000, 1985, 714, 714, 42601, -1000, -1000, 1341,
	2050, 207, 42601, 745, 1827, -1000, 1798, 1798, 1798, 42601,
	-1000, -1000, -1000, -1000, -1000, -1000, -401, 65, 342, -1000,
	-1000, -1000, 4413, 42601, 1701, -1000, 196, -1000, 1326, -1000,
	42601, -1000, 1694, 1740, 1310, 1310, -1000, -1000, -1000, 42601,
	1633, -1000, -1000, -1000, -1000, 512, 2030, 301, -1000, -1000,
	-176, -1000, -1000, 198, 196, 635, 1310, -1000, -1000, -1000,
	-1000, -1000, -394, 1689, 494, 193, 302, 42601, 42601, 42601,
	42601, 42601, 551, -1000, -1000, -1000, -1000, 178, -1000, -1000,
	178, -1000, -1000, -1000, -1000, 272, 470, -1000, 42601, 42601,
	611, -1000, -1000, -1000, 835, -1000, -1000, 835, -1000, -1000,
	-1000, -1000, -1000, 2014, 42601, 8, -322, -1000, -314, 18918,
	-1000, -1000, -1000, -1000, 1035, 483, 1575, 19525, 19525, 18311,
	-98, 1355, 1355, 26212, -1000, -1000, -1000, 18918, 18918, 1376,
	713, -1000, 18918, 982, -1000, -1000, -1000, 18918, 18918, 18918,
	1274, 261, -1000, -1000, -1000, -1000, -1000, 2212, -1000, 18918,
	18918, 18918, -1000, -1000, 18918, 18918, -1000, 18918, 18918, 20132,
	1274, 20132, 18918, 18918, 20132, -1000, -1000, -1000, -1000, 20132,
	18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918, 18918, -1000,
	-1000, 1667, 1667, 18311, 12216, -1000, -1000, -1000, -1000, -1000,
	18918, 18918, 18918, 18918, -1000, -1000, -1000, -1000, -1000, 661,
	-1000, 562, 562, 562, 42601, -1000, -1000, -1000, -1000, -1000,
	-1000, 1480, 2152, -1000, 1912, 1910, 2209, 2202, -1000, 23177,
	2192, -1000, -1000, 42601, -249, -1000, 1935, 1902, 631, 631,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10380, 2116, 18918,
	1826, 42601, 1633, -1000, 22570, 42601, 42601, 23177, 23177, 23177,
	23177, 23177, -1000, 1858, 1852, -1000, 1865, 1859, 1894, 42601,
	-1000, 1659, 1274, 2166, 20744, 377, 18918, 24998, 1369, 23177,
	-1000, -1000, 23177, 42601, 9768, -1000, -1000, 6, -1, -1000,
	-1000, -1000, -1000, 3179, -1000, -1000, 3039, 2076, 1956, -1000,
	-1000, -1000, -1000, -1000, 1626, -1000, 1615, 1469, 1609, 197,
	-1000, 1750, 2008, 714, 714, -1000, 1020, -1000, 1310, 1159,
	1158, -1000, -1000, -1000, 475, -1000, 2057, 42601, 1825, 1824,
	1821, -1000, -408, 1013, 1736, 1361, 18918, 1735, 2172, 1391,
	42601, -1000, -1000, 42601, -1000, 232, -1000, 280, 42601, -1000,
	-1000, -1000, 337, 42601, -1000, 7021, -1000, -1000, -1000, 196,
	-1000, -1000, -1000, -1000, -1000, -1000, 42601, 216, -1000, 1732,
	1099, -1000, -1000, 1785, -1000, -1000, -1000, -1000, 192, 282,
	179, 1153, 179, -1000, 42601, 552, 1832, 42601, -1000, -1000,
	-1000, 839, 839, -1000, -1000, 2007, -1000, 1310, 1279, 19525,
	19525, -1000, 636, -1000, 1633, -141, 1730, 1730, -1000, 1730,
	1731, -1000, 1730, 157, 1730, 150, 1730, -1000, -1000, -141,
	1274, 1661, 1319, -54, -1000, 1032, 18918, 1805, 1783, 1279,
	-1000, 1729, 1726, 18918, 1279, 1279, 1279, -1000, 1032, 1309,
	1776, 1443, -1000, -1000, -1000, -1000, 1437, 1279, 1711, -247,
	1274, 1602, 1602, 1602, 1602, 1602, 1567, 1567, 1567, 1567,
	-1000, -1000, 1274, -1000, 1549, 1533, 1435, 1522, -1000, 2101,
	2101, 2101, 1561, 43208, 42601, -1000, -1000, -1000, -1000, 2202,
	2193, 1395, -1000, -1000, 77, 380, -1000, 1948, 1902, -1000,
	2170, 1931, 2168, -1000, -1000, -1000, -1000, -1000, 1032, -1000,
	2036, 1457, -1000, 717, 1356, -1000, -1000, 17704, 1565, 1895,
	545, 1561, 1492, 2089, 1792, 1818, 2652, -1000, -1000, -1000,
	-1000, 1842, -1000, 1800, -1000, -1000, 1686, -1000, -1000, 1352,
	1274, 1345, 338, 23177, 1393, 1393, -1000, 543, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 859, 6967, 2246, -1000, 1149,
	-1000, 1197, 194, 1006, -1000, -1000, 714, 714, -1000, 785,
	783, -1000, 42601, 1725, -1000, 381, 1148, 381, 997, -1000,
	952, -1000, -1000, -1000, -1000, 1789, 1953, -1000, -1000, -1000,
	-1000, 42601, -1000, -1000, 42601, 42601, 42601, 1724, 2148, -1000,
	18918, 1717, 716, 1771, 42601, 42601, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 436, 714, -333,
	262, 260, 714, 714, 714, -410, -1000, -1000, 1547, 1536,
	-1000, -120, -1000, 18918, -1000, -1000, -1000, 1016, 1016, -1000,
	1686, -1000, -1000, -1000, 1301, -1000, -1000, -106, 42601, 42601,
	42601, 42601, -1000, 961, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 636, 19525, 1274, -1000,
	-1000, 381, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1274,
	-1000, 18918, -1000, 18918, -1000, 2116, 1147, 1032, 18918, 18918,
	-1000, 951, 944, 1279, -1000, -1000, -1000, 1274, 20132, -1000,
	20132, -1000, 18918, 243, 1355, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18918, -1000, 18918,
	18918, -1000, 18918, 1633, 2018, 1633, 1633, 24998, -1000, -1000,
	2193, 2182, 2145, 1911, 1925, 1925, 1948, -1000, 2144, 2134,
	-1000, 1143, 2133, 1134, 782, -1000, 42601, 18918, 1633, -1000,
	375, 42601, 1633, 42601, -1000, 2167, -1000, -1000, 18918, 1707,
	-1000, 18918, -1000, -1000, -1000, -1000, -1000, -1000, 7758, 2202,
	1393, -1000, -1000, 650, -1000, 18918, -1000, -1000, -1000, 5410,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1131, 1129,
	-1000, -1000, 1698, 18918, -1000, -1000, -1000, 1299, 1292, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1686, -1000, -1000,
	-1000, -1000, 337, -403, 1749, 42601, 934, -1000, 1516, 1391,
	304, 1633, 1124, 714, 714, 714, 905, 889, 29247, 1507,
	-1000, 42601, 383, -1000, 337, -1000, -137, -138, 1279, -1000,
	-1000, 2073, -1000, -1000, 12216, -1000, -1000, 1666, 1797, -1000,
	-1000, -1000, 451, -1000, -1000, -1000, 1279, 1279, 1274, -1000,
	1279, 1279, 1290, 1276, -1000, -1000, 1443, -1000, 1463, -1000,
	243, 1274, 1817, -1000, -1000, 7758, -1000, 1430, 1279, 1400,
	1336, 25605, -1000, 2130, 2123, 29854, 29854, 661, 2182, -1000,
	18918, 18918, 1921, 909, -1000, -1000, -1000, -1000, 1122, 1117,
	-1000, 1115, -1000, 2242, -1000, 1032, -1000, 1633, -1000, 529,
	1356, -1000, 2116, 1032, 42601, 1032, 62, 2167, -1000, 1279,
	-1000, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, -1000, -1000, 42601,
	1704, -1000, -1000, 2070, 1428, 63, -1000, 1418, -1000, -1000,
	514, -1000, 18918, -1000, 29247, 1098, 1076, -1000, -1000, -1000,
	-1000, -410, -1000, -1000, -1000, -1000, -1000, -1000, 377, 1389,
	-1000, 705, 42601, 42601, 1274, 303, -111, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18918, -1000, 1274, 1814,
	-1000, -215, -1000, -1000, 18918, -1000, -1000, 18918, -1000, 18918,
	1381, -1000, -1000, -1000, -1000, -1000, 1381, 1381, -1000, -1000,
	1032, 1386, -1000, 906, -1000, -1000, -1000, -1000, -1000, 42601,
	1356, 42601, -1000, 1362, 1274, 1633, 2116, -1000, 1339, -1000,
	377, -1000, 1630, 1361, -1000, -1000, -1000, 17097, -1000, -1000,
	-1000, -1000, -1000, 177, -105, 12216, 9156, 1283, -1000, -1000,
	1872, -101, -113, 1309, -1000, -304, -1000, -1000, 1315, 1227,
	1125, 28640, -1000, -1000, -1000, -1000, -1000, 1350, -1000, -1000,
	24998, 41994, -1000, -94, 320, -105, 18918, 1576, 1274, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32, -1000, -1000,
	-1000, -1000, -1000, 1785, -1000, 1870, -1000, 1274, -1000, 18918,
	-1000, 18918, -1000, 18918, -1000, -1000, -1000, 1269, -1000, 5258,
	-207, 1813, -1000, -50, -1000, -1000, -1000, 843, 1037, -1000,
	-1000, -1000, -1000, -1000, -1000, 1691, 42601, -1000, 419, -1000,
	-1000, -106, -109, -1000, 1119, 1018, 1279, -1000, 41994, -200,
	635, 7758, -1000, 1806, 1781, 2207, -1000, -1000, -1000, -1000,
	-1000, -1000, -412, 1265, 213, -1000, -122, -1000, 18918, -1000,
	18918, -1000, -1000, -1000, 2053, 62, -1000, 2240, -1000, 2222,
	623, 623, -1000, 884, -412, -1000, -117, 1279, 1279, -210,
	-1000, -1000, -1000, -1000, -1000, 396, 983, -1000, -1000, -1000,
	-1000, -1000, -1000, 7758, -1000, -1000, -1000, 259, 259, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2684, 2681, 25, 2, 39, 36, 2675, 26, 116,
	192, 55, 194, 111, 2673, 2672, 2670, 2668, 2667, 2666,
	2663, 256, 253, 220, 2660, 2659, 2658, 2657, 2656, 2653,
	2651, 2650, 2649, 2648, 264, 173, 189, 2647, 2646, 2642,
	129, 206, 100, 99, 185, 2641, 2640, 92, 2639, 2637,
	2636, 183, 181, 180, 769, 2635, 182, 134, 48, 2632,
	2630, 2629, 2627, 2626, 2625, 2624, 2622, 2621, 2617, 2615,
	2614, 2613, 2608, 2606, 2605, 2603, 272, 2602, 2601, 15,
	2597, 94, 2596, 2595, 2593, 2592, 142, 2591, 2588, 2586,
	23, 2583, 2581, 2580, 2579, 2578, 2576, 2574, 155, 2573,
	2572, 2571, 2570, 190, 2569, 2568, 275, 122, 146, 2567,
	2564, 126, 187, 2553, 136, 2551, 2546, 2539, 163, 2534,
	2711, 2526, 78, 70, 2525, 83, 97, 69, 71, 22,
	18, 2524, 2523, 73, 90, 2522, 2521, 119, 81, 2518,
	125, 110, 2513, 2512, 12, 4, 2510, 6, 1, 3,
	74, 2508, 2504, 132, 2501, 2497, 2496, 115, 2494, 2490,
	4170, 2489, 105, 150, 120, 82, 2487, 47, 76, 2486,
	2484, 2482, 2481, 2480, 58, 2478, 2477, 2471, 154, 63,
	177, 30, 37, 49, 149, 2470, 34, 96, 2469, 153,
	152, 2467, 61, 42, 43, 2465, 40, 147, 128, 38,
	103, 166, 2464, 2463, 59, 80, 2458, 2456, 2453, 2449,
	176, 2448, 2437, 79, 2434, 66, 2432, 215, 2430, 14,
	2428, 53, 46, 2427, 75, 143, 77, 31, 2425, 175,
	2417, 60, 172, 145, 170, 2412, 2411, 2409, 2407, 188,
	327, 2405, 2403, 85, 174, 156, 160, 118, 2402, 329,
	2401, 2393, 102, 1297, 3827, 50, 171, 2392, 2391, 4127,
	148, 41, 16, 2389, 200, 2387, 2386, 2383, 195, 178,
	123, 1026, 67, 2382, 2378, 84, 11, 2374, 2373, 2370,
	2364, 2363, 2361, 86, 35, 33, 32, 193, 89, 20,
	108, 169, 95, 2360, 2357, 2356, 137, 101, 2355, 168,
	167, 138, 130, 2353, 186, 157, 140, 2352, 65, 29,
	2351, 2350, 2349, 2347, 107, 2344, 2343, 2336, 2323, 165,
	161, 133, 98, 2322, 91, 135, 164, 158, 52, 2317,
	44, 2315, 2314, 24, 184, 28, 2313, 10, 88, 68,
	21, 127, 139, 2302, 0, 2296, 13, 179, 328, 162,
	2295, 2294, 8, 5, 9, 2293, 2288, 2285, 2282, 151,
	2280, 2279, 2276, 2272, 19, 45, 17, 7, 121, 93,
	2271, 2270, 6260, 1291, 144, 2253, 198,
}

//line sql.y:7214
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 370, 371, 371, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 344, 344,
	344, 347, 347, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	374, 374, 155, 155, 153, 153, 154, 154, 224, 224,
	24, 25, 25, 234, 234, 233, 233, 233, 235, 235,
	235, 235, 271, 271, 26, 26, 26, 26, 26, 104,
	104, 346, 346, 345, 337, 337, 336, 336, 335, 343,
	343, 342, 342, 341, 38, 39, 48, 48, 48, 48,
	49, 50, 348, 348, 310, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 312, 312, 298, 298, 311, 311, 311, 311, 311,
	311, 311, 297, 297, 115, 115, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 363, 363, 363, 362, 362, 203, 203,
	203, 203, 203, 203, 203, 203, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 364, 364, 364, 364, 276, 276, 276,
	276, 279, 279, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 280, 280, 280,
	280, 280, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 282, 282,
	282, 282, 282, 282, 282, 282, 296, 296, 283, 283,
	291, 291, 292, 292, 292, 293, 293, 293, 294, 294,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 290,
	290, 289, 289, 289, 299, 324, 324, 323, 323, 321,
	321, 321, 321, 321, 321, 321, 321, 308, 308, 318,
	318, 318, 318, 318, 307, 307, 303, 303, 303, 304,
	304, 305, 305, 302, 302, 306, 306, 320, 320, 319,
	319, 300, 300, 301, 301, 326, 365, 365, 365, 365,
	365, 366, 366, 327, 355, 357, 357, 357, 356, 356,
	353, 354, 352, 352, 352, 352, 352, 81, 81, 81,
	247, 247, 248, 248, 316, 316, 315, 315, 315, 317,
	317, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 242, 242, 242, 351, 351, 351, 351, 351,
	351, 350, 350, 350, 313, 313, 313, 349, 349, 57,
	57, 187, 187, 368, 368, 369, 369, 369, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 329, 329, 58, 58, 3, 3, 143, 145,
	146, 146, 144, 144, 144, 144, 144, 144, 60, 60,
	59, 59, 148, 147, 149, 149, 149, 1, 1, 2,
	2, 4, 4, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 295, 295, 295, 328, 328,
	330, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 332, 332, 332, 61, 61, 333, 284,
	285, 286, 5, 6, 309, 331, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 241,
	241, 250, 250, 240, 240, 264, 264, 264, 243, 243,
	243, 244, 244, 361, 361, 361, 237, 237, 64, 64,
	64, 66, 66, 67, 68, 68, 266, 266, 267, 267,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 358, 358, 359, 360, 360, 360, 360,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 375, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 223, 223, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 106, 106, 108, 108, 108, 108, 257, 257, 257,
	256, 256, 137, 137, 139, 138, 138, 140, 140, 141,
	141, 141, 141, 185, 185, 163, 163, 221, 221, 219,
	219, 220, 220, 222, 222, 222, 222, 225, 225, 142,
	142, 142, 142, 150, 150, 151, 151, 152, 152, 265,
	265, 262, 262, 262, 261, 261, 156, 156, 156, 158,
	157, 157, 157, 157, 159, 159, 161, 161, 160, 160,
	162, 167, 167, 166, 166, 164, 164, 164, 164, 165,
	165, 165, 165, 168, 168, 120, 120, 120, 120, 120,
	120, 120, 131, 131, 131, 131, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 210, 210, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 83, 83, 83, 238, 238,
	169, 169, 177, 177, 177, 177, 170, 170, 170, 170,
	170, 170, 170, 178, 178, 178, 184, 179, 179, 175,
	175, 175, 175, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 273, 273, 340,
	340, 339, 339, 338, 338, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 376, 376, 287, 287,
	287, 287, 176, 176, 176, 176, 176, 101, 101, 101,
	101, 101, 270, 270, 270, 274, 274, 274, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 275, 275, 190, 190, 97, 97, 188,
	188, 189, 191, 191, 186, 186, 186, 172, 172, 172,
	192, 192, 193, 193, 194, 194, 196, 195, 195, 197,
	198, 198, 198, 199, 199, 200, 200, 200, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	43, 112, 112, 112, 112, 114, 114, 113, 113, 79,
	79, 80, 80, 80, 118, 118, 119, 119, 119, 116,
	116, 117, 117, 217, 217, 201, 201, 201, 208, 208,
	208, 204, 204, 206, 206, 206, 207, 207, 207, 205,
	214, 214, 216, 216, 215, 215, 211, 211, 212, 212,
	213, 213, 213, 209, 209, 171, 171, 171, 171, 171,
	218, 218, 218, 218, 226, 226, 181, 181, 183, 183,
	182, 135, 227, 227, 231, 228, 228, 232, 232, 232,
	232, 232, 229, 229, 230, 230, 258, 258, 258, 236,
	236, 249, 249, 245, 245, 246, 246, 239, 239, 251,
	251, 251, 74, 180, 180, 325, 325, 322, 254, 254,
	255, 255, 259, 259, 263, 263, 260, 260, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 372, 373, 268, 269, 269, 269,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 7, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 1, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 0, 2, 0,
	2, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -370, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 221, -49, -39, 222,
	-50, 224, 223, 260, 225, 253, 74, 306, 307, 309,
	310, 311, 312, -85, 258, 259, 227, 36, 45, 33,
	34, 37, 231, 266, 267, 230, -10, -34, 8, -372,
	11, 437, 255, 254, 28, -12, 475, 86, -371, 616,
	-217, -201, 22, 33, 29, -200, -196, -103, -201, 20,
	18, 7, -76, -375, -76, -76, 12, 13, -76, -310,
	-312, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -334, -44, -41, 226, 223, 270,
	120, 121, 260, 261, 262, 225, 244, 259, 263, 258,
	279, -40, 81, 33, 475, 478, -317, 222, 228, 229,
	438, 123, 122, 75, 224, -314, 360, 508, 586, -56,
	588, 102, 104, 587, 44, 234, 589, 590, 591, 515,
	592, 243, 593, 594, 595, 596, 602, 557, 603, 604,
	605, 124, 7, -76, -263, -259, -344, -253, 89, 90,
	91, 472, 246, 506, 507, 295, 81, 41, 481, 357,
	360, 508, 586, 306, 320, 314, 341, 333, 473, 509,
	482, 298, 247, 283, 583, 331, 132, 588, 301, 510,
	261, 365, 366, 511, 367, 102, 309, 404, 601, 300,
	512, 599, 104, 587, 79, 51, 44, 256, 329, 230,
	325, 589, 284, 513, 484, 277, 123, 120, 608, 36,
	323, 50, 30, 598, 122, 49, 590, 147, 514, 591,
	515, 369, 348, 577, 48, 370, 262, 516, 84, 267,
	477, 304, 585, 371, 324, 372, 294, 597, 227, 517,
	569, 373, 374, 578, 518, 349, 353, 519, 396, 375,
	615, 52, 520, 521, 579, 121, 522, 78, 592, 80,
	318, 319, 523, 292, 245, 398, 345, 450, 457, 458,
	108, 109, 453, 110, 459, 111, 460, 461, 462, 451,
	112, 105, 452, 463, 464, 346, 347, 113, 465, 107,
	106, 454, 456, 114, 466, 243, 35, 376, 474, 296,
	58, 271, 399, 46, 351, 612, 45, 573, 524, 576,
	344, 340, 447, 53, 525, 526, 527, 528, 593, 343,
	317, 339, 607, 4, 289, 594, 62, 229, 355, 354,
	356, 278, 395, 336, 529, 530, 531, 250, 82, 532,
	326, 21, 533, 534, 377, 285, 535, 56, 536, 537,
	402, 259, 538, 54, 595, 39, 539, 264, 609, 596,
	540, 541, 542, 543, 266, 544, 379, 545, 378, 350,
	352, 273, 380, 476, 546, 305, 322, 263, 600, 547,
	251, 467, 468, 469, 470, 584, 265, 270, 258, 403,
	252, 548, 549, 550, 551, 552, 299, 568, 553, 554,
	310, 602, 448, 43, 555, 556, 557, 558, 559, 293,
	288, 397, 406, 61, 83, 362, 560, 561, 582, 316,
	286, 562, 307, 55, 603, 604, 605, 280, 606, 9,
	613, 614, 382, 124, 290, 291, 47, 337, 272, 563,
	302, 564, 327, 328, 342, 315, 338, 308, 570, 274,
	383, 449, 260, 565, 405, 287, 358, 363, 303, 480,
	279, 384, 581, 479, 335, 332, 281, 566, 385, 235,
	275, 276, 567, 571, 386, 387, 297, 388, 389, 390,
	391, 392, 394, 393, 282, 478, 313, 330, 364, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 446, 233, -76,
	233, -160, -259, 233, -229, 366, -250, 368, 381, 376,
	386, 374, -241, 377, 379, 273, -361, 396, 233, 383,
	221, 369, 378, 387, 388, 297, 394, 389, 393, 282,
	390, 391, 392, -344, 174, 591, 606, 132, 334, 373,
	371, 397, 573, -259, 308, -266, 313, -254, -344, -253,
	311, -160, -82, 569, 225, -268, -268, -105, 573, 575,
	-179, -120, 140, -131, -134, -125, -126, -173, -174, -175,
	-176, -132, -186, 163, 164, 171, 141, -184, -135, 26,
	471, 439, 438, 174, 31, 217, 68, 69, 441, 442,
	143, 57, 414, 415, -133, 409, 416, 411, 444, 445,
	115, 446, 105, 107, 106, 447, 448, 449, 346, 347,
	450, 451, 452, 108, 109, 110, 111, 112, 113, 114,
	453, 456, 454, 455, 457, 458, 459, 464, 465, 460,
	461, 462, 463, 466, -136, -254, -259, 238, 408, 232,
	169, 437, -127, -123, -8, -182, 407, 412, 413, 417,
	410, 467, 468, 469, 470, -344, -253, -129, -128, -169,
	92, 98, 103, 99, -367, 116, -372, 93, 94, 95,
	96, 97, 117, 118, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 44, 382, 382, -160,
	-76, -76, -76, -76, -194, -103, -196, -10, -8, -372,
	8, -76, -8, -9, -13, -34, -36, 502, -35, -259,
	-201, -217, 12, 159, 42, 50, -199, -200, -12, -8,
	-120, 19, 23, 24, -108, 165, -120, -259, -77, -108,
	-239, 237, -76, -76, -228, -271, 308, -232, 397, 396,
	-255, -230, -254, -252, -229, 395, 226, 23, 139, 25,
	27, 142, 174, 127, 19, 143, 37, 228, 334, 244,
	173, 240, 438, 221, 72, 483, 409, 411, 407, 414,
	440, 441, 408, 368, 31, 13, 485, 28, 254, 24,
	38, 167, 223, 146, 486, 257, 26, 255, 115, 118,
	488, 22, 75, 249, 14, 242, 40, 16, 489, 490,
	17, 238, 237, 159, 234, 70, 11, 217, 29, 155,
	66, 491, 134, 492, 493, 494, 495, 128, 68, 156,
	20, 610, 412, 413, 33, 574, 471, 268, 169, 73,
	59, 575, 140, 410, 496, 497, 116, 498, 119, 76,
	580, 136, 18, 71, 42, 499, 269, 500, 239, 611,
	501, 400, 502, 157, 224, 437, 69, 158, 503, 232,
	381, 8, 443, 32, 253, 241, 126, 67, 504, 233,
	145, 444, 445, 236, 129, 117, 7, 133, 34, 12,
	74, 77, 415, 416, 417, 57, 125, 475, 144, 15,
	505, 401, 138, 132, -311, 156, -297, -301, -254, 248,
	-327, 244, -160, -320, -319, -254, -372, -104, -249, 234,
	242, 241, 133, -348, 136, 290, 408, 232, -51, -52,
	-53, -229, 173, 590, -86, 265, 269, 87, 87, -301,
	-300, -299, -349, 269, 248, -326, -318, 240, 249, -307,
	241, 242, -302, 234, 134, -349, -302, 239, 249, 244,
	248, 269, 269, 124, 269, 124, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 264, -308, 148, -308, 479,
	479, -314, -349, 244, 234, -349, -349, 236, 35, 35,
	-251, -302, 236, 25, -308, -308, -308, -229, 173, -308,
	-308, -308, -308, 277, 277, -308, -308, -308, -308, -308,
	-308, -308, -308, -308, -308, -308, -308, -308, -308, -308,
	-308, -308, 233, -348, -112, 393, 297, 81, -54, 279,
	-37, -160, -249, 234, 235, -348, 266, -160, 218, -160,
	-243, 156, 15, -243, -240, 382, 380, 367, 372, -243,
	-243, -243, -243, 280, 365, -303, 234, 35, 245, 382,
	280, 365, 280, 281, 280, 281, 375, 385, 280, -264,
	14, 159, 408, 370, 374, 273, 233, 274, 235, 384,
	281, -264, 93, -244, 156, 382, 276, -243, -243, -269,
	-372, -255, 334, -344, 576, -269, -269, 32, 90, 236,
	-254, -78, -254, 93, -15, -11, -22, -21, -23, 148,
	-110, 382, -98, 174, 591, 577, 578, 579, 576, 379,
	584, 582, 580, 280, 581, 87, 136, 138, 139, 4,
	-120, 155, -170, 148, 149, 150, 151, 152, 153, 154,
	159, 140, 142, 156, -210, 137, 160, 161, 162, 163,
	164, 165, 166, 168, 167, 169, 170, 157, 158, 173,
	219, 220, -126, -126, -126, -126, -184, -372, -372, -372,
	-126, -238, -372, -126, -372, -372, -372, -372, -190, -120,
	-372, -376, -372, -376, -376, -287, -372, -287, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, 218, -372, -372, -372, -372,
	-372, -287, -287, -287, -287, -287, -372, -372, -372, -372,
	103, 98, 92, -186, 99, 93, -254, -259, -8, -9,
	-179, -268, -358, -359, -163, -160, -372, 297, -254, -254,
	266, -199, -12, -8, -194, -200, -196, -8, -76, -96,
	-109, 63, 64, -111, 24, 38, 67, 65, 23, -373,
	88, -373, -217, -373, 87, -36, -221, 86, 61, 43,
	93, 93, 87, 21, -195, -197, -120, 14, -257, 4,
	-256, 25, -254, 93, 218, 101, 14, -161, 29, -160,
	-239, -239, 87, 308, -232, -271, -234, -233, 398, 400,
	148, -258, -254, 93, 31, 88, 87, -160, -276, -279,
	-281, -280, -282, -277, -278, 331, 332, 174, 335, 337,
	338, 339, 340, 341, 342, 343, 344, 345, 348, 32,
	256, 327, 328, 329, 330, 349, 350, 351, 352, 353,
	354, 355, 356, 314, 333, 473, 315, 316, 317, 318,
	319, 320, 322, 323, 324, 325, 326, -347, -344, 86,
	88, 87, -283, 86, -120, -112, 233, -344, 234, 234,
	234, -76, 437, -308, -308, -308, 264, 19, -44, -41,
	-334, 18, -40, -41, 226, 120, 121, 223, 86, -297,
	86, -306, -347, -344, 86, 134, 239, 133, -305, -302,
	-305, -306, -344, -186, -344, 134, 134, -344, -344, -225,
	-254, -225, -225, 23, -225, 23, -225, 23, 95, -254,
	-225, 23, -225, 23, -225, 23, -225, 23, -225, 23,
	31, 78, 79, 80, 31, 82, 83, 84, -186, -344,
	-344, -186, -297, -229, -160, -344, 95, 95, 95, -308,
	-308, 95, 93, 93, 93, -308, -308, 95, 93, -261,
	-259, 93, 93, -350, 250, 294, 296, 95, 95, 95,
	95, 31, 93, -351, 31, 598, 597, 599, 600, 601,
	93, 95, 31, 95, 31, 95, -254, 86, -160, -118,
	284, 221, 223, 226, 76, 93, 298, 302, 303, 148,
	44, 87, 236, 233, -344, -245, 238, -245, -254, -260,
	-259, -252, 93, -120, -304, 14, 159, -264, -264, -243,
	-160, -304, -264, -243, -160, -243, -243, -243, -243, -264,
	-264, -264, -243, -259, -259, -160, -160, -160, -160, -160,
	-160, -160, -269, -244, -243, 576, 93, -237, 14, 76,
	-269, -269, -267, 311, 345, 570, 571, 572, 87, 475,
	-153, -160, 576, 576, 576, 576, 576, 576, -120, -120,
	-120, -120, 498, -177, 116, 140, 117, 118, -134, -178,
	-182, -184, 100, 159, 142, 156, -210, -125, -126, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -270, -254, 93, 174, -130, -129, 99, -367,
	-130, -106, -108, -120, -120, -344, -254, -106, -106, -120,
	-102, 24, 38, -188, -189, 144, -186, -373, -373, 95,
	99, -254, -254, -95, -94, 419, 420, 421, 422, 424,
	425, 426, 429, 430, 434, 435, 418, 436, 423, 428,
	431, 432, 433, 427, 330, -120, -120, -120, -120, -120,
	-120, -83, -120, 127, 128, 129, -120, -120, -180, -179,
	-343, -342, -341, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -107, 24, 38, -106,
	-255, -260, -252, -106, -107, -107, -106, -106, -120, -120,
	-120, -120, 218, -217, -373, 87, -360, 400, 401, 574,
	-262, 269, -261, 25, -180, 93, 14, -223, 77, -254,
	-199, -199, 63, 64, 59, -106, -111, -373, -35, 25,
	-219, -254, 62, 93, -288, -229, 357, 358, 174, -120,
	-120, 87, -198, 27, 28, -160, -256, 165, -260, -160,
	-224, 269, -160, -138, -140, -141, -142, -163, -185, -372,
	-143, 494, 491, 14, -153, -154, -162, -259, -232, -234,
	87, 399, 401, 402, 76, 119, -120, -289, 173, -316,
	-315, -314, -297, -299, -300, -301, 88, -289, -293, 363,
	362, -283, -283, -283, -283, -283, -288, -288, -288, -288,
	86, 86, -283, -283, -283, -283, -291, 86, -291, -291,
	-292, 86, -292, -327, -120, -324, -323, -321, -322, 243,
	102, 567, 523, 475, 515, 557, 77, -319, -198, 95,
	-373, -118, -246, 238, -325, -322, -344, -344, -344, -246,
	-344, 93, -344, 93, -344, 93, -87, -58, -1, 610,
	611, 612, 87, 19, -298, -297, -57, 294, -330, -331,
	269, -326, -320, -306, 134, -305, -306, -306, -344, 87,
	29, 124, 124, 124, 124, 475, 223, 32, -247, 514,
	140, 567, 523, -297, -57, -270, 236, -270, -270, 93,
	93, -242, 606, -153, -114, 286, 148, 275, 275, 233,
	233, 288, -160, 299, 301, 300, 298, 302, 303, 23,
	23, 23, 287, 289, 291, 277, -160, -160, -245, 76,
	-155, -160, 26, -259, -160, -243, -243, -160, -243, -243,
	-160, -254, -98, 400, 87, 475, 22, -99, 22, -372,
	116, 117, 118, -178, -125, -126, -125, 139, 257, 87,
	-373, 25, 87, 77, -373, -373, -373, 87, 14, -106,
	-191, -189, 146, -120, -373, -373, -373, 87, 87, 14,
	-274, 25, -373, -373, -373, -373, -373, -190, -373, 14,
	87, 87, -373, -373, 87, 87, -373, 87, 87, 87,
	-340, 87, 87, 87, 87, -373, -373, -373, -373, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, -373,
	-373, -106, -106, -372, 218, -373, -373, -373, -373, -373,
	87, 87, 87, 87, -255, -359, 573, 401, -167, -166,
	-164, 74, 237, 75, -372, -261, -373, -130, 90, -220,
	90, -219, -172, -254, 95, 99, -201, -137, -139, 14,
	-111, -184, 88, 87, -288, -205, -211, -240, -254, 93,
	174, -290, 174, -290, 357, 358, -197, 218, -168, 15,
	-171, 32, 57, -11, -372, -372, 32, 87, -156, -158,
	-157, -159, 66, 70, 72, 67, 68, 69, 73, -265,
	25, -138, -9, -8, -372, -372, -372, -160, -153, -374,
	14, 77, -374, 87, 218, -233, -235, 403, 400, 406,
	-344, 93, -86, 87, -314, -301, -202, -115, 40, -294,
	364, -288, 482, -288, -296, 93, -296, 95, 95, 88,
	-47, -42, -43, 33, 81, -321, -308, 93, 39, -308,
	-308, -254, 88, -198, -114, -160, 140, 76, -325, -325,
	-325, -259, -2, 609, 615, 134, 86, 367, 18, -219,
	87, 88, -187, 295, 88, -88, -254, 88, 86, -306,
	-306, -254, -372, 233, 31, 31, 567, 523, 514, -57,
	-187, -289, -344, 608, 607, 88, 235, 293, -119, 414,
	-116, 93, 89, -160, -160, -160, -160, -160, 226, 223,
	-368, 304, -368, 278, 236, -153, -160, 87, -81, 252,
	247, -264, -264, 33, -160, 400, 585, 583, -120, 139,
	257, -134, -126, -108, 472, -272, 174, 331, 256, 329,
	325, 345, 336, 362, 327, 363, 324, 323, 322, -272,
	-270, -120, -120, -194, 147, -120, 145, -120, -120, -120,
	-373, 174, 331, 14, -120, -120, -120, -341, -120, -120,
	-120, -339, -338, -130, -186, -373, -339, -120, -120, -338,
	-338, -342, -342, -342, -342, -342, -179, -179, -179, -179,
	-373, -373, -107, -255, -120, -120, -120, -120, -164, -302,
	-302, -302, -225, 87, -236, 22, 14, 57, 57, -137,
	-168, -138, -111, -254, -208, 569, -214, 46, -212, -213,
	47, -209, 48, 56, -290, -290, 165, -199, -120, -226,
	76, -227, -231, -186, -181, -183, -182, -372, -218, -373,
	-254, -225, -227, -140, -141, -141, -140, -141, 66, 66,
	66, 71, 66, 71, 66, -157, -259, -373, -373, -9,
	-9, -120, -262, 77, -138, -138, -162, -259, 165, 400,
	404, 405, -314, -366, 116, 140, 31, 76, 360, 102,
	-364, 173, 511, 562, 567, 523, 515, 557, -365, 239,
	133, 134, 251, 25, 41, 88, 87, 88, 87, 88,
	87, -248, -247, -43, -42, -308, -308, 95, -344, 93,
	93, 235, 26, -160, 76, 76, 76, -89, 613, 95,
	86, -3, 81, -120, 86, 19, -297, -186, -332, -284,
	-333, -285, -286, -5, -6, -309, -92, 57, 102, -61,
	44, 234, 593, 594, 124, -372, 606, -324, -219, -328,
	-330, -160, -122, -372, -121, -123, -127, 163, 164, -187,
	-160, -113, 284, 292, 86, -117, 90, -346, 77, 275,
	360, 275, -369, 305, 93, -369, -160, -81, -47, -160,
	-243, -243, 33, -344, -373, -134, -126, -372, -275, 481,
	-283, -283, -283, -292, -283, 319, -283, 319, -283, -275,
	-373, 87, -373, 22, -373, -97, 443, -120, 87, 87,
	-373, 86, 86, -120, -373, -373, -373, -340, 87, -373,
	87, -373, 87, -273, 568, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, 87, -373, 87,
	87, -373, 87, -165, 22, -165, -165, -373, 90, -160,
	-168, -192, 16, -205, 51, 337, -216, -215, 55, 47,
	-213, 19, 49, 19, 30, -226, 87, 148, 87, -373,
	-373, 87, 57, 218, -373, -168, -151, -150, 76, 77,
	-152, 76, -150, 66, 66, -221, -373, -373, 87, -224,
	-138, -168, -168, 218, 116, -372, -124, -133, -122, 12,
	93, 93, -344, -363, 597, 598, 31, 95, -308, -308,
	134, 134, -160, 86, -288, 93, -288, 95, 95, 31,
	82, 83, 84, 31, 78, 79, 80, -160, -160, -160,
	-160, -329, 86, 19, -120, 86, 148, 88, -219, -219,
	271, 159, -308, 591, 277, 277, -308, -308, -308, -91,
	-90, 613, 88, -373, 87, -295, 475, 478, -120, -128,
	-128, -221, 88, -337, 475, -345, -254, -254, -254, -254,
	95, 97, -125, -373, -288, -373, -120, -120, -199, 93,
	-120, -120, 95, 95, -373, -373, -339, -338, -120, -373,
	-148, -147, -149, 577, 116, 31, -272, -120, -120, -120,
	-120, -372, 66, 18, 16, -372, -372, -262, -192, -193,
	17, 19, -206, 53, -204, 52, -204, -215, 19, 19,
	93, 19, 93, 134, -231, -120, -183, 57, -11, -254,
	-181, -254, -194, -120, 86, -120, -130, -168, -168, -120,
	-174, 446, 105, 107, 106, 447, 448, 449, 346, 347,
	450, 451, 452, 108, 109, 110, 111, 112, 113, 114,
	453, 456, 454, 457, 458, 459, 464, 465, 460, 461,
	462, 463, 466, 467, 468, 469, 470, 93, 93, 86,
	-120, 88, 88, -221, -328, -58, 88, -219, 95, 88,
	272, -182, -372, 93, -308, -308, -308, 95, 95, -261,
	-373, 87, -254, -365, -330, 479, 479, -373, 25, -336,
	-335, -255, 86, 77, -101, 159, 475, -373, -373, -373,
	-373, -373, 88, 88, -373, -373, 87, -373, -147, -149,
	-373, 76, -130, -373, 87, -373, -373, 87, -373, 87,
	-222, -373, -254, 239, 19, 19, -222, -222, -167, -193,
	-120, -179, -207, 54, 76, 119, 93, 93, 93, 12,
	-181, 218, -199, -219, -145, 367, -194, -373, -219, 88,
	25, 88, 615, 134, 88, -182, -100, -372, 268, -261,
	93, 93, -90, -93, -11, 87, 148, -219, -160, -373,
	473, 73, 476, -120, -373, 76, 486, 577, -120, -120,
	-120, 87, -373, -373, -373, 76, 119, -227, -254, 88,
	-373, -372, -199, 88, -203, -11, 86, -3, 268, -284,
	-333, -285, -286, -5, -6, -309, -79, 475, -335, -313,
	-255, 93, 95, 88, 62, 474, 477, -340, -373, 87,
	-373, 87, -373, 87, -254, 239, -262, -146, -144, -254,
	529, -356, -355, 471, -366, -362, 116, 140, 102, -364,
	567, 523, 125, 126, -79, -120, 86, -373, -80, 283,
	573, -346, 62, -373, -120, -120, -120, -373, 87, 22,
	-276, -60, 540, -353, -354, 76, -357, 373, 539, 560,
	116, 93, 88, -219, 244, -337, 475, -373, 87, -373,
	87, -373, -144, 536, -289, -130, -354, 76, -353, 76,
	13, 12, -4, 614, 88, 285, 476, -120, -120, -59,
	26, -145, -352, 252, 247, 250, 32, -352, 95, -4,
	477, -373, -373, 540, 246, 31, 116, -130, -148, -147,
	-147,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1334, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1844, 1844, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1194, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1842, 1, 3,
	69, 73, 0, 0, 0, 56, 1203, 0, 76, 0,
	0, 831, 0, 829, 0, 1317, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1319, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1221, 153, 1335, 1332, 1333, 38, 39,
	40, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 0, 1311,
	0, 686, 928, 0, 748, 748, 0, 748, 748, 748,
	748, 0, 0, 0, 698, 0, 0, 0, 0, 745,
	0, 714, 715, 0, 745, 0, 721, 751, 0, 726,
	748, 748, 729, 1845, 0, 1845, 1845, 1302, 0, 742,
	740, 754, 755, 758, 762, 0, 767, 770, 1328, 1329,
	0, 785, 47, 1574, 777, 790, 791, 0, 823, 824,
	43, 1027, 0, 950, 955, 966, 981, 982, 983, 984,
	985, 987, 988, 0, 0, 0, 0, 993, 994, 0,
	0, 0, 0, 0, 1008, 0, 0, 0, 0, 0,
	1175, 0, 1136, 1136, 1044, 1136, 1138, 1138, 0, 0,
	0, 1841, 1615, 1623, 1624, 1646, 1736, 1785, 1619, 1620,
	1601, 1613, 1616, 1604, 1605, 1607, 1609, 1614, 1621, 1627,
	1606, 1626, 1625, 0, 1602, 1603, 1608, 1618, 1622, 1610,
	1611, 1612, 1617, 1628, 1091, 1184, 0, 0, 0, 0,
	0, 0, 273, 274, 1026, 1291, 1138, 1138, 1138, 1138,
	1138, 1715, 1716, 1717, 1718, -2, -2, 219, 220, 221,
	222, 223, 224, 225, 0, 215, 0, 278, 279, 275,
	276, 277, 1010, 1011, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 1844, 0, 800, 0,
	0, 0, 0, 0, 1203, 0, 1195, 1194, 61, 0,
	827, -2, 0, 0, 0, 0, 45, 0, 50, 887,
	75, 74, 1243, 0, 0, 0, 57, 1204, 65, 67,
	1205, 0, 832, 833, 0, 863, 867, 0, 828, 0,
	0, 1318, 1317, 1317, 100, 0, 1781, 1295, -2, -2,
	0, 0, 1330, 1331, 1304, -2, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1221, 0, 0,
	0, 0, 0, 827, 0, 1312, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1320, 1321, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1234, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1313, 1313, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	751, 748, 0, 722, 0, 723, 724, 727, 728, 730,
	1846, 1847, 1350, 1845, 1845, 734, 738, 1303, 760, 768,
	771, 788, 786, 787, 789, 781, 782, 783, 784, 0,
	802, 803, 808, 0, 0, 0, 0, 814, 815, 816,
	0, 0, 819, 820, 821, 0, 0, 0, 0, 0,
	948, 0, 0, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 968, 0,
	0, 0, 989, 990, 991, 992, 995, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 837, 0, 1176,
	0, 1042, 0, 1043, 1045, 1046, 0, 1047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 0, 847, 847, 0,
	0, 208, 209, 210, 211, 212, 0, 0, 0, 0,
	226, 227, 228, 229, 230, 280, 1184, 0, 1026, 0,
	0, 44, 792, 793, 0, 911, 1323, 0, 0, 843,
	0, 55, 64, 66, 1203, 59, 1203, 0, 849, 0,
	0, -2, -2, 850, 856, 857, 858, 859, 860, 52,
	1843, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	350, 1246, 0, 0, 1196, 1197, 1200, 0, 864, 1657,
	868, 0, 870, 871, 0, 830, 0, 98, 0, 927,
	0, 0, 0, 1781, 1301, 0, 102, 103, 0, 0,
	0, 361, 1306, 1307, 1308, -2, 384, 0, 361, 345,
	288, 289, 290, 338, 292, 338, 338, 338, 338, 350,
	350, 350, 350, 321, 322, 323, 324, 325, 0, 0,
	307, 338, 338, 338, 338, 328, 329, 330, 331, 332,
	333, 334, 335, 293, 294, 295, 296, 297, 298, 299,
	300, 301, 340, 340, 340, 342, 342, 0, 42, 0,
	365, 0, 1200, 0, 0, 1234, 1315, 1325, 0, 0,
	0, 1315, 120, 0, 0, 0, 550, 584, 502, 538,
	551, 0, 505, 506, -2, 0, 0, 487, 0, 489,
	0, 385, 0, -2, 0, 395, 0, 391, 395, 392,
	395, 383, 396, 528, 529, 530, 0, 532, 533, 614,
	897, 0, 0, 0, 0, 0, 620, 621, 622, 0,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 489, 0, 535, 0, 441, 442, 443, 0,
	0, 446, 447, 448, 449, 0, 0, 452, 453, 454,
	914, 915, 455, 456, 481, 482, 483, 457, 458, 459,
	460, 461, 462, 463, 475, 476, 477, 478, 479, 480,
	464, 465, 466, 467, 468, 469, 472, 0, 135, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 0, 0, 846, 929,
	1336, 1337, 749, 750, 0, 389, 390, 748, 748, 695,
	735, 0, 748, 699, 736, 700, 702, 701, 703, 716,
	717, 748, 706, 746, 747, 707, 708, 709, 710, 711,
	712, 713, 731, 718, 719, 720, 752, 0, 756, 757,
	732, 733, 0, 769, 773, 774, 775, 776, 0, 0,
	805, 94, 810, 811, 812, 813, 825, 818, 1028, 945,
	946, 947, 0, 949, 952, 0, 1012, 1014, 954, 956,
	1023, 1024, 1025, 0, 0, 0, 0, 0, 960, 964,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 986, 1152, 1153, 1154, 1003, 281, 282, 0,
	1004, 0, 861, 0, 0, 0, 1002, 0, 0, 0,
	0, 838, 839, 1182, 1179, 0, 0, 1137, 1139, 0,
	0, 0, 0, 0, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1155, 0, 0, 0, 0,
	0, 1175, 0, 1005, 1006, 1007, 0, 0, 0, 1324,
	0, 130, 131, 0, 0, 0, 0, 0, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 848,
	1185, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 795, 796, 798, 0,
	931, 0, 912, 0, 0, 801, 0, 842, 0, 845,
	58, 60, 854, 855, 0, 872, 851, 54, 49, 0,
	0, 889, 1244, 350, 1266, 0, 359, 359, 356, 1206,
	1207, 0, 1199, 1201, 1202, 77, 869, 865, 0, 943,
	0, 0, 926, 0, 875, 877, 878, 879, 909, 0,
	882, 0, 0, 0, 0, 0, 96, 928, 1296, 101,
	0, 0, 106, 107, 1297, 1298, 1299, 1300, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1208, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1200, 1225, 0, 0, 0, 1326, 1325, 1325, 1325, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1222, 1223, 1224, 0, 0, 679, 0, 0,
	427, 92, 1314, 684, 745, 705, 737, 745, 697, 704,
	725, 765, 809, 0, 0, 0, 0, 817, 0, 0,
	953, 1013, 1015, 957, 0, 961, 965, 0, 0, 0,
	0, 0, 0, 0, 1009, 1033, 1034, 0, 0, 1194,
	0, 1180, 0, 0, 1041, 1140, 1141, 0, 0, 0,
	0, 0, 1052, 1053, 1054, 1055, 1056, 0, 1058, 0,
	0, 0, 1062, 1063, 0, 0, 1064, 0, 0, 0,
	0, 0, 0, 0, 0, 1076, 1077, 1078, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	1029, 0, 0, 847, 0, 1142, 1143, 1144, 1145, 1146,
	0, 0, 0, 0, 1185, 794, 797, 799, 885, 932,
	933, 0, 0, 0, 0, 913, 1322, 840, 841, 844,
	-2, 0, 0, 1187, 0, 0, 872, 943, 873, 0,
	852, 51, 888, 0, 1248, 1247, 1260, 1273, 359, 359,
	353, 354, 360, 355, 357, 358, 1198, 0, 1203, 0,
	1284, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 919, 0, 0, 0, 0,
	910, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	362, 363, 144, 153, 438, 168, 411, 0, 0, 287,
	349, 312, 313, 314, 0, 336, 0, 0, 0, 432,
	116, 1212, 1211, 377, 377, 368, 0, 371, 0, 0,
	0, 1327, 339, 400, 0, 134, 0, 0, 0, 0,
	0, 140, 579, 0, 0, 586, 0, 0, 0, 500,
	0, 511, 512, 0, 613, -2, 675, 365, 0, 379,
	382, 898, 0, 0, 513, 0, 516, 517, 431, 491,
	522, 523, 536, 473, 474, 471, 0, 0, 1235, 1236,
	1241, 1239, 1240, 121, 557, 559, 558, 562, 0, 0,
	495, 0, 495, 555, 0, 427, 1208, 0, 683, 428,
	429, 748, 748, 804, 95, 0, 807, 0, 0, 0,
	0, 958, 962, 862, 0, 1173, 338, 338, 1160, 338,
	342, 1163, 338, 1165, 338, 1168, 338, 1171, 1172, 1173,
	0, 0, 0, 1177, 1040, 1183, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 132, 133, 1109,
	0, 0, 1111, 1113, 1114, 1068, 1110, 0, 0, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1030, 1031, 0, 1186, 0, 0, 0, 0, 934, 939,
	939, 939, 0, 0, 0, 1309, 1310, 1188, 1189, 943,
	1190, 874, 853, 890, 1266, 0, 1259, 0, -2, 1268,
	0, 0, 0, 1274, 351, 352, 866, 78, 944, 81,
	0, 1284, 1292, 0, 1275, 1286, 1288, 0, 0, 0,
	1280, 0, 943, 876, 905, 907, 0, 902, 917, 918,
	920, 0, 922, 0, 924, 925, 887, 881, 883, 0,
	0, 0, 98, 0, 943, 943, 97, 0, 930, 108,
	109, 110, 437, 172, 177, 0, 0, 0, 182, 0,
	184, 0, 0, 0, 189, 190, 377, 377, 412, 0,
	284, 286, 0, 0, 175, 350, 0, 350, 0, 343,
	0, 413, 433, 1209, 1210, 0, 0, 370, 374, 375,
	376, 0, 1316, 136, 0, 0, 0, 582, 0, 610,
	0, 0, 0, 0, 0, 0, 164, 492, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 0, 377, 0,
	0, 0, 377, 377, 377, 0, 667, 364, 0, 0,
	638, 635, 514, 0, 213, 214, 216, 0, 0, 521,
	887, 1226, 1227, 1228, 0, 1238, 1242, 124, 0, 0,
	0, 0, 569, 0, 494, 570, 680, 681, 682, 93,
	690, 696, 806, 826, 951, 959, 963, 0, 0, 1174,
	1158, 350, 1161, 1162, 1164, 1166, 1167, 1169, 1170, 0,
	999, 0, 1036, 0, 1038, 1203, 0, 1181, 0, 0,
	1050, 0, 0, 0, 1059, 1060, 1061, 0, 0, 1067,
	0, 1069, 0, 0, 0, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1032, 1092, 0, 1097, 0,
	0, 1103, 0, 0, 0, 0, 0, 911, -2, 62,
	1190, 1192, 0, 1253, 1251, 1251, 1261, 1262, 0, 0,
	1269, 0, 0, 0, 0, 82, 0, 0, 0, 1289,
	0, 0, 0, 0, 99, 1194, 899, 906, 0, 0,
	900, 0, 901, 921, 923, 880, -2, 884, 0, 943,
	943, 88, 89, 0, 178, 0, 180, 206, 207, 0,
	183, 185, 186, 187, 193, 194, 195, 188, 0, 0,
	283, 285, 0, 0, 326, 337, 327, 0, 0, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 887, 137, 138,
	139, 574, 0, 584, 0, 0, 0, 577, 0, 503,
	0, 0, 0, 377, 377, 377, 0, 0, 0, 0,
	652, 0, 0, 615, 0, 623, 0, 0, 0, 217,
	218, 0, 1237, 556, 0, 122, 123, 0, 0, 561,
	496, 497, 1147, 997, 1159, 998, 0, 0, 0, 1178,
	0, 0, 0, 0, 1057, 1065, 0, 1112, 0, 1072,
	0, 0, 0, 604, 605, 0, 1108, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 931, 1192, 80,
	0, 0, 1256, 0, 1249, 1252, 1250, 1263, 0, 0,
	1270, 0, 1272, 0, 1293, 1294, 1287, 0, 1279, 1282,
	1278, 1281, 1203, 903, 0, 908, 0, 1194, 87, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 0,
	0, 341, 344, 0, 0, 0, 575, 0, 587, 578,
	0, 665, 0, 669, 0, 0, 0, 672, 673, 674,
	651, 0, 655, 405, 639, 636, 637, 515, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 1035, 1037, 1039,
	1048, 1049, 1156, 1157, 1066, 1070, 0, 1073, 0, 0,
	1074, 0, 606, 1093, 0, 1098, 1099, 0, 1104, 0,
	0, 936, 893, 894, 941, 942, 0, 0, 886, 79,
	1193, 1191, 1245, 0, 1254, 1255, 1264, 1265, 1271, 0,
	1277, 0, 85, 0, 0, 0, 1203, 179, 0, 198,
	0, 583, 0, 586, 576, 663, 664, 0, 676, 668,
	670, 671, 653, -2, 1229, 0, 0, 0, 563, 996,
	0, 0, 0, 1109, 1075, 0, 602, 603, 0, 0,
	0, 0, 935, 937, 938, 1257, 1258, 1285, 1283, 904,
	911, 0, 86, 418, 411, 1229, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 553, 1231, 127, 128,
	484, 485, 486, 121, 1148, 0, 1151, 0, 1094, 0,
	1100, 0, 1105, 0, 895, 896, 588, 0, 590, 0,
	-2, 406, 419, 0, 173, 199, 200, 0, 0, 203,
	204, 205, 196, 197, 117, 0, 0, 677, 0, 1232,
	1233, 124, 1149, 1071, 0, 0, 0, 589, 0, 0,
	361, 0, 599, 407, 408, 0, 414, 415, 416, 417,
	201, 202, 611, 0, 0, 560, 0, 1095, 0, 1101,
	0, 1106, 591, 592, 600, 0, 409, 0, 410, 0,
	0, 0, 580, 0, 611, 1230, 0, 0, 0, 0,
	601, 597, 420, 422, 423, 0, 0, 421, 612, 581,
	1150, 1096, 1102, 0, 424, 425, 426, 593, 594, 595,
	596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 616,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:534
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:539
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:544
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:580
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:599
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:609
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:625
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:634
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:644
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:650
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:803
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:829
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:853
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:857
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:901
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:911
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:924
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:946
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:960
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:964
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:978
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:982
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:988
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:992
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1024
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1060
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1066
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1086
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1092
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1102
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1108
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1137
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1144
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1151
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1162
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1173
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1183
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1187
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1205
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1209
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1229
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1235
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1239
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1245
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1249
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1255
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1270
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1303
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1312
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1424
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1428
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1434
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1438
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1452
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1458
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1507
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1511
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1522
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1533
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1769
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1773
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1779
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1783
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1787
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1793
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1797
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1804
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1808
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1812
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1816
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1940
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2053
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2058
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2062
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2080
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2088
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2092
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2176
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2185
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2191
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2201
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2205
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2210
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2214
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2218
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2222
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2226
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2230
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2246
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2250
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2254
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2258
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2262
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2301
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2330
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2340
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2344
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2350
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2354
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2360
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2364
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2370
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2376
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2380
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2384
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2388
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2392
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2401
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2407
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2413
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2419
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2423
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2427
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2432
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2436
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2442
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2448
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2454
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2458
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2462
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2466
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2470
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2489
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2511
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2517
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2531
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2541
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2545
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2549
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2553
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2557
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2561
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2565
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2569
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2573
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2577
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2725
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2743
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2747
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2756
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2760
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2764
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2772
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2778
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2792
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2796
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2800
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2804
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2808
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2812
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2816
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2820
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2824
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2838
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2842
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2846
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2862
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2916
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2968
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2975
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2982
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2989
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2995
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3005
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3045
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3062
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3094
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3156
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3165
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3173
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3182
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3189
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3201
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3210
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3225
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3239
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3243
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3249
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3255
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3261
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3271
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3275
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3281
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3287
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3293
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3299
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3309
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3313
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3317
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3323
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3329
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3335
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3339
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3343
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3349
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3353
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3358
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3362
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3367
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3371
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3377
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3381
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3385
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3389
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3393
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3397
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3401
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3405
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3409
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3413
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3417
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3421
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3425
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3429
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3466
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3481
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3485
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3491
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3496
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3500
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3505
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3510
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3515
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3520
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3525
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3531
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3537
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3542
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3548
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3554
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3564
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3569
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3573
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3578
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3583
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3588
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3593
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3599
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3605
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3612
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3619
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3626
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3634
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3644
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3650
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3656
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3662
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3668
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3674
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3686
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3708
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3712
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3979
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3995
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3999
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4013
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4017
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4027
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4033
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4119
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4123
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4127
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4131
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4135
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4139
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4216
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4220
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4226
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4232
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4236
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4240
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4244
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4393
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4397
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4415
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4419
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4423
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4429
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4433
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4454
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4460
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4464
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4469
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4473
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4478
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4494
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4530
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4540
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4544
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4548
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4552
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4557
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4577
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4581
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4587
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4593
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4607
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4611
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4615
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4619
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4625
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4629
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4635
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4639
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4648
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4654
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4658
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4664
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4668
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4674
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4678
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4682
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4692
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4696
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4709
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4713
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4717
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4721
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4727
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4729
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4739
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4741
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4744
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4749
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4753
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4770
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4774
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4778
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4784
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4790
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4794
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4798
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4802
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4808
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4812
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4822
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4836
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4851
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4857
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4867
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4871
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4875
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4879
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4884
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4888
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4892
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4896
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5010
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5172
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5176
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5180
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5196
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5200
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5207
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5211
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5215
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5219
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5225
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5229
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5233
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5237
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5241
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5245
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5249
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5255
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5259
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5263
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5270
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5276
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5280
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5573
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5625
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5634
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5640
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5644
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5662
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5666
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5670
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5674
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5678
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5682
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5686
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5690
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5694
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5698
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5702
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5708
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5712
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5716
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5720
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5724
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5728
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5732
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5736
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5740
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5795
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5799
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5803
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5807
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5811
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5825
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5835
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5839
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5845
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5849
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5853
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5857
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5861
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5867
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5871
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5875
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5879
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5883
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5887
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5891
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5895
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5899
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5903
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = string("")
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5937
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5941
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5947
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5962
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5966
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5970
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5999
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6017
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6023
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6029
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6033
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6039
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6044
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6048
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6052
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6061
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6067
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6071
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6075
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6084
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6088
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6092
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6096
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6103
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6107
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6111
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6115
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6121
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6125
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6129
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6133
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6138
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6146
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6155
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6178
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6183
		{
			yyVAL.str = "cascaded"
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6191
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6200
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6206
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6212
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6218
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6227
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6231
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6236
		{
			yyVAL.str = ""
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6240
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6246
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6250
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6256
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6260
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6264
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6269
		{
			yyVAL.str = ""
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6273
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6277
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6282
		{
			yyVAL.str = ""
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6286
		{
			yyVAL.str = " header"
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6291
		{
			yyVAL.str = ""
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6295
		{
			yyVAL.str = " manifest on"
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6299
		{
			yyVAL.str = " manifest off"
		}
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6304
		{
			yyVAL.str = ""
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6308
		{
			yyVAL.str = " overwrite on"
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6312
		{
			yyVAL.str = " overwrite off"
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6318
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6323
		{
			yyVAL.str = ""
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6327
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6333
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6337
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6343
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6352
		{
			yyVAL.str = ""
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6356
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6362
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6366
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6372
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6376
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6385
		{
			yyVAL.str = ""
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.str = " optionally"
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6402
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6406
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6410
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6414
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6418
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6424
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6428
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6432
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6436
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6445
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6451
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6455
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6461
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6465
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6471
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6486
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6490
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6496
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6502
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6506
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6512
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6516
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6520
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6524
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6528
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6536
		{
			yyVAL.str = "charset"
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6563
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6565
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6568
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6570
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6573
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6580
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6583
		{
			yyVAL.empty = struct{}{}
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6585
		{
			yyVAL.empty = struct{}{}
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6587
		{
			yyVAL.empty = struct{}{}
		}
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6591
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6600
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6607
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6611
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6617
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6628
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6634
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6638
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6644
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6648
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6655
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7184
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7193
		{
			decNesting(yylex)
		}
	case 1844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7198
		{
			skipToEnd(yylex)
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7203
		{
			skipToEnd(yylex)
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7207
		{
			skipToEnd(yylex)
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7211
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
