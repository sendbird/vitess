// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const UNDERSCORE_UTF8MB3 = 57537
const INTERVAL = 57538
const JSON_EXTRACT_OP = 57539
const JSON_UNQUOTE_EXTRACT_OP = 57540
const CREATE = 57541
const ALTER = 57542
const DROP = 57543
const RENAME = 57544
const ANALYZE = 57545
const ADD = 57546
const FLUSH = 57547
const CHANGE = 57548
const MODIFY = 57549
const DEALLOCATE = 57550
const REVERT = 57551
const SCHEMA = 57552
const TABLE = 57553
const INDEX = 57554
const VIEW = 57555
const TO = 57556
const IGNORE = 57557
const IF = 57558
const PRIMARY = 57559
const COLUMN = 57560
const SPATIAL = 57561
const FULLTEXT = 57562
const KEY_BLOCK_SIZE = 57563
const CHECK = 57564
const INDEXES = 57565
const ACTION = 57566
const CASCADE = 57567
const CONSTRAINT = 57568
const FOREIGN = 57569
const NO = 57570
const REFERENCES = 57571
const RESTRICT = 57572
const SHOW = 57573
const DESCRIBE = 57574
const EXPLAIN = 57575
const DATE = 57576
const ESCAPE = 57577
const REPAIR = 57578
const OPTIMIZE = 57579
const TRUNCATE = 57580
const COALESCE = 57581
const EXCHANGE = 57582
const REBUILD = 57583
const PARTITIONING = 57584
const REMOVE = 57585
const PREPARE = 57586
const EXECUTE = 57587
const MAXVALUE = 57588
const PARTITION = 57589
const REORGANIZE = 57590
const LESS = 57591
const THAN = 57592
const PROCEDURE = 57593
const TRIGGER = 57594
const VINDEX = 57595
const VINDEXES = 57596
const DIRECTORY = 57597
const NAME = 57598
const UPGRADE = 57599
const STATUS = 57600
const VARIABLES = 57601
const WARNINGS = 57602
const CASCADED = 57603
const DEFINER = 57604
const OPTION = 57605
const SQL = 57606
const UNDEFINED = 57607
const SEQUENCE = 57608
const MERGE = 57609
const TEMPORARY = 57610
const TEMPTABLE = 57611
const INVOKER = 57612
const SECURITY = 57613
const FIRST = 57614
const AFTER = 57615
const LAST = 57616
const VITESS_MIGRATION = 57617
const CANCEL = 57618
const RETRY = 57619
const COMPLETE = 57620
const CLEANUP = 57621
const THROTTLE = 57622
const UNTHROTTLE = 57623
const EXPIRE = 57624
const RATIO = 57625
const BEGIN = 57626
const START = 57627
const TRANSACTION = 57628
const COMMIT = 57629
const ROLLBACK = 57630
const SAVEPOINT = 57631
const RELEASE = 57632
const WORK = 57633
const BIT = 57634
const TINYINT = 57635
const SMALLINT = 57636
const MEDIUMINT = 57637
const INT = 57638
const INTEGER = 57639
const BIGINT = 57640
const INTNUM = 57641
const REAL = 57642
const DOUBLE = 57643
const FLOAT_TYPE = 57644
const DECIMAL_TYPE = 57645
const NUMERIC = 57646
const TIME = 57647
const TIMESTAMP = 57648
const DATETIME = 57649
const YEAR = 57650
const CHAR = 57651
const VARCHAR = 57652
const BOOL = 57653
const CHARACTER = 57654
const VARBINARY = 57655
const NCHAR = 57656
const TEXT = 57657
const TINYTEXT = 57658
const MEDIUMTEXT = 57659
const LONGTEXT = 57660
const BLOB = 57661
const TINYBLOB = 57662
const MEDIUMBLOB = 57663
const LONGBLOB = 57664
const JSON = 57665
const JSON_SCHEMA_VALID = 57666
const JSON_SCHEMA_VALIDATION_REPORT = 57667
const ENUM = 57668
const GEOMETRY = 57669
const POINT = 57670
const LINESTRING = 57671
const POLYGON = 57672
const GEOMETRYCOLLECTION = 57673
const MULTIPOINT = 57674
const MULTILINESTRING = 57675
const MULTIPOLYGON = 57676
const ASCII = 57677
const UNICODE = 57678
const NULLX = 57679
const AUTO_INCREMENT = 57680
const APPROXNUM = 57681
const SIGNED = 57682
const UNSIGNED = 57683
const ZEROFILL = 57684
const CODE = 57685
const COLLATION = 57686
const COLUMNS = 57687
const DATABASES = 57688
const ENGINES = 57689
const EVENT = 57690
const EXTENDED = 57691
const FIELDS = 57692
const FULL = 57693
const FUNCTION = 57694
const GTID_EXECUTED = 57695
const KEYSPACES = 57696
const OPEN = 57697
const PLUGINS = 57698
const PRIVILEGES = 57699
const PROCESSLIST = 57700
const SCHEMAS = 57701
const TABLES = 57702
const TRIGGERS = 57703
const USER = 57704
const VGTID_EXECUTED = 57705
const VITESS_KEYSPACES = 57706
const VITESS_METADATA = 57707
const VITESS_MIGRATIONS = 57708
const VITESS_REPLICATION_STATUS = 57709
const VITESS_SHARDS = 57710
const VITESS_TABLETS = 57711
const VSCHEMA = 57712
const VITESS_THROTTLED_APPS = 57713
const NAMES = 57714
const GLOBAL = 57715
const SESSION = 57716
const ISOLATION = 57717
const LEVEL = 57718
const READ = 57719
const WRITE = 57720
const ONLY = 57721
const REPEATABLE = 57722
const COMMITTED = 57723
const UNCOMMITTED = 57724
const SERIALIZABLE = 57725
const CURRENT_TIMESTAMP = 57726
const DATABASE = 57727
const CURRENT_DATE = 57728
const NOW = 57729
const CURRENT_TIME = 57730
const LOCALTIME = 57731
const LOCALTIMESTAMP = 57732
const CURRENT_USER = 57733
const UTC_DATE = 57734
const UTC_TIME = 57735
const UTC_TIMESTAMP = 57736
const DAY = 57737
const DAY_HOUR = 57738
const DAY_MICROSECOND = 57739
const DAY_MINUTE = 57740
const DAY_SECOND = 57741
const HOUR = 57742
const HOUR_MICROSECOND = 57743
const HOUR_MINUTE = 57744
const HOUR_SECOND = 57745
const MICROSECOND = 57746
const MINUTE = 57747
const MINUTE_MICROSECOND = 57748
const MINUTE_SECOND = 57749
const MONTH = 57750
const QUARTER = 57751
const SECOND = 57752
const SECOND_MICROSECOND = 57753
const YEAR_MONTH = 57754
const WEEK = 57755
const REPLACE = 57756
const CONVERT = 57757
const CAST = 57758
const SUBSTR = 57759
const SUBSTRING = 57760
const GROUP_CONCAT = 57761
const SEPARATOR = 57762
const TIMESTAMPADD = 57763
const TIMESTAMPDIFF = 57764
const WEIGHT_STRING = 57765
const JSON_ARRAY = 57766
const JSON_OBJECT = 57767
const JSON_QUOTE = 57768
const JSON_DEPTH = 57769
const JSON_TYPE = 57770
const JSON_LENGTH = 57771
const JSON_VALID = 57772
const JSON_ARRAY_APPEND = 57773
const JSON_ARRAY_INSERT = 57774
const JSON_INSERT = 57775
const JSON_MERGE = 57776
const JSON_MERGE_PATCH = 57777
const JSON_MERGE_PRESERVE = 57778
const JSON_REMOVE = 57779
const JSON_REPLACE = 57780
const JSON_SET = 57781
const JSON_UNQUOTE = 57782
const MATCH = 57783
const AGAINST = 57784
const BOOLEAN = 57785
const LANGUAGE = 57786
const WITH = 57787
const QUERY = 57788
const EXPANSION = 57789
const WITHOUT = 57790
const VALIDATION = 57791
const UNUSED = 57792
const ARRAY = 57793
const CUME_DIST = 57794
const DESCRIPTION = 57795
const DENSE_RANK = 57796
const EMPTY = 57797
const EXCEPT = 57798
const FIRST_VALUE = 57799
const GROUPING = 57800
const GROUPS = 57801
const JSON_TABLE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LATERAL = 57805
const LEAD = 57806
const NTH_VALUE = 57807
const NTILE = 57808
const OF = 57809
const OVER = 57810
const PERCENT_RANK = 57811
const RANK = 57812
const RECURSIVE = 57813
const ROW_NUMBER = 57814
const SYSTEM = 57815
const WINDOW = 57816
const ACTIVE = 57817
const ADMIN = 57818
const AUTOEXTEND_SIZE = 57819
const BUCKETS = 57820
const CLONE = 57821
const COLUMN_FORMAT = 57822
const COMPONENT = 57823
const DEFINITION = 57824
const ENFORCED = 57825
const ENGINE_ATTRIBUTE = 57826
const EXCLUDE = 57827
const FOLLOWING = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const OPTIONAL = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PARTIAL = 57850
const PATH = 57851
const PERSIST = 57852
const PERSIST_ONLY = 57853
const PRECEDING = 57854
const PRIVILEGE_CHECKS_USER = 57855
const PROCESS = 57856
const RANDOM = 57857
const REFERENCE = 57858
const REQUIRE_ROW_FORMAT = 57859
const RESOURCE = 57860
const RESPECT = 57861
const RESTART = 57862
const RETAIN = 57863
const REUSE = 57864
const ROLE = 57865
const SECONDARY = 57866
const SECONDARY_ENGINE = 57867
const SECONDARY_ENGINE_ATTRIBUTE = 57868
const SECONDARY_LOAD = 57869
const SECONDARY_UNLOAD = 57870
const SIMPLE = 57871
const SKIP = 57872
const SRID = 57873
const THREAD_PRIORITY = 57874
const TIES = 57875
const UNBOUNDED = 57876
const VCPU = 57877
const VISIBLE = 57878
const RETURNING = 57879
const FORMAT = 57880
const TREE = 57881
const VITESS = 57882
const TRADITIONAL = 57883
const LOCAL = 57884
const LOW_PRIORITY = 57885
const NO_WRITE_TO_BINLOG = 57886
const LOGS = 57887
const ERROR = 57888
const GENERAL = 57889
const HOSTS = 57890
const OPTIMIZER_COSTS = 57891
const USER_RESOURCES = 57892
const SLOW = 57893
const CHANNEL = 57894
const RELAY = 57895
const EXPORT = 57896
const AVG_ROW_LENGTH = 57897
const CONNECTION = 57898
const CHECKSUM = 57899
const DELAY_KEY_WRITE = 57900
const ENCRYPTION = 57901
const ENGINE = 57902
const INSERT_METHOD = 57903
const MAX_ROWS = 57904
const MIN_ROWS = 57905
const PACK_KEYS = 57906
const PASSWORD = 57907
const FIXED = 57908
const DYNAMIC = 57909
const COMPRESSED = 57910
const REDUNDANT = 57911
const COMPACT = 57912
const ROW_FORMAT = 57913
const STATS_AUTO_RECALC = 57914
const STATS_PERSISTENT = 57915
const STATS_SAMPLE_PAGES = 57916
const STORAGE = 57917
const MEMORY = 57918
const DISK = 57919
const PARTITIONS = 57920
const LINEAR = 57921
const RANGE = 57922
const LIST = 57923
const SUBPARTITION = 57924
const SUBPARTITIONS = 57925
const HASH = 57926

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	602, 145,
	-2, 153,
	-1, 48,
	128, 153,
	168, 153,
	329, 153,
	-2, 492,
	-1, 55,
	35, 728,
	229, 728,
	240, 728,
	275, 742,
	276, 742,
	-2, 730,
	-1, 60,
	231, 753,
	-2, 751,
	-1, 114,
	228, 1268,
	-2, 119,
	-1, 116,
	1, 146,
	602, 146,
	-2, 153,
	-1, 127,
	129, 378,
	234, 378,
	-2, 481,
	-1, 146,
	128, 153,
	168, 153,
	329, 153,
	-2, 501,
	-1, 686,
	213, 1289,
	-2, 1285,
	-1, 687,
	213, 1290,
	-2, 1286,
	-1, 762,
	59, 821,
	-2, 836,
	-1, 799,
	144, 1690,
	-2, 112,
	-1, 800,
	144, 1534,
	-2, 113,
	-1, 806,
	144, 1616,
	-2, 1262,
	-1, 951,
	144, 1462,
	-2, 1259,
	-1, 992,
	239, 41,
	244, 41,
	-2, 389,
	-1, 1075,
	1, 543,
	602, 543,
	-2, 153,
	-1, 1308,
	59, 822,
	-2, 841,
	-1, 1309,
	59, 823,
	-2, 842,
	-1, 1362,
	128, 153,
	168, 153,
	329, 153,
	-2, 428,
	-1, 1441,
	129, 378,
	234, 378,
	-2, 481,
	-1, 1450,
	239, 42,
	244, 42,
	-2, 390,
	-1, 1748,
	213, 1294,
	-2, 1288,
	-1, 1830,
	128, 153,
	168, 153,
	329, 153,
	-2, 429,
	-1, 1837,
	25, 174,
	-2, 176,
	-1, 2079,
	86, 39,
	-2, 877,
	-1, 2130,
	77, 94,
	86, 94,
	-2, 897,
	-1, 2197,
	577, 655,
	-2, 629,
	-1, 2332,
	49, 1230,
	-2, 1224,
	-1, 2549,
	86, 39,
	-2, 878,
	-1, 2587,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 870,
	-1, 2861,
	577, 655,
	-2, 643,
	-1, 2919,
	22, 1618,
	32, 1618,
	169, 1618,
	251, 1618,
	309, 1618,
	310, 1618,
	311, 1618,
	312, 1618,
	313, 1618,
	314, 1618,
	315, 1618,
	317, 1618,
	318, 1618,
	319, 1618,
	320, 1618,
	321, 1618,
	322, 1618,
	323, 1618,
	324, 1618,
	325, 1618,
	326, 1618,
	327, 1618,
	328, 1618,
	330, 1618,
	332, 1618,
	333, 1618,
	334, 1618,
	335, 1618,
	336, 1618,
	337, 1618,
	338, 1618,
	339, 1618,
	340, 1618,
	343, 1618,
	344, 1618,
	345, 1618,
	346, 1618,
	347, 1618,
	348, 1618,
	349, 1618,
	350, 1618,
	351, 1618,
	460, 1618,
	-2, 587,
}

const yyPrivate = 57344

const yyLast = 42827

var yyAct = [...]int{
	686, 695, 2686, 2687, 2688, 2291, 2973, 2981, 2842, 2949,
	1827, 2950, 1365, 2917, 2662, 2478, 688, 2901, 1782, 2384,
	2391, 1762, 2033, 2441, 1139, 3, 2795, 2432, 2343, 2446,
	2443, 2649, 1764, 2442, 2440, 2445, 2444, 755, 777, 2818,
	611, 680, 2701, 1897, 679, 37, 2346, 1287, 96, 2399,
	2067, 186, 2460, 2461, 186, 607, 571, 186, 2347, 2344,
	1323, 1024, 587, 2558, 186, 2706, 2552, 2102, 2255, 689,
	677, 2289, 186, 2578, 678, 604, 633, 2463, 1801, 2333,
	2290, 2341, 1786, 2544, 2094, 2162, 1860, 186, 2125, 605,
	2238, 2483, 2194, 1865, 1885, 2163, 1816, 2114, 778, 954,
	1806, 804, 155, 2164, 603, 2086, 1928, 2069, 2230, 587,
	1310, 1717, 587, 186, 587, 599, 36, 1805, 1655, 1419,
	1613, 1466, 759, 1906, 763, 757, 1742, 141, 38, 1884,
	2156, 1000, 1718, 801, 1793, 982, 95, 1448, 1942, 1867,
	987, 1354, 780, 2132, 1808, 1665, 1116, 1332, 1290, 1677,
	1632, 1158, 1560, 1455, 91, 961, 616, 1544, 990, 958,
	993, 1856, 1882, 962, 988, 989, 1353, 769, 1351, 1132,
	1787, 119, 1714, 1564, 1337, 117, 118, 1569, 1414, 1745,
	124, 125, 1137, 1071, 791, 85, 767, 97, 1229, 76,
	594, 1225, 98, 2851, 2187, 89, 764, 1440, 2974, 1899,
	1900, 1901, 2451, 2650, 2429, 1026, 159, 1899, 765, 2185,
	1755, 2214, 2213, 1940, 766, 77, 2642, 2246, 1041, 1042,
	1043, 102, 1046, 1047, 1048, 1049, 543, 1529, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 771, 126, 90, 785, 1029,
	790, 8, 955, 7, 120, 6, 595, 2247, 2874, 2449,
	1004, 2691, 104, 105, 756, 108, 2875, 758, 114, 574,
	1087, 183, 2691, 1159, 538, 1620, 2606, 798, 1619, 805,
	1618, 2455, 1617, 779, 1759, 1760, 1038, 1003, 978, 1616,
	1615, 979, 977, 976, 751, 752, 753, 754, 1159, 1602,
	762, 2451, 772, 188, 189, 190, 1030, 1032, 1033, 980,
	597, 2938, 598, 2065, 2448, 182, 2329, 1317, 1607, 2532,
	2096, 971, 2953, 120, 2990, 966, 2190, 2948, 793, 794,
	1044, 2964, 2208, 1625, 1930, 2791, 2790, 1028, 1027, 121,
	182, 143, 87, 2655, 2989, 2690, 2656, 2911, 2977, 2875,
	2870, 1438, 164, 2962, 2663, 2902, 2690, 1925, 2449, 188,
	189, 190, 78, 2910, 121, 80, 143, 2254, 78, 2922,
	2869, 2516, 1429, 1984, 2381, 2382, 1355, 164, 1356, 1169,
	2455, 2222, 2066, 153, 78, 2221, 78, 2452, 142, 2141,
	2380, 120, 2140, 1191, 2245, 2142, 1822, 1823, 1981, 574,
	1821, 1111, 1112, 1106, 1169, 1135, 749, 748, 153, 161,
	2105, 162, 2188, 142, 2800, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1200, 1199, 1201, 1202, 2153, 1442, 1443, 152,
	151, 181, 2843, 2719, 161, 2106, 162, 1982, 1074, 87,
	560, 1094, 2555, 1107, 2281, 87, 1095, 574, 2927, 2507,
	1761, 2505, 1442, 1443, 152, 151, 181, 1123, 585, 1125,
	1094, 87, 2925, 87, 1100, 1095, 1840, 1839, 1606, 589,
	575, 2931, 2932, 1093, 2480, 1092, 2401, 2402, 1165, 2954,
	583, 1157, 2484, 2926, 2231, 574, 2452, 559, 1954, 1951,
	1953, 1952, 1955, 1956, 1294, 2195, 1113, 1122, 1124, 557,
	2955, 1519, 1907, 1165, 2473, 1070, 1114, 975, 2217, 1080,
	1081, 1134, 2474, 1948, 1550, 574, 1960, 1943, 1961, 2976,
	1962, 1545, 1109, 1110, 1129, 147, 1444, 154, 1108, 1441,
	1115, 148, 149, 1076, 1608, 1609, 1610, 165, 186, 554,
	186, 1083, 2233, 186, 2644, 1520, 171, 1521, 569, 1101,
	147, 1444, 154, 2643, 1441, 1045, 148, 149, 1963, 2481,
	1876, 1127, 165, 565, 1051, 973, 1050, 1947, 1949, 2482,
	1945, 171, 587, 587, 587, 2640, 2775, 970, 983, 1910,
	972, 2400, 984, 1013, 1870, 975, 1069, 1011, 87, 1802,
	587, 587, 2939, 2403, 1120, 984, 1022, 1297, 1121, 1021,
	575, 2282, 1020, 1433, 1019, 1018, 1017, 1016, 1126, 1946,
	1015, 1023, 1010, 2403, 959, 1982, 959, 1151, 1104, 996,
	957, 2991, 2960, 1203, 1203, 959, 1454, 995, 2237, 2985,
	1002, 1119, 544, 1561, 546, 561, 37, 577, 1883, 576,
	550, 792, 548, 552, 562, 553, 2234, 547, 575, 558,
	1073, 1934, 549, 563, 564, 567, 581, 580, 568, 566,
	1557, 556, 578, 156, 2850, 2186, 1164, 1161, 1162, 1163,
	1168, 1170, 1167, 1145, 1166, 975, 995, 967, 1034, 2422,
	1031, 1160, 974, 2216, 969, 968, 575, 2639, 156, 2189,
	1427, 1164, 1161, 1162, 1163, 1168, 1170, 1167, 1929, 1166,
	1002, 2219, 1206, 1207, 1208, 1209, 1160, 2250, 1996, 1788,
	1789, 1130, 1214, 1426, 1217, 1551, 575, 981, 1425, 1552,
	1553, 1869, 2801, 2556, 1014, 2839, 1040, 2205, 1012, 1001,
	1558, 1453, 1423, 973, 1005, 995, 1280, 2453, 2454, 1007,
	150, 542, 1285, 1008, 1006, 1072, 2070, 2072, 537, 186,
	2457, 1927, 2593, 587, 587, 1141, 1142, 2868, 2229, 2574,
	974, 2228, 1204, 1205, 1009, 150, 2856, 2137, 2101, 186,
	144, 2240, 2057, 145, 1754, 1210, 2239, 1128, 1341, 1531,
	1530, 1532, 1533, 1534, 2240, 81, 1549, 1266, 587, 2239,
	1085, 1828, 186, 2689, 1298, 144, 1301, 587, 145, 1001,
	1203, 1300, 157, 587, 2689, 1304, 77, 757, 1303, 169,
	116, 759, 1103, 1983, 1286, 1090, 86, 1096, 1097, 1098,
	1099, 801, 86, 1105, 1227, 1231, 1228, 157, 2604, 2605,
	579, 1002, 1202, 2379, 169, 1002, 2453, 2454, 86, 2983,
	86, 1136, 2984, 1154, 2982, 1152, 1117, 1153, 572, 2457,
	974, 177, 774, 1089, 1570, 1133, 2930, 2864, 1302, 1025,
	1082, 2635, 95, 573, 1079, 2568, 1091, 1002, 111, 1175,
	1272, 1273, 1274, 1275, 1276, 1944, 177, 1286, 1678, 1554,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 1357, 1155, 1291, 2274, 2178, 176, 178, 179, 180,
	2929, 1173, 1174, 2256, 2071, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1174, 1678, 98, 2010,
	2715, 176, 178, 179, 180, 2611, 1546, 2610, 1547, 1924,
	1001, 1548, 1039, 1914, 1001, 112, 1637, 1926, 1288, 1005,
	995, 1463, 1299, 1462, 1007, 1873, 756, 1175, 1008, 1006,
	1638, 1639, 1636, 1452, 186, 1322, 758, 1922, 1415, 1197,
	1198, 1200, 1199, 1201, 1202, 1919, 1001, 805, 1424, 1013,
	1919, 1011, 995, 998, 999, 1319, 959, 2992, 1347, 1348,
	992, 996, 2880, 1305, 1874, 2258, 1118, 2956, 2594, 2832,
	1088, 587, 1872, 1450, 1571, 1075, 1342, 1172, 2987, 1173,
	1174, 1459, 1923, 87, 1539, 1461, 2276, 1921, 1464, 1465,
	587, 587, 2477, 587, 2783, 587, 587, 1635, 587, 587,
	587, 587, 587, 587, 2881, 2669, 1875, 2670, 2782, 2811,
	1317, 2833, 1495, 1175, 587, 2773, 1871, 1352, 186, 1500,
	2957, 1430, 1431, 1432, 1460, 1627, 1629, 1630, 1537, 2680,
	1175, 2268, 2267, 2266, 2260, 186, 2264, 2679, 2259, 2618,
	2257, 2993, 2617, 1002, 1175, 2262, 1628, 1538, 587, 1317,
	186, 1494, 1175, 1496, 2261, 1172, 1682, 1173, 1174, 2607,
	1683, 1559, 2513, 2430, 587, 1526, 186, 1514, 2418, 2160,
	1446, 2263, 2265, 1195, 1196, 1197, 1198, 1200, 1199, 1201,
	1202, 2159, 186, 1988, 1989, 1990, 1504, 1505, 1879, 186,
	1540, 1536, 1510, 1511, 1439, 2511, 1317, 1524, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 587, 587, 587,
	1456, 1456, 1468, 1497, 1469, 1523, 1471, 1473, 1458, 1522,
	1477, 1479, 1481, 1483, 1485, 1512, 796, 1317, 1525, 1422,
	700, 701, 702, 1457, 2042, 1317, 1175, 1506, 186, 1503,
	1502, 1172, 1001, 1173, 1174, 1501, 1437, 1435, 995, 998,
	999, 1449, 959, 1175, 1475, 2859, 992, 996, 1172, 2858,
	1173, 1174, 2836, 1436, 188, 189, 190, 1566, 2601, 1175,
	1330, 2835, 1172, 1428, 1173, 1174, 2834, 991, 1175, 2778,
	1172, 1326, 1173, 1174, 587, 1498, 1662, 1662, 2763, 2762,
	1659, 1663, 1794, 1795, 2714, 2712, 2676, 1668, 587, 2615,
	2600, 1660, 1660, 188, 189, 190, 2485, 2144, 1633, 2001,
	2421, 1175, 2420, 587, 587, 1562, 2169, 2157, 2000, 1572,
	1573, 2006, 1175, 687, 188, 189, 190, 978, 1895, 1282,
	1327, 977, 976, 1577, 1938, 1329, 188, 189, 190, 1937,
	1584, 1585, 1586, 1785, 1640, 1679, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1641,
	1576, 2958, 120, 1631, 1172, 1767, 1173, 1174, 1603, 1715,
	1567, 1746, 1175, 186, 187, 1535, 1527, 187, 587, 1600,
	187, 1172, 1517, 1173, 1174, 588, 1513, 187, 1509, 1597,
	1598, 1599, 1508, 2005, 1175, 187, 1507, 1172, 1328, 1173,
	1174, 1131, 186, 1144, 2034, 587, 1172, 92, 1173, 1174,
	187, 94, 188, 189, 190, 186, 1893, 1317, 93, 587,
	1772, 1715, 1773, 1634, 186, 2808, 186, 2807, 186, 186,
	587, 2767, 588, 587, 2766, 588, 187, 588, 2661, 1172,
	2196, 1173, 1174, 2174, 587, 1836, 1746, 100, 1748, 2945,
	1172, 1574, 1173, 1174, 801, 2847, 1837, 801, 1578, 1386,
	1580, 1581, 1582, 1583, 95, 1191, 2567, 1587, 1187, 1317,
	1188, 1664, 1317, 2092, 2975, 1750, 1751, 1317, 1670, 1671,
	2569, 1601, 1171, 95, 1189, 1190, 1186, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1200, 1199, 1201, 1202, 1175, 587,
	1172, 1778, 1173, 1174, 2863, 1175, 1886, 1887, 1888, 2944,
	1317, 1890, 1892, 1894, 1175, 1997, 1804, 2110, 1175, 2019,
	1747, 1920, 1172, 1748, 1173, 1174, 587, 1749, 2092, 2908,
	1752, 1753, 587, 1459, 1191, 1999, 1459, 1175, 1459, 1846,
	1847, 1848, 1849, 1832, 1918, 1831, 1766, 2092, 2888, 1814,
	2092, 188, 189, 190, 771, 1891, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1200, 1199, 1201, 1202, 1777, 1175, 1780,
	1841, 2111, 1842, 1843, 1844, 1845, 2103, 587, 1919, 587,
	1862, 1908, 2092, 2884, 1835, 587, 587, 2588, 1852, 1853,
	1854, 1855, 1868, 1797, 2111, 1799, 1374, 1819, 1818, 2528,
	805, 2771, 2409, 805, 2876, 1317, 2092, 2852, 1834, 1833,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1177, 1707, 2935,
	2636, 2653, 2849, 186, 2103, 1905, 1172, 2317, 1173, 1174,
	186, 2528, 1317, 1172, 1878, 1173, 1174, 186, 186, 2786,
	1317, 186, 1172, 186, 1173, 1174, 1172, 2111, 1173, 1174,
	186, 2161, 1858, 1859, 1863, 2891, 1004, 186, 2092, 2774,
	1881, 1820, 1877, 2653, 1317, 1172, 1456, 1173, 1174, 1997,
	1913, 1889, 2027, 1916, 1175, 1917, 1931, 2016, 1387, 2092,
	2651, 1919, 1317, 1003, 2015, 186, 587, 1912, 1915, 1863,
	1911, 2572, 1317, 1171, 1317, 2567, 1172, 1933, 1173, 1174,
	1919, 1932, 1902, 1935, 1936, 1699, 1688, 1689, 1690, 1691,
	1701, 1692, 1693, 1694, 1706, 1702, 1695, 1696, 1703, 1704,
	1705, 1697, 1698, 1700, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1200, 1199, 1201, 1202, 1792, 1400, 1403, 1404, 1405,
	1406, 1407, 1408, 1941, 1409, 1410, 1411, 1412, 1413, 1388,
	1389, 1390, 1391, 1372, 1373, 1401, 2530, 1375, 1633, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 101, 1321,
	1385, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 100,
	1175, 99, 2027, 1317, 2411, 2410, 2088, 1191, 1175, 2249,
	94, 1966, 1757, 1992, 2374, 1994, 2407, 2408, 1191, 1175,
	1995, 94, 1172, 1982, 1173, 1174, 2407, 2406, 1993, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1200, 1199, 1201, 1202,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1199, 1201,
	1202, 2111, 1317, 92, 1997, 1317, 1982, 2215, 186, 1611,
	94, 1556, 101, 1980, 93, 1349, 186, 87, 1317, 1175,
	1662, 587, 986, 100, 2076, 99, 985, 587, 1997, 2063,
	2797, 187, 2526, 187, 1324, 1660, 187, 1991, 587, 2080,
	2519, 1418, 2199, 1634, 2192, 2193, 2092, 2091, 2074, 1418,
	1417, 2518, 1363, 1362, 761, 2764, 2133, 1402, 2133, 2342,
	2726, 186, 2634, 2631, 186, 588, 588, 588, 1317, 2567,
	2613, 2522, 2619, 1175, 2521, 1420, 2009, 2107, 1172, 2143,
	1173, 1174, 1861, 588, 588, 1490, 1172, 2475, 1173, 1174,
	2479, 2435, 1317, 1973, 1974, 2431, 37, 1172, 1976, 1173,
	1174, 2051, 2200, 2007, 1857, 2127, 1748, 1977, 1193, 1194,
	1195, 1196, 1197, 1198, 1200, 1199, 1201, 1202, 2093, 2134,
	1175, 2134, 2620, 2621, 2622, 1851, 2970, 587, 2136, 2798,
	1982, 87, 1850, 186, 1542, 1491, 1492, 1493, 1451, 2089,
	186, 1447, 1416, 1175, 113, 2623, 2433, 1172, 1175, 1173,
	1174, 2166, 1291, 1074, 587, 2050, 2064, 1876, 2165, 1487,
	1770, 587, 2579, 2580, 2968, 1459, 1459, 2951, 2873, 2816,
	587, 2582, 2191, 2054, 2055, 2154, 2155, 2126, 1747, 2427,
	2426, 2168, 2085, 2147, 2131, 2212, 2171, 2172, 2090, 2425,
	2100, 2342, 2624, 2625, 2211, 2179, 186, 186, 186, 186,
	186, 1172, 2049, 1173, 1174, 2166, 1488, 1489, 1967, 2135,
	1175, 1868, 2138, 1604, 2364, 2145, 2362, 186, 186, 2365,
	2585, 2363, 2584, 2148, 2366, 2048, 2120, 2121, 2361, 2360,
	2047, 2941, 2158, 186, 2116, 2119, 2120, 2121, 2117, 2909,
	2118, 2122, 187, 1784, 2579, 2580, 588, 588, 1172, 1325,
	1173, 1174, 587, 1776, 2573, 2322, 2167, 2116, 2119, 2120,
	2121, 2117, 187, 2118, 2122, 2175, 2180, 2181, 2182, 1175,
	2176, 1172, 2321, 1173, 1174, 2210, 1172, 2831, 1173, 1174,
	1439, 588, 2334, 2336, 1662, 187, 1662, 2705, 2707, 1662,
	588, 2337, 2046, 2563, 1662, 2273, 588, 2331, 1555, 1660,
	747, 1660, 2201, 2202, 1660, 2209, 757, 2560, 587, 1660,
	775, 2696, 2405, 2695, 2151, 2559, 2170, 2232, 776, 2269,
	1674, 1036, 1035, 2292, 587, 2292, 2493, 2165, 2292, 1175,
	2243, 92, 2311, 2292, 1675, 1143, 2252, 2235, 1172, 186,
	1173, 1174, 93, 587, 2207, 2206, 2304, 2305, 2306, 2307,
	2251, 2045, 587, 121, 2565, 94, 2294, 1794, 1795, 587,
	587, 2694, 186, 186, 186, 186, 186, 2979, 2297, 2241,
	2270, 92, 2242, 2298, 186, 2848, 2311, 2423, 94, 186,
	1970, 186, 93, 186, 2793, 2404, 186, 186, 186, 2354,
	2124, 2339, 1781, 2253, 783, 784, 2345, 1172, 2348, 1173,
	1174, 2345, 2373, 763, 2324, 2299, 2300, 2301, 2302, 2303,
	2285, 2044, 2320, 1959, 1958, 1957, 2545, 1986, 101, 1175,
	2319, 2419, 99, 1304, 101, 1175, 2312, 2325, 2823, 100,
	186, 99, 2822, 2310, 100, 100, 2088, 99, 2713, 2711,
	94, 2323, 2710, 587, 2703, 2316, 2632, 187, 2564, 2562,
	2326, 587, 2313, 2314, 2315, 1175, 186, 1172, 2436, 1173,
	1174, 1903, 1434, 2356, 2357, 782, 2359, 186, 2553, 2459,
	2367, 2375, 2702, 2103, 2376, 764, 95, 2416, 2417, 2355,
	101, 2353, 2358, 2377, 588, 186, 2438, 765, 186, 1566,
	2017, 100, 2972, 2971, 2971, 2371, 1768, 1343, 2494, 2383,
	1334, 2043, 2972, 588, 588, 2837, 588, 2037, 588, 588,
	2415, 588, 588, 588, 588, 588, 588, 2414, 2413, 106,
	107, 2599, 773, 103, 88, 1175, 1, 588, 2467, 2603,
	2924, 187, 2466, 555, 1758, 1289, 570, 2036, 2952, 2920,
	2921, 1528, 2437, 2458, 1868, 1518, 2664, 1172, 187, 1173,
	1174, 1716, 2470, 1172, 2794, 1173, 1174, 2439, 1909, 2630,
	2525, 588, 1866, 187, 994, 146, 1829, 1830, 587, 186,
	1175, 2904, 2489, 110, 2486, 952, 2488, 588, 109, 187,
	997, 1102, 1904, 1172, 2654, 1173, 1174, 2152, 1175, 1838,
	2497, 1369, 1175, 1367, 1368, 187, 1366, 2503, 1371, 1370,
	2018, 2531, 187, 1605, 2496, 584, 2123, 2035, 184, 1358,
	1335, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	588, 588, 588, 1037, 1175, 186, 2500, 2501, 670, 2502,
	545, 2412, 2504, 1939, 2506, 551, 2508, 1215, 2318, 2139,
	802, 2551, 1175, 2602, 795, 1769, 1175, 2078, 2546, 2547,
	2350, 187, 2032, 1172, 186, 1173, 1174, 2557, 2330, 2332,
	2095, 2335, 2561, 2554, 2328, 2830, 2704, 2889, 2149, 1331,
	2031, 2008, 2576, 186, 2030, 2566, 186, 186, 186, 2586,
	1222, 1676, 2583, 1809, 1626, 609, 587, 587, 608, 606,
	586, 2081, 2104, 2591, 2592, 1178, 690, 588, 1172, 2068,
	1173, 1174, 2589, 1344, 2637, 2638, 2028, 2115, 2467, 2608,
	2609, 588, 2466, 2590, 2597, 2598, 1172, 2113, 1173, 1174,
	1172, 2112, 1173, 1174, 2024, 1968, 588, 588, 2023, 1815,
	587, 587, 587, 587, 2581, 2577, 2916, 803, 1811, 2614,
	956, 2616, 963, 1315, 1311, 1807, 2087, 617, 610, 602,
	2596, 2465, 1172, 2218, 1173, 1174, 1315, 1311, 1312, 2476,
	2220, 2641, 2491, 2492, 2150, 2645, 2646, 2647, 2472, 1156,
	1172, 1312, 1173, 1174, 1172, 1307, 1173, 1174, 1662, 596,
	1662, 965, 2660, 1774, 1775, 1314, 187, 1313, 2658, 2659,
	1673, 588, 2799, 1660, 2854, 1660, 1308, 1309, 1314, 186,
	1313, 1985, 2515, 1306, 2675, 1686, 1687, 2861, 2447, 2648,
	2428, 2197, 1896, 63, 41, 187, 591, 2292, 588, 2292,
	2699, 2937, 1147, 587, 2671, 587, 789, 32, 187, 31,
	30, 29, 588, 28, 2672, 23, 22, 187, 21, 187,
	1662, 187, 187, 588, 2728, 20, 588, 2720, 2682, 19,
	25, 2692, 18, 17, 16, 1660, 2450, 588, 2345, 2683,
	2947, 2348, 2978, 1292, 2724, 2348, 37, 115, 2700, 50,
	2722, 2709, 2708, 47, 45, 757, 123, 2716, 2718, 122,
	48, 44, 1077, 42, 27, 587, 26, 15, 14, 13,
	12, 11, 10, 9, 5, 4, 35, 34, 186, 33,
	1150, 587, 24, 2772, 2, 2732, 2184, 2729, 2730, 1898,
	0, 0, 588, 0, 587, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 2770, 590, 0, 0,
	2784, 0, 2776, 0, 2769, 750, 0, 2768, 2796, 588,
	2813, 2814, 0, 1662, 587, 588, 0, 2817, 587, 587,
	0, 2788, 0, 0, 2779, 2780, 2781, 2789, 1660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2824, 2825, 0,
	588, 0, 588, 2827, 0, 2841, 0, 0, 588, 588,
	2826, 2829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2348, 2387, 2840, 0, 587, 2838, 2844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 757, 0,
	186, 0, 0, 2846, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 587, 186,
	187, 187, 0, 0, 187, 0, 187, 2388, 0, 0,
	0, 0, 2857, 187, 0, 0, 2865, 2853, 2860, 2862,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2390, 0, 0, 0, 0, 0, 37, 0,
	587, 0, 0, 0, 0, 0, 2385, 0, 187, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2401, 2402, 0, 0, 587, 587, 2882, 2386, 0, 0,
	0, 0, 0, 0, 2890, 0, 0, 587, 2345, 2892,
	0, 0, 0, 2887, 0, 2895, 186, 587, 2796, 2905,
	2903, 2900, 2897, 37, 2912, 2896, 2894, 2899, 2898, 2392,
	0, 0, 0, 0, 0, 0, 0, 2915, 2933, 2923,
	2928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2940, 0, 0, 0, 0, 0,
	0, 2946, 0, 0, 0, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 0, 1662,
	803, 803, 803, 2966, 2959, 2961, 0, 2965, 2963, 0,
	2969, 2967, 0, 0, 1660, 2400, 0, 0, 1146, 1148,
	0, 0, 0, 0, 0, 2980, 0, 2403, 0, 0,
	2986, 0, 2988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1662, 0, 0, 0, 2994, 2995, 2996, 2997,
	2814, 187, 0, 182, 0, 0, 0, 1660, 0, 187,
	0, 0, 0, 0, 588, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 121, 0, 143,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 182, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 1283, 0, 142, 0, 0, 0,
	121, 0, 0, 0, 0, 0, 2389, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 152, 151, 181,
	588, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 1295, 1296, 187, 0, 2146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	161, 1078, 162, 1084, 588, 0, 1086, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 1339, 0, 0, 0,
	0, 0, 181, 0, 0, 803, 0, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 187, 187, 187, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 147, 128, 154, 135, 127, 121, 148,
	149, 0, 0, 0, 0, 165, 187, 0, 2393, 0,
	0, 164, 2397, 0, 171, 136, 0, 0, 0, 0,
	2396, 0, 0, 0, 0, 588, 0, 0, 0, 139,
	137, 132, 133, 134, 138, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 2398, 0, 0, 0, 165, 2394,
	0, 0, 0, 0, 2395, 0, 0, 171, 161, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 156, 588, 588, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 956,
	0, 0, 187, 0, 187, 0, 187, 0, 0, 187,
	187, 187, 1283, 0, 0, 0, 1316, 0, 1467, 1467,
	0, 1467, 0, 1467, 1467, 0, 1476, 1467, 1467, 1467,
	1467, 1467, 0, 0, 156, 1346, 0, 0, 0, 1283,
	0, 1283, 956, 0, 0, 671, 165, 0, 0, 0,
	0, 0, 0, 187, 0, 171, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 1541, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	187, 145, 1563, 0, 0, 0, 185, 0, 0, 541,
	0, 0, 582, 0, 0, 0, 0, 0, 187, 541,
	0, 187, 0, 0, 0, 0, 0, 541, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 770, 0, 0, 803, 803, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 156, 157, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 1386, 0, 0, 0, 0, 0,
	0, 588, 187, 0, 0, 0, 0, 1364, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 1656, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 177, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 1684, 1685, 0, 0, 0, 0, 0, 187, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 0, 0, 0, 0, 803, 0, 187, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	187, 187, 0, 0, 0, 0, 1771, 0, 0, 588,
	588, 157, 0, 1543, 0, 0, 0, 0, 169, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 1339, 0, 0,
	803, 0, 1579, 588, 588, 588, 588, 0, 803, 0,
	177, 803, 0, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	0, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 1614, 0, 1387, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 588, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	963, 1400, 1403, 1404, 1405, 1406, 1407, 1408, 0, 1409,
	1410, 1411, 1412, 1413, 1388, 1389, 1390, 1391, 1372, 1373,
	1401, 0, 1375, 0, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 0, 0, 1385, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 0, 956, 0, 1656, 588, 0,
	0, 0, 0, 1656, 1656, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2734, 2736, 2735, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 639, 0, 0, 0, 0, 588, 0, 0,
	0, 588, 588, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 541, 0, 541, 0, 1800, 541, 1803,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 0, 0, 0, 68, 588, 588, 0,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	588, 0, 0, 803, 0, 56, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 1783,
	0, 1318, 1320, 0, 0, 2082, 1614, 0, 0, 2737,
	2738, 0, 0, 1950, 541, 0, 2097, 0, 0, 0,
	1964, 1965, 0, 0, 1969, 0, 0, 0, 0, 588,
	0, 0, 0, 1972, 770, 0, 0, 0, 588, 0,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 681,
	0, 634, 685, 636, 682, 683, 0, 632, 635, 684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2173, 637, 638, 2733, 2739,
	2740, 2741, 2749, 2751, 659, 2750, 2752, 2753, 2754, 2757,
	2758, 2759, 2760, 2755, 2756, 2761, 0, 46, 49, 52,
	51, 54, 1783, 66, 0, 0, 75, 72, 0, 2198,
	0, 0, 0, 0, 0, 0, 0, 0, 2203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	83, 82, 0, 0, 64, 65, 53, 0, 0, 0,
	0, 0, 73, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 0, 59, 60, 61, 62, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1283, 0, 1283, 0, 0, 1283, 0, 0, 1284,
	0, 1283, 0, 0, 0, 0, 0, 2130, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1284, 0, 1284, 0,
	0, 0, 1467, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 2327, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 1283, 541, 0, 2352, 1467, 1283,
	0, 0, 81, 0, 0, 0, 2177, 0, 0, 0,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 86, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 1589, 541, 541, 541, 541, 541,
	541, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2223,
	2224, 2225, 2226, 2227, 0, 0, 0, 0, 0, 0,
	0, 956, 0, 541, 1283, 0, 0, 0, 0, 1783,
	1614, 2236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 788, 788, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 1756, 0, 0, 0, 0, 0,
	0, 788, 1565, 788, 788, 788, 788, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 2327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 1565, 0, 541,
	0, 541, 0, 541, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 698, 699, 0, 0, 0, 0,
	1661, 0, 0, 2424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 1783, 1783, 0, 0, 0, 2462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2487, 0,
	0, 2490, 0, 0, 0, 0, 0, 0, 2665, 2666,
	2667, 2668, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 0, 1283, 0, 1283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 0, 0, 0,
	0, 2721, 0, 2723, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 541, 541, 0, 0, 541, 0, 1971, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 2612, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 2787,
	0, 0, 0, 0, 0, 0, 2626, 0, 0, 2627,
	2628, 2629, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 2002, 0, 2003, 2004, 0,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 2013,
	2014, 0, 2820, 0, 0, 0, 2820, 2820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 2020, 2021, 2022, 0,
	0, 2025, 0, 2026, 0, 1783, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 2038, 2039, 2040, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	0, 0, 0, 0, 0, 0, 2058, 2059, 2060, 2061,
	2062, 0, 1779, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 788,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 541, 0, 0, 1783, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 0, 2883, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 541,
	0, 697, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 2183, 0, 0, 0, 760,
	0, 79, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 2918, 0, 0, 0, 0, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 541, 541, 541, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 2280, 0, 0, 0, 0,
	0, 0, 2866, 788, 0, 0, 0, 0, 0, 0,
	2293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2308, 2309, 0, 0, 0, 0, 0, 1284, 0,
	1284, 0, 0, 1284, 0, 0, 0, 0, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2351, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 2369, 2370, 0, 0, 0, 0, 0, 0,
	0, 1284, 0, 0, 0, 0, 1284, 541, 541, 541,
	541, 541, 0, 0, 0, 0, 0, 0, 0, 2368,
	0, 0, 0, 0, 541, 0, 1515, 0, 541, 0,
	600, 541, 2378, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 2495, 0, 0, 0, 0,
	0, 0, 2499, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 541, 0, 0, 2509, 2510, 2512, 2514,
	0, 0, 0, 0, 0, 0, 2520, 0, 0, 0,
	2523, 2524, 0, 0, 0, 0, 2527, 0, 0, 0,
	0, 0, 2529, 0, 0, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 0, 0, 2543, 0, 0,
	0, 0, 0, 2548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 2570, 2571, 0, 0,
	2575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 1138, 1138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 541, 541, 541, 0, 0, 0, 2652, 0, 0,
	760, 1211, 1212, 1213, 0, 1216, 0, 1218, 1219, 1220,
	1221, 0, 1224, 1226, 1226, 0, 1226, 1230, 1230, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 0, 1267, 1268, 1269, 1270, 1271, 0,
	0, 0, 2681, 1230, 1230, 1230, 1230, 1230, 2685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 1284, 0, 0, 0, 0, 760, 0,
	0, 0, 760, 0, 0, 0, 0, 0, 760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2785, 0, 0, 0, 0,
	0, 698, 699, 0, 2792, 0, 0, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2802, 2803, 2804, 1515, 2805, 2806, 0, 0, 0, 2809,
	0, 2810, 0, 2812, 2815, 0, 0, 0, 0, 0,
	2819, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 2845, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 2867, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	2872, 0, 0, 0, 0, 2877, 0, 0, 0, 0,
	0, 2878, 2879, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 2885,
	691, 698, 699, 700, 701, 702, 692, 694, 0, 0,
	0, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 696, 703, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2468, 2469, 2942,
	0, 1515, 0, 2943, 0, 0, 0, 0, 0, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 0, 0, 0, 0, 0, 0, 0, 1138, 1138,
	1138, 0, 0, 87, 0, 0, 0, 0, 0, 691,
	698, 699, 700, 701, 702, 692, 694, 0, 0, 0,
	693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 703, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2468, 2469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1421, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 685, 0, 682, 683, 0, 0, 0,
	684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	964, 0, 0, 0, 1621, 1622, 1623, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 1667, 0, 0, 0,
	0, 0, 0, 1672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 1709,
	1710, 1711, 1712, 1713, 600, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 2109, 0, 0, 0, 0, 0,
	0, 0, 2128, 0, 2129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2204, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2349, 0,
	79, 0, 0, 1810, 1810, 1810, 1810, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2128, 0, 0, 0, 1810, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2498, 0, 2271, 2272,
	0, 0, 0, 2275, 0, 0, 0, 0, 2277, 2278,
	2279, 0, 0, 0, 0, 0, 2283, 2284, 0, 0,
	1719, 2286, 0, 2287, 2288, 0, 0, 0, 2295, 2296,
	0, 0, 0, 0, 0, 0, 1719, 1719, 1719, 1719,
	1719, 600, 600, 600, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 2372, 0, 0, 0, 0, 0, 0, 2595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2693, 0, 2697, 2698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2349, 0, 79, 0, 2349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2657, 0, 0,
	0, 2349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 2673, 0, 2674, 0, 0, 0,
	0, 2677, 2678, 0, 0, 0, 0, 2855, 0, 0,
	0, 0, 0, 2684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 2727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2886, 0, 0, 2731, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2828, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	0, 934, 920, 460, 2934, 867, 937, 836, 855, 947,
	858, 861, 902, 815, 880, 377, 852, 808, 840, 811,
	847, 812, 838, 869, 250, 835, 922, 884, 936, 333,
	247, 817, 841, 391, 857, 197, 904, 434, 234, 343,
	340, 467, 262, 253, 249, 233, 289, 349, 389, 454,
	383, 943, 337, 890, 0, 444, 362, 0, 0, 0,
	871, 926, 878, 916, 866, 903, 825, 889, 938, 853,
	899, 939, 295, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 2906, 0, 2907, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 849, 896,
	933, 850, 898, 245, 293, 252, 244, 464, 944, 925,
	0, 0, 214, 935, 873, 0, 901, 0, 950, 810,
	892, 0, 813, 816, 946, 929, 844, 255, 0, 0,
	0, 0, 0, 0, 0, 870, 879, 913, 864, 0,
	0, 0, 0, 0, 0, 0, 842, 0, 888, 0,
	0, 0, 821, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 0, 0, 0,
	824, 0, 843, 914, 0, 807, 276, 818, 363, 237,
	0, 918, 928, 865, 499, 932, 863, 862, 908, 822,
	924, 856, 332, 820, 301, 192, 210, 0, 854, 373,
	416, 422, 923, 839, 848, 235, 846, 420, 387, 482,
	218, 264, 413, 393, 418, 400, 267, 887, 906, 419,
	338, 469, 407, 480, 500, 501, 243, 367, 490, 458,
	496, 513, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 300, 440, 274, 195, 336, 506, 209, 428, 227,
	216, 471, 488, 269, 411, 202, 453, 478, 224, 432,
	0, 0, 515, 204, 476, 450, 356, 297, 298, 203,
	0, 412, 248, 272, 238, 376, 473, 474, 236, 516,
	213, 495, 206, 1140, 494, 369, 468, 477, 357, 348,
	205, 475, 355, 347, 303, 322, 323, 260, 283, 405,
	341, 406, 284, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 517, 219, 220, 222, 834, 259, 263,
	271, 273, 279, 280, 287, 334, 380, 404, 402, 408,
	919, 463, 481, 491, 498, 504, 505, 507, 508, 509,
	510, 512, 511, 368, 286, 442, 302, 339, 911, 949,
	386, 421, 225, 484, 443, 829, 833, 827, 893, 828,
	882, 883, 830, 940, 941, 942, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 915, 823, 0, 831, 832,
	0, 921, 930, 931, 536, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 886, 191, 207, 335, 945, 409, 268, 514,
	493, 489, 809, 826, 242, 837, 845, 0, 851, 859,
	860, 872, 874, 875, 876, 877, 894, 895, 897, 905,
	907, 910, 912, 917, 927, 948, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 415, 423, 424,
	425, 426, 427, 430, 431, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 472, 483, 497, 502, 429, 278,
	479, 503, 0, 344, 885, 891, 346, 261, 281, 292,
	900, 492, 449, 212, 417, 270, 201, 231, 215, 239,
	254, 257, 296, 354, 361, 390, 395, 275, 251, 229,
	414, 226, 433, 455, 456, 457, 459, 358, 246, 394,
	881, 909, 342, 461, 462, 288, 359, 0, 0, 934,
	920, 460, 0, 867, 937, 836, 855, 947, 858, 861,
	902, 815, 880, 377, 852, 808, 840, 811, 847, 812,
	838, 869, 250, 835, 922, 884, 936, 333, 247, 817,
	841, 391, 857, 197, 904, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 943,
	337, 890, 0, 444, 362, 0, 0, 0, 871, 926,
	878, 916, 866, 903, 825, 889, 938, 853, 899, 939,
	295, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 849, 896, 933, 850,
	898, 245, 293, 252, 244, 464, 944, 925, 0, 0,
	214, 935, 873, 0, 901, 0, 950, 810, 892, 0,
	813, 816, 946, 929, 844, 255, 0, 0, 0, 0,
	0, 0, 0, 870, 879, 913, 864, 0, 0, 0,
	0, 0, 2379, 0, 842, 0, 888, 0, 0, 0,
	821, 814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 868, 0, 0, 0, 824, 0,
	843, 914, 0, 807, 276, 818, 363, 237, 0, 918,
	928, 865, 499, 932, 863, 862, 908, 822, 924, 856,
	332, 820, 301, 192, 210, 0, 854, 373, 416, 422,
	923, 839, 848, 235, 846, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 887, 906, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 1140, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 834, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 919, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 911, 949, 386, 421,
	225, 484, 443, 829, 833, 827, 893, 828, 882, 883,
	830, 940, 941, 942, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 915, 823, 0, 831, 832, 0, 921,
	930, 931, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	886, 191, 207, 335, 945, 409, 268, 514, 493, 489,
	809, 826, 242, 837, 845, 0, 851, 859, 860, 872,
	874, 875, 876, 877, 894, 895, 897, 905, 907, 910,
	912, 917, 927, 948, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 885, 891, 346, 261, 281, 292, 900, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 881, 909,
	342, 461, 462, 288, 359, 0, 0, 934, 920, 460,
	0, 867, 937, 836, 855, 947, 858, 861, 902, 815,
	880, 377, 852, 808, 840, 811, 847, 812, 838, 869,
	250, 835, 922, 884, 936, 333, 247, 817, 841, 391,
	857, 197, 904, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 943, 337, 890,
	0, 444, 362, 0, 0, 0, 871, 926, 878, 916,
	866, 903, 825, 889, 938, 853, 899, 939, 295, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 849, 896, 933, 850, 898, 245,
	293, 252, 244, 464, 944, 925, 0, 0, 214, 935,
	873, 0, 901, 0, 950, 810, 892, 0, 813, 816,
	946, 929, 844, 255, 0, 0, 0, 0, 0, 0,
	0, 870, 879, 913, 864, 0, 0, 0, 0, 0,
	2338, 0, 842, 0, 888, 0, 0, 0, 821, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 868, 0, 0, 0, 824, 0, 843, 914,
	0, 807, 276, 818, 363, 237, 0, 918, 928, 865,
	499, 932, 863, 862, 908, 822, 924, 856, 332, 820,
	301, 192, 210, 0, 854, 373, 416, 422, 923, 839,
	848, 235, 846, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 887, 906, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 478, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 1140,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 322, 323, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 834, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 919, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 368,
	286, 442, 302, 339, 911, 949, 386, 421, 225, 484,
	443, 829, 833, 827, 893, 828, 882, 883, 830, 940,
	941, 942, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 915, 823, 0, 831, 832, 0, 921, 930, 931,
	536, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 886, 191,
	207, 335, 945, 409, 268, 514, 493, 489, 809, 826,
	242, 837, 845, 0, 851, 859, 860, 872, 874, 875,
	876, 877, 894, 895, 897, 905, 907, 910, 912, 917,
	927, 948, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 278, 479, 503, 0, 344,
	885, 891, 346, 261, 281, 292, 900, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 881, 909, 342, 461,
	462, 288, 359, 0, 0, 934, 920, 460, 0, 867,
	937, 836, 855, 947, 858, 861, 902, 815, 880, 377,
	852, 808, 840, 811, 847, 812, 838, 869, 250, 835,
	922, 884, 936, 333, 247, 817, 841, 391, 857, 197,
	904, 434, 234, 343, 340, 467, 262, 253, 249, 233,
	289, 349, 389, 454, 383, 943, 337, 890, 0, 444,
	362, 0, 0, 0, 871, 926, 878, 916, 866, 903,
	825, 889, 938, 853, 899, 939, 295, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 849, 896, 933, 850, 898, 245, 293, 252,
	244, 464, 944, 925, 0, 0, 214, 935, 873, 0,
	901, 0, 950, 810, 892, 0, 813, 816, 946, 929,
	844, 255, 0, 0, 0, 0, 0, 0, 0, 870,
	879, 913, 864, 0, 0, 0, 0, 0, 1798, 0,
	842, 0, 888, 0, 0, 0, 821, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 824, 0, 843, 914, 0, 807,
	276, 818, 363, 237, 0, 918, 928, 865, 499, 932,
	863, 862, 908, 822, 924, 856, 332, 820, 301, 192,
	210, 0, 854, 373, 416, 422, 923, 839, 848, 235,
	846, 420, 387, 482, 218, 264, 413, 393, 418, 400,
	267, 887, 906, 419, 338, 469, 407, 480, 500, 501,
	243, 367, 490, 458, 496, 513, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 300, 440, 274, 195, 336,
	506, 209, 428, 227, 216, 471, 488, 269, 411, 202,
	453, 478, 224, 432, 0, 0, 515, 204, 476, 450,
	356, 297, 298, 203, 0, 412, 248, 272, 238, 376,
	473, 474, 236, 516, 213, 495, 206, 1140, 494, 369,
	468, 477, 357, 348, 205, 475, 355, 347, 303, 322,
	323, 260, 283, 405, 341, 406, 284, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 517, 219, 220,
	222, 834, 259, 263, 271, 273, 279, 280, 287, 334,
	380, 404, 402, 408, 919, 463, 481, 491, 498, 504,
	505, 507, 508, 509, 510, 512, 511, 368, 286, 442,
	302, 339, 911, 949, 386, 421, 225, 484, 443, 829,
	833, 827, 893, 828, 882, 883, 830, 940, 941, 942,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 915,
	823, 0, 831, 832, 0, 921, 930, 931, 536, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 886, 191, 207, 335,
	945, 409, 268, 514, 493, 489, 809, 826, 242, 837,
	845, 0, 851, 859, 860, 872, 874, 875, 876, 877,
	894, 895, 897, 905, 907, 910, 912, 917, 927, 948,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 415, 423, 424, 425, 426, 427, 430, 431, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 472, 483,
	497, 502, 429, 278, 479, 503, 0, 344, 885, 891,
	346, 261, 281, 292, 900, 492, 449, 212, 417, 270,
	201, 231, 215, 239, 254, 257, 296, 354, 361, 390,
	395, 275, 251, 229, 414, 226, 433, 455, 456, 457,
	459, 358, 246, 394, 881, 909, 342, 461, 462, 288,
	359, 0, 0, 934, 920, 460, 0, 867, 937, 836,
	855, 947, 858, 861, 902, 815, 880, 377, 852, 808,
	840, 811, 847, 812, 838, 869, 250, 835, 922, 884,
	936, 333, 247, 817, 841, 391, 857, 197, 904, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 943, 337, 890, 0, 444, 362, 0,
	0, 0, 871, 926, 878, 916, 866, 903, 825, 889,
	938, 853, 899, 939, 295, 232, 196, 374, 445, 266,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	849, 896, 933, 850, 898, 245, 293, 252, 244, 464,
	944, 925, 0, 0, 214, 935, 873, 0, 901, 0,
	950, 810, 892, 0, 813, 816, 946, 929, 844, 255,
	0, 0, 0, 0, 0, 0, 0, 870, 879, 913,
	864, 0, 0, 0, 0, 0, 0, 0, 842, 0,
	888, 0, 0, 0, 821, 814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 868, 0,
	0, 0, 824, 0, 843, 914, 0, 807, 276, 818,
	363, 237, 0, 918, 928, 865, 499, 932, 863, 862,
	908, 822, 924, 856, 332, 820, 301, 192, 210, 0,
	854, 373, 416, 422, 923, 839, 848, 235, 846, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 887,
	906, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 1140, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 322, 323, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 834,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 919, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	911, 949, 386, 421, 225, 484, 443, 829, 833, 827,
	893, 828, 882, 883, 830, 940, 941, 942, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 915, 823, 0,
	831, 832, 0, 921, 930, 931, 536, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 886, 191, 207, 335, 945, 409,
	268, 514, 493, 489, 809, 826, 242, 837, 845, 0,
	851, 859, 860, 872, 874, 875, 876, 877, 894, 895,
	897, 905, 907, 910, 912, 917, 927, 948, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 885, 891, 346, 261,
	281, 292, 900, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 881, 909, 342, 461, 462, 288, 359, 0,
	0, 934, 920, 460, 0, 867, 937, 836, 855, 947,
	858, 861, 902, 815, 880, 377, 852, 808, 840, 811,
	847, 812, 838, 869, 250, 835, 922, 884, 936, 333,
	247, 817, 841, 391, 857, 197, 904, 434, 234, 343,
	340, 467, 262, 253, 249, 233, 289, 349, 389, 454,
	383, 943, 337, 890, 0, 444, 362, 0, 0, 0,
	871, 926, 878, 916, 866, 903, 825, 889, 938, 853,
	899, 939, 295, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 849, 896,
	933, 850, 898, 245, 293, 252, 244, 464, 944, 925,
	0, 0, 214, 935, 873, 0, 901, 0, 950, 810,
	892, 0, 813, 816, 946, 929, 844, 255, 0, 0,
	0, 0, 0, 0, 0, 870, 879, 913, 864, 0,
	0, 0, 0, 0, 0, 0, 842, 0, 888, 0,
	0, 0, 821, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 0, 0, 0,
	824, 0, 843, 914, 0, 807, 276, 818, 363, 237,
	0, 918, 928, 865, 499, 932, 863, 862, 908, 822,
	924, 856, 332, 820, 301, 192, 210, 0, 854, 373,
	416, 422, 923, 839, 848, 235, 846, 420, 387, 482,
	218, 264, 413, 393, 418, 400, 267, 887, 906, 419,
	338, 469, 407, 480, 500, 501, 243, 367, 490, 458,
	496, 513, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 300, 440, 274, 195, 336, 506, 209, 428, 227,
	216, 471, 488, 269, 411, 202, 453, 478, 224, 432,
	0, 0, 515, 204, 476, 450, 356, 297, 298, 203,
	0, 412, 248, 272, 238, 376, 473, 474, 236, 516,
	213, 495, 206, 1140, 494, 369, 468, 477, 357, 348,
	205, 475, 355, 347, 303, 322, 323, 260, 283, 405,
	341, 406, 284, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 517, 219, 220, 222, 834, 259, 263,
	271, 273, 279, 280, 287, 334, 380, 404, 402, 408,
	919, 463, 481, 491, 498, 504, 505, 507, 508, 509,
	510, 512, 511, 368, 286, 442, 302, 339, 911, 949,
	386, 421, 225, 484, 443, 829, 833, 827, 893, 828,
	882, 883, 830, 940, 941, 942, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 915, 823, 0, 831, 832,
	0, 921, 930, 931, 536, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 886, 191, 207, 335, 945, 409, 268, 514,
	493, 489, 809, 826, 242, 837, 845, 0, 851, 859,
	860, 872, 874, 875, 876, 877, 894, 895, 897, 905,
	907, 910, 912, 917, 927, 948, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 415, 423, 424,
	425, 426, 427, 430, 431, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 472, 483, 497, 502, 429, 278,
	479, 503, 0, 344, 885, 891, 346, 261, 281, 292,
	900, 492, 449, 212, 417, 270, 201, 231, 215, 239,
	254, 257, 296, 354, 361, 390, 395, 275, 251, 229,
	414, 226, 433, 455, 456, 457, 459, 358, 246, 394,
	881, 909, 342, 461, 462, 288, 359, 0, 0, 934,
	920, 460, 0, 867, 937, 836, 855, 947, 858, 861,
	902, 815, 880, 377, 852, 808, 840, 811, 847, 812,
	838, 869, 250, 835, 922, 884, 936, 333, 247, 817,
	841, 391, 857, 197, 904, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 943,
	337, 890, 0, 444, 362, 0, 0, 0, 871, 926,
	878, 916, 866, 903, 825, 889, 938, 853, 899, 939,
	295, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 849, 896, 933, 850,
	898, 245, 293, 252, 244, 464, 944, 925, 0, 0,
	951, 935, 873, 0, 901, 0, 950, 810, 892, 0,
	813, 816, 946, 929, 844, 255, 0, 0, 0, 0,
	0, 0, 0, 870, 879, 913, 864, 0, 0, 0,
	0, 0, 0, 0, 842, 0, 888, 0, 0, 0,
	821, 814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 868, 0, 0, 0, 824, 0,
	843, 914, 0, 807, 276, 818, 363, 237, 0, 918,
	928, 865, 499, 932, 863, 862, 908, 822, 924, 856,
	332, 820, 301, 192, 210, 0, 854, 373, 416, 422,
	923, 839, 848, 235, 846, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 887, 906, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 819, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 834, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 919, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 806, 800, 799, 302, 339, 911, 949, 386, 421,
	225, 484, 443, 829, 833, 827, 893, 828, 882, 883,
	830, 940, 941, 942, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 915, 823, 0, 831, 832, 0, 921,
	930, 931, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	886, 191, 207, 335, 945, 409, 268, 514, 493, 489,
	809, 826, 242, 837, 845, 0, 851, 859, 860, 872,
	874, 875, 876, 877, 894, 895, 897, 905, 907, 910,
	912, 917, 927, 948, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 885, 891, 346, 261, 281, 292, 900, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 881, 909,
	342, 461, 462, 288, 359, 0, 0, 934, 920, 460,
	0, 867, 937, 836, 855, 947, 858, 861, 902, 815,
	880, 377, 852, 808, 840, 811, 847, 812, 838, 869,
	250, 835, 922, 884, 936, 333, 247, 817, 841, 391,
	857, 197, 904, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 943, 337, 890,
	0, 444, 362, 0, 0, 0, 871, 926, 878, 916,
	866, 903, 825, 889, 938, 853, 899, 939, 295, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 849, 896, 933, 850, 898, 245,
	293, 252, 244, 464, 944, 925, 0, 0, 951, 935,
	873, 0, 901, 0, 950, 810, 892, 0, 813, 816,
	946, 929, 844, 255, 0, 0, 0, 0, 0, 0,
	0, 870, 879, 913, 864, 0, 0, 0, 0, 0,
	0, 0, 842, 0, 888, 0, 0, 0, 821, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 868, 0, 0, 0, 824, 0, 843, 914,
	0, 807, 276, 818, 363, 237, 0, 918, 928, 865,
	499, 932, 863, 862, 908, 822, 924, 856, 332, 820,
	301, 192, 210, 0, 854, 373, 416, 422, 923, 839,
	848, 235, 846, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 887, 906, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 1350, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 819,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 322, 323, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 834, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 919, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 806,
	800, 799, 302, 339, 911, 949, 386, 421, 225, 484,
	443, 829, 833, 827, 893, 828, 882, 883, 830, 940,
	941, 942, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 915, 823, 0, 831, 832, 0, 921, 930, 931,
	536, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 886, 191,
	207, 335, 945, 409, 268, 514, 493, 489, 809, 826,
	242, 837, 845, 0, 851, 859, 860, 872, 874, 875,
	876, 877, 894, 895, 897, 905, 907, 910, 912, 917,
	927, 948, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 278, 479, 503, 0, 344,
	885, 891, 346, 261, 281, 292, 900, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 881, 909, 342, 461,
	462, 288, 359, 0, 0, 934, 920, 460, 0, 867,
	937, 836, 855, 947, 858, 861, 902, 815, 880, 377,
	852, 808, 840, 811, 847, 812, 838, 869, 250, 835,
	922, 884, 936, 333, 247, 817, 841, 391, 857, 197,
	904, 434, 234, 343, 340, 467, 262, 253, 249, 233,
	289, 349, 389, 454, 383, 943, 337, 890, 0, 444,
	362, 0, 0, 0, 871, 926, 878, 916, 866, 903,
	825, 889, 938, 853, 899, 939, 295, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 849, 896, 933, 850, 898, 245, 293, 252,
	244, 464, 944, 925, 0, 0, 951, 935, 873, 0,
	901, 0, 950, 810, 892, 0, 813, 816, 946, 929,
	844, 255, 0, 0, 0, 0, 0, 0, 0, 870,
	879, 913, 864, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 888, 0, 0, 0, 821, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 824, 0, 843, 914, 0, 807,
	276, 818, 363, 237, 0, 918, 928, 865, 499, 932,
	863, 862, 908, 822, 924, 856, 332, 820, 301, 192,
	210, 0, 854, 373, 416, 422, 923, 839, 848, 235,
	846, 420, 387, 482, 218, 264, 413, 393, 418, 400,
	267, 887, 906, 419, 338, 469, 407, 480, 500, 501,
	243, 367, 490, 458, 496, 513, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 300, 440, 274, 195, 336,
	506, 209, 428, 227, 216, 471, 488, 269, 411, 202,
	453, 797, 224, 432, 0, 0, 515, 204, 476, 450,
	356, 297, 298, 203, 0, 412, 248, 272, 238, 376,
	473, 474, 236, 516, 213, 495, 206, 819, 494, 369,
	468, 477, 357, 348, 205, 475, 355, 347, 303, 322,
	323, 260, 283, 405, 341, 406, 284, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 517, 219, 220,
	222, 834, 259, 263, 271, 273, 279, 280, 287, 334,
	380, 404, 402, 408, 919, 463, 481, 491, 498, 504,
	505, 507, 508, 509, 510, 512, 511, 806, 800, 799,
	302, 339, 911, 949, 386, 421, 225, 484, 443, 829,
	833, 827, 893, 828, 882, 883, 830, 940, 941, 942,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 915,
	823, 0, 831, 832, 0, 921, 930, 931, 536, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 886, 191, 207, 335,
	945, 409, 268, 514, 493, 489, 809, 826, 242, 837,
	845, 0, 851, 859, 860, 872, 874, 875, 876, 877,
	894, 895, 897, 905, 907, 910, 912, 917, 927, 948,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 415, 423, 424, 425, 426, 427, 430, 431, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 472, 483,
	497, 502, 429, 278, 479, 503, 0, 344, 885, 891,
	346, 261, 281, 292, 900, 492, 449, 212, 417, 270,
	201, 231, 215, 239, 254, 257, 296, 354, 361, 390,
	395, 275, 251, 229, 414, 226, 433, 455, 456, 457,
	459, 358, 246, 394, 881, 909, 342, 461, 462, 288,
	359, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	1743, 0, 618, 0, 0, 0, 250, 623, 0, 0,
	0, 333, 247, 0, 1744, 391, 0, 197, 0, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 630, 337, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 374, 445, 266,
	0, 87, 0, 0, 188, 189, 190, 691, 698, 699,
	700, 701, 702, 692, 694, 0, 0, 223, 693, 230,
	641, 643, 642, 649, 650, 651, 652, 653, 654, 655,
	639, 696, 703, 704, 0, 245, 293, 252, 244, 464,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 601, 615, 0, 629, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 613, 786, 0, 0, 0,
	675, 0, 614, 0, 0, 622, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	363, 237, 0, 674, 0, 0, 499, 0, 0, 672,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 373, 416, 422, 0, 0, 0, 235, 0, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 0,
	0, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 0, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 644, 645, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 0, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	0, 0, 386, 421, 225, 484, 443, 681, 673, 634,
	685, 636, 682, 683, 631, 632, 635, 684, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 676, 621, 620,
	0, 627, 628, 0, 637, 638, 640, 646, 647, 648,
	656, 658, 659, 657, 660, 661, 662, 665, 666, 667,
	668, 663, 664, 669, 619, 191, 207, 335, 0, 409,
	268, 514, 493, 489, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 342, 461, 462, 288, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 618, 0, 0, 0, 250,
	623, 0, 0, 0, 333, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 343, 340, 467, 262, 253, 249,
	233, 289, 349, 389, 454, 383, 630, 337, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 0, 0, 1824, 0, 295, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	691, 698, 699, 700, 701, 702, 692, 694, 0, 0,
	223, 693, 230, 641, 643, 642, 649, 650, 651, 652,
	653, 654, 655, 639, 696, 703, 704, 1825, 245, 293,
	252, 244, 464, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 601, 615, 0, 629, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 613, 0,
	0, 0, 0, 675, 0, 614, 0, 0, 622, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 363, 237, 0, 674, 0, 0, 499,
	0, 0, 672, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 373, 416, 422, 0, 0, 0,
	235, 0, 420, 387, 482, 218, 264, 413, 393, 418,
	400, 267, 0, 0, 419, 338, 469, 407, 480, 500,
	501, 243, 367, 490, 458, 496, 513, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 300, 440, 274, 195,
	336, 506, 209, 428, 227, 216, 471, 488, 269, 411,
	202, 453, 478, 224, 432, 0, 0, 515, 204, 476,
	450, 356, 297, 298, 203, 0, 412, 248, 272, 238,
	376, 473, 474, 236, 516, 213, 495, 206, 0, 494,
	369, 468, 477, 357, 348, 205, 475, 355, 347, 303,
	644, 645, 260, 283, 405, 341, 406, 284, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 517, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 380, 404, 402, 408, 0, 463, 481, 491, 498,
	504, 505, 507, 508, 509, 510, 512, 511, 368, 286,
	442, 302, 339, 0, 0, 386, 421, 225, 484, 443,
	681, 673, 634, 685, 636, 682, 683, 631, 632, 635,
	684, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	676, 621, 620, 0, 627, 628, 0, 637, 638, 640,
	646, 647, 648, 656, 658, 659, 657, 660, 661, 662,
	665, 666, 667, 668, 663, 664, 669, 619, 191, 207,
	335, 0, 409, 268, 514, 493, 489, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 415, 423, 424, 425, 426, 427, 430, 431,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 472,
	483, 497, 502, 429, 278, 479, 503, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 492, 449, 212, 417,
	270, 201, 231, 215, 239, 254, 257, 296, 354, 361,
	390, 395, 275, 251, 229, 414, 226, 433, 455, 456,
	457, 459, 358, 246, 394, 0, 0, 342, 461, 462,
	288, 359, 0, 0, 0, 78, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 618, 0, 0, 0, 250, 623, 0,
	0, 0, 333, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 343, 340, 467, 262, 253, 249, 233, 289,
	349, 389, 454, 383, 630, 337, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 374, 445,
	266, 0, 87, 0, 0, 188, 189, 190, 691, 698,
	699, 700, 701, 702, 692, 694, 0, 0, 223, 693,
	230, 641, 643, 642, 649, 650, 651, 652, 653, 654,
	655, 639, 696, 703, 704, 0, 245, 293, 252, 244,
	464, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 601, 615, 0, 629, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 612, 613, 0, 0, 0,
	0, 675, 0, 614, 0, 0, 622, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 363, 237, 0, 674, 0, 0, 499, 0, 0,
	672, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 373, 416, 422, 0, 0, 0, 235, 0,
	420, 387, 482, 218, 264, 413, 393, 418, 400, 267,
	0, 0, 419, 338, 469, 407, 480, 500, 501, 243,
	367, 490, 458, 496, 513, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 300, 440, 274, 195, 336, 506,
	209, 428, 227, 216, 471, 488, 269, 411, 202, 453,
	478, 224, 432, 0, 0, 515, 204, 476, 450, 356,
	297, 298, 203, 0, 412, 248, 272, 238, 376, 473,
	474, 236, 516, 213, 495, 206, 0, 494, 369, 468,
	477, 357, 348, 205, 475, 355, 347, 303, 644, 645,
	260, 283, 405, 341, 406, 284, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 517, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 380,
	404, 402, 408, 0, 463, 481, 491, 498, 504, 505,
	507, 508, 509, 510, 512, 511, 368, 286, 442, 302,
	339, 0, 0, 386, 421, 225, 484, 443, 681, 673,
	634, 685, 636, 682, 683, 631, 632, 635, 684, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 676, 621,
	620, 0, 627, 628, 0, 637, 638, 640, 646, 647,
	648, 656, 658, 659, 657, 660, 661, 662, 665, 666,
	667, 668, 663, 664, 669, 619, 191, 207, 335, 86,
	409, 268, 514, 493, 489, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	415, 423, 424, 425, 426, 427, 430, 431, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 472, 483, 497,
	502, 429, 278, 479, 503, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 492, 449, 212, 417, 270, 201,
	231, 215, 239, 254, 257, 296, 354, 361, 390, 395,
	275, 251, 229, 414, 226, 433, 455, 456, 457, 459,
	358, 246, 394, 0, 359, 342, 461, 462, 288, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 618, 0, 0, 0,
	250, 623, 0, 0, 0, 333, 247, 0, 0, 391,
	0, 197, 0, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 630, 337, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 374, 445, 266, 0, 87, 0, 0, 188, 189,
	190, 691, 698, 699, 700, 701, 702, 692, 694, 0,
	0, 223, 693, 230, 641, 643, 642, 649, 650, 651,
	652, 653, 654, 655, 639, 696, 703, 704, 0, 245,
	293, 252, 244, 464, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 601, 615, 0, 629,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 613,
	0, 0, 0, 0, 675, 0, 614, 0, 0, 622,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 363, 237, 0, 674, 0, 0,
	499, 0, 0, 672, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 373, 416, 422, 0, 0,
	0, 235, 0, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 2893, 0, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 478, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 0,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 644, 645, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 0, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 368,
	286, 442, 302, 339, 0, 0, 386, 421, 225, 484,
	443, 681, 673, 634, 685, 636, 682, 683, 631, 632,
	635, 684, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 676, 621, 620, 0, 627, 628, 0, 637, 638,
	640, 646, 647, 648, 656, 658, 659, 657, 660, 661,
	662, 665, 666, 667, 668, 663, 664, 669, 619, 191,
	207, 335, 0, 409, 268, 514, 493, 489, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 278, 479, 503, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 342, 461,
	462, 288, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 618,
	0, 0, 0, 250, 623, 0, 0, 0, 333, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 343, 340,
	467, 262, 253, 249, 233, 289, 349, 389, 454, 383,
	630, 337, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 374, 445, 266, 0, 87, 0,
	1317, 188, 189, 190, 691, 698, 699, 700, 701, 702,
	692, 694, 0, 0, 223, 693, 230, 641, 643, 642,
	649, 650, 651, 652, 653, 654, 655, 639, 696, 703,
	704, 0, 245, 293, 252, 244, 464, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 601,
	615, 0, 629, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 613, 0, 0, 0, 0, 675, 0, 614,
	0, 0, 622, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 363, 237, 0,
	674, 0, 0, 499, 0, 0, 672, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 373, 416,
	422, 0, 0, 0, 235, 0, 420, 387, 482, 218,
	264, 413, 393, 418, 400, 267, 0, 0, 419, 338,
	469, 407, 480, 500, 501, 243, 367, 490, 458, 496,
	513, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	300, 440, 274, 195, 336, 506, 209, 428, 227, 216,
	471, 488, 269, 411, 202, 453, 478, 224, 432, 0,
	0, 515, 204, 476, 450, 356, 297, 298, 203, 0,
	412, 248, 272, 238, 376, 473, 474, 236, 516, 213,
	495, 206, 0, 494, 369, 468, 477, 357, 348, 205,
	475, 355, 347, 303, 644, 645, 260, 283, 405, 341,
	406, 284, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 517, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 380, 404, 402, 408, 0,
	463, 481, 491, 498, 504, 505, 507, 508, 509, 510,
	512, 511, 368, 286, 442, 302, 339, 0, 0, 386,
	421, 225, 484, 443, 681, 673, 634, 685, 636, 682,
	683, 631, 632, 635, 684, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 676, 621, 620, 0, 627, 628,
	0, 637, 638, 640, 646, 647, 648, 656, 658, 659,
	657, 660, 661, 662, 665, 666, 667, 668, 663, 664,
	669, 619, 191, 207, 335, 0, 409, 268, 514, 493,
	489, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 415, 423, 424, 425,
	426, 427, 430, 431, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 472, 483, 497, 502, 429, 278, 479,
	503, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	492, 449, 212, 417, 270, 201, 231, 215, 239, 254,
	257, 296, 354, 361, 390, 395, 275, 251, 229, 414,
	226, 433, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 342, 461, 462, 288, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 618, 0, 0, 0, 250, 623, 0, 0,
	0, 333, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 630, 337, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 374, 445, 266,
	0, 87, 0, 0, 188, 189, 190, 691, 698, 699,
	700, 701, 702, 692, 694, 0, 0, 223, 693, 230,
	641, 643, 642, 649, 650, 651, 652, 653, 654, 655,
	639, 696, 703, 704, 0, 245, 293, 252, 244, 464,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 601, 615, 0, 629, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 613, 786, 0, 0, 0,
	675, 0, 614, 0, 0, 622, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	363, 237, 0, 674, 0, 0, 499, 0, 0, 672,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 373, 416, 422, 0, 0, 0, 235, 0, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 0,
	0, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 0, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 644, 645, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 0, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	0, 0, 386, 421, 225, 484, 443, 681, 673, 634,
	685, 636, 682, 683, 631, 632, 635, 684, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 676, 621, 620,
	0, 627, 628, 0, 637, 638, 640, 646, 647, 648,
	656, 658, 659, 657, 660, 661, 662, 665, 666, 667,
	668, 663, 664, 669, 619, 191, 207, 335, 0, 409,
	268, 514, 493, 489, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 342, 461, 462, 288, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 618, 0, 0, 0, 250,
	623, 0, 0, 0, 333, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 343, 340, 467, 262, 253, 249,
	233, 289, 349, 389, 454, 383, 630, 337, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	691, 698, 699, 700, 701, 702, 692, 694, 0, 0,
	223, 693, 230, 641, 643, 642, 649, 650, 651, 652,
	653, 654, 655, 639, 696, 703, 704, 0, 245, 293,
	252, 244, 464, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 601, 615, 0, 629, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 613, 0,
	0, 0, 0, 675, 0, 614, 0, 0, 622, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 363, 237, 0, 674, 0, 0, 499,
	0, 0, 672, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 373, 416, 422, 0, 0, 0,
	235, 0, 420, 387, 482, 218, 264, 413, 393, 418,
	400, 267, 0, 0, 419, 338, 469, 407, 480, 500,
	501, 243, 367, 490, 458, 496, 513, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 300, 440, 274, 195,
	336, 506, 209, 428, 227, 216, 471, 488, 269, 411,
	202, 453, 478, 224, 432, 0, 0, 515, 204, 476,
	450, 356, 297, 298, 203, 0, 412, 248, 272, 238,
	376, 473, 474, 236, 516, 213, 495, 206, 0, 494,
	369, 468, 477, 357, 348, 205, 475, 355, 347, 303,
	644, 645, 260, 283, 405, 341, 406, 284, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 517, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 380, 404, 402, 408, 0, 463, 481, 491, 498,
	504, 505, 507, 508, 509, 510, 512, 511, 368, 286,
	442, 302, 339, 0, 0, 386, 421, 225, 484, 443,
	681, 673, 634, 685, 636, 682, 683, 631, 632, 635,
	684, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	676, 621, 620, 0, 627, 628, 0, 637, 638, 640,
	646, 647, 648, 656, 658, 659, 657, 660, 661, 662,
	665, 666, 667, 668, 663, 664, 669, 619, 191, 207,
	335, 0, 409, 268, 514, 493, 489, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 415, 423, 424, 425, 426, 427, 430, 431,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 472,
	483, 497, 502, 429, 278, 479, 503, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 492, 449, 212, 417,
	270, 201, 231, 215, 239, 254, 257, 296, 354, 361,
	390, 395, 275, 251, 229, 414, 226, 433, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 342, 461, 462,
	288, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 618, 0,
	0, 0, 250, 623, 0, 0, 0, 333, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 630,
	337, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 374, 445, 266, 0, 87, 0, 0,
	188, 189, 190, 691, 698, 699, 700, 701, 702, 692,
	694, 0, 0, 223, 693, 230, 641, 643, 642, 649,
	650, 651, 652, 653, 654, 655, 639, 696, 703, 704,
	0, 245, 293, 252, 244, 464, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 629, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	612, 613, 0, 0, 0, 0, 675, 0, 614, 0,
	0, 622, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 363, 237, 0, 674,
	0, 0, 499, 0, 0, 672, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 373, 416, 422,
	0, 0, 0, 235, 0, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 0, 0, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 0, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 644, 645, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 0, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 0, 0, 386, 421,
	225, 484, 443, 681, 673, 634, 685, 636, 682, 683,
	631, 632, 635, 684, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 676, 621, 620, 0, 627, 628, 0,
	637, 638, 640, 646, 647, 648, 656, 658, 659, 657,
	660, 661, 662, 665, 666, 667, 668, 663, 664, 669,
	619, 191, 207, 335, 0, 409, 268, 514, 493, 489,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	342, 461, 462, 288, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	343, 340, 467, 262, 253, 249, 233, 289, 349, 389,
	454, 383, 0, 337, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 698, 699, 0,
	0, 0, 0, 1661, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 464, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 363,
	237, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	373, 416, 422, 0, 0, 0, 235, 0, 420, 387,
	482, 218, 264, 413, 393, 418, 400, 267, 0, 0,
	419, 338, 469, 407, 480, 500, 501, 243, 367, 490,
	458, 496, 513, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 300, 440, 274, 195, 336, 506, 209, 428,
	227, 216, 471, 488, 269, 411, 202, 453, 478, 224,
	432, 0, 0, 515, 204, 476, 450, 356, 297, 298,
	203, 0, 412, 248, 272, 238, 376, 473, 474, 236,
	516, 213, 495, 206, 0, 494, 369, 468, 477, 357,
	348, 205, 475, 355, 347, 303, 322, 323, 260, 283,
	405, 341, 406, 284, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 517, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 380, 404, 402,
	408, 0, 463, 481, 491, 498, 504, 505, 507, 508,
	509, 510, 512, 511, 368, 286, 442, 302, 339, 0,
	0, 386, 421, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 409, 268,
	514, 493, 489, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 415, 423,
	424, 425, 426, 427, 430, 431, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 472, 483, 497, 502, 429,
	278, 479, 503, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 492, 449, 212, 417, 270, 201, 231, 215,
	239, 254, 257, 296, 354, 361, 390, 395, 275, 251,
	229, 414, 226, 433, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 342, 461, 462, 288, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 343, 340, 467, 262, 253, 249, 233,
	289, 349, 389, 454, 383, 0, 337, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 464, 0, 0, 0, 0, 214, 0, 1002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 363, 237, 0, 0, 0, 1001, 499, 0,
	0, 0, 0, 0, 998, 999, 332, 959, 301, 192,
	210, 992, 996, 373, 416, 422, 0, 0, 0, 235,
	0, 420, 387, 482, 218, 264, 413, 393, 418, 400,
	267, 0, 0, 419, 338, 469, 407, 480, 500, 501,
	243, 367, 490, 458, 496, 513, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 300, 440, 274, 195, 336,
	506, 209, 428, 227, 216, 471, 488, 269, 411, 202,
	453, 478, 224, 432, 0, 0, 515, 204, 476, 450,
	356, 297, 298, 203, 0, 412, 248, 272, 238, 376,
	473, 474, 236, 516, 213, 495, 206, 0, 494, 369,
	468, 477, 357, 348, 205, 475, 355, 347, 303, 322,
	323, 260, 283, 405, 341, 406, 284, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 517, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	380, 404, 402, 408, 0, 463, 481, 491, 498, 504,
	505, 507, 508, 509, 510, 512, 511, 368, 286, 442,
	302, 339, 0, 0, 386, 421, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 409, 268, 514, 493, 489, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 415, 423, 424, 425, 426, 427, 430, 431, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 472, 483,
	497, 502, 429, 278, 479, 503, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 492, 449, 212, 417, 270,
	201, 231, 215, 239, 254, 257, 296, 354, 361, 390,
	395, 275, 251, 229, 414, 226, 433, 455, 456, 457,
	459, 358, 246, 394, 0, 1336, 342, 461, 462, 288,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 1338, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 343, 340, 467, 262,
	253, 249, 233, 289, 349, 389, 454, 383, 0, 337,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 464, 0, 0, 0, 0, 214,
	0, 0, 0, 1172, 0, 1173, 1174, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 363, 237, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 373, 416, 422, 0,
	0, 0, 235, 0, 420, 387, 482, 218, 264, 413,
	393, 418, 400, 267, 0, 0, 419, 338, 469, 407,
	480, 500, 501, 243, 367, 490, 458, 496, 513, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 300, 440,
	274, 195, 336, 506, 209, 428, 227, 216, 471, 488,
	269, 411, 202, 453, 478, 224, 432, 0, 0, 515,
	204, 476, 450, 356, 297, 298, 203, 0, 412, 248,
	272, 238, 376, 473, 474, 236, 516, 213, 495, 206,
	0, 494, 369, 468, 477, 357, 348, 205, 475, 355,
	347, 303, 322, 323, 260, 283, 405, 341, 406, 284,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	517, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 380, 404, 402, 408, 0, 463, 481,
	491, 498, 504, 505, 507, 508, 509, 510, 512, 511,
	368, 286, 442, 302, 339, 0, 0, 386, 421, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 409, 268, 514, 493, 489, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 415, 423, 424, 425, 426, 427,
	430, 431, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 472, 483, 497, 502, 429, 278, 479, 503, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 492, 449,
	212, 417, 270, 201, 231, 215, 239, 254, 257, 296,
	354, 361, 390, 395, 275, 251, 229, 414, 226, 433,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 342,
	461, 462, 288, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 343,
	340, 467, 262, 253, 249, 233, 289, 349, 389, 454,
	383, 0, 337, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 1279, 1282, 0, 0, 0,
	0, 1278, 1281, 0, 0, 223, 1277, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 464, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 363, 237,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 373,
	416, 422, 0, 0, 0, 235, 0, 420, 387, 482,
	218, 264, 413, 393, 418, 400, 267, 0, 0, 419,
	338, 469, 407, 480, 500, 501, 243, 367, 490, 458,
	496, 513, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 300, 440, 274, 195, 336, 506, 209, 428, 227,
	216, 471, 488, 269, 411, 202, 453, 478, 224, 432,
	0, 0, 515, 204, 476, 450, 356, 297, 298, 203,
	0, 412, 248, 272, 238, 376, 473, 474, 236, 516,
	213, 495, 206, 0, 494, 369, 468, 477, 357, 348,
	205, 475, 355, 347, 303, 322, 323, 260, 283, 405,
	341, 406, 284, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 517, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 380, 404, 402, 408,
	0, 463, 481, 491, 498, 504, 505, 507, 508, 509,
	510, 512, 511, 368, 286, 442, 302, 339, 0, 0,
	386, 421, 225, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 409, 268, 514,
	493, 489, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 415, 423, 424,
	425, 426, 427, 430, 431, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 472, 483, 497, 502, 429, 278,
	479, 503, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 492, 449, 212, 417, 270, 201, 231, 215, 239,
	254, 257, 296, 354, 361, 390, 395, 275, 251, 229,
	414, 226, 433, 455, 456, 457, 459, 358, 246, 394,
	0, 0, 342, 461, 462, 288, 359, 0, 0, 0,
	78, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 0,
	337, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 374, 445, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 464, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 363, 237, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 373, 416, 422,
	0, 0, 0, 235, 0, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 0, 0, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 0, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 0, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 0, 0, 386, 421,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 86, 409, 268, 514, 493, 489,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 0, 0,
	342, 461, 462, 288, 359, 0, 0, 0, 78, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 391,
	0, 197, 0, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 0, 337, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 374, 445, 266, 0, 87, 0, 1317, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 464, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 363, 237, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 373, 416, 422, 0, 0,
	0, 235, 0, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 0, 0, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 478, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 0,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 322, 323, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 0, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 368,
	286, 442, 302, 339, 0, 0, 386, 421, 225, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 86, 409, 268, 514, 493, 489, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 278, 479, 503, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 342, 461,
	462, 288, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 1765, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 343, 340,
	467, 262, 253, 249, 233, 289, 349, 389, 454, 383,
	0, 337, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 464, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 363, 237, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 373, 416,
	422, 0, 0, 0, 235, 0, 420, 387, 482, 218,
	264, 413, 393, 418, 400, 267, 0, 1763, 419, 338,
	469, 407, 480, 500, 501, 243, 367, 490, 458, 496,
	513, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	300, 440, 274, 195, 336, 506, 209, 428, 227, 216,
	471, 488, 269, 411, 202, 453, 478, 224, 432, 0,
	0, 515, 204, 476, 450, 356, 297, 298, 203, 0,
	412, 248, 272, 238, 376, 473, 474, 236, 516, 213,
	495, 206, 0, 494, 369, 468, 477, 357, 348, 205,
	475, 355, 347, 303, 322, 323, 260, 283, 405, 341,
	406, 284, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 517, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 380, 404, 402, 408, 0,
	463, 481, 491, 498, 504, 505, 507, 508, 509, 510,
	512, 511, 368, 286, 442, 302, 339, 0, 0, 386,
	421, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 409, 268, 514, 493,
	489, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 415, 423, 424, 425,
	426, 427, 430, 431, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 472, 483, 497, 502, 429, 278, 479,
	503, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	492, 449, 212, 417, 270, 201, 231, 215, 239, 254,
	257, 296, 354, 361, 390, 395, 275, 251, 229, 414,
	226, 433, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 342, 461, 462, 288, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 0, 337, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 464,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	363, 237, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 332, 959, 301, 192, 210, 957,
	0, 373, 416, 422, 0, 0, 0, 235, 0, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 0,
	0, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 0, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 322, 323, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 0, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	0, 0, 386, 421, 225, 484, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 409,
	268, 514, 493, 489, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 342, 461, 462, 288, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 1765, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 343, 340, 467, 262, 253, 249,
	233, 289, 349, 389, 454, 383, 0, 337, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 464, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 363, 237, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 373, 416, 422, 0, 0, 0,
	235, 0, 420, 387, 482, 218, 264, 413, 393, 418,
	400, 267, 0, 0, 419, 338, 469, 407, 480, 500,
	501, 243, 367, 490, 458, 496, 513, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 300, 440, 274, 195,
	336, 506, 209, 428, 227, 216, 471, 488, 269, 411,
	202, 453, 478, 224, 432, 0, 0, 515, 204, 476,
	450, 356, 297, 298, 203, 0, 412, 248, 272, 238,
	376, 473, 474, 236, 516, 213, 495, 206, 0, 494,
	369, 468, 477, 357, 348, 205, 475, 355, 347, 303,
	322, 323, 260, 283, 405, 341, 406, 284, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 517, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 380, 404, 402, 408, 0, 463, 481, 491, 498,
	504, 505, 507, 508, 509, 510, 512, 511, 368, 286,
	442, 302, 339, 0, 0, 386, 421, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 409, 268, 514, 493, 489, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 415, 423, 424, 425, 426, 427, 430, 431,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 472,
	483, 497, 502, 429, 278, 479, 503, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 492, 449, 212, 417,
	270, 201, 231, 215, 239, 254, 257, 296, 354, 361,
	390, 395, 275, 251, 229, 414, 226, 433, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 342, 461, 462,
	288, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 0,
	337, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 374, 445, 266, 0, 0, 0, 1317,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 464, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 363, 237, 0, 0,
	0, 0, 499, 0, 0, 0, 2821, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 373, 416, 422,
	0, 0, 0, 235, 0, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 0, 0, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 0, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 0, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 0, 0, 386, 421,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 409, 268, 514, 493, 489,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	342, 461, 462, 288, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	343, 340, 467, 262, 253, 249, 233, 289, 349, 389,
	454, 383, 0, 337, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 374, 445, 266, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 464, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 363,
	237, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	373, 416, 422, 0, 0, 0, 235, 0, 420, 387,
	482, 218, 264, 413, 393, 418, 400, 267, 0, 0,
	419, 338, 469, 407, 480, 500, 501, 243, 367, 490,
	458, 496, 513, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 300, 440, 274, 195, 336, 506, 209, 428,
	227, 216, 471, 488, 269, 411, 202, 453, 478, 224,
	432, 0, 0, 515, 204, 476, 450, 356, 297, 298,
	203, 0, 412, 248, 272, 238, 376, 473, 474, 236,
	516, 213, 495, 206, 0, 494, 369, 468, 477, 357,
	348, 205, 475, 355, 347, 303, 322, 323, 260, 283,
	405, 341, 406, 284, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 517, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 380, 404, 402,
	408, 0, 463, 481, 491, 498, 504, 505, 507, 508,
	509, 510, 512, 511, 368, 286, 442, 302, 339, 0,
	0, 386, 421, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 409, 268,
	514, 493, 489, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 415, 423,
	424, 425, 426, 427, 430, 431, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 472, 483, 497, 502, 429,
	278, 479, 503, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 492, 449, 212, 417, 270, 201, 231, 215,
	239, 254, 257, 296, 354, 361, 390, 395, 275, 251,
	229, 414, 226, 433, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 342, 461, 462, 288, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 343, 340, 467, 262, 253, 249, 233,
	289, 349, 389, 454, 383, 0, 337, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 464, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 363, 237, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 373, 416, 422, 0, 0, 0, 235,
	0, 420, 387, 482, 218, 264, 413, 393, 418, 400,
	267, 0, 0, 419, 338, 469, 407, 480, 500, 501,
	243, 367, 490, 458, 496, 513, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 300, 440, 274, 195, 336,
	506, 209, 428, 227, 216, 471, 488, 269, 411, 202,
	453, 478, 224, 432, 0, 0, 515, 204, 476, 450,
	356, 297, 298, 203, 0, 412, 248, 272, 238, 376,
	473, 474, 236, 516, 213, 495, 206, 0, 494, 369,
	468, 477, 357, 348, 205, 475, 355, 347, 303, 322,
	323, 260, 283, 405, 341, 406, 284, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 517, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	380, 404, 402, 408, 0, 463, 481, 491, 498, 504,
	505, 507, 508, 509, 510, 512, 511, 368, 286, 442,
	302, 339, 0, 0, 386, 421, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 409, 268, 514, 493, 489, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 415, 423, 424, 425, 426, 427, 430, 431, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 472, 483,
	497, 502, 429, 278, 479, 503, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 492, 449, 212, 417, 270,
	201, 231, 215, 239, 254, 257, 296, 354, 361, 390,
	395, 275, 251, 229, 414, 226, 433, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 342, 461, 462, 288,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 343, 340, 467, 262,
	253, 249, 233, 289, 349, 389, 454, 383, 0, 337,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 464, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 363, 237, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 373, 416, 422, 0,
	0, 0, 235, 0, 420, 387, 482, 218, 264, 413,
	393, 418, 400, 267, 0, 0, 419, 338, 469, 407,
	480, 500, 501, 243, 367, 490, 458, 496, 513, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 300, 440,
	274, 195, 336, 506, 209, 428, 227, 216, 471, 488,
	269, 411, 202, 453, 478, 224, 432, 0, 0, 515,
	204, 476, 450, 356, 297, 298, 203, 0, 412, 248,
	272, 238, 376, 473, 474, 236, 516, 213, 495, 206,
	0, 494, 369, 468, 477, 357, 348, 205, 475, 355,
	347, 303, 322, 323, 260, 283, 405, 341, 406, 284,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	517, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 380, 404, 402, 408, 0, 463, 481,
	491, 498, 504, 505, 507, 508, 509, 510, 512, 511,
	368, 286, 442, 302, 339, 0, 0, 386, 421, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 409, 268, 514, 493, 489, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 415, 423, 424, 425, 426, 427,
	430, 431, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 472, 483, 497, 502, 429, 278, 479, 503, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 492, 449,
	212, 417, 270, 201, 231, 215, 239, 254, 257, 296,
	354, 361, 390, 395, 275, 251, 229, 414, 226, 433,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 342,
	461, 462, 288, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 343,
	340, 467, 262, 253, 249, 233, 289, 349, 389, 454,
	383, 0, 337, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 2083, 0,
	0, 0, 2084, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 464, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 363, 237,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 373,
	416, 422, 0, 0, 0, 235, 0, 420, 387, 482,
	218, 264, 413, 393, 418, 400, 267, 0, 0, 419,
	338, 469, 407, 480, 500, 501, 243, 367, 490, 458,
	496, 513, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 300, 440, 274, 195, 336, 506, 209, 428, 227,
	216, 471, 488, 269, 411, 202, 453, 478, 224, 432,
	0, 0, 515, 204, 476, 450, 356, 297, 298, 203,
	0, 412, 248, 272, 238, 376, 473, 474, 236, 516,
	213, 495, 206, 0, 494, 369, 468, 477, 357, 348,
	205, 475, 355, 347, 303, 322, 323, 260, 283, 405,
	341, 406, 284, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 517, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 380, 404, 402, 408,
	0, 463, 481, 491, 498, 504, 505, 507, 508, 509,
	510, 512, 511, 368, 286, 442, 302, 339, 0, 0,
	386, 421, 225, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 409, 268, 514,
	493, 489, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 415, 423, 424,
	425, 426, 427, 430, 431, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 472, 483, 497, 502, 429, 278,
	479, 503, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 492, 449, 212, 417, 270, 201, 231, 215, 239,
	254, 257, 296, 354, 361, 390, 395, 275, 251, 229,
	414, 226, 433, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 342, 461, 462, 288, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 1361, 0,
	0, 0, 333, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 343, 340, 467, 262, 253, 249, 233, 289,
	349, 389, 454, 383, 0, 337, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	464, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 363, 237, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 373, 416, 422, 0, 0, 0, 235, 0,
	420, 387, 482, 218, 264, 413, 393, 418, 400, 267,
	0, 0, 419, 338, 469, 407, 480, 500, 501, 243,
	367, 490, 458, 496, 513, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 300, 440, 274, 195, 336, 506,
	209, 428, 227, 216, 471, 488, 269, 411, 202, 453,
	478, 224, 432, 0, 0, 515, 204, 476, 450, 356,
	297, 298, 203, 0, 412, 248, 272, 238, 376, 473,
	474, 236, 516, 213, 495, 206, 0, 494, 369, 468,
	477, 357, 348, 205, 475, 355, 347, 303, 322, 323,
	260, 283, 405, 341, 406, 284, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 517, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 380,
	404, 402, 408, 0, 463, 481, 491, 498, 504, 505,
	507, 508, 509, 510, 512, 511, 368, 286, 442, 302,
	339, 0, 0, 386, 421, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	409, 268, 514, 493, 489, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	415, 423, 424, 425, 426, 427, 430, 431, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 472, 483, 497,
	502, 429, 278, 479, 503, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 492, 449, 212, 417, 270, 201,
	231, 215, 239, 254, 257, 296, 354, 361, 390, 395,
	275, 251, 229, 414, 226, 433, 455, 456, 457, 459,
	358, 246, 394, 0, 359, 342, 461, 462, 288, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 391,
	0, 197, 0, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 0, 337, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 464, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 363, 237, 0, 0, 0, 0,
	499, 0, 0, 0, 2914, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 373, 416, 422, 0, 0,
	0, 235, 0, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 0, 0, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 478, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 0,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 322, 323, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 0, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 368,
	286, 442, 302, 339, 0, 0, 386, 421, 225, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 0, 409, 268, 514, 493, 489, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 278, 479, 503, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 342, 461,
	462, 288, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 343, 340,
	467, 262, 253, 249, 233, 289, 349, 389, 454, 383,
	0, 337, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 464, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 363, 237, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 373, 416,
	422, 0, 0, 0, 235, 0, 420, 387, 482, 218,
	264, 413, 393, 418, 400, 267, 0, 0, 419, 338,
	469, 407, 480, 500, 501, 243, 367, 490, 458, 496,
	513, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	300, 440, 274, 195, 336, 506, 209, 428, 227, 216,
	471, 488, 269, 411, 202, 453, 478, 224, 432, 0,
	0, 515, 204, 476, 450, 356, 297, 298, 203, 0,
	412, 248, 272, 238, 376, 473, 474, 236, 516, 213,
	495, 206, 0, 494, 369, 468, 477, 357, 348, 205,
	475, 355, 347, 303, 322, 323, 260, 283, 405, 341,
	406, 284, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 517, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 380, 404, 402, 408, 0,
	463, 481, 491, 498, 504, 505, 507, 508, 509, 510,
	512, 511, 368, 286, 442, 302, 339, 0, 0, 386,
	421, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 409, 268, 514, 493,
	489, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 415, 423, 424, 425,
	426, 427, 430, 431, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 472, 483, 497, 502, 429, 278, 479,
	503, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	492, 449, 212, 417, 270, 201, 231, 215, 239, 254,
	257, 296, 354, 361, 390, 395, 275, 251, 229, 414,
	226, 433, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 342, 461, 462, 288, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 0, 337, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 464,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	363, 237, 0, 0, 0, 0, 499, 0, 0, 0,
	2821, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 373, 416, 422, 0, 0, 0, 235, 0, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 0,
	0, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 0, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 322, 323, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 0, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	0, 0, 386, 421, 225, 484, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 409,
	268, 514, 493, 489, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 342, 461, 462, 288, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 343, 340, 467, 262, 253, 249,
	233, 289, 349, 389, 454, 383, 0, 337, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 464, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 363, 237, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 373, 416, 422, 0, 0, 0,
	235, 0, 420, 387, 482, 218, 264, 413, 393, 418,
	400, 267, 0, 0, 419, 338, 469, 407, 480, 500,
	501, 243, 367, 490, 458, 496, 513, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 300, 440, 274, 195,
	336, 506, 209, 428, 227, 216, 471, 488, 269, 411,
	202, 453, 478, 224, 432, 0, 0, 515, 204, 476,
	450, 356, 297, 298, 203, 0, 412, 248, 272, 238,
	376, 473, 474, 236, 516, 213, 495, 206, 0, 494,
	369, 468, 477, 357, 348, 205, 475, 355, 347, 303,
	322, 323, 260, 283, 405, 341, 406, 284, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 517, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 380, 404, 402, 408, 0, 463, 481, 491, 498,
	504, 505, 507, 508, 509, 510, 512, 511, 368, 286,
	442, 302, 339, 0, 0, 386, 421, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 409, 268, 514, 493, 489, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 415, 423, 424, 425, 426, 427, 430, 431,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 472,
	483, 497, 502, 429, 278, 479, 503, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 492, 449, 212, 417,
	270, 201, 231, 215, 239, 254, 257, 296, 354, 361,
	390, 395, 275, 251, 229, 414, 226, 433, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 342, 461, 462,
	288, 460, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 0,
	337, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 464, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 363, 237, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 373, 416, 422,
	0, 0, 0, 235, 0, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 0, 0, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 0, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 0, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 0, 0, 386, 421,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 409, 268, 514, 493, 489,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	342, 461, 462, 288, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	343, 340, 467, 262, 253, 249, 233, 289, 349, 389,
	454, 383, 0, 337, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 464, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 363,
	237, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	373, 416, 422, 0, 0, 0, 235, 0, 420, 387,
	482, 218, 264, 413, 393, 418, 400, 267, 0, 0,
	419, 338, 469, 407, 480, 500, 501, 243, 367, 490,
	458, 496, 513, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 300, 440, 274, 195, 336, 506, 209, 428,
	227, 216, 471, 488, 269, 411, 202, 453, 478, 224,
	432, 0, 0, 515, 204, 476, 450, 356, 297, 298,
	203, 0, 412, 248, 272, 238, 376, 473, 474, 236,
	516, 213, 495, 206, 0, 494, 369, 468, 477, 357,
	348, 205, 475, 355, 347, 303, 322, 323, 260, 283,
	405, 341, 406, 284, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 517, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 380, 404, 402,
	408, 0, 463, 481, 491, 498, 504, 505, 507, 508,
	509, 510, 512, 511, 368, 286, 442, 302, 339, 0,
	0, 386, 421, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 409, 268,
	514, 493, 489, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 415, 423,
	424, 425, 426, 427, 430, 431, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 472, 483, 497, 502, 429,
	278, 479, 503, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 492, 449, 212, 417, 270, 201, 231, 215,
	239, 254, 257, 296, 354, 361, 390, 395, 275, 251,
	229, 414, 226, 433, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 342, 461, 462, 288, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 343, 340, 467, 262, 253, 249, 233,
	289, 349, 389, 454, 383, 0, 337, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 464, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 363, 237, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 373, 416, 422, 0, 0, 0, 235,
	0, 420, 387, 482, 218, 264, 413, 393, 418, 400,
	267, 0, 0, 419, 338, 469, 407, 480, 500, 501,
	243, 367, 490, 458, 496, 513, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 300, 440, 274, 195, 336,
	506, 209, 428, 227, 216, 471, 488, 269, 411, 202,
	453, 478, 224, 432, 0, 0, 515, 204, 476, 450,
	356, 297, 298, 203, 0, 412, 248, 272, 238, 376,
	473, 474, 236, 516, 213, 495, 206, 0, 494, 369,
	468, 477, 357, 348, 205, 475, 355, 347, 303, 322,
	323, 260, 283, 405, 341, 406, 284, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 517, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	380, 404, 402, 408, 0, 463, 481, 491, 498, 504,
	505, 507, 508, 509, 510, 512, 511, 368, 286, 442,
	302, 339, 0, 0, 386, 421, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 409, 268, 514, 493, 489, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 415, 423, 424, 425, 426, 427, 430, 431, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 472, 483,
	497, 502, 429, 278, 479, 503, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 492, 449, 212, 417, 270,
	201, 231, 215, 239, 254, 257, 296, 354, 361, 390,
	395, 275, 251, 229, 414, 226, 433, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 342, 461, 462, 288,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 343, 340, 467, 262,
	253, 249, 233, 289, 349, 389, 454, 383, 0, 337,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 464, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 363, 237, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 373, 416, 422, 0,
	0, 0, 235, 0, 420, 387, 482, 218, 264, 413,
	393, 418, 400, 267, 0, 0, 419, 338, 469, 407,
	480, 500, 501, 243, 367, 490, 458, 496, 513, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 300, 440,
	274, 195, 336, 506, 209, 428, 227, 216, 471, 488,
	269, 411, 202, 453, 478, 224, 432, 0, 0, 515,
	204, 476, 450, 356, 297, 298, 203, 0, 412, 248,
	272, 238, 376, 473, 474, 236, 516, 213, 495, 206,
	0, 494, 369, 468, 477, 357, 348, 205, 475, 355,
	347, 303, 322, 323, 260, 283, 405, 341, 406, 284,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	517, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 380, 404, 402, 408, 0, 463, 481,
	491, 498, 504, 505, 507, 508, 509, 510, 512, 511,
	368, 286, 442, 302, 339, 0, 0, 386, 421, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 1612, 409, 268, 514, 493, 489, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 415, 423, 424, 425, 426, 427,
	430, 431, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 472, 483, 497, 502, 429, 278, 479, 503, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 492, 449,
	212, 417, 270, 201, 231, 215, 239, 254, 257, 296,
	354, 361, 390, 395, 275, 251, 229, 414, 226, 433,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 342,
	461, 462, 288, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 1486, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 343,
	340, 467, 262, 253, 249, 233, 289, 349, 389, 454,
	383, 0, 337, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 464, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 363, 237,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 373,
	416, 422, 0, 0, 0, 235, 0, 420, 387, 482,
	218, 264, 413, 393, 418, 400, 267, 0, 0, 419,
	338, 469, 407, 480, 500, 501, 243, 367, 490, 458,
	496, 513, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 300, 440, 274, 195, 336, 506, 209, 428, 227,
	216, 471, 488, 269, 411, 202, 453, 478, 224, 432,
	0, 0, 515, 204, 476, 450, 356, 297, 298, 203,
	0, 412, 248, 272, 238, 376, 473, 474, 236, 516,
	213, 495, 206, 0, 494, 369, 468, 477, 357, 348,
	205, 475, 355, 347, 303, 322, 323, 260, 283, 405,
	341, 406, 284, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 517, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 380, 404, 402, 408,
	0, 463, 481, 491, 498, 504, 505, 507, 508, 509,
	510, 512, 511, 368, 286, 442, 302, 339, 0, 0,
	386, 421, 225, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 409, 268, 514,
	493, 489, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 415, 423, 424,
	425, 426, 427, 430, 431, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 472, 483, 497, 502, 429, 278,
	479, 503, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 492, 449, 212, 417, 270, 201, 231, 215, 239,
	254, 257, 296, 354, 361, 390, 395, 275, 251, 229,
	414, 226, 433, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 342, 461, 462, 288, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	1484, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 343, 340, 467, 262, 253, 249, 233, 289,
	349, 389, 454, 383, 0, 337, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	464, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 363, 237, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 373, 416, 422, 0, 0, 0, 235, 0,
	420, 387, 482, 218, 264, 413, 393, 418, 400, 267,
	0, 0, 419, 338, 469, 407, 480, 500, 501, 243,
	367, 490, 458, 496, 513, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 300, 440, 274, 195, 336, 506,
	209, 428, 227, 216, 471, 488, 269, 411, 202, 453,
	478, 224, 432, 0, 0, 515, 204, 476, 450, 356,
	297, 298, 203, 0, 412, 248, 272, 238, 376, 473,
	474, 236, 516, 213, 495, 206, 0, 494, 369, 468,
	477, 357, 348, 205, 475, 355, 347, 303, 322, 323,
	260, 283, 405, 341, 406, 284, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 517, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 380,
	404, 402, 408, 0, 463, 481, 491, 498, 504, 505,
	507, 508, 509, 510, 512, 511, 368, 286, 442, 302,
	339, 0, 0, 386, 421, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	409, 268, 514, 493, 489, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	415, 423, 424, 425, 426, 427, 430, 431, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 472, 483, 497,
	502, 429, 278, 479, 503, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 492, 449, 212, 417, 270, 201,
	231, 215, 239, 254, 257, 296, 354, 361, 390, 395,
	275, 251, 229, 414, 226, 433, 455, 456, 457, 459,
	358, 246, 394, 0, 359, 342, 461, 462, 288, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 1482, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 391,
	0, 197, 0, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 0, 337, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 464, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 363, 237, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 373, 416, 422, 0, 0,
	0, 235, 0, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 0, 0, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 478, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 0,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 322, 323, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 0, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 368,
	286, 442, 302, 339, 0, 0, 386, 421, 225, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 0, 409, 268, 514, 493, 489, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 278, 479, 503, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 342, 461,
	462, 288, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1480, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 343, 340,
	467, 262, 253, 249, 233, 289, 349, 389, 454, 383,
	0, 337, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 464, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 363, 237, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 373, 416,
	422, 0, 0, 0, 235, 0, 420, 387, 482, 218,
	264, 413, 393, 418, 400, 267, 0, 0, 419, 338,
	469, 407, 480, 500, 501, 243, 367, 490, 458, 496,
	513, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	300, 440, 274, 195, 336, 506, 209, 428, 227, 216,
	471, 488, 269, 411, 202, 453, 478, 224, 432, 0,
	0, 515, 204, 476, 450, 356, 297, 298, 203, 0,
	412, 248, 272, 238, 376, 473, 474, 236, 516, 213,
	495, 206, 0, 494, 369, 468, 477, 357, 348, 205,
	475, 355, 347, 303, 322, 323, 260, 283, 405, 341,
	406, 284, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 517, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 380, 404, 402, 408, 0,
	463, 481, 491, 498, 504, 505, 507, 508, 509, 510,
	512, 511, 368, 286, 442, 302, 339, 0, 0, 386,
	421, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 409, 268, 514, 493,
	489, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 415, 423, 424, 425,
	426, 427, 430, 431, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 472, 483, 497, 502, 429, 278, 479,
	503, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	492, 449, 212, 417, 270, 201, 231, 215, 239, 254,
	257, 296, 354, 361, 390, 395, 275, 251, 229, 414,
	226, 433, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 342, 461, 462, 288, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 1478,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 0, 337, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 464,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	363, 237, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 373, 416, 422, 0, 0, 0, 235, 0, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 0,
	0, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 0, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 322, 323, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 0, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	0, 0, 386, 421, 225, 484, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 409,
	268, 514, 493, 489, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 342, 461, 462, 288, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1474, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 343, 340, 467, 262, 253, 249,
	233, 289, 349, 389, 454, 383, 0, 337, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 464, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 363, 237, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 373, 416, 422, 0, 0, 0,
	235, 0, 420, 387, 482, 218, 264, 413, 393, 418,
	400, 267, 0, 0, 419, 338, 469, 407, 480, 500,
	501, 243, 367, 490, 458, 496, 513, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 300, 440, 274, 195,
	336, 506, 209, 428, 227, 216, 471, 488, 269, 411,
	202, 453, 478, 224, 432, 0, 0, 515, 204, 476,
	450, 356, 297, 298, 203, 0, 412, 248, 272, 238,
	376, 473, 474, 236, 516, 213, 495, 206, 0, 494,
	369, 468, 477, 357, 348, 205, 475, 355, 347, 303,
	322, 323, 260, 283, 405, 341, 406, 284, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 517, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 380, 404, 402, 408, 0, 463, 481, 491, 498,
	504, 505, 507, 508, 509, 510, 512, 511, 368, 286,
	442, 302, 339, 0, 0, 386, 421, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 409, 268, 514, 493, 489, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 415, 423, 424, 425, 426, 427, 430, 431,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 472,
	483, 497, 502, 429, 278, 479, 503, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 492, 449, 212, 417,
	270, 201, 231, 215, 239, 254, 257, 296, 354, 361,
	390, 395, 275, 251, 229, 414, 226, 433, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 342, 461, 462,
	288, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 1472, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 0,
	337, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 464, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 363, 237, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 373, 416, 422,
	0, 0, 0, 235, 0, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 0, 0, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 0, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 0, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 0, 0, 386, 421,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 409, 268, 514, 493, 489,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	342, 461, 462, 288, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 1470, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	343, 340, 467, 262, 253, 249, 233, 289, 349, 389,
	454, 383, 0, 337, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 464, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 363,
	237, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	373, 416, 422, 0, 0, 0, 235, 0, 420, 387,
	482, 218, 264, 413, 393, 418, 400, 267, 0, 0,
	419, 338, 469, 407, 480, 500, 501, 243, 367, 490,
	458, 496, 513, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 300, 440, 274, 195, 336, 506, 209, 428,
	227, 216, 471, 488, 269, 411, 202, 453, 478, 224,
	432, 0, 0, 515, 204, 476, 450, 356, 297, 298,
	203, 0, 412, 248, 272, 238, 376, 473, 474, 236,
	516, 213, 495, 206, 0, 494, 369, 468, 477, 357,
	348, 205, 475, 355, 347, 303, 322, 323, 260, 283,
	405, 341, 406, 284, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 517, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 380, 404, 402,
	408, 0, 463, 481, 491, 498, 504, 505, 507, 508,
	509, 510, 512, 511, 368, 286, 442, 302, 339, 0,
	0, 386, 421, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 409, 268,
	514, 493, 489, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 415, 423,
	424, 425, 426, 427, 430, 431, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 472, 483, 497, 502, 429,
	278, 479, 503, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 492, 449, 212, 417, 270, 201, 231, 215,
	239, 254, 257, 296, 354, 361, 390, 395, 275, 251,
	229, 414, 226, 433, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 342, 461, 462, 288, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 343, 340, 467, 262, 253, 249, 233,
	289, 349, 389, 454, 383, 0, 337, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 374,
	445, 266, 0, 1445, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 464, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 363, 237, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 373, 416, 422, 0, 0, 0, 235,
	0, 420, 387, 482, 218, 264, 413, 393, 418, 400,
	267, 0, 0, 419, 338, 469, 407, 480, 500, 501,
	243, 367, 490, 458, 496, 513, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 300, 440, 274, 195, 336,
	506, 209, 428, 227, 216, 471, 488, 269, 411, 202,
	453, 478, 224, 432, 0, 0, 515, 204, 476, 450,
	356, 297, 298, 203, 0, 412, 248, 272, 238, 376,
	473, 474, 236, 516, 213, 495, 206, 0, 494, 369,
	468, 477, 357, 348, 205, 475, 355, 347, 303, 322,
	323, 260, 283, 405, 341, 406, 284, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 517, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	380, 404, 402, 408, 0, 463, 481, 491, 498, 504,
	505, 507, 508, 509, 510, 512, 511, 368, 286, 442,
	302, 339, 0, 0, 386, 421, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 409, 268, 514, 493, 489, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 415, 423, 424, 425, 426, 427, 430, 431, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 472, 483,
	497, 502, 429, 278, 479, 503, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 492, 449, 212, 417, 270,
	201, 231, 215, 239, 254, 257, 296, 354, 361, 390,
	395, 275, 251, 229, 414, 226, 433, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 342, 461, 462, 288,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	1345, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 343, 340, 467, 262,
	253, 249, 233, 289, 349, 389, 454, 383, 0, 337,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 464, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 363, 237, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 373, 416, 422, 0,
	0, 0, 235, 0, 420, 387, 482, 218, 264, 413,
	393, 418, 400, 267, 0, 0, 419, 338, 469, 407,
	480, 500, 501, 243, 367, 490, 458, 496, 513, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 300, 440,
	274, 195, 336, 506, 209, 428, 227, 216, 471, 488,
	269, 411, 202, 453, 478, 224, 432, 0, 0, 515,
	204, 476, 450, 356, 297, 298, 203, 0, 412, 248,
	272, 238, 376, 473, 474, 236, 516, 213, 495, 206,
	0, 494, 369, 468, 477, 357, 348, 205, 475, 355,
	347, 303, 322, 323, 260, 283, 405, 341, 406, 284,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	517, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 380, 404, 402, 408, 0, 463, 481,
	491, 498, 504, 505, 507, 508, 509, 510, 512, 511,
	368, 286, 442, 302, 339, 0, 0, 386, 421, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 409, 268, 514, 493, 489, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 415, 423, 424, 425, 426, 427,
	430, 431, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 472, 483, 497, 502, 429, 278, 479, 503, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 492, 449,
	212, 417, 270, 201, 231, 215, 239, 254, 257, 296,
	354, 361, 390, 395, 275, 251, 229, 414, 226, 433,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 342,
	461, 462, 288, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 343,
	340, 467, 262, 253, 249, 233, 289, 349, 389, 454,
	383, 0, 337, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 464, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 363, 237,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 373,
	416, 422, 0, 0, 0, 235, 0, 420, 387, 482,
	218, 264, 413, 393, 418, 400, 267, 0, 0, 419,
	338, 469, 407, 480, 500, 501, 243, 367, 490, 458,
	496, 513, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 300, 440, 274, 195, 336, 506, 209, 428, 227,
	216, 471, 488, 269, 411, 202, 453, 478, 224, 432,
	0, 0, 515, 204, 476, 450, 356, 297, 298, 203,
	0, 412, 248, 272, 238, 376, 473, 474, 236, 516,
	213, 495, 206, 0, 494, 369, 468, 477, 357, 348,
	205, 475, 355, 347, 303, 322, 323, 260, 283, 405,
	341, 406, 284, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 517, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 380, 404, 402, 408,
	0, 463, 481, 491, 498, 504, 505, 507, 508, 509,
	510, 512, 511, 368, 286, 442, 302, 339, 0, 0,
	386, 421, 225, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 409, 268, 514,
	493, 489, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 415, 423, 424,
	425, 426, 427, 430, 431, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 472, 483, 497, 502, 429, 278,
	479, 503, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 492, 449, 212, 417, 270, 201, 231, 215, 239,
	254, 257, 296, 354, 361, 390, 395, 275, 251, 229,
	414, 226, 433, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 342, 461, 462, 288, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 343, 340, 467, 262, 253, 249, 233, 289,
	349, 389, 454, 383, 0, 337, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	464, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 363, 237, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 373, 416, 422, 0, 0, 0, 235, 0,
	420, 387, 482, 218, 264, 413, 393, 418, 400, 267,
	0, 0, 419, 338, 469, 407, 480, 500, 501, 243,
	367, 490, 458, 496, 513, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 300, 440, 274, 195, 336, 506,
	209, 428, 227, 216, 471, 488, 269, 411, 202, 453,
	478, 224, 432, 0, 0, 515, 204, 476, 450, 356,
	297, 298, 203, 0, 412, 248, 272, 238, 376, 473,
	474, 236, 516, 213, 495, 206, 0, 494, 369, 468,
	477, 357, 348, 205, 475, 355, 347, 303, 322, 323,
	260, 283, 405, 341, 406, 284, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 517, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 380,
	404, 402, 408, 0, 463, 481, 491, 498, 504, 505,
	507, 508, 509, 510, 512, 511, 368, 286, 442, 302,
	339, 0, 0, 386, 421, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	409, 268, 514, 493, 489, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	415, 423, 424, 425, 426, 427, 430, 431, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 472, 483, 497,
	502, 429, 278, 479, 503, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 492, 449, 212, 417, 270, 201,
	231, 215, 239, 254, 257, 296, 354, 361, 390, 395,
	275, 251, 229, 414, 226, 433, 455, 456, 457, 459,
	358, 246, 394, 0, 359, 342, 461, 462, 288, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 391,
	0, 197, 0, 434, 234, 343, 340, 467, 262, 253,
	249, 233, 289, 349, 389, 454, 383, 0, 337, 0,
	0, 444, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 464, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 0, 276, 0, 363, 237, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 373, 416, 422, 0, 0,
	0, 235, 0, 420, 387, 482, 218, 264, 413, 393,
	418, 400, 267, 0, 0, 419, 338, 469, 407, 480,
	500, 501, 243, 367, 490, 458, 496, 513, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 300, 440, 274,
	195, 336, 506, 209, 428, 227, 216, 471, 488, 269,
	411, 202, 453, 478, 224, 432, 0, 0, 515, 204,
	476, 450, 356, 297, 298, 203, 0, 412, 248, 272,
	238, 376, 473, 474, 236, 516, 213, 495, 206, 0,
	494, 369, 468, 477, 357, 348, 205, 475, 355, 347,
	303, 322, 323, 260, 283, 405, 341, 406, 284, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 517,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 380, 404, 402, 408, 0, 463, 481, 491,
	498, 504, 505, 507, 508, 509, 510, 512, 511, 368,
	286, 442, 302, 339, 0, 0, 386, 421, 225, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 0, 409, 268, 514, 493, 489, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 415, 423, 424, 425, 426, 427, 430,
	431, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	472, 483, 497, 502, 429, 592, 479, 503, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 492, 449, 212,
	417, 270, 201, 231, 215, 239, 254, 257, 296, 354,
	361, 390, 395, 275, 251, 229, 414, 226, 433, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 342, 461,
	462, 288, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 343, 340,
	467, 262, 253, 249, 233, 289, 349, 389, 454, 383,
	0, 337, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 464, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 363, 237, 0,
	0, 539, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 373, 416,
	422, 0, 0, 0, 235, 0, 420, 387, 482, 218,
	264, 413, 393, 418, 400, 267, 0, 0, 419, 338,
	469, 407, 480, 500, 501, 243, 367, 490, 458, 496,
	513, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	300, 440, 274, 195, 336, 506, 209, 428, 227, 216,
	471, 488, 269, 411, 202, 453, 478, 224, 432, 0,
	0, 515, 204, 476, 450, 356, 297, 298, 203, 0,
	412, 248, 272, 238, 376, 473, 474, 236, 516, 213,
	495, 206, 0, 494, 369, 468, 477, 357, 348, 205,
	475, 355, 347, 303, 322, 323, 260, 283, 405, 341,
	406, 284, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 517, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 380, 404, 402, 408, 0,
	463, 481, 491, 498, 504, 505, 507, 508, 509, 510,
	512, 511, 368, 286, 442, 302, 339, 0, 0, 386,
	421, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 409, 268, 514, 493,
	489, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 415, 423, 424, 425,
	426, 427, 430, 431, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 472, 483, 497, 502, 429, 278, 479,
	503, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	492, 449, 212, 417, 270, 201, 231, 215, 239, 254,
	257, 296, 354, 361, 390, 395, 275, 251, 229, 414,
	226, 433, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 342, 461, 462, 288, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 343, 340, 467, 262, 253, 249, 233, 289, 349,
	389, 454, 383, 0, 337, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 464,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	363, 237, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 373, 416, 422, 0, 0, 0, 235, 0, 420,
	387, 482, 218, 264, 413, 393, 418, 400, 267, 0,
	0, 419, 338, 469, 407, 480, 500, 501, 243, 367,
	490, 458, 496, 513, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 300, 440, 274, 195, 336, 506, 209,
	428, 227, 216, 471, 488, 269, 411, 202, 453, 478,
	224, 432, 0, 0, 515, 204, 476, 450, 356, 297,
	298, 203, 0, 412, 248, 272, 238, 376, 473, 474,
	236, 516, 213, 495, 206, 0, 494, 369, 468, 477,
	357, 348, 205, 475, 355, 347, 303, 322, 323, 260,
	283, 405, 341, 406, 284, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 517, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 380, 404,
	402, 408, 0, 463, 481, 491, 498, 504, 505, 507,
	508, 509, 510, 512, 511, 368, 286, 442, 302, 339,
	0, 0, 386, 421, 225, 484, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 409,
	268, 514, 493, 489, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 350, 351, 352,
	353, 2919, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 415,
	423, 424, 425, 426, 427, 430, 431, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 472, 483, 497, 502,
	429, 278, 479, 503, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 492, 449, 212, 417, 270, 201, 231,
	215, 239, 254, 257, 296, 354, 361, 390, 395, 275,
	251, 229, 414, 226, 433, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 342, 461, 462, 288, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 343, 340, 467, 262, 253, 249,
	233, 289, 349, 389, 454, 383, 0, 337, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 464, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 363, 237, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 373, 416, 422, 0, 0, 0,
	235, 0, 420, 387, 482, 218, 264, 413, 393, 418,
	400, 267, 0, 0, 419, 338, 469, 407, 480, 500,
	501, 243, 367, 490, 458, 496, 513, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 300, 440, 274, 195,
	336, 506, 209, 428, 227, 216, 471, 488, 269, 411,
	202, 453, 478, 224, 432, 0, 0, 515, 204, 476,
	450, 356, 297, 298, 203, 0, 412, 248, 272, 238,
	376, 473, 474, 236, 516, 213, 495, 206, 0, 494,
	369, 468, 477, 357, 348, 205, 475, 355, 347, 303,
	322, 323, 260, 283, 405, 341, 406, 284, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 517, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 380, 404, 402, 408, 0, 463, 481, 491, 498,
	504, 505, 507, 508, 509, 510, 512, 511, 368, 286,
	442, 302, 339, 0, 0, 386, 421, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 409, 268, 514, 493, 489, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 415, 423, 424, 425, 426, 427, 430, 431,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 472,
	483, 497, 502, 429, 278, 479, 503, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 492, 449, 212, 417,
	270, 201, 231, 215, 239, 254, 257, 296, 354, 361,
	390, 395, 275, 251, 229, 414, 226, 433, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 342, 461, 462,
	288, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 343, 340, 467,
	262, 253, 249, 233, 289, 349, 389, 454, 383, 0,
	337, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 2549, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 464, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 363, 237, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 373, 416, 422,
	0, 0, 0, 235, 0, 420, 387, 482, 218, 264,
	413, 393, 418, 400, 267, 0, 0, 419, 338, 469,
	407, 480, 500, 501, 243, 367, 490, 458, 496, 513,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 300,
	440, 274, 195, 336, 506, 209, 428, 227, 216, 471,
	488, 269, 411, 202, 453, 478, 224, 432, 0, 0,
	515, 204, 476, 450, 356, 297, 298, 203, 0, 412,
	248, 272, 238, 376, 473, 474, 236, 516, 213, 495,
	206, 0, 494, 369, 468, 477, 357, 348, 205, 475,
	355, 347, 303, 322, 323, 260, 283, 405, 341, 406,
	284, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 517, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 380, 404, 402, 408, 0, 463,
	481, 491, 498, 504, 505, 507, 508, 509, 510, 512,
	511, 368, 286, 442, 302, 339, 0, 0, 386, 421,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 409, 268, 514, 493, 489,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 415, 423, 424, 425, 426,
	427, 430, 431, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 472, 483, 497, 502, 429, 278, 479, 503,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 492,
	449, 212, 417, 270, 201, 231, 215, 239, 254, 257,
	296, 354, 361, 390, 395, 275, 251, 229, 414, 226,
	433, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	342, 461, 462, 288, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	343, 340, 467, 262, 253, 249, 233, 289, 349, 389,
	454, 383, 0, 337, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 2079, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 464, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 363,
	237, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	373, 416, 422, 0, 0, 0, 235, 0, 420, 387,
	482, 218, 264, 413, 393, 418, 400, 267, 0, 0,
	419, 338, 469, 407, 480, 500, 501, 243, 367, 490,
	458, 496, 513, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 300, 440, 274, 195, 336, 506, 209, 428,
	227, 216, 471, 488, 269, 411, 202, 453, 478, 224,
	432, 0, 0, 515, 204, 476, 450, 356, 297, 298,
	203, 0, 412, 248, 272, 238, 376, 473, 474, 236,
	516, 213, 495, 206, 0, 494, 369, 468, 477, 357,
	348, 205, 475, 355, 347, 303, 322, 323, 260, 283,
	405, 341, 406, 284, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 517, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 380, 404, 402,
	408, 0, 463, 481, 491, 498, 504, 505, 507, 508,
	509, 510, 512, 511, 368, 286, 442, 302, 339, 0,
	0, 386, 421, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 409, 268,
	514, 493, 489, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 415, 423,
	424, 425, 426, 427, 430, 431, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 472, 483, 497, 502, 429,
	278, 479, 503, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 492, 449, 212, 417, 270, 201, 231, 215,
	239, 254, 257, 296, 354, 361, 390, 395, 275, 251,
	229, 414, 226, 433, 455, 456, 457, 459, 358, 246,
	394, 0, 0, 342, 461, 462, 288,
}

var yyPact = [...]int{
	4061, -1000, -407, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2099, 2161, -1000, -1000,
	-1000, -1000, 2257, -1000, 783, 1809, -1000, 2072, 2996, -1000,
	41039, 520, -1000, 39853, 513, 271, 41039, -1000, 177, -1000,
	150, 41039, 163, 39260, -1000, -1000, -249, 17309, 2006, 30,
	29, 41039, -1000, -1000, -1000, -1000, 2223, 1796, -1000, 360,
	-1000, -1000, -1000, -1000, -1000, -1000, 38667, -1000, -1000, -1000,
	2076, 2059, 2260, 698, 2018, -1000, 2152, 1796, -1000, 17309,
	2196, 2121, 16716, -1000, 16716, 409, -1000, -1000, 13148, -1000,
	-1000, 22656, 41039, 29179, 448, -1000, 2072, -1000, -1000, -1000,
	141, -1000, 318, 1690, -1000, 1686, -1000, 933, 500, 348,
	464, 460, 346, 343, 342, 341, 340, 338, 335, 332,
	352, -1000, 715, 715, -128, -129, 3187, 441, 392, 392,
	447, 2037, 2036, -1000, 701, -1000, 715, 715, 715, 387,
	715, 715, 715, 715, 294, 292, 715, 715, 715, 715,
	715, 715, 715, 715, 715, 715, 715, 715, 715, 715,
	715, 715, 715, 358, 2072, 259, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 41039, 280, 41039,
	-1000, 577, 41039, 838, 838, 98, 838, 838, 838, 838,
	189, 583, 26, -1000, 168, 247, 126, 255, 832, 229,
	215, -1000, -1000, 248, 832, 1229, -1000, 703, 134, -1000,
	838, 10756, 10756, 10756, -1000, 2053, -1000, -1000, -1000, -1000,
	-1000, -1000, 1234, -1000, 442, -1000, -1000, -1000, -1000, 41039,
	38074, 354, 748, -1000, -1000, -1000, 104, -1000, -1000, 1316,
	1046, 17309, 1386, -1000, 1252, 632, -1000, -1000, -1000, -1000,
	-1000, 548, 17902, 17902, 17902, 17902, -1000, -1000, 1682, 1682,
	1682, 1682, 17902, 1682, 17902, 1682, 1682, 1682, 1682, 17309,
	1682, 1682, 1682, -1000, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 574, 1682, 1682, 1682, 1682, 1682, -1000, -1000, -1000,
	-1000, 1682, 1682, 1682, 1682, 1682, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20274, -1000, 14937, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41039, -1000,
	1682, 202, 41039, 41039, 336, 2152, 1796, -1000, 2223, 2167,
	360, -1000, 2483, 1681, 1731, 1250, 1796, 1603, 41039, -1000,
	1699, -1000, -1000, -1000, 1938, 1158, 1226, -1000, -1000, -1000,
	-1000, 1169, 17309, -1000, -1000, 2236, -1000, 19681, 565, 896,
	2233, 37481, -1000, 409, 409, 1679, 12550, -16, -1000, -1000,
	-1000, 747, 26807, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2053,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1716, 41039, -1000, -1000, 3522, 1168, -1000, 1807,
	-1000, 1713, -1000, 1740, 17309, 1823, 504, 1168, 489, 484,
	461, -1000, -59, -1000, -1000, -1000, -1000, -1000, -1000, 715,
	715, 715, -1000, 344, 2193, 2996, 333, -1000, -1000, -1000,
	36888, 1806, 1168, -1000, 1803, -1000, 823, 497, 570, 570,
	1168, -1000, -1000, 41039, 1168, 813, 811, 1168, 1168, 41039,
	41039, -1000, 36295, -1000, 35702, 35109, 1080, 41039, 34516, 33923,
	33330, 32737, 32144, -1000, 1878, -1000, 1804, -1000, -1000, -1000,
	41039, 1168, 41039, 41039, 319, -1000, -1000, 41039, 1168, -1000,
	-1000, 1071, 1066, 1065, 715, 715, 1063, 1224, 1220, 1216,
	715, 715, 1051, 1214, 27993, 1210, 256, 1045, 1041, 1023,
	1054, 1204, 196, 1203, 1017, 973, 1016, 41039, 1799, 41039,
	-1000, 242, 710, 422, 735, 2072, 2004, 1675, 429, 502,
	1168, 400, 400, 41039, -1000, 11354, -1000, -1000, 1198, 17309,
	-1000, 840, 832, 832, -1000, -1000, -1000, -1000, -1000, -1000,
	838, 41039, 840, -1000, -1000, -1000, 832, 838, 41039, 838,
	838, 838, 838, 832, 832, 832, 838, 41039, 41039, 41039,
	41039, 41039, 41039, 41039, 41039, 41039, 10756, 10756, 10756, 703,
	838, -263, -1000, 1196, -1000, 1887, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -22, 1673, 31551, -1000, -272,
	-273, -280, -282, -1000, -1000, -1000, -284, -287, -1000, -1000,
	-1000, 17309, 17309, 17309, 17309, -151, -1000, 930, 17902, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 918, 798, 17902, 17902,
	17902, 17902, 17902, 17902, 17902, 17902, 17902, 17902, 17902, 17902,
	17902, 17902, 17902, 25028, 5949, 5949, 632, 632, 632, 632,
	-1000, 16716, 17309, 17309, 632, -1000, 1168, 30958, 16716, 16716,
	17309, 2046, 738, 1046, 41039, -1000, 1250, -1000, -1000, -1000,
	982, -1000, 41039, 41039, 1213, 17309, 17309, 17309, 17309, 17309,
	17309, 17309, 17309, 17309, 17309, 17309, 17309, 17309, 17309, 17309,
	17309, 17309, 17309, 17309, 17309, 17309, 17309, 17309, 17309, 17309,
	17309, 17309, 17309, 17309, 17309, 13746, 11354, 16716, 16716, 16716,
	16716, 16716, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 561, 1755, 1305, 1527, -1000, 1626,
	-1000, -110, 22063, 17309, 1193, 2232, 1833, 41039, -1000, -1000,
	-1000, 2152, -1000, 2152, 1755, 2470, 1944, 16716, -1000, -1000,
	2470, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1302,
	-1000, 41039, 1603, 2117, 41039, 1931, 1171, 357, -1000, 17309,
	17309, 1569, -1000, 1185, 41039, -1000, -151, -1000, 30365, -1000,
	-1000, 10158, -1000, 41039, 325, 41039, -1000, 24435, 29772, 11952,
	-16, -1000, 11952, 1495, -1000, 7, 1, 14339, 623, -1000,
	-1000, -1000, 3187, 19088, 1278, 623, 109, -1000, -1000, -1000,
	1740, -1000, 1740, 1740, 1740, 1740, 357, 357, 357, 357,
	-1000, -1000, -1000, -1000, -1000, 1797, 1790, -1000, 1740, 1740,
	1740, 1740, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1769,
	1769, 1769, 1747, 1747, 386, -1000, 17309, 483, 29179, 2080,
	1014, 1310, 242, 405, 1830, 1168, 1168, 1168, 405, -1000,
	1383, 1244, 1156, -1000, -397, 1536, -1000, -1000, 2192, -1000,
	-1000, 737, 848, 846, 705, 41039, 213, 315, -1000, 375,
	-1000, 29179, 1168, 803, 570, 1168, -1000, 1168, -1000, -1000,
	-1000, -1000, -1000, 1168, -1000, -1000, 1534, -1000, 1412, 884,
	834, 879, 806, 1534, -1000, -1000, -105, 1534, -1000, 1534,
	-1000, 1534, -1000, 1534, -1000, 1534, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 719, 198, 41039, 213, 25028, -1000,
	420, -1000, -1000, -1000, 25028, 25028, -1000, -1000, -1000, -1000,
	1167, 1162, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -379, 41039, -1000, 236, 731, 300, 339, 285, 41039,
	195, 2142, 2141, 2140, 234, 286, 41039, 41039, 400, 1882,
	41039, 2104, 41039, -1000, -1000, -1000, -1000, -1000, 1046, 41039,
	-1000, -1000, 838, 838, -1000, -1000, 41039, 838, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 838, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 41039, 41039, -1000, -1000, -1000, -1000,
	-1000, 129, 4, 351, -1000, -1000, -1000, -1000, -1000, 2145,
	-1000, 1046, 767, 781, -1000, 1682, -1000, -1000, 988, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 918, 17902, 17902, 17902,
	1585, 456, 1321, 1489, 1702, 935, 935, 799, 799, 667,
	667, 667, 667, 667, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1157, -1000, 1668, -1000, 1430, 1152, 1250, -1000,
	1668, 1668, 1227, 16716, -1000, -1000, 777, -1000, 17309, 1250,
	-1000, -1000, 1250, 1250, 1518, 1511, 2226, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1414, 1310,
	1310, 1310, 2392, 2388, 1250, 1316, 1250, 1506, -1000, 2370,
	1310, 2338, 2334, 2316, 1238, 2271, 2201, 2171, 1310, 1310,
	1310, 1068, 2165, 2075, 2015, 1956, 1894, 1889, 1866, 1819,
	1765, 1310, 1250, 16716, 16716, 1503, 1682, 559, -1000, 1668,
	1250, 1250, 1668, 1668, 11354, 1250, -1000, 41039, -1000, -246,
	-1000, -13, 672, 1682, -1000, 27993, 1250, -1000, 4692, -1000,
	42225, -1000, -1000, -1000, -1000, -1000, 26214, 1692, 2470, -1000,
	-1000, 1682, 1710, -1000, -1000, 357, 79, 25621, -1000, -1000,
	1046, 1046, 17309, -1000, -1000, -1000, -1000, -1000, -1000, 555,
	2208, 378, 1682, -1000, 1405, 1941, -1000, -1000, -1000, 2115,
	20872, -1000, 1682, 41039, 1794, 1792, -1000, 554, -1000, 1495,
	-16, -5, -1000, -1000, -1000, -1000, 1046, -1000, 1135, 331,
	3049, -1000, 377, -1000, -1000, -1000, -1000, 2024, 67, -1000,
	-1000, -1000, 357, 357, -1000, -1000, -1000, -1000, -1000, -1000,
	1145, 1145, -1000, -1000, -1000, -1000, -1000, 1007, -1000, -1000,
	-1000, 995, -1000, -1000, 1484, 1875, 483, -1000, -1000, 715,
	1144, -1000, -1000, 2027, 715, 715, 41039, -1000, -1000, 1276,
	2080, 236, 41039, 759, 1869, -1000, 1830, 1830, 1830, 41039,
	-1000, -1000, -1000, -1000, -1000, -1000, -386, 64, 327, -1000,
	-1000, -1000, 308, 41039, 1708, -1000, 205, -1000, 1273, -1000,
	41039, -1000, 1705, 1767, 1168, 1168, -1000, -1000, -1000, 41039,
	1682, -1000, -1000, -1000, -1000, 499, 2064, 2063, -1000, -1000,
	-168, 213, 205, 623, 1168, -1000, -1000, -1000, -1000, -1000,
	-382, 1670, 453, 220, 293, 41039, 41039, 41039, 41039, 41039,
	540, -1000, -1000, -1000, -1000, 185, -1000, -1000, 185, -1000,
	-1000, -1000, -1000, 269, 415, -1000, 41039, 41039, 542, -1000,
	-1000, -1000, 832, -1000, -1000, 832, -1000, -1000, -1000, -1000,
	-1000, 2047, 41039, 0, -354, -1000, -312, 17309, -1000, -1000,
	-1000, -1000, 1574, 455, 1321, 17902, 17902, 16716, -92, 734,
	734, 25028, -1000, -1000, -1000, 17309, 17309, 1349, 751, -1000,
	17309, 865, -1000, -1000, -1000, 17309, 17309, 17309, 1250, 275,
	-1000, -1000, -1000, 17309, 17309, -1000, -1000, 17309, 17309, -1000,
	17309, 17309, 18495, 1250, 18495, 17309, 17309, 18495, -1000, -1000,
	-1000, -1000, 18495, 17309, 17309, 17309, 17309, 17309, 17309, 17309,
	17309, 17309, -1000, -1000, 1668, 1668, 16716, 11354, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 672, -1000,
	570, 570, 570, 41039, -1000, -1000, -1000, -1000, -1000, -1000,
	1461, 2148, -1000, 1965, 1948, 2172, 2208, -1000, 24435, 2470,
	-1000, -1000, 41039, -239, -1000, 2001, 1985, -1000, -1000, -1000,
	-1000, 9560, 2152, 17309, 1865, 41039, 1682, -1000, 21470, 41039,
	41039, 24435, 24435, 24435, 24435, 24435, -1000, 1913, 1912, -1000,
	1900, 1898, 1908, 41039, -1000, 1665, 1250, 2167, 20872, 17309,
	23249, 1637, 24435, -1000, -1000, 24435, 41039, 8962, -1000, -1000,
	-4, -24, -1000, -1000, -1000, -1000, 3187, -1000, -1000, 2731,
	2110, 2021, -1000, -1000, -1000, -1000, 1640, -1000, 1630, 1436,
	1618, 198, -1000, 1821, 2044, 715, 715, -1000, 994, -1000,
	1168, 1140, 1138, -1000, -1000, -1000, 449, -1000, 2101, 41039,
	1863, 1854, 1853, -1000, -395, 989, 1760, 1816, 17309, 1756,
	2189, 1384, 41039, -1000, -1000, 41039, -1000, 257, -1000, 483,
	41039, -1000, -1000, -1000, 315, 41039, -1000, 6278, -1000, 205,
	-1000, -1000, -1000, -1000, -1000, -1000, 41039, 225, -1000, 1752,
	923, -1000, -1000, 1763, -1000, -1000, -1000, -1000, 204, 299,
	182, 1134, 182, -1000, 41039, 529, 1875, 41039, -1000, -1000,
	-1000, 838, 838, -1000, -1000, 2043, -1000, 1168, 1310, 17902,
	17902, -1000, 632, -1000, 1682, 1250, 1740, 1740, -1000, 1740,
	1747, -1000, 1740, 137, 1740, 135, 1740, -1000, -1000, 1250,
	1250, 1029, 1060, -66, -1000, 1046, 17309, 1715, 1704, 1310,
	-1000, 1739, 1736, 1310, 1310, -1000, 1046, 1238, 1696, 1465,
	-1000, -1000, -1000, -1000, 1433, 1310, 1590, -235, 1250, 1616,
	1616, 1616, 1616, 1616, 1527, 1527, 1527, 1527, -1000, -1000,
	1250, -1000, -1000, 2144, 2144, 2144, 1515, 41632, 41039, -1000,
	-1000, -1000, -1000, 2208, 2202, 1428, -1000, -1000, 79, 391,
	-1000, 2010, 1985, -1000, 2180, 1994, 2179, -1000, -1000, -1000,
	1046, -1000, 2074, 1733, -1000, 721, 1314, -1000, -1000, 16123,
	1525, 1947, 546, 1515, 1529, 1941, 1836, 1845, 1918, -1000,
	-1000, -1000, -1000, 1906, -1000, 1904, -1000, -1000, 1699, -1000,
	-1000, 1305, 1421, 325, 24435, 1481, 1481, -1000, 539, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 873, 6139, 2259, -1000,
	1128, -1000, 1096, 245, 985, -1000, -1000, 715, 715, -1000,
	797, 795, -1000, 41039, 1735, -1000, 357, 1127, 357, 968,
	-1000, 965, -1000, -1000, -1000, -1000, 1791, 1864, -1000, -1000,
	-1000, -1000, 41039, -1000, -1000, 41039, 41039, 41039, 1728, 2177,
	-1000, 17309, 1727, 717, 1453, 41039, 41039, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 421, 715,
	-361, 281, 272, 715, 715, 715, -396, -1000, -1000, 1513,
	1497, -1000, -119, -1000, 17309, -1000, -1000, -1000, 1056, 1056,
	-1000, 1699, -1000, -1000, -1000, 1271, -1000, -1000, -108, 41039,
	41039, 41039, 41039, -1000, 931, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 632, 17902, -1000,
	-1000, 357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17309, -1000, 17309, -1000, 2152, 1124, 1046, 17309, 17309,
	-1000, 963, 955, -1000, -1000, 1250, 18495, -1000, 18495, -1000,
	17309, 230, 734, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1682, 2045, 1682, 1682, 23249, -1000,
	-1000, 2202, 2205, 2175, 1984, 1986, 1986, 2010, -1000, 2173,
	2170, -1000, 1123, 2169, 1122, 790, -1000, 41039, 17309, 1682,
	-1000, 376, 41039, 1682, 41039, -1000, 2166, -1000, -1000, 17309,
	1725, -1000, 17309, -1000, -1000, -1000, -1000, -1000, 5949, 2208,
	1481, -1000, -1000, 673, -1000, 17309, -1000, -1000, -1000, 3818,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1117, 1116,
	-1000, -1000, 1720, 17309, -1000, -1000, -1000, 1267, 1264, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1699, -1000, -1000, -1000,
	-1000, 315, -389, 1434, 41039, 941, -1000, 1492, 1384, 309,
	1682, 1107, 715, 715, 715, 934, 920, 27993, 1473, -1000,
	41039, 367, -1000, 315, -1000, -130, -131, 1310, -1000, -1000,
	2109, -1000, -1000, 11354, -1000, -1000, 1695, 1802, -1000, -1000,
	-1000, 260, -1000, 1310, 1310, 1250, -1000, 1310, 1310, 1260,
	1258, -1000, 1465, -1000, 943, -1000, 230, 1250, 1843, -1000,
	-1000, 5949, -1000, 23842, -1000, 2163, 2159, 28586, 28586, 672,
	2205, -1000, 17309, 17309, 1973, 913, -1000, -1000, -1000, -1000,
	1104, 1099, -1000, 1090, -1000, 2243, -1000, 1046, -1000, 1682,
	-1000, 512, 1314, -1000, 2152, 1046, 41039, 1046, 70, 2166,
	-1000, 1310, -1000, 1682, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682,
	1682, 1682, -1000, -1000, 41039, 1288, -1000, -1000, 2100, 1455,
	63, -1000, 1440, -1000, -1000, 503, -1000, 17309, -1000, 27993,
	1087, 1083, -1000, -1000, -1000, -1000, -396, -1000, -1000, -1000,
	-1000, -1000, -1000, 360, 1338, -1000, 713, 41039, 41039, 1250,
	297, -113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17309, -1000, 1250, 1842, -1000, -214, -1000, 1438, -1000,
	-1000, -1000, -1000, -1000, 1438, 1438, -1000, -1000, 1046, 1316,
	-1000, 906, -1000, -1000, -1000, -1000, -1000, 41039, 1314, 41039,
	-1000, 1416, 1250, 1682, 2152, -1000, 1381, -1000, 360, -1000,
	1490, 1816, -1000, -1000, -1000, 15530, -1000, -1000, -1000, -1000,
	-1000, 158, -107, 11354, 8364, 1362, -1000, -1000, 1927, -98,
	-117, 1238, -1000, -297, -1000, -1000, 27400, -1000, -1000, -1000,
	-1000, -1000, 1300, -1000, -1000, 23249, 40446, -1000, -89, 347,
	-107, 17309, 1454, 1250, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 33, -1000, -1000, -1000, -1000, -1000, 1763, -1000,
	1919, -1000, 1250, -1000, -1000, -1000, 1343, -1000, 1347, -199,
	1841, -1000, -46, -1000, -1000, -1000, 872, 948, -1000, -1000,
	-1000, -1000, -1000, -1000, 1194, 41039, -1000, 383, -1000, -1000,
	-108, -109, -1000, -1000, 40446, -191, 623, 5949, -1000, 1838,
	1800, 2230, -1000, -1000, -1000, -1000, -1000, -1000, -402, 1307,
	239, -1000, -115, -1000, -1000, 2091, 70, -1000, 2240, -1000,
	2231, 597, 597, -1000, 904, -402, -1000, -120, -202, -1000,
	-1000, -1000, -1000, -1000, 380, 946, -1000, -1000, -1000, -1000,
	5949, -1000, -1000, -1000, 241, 241, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2659, 2656, 27, 6, 36, 35, 2654, 44, 116,
	189, 25, 185, 128, 2652, 2650, 2649, 2647, 2646, 2645,
	2644, 255, 253, 251, 2643, 2642, 2641, 2640, 2639, 2638,
	2637, 2636, 2634, 2633, 214, 167, 186, 2632, 2631, 2630,
	127, 197, 95, 103, 181, 2629, 2626, 85, 2624, 2623,
	2619, 176, 175, 171, 810, 2617, 206, 123, 43, 2612,
	2610, 2606, 2604, 2603, 2602, 2600, 2599, 2595, 2588, 2586,
	2585, 2583, 2581, 2580, 2579, 2577, 221, 2576, 2572, 17,
	2571, 90, 2566, 2564, 2563, 135, 2562, 2561, 2560, 31,
	2559, 2558, 2557, 2556, 2555, 2553, 2552, 151, 2551, 2544,
	2542, 2540, 187, 2531, 2529, 179, 126, 145, 2525, 2519,
	110, 183, 2518, 138, 2514, 2510, 2509, 157, 2503, 5482,
	2501, 77, 74, 2500, 75, 89, 70, 69, 16, 5,
	2499, 2498, 76, 104, 2497, 105, 88, 2496, 117, 100,
	2495, 2488, 13, 8, 2486, 3, 2, 4, 73, 2485,
	2484, 120, 2479, 2475, 2471, 97, 2467, 2457, 2613, 2453,
	96, 144, 107, 83, 2449, 50, 67, 2446, 2445, 2442,
	2441, 2439, 55, 2438, 2435, 2434, 150, 47, 172, 46,
	41, 58, 156, 2433, 40, 92, 2431, 149, 2430, 2421,
	66, 42, 37, 2419, 48, 147, 134, 38, 98, 154,
	2418, 2417, 65, 84, 2416, 2415, 2414, 2411, 2410, 2409,
	79, 2408, 63, 2407, 210, 2400, 18, 2397, 60, 39,
	2395, 78, 121, 81, 28, 2394, 170, 2390, 59, 168,
	141, 166, 2389, 2388, 2387, 184, 320, 2385, 2383, 270,
	169, 152, 162, 106, 2381, 325, 2380, 2373, 101, 1243,
	2378, 24, 174, 2360, 2359, 3415, 173, 32, 21, 2358,
	146, 2356, 2355, 2353, 190, 182, 118, 1037, 68, 2351,
	2350, 12, 2349, 2348, 2346, 2344, 2343, 2341, 119, 34,
	33, 30, 188, 82, 10, 161, 86, 2339, 2337, 2334,
	130, 99, 2332, 165, 164, 140, 131, 2331, 177, 153,
	137, 2330, 61, 29, 2328, 2325, 2323, 2321, 102, 2317,
	2316, 2315, 2314, 163, 155, 139, 94, 2312, 93, 129,
	160, 159, 52, 2309, 53, 2308, 2307, 23, 180, 26,
	2304, 14, 80, 71, 22, 132, 111, 2301, 0, 2296,
	15, 178, 321, 158, 2295, 2291, 7, 9, 11, 2290,
	2289, 2288, 2286, 2285, 148, 2284, 2283, 2280, 2279, 20,
	49, 19, 1, 108, 91, 2276, 2274, 5231, 3386, 143,
	2273, 191,
}

//line sql.y:7018
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 365, 366, 366, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 338, 338,
	338, 341, 341, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	369, 369, 153, 153, 151, 151, 152, 152, 221, 221,
	24, 25, 25, 231, 231, 230, 230, 230, 232, 232,
	232, 232, 267, 267, 26, 26, 26, 26, 26, 103,
	103, 340, 340, 339, 331, 331, 330, 330, 329, 337,
	337, 336, 336, 335, 38, 39, 48, 48, 48, 48,
	49, 50, 342, 342, 304, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 306, 306, 292, 292, 305, 305, 305, 305, 305,
	305, 305, 291, 291, 114, 114, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 358, 358, 358, 357, 357, 201, 201,
	201, 201, 201, 201, 201, 201, 123, 123, 132, 132,
	132, 132, 132, 121, 121, 122, 120, 120, 120, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 131, 131, 127, 127, 127, 128, 128,
	128, 129, 129, 359, 359, 359, 359, 271, 271, 271,
	271, 274, 274, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 273, 273, 273, 273, 273, 275, 275, 275,
	275, 275, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 277, 277, 277,
	277, 277, 277, 277, 277, 290, 290, 278, 278, 285,
	285, 286, 286, 286, 287, 287, 287, 288, 288, 283,
	283, 283, 283, 283, 283, 284, 284, 284, 293, 318,
	318, 317, 317, 315, 315, 315, 315, 315, 315, 315,
	315, 302, 302, 312, 312, 312, 312, 312, 301, 301,
	297, 297, 297, 298, 298, 299, 299, 296, 296, 300,
	300, 314, 314, 313, 313, 294, 294, 295, 295, 320,
	360, 360, 360, 360, 360, 361, 361, 321, 349, 351,
	351, 351, 350, 350, 347, 348, 346, 346, 346, 346,
	346, 81, 81, 81, 243, 243, 244, 244, 310, 310,
	309, 309, 309, 311, 311, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 238, 238, 238, 345,
	345, 345, 345, 345, 345, 344, 344, 344, 307, 307,
	307, 343, 343, 57, 57, 185, 185, 363, 363, 364,
	364, 364, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 85, 85, 86, 86, 86, 86, 88, 88,
	88, 323, 323, 58, 58, 3, 3, 141, 143, 144,
	144, 142, 142, 142, 142, 142, 142, 60, 60, 59,
	59, 146, 145, 147, 147, 147, 1, 1, 2, 2,
	4, 4, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 289, 289, 289, 322, 322, 324,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	91, 90, 90, 89, 92, 92, 92, 92, 92, 92,
	92, 92, 326, 326, 326, 61, 61, 327, 279, 280,
	281, 5, 6, 303, 325, 99, 99, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 352, 352, 237, 237,
	246, 246, 236, 236, 260, 260, 260, 239, 239, 239,
	240, 240, 356, 356, 356, 64, 64, 64, 66, 66,
	67, 68, 68, 262, 262, 263, 263, 69, 70, 82,
	82, 82, 82, 82, 82, 84, 84, 84, 15, 15,
	15, 15, 78, 78, 78, 14, 14, 65, 65, 72,
	353, 353, 354, 355, 355, 355, 355, 73, 75, 31,
	31, 31, 31, 31, 31, 109, 109, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 104,
	104, 104, 98, 98, 370, 76, 77, 77, 102, 102,
	102, 95, 95, 95, 101, 101, 101, 16, 16, 17,
	220, 220, 18, 18, 106, 106, 108, 108, 108, 108,
	108, 110, 110, 110, 110, 110, 110, 110, 105, 105,
	107, 107, 107, 107, 253, 253, 253, 252, 252, 135,
	135, 137, 136, 136, 138, 138, 139, 139, 139, 139,
	183, 161, 161, 218, 218, 216, 216, 217, 217, 219,
	219, 219, 219, 222, 222, 140, 140, 140, 140, 148,
	148, 149, 149, 150, 150, 261, 261, 258, 258, 258,
	257, 257, 154, 154, 154, 156, 155, 155, 155, 155,
	157, 157, 159, 159, 158, 158, 160, 165, 165, 164,
	164, 162, 162, 162, 162, 163, 163, 163, 163, 166,
	166, 119, 119, 119, 119, 119, 119, 119, 130, 130,
	130, 130, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 234,
	234, 167, 167, 175, 175, 175, 175, 168, 168, 168,
	168, 168, 168, 168, 176, 176, 176, 182, 177, 177,
	173, 173, 173, 173, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 269, 269, 334,
	334, 333, 333, 332, 332, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 371, 371, 282, 282,
	282, 282, 174, 174, 174, 174, 174, 100, 100, 100,
	100, 100, 266, 266, 266, 270, 270, 270, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 188, 188, 96, 96, 186, 186, 187,
	189, 189, 184, 184, 184, 170, 170, 170, 190, 190,
	191, 191, 192, 192, 194, 193, 193, 195, 196, 196,
	196, 197, 197, 198, 198, 198, 47, 47, 47, 47,
	47, 42, 42, 42, 42, 43, 43, 43, 111, 111,
	111, 111, 113, 113, 112, 112, 79, 79, 80, 80,
	80, 117, 117, 118, 118, 118, 115, 115, 116, 116,
	214, 214, 199, 199, 199, 206, 206, 206, 202, 202,
	204, 204, 204, 205, 205, 205, 203, 211, 211, 213,
	213, 212, 212, 208, 208, 209, 209, 210, 210, 210,
	207, 207, 169, 169, 169, 169, 169, 215, 215, 215,
	215, 223, 223, 179, 179, 181, 181, 180, 134, 224,
	224, 228, 225, 225, 229, 229, 229, 229, 229, 226,
	226, 227, 227, 254, 254, 254, 233, 233, 245, 245,
	241, 241, 242, 242, 235, 235, 247, 247, 247, 74,
	178, 178, 319, 319, 316, 250, 250, 251, 251, 255,
	255, 259, 259, 256, 256, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 367, 368, 264, 265, 265,
	265,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 4, 2, 4,
	5, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	5, 2, 3, 3, 3, 3, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 3, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	9, 6, 6, 6, 2, 2, 3, 3, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 6, 6, 4, 4,
	4, 7, 8, 6, 5, 6, 8, 11, 7, 8,
	8, 9, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 0, 2, 0,
	2, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -365, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 216, -49, -39, 217,
	-50, 219, 218, 255, 220, 248, 74, 301, 302, 304,
	305, 306, 307, -84, 253, 254, 222, 36, 45, 33,
	34, 37, 226, 261, 262, 225, -10, -34, 8, -367,
	11, 431, 250, 249, 28, -12, 462, 85, -366, 602,
	-214, -199, 22, 33, 29, -198, -194, -102, -199, 20,
	18, 7, -76, -370, -76, -76, 12, 13, -76, -304,
	-306, 85, 152, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -328, -44, -41, 221, 218, 265,
	119, 120, 255, 256, 257, 220, 239, 254, 258, 253,
	274, -40, 80, 33, 462, 465, -311, 217, 223, 224,
	432, 122, 121, 75, 219, -308, 355, 494, 572, -56,
	574, 101, 103, 573, 44, 229, 575, 576, 577, 501,
	578, 238, 579, 580, 581, 582, 588, 543, 589, 590,
	591, 123, 7, -76, -259, -255, -338, -249, 88, 89,
	90, 459, 241, 492, 493, 290, 80, 41, 352, 355,
	494, 572, 301, 315, 309, 336, 328, 460, 495, 293,
	242, 278, 569, 326, 128, 574, 296, 496, 256, 360,
	361, 497, 362, 101, 304, 398, 587, 295, 498, 585,
	103, 573, 79, 51, 44, 251, 324, 225, 320, 575,
	279, 499, 470, 272, 122, 119, 594, 36, 318, 50,
	30, 584, 121, 49, 576, 143, 500, 577, 501, 364,
	343, 563, 48, 365, 257, 502, 83, 262, 464, 299,
	571, 366, 319, 367, 289, 583, 222, 503, 555, 368,
	369, 564, 504, 344, 348, 505, 390, 370, 601, 52,
	506, 507, 565, 120, 508, 78, 578, 313, 314, 509,
	287, 240, 392, 340, 441, 448, 449, 107, 108, 444,
	109, 450, 110, 451, 452, 453, 442, 111, 104, 443,
	454, 455, 341, 342, 112, 456, 106, 105, 445, 447,
	113, 457, 238, 35, 371, 461, 291, 58, 266, 393,
	46, 346, 598, 45, 559, 510, 562, 339, 335, 53,
	511, 512, 513, 514, 579, 338, 312, 334, 593, 4,
	284, 580, 62, 224, 350, 349, 351, 273, 389, 331,
	515, 516, 517, 245, 81, 518, 321, 21, 519, 520,
	372, 280, 521, 56, 522, 523, 396, 254, 524, 54,
	581, 39, 525, 259, 595, 582, 526, 527, 528, 529,
	261, 530, 374, 531, 373, 345, 347, 268, 375, 463,
	532, 300, 317, 258, 586, 533, 246, 570, 260, 265,
	253, 397, 247, 534, 535, 536, 537, 538, 294, 554,
	539, 540, 305, 588, 43, 541, 542, 543, 544, 545,
	288, 283, 391, 400, 61, 82, 357, 546, 547, 568,
	311, 281, 548, 302, 55, 589, 590, 591, 275, 592,
	9, 599, 600, 377, 123, 285, 286, 47, 332, 267,
	549, 297, 550, 322, 323, 337, 310, 333, 303, 556,
	269, 378, 255, 551, 399, 282, 353, 358, 298, 467,
	274, 379, 567, 466, 330, 327, 276, 552, 380, 230,
	270, 271, 553, 557, 381, 382, 292, 383, 384, 385,
	386, 388, 387, 277, 465, 308, 325, 359, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 440, 228, -76, 228,
	-158, -255, 228, -226, 361, -246, 363, 376, 371, 381,
	369, -237, 372, 374, 268, -356, 390, 228, 378, 216,
	169, 364, 373, 382, 383, 292, 388, 384, 387, 277,
	-352, -338, 577, 592, 128, 329, 368, 366, 391, 559,
	386, 385, -255, 303, -262, 308, -250, -338, -249, 306,
	-158, -82, 555, 220, -264, -264, -104, 559, 561, -177,
	-119, 136, -130, -133, -124, -125, -171, -172, -173, -174,
	-131, -184, 158, 159, 166, 137, -182, -134, 26, 458,
	433, 432, 169, 31, 212, 68, 69, 435, 436, 139,
	57, 408, 409, -132, 403, 410, 405, 438, 439, 114,
	440, 104, 106, 105, 341, 342, 441, 442, 443, 107,
	108, 109, 110, 111, 112, 113, 444, 447, 445, 446,
	448, 449, 450, 455, 456, 451, 452, 453, 454, 457,
	-250, -255, 233, 402, 227, 164, 431, -126, -122, -8,
	-180, 401, 406, 407, 411, 404, -338, -249, -128, -127,
	-167, 91, 97, 102, 98, -362, 115, -367, 92, 93,
	94, 95, 96, 116, 117, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 44, 377, 377,
	-158, -76, -76, -76, -76, -192, -102, -194, -10, -8,
	-367, 8, -76, -8, -9, -13, -34, -36, 488, -35,
	-255, -199, -214, 12, 154, 42, 50, -197, -198, -12,
	-8, -119, 19, 23, 24, -107, 160, -119, -255, -77,
	-107, -235, 232, -76, -76, -225, -267, 303, -229, 391,
	390, -251, -227, -250, -248, -226, 389, 221, 23, 468,
	135, 25, 27, 138, 169, 19, 139, 37, 223, 329,
	239, 168, 235, 432, 216, 72, 469, 403, 405, 401,
	408, 434, 435, 402, 363, 31, 13, 471, 28, 249,
	24, 38, 162, 218, 142, 472, 252, 26, 250, 114,
	117, 474, 22, 75, 244, 14, 237, 40, 16, 475,
	476, 17, 233, 232, 154, 229, 70, 11, 212, 29,
	151, 66, 477, 130, 478, 479, 480, 481, 68, 152,
	20, 596, 406, 407, 33, 560, 458, 263, 164, 73,
	59, 561, 136, 404, 482, 483, 115, 484, 118, 76,
	566, 132, 18, 71, 42, 485, 264, 486, 234, 597,
	487, 394, 488, 153, 219, 431, 69, 489, 227, 376,
	8, 437, 32, 248, 236, 125, 67, 490, 228, 141,
	438, 439, 231, 116, 7, 129, 34, 12, 74, 77,
	409, 410, 411, 57, 124, 462, 140, 15, 491, 395,
	134, 128, -305, 152, -291, -295, -250, 243, -321, 239,
	-158, -314, -313, -250, -367, -103, -245, 229, 237, 236,
	129, -342, 132, 285, 402, 227, -51, -52, -53, -226,
	168, 576, -85, 260, 264, 86, 86, -295, -294, -293,
	-343, 264, 243, -320, -312, 235, 244, -301, 236, 237,
	-296, 229, 130, -343, -296, 234, 244, 239, 243, 264,
	264, 123, 264, 123, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 259, -302, 144, -302, 466, 466, -308,
	-343, 239, -343, -343, 231, 35, 35, -247, -296, 231,
	25, -302, -302, -302, -226, 168, -302, -302, -302, -302,
	272, 272, -302, -302, -302, -302, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, 228,
	-342, -111, 387, 292, 80, -54, 274, -37, -158, -245,
	229, 230, -342, 261, -158, 213, -158, -239, 152, 15,
	-239, -236, 377, 375, 362, 367, -239, -239, -239, -239,
	275, 360, -297, 229, 35, 240, 377, 275, 360, 275,
	276, 275, 276, 370, 380, 275, -260, 14, 154, 402,
	365, 369, 268, 228, 269, 230, 379, -338, 562, 276,
	-260, 92, -240, 152, 377, 271, -239, -265, -367, -251,
	329, -265, -265, 32, 89, 231, -250, -78, -250, 92,
	-15, -11, -22, -21, -23, 144, -109, 377, -97, 169,
	577, 563, 564, 565, 562, 374, 570, 568, 566, 275,
	567, 86, 132, 134, 135, 4, -119, 151, -168, 144,
	145, 146, 147, 148, 149, 150, 154, 136, 138, 152,
	153, 133, 155, 156, 157, 158, 159, 160, 161, 163,
	162, 164, 165, 168, 214, 215, -125, -125, -125, -125,
	-182, -367, -367, -367, -125, -234, -367, -125, -367, -367,
	-367, -367, -188, -119, -367, -371, -367, -371, -371, -282,
	-367, -282, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, 213, -367, -367, -367,
	-367, -367, -282, -282, -282, -282, -282, 102, 97, 91,
	-184, 98, 92, -250, -255, -8, -9, -177, -264, -353,
	-354, -161, -158, -367, 292, -250, -250, 261, -197, -12,
	-8, -192, -198, -194, -8, -76, -95, -108, 63, 64,
	-110, 24, 38, 67, 65, 23, -368, 87, -368, -214,
	-368, 86, -36, -218, 85, 61, 43, 92, 92, 86,
	21, -193, -195, -119, 14, -253, 4, -252, 25, -250,
	92, 213, 100, 14, -159, 29, -158, -235, -235, 86,
	303, -229, -267, -231, -230, 392, 394, 144, -254, -250,
	92, 31, 87, 86, -158, -271, -274, -276, -275, -277,
	-272, -273, 326, 327, 169, 330, 332, 333, 334, 335,
	336, 337, 338, 339, 340, 343, 32, 251, 322, 323,
	324, 325, 344, 345, 346, 347, 348, 349, 350, 351,
	309, 328, 460, 310, 311, 312, 313, 314, 315, 317,
	318, 319, 320, 321, -341, -338, 85, 87, 86, -278,
	85, -119, -111, 228, -338, 229, 229, 229, -76, 431,
	-302, -302, -302, 259, 19, -44, -41, -328, 18, -40,
	-41, 221, 119, 120, 218, 85, -291, 85, -300, -341,
	-338, 85, 130, 234, 129, -299, -296, -299, -300, -338,
	-184, -338, 130, 130, -338, -338, -222, -250, -222, -222,
	23, -222, 23, -222, 23, 94, -250, -222, 23, -222,
	23, -222, 23, -222, 23, -222, 23, 31, 78, 79,
	31, 81, 82, 83, -184, -338, -184, -291, -226, -158,
	-338, 94, 94, 94, -302, -302, 94, 92, 92, 92,
	-302, -302, 94, 92, -257, -255, 92, 92, -344, 245,
	289, 291, 94, 94, 94, 94, 31, 92, -345, 31,
	584, 583, 585, 586, 587, 92, 94, 31, 94, 31,
	94, -250, 85, -158, -117, 279, 216, 218, 221, 76,
	92, 293, 297, 298, 144, 44, 86, 231, 228, -338,
	-241, 233, -241, -250, -256, -255, -248, 92, -119, -298,
	14, 154, -260, -260, -239, -158, -298, -260, -239, -158,
	-239, -239, -239, -239, -260, -260, -260, -239, -255, -255,
	-158, -158, -158, -158, -158, -158, -158, -265, -265, -265,
	-240, -239, 562, 92, 76, -263, 306, 340, 556, 557,
	558, 86, 462, -151, -158, 562, 562, 562, 562, 562,
	562, -119, -119, -119, -119, 484, -175, 115, 136, 116,
	117, -133, -176, -180, -182, 99, 154, 138, 152, 153,
	-124, -125, -124, -124, -124, -124, -124, -124, -124, -124,
	-124, -124, -124, -124, -124, -266, -250, 92, 169, -129,
	-128, 98, -362, -129, -105, -107, -119, -119, -338, -250,
	-105, -105, -119, -101, 24, 38, -186, -187, 140, -184,
	-368, -368, 94, 98, -250, -250, -94, -93, 413, 414,
	415, 416, 418, 419, 420, 423, 424, 428, 429, 412,
	430, 417, 422, 425, 426, 427, 421, 325, -119, -119,
	-119, -119, -119, -119, -178, -177, -337, -336, -335, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -106, 24, 38, -105, -251, -256, -248, -105,
	-106, -106, -105, -105, 213, -214, -368, 86, -355, 394,
	395, 560, -258, 264, -257, 25, -178, 92, 14, -220,
	77, -250, -197, -197, 63, 64, 59, -105, -110, -368,
	-35, 25, -216, -250, 62, 92, -283, -226, 352, 353,
	-119, -119, 86, -196, 27, 28, -158, -252, 160, -256,
	-158, -221, 264, -158, -136, -138, -139, -140, -161, -183,
	-367, -141, 477, 14, -151, -152, -160, -255, -229, -231,
	86, 393, 395, 396, 76, 118, -119, -284, 168, -310,
	-309, -308, -291, -293, -294, -295, 87, -284, -287, 358,
	357, -278, -278, -278, -278, -278, -283, -283, -283, -283,
	85, 85, -278, -278, -278, -278, -285, 85, -285, -285,
	-286, 85, -286, -321, -119, -318, -317, -315, -316, 238,
	101, 553, 509, 462, 501, 543, 77, -313, -196, 94,
	-368, -117, -242, 233, -319, -316, -338, -338, -338, -242,
	-338, 92, -338, 92, -338, 92, -86, -58, -1, 596,
	597, 598, 86, 19, -292, -291, -57, 289, -324, -325,
	264, -320, -314, -300, 130, -299, -300, -300, -338, 86,
	29, 123, 123, 123, 123, 462, 218, 32, -243, 500,
	136, -291, -57, -266, 231, -266, -266, 92, 92, -238,
	592, -151, -113, 281, 144, 270, 270, 228, 228, 283,
	-158, 294, 296, 295, 293, 297, 298, 23, 23, 23,
	282, 284, 286, 272, -158, -158, -241, 76, -153, -158,
	26, -255, -158, -239, -239, -158, -239, -239, -158, -250,
	-97, 394, 86, 462, 22, -98, 22, -367, 115, 116,
	117, -176, -124, -125, -124, 135, 252, 86, -368, 25,
	86, 77, -368, -368, -368, 86, 14, -105, -189, -187,
	142, -119, -368, -368, -368, 86, 86, 14, -270, 25,
	-368, -368, -368, 86, 86, -368, -368, 86, 86, -368,
	86, 86, 86, -334, 86, 86, 86, 86, -368, -368,
	-368, -368, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, -368, -368, -105, -105, -367, 213, -368, -368,
	-368, -368, -368, -251, -354, 559, 395, -165, -164, -162,
	74, 232, 75, -367, -257, -368, -129, 89, -217, 89,
	-216, -170, -250, 94, 98, -199, -135, -137, 14, -110,
	-182, 87, 86, -283, -203, -208, -236, -250, 92, 169,
	-195, 213, -166, 15, -169, 32, 57, -11, -367, -367,
	32, 86, -154, -156, -155, -157, 66, 70, 72, 67,
	68, 69, 73, -261, 25, -136, -9, -8, -367, -367,
	-158, -151, -369, 14, 77, -369, 86, 213, -230, -232,
	397, 394, 400, -338, 92, -85, 86, -308, -295, -200,
	-114, 40, -288, 359, -283, -283, -290, 92, -290, 94,
	94, 87, -47, -42, -43, 33, 80, -315, -302, 92,
	39, -302, -302, -250, 87, -196, -113, -158, 136, 76,
	-319, -319, -319, -255, -2, 595, 601, 130, 85, 362,
	18, -216, 86, 87, -185, 290, 87, -87, -250, 87,
	85, -300, -300, -250, -367, 228, 31, 31, 500, -57,
	-185, -284, -338, 594, 593, 87, 230, 288, -118, 408,
	-115, 92, 88, -158, -158, -158, -158, -158, 221, 218,
	-363, 299, -363, 273, 231, -151, -158, 86, -81, 247,
	242, -260, -260, 33, -158, 394, 571, 569, -119, 135,
	252, -133, -125, -107, 459, -268, 169, 326, 251, 324,
	320, 340, 331, 357, 322, 358, 319, 318, 317, -268,
	-266, -119, -119, -192, 143, -119, 141, -119, -119, -119,
	-368, 169, 326, -119, -119, -335, -119, -119, -119, -333,
	-332, -129, -184, -368, -333, -119, -119, -332, -332, -336,
	-336, -336, -336, -336, -177, -177, -177, -177, -368, -368,
	-106, -251, -162, -296, -296, -296, -222, 86, -233, 22,
	14, 57, 57, -135, -166, -136, -110, -250, -206, 555,
	-211, 46, -209, -210, 47, -207, 48, 56, 160, -197,
	-119, -223, 76, -224, -228, -184, -179, -181, -180, -367,
	-215, -368, -250, -222, -224, -138, -139, -139, -138, -139,
	66, 66, 66, 71, 66, 71, 66, -155, -255, -368,
	-368, -9, -119, -258, 77, -136, -136, -160, -255, 160,
	394, 398, 399, -308, -361, 115, 136, 31, 76, 355,
	101, -359, 168, 497, 548, 553, 509, 501, 543, -360,
	234, 129, 130, 246, 25, 41, 87, 86, 87, 86,
	87, 86, -244, -243, -43, -42, -302, -302, 94, -338,
	92, 92, 230, 26, -158, 76, 76, 76, -88, 599,
	94, 85, -3, 80, -119, 85, 19, -291, -184, -326,
	-279, -327, -280, -281, -5, -6, -303, -91, 57, 101,
	-61, 44, 229, 579, 580, 123, -367, 592, -318, -216,
	-322, -324, -158, -121, -367, -120, -122, -126, 158, 159,
	-185, -158, -112, 279, 287, 85, -116, 89, -340, 77,
	270, 355, 270, -364, 300, 92, -364, -158, -81, -47,
	-158, -239, -239, 33, -338, -368, -133, -125, -367, -368,
	-278, -278, -278, -286, -278, 314, -278, 314, -278, -368,
	-368, 86, -368, 22, -368, -96, 437, -119, 86, 86,
	-368, 85, 85, -368, -368, -334, 86, -368, 86, -368,
	86, -269, 554, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -163, 22, -163, -163, -368, 89,
	-158, -166, -190, 16, -203, 51, 332, -213, -212, 55,
	47, -210, 19, 49, 19, 30, -223, 86, 144, 86,
	-368, -368, 86, 57, 213, -368, -166, -149, -148, 76,
	77, -150, 76, -148, 66, 66, -218, -368, 86, -221,
	-136, -166, -166, 213, 115, -367, -123, -132, -121, 12,
	92, 92, -338, -358, 583, 584, 31, 94, -302, -302,
	130, 130, -158, 85, -283, 92, -283, 94, 94, 31,
	81, 82, 83, 31, 78, 79, -158, -158, -158, -158,
	-323, 85, 19, -119, 85, 144, 87, -216, -216, 266,
	154, -302, 577, 272, 272, -302, -302, -302, -90, -89,
	599, 87, -368, 86, -289, 462, 465, -119, -127, -127,
	-218, 87, -331, 462, -339, -250, -250, -250, -250, 94,
	96, -124, -283, -119, -119, -197, 92, -119, -119, 94,
	94, -368, -333, -332, -119, -368, -146, -145, -147, 563,
	115, 31, -268, -367, 66, 18, 16, -367, -367, -258,
	-190, -191, 17, 19, -204, 53, -202, 52, -202, -212,
	19, 19, 92, 19, 92, 130, -228, -119, -181, 57,
	-11, -250, -179, -250, -192, -119, 85, -119, -129, -166,
	-166, -119, -172, 440, 104, 106, 105, 341, 342, 441,
	442, 443, 107, 108, 109, 110, 111, 112, 113, 444,
	447, 445, 448, 449, 450, 455, 456, 451, 452, 453,
	454, 457, 92, 92, 85, -119, 87, 87, -218, -322,
	-58, 87, -216, 94, 87, 267, -180, -367, 92, -302,
	-302, -302, 94, 94, -257, -368, 86, -250, -360, -324,
	466, 466, -368, 25, -330, -329, -251, 85, 77, -100,
	154, 462, -368, -368, -368, -368, -368, 87, 87, -368,
	-368, 86, -368, -145, -147, -368, 76, -129, -219, -368,
	-250, 234, 19, 19, -219, -219, -165, -191, -119, -177,
	-205, 54, 76, 118, 92, 92, 92, 12, -179, 213,
	-197, -216, -143, 362, -192, -368, -216, 87, 25, 87,
	601, 130, 87, -180, -99, -367, 263, -257, 92, 92,
	-89, -92, -11, 86, 144, -216, -158, -368, 460, 73,
	463, -119, -368, 76, 472, 563, 86, -368, -368, -368,
	76, 118, -224, -250, 87, -368, -367, -197, 87, -201,
	-11, 85, -3, 263, -279, -327, -280, -281, -5, -6,
	-303, -79, 462, -329, -307, -251, 92, 94, 87, 62,
	461, 464, -334, -250, 234, -258, -144, -142, -250, 515,
	-350, -349, 458, -361, -357, 115, 136, 101, -359, 553,
	509, 124, 125, -79, -119, 85, -368, -80, 278, 559,
	-340, 62, -368, -368, 86, 22, -271, -60, 526, -347,
	-348, 76, -351, 368, 525, 546, 115, 92, 87, -216,
	239, -331, 462, -142, 522, -284, -129, -348, 76, -347,
	76, 13, 12, -4, 600, 87, 280, 463, -59, 26,
	-143, -346, 247, 242, 245, 32, -346, 94, -4, 464,
	526, 241, 31, 115, -129, -146, -145, -145,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 814,
	814, 814, 0, 814, 0, 0, 814, -2, -2, 814,
	1291, 0, 814, 0, 0, -2, 746, 748, 0, 750,
	-2, 0, 0, 759, 1787, 1787, 809, 0, 0, 0,
	0, 0, 814, 814, 814, 814, 1152, 48, 814, 0,
	83, 84, 765, 766, 767, 63, 0, 1785, 1, 3,
	69, 73, 0, 0, 0, 56, 1161, 0, 76, 0,
	0, 818, 0, 816, 0, 1274, 814, 814, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 562, 495, 541, 493, 527, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 524, 1276, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1178, 153, 1292, 1289, 1290, 38, 39,
	40, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 0, 1268, 0,
	675, 914, 0, 737, 737, 0, 737, 737, 737, 737,
	0, 0, 0, 687, 0, 0, 0, 0, 734, 0,
	0, 706, 708, 0, 734, 0, 716, 740, 0, 721,
	737, 1788, 1788, 1788, 1259, 0, 731, 729, 743, 744,
	726, 727, 745, 749, 0, 754, 757, 1285, 1286, 0,
	772, 47, 1526, 764, 777, 778, 0, 810, 811, 43,
	1008, 0, 936, 941, 952, 965, 966, 967, 968, 969,
	971, 972, 0, 0, 0, 0, 977, 978, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 1133,
	0, 1096, 1096, 1025, 1096, 1098, 1098, 0, 0, 0,
	1784, 1566, 1574, 1575, 1570, 1571, 1552, 1564, 1567, 1555,
	1556, 1558, 1560, 1565, 1572, 1578, 1557, 1577, 1576, 0,
	1553, 1554, 1559, 1569, 1573, 1561, 1562, 1563, 1568, 1579,
	1142, 0, 0, 0, 0, 0, 0, 273, 274, 1007,
	1248, 1098, 1098, 1098, 1098, 1098, -2, -2, 219, 220,
	221, 222, 223, 224, 225, 0, 215, 0, 278, 279,
	275, 276, 277, 991, 992, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 1787, 0, 787,
	0, 0, 0, 0, 0, 1161, 0, 1153, 1152, 61,
	0, 814, -2, 0, 0, 0, 0, 45, 0, 50,
	873, 75, 74, 1200, 0, 0, 0, 57, 1162, 65,
	67, 1163, 0, 819, 820, 0, 850, 854, 0, 815,
	0, 0, 1275, 1274, 1274, 100, 0, 1726, 1252, -2,
	-2, 0, 0, 1287, 1288, 1261, -2, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, -2, 0, 0, 165, 166, 0, 41, 398, 0,
	161, 0, 391, 337, 0, 1178, 0, 0, 0, 0,
	0, 814, 0, 1269, 142, 143, 150, 151, 152, 371,
	371, 371, 538, 0, 0, 153, 153, 502, 503, 504,
	0, 0, -2, 396, 0, 482, 0, 0, 385, 385,
	389, 387, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 0, 372, 0, 536, 537, 434,
	0, 0, 0, 0, 0, 514, 515, 0, 0, 1277,
	1278, 0, 0, 0, 371, 371, 0, 0, 0, 0,
	371, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1191, 0, 0, 0, -2, 0, 667, 0, 0,
	0, 1270, 1270, 0, 674, 0, 676, 677, 0, 0,
	678, 0, 734, 734, 732, 733, 680, 681, 682, 683,
	737, 0, 0, 380, 381, 382, 734, 737, 0, 737,
	737, 737, 737, 734, 734, 734, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1788, 1788, 740,
	737, 0, 717, 0, 718, 719, 722, 723, 1789, 1790,
	1307, 724, 725, 1260, 747, 755, 758, 775, 773, 774,
	776, 768, 769, 770, 771, 0, 789, 790, 795, 0,
	0, 0, 0, 801, 802, 803, 0, 0, 806, 807,
	808, 0, 0, 0, 0, 0, 934, 0, 0, 997,
	998, 999, 1000, 1001, 1002, 1003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 973, 974, 975, 976,
	979, 0, 0, 0, 984, 985, 0, 0, 0, 0,
	0, 824, 0, 1134, 0, 1023, 0, 1024, 1026, 1027,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 0, 834, 834,
	0, 0, 208, 209, 210, 211, 212, 226, 227, 228,
	229, 230, 280, 1142, 0, 1007, 0, 0, 44, 779,
	780, 0, 897, 1280, 0, 0, 830, 0, 55, 64,
	66, 1161, 59, 1161, 0, 836, 0, 0, -2, -2,
	837, 843, 844, 845, 846, 847, 52, 1786, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 349, 1203, 0,
	0, 1154, 1155, 1158, 0, 851, 1607, 855, 0, 857,
	858, 0, 817, 0, 98, 0, 913, 0, 0, 0,
	1726, 1258, 0, 102, 103, 0, 0, 0, 355, 1263,
	1264, 1265, -2, 378, 0, 355, 344, 288, 289, 290,
	337, 292, 337, 337, 337, 337, 349, 349, 349, 349,
	320, 321, 322, 323, 324, 0, 0, 307, 337, 337,
	337, 337, 327, 328, 329, 330, 331, 332, 333, 334,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 339,
	339, 339, 341, 341, 0, 42, 0, 359, 0, 1158,
	0, 0, 1191, 1272, 1282, 0, 0, 0, 1272, 120,
	0, 0, 0, 539, 573, 496, 528, 540, 0, 499,
	500, -2, 0, 0, 481, 0, 483, 0, 379, 0,
	-2, 0, 389, 0, 385, 389, 386, 389, 377, 390,
	518, 519, 520, 0, 522, 523, 603, 883, 0, 0,
	0, 0, 0, 609, 610, 611, 0, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 529, 530, 531,
	532, 533, 534, 535, 0, 0, 0, 483, 0, 525,
	0, 435, 436, 437, 0, 0, 440, 441, 442, 443,
	0, 0, 446, 447, 448, 900, 901, 449, 450, 475,
	476, 477, 451, 452, 453, 454, 455, 456, 457, 469,
	470, 471, 472, 473, 474, 458, 459, 460, 461, 462,
	463, 466, 0, 135, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 833, 915, 1293, 1294, 738, 739, 0,
	383, 384, 737, 737, 684, 707, 0, 737, 688, 709,
	689, 691, 690, 692, 711, 712, 737, 695, 735, 736,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	713, 714, 715, 741, 0, 0, 756, 760, 761, 762,
	763, 0, 0, 792, 94, 797, 798, 799, 800, 812,
	805, 1009, 931, 932, 933, 0, 935, 938, 0, 993,
	995, 940, 942, 1004, 1005, 1006, 0, 0, 0, 0,
	0, 946, 950, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 970, 1112, 1113, 1114, 987,
	281, 282, 0, 988, 0, 848, 0, 0, 0, 986,
	0, 0, 0, 0, 825, 826, 1140, 1137, 0, 0,
	1097, 1099, 0, 0, 0, 0, 0, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1115, 0,
	0, 0, 0, 0, 0, 1281, 0, 130, 131, 0,
	0, 0, 0, 0, 1069, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 1143, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 782, 783,
	785, 0, 917, 0, 898, 0, 0, 788, 0, 829,
	0, 832, 58, 60, 841, 842, 0, 859, 838, 54,
	49, 0, 0, 875, 1201, 349, 1223, 0, 353, 354,
	1164, 1165, 0, 1157, 1159, 1160, 77, 856, 852, 0,
	929, 0, 0, 912, 0, 862, 864, 865, 866, 895,
	0, 869, 0, 0, 0, 0, 96, 914, 1253, 101,
	0, 0, 106, 107, 1254, 1255, 1256, 1257, 0, 562,
	-2, 430, 167, 169, 170, 171, 162, -2, 347, 345,
	346, 291, 349, 349, 314, 315, 316, 317, 318, 319,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 397, 0, 1166, 360, 361, 363, 371,
	0, 366, 367, 0, 371, 371, 0, 392, 393, 0,
	1158, 1182, 0, 0, 0, 1283, 1282, 1282, 1282, 0,
	155, 156, 157, 158, 159, 160, 598, 0, 0, 574,
	596, 597, 153, 0, 0, 163, 485, 484, 0, 630,
	0, 395, 0, 0, 389, 389, 374, 375, 521, 0,
	0, 605, 606, 607, 608, 0, 0, 0, 510, 424,
	0, 483, 485, 355, 0, 438, 439, 444, 445, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 555, 556, 487, 560, 557, 487, 561,
	1179, 1180, 1181, 0, 0, 668, 0, 0, 421, 92,
	1271, 673, 734, 694, 710, 734, 686, 693, 720, 752,
	796, 0, 0, 0, 0, 804, 0, 0, 939, 994,
	996, 943, 0, 947, 951, 0, 0, 0, 0, 0,
	0, 0, 990, 1014, 1015, 0, 0, 1152, 0, 1138,
	0, 0, 1022, 1100, 1101, 0, 0, 0, 0, 0,
	1033, 1034, 1035, 0, 0, 1038, 1039, 0, 0, 1040,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 1053,
	1054, 1055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1066, 1010, 0, 0, 834, 0, 1102, 1103,
	1104, 1105, 1106, 1143, 781, 784, 786, 871, 918, 919,
	0, 0, 0, 0, 899, 1279, 827, 828, 831, -2,
	0, 0, 1145, 0, 0, 859, 929, 860, 0, 839,
	51, 874, 0, 1205, 1204, 1217, 1230, 350, 351, 352,
	1156, 0, 1161, 0, 1241, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 0, 0, 905,
	0, 0, 0, 0, 896, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 356, 357, 144, 153, 432, 168, 405,
	0, 0, 287, 348, 312, 313, 0, 335, 0, 0,
	0, 426, 116, 1170, 1169, 371, 371, 362, 0, 365,
	0, 0, 0, 1284, 338, 394, 0, 134, 0, 0,
	0, 0, 0, 140, 568, 0, 0, 575, 0, 0,
	0, 494, 0, 505, 506, 0, 602, -2, 664, 359,
	0, 373, 376, 884, 0, 0, 507, 0, 425, 485,
	512, 513, 526, 467, 468, 465, 0, 0, 1192, 1193,
	1198, 1196, 1197, 121, 546, 548, 547, 551, 0, 0,
	489, 0, 489, 544, 0, 421, 1166, 0, 672, 422,
	423, 737, 737, 791, 95, 0, 794, 0, 0, 0,
	0, 944, 948, 849, 0, 0, 337, 337, 1120, 337,
	341, 1123, 337, 1125, 337, 1128, 337, 1131, 1132, 0,
	0, 0, 0, 1135, 1021, 1141, 0, 0, 0, 0,
	1032, 0, 0, 0, 0, 132, 133, 1069, 0, 0,
	1071, 1073, 1074, 1044, 1070, 0, 0, 1067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1011, 1012,
	0, 1144, 920, 925, 925, 925, 0, 0, 0, 1266,
	1267, 1146, 1147, 929, 1148, 861, 840, 876, 1223, 0,
	1216, 0, -2, 1225, 0, 0, 0, 1231, 853, 78,
	930, 81, 0, 1241, 1249, 0, 1232, 1243, 1245, 0,
	0, 0, 1237, 0, 929, 863, 891, 893, 0, 888,
	903, 904, 906, 0, 908, 0, 910, 911, 873, 868,
	870, 0, 0, 98, 0, 929, 929, 97, 0, 916,
	108, 109, 110, 431, 172, 177, 0, 0, 0, 182,
	0, 184, 0, 0, 0, 189, 190, 371, 371, 406,
	0, 284, 286, 0, 0, 175, 349, 0, 349, 0,
	342, 0, 407, 427, 1167, 1168, 0, 0, 364, 368,
	369, 370, 0, 1273, 136, 0, 0, 0, 571, 0,
	599, 0, 0, 0, 0, 0, 0, 164, 486, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 371,
	0, 0, 0, 371, 371, 371, 0, 656, 358, 0,
	0, 627, 624, 508, 0, 213, 214, 216, 0, 0,
	511, 873, 1183, 1184, 1185, 0, 1195, 1199, 124, 0,
	0, 0, 0, 558, 0, 488, 559, 669, 670, 671,
	93, 679, 685, 793, 813, 937, 945, 949, 0, 981,
	1118, 349, 1121, 1122, 1124, 1126, 1127, 1129, 1130, 982,
	983, 0, 1017, 0, 1019, 1161, 0, 1139, 0, 0,
	1031, 0, 0, 1036, 1037, 0, 0, 1043, 0, 1045,
	0, 0, 0, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1013, 0, 0, 0, 0, 897, -2,
	62, 1148, 1150, 0, 1210, 1208, 1208, 1218, 1219, 0,
	0, 1226, 0, 0, 0, 0, 82, 0, 0, 0,
	1246, 0, 0, 0, 0, 99, 1152, 885, 892, 0,
	0, 886, 0, 887, 907, 909, 867, -2, 0, 929,
	929, 88, 89, 0, 178, 0, 180, 206, 207, 0,
	183, 185, 186, 187, 193, 194, 195, 188, 0, 0,
	283, 285, 0, 0, 325, 336, 326, 0, 0, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 873, 137, 138, 139,
	563, 0, 573, 0, 0, 0, 566, 0, 497, 0,
	0, 0, 371, 371, 371, 0, 0, 0, 0, 641,
	0, 0, 604, 0, 612, 0, 0, 0, 217, 218,
	0, 1194, 545, 0, 122, 123, 0, 0, 550, 490,
	491, 1107, 1119, 0, 0, 0, 1136, 0, 0, 0,
	0, 1041, 0, 1072, 0, 1048, 0, 0, 0, 593,
	594, 0, 1068, 0, 926, 0, 0, 0, 0, 917,
	1150, 80, 0, 0, 1213, 0, 1206, 1209, 1207, 1220,
	0, 0, 1227, 0, 1229, 0, 1250, 1251, 1244, 0,
	1236, 1239, 1235, 1238, 1161, 889, 0, 894, 0, 1152,
	87, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 0, 0, 340, 343, 0, 0,
	0, 564, 0, 576, 567, 0, 654, 0, 658, 0,
	0, 0, 661, 662, 663, 640, 0, 644, 399, 628,
	625, 626, 509, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 1016, 1018, 1020, 1029, 1030, 1116, 1117, 1042,
	1046, 0, 1049, 0, 0, 1050, 0, 595, 0, 922,
	879, 880, 927, 928, 0, 0, 872, 79, 1151, 1149,
	1202, 0, 1211, 1212, 1221, 1222, 1228, 0, 1234, 0,
	85, 0, 0, 0, 1161, 179, 0, 198, 0, 572,
	0, 575, 565, 652, 653, 0, 665, 657, 659, 660,
	642, -2, 1186, 0, 0, 0, 552, 980, 0, 0,
	0, 1069, 1051, 0, 591, 592, 0, 921, 923, 924,
	1214, 1215, 1242, 1240, 890, 897, 0, 86, 412, 405,
	1186, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 542, 1188, 127, 128, 478, 479, 480, 121, 1108,
	0, 1111, 0, 881, 882, 577, 0, 579, 0, -2,
	400, 413, 0, 173, 199, 200, 0, 0, 203, 204,
	205, 196, 197, 117, 0, 0, 666, 0, 1189, 1190,
	124, 1109, 1047, 578, 0, 0, 355, 0, 588, 401,
	402, 0, 408, 409, 410, 411, 201, 202, 600, 0,
	0, 549, 0, 580, 581, 589, 0, 403, 0, 404,
	0, 0, 0, 569, 0, 600, 1187, 0, 0, 590,
	586, 414, 416, 417, 0, 0, 415, 601, 570, 1110,
	0, 418, 419, 420, 582, 583, 584, 585,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 213, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 602,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:531
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:536
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:572
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:591
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:601
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:607
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:626
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:632
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:636
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:642
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:801
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:833
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:845
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:849
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:855
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:878
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:883
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:893
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:903
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:916
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:938
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:942
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:948
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:952
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:966
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:980
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:984
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1016
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1027
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1032
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1042
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1047
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1052
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1058
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1063
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1069
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1078
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1084
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1100
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1119
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1124
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1129
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1136
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1143
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1154
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1165
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1171
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1175
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1207
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1211
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1227
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1231
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1237
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1241
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1247
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1257
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1262
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1295
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1304
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1313
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1390
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1402
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1412
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1416
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1426
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1430
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1444
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1450
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1514
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1525
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1531
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1771
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1775
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1779
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1789
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1796
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1800
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1804
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1808
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2039
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2048
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2056
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2066
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2138
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2147
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2153
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2157
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2163
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2172
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2176
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2180
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2184
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2188
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2192
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2208
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2212
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2216
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2220
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2224
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2292
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2302
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2306
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2312
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2316
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2322
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2326
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2332
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2338
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2342
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2346
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2350
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2363
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2369
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2375
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2381
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2385
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2394
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2398
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2404
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2410
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2416
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2420
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2424
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2428
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2432
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2451
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2464
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2469
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2473
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2479
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2493
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2503
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2507
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2511
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2515
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2519
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2523
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2527
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2531
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2535
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2539
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2543
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2547
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2551
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2555
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2559
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2563
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2567
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2571
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2575
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2579
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2583
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2587
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2591
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2595
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2599
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2628
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2636
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2687
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2705
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2709
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2718
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2722
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2726
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2734
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2740
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2754
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2758
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2762
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2766
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2770
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2774
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2778
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2782
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2786
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2790
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2794
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2798
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2802
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2806
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2810
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2814
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2818
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2822
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2826
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2830
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2834
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2838
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2842
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2846
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2860
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2908
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2915
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2922
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2929
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2935
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2945
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2952
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2959
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2971
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2985
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2989
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3002
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3016
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3096
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3105
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3113
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3122
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3129
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3141
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3150
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3165
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3174
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3179
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3183
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3189
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3195
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3201
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3211
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3215
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3221
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3227
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3233
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3239
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3253
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3257
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3263
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3269
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3275
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3279
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3283
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3289
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3293
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3298
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3302
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3307
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3311
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3317
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3321
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3325
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3329
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3333
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3337
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3341
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3345
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3349
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3353
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3357
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3361
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3365
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3369
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3373
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3377
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3381
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3385
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3389
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3393
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3397
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3401
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3406
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3421
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3436
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3440
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3445
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3450
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3455
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3460
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3465
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3471
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3477
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3482
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3488
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3494
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3504
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3509
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3513
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3518
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3523
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3528
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3533
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3539
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3545
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3552
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3559
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3566
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3578
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3584
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3590
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3596
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3602
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3608
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3614
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3620
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3626
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3648
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3652
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3681
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3696
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3704
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3708
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3728
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3748
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = "extended "
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3951
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3965
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3969
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3979
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3985
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4038
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4043
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4061
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4065
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4069
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4073
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4077
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4081
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = yyDollar[1].str
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = yyDollar[1].str
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4118
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4158
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4168
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4174
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4178
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4182
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4186
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4293
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			setAllowComments(yylex, true)
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4315
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4321
		{
			yyVAL.strs = nil
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4325
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4331
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4335
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = ""
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = SQLCacheStr
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4371
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4396
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4402
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4406
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4415
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4420
		{
			yyVAL.strs = nil
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4432
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4436
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = SQLCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.str = DistinctStr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.str = DistinctStr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.str = StraightJoinHint
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4472
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4482
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4486
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4490
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4494
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4499
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4507
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4519
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4523
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4529
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4535
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4539
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4549
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4553
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4557
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4561
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4567
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4573
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4577
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4586
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4592
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4602
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4606
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4612
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4616
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4620
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4630
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4647
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4651
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4655
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4659
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4665
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4667
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4671
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4682
		{
			yyVAL.empty = struct{}{}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.empty = struct{}{}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4695
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4708
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4712
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4716
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4722
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4728
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4732
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4736
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4740
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4746
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4750
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4760
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4774
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4789
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4795
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4799
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4805
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4809
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4813
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4817
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4822
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4826
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4830
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4834
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4844
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4882
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4886
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4900
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5103
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5107
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5113
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5117
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5124
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5128
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5132
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5136
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5142
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5146
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5150
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5154
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5158
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5162
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5166
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5172
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5176
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5180
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5187
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5193
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5197
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5456
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5465
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5471
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5475
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5493
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5497
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5501
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5505
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5509
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5513
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5517
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5521
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5525
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5529
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5533
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5539
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5543
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5547
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5551
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5555
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5559
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5563
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5567
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5571
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5626
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5630
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5634
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5638
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5642
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5666
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5670
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5676
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5680
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5684
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5688
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5692
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5698
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5702
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5706
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5710
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5714
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5718
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5722
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5726
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5730
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5734
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = string("")
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5753
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5759
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5769
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5784
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5788
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5792
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5821
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5839
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5845
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5851
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5855
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5861
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5866
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5870
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5874
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5883
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5889
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5893
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5897
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5906
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5910
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5914
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5918
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5925
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5929
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5933
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5937
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5943
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5947
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5951
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = ""
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5968
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5973
		{
			yyVAL.str = ""
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5977
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5983
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = ""
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5996
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = "cascaded"
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6018
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6024
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6030
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6036
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6045
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6054
		{
			yyVAL.str = ""
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6058
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6064
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6068
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6074
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6078
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6082
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6087
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = ""
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.str = " header"
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = ""
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6113
		{
			yyVAL.str = " manifest on"
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = " manifest off"
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = " overwrite on"
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = " overwrite off"
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6136
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6141
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6145
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6151
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6155
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6161
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6165
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6170
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6184
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6194
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6198
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6203
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.str = " optionally"
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6220
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6224
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6228
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6232
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6236
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6242
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6246
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6250
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6254
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6263
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6269
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6273
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6279
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6283
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6289
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6304
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6308
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6314
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6320
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6324
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6330
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6334
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6338
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6342
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6346
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6354
		{
			yyVAL.str = "charset"
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6381
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6383
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6398
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6401
		{
			yyVAL.empty = struct{}{}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6403
		{
			yyVAL.empty = struct{}{}
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.empty = struct{}{}
		}
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6409
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6418
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6425
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6429
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6439
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6452
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6462
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6466
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6473
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6988
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6997
		{
			decNesting(yylex)
		}
	case 1787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7002
		{
			skipToEnd(yylex)
		}
	case 1788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7007
		{
			skipToEnd(yylex)
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7011
		{
			skipToEnd(yylex)
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7015
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
