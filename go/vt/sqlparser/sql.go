// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const MATCH = 57819
const AGAINST = 57820
const BOOLEAN = 57821
const LANGUAGE = 57822
const WITH = 57823
const QUERY = 57824
const EXPANSION = 57825
const WITHOUT = 57826
const VALIDATION = 57827
const UNUSED = 57828
const ARRAY = 57829
const BYTE = 57830
const CUME_DIST = 57831
const DESCRIPTION = 57832
const DENSE_RANK = 57833
const EMPTY = 57834
const EXCEPT = 57835
const FIRST_VALUE = 57836
const GROUPING = 57837
const GROUPS = 57838
const JSON_TABLE = 57839
const LAG = 57840
const LAST_VALUE = 57841
const LATERAL = 57842
const LEAD = 57843
const NTH_VALUE = 57844
const NTILE = 57845
const OF = 57846
const OVER = 57847
const PERCENT_RANK = 57848
const RANK = 57849
const RECURSIVE = 57850
const ROW_NUMBER = 57851
const SYSTEM = 57852
const WINDOW = 57853
const ACTIVE = 57854
const ADMIN = 57855
const AUTOEXTEND_SIZE = 57856
const BUCKETS = 57857
const CLONE = 57858
const COLUMN_FORMAT = 57859
const COMPONENT = 57860
const DEFINITION = 57861
const ENFORCED = 57862
const ENGINE_ATTRIBUTE = 57863
const EXCLUDE = 57864
const FOLLOWING = 57865
const GEOMCOLLECTION = 57866
const GET_MASTER_PUBLIC_KEY = 57867
const HISTOGRAM = 57868
const HISTORY = 57869
const INACTIVE = 57870
const INVISIBLE = 57871
const LOCKED = 57872
const MASTER_COMPRESSION_ALGORITHMS = 57873
const MASTER_PUBLIC_KEY_PATH = 57874
const MASTER_TLS_CIPHERSUITES = 57875
const MASTER_ZSTD_COMPRESSION_LEVEL = 57876
const NESTED = 57877
const NETWORK_NAMESPACE = 57878
const NOWAIT = 57879
const NULLS = 57880
const OJ = 57881
const OLD = 57882
const OPTIONAL = 57883
const ORDINALITY = 57884
const ORGANIZATION = 57885
const OTHERS = 57886
const PARTIAL = 57887
const PATH = 57888
const PERSIST = 57889
const PERSIST_ONLY = 57890
const PRECEDING = 57891
const PRIVILEGE_CHECKS_USER = 57892
const PROCESS = 57893
const RANDOM = 57894
const REFERENCE = 57895
const REQUIRE_ROW_FORMAT = 57896
const RESOURCE = 57897
const RESPECT = 57898
const RESTART = 57899
const RETAIN = 57900
const REUSE = 57901
const ROLE = 57902
const SECONDARY = 57903
const SECONDARY_ENGINE = 57904
const SECONDARY_ENGINE_ATTRIBUTE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SIMPLE = 57908
const SKIP = 57909
const SRID = 57910
const THREAD_PRIORITY = 57911
const TIES = 57912
const UNBOUNDED = 57913
const VCPU = 57914
const VISIBLE = 57915
const RETURNING = 57916
const FORMAT_BYTES = 57917
const FORMAT_PICO_TIME = 57918
const PS_CURRENT_THREAD_ID = 57919
const PS_THREAD_ID = 57920
const FORMAT = 57921
const TREE = 57922
const VITESS = 57923
const TRADITIONAL = 57924
const LOCAL = 57925
const LOW_PRIORITY = 57926
const NO_WRITE_TO_BINLOG = 57927
const LOGS = 57928
const ERROR = 57929
const GENERAL = 57930
const HOSTS = 57931
const OPTIMIZER_COSTS = 57932
const USER_RESOURCES = 57933
const SLOW = 57934
const CHANNEL = 57935
const RELAY = 57936
const EXPORT = 57937
const CURRENT = 57938
const ROW = 57939
const ROWS = 57940
const AVG_ROW_LENGTH = 57941
const CONNECTION = 57942
const CHECKSUM = 57943
const DELAY_KEY_WRITE = 57944
const ENCRYPTION = 57945
const ENGINE = 57946
const INSERT_METHOD = 57947
const MAX_ROWS = 57948
const MIN_ROWS = 57949
const PACK_KEYS = 57950
const PASSWORD = 57951
const FIXED = 57952
const DYNAMIC = 57953
const COMPRESSED = 57954
const REDUNDANT = 57955
const COMPACT = 57956
const ROW_FORMAT = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const MEMORY = 57962
const DISK = 57963
const PARTITIONS = 57964
const LINEAR = 57965
const RANGE = 57966
const LIST = 57967
const SUBPARTITION = 57968
const SUBPARTITIONS = 57969
const HASH = 57970

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 49,
	13, 49,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 147,
	646, 147,
	-2, 155,
	-1, 48,
	132, 155,
	173, 155,
	335, 155,
	-2, 500,
	-1, 55,
	35, 742,
	235, 742,
	246, 742,
	281, 756,
	282, 756,
	-2, 744,
	-1, 60,
	237, 769,
	-2, 767,
	-1, 114,
	234, 1399,
	-2, 121,
	-1, 116,
	1, 148,
	646, 148,
	-2, 155,
	-1, 127,
	133, 386,
	240, 386,
	-2, 489,
	-1, 146,
	132, 155,
	173, 155,
	335, 155,
	-2, 509,
	-1, 777,
	218, 1420,
	-2, 1416,
	-1, 778,
	218, 1421,
	-2, 1417,
	-1, 854,
	59, 837,
	-2, 852,
	-1, 891,
	148, 1854,
	-2, 114,
	-1, 892,
	148, 1682,
	-2, 115,
	-1, 898,
	148, 1771,
	-2, 1393,
	-1, 1048,
	148, 1604,
	-2, 1390,
	-1, 1089,
	245, 40,
	250, 40,
	-2, 397,
	-1, 1174,
	1, 557,
	646, 557,
	-2, 155,
	-1, 1449,
	59, 838,
	-2, 857,
	-1, 1450,
	59, 839,
	-2, 858,
	-1, 1503,
	132, 155,
	173, 155,
	335, 155,
	-2, 436,
	-1, 1582,
	133, 386,
	240, 386,
	-2, 489,
	-1, 1591,
	245, 41,
	250, 41,
	-2, 398,
	-1, 1931,
	218, 1425,
	-2, 1419,
	-1, 2027,
	132, 155,
	173, 155,
	335, 155,
	-2, 437,
	-1, 2034,
	25, 176,
	-2, 178,
	-1, 2377,
	77, 96,
	87, 96,
	-2, 914,
	-1, 2445,
	621, 669,
	-2, 643,
	-1, 2604,
	49, 1360,
	-2, 1354,
	-1, 2885,
	7, 55,
	18, 55,
	20, 55,
	88, 55,
	-2, 886,
	-1, 3227,
	621, 669,
	-2, 657,
	-1, 3317,
	22, 1773,
	32, 1773,
	174, 1773,
	257, 1773,
	315, 1773,
	316, 1773,
	317, 1773,
	318, 1773,
	319, 1773,
	320, 1773,
	321, 1773,
	323, 1773,
	324, 1773,
	325, 1773,
	326, 1773,
	327, 1773,
	328, 1773,
	329, 1773,
	330, 1773,
	331, 1773,
	332, 1773,
	333, 1773,
	334, 1773,
	336, 1773,
	338, 1773,
	339, 1773,
	340, 1773,
	341, 1773,
	342, 1773,
	343, 1773,
	344, 1773,
	345, 1773,
	346, 1773,
	349, 1773,
	350, 1773,
	351, 1773,
	352, 1773,
	353, 1773,
	354, 1773,
	355, 1773,
	356, 1773,
	357, 1773,
	496, 1773,
	-2, 601,
}

const yyPrivate = 57344

const yyLast = 45410

var yyAct = [...]int{
	1457, 3388, 2987, 2988, 777, 786, 3400, 2986, 3357, 779,
	1805, 3208, 3358, 3295, 664, 3315, 1506, 3260, 2822, 3283,
	2024, 2753, 2659, 2962, 3192, 1957, 1977, 3143, 2666, 780,
	2707, 3, 2716, 2721, 2718, 1237, 2717, 2617, 3190, 2715,
	2720, 750, 37, 2719, 2949, 751, 1959, 847, 2620, 2278,
	651, 3015, 1427, 2621, 2309, 186, 2565, 2736, 186, 869,
	2094, 186, 3180, 2674, 2735, 1464, 627, 647, 186, 2618,
	2856, 2506, 3020, 2850, 1997, 2615, 186, 748, 672, 2738,
	2371, 2348, 2605, 1981, 749, 2876, 1920, 2335, 2057, 643,
	2410, 186, 2842, 1560, 645, 2411, 2125, 2489, 2082, 2412,
	644, 2758, 155, 2013, 2442, 2062, 36, 1051, 2360, 870,
	896, 1600, 849, 627, 2002, 38, 627, 186, 627, 851,
	639, 855, 2327, 1451, 2311, 2341, 1925, 2001, 1917, 2103,
	1801, 2481, 1891, 1186, 141, 1811, 1989, 1759, 2064, 872,
	2081, 1607, 1215, 2142, 893, 1589, 2404, 95, 1079, 1890,
	96, 1084, 1495, 2379, 1473, 656, 1121, 1708, 2004, 1322,
	91, 1431, 1819, 1258, 1778, 1928, 1596, 611, 1058, 1090,
	2079, 1688, 1055, 1059, 2053, 1494, 1085, 1086, 1704, 1492,
	1478, 1887, 861, 1982, 1290, 1827, 856, 1229, 159, 119,
	117, 118, 1555, 1235, 1581, 857, 124, 125, 98, 883,
	859, 1170, 1713, 102, 85, 76, 634, 97, 1325, 1949,
	89, 1087, 1097, 3389, 3217, 1329, 2435, 2726, 2096, 2097,
	2098, 2096, 2950, 2704, 2465, 2464, 3245, 2433, 2140, 1673,
	2723, 8, 2726, 2942, 7, 1259, 120, 6, 877, 582,
	882, 858, 77, 126, 104, 105, 90, 108, 3341, 1126,
	114, 863, 3246, 183, 87, 2905, 577, 87, 615, 87,
	792, 793, 794, 1052, 2497, 2498, 621, 1259, 2991, 792,
	793, 794, 635, 87, 3240, 2724, 843, 844, 845, 846,
	3241, 621, 854, 850, 848, 1954, 1955, 1781, 890, 1766,
	2724, 2991, 897, 1765, 1764, 1763, 1762, 2730, 1761, 1077,
	1123, 864, 871, 1744, 1076, 120, 1075, 1074, 1073, 615,
	885, 886, 2730, 1140, 1141, 1142, 3296, 1145, 1146, 1147,
	1148, 3336, 2307, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1100, 1101, 1269, 1143, 637, 1753, 638, 2601, 1458, 1275,
	2337, 612, 2455, 2990, 2129, 1063, 3325, 2569, 3345, 1127,
	1130, 1131, 3411, 1134, 1068, 3356, 3343, 2827, 3379, 3241,
	3323, 2826, 2127, 120, 1269, 2458, 2990, 3193, 2279, 3329,
	3330, 1771, 752, 2775, 3344, 3361, 3408, 2676, 2677, 3139,
	3138, 752, 3342, 2955, 3324, 1125, 2956, 3293, 2128, 598,
	1124, 615, 1291, 2184, 3392, 3236, 3370, 2963, 2727, 3284,
	2122, 596, 3292, 78, 78, 78, 80, 2073, 2505, 78,
	3320, 2793, 182, 2727, 3148, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1300, 1299, 1301, 1302, 3235, 3222, 2351, 1570,
	2308, 1265, 2067, 1985, 1257, 2473, 121, 2655, 143, 2472,
	1496, 593, 1497, 1072, 2496, 1179, 1180, 2656, 2657, 164,
	607, 616, 2018, 2352, 3033, 2181, 2388, 1205, 2182, 2387,
	1232, 1173, 2389, 1265, 1222, 603, 1224, 2019, 2020, 841,
	840, 1272, 2436, 1273, 1274, 1956, 3209, 1182, 2400, 2537,
	154, 87, 87, 87, 2675, 1206, 142, 87, 2783, 1067,
	1210, 1211, 1069, 1193, 1193, 2755, 2678, 1199, 1194, 1194,
	615, 1070, 616, 625, 1221, 1223, 1192, 161, 1191, 162,
	2037, 2036, 2344, 2345, 2781, 1752, 623, 629, 2853, 2154,
	2151, 2153, 2152, 2155, 2156, 130, 131, 153, 152, 181,
	2759, 615, 1435, 2482, 583, 1694, 585, 599, 1169, 618,
	2104, 617, 589, 2443, 587, 591, 600, 592, 3169, 586,
	3170, 597, 2468, 2143, 588, 601, 602, 605, 608, 609,
	610, 606, 604, 3362, 595, 619, 1231, 2748, 615, 3391,
	1207, 186, 1144, 186, 2066, 2749, 186, 1663, 2148, 2160,
	2756, 2161, 1200, 2162, 3363, 1212, 1754, 1755, 1756, 1072,
	1226, 1064, 1689, 1214, 616, 1213, 1208, 1209, 1066, 1065,
	1175, 1219, 2484, 2944, 2147, 1220, 627, 2943, 627, 627,
	1985, 2163, 1150, 1072, 1168, 1225, 1149, 1983, 1984, 1071,
	3123, 1664, 2107, 1665, 627, 627, 2757, 3337, 147, 128,
	150, 135, 127, 2149, 148, 149, 2145, 2538, 2940, 1218,
	165, 1080, 2995, 1998, 1081, 1081, 2146, 1070, 1119, 171,
	136, 1118, 1117, 1251, 1264, 1261, 1262, 1263, 1268, 1270,
	1267, 1110, 1266, 37, 139, 137, 132, 133, 134, 138,
	1116, 1574, 1260, 1115, 1114, 1108, 129, 1113, 1172, 1112,
	1107, 1438, 2568, 1120, 1305, 140, 1264, 1261, 1262, 1263,
	1268, 1270, 1267, 1305, 1266, 2678, 1056, 3412, 1056, 2182,
	2488, 1093, 1054, 616, 1260, 1203, 3368, 1189, 3404, 1195,
	1196, 1197, 1198, 1129, 1239, 3216, 1056, 2434, 1595, 1092,
	1705, 1092, 2080, 1128, 884, 2485, 2133, 2312, 2314, 2132,
	1701, 1245, 1233, 1234, 616, 1227, 1078, 1308, 1309, 1310,
	1311, 1695, 1137, 3298, 2697, 1696, 1697, 1316, 2467, 1099,
	1568, 2939, 3298, 3149, 2437, 1136, 1567, 1566, 2453, 2126,
	1702, 2470, 1564, 581, 2402, 1071, 156, 620, 3297, 2501,
	576, 616, 789, 2480, 1171, 789, 2479, 3297, 2196, 1306,
	1307, 3205, 2124, 2892, 2872, 1240, 2728, 2729, 613, 1071,
	3328, 789, 2384, 2347, 1983, 1984, 2289, 1241, 1242, 2732,
	1948, 2728, 2729, 614, 1312, 2854, 1099, 1111, 1482, 1395,
	1184, 2342, 2025, 116, 2732, 1675, 1674, 1676, 1677, 1678,
	1425, 1109, 1693, 1305, 1302, 1594, 2654, 1420, 2070, 3230,
	1099, 2989, 866, 81, 3327, 186, 1216, 1401, 1714, 627,
	627, 2903, 2904, 1188, 151, 2507, 1230, 1459, 1461, 3234,
	1098, 1122, 2935, 1254, 2989, 186, 1252, 2457, 2866, 1253,
	2491, 2491, 2144, 77, 1099, 2490, 2490, 1698, 2071, 2183,
	1327, 1099, 1328, 1498, 627, 1255, 2069, 1820, 186, 2524,
	1441, 1331, 2426, 627, 1445, 1426, 111, 3371, 1442, 627,
	851, 2313, 1274, 86, 86, 86, 1820, 1439, 2209, 86,
	3029, 2456, 2910, 144, 2121, 1202, 145, 1098, 1273, 1274,
	2072, 2909, 1102, 1092, 893, 2111, 1204, 1104, 1604, 1603,
	2068, 1105, 1103, 1178, 3402, 1190, 2811, 3403, 2509, 3401,
	1593, 1098, 1181, 1828, 2119, 1110, 157, 1092, 1095, 1096,
	2116, 1056, 1106, 169, 1108, 1089, 1093, 1829, 3364, 1426,
	1483, 1443, 1099, 2893, 1444, 95, 112, 3262, 96, 1402,
	1403, 1404, 1405, 1406, 3198, 1098, 1088, 1135, 1690, 1683,
	1691, 1132, 1098, 1692, 2123, 2662, 1783, 2120, 1092, 1095,
	1096, 1217, 1056, 1715, 1187, 177, 1089, 1093, 3413, 1432,
	1784, 1303, 1304, 1782, 2519, 2518, 2517, 2511, 1174, 2515,
	3263, 2510, 3406, 2508, 2116, 3131, 98, 3199, 2513, 1295,
	1296, 1297, 1298, 1300, 1299, 1301, 1302, 2512, 1275, 3130,
	2663, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 3121, 1682, 2514, 2516, 1429, 176, 178, 179,
	180, 2118, 2969, 1440, 2970, 186, 2665, 1446, 848, 1493,
	1458, 1463, 1681, 1098, 850, 2981, 1460, 1824, 1102, 1092,
	2660, 1825, 897, 1104, 3365, 1275, 1291, 1105, 1103, 1287,
	2980, 1288, 2917, 3414, 1826, 1488, 1489, 2676, 2677, 1773,
	1775, 1776, 627, 2789, 2661, 1289, 1303, 1304, 1286, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1300, 1299, 1301, 1302,
	1670, 627, 627, 1774, 627, 2916, 627, 627, 2906, 627,
	627, 627, 627, 627, 627, 2705, 1680, 2667, 1297, 1298,
	1300, 1299, 1301, 1302, 2693, 1275, 627, 2408, 186, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1300, 1299, 1301, 1302,
	2407, 1601, 2188, 2189, 2190, 2076, 1922, 1684, 186, 1458,
	1272, 1919, 1273, 1274, 1275, 1921, 1556, 1668, 888, 2526,
	1667, 627, 1666, 186, 1669, 1656, 1565, 1650, 1636, 1647,
	1646, 1639, 787, 1641, 792, 793, 794, 627, 1645, 186,
	1275, 1616, 621, 621, 2675, 1587, 2900, 2391, 2091, 2089,
	1658, 1591, 2092, 2090, 2087, 186, 2678, 1272, 2088, 1273,
	1274, 3225, 186, 1602, 3224, 1467, 1605, 1606, 1580, 1458,
	3202, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	627, 3201, 3200, 1571, 1572, 1573, 3126, 1275, 3111, 1640,
	1637, 1638, 1275, 1599, 627, 627, 1643, 3375, 1458, 1609,
	3110, 1610, 2243, 1612, 1614, 3028, 3026, 1618, 1620, 1622,
	1624, 1626, 186, 1598, 1563, 1468, 2977, 1272, 2914, 1273,
	1274, 2899, 1569, 3373, 1458, 1275, 2760, 1577, 2696, 1578,
	1576, 2695, 1590, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1277, 1703, 2417, 2405, 1422, 1710, 1272, 2138, 1273, 1274,
	1648, 1649, 2137, 1980, 1962, 1275, 1654, 1655, 1597, 1597,
	627, 1745, 1808, 1808, 1711, 2664, 1806, 1806, 1809, 1679,
	2887, 1644, 1272, 1671, 1273, 1274, 1458, 1822, 1275, 1661,
	1657, 1823, 1779, 1718, 1716, 1717, 1653, 1652, 1651, 1275,
	1722, 1469, 1724, 1725, 1726, 1727, 1228, 1922, 1721, 1731,
	2752, 1244, 621, 627, 627, 1728, 1729, 1730, 3307, 1458,
	1706, 1743, 1883, 120, 1075, 1074, 1073, 94, 1777, 1272,
	1458, 1273, 1274, 1275, 1272, 1821, 1273, 1274, 2201, 2333,
	3390, 1275, 3352, 1458, 1787, 1271, 1458, 3156, 2200, 1786,
	1915, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1720, 2329, 627, 1272, 3155, 1273,
	1274, 3305, 1458, 1275, 1742, 3115, 1946, 1275, 1888, 1741,
	94, 1291, 2841, 2500, 92, 1275, 1458, 1459, 1950, 3114,
	1814, 1929, 2961, 1749, 1750, 93, 2444, 1272, 186, 1273,
	1274, 2422, 1780, 627, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1300, 1299, 1301, 1302, 101, 3303, 1458, 2333, 3290,
	1272, 1974, 1273, 1274, 3178, 1458, 100, 186, 99, 2033,
	627, 1272, 1785, 1273, 1274, 2865, 1918, 94, 2197, 1810,
	186, 1951, 2333, 3270, 627, 1815, 1816, 1888, 2668, 186,
	1458, 186, 2672, 186, 186, 627, 3176, 1458, 627, 100,
	2671, 3366, 1967, 2616, 1968, 1272, 1931, 1273, 1274, 627,
	2333, 3266, 1271, 1272, 2865, 1273, 1274, 2867, 1929, 1830,
	1831, 1832, 1833, 3258, 1933, 1934, 893, 2034, 3229, 893,
	1275, 3253, 1458, 1844, 2673, 95, 1458, 2356, 96, 2669,
	2206, 2333, 3218, 2349, 2670, 1272, 2333, 1273, 1274, 1272,
	2349, 1273, 1274, 1930, 1291, 95, 2195, 1272, 96, 1273,
	1274, 101, 1932, 2077, 627, 1935, 1936, 1275, 1271, 2000,
	2953, 3215, 100, 2357, 99, 1973, 2831, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1300, 1299, 1301, 1302, 1275, 92,
	2684, 627, 2357, 1931, 3134, 1458, 94, 627, 2333, 3122,
	93, 2043, 2044, 2045, 2046, 2038, 2028, 2039, 2040, 2041,
	2042, 1275, 2029, 2205, 1972, 2357, 1961, 2953, 1458, 2589,
	1275, 863, 2865, 2049, 2050, 2051, 2052, 2011, 1293, 1294,
	1295, 1296, 1297, 1298, 1300, 1299, 1301, 1302, 2333, 2951,
	1995, 87, 1458, 2059, 627, 1975, 2105, 2116, 1458, 627,
	3173, 1458, 2117, 627, 627, 1458, 2032, 2065, 2870, 1458,
	1993, 1275, 1272, 2649, 1273, 1274, 2017, 2016, 2197, 1275,
	2015, 3159, 1458, 2182, 897, 2252, 1458, 897, 2083, 2084,
	2085, 2031, 2030, 2252, 1990, 1991, 1275, 2686, 2685, 2682,
	2683, 186, 2682, 2681, 2102, 3213, 2232, 2075, 186, 1272,
	2231, 1273, 1274, 2839, 1458, 186, 186, 2357, 1458, 186,
	2116, 186, 2197, 1458, 2182, 2466, 2115, 2116, 186, 2099,
	1272, 1988, 1273, 1274, 1462, 186, 2055, 2056, 2060, 1559,
	2447, 1275, 1952, 2074, 1757, 2078, 2440, 2441, 1700, 2110,
	2086, 1490, 2113, 1272, 2114, 1273, 1274, 2130, 1471, 1083,
	2380, 186, 1272, 3119, 1273, 1274, 627, 1082, 1291, 3333,
	2108, 2109, 2112, 2060, 2333, 2332, 1559, 1558, 853, 2837,
	2131, 1504, 1503, 3273, 1275, 2134, 3145, 1465, 1275, 2135,
	2136, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1299,
	1301, 1302, 3112, 1272, 3040, 1273, 1274, 1100, 1101, 2934,
	2931, 1272, 2912, 1273, 1274, 2798, 2797, 1561, 1597, 1275,
	2058, 2198, 2750, 2381, 1470, 2202, 2203, 2204, 1272, 2710,
	1273, 1274, 2211, 2383, 2141, 2212, 2213, 2214, 1779, 2706,
	2448, 2054, 1275, 2048, 2047, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 1275, 87, 1686, 1592, 1588,
	2173, 2174, 1557, 113, 2708, 2176, 2414, 2836, 1458, 1173,
	2754, 2834, 1458, 1272, 2177, 1273, 1274, 2877, 2878, 3146,
	2073, 2236, 2237, 2238, 2239, 2240, 2380, 2242, 1275, 2193,
	2215, 2166, 2245, 2246, 2192, 2247, 2194, 1275, 2250, 1965,
	2251, 3385, 2787, 1458, 2254, 3383, 3359, 2230, 2258, 1275,
	1868, 1747, 2263, 2264, 2265, 2266, 1272, 2918, 1273, 1274,
	1272, 1275, 1273, 1274, 3239, 2277, 2936, 2280, 2281, 3164,
	2880, 2180, 2702, 2701, 2413, 2283, 2285, 2700, 2284, 1458,
	2616, 1275, 2235, 2290, 2291, 2292, 2293, 2294, 1780, 2381,
	1275, 1272, 2427, 1273, 1274, 2301, 2302, 2191, 2303, 2182,
	1974, 2167, 2305, 1275, 2883, 2882, 2635, 186, 2919, 2920,
	2921, 2809, 2317, 1748, 1272, 186, 1273, 1274, 1275, 1808,
	2267, 1458, 2414, 1806, 2318, 1632, 627, 1272, 2634, 1273,
	1274, 2208, 2259, 1458, 2304, 1275, 3339, 627, 1860, 1849,
	1850, 1851, 1852, 1862, 1853, 1854, 1855, 1867, 1863, 1856,
	1857, 1864, 1865, 1866, 1858, 1859, 1861, 2316, 3291, 1979,
	1272, 186, 1273, 1274, 2805, 186, 1466, 1971, 2871, 1272,
	2638, 1273, 1274, 2795, 1275, 2639, 1633, 1634, 1635, 2353,
	2594, 1272, 2922, 1273, 1274, 2241, 2794, 2593, 2640, 37,
	2366, 2367, 1275, 1272, 2636, 1273, 1274, 2858, 2373, 2637,
	2319, 2300, 2321, 3197, 3021, 2857, 1275, 3019, 3010, 1931,
	3009, 2861, 1275, 1272, 2334, 1273, 1274, 2603, 867, 2409,
	2680, 1699, 1272, 1275, 1273, 1274, 868, 1275, 627, 2923,
	2924, 2925, 2418, 839, 186, 1272, 2398, 1273, 1274, 1139,
	1138, 186, 2286, 2287, 2199, 2606, 2608, 2330, 92, 2768,
	1272, 2413, 1273, 1274, 2609, 627, 1930, 2299, 3008, 93,
	2343, 1432, 627, 2372, 2306, 1275, 2494, 1272, 1243, 1273,
	1274, 627, 1828, 2401, 2403, 2298, 2454, 2439, 121, 2863,
	2394, 92, 2331, 2326, 1990, 1991, 1829, 2390, 94, 2297,
	3398, 94, 93, 2346, 2698, 2296, 2170, 1275, 2378, 3312,
	186, 186, 186, 186, 186, 2463, 1272, 3214, 1273, 1274,
	2295, 1275, 2065, 3141, 2679, 1275, 2382, 2370, 2159, 1976,
	2385, 186, 186, 2158, 1272, 2392, 1273, 1274, 2157, 1275,
	2843, 2395, 2186, 2461, 1628, 875, 876, 186, 1272, 778,
	1273, 1274, 2592, 99, 1272, 2406, 1273, 1274, 2282, 3185,
	2591, 3184, 2415, 3167, 3027, 1272, 627, 1273, 1274, 1272,
	3025, 1273, 1274, 3024, 2423, 3017, 2527, 2528, 2529, 2530,
	2531, 2932, 2424, 2416, 2428, 2429, 2430, 2862, 2419, 2420,
	2276, 1629, 1630, 1631, 1580, 2536, 2460, 2860, 2711, 2100,
	187, 101, 1575, 187, 2275, 2462, 187, 1272, 2274, 1273,
	1274, 628, 100, 187, 99, 101, 874, 2449, 2450, 100,
	2459, 187, 2273, 94, 101, 1275, 100, 2362, 2365, 2366,
	2367, 2363, 2520, 2364, 2368, 100, 187, 99, 2532, 1272,
	3016, 1273, 1274, 2851, 627, 2502, 2349, 2574, 2575, 2999,
	2483, 2503, 1275, 1272, 627, 1273, 1274, 1272, 628, 1273,
	1274, 628, 187, 628, 2486, 3387, 3386, 1275, 2546, 2329,
	2548, 1272, 1275, 1273, 1274, 2492, 2539, 3386, 2493, 2233,
	627, 1963, 103, 1484, 1475, 2577, 2559, 2560, 2561, 2562,
	3387, 2570, 2521, 2504, 186, 3203, 1456, 1452, 627, 2898,
	2572, 106, 107, 2362, 2365, 2366, 2367, 2363, 2272, 2364,
	2368, 1453, 627, 2877, 2878, 2625, 865, 1275, 88, 627,
	627, 1, 186, 186, 186, 186, 186, 1918, 2902, 1918,
	3322, 594, 2643, 2644, 186, 2271, 1969, 1970, 1455, 186,
	1454, 1953, 186, 2577, 186, 2544, 1430, 186, 186, 186,
	2270, 3360, 3318, 3319, 2628, 2269, 855, 1272, 2622, 1273,
	1274, 1672, 2619, 2648, 1662, 2964, 1889, 2619, 2613, 2596,
	2597, 2571, 3142, 2573, 2714, 2576, 1445, 2373, 2554, 2555,
	2556, 2557, 2558, 2106, 1272, 2930, 1273, 1274, 2063, 1091,
	146, 2026, 186, 2027, 3286, 2584, 110, 1049, 109, 1272,
	2268, 1273, 1274, 1094, 1272, 627, 1273, 1274, 1201, 2595,
	2101, 2954, 2399, 627, 2598, 2035, 1510, 2588, 186, 1508,
	2650, 856, 1509, 2651, 2610, 2611, 1507, 1512, 1511, 2774,
	857, 2234, 186, 2630, 2631, 2734, 2633, 2641, 2810, 1751,
	624, 2645, 2646, 95, 1275, 2629, 96, 2652, 2632, 1272,
	186, 1273, 1274, 186, 2713, 1710, 2658, 2627, 1275, 2369,
	2770, 184, 1499, 1275, 1476, 2823, 2688, 1133, 2690, 1275,
	584, 2689, 2687, 2139, 590, 1317, 1275, 1746, 2590, 2386,
	894, 2785, 2786, 2788, 2790, 2585, 2586, 2587, 887, 1275,
	2694, 1964, 2320, 2742, 1275, 2624, 2796, 2855, 1275, 2602,
	2741, 2800, 2801, 2802, 2803, 2604, 2065, 2804, 2712, 2806,
	2807, 2808, 2336, 2733, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2745, 2607, 1275, 2262, 627, 2600,
	2691, 2692, 2828, 3196, 3018, 3271, 2396, 2832, 2764, 2833,
	2835, 2261, 2838, 2840, 2763, 2761, 2260, 1472, 2830, 2846,
	2771, 2207, 2257, 1818, 2005, 186, 2772, 2994, 1772, 2256,
	2779, 2776, 2777, 649, 2778, 648, 646, 2780, 2322, 2782,
	2769, 2784, 2255, 2350, 1275, 2825, 1272, 2253, 1273, 1274,
	1278, 2249, 2829, 781, 2868, 2869, 2766, 2767, 2873, 2310,
	1272, 1485, 1273, 1274, 2361, 1272, 2359, 1273, 1274, 2358,
	2168, 1272, 2012, 1273, 1274, 2879, 2885, 2886, 1272, 2248,
	1273, 1274, 2875, 3314, 186, 2007, 2003, 2328, 740, 657,
	650, 1272, 642, 1273, 1274, 739, 1272, 738, 1273, 1274,
	1272, 2895, 1273, 1274, 2740, 3299, 2847, 2849, 2469, 2844,
	2845, 2751, 2471, 186, 1456, 1452, 2397, 2859, 2852, 2747,
	1256, 1448, 636, 2864, 1062, 3147, 3220, 2244, 1272, 1453,
	1273, 1274, 186, 2185, 2792, 186, 186, 186, 2884, 1447,
	2874, 1847, 1848, 3227, 2722, 627, 627, 2948, 2881, 2703,
	2445, 2093, 640, 2888, 1449, 1450, 1455, 63, 1454, 41,
	2889, 3191, 2890, 2891, 3259, 737, 2952, 2937, 2938, 734,
	2742, 2896, 2897, 2996, 2997, 2998, 1272, 2741, 1273, 1274,
	2566, 2567, 3242, 3243, 733, 3244, 1875, 631, 3335, 627,
	627, 627, 627, 1247, 881, 2913, 187, 2915, 187, 32,
	31, 187, 30, 2958, 2959, 2972, 29, 28, 23, 2901,
	22, 21, 20, 19, 25, 18, 17, 16, 2725, 3355,
	3397, 115, 50, 47, 45, 123, 122, 48, 44, 1176,
	2982, 628, 42, 628, 628, 27, 26, 15, 14, 13,
	12, 2985, 2960, 11, 10, 9, 5, 4, 35, 628,
	628, 34, 873, 2993, 33, 879, 1250, 879, 24, 2907,
	2908, 3000, 2, 2432, 2095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 2976, 0, 0, 0, 0, 0, 2983, 0,
	0, 2973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3013, 0, 2971, 627, 0, 627, 0, 0,
	0, 2941, 0, 2992, 0, 2945, 2946, 2947, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 1806, 3042, 0,
	0, 3034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 37, 0, 2622, 0, 0, 2619, 2622, 0, 0,
	3036, 3032, 3038, 3014, 0, 0, 3023, 3022, 0, 0,
	0, 0, 0, 0, 0, 3030, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3133,
	0, 0, 186, 0, 0, 627, 0, 0, 3140, 0,
	0, 3120, 0, 0, 0, 0, 3046, 0, 627, 0,
	3043, 3044, 0, 0, 0, 3150, 3151, 3152, 0, 3153,
	3154, 0, 0, 0, 3157, 3158, 3124, 3160, 3163, 3161,
	3162, 0, 3116, 3118, 3132, 0, 3117, 1808, 0, 3144,
	0, 1806, 3165, 3172, 3174, 3175, 3177, 3179, 3181, 0,
	0, 3137, 627, 0, 0, 3136, 627, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 628, 628, 0, 0, 0, 0,
	0, 0, 3166, 0, 0, 627, 3211, 0, 0, 0,
	187, 0, 0, 3168, 0, 0, 0, 3171, 0, 0,
	0, 0, 0, 0, 0, 0, 3189, 3207, 3188, 628,
	3195, 0, 0, 187, 3186, 3187, 0, 0, 628, 2622,
	0, 0, 3204, 0, 628, 0, 0, 0, 0, 0,
	0, 3210, 0, 0, 0, 0, 0, 0, 3206, 3127,
	3128, 3129, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 121, 0, 0, 0, 0, 0, 3212,
	0, 0, 0, 0, 0, 0, 164, 0, 3233, 0,
	627, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3238, 0, 0, 0, 0, 0, 0, 3219,
	0, 0, 3231, 3228, 3223, 0, 0, 0, 0, 3226,
	0, 3254, 0, 37, 0, 0, 0, 3255, 3256, 2393,
	0, 0, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 3267,
	627, 0, 3237, 0, 0, 0, 0, 0, 3248, 0,
	3247, 3249, 0, 0, 0, 0, 181, 0, 3257, 0,
	0, 0, 0, 0, 627, 627, 0, 0, 3294, 0,
	187, 3264, 0, 0, 0, 0, 3272, 0, 3274, 0,
	0, 3302, 3304, 3306, 2619, 0, 37, 3285, 627, 3301,
	3277, 3282, 3279, 0, 3278, 3144, 3287, 3276, 3281, 0,
	3269, 3280, 186, 627, 3300, 0, 3334, 628, 0, 0,
	0, 0, 0, 3310, 0, 0, 0, 0, 0, 0,
	0, 0, 3331, 3313, 3321, 0, 628, 628, 0, 628,
	3326, 628, 628, 0, 628, 628, 628, 628, 628, 628,
	3340, 3301, 3338, 0, 0, 3351, 627, 0, 0, 0,
	0, 628, 0, 187, 0, 0, 3300, 0, 0, 3349,
	0, 0, 0, 3354, 0, 0, 0, 165, 627, 0,
	0, 0, 0, 187, 0, 0, 171, 3372, 3374, 3376,
	0, 0, 0, 0, 0, 627, 628, 627, 187, 0,
	3367, 1808, 3369, 0, 1276, 1806, 3381, 3384, 3378, 3377,
	3382, 0, 628, 0, 187, 3380, 0, 0, 3396, 0,
	0, 0, 0, 0, 0, 3393, 3301, 0, 1433, 0,
	187, 1323, 3407, 3399, 3405, 3409, 3410, 187, 0, 0,
	0, 3300, 0, 0, 0, 0, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 628, 0, 1808, 3417, 3418,
	3162, 1806, 3415, 3416, 0, 0, 0, 0, 0, 628,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 628,
	0, 78, 39, 40, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 43, 69, 70, 0, 67,
	71, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 0, 1474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 187, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 157, 182, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 628, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 628,
	0, 164, 0, 0, 187, 0, 187, 0, 187, 187,
	628, 0, 177, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 161,
	0, 162, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	0, 181, 0, 0, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 0, 75, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 628, 0, 1562, 0, 0, 55, 83, 82,
	0, 182, 64, 65, 53, 0, 0, 0, 0, 0,
	73, 74, 2438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 628,
	0, 0, 0, 0, 628, 0, 0, 0, 628, 628,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 165, 0, 0, 142, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 161, 0, 162, 0,
	187, 187, 0, 0, 187, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 1583, 1584, 153, 152, 181, 0,
	187, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 1183, 0, 0,
	1185, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 1585, 150,
	0, 1582, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 86, 0, 0, 0, 0, 879, 1812, 1813, 0,
	0, 0, 879, 879, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	0, 0, 0, 0, 1869, 1870, 1871, 1872, 1873, 1874,
	1876, 1880, 1881, 1882, 0, 1884, 1885, 1886, 0, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 0, 1916, 0, 1923, 1924, 879, 0, 879,
	879, 879, 879, 879, 0, 0, 0, 0, 0, 0,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 0, 1947,
	0, 0, 187, 0, 0, 156, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 628, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 879, 628, 0, 0, 0, 0, 0, 0, 3353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 1986, 1987, 0, 187, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1579, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 121, 0, 143, 0, 176,
	178, 179, 180, 628, 0, 0, 0, 0, 164, 187,
	0, 0, 1487, 0, 0, 0, 187, 0, 0, 0,
	2061, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 628, 0, 154,
	0, 0, 0, 0, 0, 142, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 161, 0, 162, 0,
	0, 1515, 0, 0, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 0, 1583, 1584, 153, 152, 181, 0,
	0, 0, 0, 0, 0, 0, 187, 187, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 1527, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 1528, 0, 176, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 147, 1585, 150,
	0, 1582, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 628,
	0, 0, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 628,
	1550, 1551, 1552, 1553, 1554, 1529, 1530, 1531, 1532, 1513,
	1514, 1542, 0, 1516, 0, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 0, 628, 1526, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 0, 0, 0, 0, 187,
	0, 0, 1642, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 1515, 0,
	0, 0, 0, 2210, 628, 628, 0, 187, 187, 187,
	187, 187, 0, 2216, 2217, 2218, 2219, 1687, 0, 187,
	0, 0, 0, 0, 187, 0, 0, 187, 0, 187,
	0, 0, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 1723, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 0, 0, 0, 187, 0, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 187, 0, 0, 1760, 0, 0, 879,
	879, 0, 0, 1543, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 187, 1541,
	1544, 1545, 1546, 1547, 1548, 1549, 0, 1550, 1551, 1552,
	1553, 1554, 1529, 1530, 1531, 1532, 1513, 1514, 1542, 0,
	1516, 0, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1474, 0, 1526, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	1543, 0, 0, 0, 1992, 0, 0, 0, 187, 0,
	0, 0, 0, 1996, 0, 1999, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	628, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	2499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 0, 0, 2522, 2523,
	0, 0, 2525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 628, 628, 628, 0, 0,
	0, 0, 0, 0, 2533, 2534, 2535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2540, 2541, 0, 0,
	0, 2542, 2543, 0, 0, 1892, 2545, 0, 0, 2547,
	0, 0, 2549, 2550, 2551, 2552, 0, 788, 79, 0,
	2553, 1892, 1892, 1892, 1892, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 879, 0, 0, 0, 0, 0, 0, 2578, 2579,
	2580, 2581, 2582, 2583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 628, 0, 0, 852, 0, 79, 0, 0,
	0, 0, 2614, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 2150, 0, 0, 852, 0, 0, 0, 2164,
	2165, 0, 0, 2169, 0, 0, 0, 0, 0, 2647,
	0, 1061, 2172, 0, 0, 0, 0, 0, 0, 2175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2178, 0, 187, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 2709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 628, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2791,
	0, 0, 0, 0, 0, 0, 0, 741, 0, 0,
	0, 0, 2799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 1053,
	0, 1060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 2377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 2933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 628, 0,
	0, 0, 2957, 0, 0, 0, 0, 0, 2425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	2974, 0, 2975, 0, 0, 0, 0, 2978, 2979, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 2984, 0, 2474, 2475, 2476, 2477, 2478, 0,
	628, 0, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3001, 1760, 2487, 3002, 0, 3003,
	3004, 0, 3005, 0, 3006, 0, 0, 0, 0, 0,
	0, 2495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	3039, 1236, 1236, 3041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3045, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 852, 1313, 1314, 1315,
	0, 1318, 0, 1319, 1320, 1321, 0, 1324, 1326, 1326,
	0, 1326, 1330, 1330, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 0, 0, 0, 1394,
	0, 1396, 1397, 1398, 1399, 1400, 0, 0, 0, 3194,
	0, 1330, 1330, 1330, 1330, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1428, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2699, 0, 0, 3064,
	3066, 3065, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 694,
	1434, 0, 0, 0, 1922, 0, 852, 790, 791, 0,
	852, 0, 2737, 1807, 0, 0, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 895,
	0, 895, 895, 0, 2762, 0, 0, 2765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1246, 1248, 0,
	0, 0, 0, 0, 0, 0, 3250, 0, 0, 3251,
	0, 3252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3346, 0, 3347, 0,
	3348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3075, 3076, 0, 0, 0, 0, 2911, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2926, 0, 0, 2927,
	2928, 2929, 0, 0, 0, 0, 3394, 0, 3395, 0,
	0, 0, 1436, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 0, 673, 757, 675, 754, 755, 0,
	671, 674, 756, 0, 0, 0, 0, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 692, 693,
	3063, 3067, 3068, 3069, 3077, 3078, 3079, 3087, 3089, 722,
	3088, 3090, 3091, 3092, 3095, 3096, 3097, 3098, 3093, 3094,
	3099, 3047, 3051, 3048, 3049, 3050, 3062, 3052, 3053, 3054,
	3055, 3056, 3057, 3058, 3059, 3060, 3061, 3100, 3101, 3102,
	3103, 3104, 3105, 3070, 3074, 3073, 3071, 3072, 0, 0,
	0, 0, 0, 1236, 0, 0, 0, 0, 0, 0,
	758, 0, 759, 0, 0, 763, 0, 1236, 1236, 765,
	764, 0, 766, 736, 735, 0, 0, 760, 761, 0,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3106, 3107, 3108, 3109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 1608, 1608, 0, 1608, 0, 1608,
	1608, 0, 1617, 1608, 1608, 1608, 1608, 1608, 0, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 1423, 1053,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 0, 0, 0,
	0, 0, 0, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 895, 895, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	580, 0, 0, 622, 0, 0, 790, 791, 0, 0,
	580, 0, 1807, 0, 0, 3232, 0, 0, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 1061, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 880,
	0, 880, 0, 0, 0, 0, 0, 0, 0, 580,
	1061, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1846, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	0, 0, 0, 895, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 782, 790, 791, 792, 793, 794, 783, 785,
	0, 0, 0, 784, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 795, 796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1480, 0, 0,
	895, 0, 0, 0, 0, 0, 0, 0, 895, 0,
	0, 895, 0, 2743, 2744, 0, 0, 0, 0, 2187,
	0, 0, 1053, 0, 0, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	1060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 1802, 0, 0, 0, 1802, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 852, 0, 782, 790, 791, 792,
	793, 794, 783, 785, 0, 0, 0, 784, 0, 0,
	0, 0, 0, 0, 0, 2354, 2355, 0, 0, 0,
	787, 795, 796, 0, 2374, 0, 2375, 2376, 753, 0,
	0, 757, 0, 754, 755, 0, 0, 0, 756, 2179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2743, 2744, 0,
	0, 0, 0, 580, 0, 580, 0, 0, 580, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 2421, 0, 0, 0, 0, 0, 0, 0, 0,
	2623, 0, 79, 0, 0, 2006, 2006, 2006, 2006, 2006,
	580, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 0, 2374, 852, 0, 2446, 0, 2006, 0, 0,
	2006, 0, 0, 0, 2451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1424, 0, 0,
	0, 0, 0, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2599, 0, 0, 1424, 0, 0, 1424, 0, 1424,
	580, 0, 0, 0, 0, 895, 0, 0, 0, 1423,
	0, 0, 2626, 1608, 1423, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 2006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2894, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 580, 580, 580, 580, 580,
	580, 580, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 1423, 0, 0, 0, 0, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 0, 880, 880, 0, 0,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2824, 0, 0, 0, 0, 0, 0, 0, 0,
	3007, 0, 3011, 3012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2623, 0, 79, 0, 2623,
	0, 880, 1709, 880, 880, 880, 880, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3125, 862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 1709,
	0, 580, 0, 580, 0, 580, 2014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2965, 2966, 2967, 2968, 0, 0, 0, 0,
	0, 2623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 3035, 79,
	3037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 0, 0, 580, 580, 0,
	0, 580, 0, 2171, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 3268, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 3135, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3182, 0, 0, 0, 3182,
	3182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	3350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 880, 880, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 3265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 895, 895, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 2431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 2824, 0,
	3316, 0, 580, 580, 580, 580, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 0,
	0, 0, 0, 1424, 580, 580, 580, 580, 580, 0,
	0, 0, 0, 0, 0, 0, 2642, 0, 0, 0,
	0, 580, 0, 0, 1659, 0, 580, 0, 0, 580,
	2653, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 580, 580, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 377, 0, 0, 1031, 1016, 492, 0,
	959, 1034, 928, 947, 1044, 950, 953, 995, 907, 973,
	396, 944, 900, 932, 902, 939, 903, 930, 961, 258,
	927, 1018, 977, 1033, 349, 255, 909, 933, 410, 949,
	197, 997, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 1040, 353, 983, 0,
	472, 381, 0, 0, 1659, 963, 1022, 971, 1009, 958,
	996, 917, 982, 1035, 945, 992, 1036, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 3288, 0, 3289, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 941, 989, 1030, 942, 991, 253,
	306, 260, 252, 497, 1041, 1021, 906, 970, 1029, 0,
	0, 220, 1032, 965, 0, 994, 0, 1047, 901, 985,
	0, 904, 908, 1043, 1025, 936, 263, 0, 0, 0,
	0, 0, 0, 0, 962, 972, 1006, 1010, 956, 0,
	0, 0, 0, 0, 0, 0, 934, 0, 981, 0,
	0, 0, 913, 905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 916, 0, 935, 1007, 0, 899, 285, 910, 382,
	245, 0, 1014, 1024, 957, 537, 1028, 955, 954, 1001,
	914, 1020, 948, 348, 912, 315, 192, 216, 0, 946,
	392, 437, 449, 1019, 931, 940, 243, 938, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 980, 999,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 1238, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 926, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 1015, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	1004, 1046, 405, 448, 231, 518, 471, 921, 925, 919,
	986, 920, 975, 976, 922, 1037, 1038, 1039, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 1008, 915, 0,
	923, 924, 1017, 1026, 1027, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 979, 191, 212, 351, 1042, 430, 276,
	553, 528, 523, 198, 214, 918, 250, 929, 937, 0,
	943, 951, 952, 964, 966, 967, 968, 969, 987, 988,
	990, 998, 1000, 1003, 1005, 1012, 1023, 1045, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	978, 984, 362, 269, 292, 305, 993, 527, 477, 218,
	442, 278, 241, 1011, 1013, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 974,
	1002, 358, 493, 494, 301, 377, 0, 0, 1031, 1016,
	492, 0, 959, 1034, 928, 947, 1044, 950, 953, 995,
	907, 973, 396, 944, 900, 932, 902, 939, 903, 930,
	961, 258, 927, 1018, 977, 1033, 349, 255, 909, 933,
	410, 949, 197, 997, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 1040, 353,
	983, 0, 472, 381, 0, 0, 0, 963, 1022, 971,
	1009, 958, 996, 917, 982, 1035, 945, 992, 1036, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 941, 989, 1030, 942,
	991, 253, 306, 260, 252, 497, 1041, 1021, 906, 970,
	1029, 0, 0, 220, 1032, 965, 0, 994, 0, 1047,
	901, 985, 0, 904, 908, 1043, 1025, 936, 263, 0,
	0, 0, 0, 0, 0, 0, 962, 972, 1006, 1010,
	956, 0, 0, 0, 0, 0, 2654, 0, 934, 0,
	981, 0, 0, 0, 913, 905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 960, 0,
	0, 0, 0, 916, 0, 935, 1007, 0, 899, 285,
	910, 382, 245, 0, 1014, 1024, 957, 537, 1028, 955,
	954, 1001, 914, 1020, 948, 348, 912, 315, 192, 216,
	0, 946, 392, 437, 449, 1019, 931, 940, 243, 938,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	980, 999, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 1238, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	926, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 1015, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 1004, 1046, 405, 448, 231, 518, 471, 921,
	925, 919, 986, 920, 975, 976, 922, 1037, 1038, 1039,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 1008,
	915, 0, 923, 924, 1017, 1026, 1027, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 979, 191, 212, 351, 1042,
	430, 276, 553, 528, 523, 198, 214, 918, 250, 929,
	937, 0, 943, 951, 952, 964, 966, 967, 968, 969,
	987, 988, 990, 998, 1000, 1003, 1005, 1012, 1023, 1045,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 978, 984, 362, 269, 292, 305, 993, 527,
	477, 218, 442, 278, 241, 1011, 1013, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 974, 1002, 358, 493, 494, 301, 377, 0, 0,
	1031, 1016, 492, 0, 959, 1034, 928, 947, 1044, 950,
	953, 995, 907, 973, 396, 944, 900, 932, 902, 939,
	903, 930, 961, 258, 927, 1018, 977, 1033, 349, 255,
	909, 933, 410, 949, 197, 997, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	1040, 353, 983, 0, 472, 381, 0, 0, 0, 963,
	1022, 971, 1009, 958, 996, 917, 982, 1035, 945, 992,
	1036, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 941, 989,
	1030, 942, 991, 253, 306, 260, 252, 497, 1041, 1021,
	906, 970, 1029, 0, 0, 220, 1032, 965, 0, 994,
	0, 1047, 901, 985, 0, 904, 908, 1043, 1025, 936,
	263, 0, 0, 0, 0, 0, 0, 0, 962, 972,
	1006, 1010, 956, 0, 0, 0, 0, 0, 2612, 0,
	934, 0, 981, 0, 0, 0, 913, 905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 0, 0, 0, 0, 916, 0, 935, 1007, 0,
	899, 285, 910, 382, 245, 0, 1014, 1024, 957, 537,
	1028, 955, 954, 1001, 914, 1020, 948, 348, 912, 315,
	192, 216, 0, 946, 392, 437, 449, 1019, 931, 940,
	243, 938, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 980, 999, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 1238, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 926, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 1015, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 1004, 1046, 405, 448, 231, 518,
	471, 921, 925, 919, 986, 920, 975, 976, 922, 1037,
	1038, 1039, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 1008, 915, 0, 923, 924, 1017, 1026, 1027, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 979, 191, 212,
	351, 1042, 430, 276, 553, 528, 523, 198, 214, 918,
	250, 929, 937, 0, 943, 951, 952, 964, 966, 967,
	968, 969, 987, 988, 990, 998, 1000, 1003, 1005, 1012,
	1023, 1045, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 978, 984, 362, 269, 292, 305,
	993, 527, 477, 218, 442, 278, 241, 1011, 1013, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 974, 1002, 358, 493, 494, 301, 377,
	0, 0, 1031, 1016, 492, 0, 959, 1034, 928, 947,
	1044, 950, 953, 995, 907, 973, 396, 944, 900, 932,
	902, 939, 903, 930, 961, 258, 927, 1018, 977, 1033,
	349, 255, 909, 933, 410, 949, 197, 997, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 1040, 353, 983, 0, 472, 381, 0, 0,
	0, 963, 1022, 971, 1009, 958, 996, 917, 982, 1035,
	945, 992, 1036, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	941, 989, 1030, 942, 991, 253, 306, 260, 252, 497,
	1041, 1021, 906, 970, 1029, 0, 0, 220, 1032, 965,
	0, 994, 0, 1047, 901, 985, 0, 904, 908, 1043,
	1025, 936, 263, 0, 0, 0, 0, 0, 0, 0,
	962, 972, 1006, 1010, 956, 0, 0, 0, 0, 0,
	1994, 0, 934, 0, 981, 0, 0, 0, 913, 905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 916, 0, 935,
	1007, 0, 899, 285, 910, 382, 245, 0, 1014, 1024,
	957, 537, 1028, 955, 954, 1001, 914, 1020, 948, 348,
	912, 315, 192, 216, 0, 946, 392, 437, 449, 1019,
	931, 940, 243, 938, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 980, 999, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	1238, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 926, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 1015, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 1004, 1046, 405, 448,
	231, 518, 471, 921, 925, 919, 986, 920, 975, 976,
	922, 1037, 1038, 1039, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 1008, 915, 0, 923, 924, 1017, 1026,
	1027, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 979,
	191, 212, 351, 1042, 430, 276, 553, 528, 523, 198,
	214, 918, 250, 929, 937, 0, 943, 951, 952, 964,
	966, 967, 968, 969, 987, 988, 990, 998, 1000, 1003,
	1005, 1012, 1023, 1045, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 978, 984, 362, 269,
	292, 305, 993, 527, 477, 218, 442, 278, 241, 1011,
	1013, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 974, 1002, 358, 493, 494,
	301, 377, 0, 0, 1031, 1016, 492, 0, 959, 1034,
	928, 947, 1044, 950, 953, 995, 907, 973, 396, 944,
	900, 932, 902, 939, 903, 930, 961, 258, 927, 1018,
	977, 1033, 349, 255, 909, 933, 410, 949, 197, 997,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 1040, 353, 983, 0, 472, 381,
	0, 0, 0, 963, 1022, 971, 1009, 958, 996, 917,
	982, 1035, 945, 992, 1036, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 941, 989, 1030, 942, 991, 253, 306, 260,
	252, 497, 1041, 1021, 906, 970, 1029, 0, 0, 220,
	1032, 965, 0, 994, 0, 1047, 901, 985, 0, 904,
	908, 1043, 1025, 936, 263, 0, 0, 0, 0, 0,
	0, 0, 962, 972, 1006, 1010, 956, 0, 0, 0,
	0, 0, 0, 0, 934, 0, 981, 0, 0, 0,
	913, 905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 960, 0, 0, 0, 0, 916,
	0, 935, 1007, 0, 899, 285, 910, 382, 245, 0,
	1014, 1024, 957, 537, 1028, 955, 954, 1001, 914, 1020,
	948, 348, 912, 315, 192, 216, 0, 946, 392, 437,
	449, 1019, 931, 940, 243, 938, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 980, 999, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 1238, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 926, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 1015,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 1004, 1046,
	405, 448, 231, 518, 471, 921, 925, 919, 986, 920,
	975, 976, 922, 1037, 1038, 1039, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 1008, 915, 0, 923, 924,
	1017, 1026, 1027, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 979, 191, 212, 351, 1042, 430, 276, 553, 528,
	523, 198, 214, 918, 250, 929, 937, 0, 943, 951,
	952, 964, 966, 967, 968, 969, 987, 988, 990, 998,
	1000, 1003, 1005, 1012, 1023, 1045, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 978, 984,
	362, 269, 292, 305, 993, 527, 477, 218, 442, 278,
	241, 1011, 1013, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 974, 1002, 358,
	493, 494, 301, 377, 0, 0, 1031, 1016, 492, 0,
	959, 1034, 928, 947, 1044, 950, 953, 995, 907, 973,
	396, 944, 900, 932, 902, 939, 903, 930, 961, 258,
	927, 1018, 977, 1033, 349, 255, 909, 933, 410, 949,
	197, 997, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 1040, 353, 983, 0,
	472, 381, 0, 0, 0, 963, 1022, 971, 1009, 958,
	996, 917, 982, 1035, 945, 992, 1036, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 941, 989, 1030, 942, 991, 253,
	306, 260, 252, 497, 1041, 1021, 906, 970, 1029, 0,
	0, 220, 1032, 965, 0, 994, 0, 1047, 901, 985,
	0, 904, 908, 1043, 1025, 936, 263, 0, 0, 0,
	0, 0, 0, 0, 962, 972, 1006, 1010, 956, 0,
	0, 0, 0, 0, 0, 0, 934, 0, 981, 0,
	0, 0, 913, 905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 916, 0, 935, 1007, 0, 899, 285, 910, 382,
	245, 0, 1014, 1024, 957, 537, 1028, 955, 954, 1001,
	914, 1020, 948, 348, 912, 315, 192, 216, 0, 946,
	392, 437, 449, 1019, 931, 940, 243, 938, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 980, 999,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 1238, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 926, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 1015, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	1004, 1046, 405, 448, 231, 518, 471, 921, 925, 919,
	986, 920, 975, 976, 922, 1037, 1038, 1039, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 1008, 915, 0,
	923, 924, 1017, 1026, 1027, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 979, 191, 212, 351, 1042, 430, 276,
	553, 528, 523, 198, 214, 918, 250, 929, 937, 0,
	943, 951, 952, 964, 966, 967, 968, 969, 987, 988,
	990, 998, 1000, 1003, 1005, 1012, 1023, 1045, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	978, 984, 362, 269, 292, 305, 993, 527, 477, 218,
	442, 278, 241, 1011, 1013, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 974,
	1002, 358, 493, 494, 301, 377, 0, 0, 1031, 1016,
	492, 0, 959, 1034, 928, 947, 1044, 950, 953, 995,
	907, 973, 396, 944, 900, 932, 902, 939, 903, 930,
	961, 258, 927, 1018, 977, 1033, 349, 255, 909, 933,
	410, 949, 197, 997, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 1040, 353,
	983, 0, 472, 381, 0, 0, 0, 963, 1022, 971,
	1009, 958, 996, 917, 982, 1035, 945, 992, 1036, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 941, 989, 1030, 942,
	991, 253, 306, 260, 252, 497, 1041, 1021, 906, 970,
	1029, 0, 0, 1048, 1032, 965, 0, 994, 0, 1047,
	901, 985, 0, 904, 908, 1043, 1025, 936, 263, 0,
	0, 0, 0, 0, 0, 0, 962, 972, 1006, 1010,
	956, 0, 0, 0, 0, 0, 0, 0, 934, 0,
	981, 0, 0, 0, 913, 905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 960, 0,
	0, 0, 0, 916, 0, 935, 1007, 0, 899, 285,
	910, 382, 245, 0, 1014, 1024, 957, 537, 1028, 955,
	954, 1001, 914, 1020, 948, 348, 912, 315, 192, 216,
	0, 946, 392, 437, 449, 1019, 931, 940, 243, 938,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	980, 999, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 911, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	926, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 1015, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 898, 892, 891,
	318, 355, 1004, 1046, 405, 448, 231, 518, 471, 921,
	925, 919, 986, 920, 975, 976, 922, 1037, 1038, 1039,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 1008,
	915, 0, 923, 924, 1017, 1026, 1027, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 979, 191, 212, 351, 1042,
	430, 276, 553, 528, 523, 198, 214, 918, 250, 929,
	937, 0, 943, 951, 952, 964, 966, 967, 968, 969,
	987, 988, 990, 998, 1000, 1003, 1005, 1012, 1023, 1045,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 978, 984, 362, 269, 292, 305, 993, 527,
	477, 218, 442, 278, 241, 1011, 1013, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 974, 1002, 358, 493, 494, 301, 377, 0, 0,
	1031, 1016, 492, 0, 959, 1034, 928, 947, 1044, 950,
	953, 995, 907, 973, 396, 944, 900, 932, 902, 939,
	903, 930, 961, 258, 927, 1018, 977, 1033, 349, 255,
	909, 933, 410, 949, 197, 997, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	1040, 353, 983, 0, 472, 381, 0, 0, 0, 963,
	1022, 971, 1009, 958, 996, 917, 982, 1035, 945, 992,
	1036, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 941, 989,
	1030, 942, 991, 253, 306, 260, 252, 497, 1041, 1021,
	906, 970, 1029, 0, 0, 1048, 1032, 965, 0, 994,
	0, 1047, 901, 985, 0, 904, 908, 1043, 1025, 936,
	263, 0, 0, 0, 0, 0, 0, 0, 962, 972,
	1006, 1010, 956, 0, 0, 0, 0, 0, 0, 0,
	934, 0, 981, 0, 0, 0, 913, 905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 0, 0, 0, 0, 916, 0, 935, 1007, 0,
	899, 285, 910, 382, 245, 0, 1014, 1024, 957, 537,
	1028, 955, 954, 1001, 914, 1020, 948, 348, 912, 315,
	192, 216, 0, 946, 392, 437, 449, 1019, 931, 940,
	243, 938, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 980, 999, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 1491, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 911, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 926, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 1015, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 898,
	892, 891, 318, 355, 1004, 1046, 405, 448, 231, 518,
	471, 921, 925, 919, 986, 920, 975, 976, 922, 1037,
	1038, 1039, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 1008, 915, 0, 923, 924, 1017, 1026, 1027, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 979, 191, 212,
	351, 1042, 430, 276, 553, 528, 523, 198, 214, 918,
	250, 929, 937, 0, 943, 951, 952, 964, 966, 967,
	968, 969, 987, 988, 990, 998, 1000, 1003, 1005, 1012,
	1023, 1045, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 978, 984, 362, 269, 292, 305,
	993, 527, 477, 218, 442, 278, 241, 1011, 1013, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 974, 1002, 358, 493, 494, 301, 377,
	0, 0, 1031, 1016, 492, 0, 959, 1034, 928, 947,
	1044, 950, 953, 995, 907, 973, 396, 944, 900, 932,
	902, 939, 903, 930, 961, 258, 927, 1018, 977, 1033,
	349, 255, 909, 933, 410, 949, 197, 997, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 1040, 353, 983, 0, 472, 381, 0, 0,
	0, 963, 1022, 971, 1009, 958, 996, 917, 982, 1035,
	945, 992, 1036, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	941, 989, 1030, 942, 991, 253, 306, 260, 252, 497,
	1041, 1021, 906, 970, 1029, 0, 0, 1048, 1032, 965,
	0, 994, 0, 1047, 901, 985, 0, 904, 908, 1043,
	1025, 936, 263, 0, 0, 0, 0, 0, 0, 0,
	962, 972, 1006, 1010, 956, 0, 0, 0, 0, 0,
	0, 0, 934, 0, 981, 0, 0, 0, 913, 905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 916, 0, 935,
	1007, 0, 899, 285, 910, 382, 245, 0, 1014, 1024,
	957, 537, 1028, 955, 954, 1001, 914, 1020, 948, 348,
	912, 315, 192, 216, 0, 946, 392, 437, 449, 1019,
	931, 940, 243, 938, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 980, 999, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 889, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	911, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 926, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 1015, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 898, 892, 891, 318, 355, 1004, 1046, 405, 448,
	231, 518, 471, 921, 925, 919, 986, 920, 975, 976,
	922, 1037, 1038, 1039, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 1008, 915, 0, 923, 924, 1017, 1026,
	1027, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 979,
	191, 212, 351, 1042, 430, 276, 553, 528, 523, 198,
	214, 918, 250, 929, 937, 0, 943, 951, 952, 964,
	966, 967, 968, 969, 987, 988, 990, 998, 1000, 1003,
	1005, 1012, 1023, 1045, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 978, 984, 362, 269,
	292, 305, 993, 527, 477, 218, 442, 278, 241, 1011,
	1013, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 974, 1002, 358, 493, 494,
	301, 377, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 1926, 0, 658, 0, 0, 0, 258, 663, 0,
	0, 0, 349, 255, 0, 1927, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 669, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 665, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 782,
	790, 791, 792, 793, 794, 783, 785, 0, 0, 229,
	784, 236, 696, 698, 697, 712, 713, 714, 715, 716,
	717, 718, 694, 787, 795, 796, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 641, 655, 0,
	668, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	652, 653, 878, 0, 0, 0, 746, 0, 654, 0,
	0, 662, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	745, 0, 0, 537, 0, 0, 743, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 707, 708, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 753, 744, 673, 757, 675,
	754, 755, 670, 671, 674, 756, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 747, 661, 660, 0, 667,
	0, 692, 693, 695, 699, 700, 701, 709, 710, 711,
	719, 721, 722, 720, 723, 724, 725, 728, 729, 730,
	731, 726, 727, 732, 676, 680, 677, 678, 679, 691,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	767, 768, 769, 770, 771, 772, 702, 706, 705, 703,
	704, 659, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 758, 250, 759, 0, 0, 763, 0,
	0, 0, 765, 764, 0, 766, 736, 735, 0, 0,
	760, 761, 0, 762, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 773,
	774, 775, 776, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 789, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	658, 0, 0, 0, 258, 663, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 669, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 665, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	87, 0, 0, 188, 189, 190, 782, 790, 791, 792,
	793, 794, 783, 785, 0, 0, 229, 784, 236, 696,
	698, 697, 712, 713, 714, 715, 716, 717, 718, 694,
	787, 795, 796, 0, 253, 306, 260, 252, 497, 0,
	0, 1877, 1878, 1879, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 641, 655, 0, 668, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 652, 653, 0,
	0, 0, 0, 746, 0, 654, 0, 0, 662, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 745, 0, 0,
	537, 0, 0, 743, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 707, 708, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 753, 744, 673, 757, 675, 754, 755, 670,
	671, 674, 756, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 747, 661, 660, 0, 667, 0, 692, 693,
	695, 699, 700, 701, 709, 710, 711, 719, 721, 722,
	720, 723, 724, 725, 728, 729, 730, 731, 726, 727,
	732, 676, 680, 677, 678, 679, 691, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 767, 768, 769,
	770, 771, 772, 702, 706, 705, 703, 704, 659, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	758, 250, 759, 0, 0, 763, 0, 0, 0, 765,
	764, 0, 766, 736, 735, 0, 0, 760, 761, 0,
	762, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 773, 774, 775, 776,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 789, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 658, 0, 0,
	0, 258, 663, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 669, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 665,
	666, 0, 0, 0, 0, 0, 0, 2021, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 87, 0, 0,
	188, 189, 190, 782, 790, 791, 792, 793, 794, 783,
	785, 0, 0, 229, 784, 236, 696, 698, 697, 712,
	713, 714, 715, 716, 717, 718, 694, 787, 795, 796,
	2022, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 641, 655, 0, 668, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 652, 653, 0, 0, 0, 0,
	746, 0, 654, 0, 0, 662, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 745, 0, 0, 537, 0, 0,
	743, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 707, 708,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 753,
	744, 673, 757, 675, 754, 755, 670, 671, 674, 756,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 747,
	661, 660, 0, 667, 0, 692, 693, 695, 699, 700,
	701, 709, 710, 711, 719, 721, 722, 720, 723, 724,
	725, 728, 729, 730, 731, 726, 727, 732, 676, 680,
	677, 678, 679, 691, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 767, 768, 769, 770, 771, 772,
	702, 706, 705, 703, 704, 659, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 758, 250, 759,
	0, 0, 763, 0, 0, 0, 765, 764, 0, 766,
	736, 735, 0, 0, 760, 761, 0, 762, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 773, 774, 775, 776, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 789, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 0, 358, 493, 494, 301, 377, 0, 0,
	0, 78, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 658,
	0, 0, 0, 258, 663, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	669, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 87,
	0, 0, 188, 189, 190, 782, 790, 791, 792, 793,
	794, 783, 785, 0, 0, 229, 784, 236, 696, 698,
	697, 712, 713, 714, 715, 716, 717, 718, 694, 787,
	795, 796, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 641, 655, 0, 668, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 652, 653, 0, 0,
	0, 0, 746, 0, 654, 0, 0, 662, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 745, 0, 0, 537,
	0, 0, 743, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	707, 708, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 753, 744, 673, 757, 675, 754, 755, 670, 671,
	674, 756, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 747, 661, 660, 0, 667, 0, 692, 693, 695,
	699, 700, 701, 709, 710, 711, 719, 721, 722, 720,
	723, 724, 725, 728, 729, 730, 731, 726, 727, 732,
	676, 680, 677, 678, 679, 691, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 767, 768, 769, 770,
	771, 772, 702, 706, 705, 703, 704, 659, 191, 212,
	351, 86, 430, 276, 553, 528, 523, 198, 214, 758,
	250, 759, 0, 0, 763, 0, 0, 0, 765, 764,
	0, 766, 736, 735, 0, 0, 760, 761, 0, 762,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 773, 774, 775, 776, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 789, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 658, 0, 0, 0,
	258, 663, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 669, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 665, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 87, 0, 0, 188,
	189, 190, 782, 790, 791, 792, 793, 794, 783, 785,
	0, 0, 229, 784, 236, 696, 698, 697, 712, 713,
	714, 715, 716, 717, 718, 694, 787, 795, 796, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	641, 655, 0, 668, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 653, 0, 0, 0, 0, 746,
	0, 654, 0, 0, 662, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 745, 0, 0, 537, 0, 0, 743,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 3275,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 707, 708, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 753, 744,
	673, 757, 675, 754, 755, 670, 671, 674, 756, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 747, 661,
	660, 0, 667, 0, 692, 693, 695, 699, 700, 701,
	709, 710, 711, 719, 721, 722, 720, 723, 724, 725,
	728, 729, 730, 731, 726, 727, 732, 676, 680, 677,
	678, 679, 691, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 767, 768, 769, 770, 771, 772, 702,
	706, 705, 703, 704, 659, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 758, 250, 759, 0,
	0, 763, 0, 0, 0, 765, 764, 0, 766, 736,
	735, 0, 0, 760, 761, 0, 762, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 773, 774, 775, 776, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 789, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 658, 0, 0, 0, 258, 663, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 669, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 665, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 1458, 188, 189, 190, 782,
	790, 791, 792, 793, 794, 783, 785, 0, 0, 229,
	784, 236, 696, 698, 697, 712, 713, 714, 715, 716,
	717, 718, 694, 787, 795, 796, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 641, 655, 0,
	668, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	652, 653, 0, 0, 0, 0, 746, 0, 654, 0,
	0, 662, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	745, 0, 0, 537, 0, 0, 743, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 707, 708, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 753, 744, 673, 757, 675,
	754, 755, 670, 671, 674, 756, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 747, 661, 660, 0, 667,
	0, 692, 693, 695, 699, 700, 701, 709, 710, 711,
	719, 721, 722, 720, 723, 724, 725, 728, 729, 730,
	731, 726, 727, 732, 676, 680, 677, 678, 679, 691,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	767, 768, 769, 770, 771, 772, 702, 706, 705, 703,
	704, 659, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 758, 250, 759, 0, 0, 763, 0,
	0, 0, 765, 764, 0, 766, 736, 735, 0, 0,
	760, 761, 0, 762, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 773,
	774, 775, 776, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 789, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	658, 0, 0, 0, 258, 663, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 669, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 665, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	87, 0, 0, 188, 189, 190, 782, 790, 791, 792,
	793, 794, 783, 785, 0, 0, 229, 784, 236, 696,
	698, 697, 712, 713, 714, 715, 716, 717, 718, 694,
	787, 795, 796, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 641, 655, 0, 668, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 652, 653, 878,
	0, 0, 0, 746, 0, 654, 0, 0, 662, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 745, 0, 0,
	537, 0, 0, 743, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 707, 708, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 753, 744, 673, 757, 675, 754, 755, 670,
	671, 674, 756, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 747, 661, 660, 0, 667, 0, 692, 693,
	695, 699, 700, 701, 709, 710, 711, 719, 721, 722,
	720, 723, 724, 725, 728, 729, 730, 731, 726, 727,
	732, 676, 680, 677, 678, 679, 691, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 767, 768, 769,
	770, 771, 772, 702, 706, 705, 703, 704, 659, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	758, 250, 759, 0, 0, 763, 0, 0, 0, 765,
	764, 0, 766, 736, 735, 0, 0, 760, 761, 0,
	762, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 773, 774, 775, 776,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 789, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 658, 0, 0,
	0, 258, 663, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 669, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 665,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 87, 0, 0,
	188, 189, 190, 782, 790, 791, 792, 793, 794, 783,
	785, 0, 0, 229, 784, 236, 696, 698, 697, 712,
	713, 714, 715, 716, 717, 718, 694, 787, 795, 796,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 641, 655, 0, 668, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 652, 653, 0, 0, 0, 0,
	746, 0, 654, 0, 0, 662, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 745, 0, 0, 537, 0, 0,
	743, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 707, 708,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 753,
	744, 673, 757, 675, 754, 755, 670, 671, 674, 756,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 747,
	661, 660, 0, 667, 0, 692, 693, 695, 699, 700,
	701, 709, 710, 711, 719, 721, 722, 720, 723, 724,
	725, 728, 729, 730, 731, 726, 727, 732, 676, 680,
	677, 678, 679, 691, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 767, 768, 769, 770, 771, 772,
	702, 706, 705, 703, 704, 659, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 758, 250, 759,
	0, 0, 763, 0, 0, 0, 765, 764, 0, 766,
	736, 735, 0, 0, 760, 761, 0, 762, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 773, 774, 775, 776, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 789, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 658, 0, 0, 0, 258, 663,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 669, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 665, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 87, 0, 0, 188, 189, 190,
	782, 790, 791, 792, 793, 794, 783, 785, 0, 0,
	229, 784, 236, 696, 698, 697, 712, 713, 714, 715,
	716, 717, 718, 694, 787, 795, 796, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	0, 668, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 652, 653, 0, 0, 0, 0, 746, 0, 654,
	0, 0, 662, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 745, 0, 0, 537, 0, 0, 743, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 707, 708, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 753, 744, 673, 757,
	675, 754, 755, 670, 671, 674, 756, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 747, 661, 660, 0,
	667, 0, 692, 693, 695, 699, 700, 701, 709, 710,
	711, 719, 721, 722, 720, 723, 724, 725, 728, 729,
	730, 731, 726, 727, 732, 676, 680, 677, 678, 679,
	691, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 767, 768, 769, 770, 771, 772, 702, 706, 705,
	703, 704, 659, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 758, 250, 759, 0, 0, 763,
	0, 0, 0, 765, 764, 0, 766, 736, 735, 0,
	0, 760, 761, 0, 762, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	773, 774, 775, 776, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 789, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	1098, 537, 0, 0, 0, 0, 0, 1095, 1096, 348,
	1056, 315, 192, 216, 1089, 1093, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 0, 358, 493, 494,
	301, 377, 0, 0, 0, 78, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 86, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 2009, 0, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 1477, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 1479,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 1481, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	1272, 0, 1273, 1274, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 1419, 1422, 0, 0, 0, 0, 1418,
	1421, 0, 0, 229, 1417, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 0, 358, 493, 494, 301, 377, 0, 0,
	0, 78, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 87,
	0, 1458, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 86, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 87, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 2009, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 1960, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 1958, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 1056,
	315, 192, 216, 1054, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 1960, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 1458, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 3183, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 315, 192, 216, 0, 0, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 377, 358, 493, 494,
	301, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 349, 255, 0,
	0, 410, 0, 197, 0, 462, 242, 359, 356, 500,
	270, 261, 257, 240, 302, 366, 408, 482, 402, 0,
	353, 0, 0, 472, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 238, 310, 196, 393, 473, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 2339, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 334, 343, 342,
	323, 324, 326, 328, 333, 340, 346, 0, 0, 0,
	0, 0, 253, 306, 260, 252, 497, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 382, 245, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 315, 192,
	216, 0, 0, 392, 437, 449, 0, 0, 0, 243,
	0, 447, 406, 516, 224, 272, 434, 412, 445, 419,
	275, 0, 0, 446, 354, 502, 428, 513, 538, 539,
	251, 386, 525, 486, 533, 552, 217, 248, 400, 479,
	519, 469, 378, 498, 499, 314, 468, 283, 195, 352,
	544, 215, 455, 233, 222, 504, 522, 277, 432, 204,
	481, 511, 230, 459, 0, 0, 554, 206, 509, 478,
	374, 311, 312, 205, 0, 433, 256, 281, 246, 395,
	506, 507, 244, 555, 219, 532, 211, 0, 531, 388,
	501, 510, 375, 364, 210, 508, 373, 363, 319, 338,
	339, 268, 294, 426, 357, 427, 295, 384, 383, 385,
	199, 520, 0, 200, 0, 474, 521, 556, 225, 226,
	228, 0, 267, 271, 279, 282, 290, 291, 300, 350,
	399, 425, 421, 429, 0, 496, 514, 526, 536, 542,
	543, 545, 546, 547, 548, 549, 551, 550, 387, 298,
	470, 318, 355, 0, 0, 405, 448, 231, 518, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 365,
	461, 515, 320, 332, 335, 325, 344, 0, 345, 321,
	322, 327, 329, 330, 331, 336, 337, 341, 347, 239,
	202, 371, 379, 495, 299, 207, 208, 209, 488, 489,
	490, 491, 529, 530, 534, 438, 439, 440, 441, 280,
	524, 296, 444, 443, 316, 317, 0, 191, 212, 351,
	0, 430, 276, 553, 528, 523, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 293, 297, 303, 304, 307, 313, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 431, 436, 450, 451, 452, 453, 454, 457, 458,
	463, 464, 465, 466, 467, 475, 476, 480, 503, 505,
	517, 535, 540, 456, 288, 289, 423, 424, 287, 512,
	541, 0, 360, 0, 0, 362, 269, 292, 305, 0,
	527, 477, 218, 442, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 309, 372, 380, 409, 414, 284,
	259, 235, 435, 232, 460, 483, 484, 485, 487, 376,
	254, 413, 0, 377, 358, 493, 494, 301, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 349, 255, 0, 0, 410, 0,
	197, 0, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 0, 353, 0, 0,
	472, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2324, 0, 0, 0, 2325, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 0, 0, 0, 0, 0, 253,
	306, 260, 252, 497, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 382,
	245, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 315, 192, 216, 0, 0,
	392, 437, 449, 0, 0, 0, 243, 0, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 0, 0,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 0, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 0, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 0, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	0, 0, 405, 448, 231, 518, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 0, 191, 212, 351, 0, 430, 276,
	553, 528, 523, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	0, 0, 362, 269, 292, 305, 0, 527, 477, 218,
	442, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 0,
	377, 358, 493, 494, 301, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 1502, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 0, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 334, 343, 342, 323, 324, 326, 328, 333, 340,
	346, 0, 0, 0, 0, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 338, 339, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 365, 461, 515, 320, 332, 335, 325,
	344, 0, 345, 321, 322, 327, 329, 330, 331, 336,
	337, 341, 347, 239, 202, 371, 379, 495, 299, 207,
	208, 209, 488, 489, 490, 491, 529, 530, 534, 438,
	439, 440, 441, 280, 524, 296, 444, 443, 316, 317,
	0, 191, 212, 351, 0, 430, 276, 553, 528, 523,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 288, 289,
	423, 424, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 3309, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 3183, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 1481, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 315, 192, 216, 0, 0, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 377, 358, 493, 494,
	301, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 349, 255, 0,
	0, 410, 0, 197, 0, 462, 242, 359, 356, 500,
	270, 261, 257, 240, 302, 366, 408, 482, 402, 0,
	353, 0, 0, 472, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 238, 310, 196, 393, 473, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 334, 343, 342,
	323, 324, 326, 328, 333, 340, 346, 0, 0, 0,
	0, 0, 253, 306, 260, 252, 497, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 382, 245, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 315, 192,
	216, 0, 0, 392, 437, 449, 0, 0, 0, 243,
	0, 447, 406, 516, 224, 272, 434, 412, 445, 419,
	275, 0, 0, 446, 354, 502, 428, 513, 538, 539,
	251, 386, 525, 486, 533, 552, 217, 248, 400, 479,
	519, 469, 378, 498, 499, 314, 468, 283, 195, 352,
	544, 215, 455, 233, 222, 504, 522, 277, 432, 204,
	481, 511, 230, 459, 0, 0, 554, 206, 509, 478,
	374, 311, 312, 205, 0, 433, 256, 281, 246, 395,
	506, 507, 244, 555, 219, 532, 211, 0, 531, 388,
	501, 510, 375, 364, 210, 508, 373, 363, 319, 338,
	339, 268, 294, 426, 357, 427, 295, 384, 383, 385,
	199, 520, 0, 200, 0, 474, 521, 556, 225, 226,
	228, 0, 267, 271, 279, 282, 290, 291, 300, 350,
	399, 425, 421, 429, 0, 496, 514, 526, 536, 542,
	543, 545, 546, 547, 548, 549, 551, 550, 387, 298,
	470, 318, 355, 0, 0, 405, 448, 231, 518, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 365,
	461, 515, 320, 332, 335, 325, 344, 0, 345, 321,
	322, 327, 329, 330, 331, 336, 337, 341, 347, 239,
	202, 371, 379, 495, 299, 207, 208, 209, 488, 489,
	490, 491, 529, 530, 534, 438, 439, 440, 441, 280,
	524, 296, 444, 443, 316, 317, 0, 191, 212, 351,
	1758, 430, 276, 553, 528, 523, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 293, 297, 303, 304, 307, 313, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 431, 436, 450, 451, 452, 453, 454, 457, 458,
	463, 464, 465, 466, 467, 475, 476, 480, 503, 505,
	517, 535, 540, 456, 288, 289, 423, 424, 287, 512,
	541, 0, 360, 0, 0, 362, 269, 292, 305, 0,
	527, 477, 218, 442, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 309, 372, 380, 409, 414, 284,
	259, 235, 435, 232, 460, 483, 484, 485, 487, 376,
	254, 413, 0, 377, 358, 493, 494, 301, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 1627, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 349, 255, 0, 0, 410, 0,
	197, 0, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 0, 353, 0, 0,
	472, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 0, 0, 0, 0, 0, 253,
	306, 260, 252, 497, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 382,
	245, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 315, 192, 216, 0, 0,
	392, 437, 449, 0, 0, 0, 243, 0, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 0, 0,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 0, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 0, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 0, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	0, 0, 405, 448, 231, 518, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 0, 191, 212, 351, 0, 430, 276,
	553, 528, 523, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	0, 0, 362, 269, 292, 305, 0, 527, 477, 218,
	442, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 0,
	377, 358, 493, 494, 301, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 1625,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 0, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 334, 343, 342, 323, 324, 326, 328, 333, 340,
	346, 0, 0, 0, 0, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 338, 339, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 365, 461, 515, 320, 332, 335, 325,
	344, 0, 345, 321, 322, 327, 329, 330, 331, 336,
	337, 341, 347, 239, 202, 371, 379, 495, 299, 207,
	208, 209, 488, 489, 490, 491, 529, 530, 534, 438,
	439, 440, 441, 280, 524, 296, 444, 443, 316, 317,
	0, 191, 212, 351, 0, 430, 276, 553, 528, 523,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 288, 289,
	423, 424, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 1623, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 1621, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	1619, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 1615, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 1613, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 1611, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 1586, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 315, 192, 216, 0, 0, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 377, 358, 493, 494,
	301, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 1486, 258, 0, 0, 0, 0, 349, 255, 0,
	0, 410, 0, 197, 0, 462, 242, 359, 356, 500,
	270, 261, 257, 240, 302, 366, 408, 482, 402, 0,
	353, 0, 0, 472, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 238, 310, 196, 393, 473, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 334, 343, 342,
	323, 324, 326, 328, 333, 340, 346, 0, 0, 0,
	0, 0, 253, 306, 260, 252, 497, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 382, 245, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 315, 192,
	216, 0, 0, 392, 437, 449, 0, 0, 0, 243,
	0, 447, 406, 516, 224, 272, 434, 412, 445, 419,
	275, 0, 0, 446, 354, 502, 428, 513, 538, 539,
	251, 386, 525, 486, 533, 552, 217, 248, 400, 479,
	519, 469, 378, 498, 499, 314, 468, 283, 195, 352,
	544, 215, 455, 233, 222, 504, 522, 277, 432, 204,
	481, 511, 230, 459, 0, 0, 554, 206, 509, 478,
	374, 311, 312, 205, 0, 433, 256, 281, 246, 395,
	506, 507, 244, 555, 219, 532, 211, 0, 531, 388,
	501, 510, 375, 364, 210, 508, 373, 363, 319, 338,
	339, 268, 294, 426, 357, 427, 295, 384, 383, 385,
	199, 520, 0, 200, 0, 474, 521, 556, 225, 226,
	228, 0, 267, 271, 279, 282, 290, 291, 300, 350,
	399, 425, 421, 429, 0, 496, 514, 526, 536, 542,
	543, 545, 546, 547, 548, 549, 551, 550, 387, 298,
	470, 318, 355, 0, 0, 405, 448, 231, 518, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 365,
	461, 515, 320, 332, 335, 325, 344, 0, 345, 321,
	322, 327, 329, 330, 331, 336, 337, 341, 347, 239,
	202, 371, 379, 495, 299, 207, 208, 209, 488, 489,
	490, 491, 529, 530, 534, 438, 439, 440, 441, 280,
	524, 296, 444, 443, 316, 317, 0, 191, 212, 351,
	0, 430, 276, 553, 528, 523, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 293, 297, 303, 304, 307, 313, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 431, 436, 450, 451, 452, 453, 454, 457, 458,
	463, 464, 465, 466, 467, 475, 476, 480, 503, 505,
	517, 535, 540, 456, 288, 289, 423, 424, 287, 512,
	541, 0, 360, 0, 0, 362, 269, 292, 305, 0,
	527, 477, 218, 442, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 309, 372, 380, 409, 414, 284,
	259, 235, 435, 232, 460, 483, 484, 485, 487, 376,
	254, 413, 0, 377, 358, 493, 494, 301, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 349, 255, 0, 0, 410, 0,
	197, 0, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 0, 353, 0, 0,
	472, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 0, 0, 0, 0, 0, 253,
	306, 260, 252, 497, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 382,
	245, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 315, 192, 216, 0, 0,
	392, 437, 449, 0, 0, 0, 243, 0, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 0, 0,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 0, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 0, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 0, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	0, 0, 405, 448, 231, 518, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 0, 191, 212, 351, 0, 430, 276,
	553, 528, 523, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	0, 0, 362, 269, 292, 305, 0, 527, 477, 218,
	442, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 0,
	377, 358, 493, 494, 301, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 0, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 334, 343, 342, 323, 324, 326, 328, 333, 340,
	346, 0, 0, 0, 0, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 338, 339, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 365, 461, 515, 320, 332, 335, 325,
	344, 0, 345, 321, 322, 327, 329, 330, 331, 336,
	337, 341, 347, 239, 202, 371, 379, 495, 299, 207,
	208, 209, 488, 489, 490, 491, 529, 530, 534, 438,
	439, 440, 441, 280, 524, 296, 444, 443, 316, 317,
	0, 191, 212, 351, 0, 430, 276, 553, 528, 523,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 288, 289,
	423, 424, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 632,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 578, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 3317,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 0, 358, 493, 494, 301,
}

var yyPact = [...]int{
	3533, -1000, -436, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2109, 2234, -1000, -1000,
	-1000, -1000, 2329, -1000, 810, 1767, -1000, 2097, 415, -1000,
	44764, 546, -1000, 43490, 539, 177, 44764, -1000, 217, -1000,
	199, 44764, 215, 42853, -1000, -1000, -256, 19911, 2039, 97,
	96, 44764, -1000, -1000, -1000, -1000, 2248, 1760, -1000, 411,
	-1000, -1000, -1000, -1000, -1000, -1000, 42216, -1000, -1000, -1000,
	2112, 2076, 2344, 683, 2026, -1000, 2173, 1760, -1000, 19911,
	2237, 2162, 19274, -1000, 19274, 496, -1000, -1000, 14805, -1000,
	-1000, 25654, 44764, 32024, 366, -1000, 2097, -1000, -1000, -1000,
	126, -1000, 385, 1670, -1000, 1662, -1000, 706, 682, 420,
	561, 547, 419, 417, 414, 413, 410, 392, 391, 388,
	428, -1000, 713, 713, -102, -107, 3627, 488, 490, 490,
	740, 515, 2055, 2054, -1000, -1000, 713, 713, 713, 409,
	713, 713, 713, 713, 348, 344, 713, 713, 713, 713,
	713, 713, 713, 713, 713, 713, 713, 713, 713, 713,
	713, 713, 713, 390, 2097, 330, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 44764, 220, 44764, -1000,
	602, 44764, 838, 838, 135, 838, 838, 838, 838, 226,
	680, 84, -1000, 214, 325, 219, 322, 832, 240, -1000,
	-1000, 318, 832, 1253, -1000, 700, 193, -1000, 838, 838,
	-1000, 12237, 192, 12237, 12237, -1000, 2086, -1000, -1000, -1000,
	-1000, -1000, 1261, -1000, 504, -1000, -1000, -1000, -1000, 44764,
	41579, 405, 737, -1000, -1000, -1000, 61, -1000, -1000, 1425,
	1421, 19911, 1135, -1000, 939, 660, -1000, -1000, -1000, -1000,
	-1000, 569, 20548, 20548, 20548, 20548, -1000, -1000, 1555, 1555,
	1555, 1555, 20548, 1555, -1000, 1555, 1555, 1555, 19911, 1555,
	1555, 1555, -1000, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, -1000, -1000,
	-1000, 1555, 601, 1555, 1555, 1555, 1555, 1555, -1000, -1000,
	-1000, -1000, 20548, 1555, 1555, 1555, 1555, 1555, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23101, -1000, 17363, 1555,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44764, -1000, 1555, 244, 44764, 44764, 424, 2173, 1760, -1000,
	2248, 2257, 411, -1000, 2661, 1448, 1567, 1282, 1760, 1637,
	44764, -1000, 1691, -1000, -1000, -1000, 1955, 1172, 1248, -1000,
	-1000, -1000, -1000, 1727, 19911, -1000, -1000, 2310, -1000, 22464,
	600, 859, 2309, 40942, -1000, 496, 496, 1654, 14163, 51,
	-1000, -1000, -1000, 735, 29476, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2086, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1684,
	44764, -1000, -1000, 4364, 1263, -1000, 1766, -1000, 1679, -1000,
	1721, 19911, 1778, 538, 1263, 532, 531, 525, -1000, 1,
	-1000, -1000, -1000, -1000, -1000, -1000, 713, 713, 713, -1000,
	416, 2223, 415, 4224, -1000, -1000, -1000, 40305, 1763, 1263,
	-1000, 1762, -1000, 806, 595, 625, 625, 1263, -1000, -1000,
	44764, 1263, 795, 794, 1263, 1263, 44764, 44764, -1000, 39668,
	-1000, 39031, 38394, 1096, 44764, 37757, 37120, 36483, 35846, 35209,
	-1000, 2153, -1000, 1944, -1000, -1000, -1000, 44764, 1263, 1263,
	44764, 44764, 44764, 44764, 1263, -1000, -1000, 378, -1000, -1000,
	1093, 1085, 1084, 713, 713, 1082, 1245, 1244, 1243, 713,
	713, 1080, 1237, 30750, 1236, 336, 1077, 1075, 1072, 1079,
	1230, 198, 1226, 1031, 948, 1062, 44764, 1761, 44764, -1000,
	317, 756, 452, 729, 2097, 2027, 1651, 503, 536, 1263,
	491, 491, 44764, -1000, 12879, -1000, -1000, 1221, 19911, -1000,
	834, 832, 832, -1000, -1000, -1000, -1000, -1000, -1000, 838,
	44764, 834, -1000, -1000, -1000, 832, 838, 44764, 838, 838,
	838, 838, 832, 832, 832, 838, 44764, 44764, 44764, 44764,
	44764, 44764, 44764, 44764, 44764, 12237, 700, 838, -300, -1000,
	1218, -1000, 1887, -1000, -1000, -1000, -1000, -1000, -1000, 12237,
	12237, -1000, -1000, -1000, -1000, 213, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1, 1647, 34572, -1000, -305,
	-307, -308, -309, -1000, -1000, -1000, -310, -314, -1000, -1000,
	-1000, 19911, 19911, 19911, 19911, -140, -1000, 973, 20548, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 187, 844, 20548, 20548,
	20548, 20548, 20548, 20548, 20548, 20548, 20548, 20548, 20548, 20548,
	20548, 20548, 20548, -1000, -1000, 27565, 6433, 6433, 660, 660,
	660, 660, -1000, 19274, 19911, 19911, 660, -1000, 1263, 19274,
	19274, 19911, 743, 1421, 44764, -1000, 1282, -1000, -1000, -1000,
	972, -1000, 919, 2098, 2098, 2098, 2098, 19911, 19911, 19911,
	19911, 19911, 19911, 19911, 19911, 19911, 19911, 2098, 44764, 44764,
	1569, 19911, 19911, 19911, 19911, 19911, 19911, 16084, 19911, 19911,
	19911, 1282, 19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911,
	19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911,
	19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911, 1282,
	19911, 1066, 19911, 19911, 15447, 12879, 19274, 19274, 19274, 19274,
	19274, 33935, -1000, -1000, -1000, -1000, -1000, 19911, 19911, 19911,
	19911, 19911, 19911, 19911, 19911, 1282, 19911, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 592, 1554, 1402, 1298, 19911, -1000,
	1645, -1000, -116, 25017, 19911, 1211, 2307, 1812, 44764, -1000,
	-1000, -1000, 2173, -1000, 2173, 1554, 2313, 1958, 19274, -1000,
	-1000, 2313, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1338, -1000, 44764, 1637, 2144, 44764, 1947, 1210, 446, -1000,
	19911, 19911, 1634, -1000, 1657, 44764, -1000, -140, -1000, 33298,
	-1000, -1000, 11595, -1000, 44764, 383, 44764, -1000, 24380, 32661,
	13521, 51, -1000, 13521, 1579, -1000, 62, 75, 16721, 649,
	-1000, -1000, -1000, 3627, 21185, 1381, 649, 157, -1000, -1000,
	-1000, 1721, -1000, 1721, 1721, 1721, 1721, 446, 446, 446,
	446, -1000, -1000, -1000, -1000, -1000, 1748, 1747, -1000, 1721,
	1721, 1721, 1721, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1745, 1745, 1745, 1724, 1724, 481, -1000, 19911, 340, 32024,
	2107, 1060, 1131, 317, 493, 1793, 1263, 1263, 1263, 493,
	-1000, 1115, 1110, 1109, -1000, -422, 1632, -1000, -1000, 2220,
	-1000, -1000, 747, 830, 821, 828, 44764, 255, 362, -1000,
	461, -1000, 32024, 1263, 791, 625, 1263, -1000, 1263, -1000,
	-1000, -1000, -1000, -1000, 1263, -1000, -1000, 1630, -1000, 1623,
	927, 820, 863, 790, 1630, -1000, -1000, -88, 1630, -1000,
	1630, -1000, 1630, -1000, 1630, -1000, 1630, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 760, 232, -192, 44764,
	255, 502, -1000, 499, 27565, -1000, -1000, -1000, 27565, 27565,
	-1000, -1000, -1000, -1000, 1209, 1204, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -408, 44764, -1000, 276, 724,
	370, 380, 354, 44764, 230, 2155, 2150, 2145, 301, 343,
	44764, 44764, 491, 1875, 44764, 2120, 44764, -1000, -1000, -1000,
	-1000, -1000, 1421, 44764, -1000, -1000, 838, 838, -1000, -1000,
	44764, 838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 44764, -1000, -1000, -1000,
	-1000, 44764, -1000, -1000, -1000, -1000, -1000, 93, 64, 381,
	-1000, -1000, -1000, -1000, -1000, 2160, -1000, 1421, 780, 763,
	-1000, 1555, -1000, -1000, 1036, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 187, 20548, 20548, 20548, 1417, 530, 1621, 979,
	1467, 856, 856, 963, 963, 664, 664, 664, 664, 664,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1201, -1000,
	1625, -1000, 2069, 1301, 1282, 1625, 1625, 1526, 762, -1000,
	19911, 1282, -1000, -1000, 1282, 1282, 1282, 19911, -1000, -1000,
	19911, 19911, 19911, 19911, 1131, 1131, 1131, 1131, 1131, 1131,
	1131, 1131, 1131, 1131, 19911, 1613, 1609, 2305, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1907,
	1131, 1131, 1131, 1131, 1131, 19911, 1238, -1000, -1000, -1000,
	2610, 1131, 1131, -1000, 1131, 2562, 2534, 1282, 1425, 1282,
	1596, -1000, 2530, 1131, 2525, 2512, 2505, 1895, 2499, 2494,
	2480, 1131, 1131, 1131, 1883, 2353, 2308, 2303, 2288, 2261,
	2175, 2161, 2157, 2143, 1131, -144, 1131, 1282, -1000, -1000,
	-1000, -1000, -1000, 2111, 1841, 1282, 19274, 19274, 1581, 1555,
	588, -1000, 1625, 1282, 1282, 1625, 1625, -1000, 2073, 2058,
	2052, 2038, 2020, 1964, 1131, 1131, -1000, 1131, 12879, 1282,
	-1000, 1298, 44764, -1000, -278, -1000, 38, 663, 1555, -1000,
	30750, 1282, -1000, 5744, -1000, 1257, -1000, -1000, -1000, -1000,
	-1000, 28839, 1391, 2313, -1000, -1000, 1555, 1677, -1000, -1000,
	446, 136, 28202, 647, 647, 164, 1421, 1421, 19911, -1000,
	-1000, -1000, -1000, -1000, -1000, 585, 2271, 406, 1555, -1000,
	1505, 2201, -1000, -1000, -1000, 2142, 21827, -1000, 1555, 1555,
	44764, 1862, 1736, -1000, 584, -1000, 1579, 51, 65, -1000,
	-1000, -1000, -1000, 1421, -1000, 1104, 384, 3102, -1000, 463,
	-1000, -1000, -1000, -1000, 2046, 123, -1000, -1000, -1000, 269,
	446, -1000, -1000, -1000, -1000, -1000, -1000, 1200, 1200, -1000,
	-1000, -1000, -1000, -1000, 1055, -1000, -1000, -1000, 1042, -1000,
	-1000, 1981, 1891, 340, -1000, -1000, 713, 1199, -1000, -1000,
	2043, 713, 713, 44764, -1000, -1000, 1353, 2107, 276, 44764,
	752, 1866, -1000, 1793, 1793, 1793, 44764, -1000, -1000, -1000,
	-1000, -1000, -1000, -412, 82, 396, -1000, -1000, -1000, 3784,
	44764, 1649, -1000, 257, -1000, 1348, -1000, 44764, -1000, 1642,
	1744, 1263, 1263, -1000, -1000, -1000, 44764, 1555, -1000, -1000,
	-1000, -1000, 534, 2095, 321, -1000, -1000, -162, -1000, -1000,
	255, 257, 44764, 1263, 649, -1000, -1000, -1000, -1000, -1000,
	-413, 1627, 522, 268, 356, 44764, 44764, 44764, 44764, 44764,
	559, -1000, -1000, -1000, -1000, 238, -1000, -1000, 238, -1000,
	-1000, -1000, -1000, 333, 498, -1000, 44764, 44764, 623, -1000,
	-1000, -1000, 832, -1000, -1000, 832, -1000, -1000, -1000, -1000,
	-1000, 2083, 44764, 53, -348, -1000, -345, 19911, -1000, -1000,
	-1000, -1000, 1284, 521, 1621, 20548, 20548, 19274, -77, 681,
	681, 27565, -1000, -1000, -1000, 19911, 19911, 742, -1000, 19911,
	1024, -1000, -1000, -1000, -1000, 1298, 1131, 1131, 1131, 1131,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1481, 19911, 19911, 19911, 1282, 315, -1000, -1000, -1000, -1000,
	-1000, 2302, -1000, 19911, 19911, -1000, -1000, -1000, 19911, 19911,
	-1000, -1000, 19911, 19911, -1000, 19911, 19911, 19911, -1000, 19911,
	19911, 19911, 19911, -1000, -1000, -1000, -1000, 19911, 19911, 19911,
	19911, 19911, 19911, 19911, 19911, 19911, 19911, -1000, -1000, 32024,
	119, -144, 1066, 119, 1066, -1000, 1625, 1625, 19274, 12879,
	-1000, -1000, -1000, -1000, -1000, 19911, 19911, 19911, 19911, 19911,
	19911, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	663, -1000, 625, 625, 625, 44764, -1000, -1000, -1000, -1000,
	1532, -1000, 2178, -1000, 1980, 1973, 2295, 2271, -1000, 24380,
	2313, -1000, -1000, 44764, -249, -1000, 2021, 2048, 647, 647,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10953, 2173, 19911,
	1854, 44764, 171, -1000, 23743, 44764, 44764, 24380, 24380, 24380,
	24380, 24380, -1000, 1912, 1890, -1000, 1978, 1954, 1972, 44764,
	-1000, 1620, 1282, 2257, 21827, 411, 19911, 26291, 1586, 24380,
	-1000, -1000, 24380, 44764, 10311, -1000, -1000, 46, 52, -1000,
	-1000, -1000, -1000, 3627, -1000, -1000, 954, 2139, 2029, -1000,
	-1000, -1000, -1000, -1000, 1605, -1000, 1602, 1503, 1600, 232,
	-1000, 1775, 2068, 713, 713, -1000, 1039, -1000, 1263, 1188,
	1185, -1000, -1000, -1000, 518, -1000, 2118, 44764, 1851, 1847,
	1846, -1000, -420, 1030, 1743, 1773, 19911, 1733, 2219, 1459,
	44764, -1000, -1000, 44764, -1000, 173, -1000, 340, 44764, -1000,
	-1000, -1000, 362, 44764, -1000, 6874, -1000, -1000, -1000, 257,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 44764, 292, -1000,
	1726, 1260, -1000, -1000, 1783, -1000, -1000, -1000, -1000, 229,
	360, 234, 1183, 234, -1000, 44764, 622, 1891, 44764, -1000,
	-1000, -1000, 838, 838, -1000, -1000, 2066, -1000, 1263, 1131,
	20548, 20548, -1000, 660, -1000, 1555, -121, 1721, 1721, -1000,
	1721, 1724, -1000, 1721, 204, 1721, 178, 1721, -1000, -1000,
	1282, 1282, 1805, 1071, -1000, 1421, 19911, -1000, -1000, -1000,
	-1000, -1000, -22, 1949, 1936, 1131, -1000, 1720, 1719, 19911,
	1131, 1131, 1131, 1131, -1000, 1421, 1298, 1927, 1298, 1131,
	1131, 1874, 345, 1131, 1588, 1588, 1588, 1588, 1588, 1298,
	1298, 1298, 1298, 44764, -1000, -144, -1000, -1000, -184, -188,
	-1000, 1282, -144, 1489, -1000, -1000, 1282, -1000, 1774, 1770,
	1682, 1616, 1131, 1335, -1000, 2158, 2158, 2158, 1560, 1257,
	44764, -1000, -1000, -1000, -1000, 2271, 2267, 1486, -1000, -1000,
	136, 477, -1000, 2000, 2048, -1000, 2218, 2012, 2208, -1000,
	-1000, -1000, -1000, -1000, 1421, -1000, 2099, 1427, -1000, 720,
	1430, -1000, -1000, 18637, 1571, 1961, 576, 1560, 1535, 2201,
	1791, 1844, 2277, -1000, -1000, -1000, -1000, 1889, -1000, 1888,
	-1000, -1000, 1691, -1000, -1000, 1402, 1282, 1233, 383, 24380,
	1528, 1528, -1000, 575, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 847, 6590, 2327, -1000, 1178, -1000, 1103, 224, 1023,
	-1000, -1000, 713, 713, -1000, 787, 778, -1000, 44764, 1716,
	-1000, 446, 1175, 446, 1020, -1000, 987, -1000, -1000, -1000,
	-1000, 1876, 2001, -1000, -1000, -1000, -1000, 44764, -1000, -1000,
	44764, 44764, 44764, 1714, 2202, -1000, 19911, 1713, 714, 1828,
	44764, 44764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 489, 713, -388, 339, 335, 713, 713,
	713, -421, -1000, -1000, 1551, 1530, -1000, -105, -1000, 19911,
	-1000, -1000, -1000, 1089, 1089, -1000, 1691, -1000, -1000, -1000,
	1344, -1000, -1000, -91, 44764, 44764, 44764, 44764, -1000, 957,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 660, 20548, 1282, -1000, -1000, 446, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19911, -1000, 19911,
	-1000, 1421, 2173, 1173, 19911, 19911, -1000, 985, 970, 1131,
	-1000, -1000, -1000, -1000, -1000, 19911, -1000, -1000, -1000, 19911,
	260, 681, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1282, 382, -1000, -1000, -1000, -1000, 2275, -1000,
	1282, 19911, -1000, -1000, 19911, -1000, 19911, 19911, -1000, 19911,
	-1000, 19911, 1555, 2042, 1555, 1555, 26291, -1000, -1000, 2267,
	2263, 2196, 2004, 2002, 2002, 2000, -1000, 2194, 2191, -1000,
	1163, 2185, 1162, 776, -1000, 44764, 19911, 171, -1000, 407,
	44764, 171, 44764, -1000, 2241, -1000, -1000, 19911, 1708, -1000,
	19911, -1000, -1000, -1000, -1000, -1000, -1000, 6433, 2271, 1528,
	-1000, -1000, 671, -1000, 19911, -1000, -1000, -1000, 5714, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1157, 1145, -1000,
	-1000, 1706, 19911, -1000, -1000, -1000, 1341, 1327, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1691, -1000, -1000, -1000,
	-1000, 362, -419, 1665, 44764, 947, -1000, 1511, 1459, 357,
	171, 1143, 713, 713, 713, 934, 920, 30750, 1507, -1000,
	44764, 453, -1000, 362, -1000, -112, -113, 1131, -1000, -1000,
	2138, -1000, -1000, 12879, -1000, -1000, 1690, 1792, -1000, -1000,
	-1000, 265, -1000, -1000, 1131, 1131, 1282, -1000, 1131, 1131,
	1320, 1299, -1000, 1298, 1584, -1000, 260, 1282, 1843, -1000,
	-1000, 6433, -1000, -1000, 2241, 2184, 119, -1000, -1000, 263,
	119, 1421, 1563, 1131, 1409, 1377, 1131, 26928, -1000, 2182,
	2180, 31387, 31387, 663, 2263, -151, 19911, 19911, 1999, 898,
	-1000, -1000, -1000, -1000, 1139, 1138, -1000, 1127, -1000, 2323,
	-1000, 1421, -1000, 171, -1000, 573, 1430, -1000, 2173, 1421,
	44764, 1421, 118, 2241, -1000, 1131, -1000, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555,
	-1000, -1000, 44764, 1607, -1000, -1000, 2132, 1483, 80, -1000,
	1454, -1000, -1000, 168, -1000, 19911, -1000, 30750, 1121, 1118,
	-1000, -1000, -1000, -1000, -421, -1000, -1000, -1000, -1000, -1000,
	-1000, 411, 1441, -1000, 691, 44764, 44764, 1282, 363, -94,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19911,
	-1000, 1282, 1838, -1000, -235, -1000, -389, 19911, -144, -1000,
	-1000, -144, -1000, 19911, -1000, -1000, 19911, -1000, 19911, -1000,
	1444, -1000, -1000, -1000, -1000, -1000, 1444, 1444, -1000, -151,
	-1000, 1436, -1000, 44764, 1421, 1425, -1000, 891, -1000, -1000,
	-1000, -1000, -1000, 44764, 1430, 44764, -1000, 1423, 1282, 1555,
	2173, -1000, 1395, -1000, 411, -1000, 1687, 1773, -1000, -1000,
	-1000, 18000, -1000, -1000, -1000, -1000, -1000, 188, -89, 12879,
	9669, 1371, -1000, -1000, 1946, -85, -103, 1298, -1000, -324,
	-1000, -1000, -1000, -1000, 174, -1000, -1000, 1425, -1000, -1000,
	1369, 1324, 1271, 30113, -1000, -1000, -1000, -1000, -151, -1000,
	-1000, 2124, -1000, -1000, 1388, -1000, -1000, 26291, 44127, -1000,
	-74, 254, -89, 19911, 1673, 1282, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37, -1000, -1000, -1000, -1000, -1000,
	1783, -1000, 1924, -1000, -1000, -1000, 165, -366, -174, -182,
	-1000, -1000, -1000, 19911, -1000, 19911, -1000, 19911, -1000, -1000,
	-1000, 44764, 1555, -1000, 1295, -1000, 4157, -198, 1820, -1000,
	11, -1000, -1000, -1000, 842, 981, -1000, -1000, -1000, -1000,
	-1000, -1000, 1413, 44764, -1000, 471, -1000, -1000, -91, -92,
	758, -1000, -1000, -1000, -1000, -1000, 1186, 1160, 1131, -1000,
	44764, -1000, 44127, -191, 649, 6433, -1000, 1819, 1815, 2293,
	-1000, -1000, -1000, -1000, -1000, -1000, -431, 1292, 293, -1000,
	-95, 165, -1000, 19911, -1000, 19911, -1000, 1282, -1000, -1000,
	2114, 118, -1000, 2318, -1000, 2304, 686, 686, -1000, 917,
	-431, -1000, -114, -1000, 1131, 1131, -1000, -201, -1000, -1000,
	-1000, -1000, -1000, 460, 967, -1000, -1000, -1000, -1000, -1000,
	-1000, 6433, -1000, -1000, -1000, 237, 237, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2834, 2833, 30, 1, 43, 40, 2832, 41, 106,
	205, 31, 204, 115, 2828, 2826, 2824, 2821, 2818, 2817,
	2816, 237, 234, 231, 2815, 2814, 2813, 2810, 2809, 2808,
	2807, 2806, 2805, 2802, 241, 182, 200, 2799, 2798, 2797,
	134, 194, 95, 99, 197, 2796, 2795, 90, 2794, 2793,
	2792, 191, 190, 189, 823, 2791, 188, 129, 60, 2790,
	2789, 2788, 2787, 2786, 2785, 2784, 2783, 2782, 2781, 2780,
	2778, 2777, 2776, 2772, 2770, 2769, 203, 2764, 2763, 19,
	2758, 97, 2757, 2756, 2755, 2754, 13, 2753, 2752, 18,
	49, 2751, 2750, 56, 2745, 2744, 2743, 2739, 2735, 17,
	2734, 24, 2731, 38, 2729, 2727, 148, 2721, 2720, 2719,
	44, 2717, 2714, 2713, 2712, 2711, 2709, 2704, 163, 2703,
	2696, 2695, 185, 207, 2694, 2692, 165, 126, 135, 2691,
	2690, 123, 201, 2689, 143, 2686, 2682, 2681, 171, 2678,
	2722, 2675, 2674, 79, 84, 2671, 100, 2667, 2665, 14,
	94, 77, 29, 9, 10, 2662, 2660, 78, 89, 2659,
	128, 2658, 122, 80, 2657, 127, 114, 2656, 2655, 15,
	11, 2653, 2, 7, 3, 85, 2652, 2645, 137, 2642,
	2640, 2639, 108, 2636, 2634, 3388, 2631, 103, 158, 124,
	92, 2629, 54, 81, 2623, 2620, 2613, 2608, 2606, 67,
	2605, 2603, 2598, 164, 52, 181, 2597, 48, 45, 53,
	155, 2594, 50, 104, 2593, 162, 159, 2591, 2588, 73,
	51, 47, 2587, 112, 154, 136, 59, 109, 86, 160,
	2576, 2575, 72, 87, 2574, 2573, 2569, 2565, 184, 2552,
	2545, 82, 2539, 70, 2537, 209, 2535, 26, 65, 62,
	2532, 2531, 74, 141, 75, 37, 2528, 183, 2520, 69,
	179, 152, 175, 2519, 2518, 2517, 2515, 199, 350, 2514,
	2513, 133, 187, 178, 170, 96, 2512, 355, 2510, 2507,
	110, 2189, 5257, 2505, 35, 180, 2504, 2502, 6466, 157,
	46, 25, 2501, 142, 2499, 2480, 2479, 206, 193, 130,
	1059, 71, 2478, 2471, 2469, 16, 2468, 2467, 2466, 2462,
	2459, 2456, 93, 39, 36, 34, 215, 83, 20, 125,
	174, 88, 2455, 2452, 2451, 146, 107, 2450, 177, 176,
	151, 212, 2448, 202, 166, 145, 2443, 156, 33, 2438,
	2437, 2436, 2434, 102, 2433, 2431, 2430, 2429, 173, 168,
	138, 98, 2428, 105, 140, 169, 172, 64, 2425, 57,
	2423, 2414, 32, 196, 27, 2412, 23, 132, 149, 2406,
	111, 192, 4, 2405, 21, 364, 211, 2404, 2401, 6,
	8, 12, 2393, 2392, 2391, 2386, 161, 2381, 2371, 2370,
	2368, 28, 63, 22, 5, 131, 101, 2361, 2358, 4987,
	0, 153, 2322, 208,
}

//line sql.y:7672
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) userVariableUnion() *UserVariable {
	v, _ := st.union.(*UserVariable)
	return v
}

func (st *yySymType) userVariablesUnion() []*UserVariable {
	v, _ := st.union.([]*UserVariable)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 397, 398, 398, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 228, 370,
	371, 371, 372, 372, 372, 32, 71, 34, 34, 33,
	33, 36, 36, 35, 8, 8, 8, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 10,
	11, 11, 11, 11, 13, 13, 13, 13, 13, 19,
	20, 12, 12, 21, 21, 104, 104, 22, 23, 23,
	23, 23, 401, 401, 180, 180, 178, 178, 179, 179,
	252, 252, 24, 25, 25, 262, 262, 261, 261, 261,
	263, 263, 263, 263, 300, 300, 26, 26, 26, 26,
	26, 124, 124, 374, 374, 373, 366, 366, 365, 365,
	364, 369, 369, 368, 368, 367, 38, 39, 48, 48,
	48, 48, 49, 50, 375, 375, 339, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 341, 341, 327, 327, 340, 340, 340,
	340, 340, 340, 340, 326, 326, 135, 135, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 390, 390, 390, 389, 389,
	231, 231, 231, 231, 231, 231, 231, 231, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 156, 156, 152, 152, 152,
	153, 153, 153, 154, 154, 391, 391, 391, 391, 305,
	305, 305, 305, 308, 308, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 307, 307, 307, 307, 307, 309,
	309, 309, 309, 309, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	311, 311, 311, 311, 311, 311, 311, 311, 325, 325,
	312, 312, 320, 320, 321, 321, 321, 322, 322, 322,
	323, 323, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 319, 319, 318, 318, 318, 328, 353, 353, 352,
	352, 350, 350, 350, 350, 350, 350, 350, 350, 337,
	337, 347, 347, 347, 347, 347, 336, 336, 332, 332,
	332, 333, 333, 334, 334, 331, 331, 335, 335, 349,
	349, 348, 348, 329, 329, 330, 330, 355, 392, 392,
	392, 392, 392, 393, 393, 356, 382, 384, 384, 384,
	383, 383, 380, 381, 379, 379, 379, 379, 379, 81,
	81, 81, 275, 275, 276, 276, 345, 345, 344, 344,
	344, 346, 346, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 270, 270, 270, 378, 378, 378,
	378, 378, 378, 377, 377, 377, 342, 342, 342, 376,
	376, 57, 57, 213, 213, 395, 395, 396, 396, 396,
	45, 45, 45, 45, 45, 45, 44, 44, 44, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 358, 358, 58, 58, 3,
	3, 168, 170, 171, 171, 169, 169, 169, 169, 169,
	169, 60, 60, 59, 59, 173, 172, 174, 174, 174,
	1, 1, 2, 2, 4, 4, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 324, 324,
	324, 357, 357, 359, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 361, 361, 361, 61,
	61, 362, 313, 314, 315, 5, 6, 338, 360, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 269, 269, 278, 278, 268, 268, 293, 293,
	293, 271, 271, 271, 272, 272, 388, 388, 388, 265,
	265, 64, 64, 64, 66, 66, 67, 68, 68, 295,
	295, 296, 296, 69, 70, 82, 82, 82, 82, 82,
	82, 105, 105, 105, 15, 15, 15, 15, 78, 78,
	78, 14, 14, 65, 65, 72, 385, 385, 386, 387,
	387, 387, 387, 73, 75, 31, 31, 31, 31, 31,
	31, 130, 130, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 125, 125, 125, 119, 119,
	402, 76, 77, 77, 123, 123, 123, 116, 116, 116,
	122, 122, 122, 16, 16, 17, 251, 251, 18, 18,
	127, 127, 129, 129, 129, 129, 129, 131, 131, 131,
	131, 131, 131, 131, 126, 126, 128, 128, 128, 128,
	286, 286, 286, 285, 285, 162, 162, 164, 163, 163,
	165, 165, 166, 166, 166, 166, 211, 211, 188, 188,
	248, 248, 247, 247, 250, 250, 249, 249, 249, 249,
	253, 253, 167, 167, 167, 167, 175, 175, 176, 176,
	177, 177, 294, 294, 291, 291, 291, 290, 290, 181,
	181, 181, 183, 182, 182, 182, 182, 184, 184, 186,
	186, 185, 185, 187, 192, 192, 191, 191, 189, 189,
	189, 189, 190, 190, 190, 190, 193, 193, 140, 140,
	140, 140, 140, 140, 140, 155, 155, 155, 155, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	238, 238, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 149, 83,
	83, 83, 84, 84, 85, 85, 85, 85, 85, 86,
	86, 86, 86, 86, 141, 141, 88, 88, 87, 87,
	206, 206, 283, 283, 89, 90, 90, 93, 93, 92,
	91, 91, 97, 97, 94, 94, 96, 96, 95, 98,
	98, 99, 100, 100, 266, 266, 194, 194, 202, 202,
	202, 202, 195, 195, 195, 195, 195, 195, 195, 203,
	203, 203, 210, 204, 204, 200, 200, 200, 200, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 160, 160,
	160, 160, 218, 218, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 148,
	148, 161, 161, 161, 161, 302, 302, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 403, 403,
	316, 316, 316, 316, 201, 201, 201, 201, 201, 121,
	121, 121, 121, 121, 299, 299, 299, 303, 303, 303,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 304, 304, 216, 216, 117,
	117, 214, 214, 215, 217, 217, 212, 212, 212, 197,
	197, 197, 219, 219, 220, 220, 101, 102, 102, 103,
	103, 221, 221, 223, 222, 222, 224, 225, 225, 225,
	226, 226, 227, 227, 227, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 43, 132, 132,
	132, 132, 134, 134, 133, 133, 79, 79, 80, 80,
	80, 138, 138, 139, 139, 139, 136, 136, 137, 137,
	245, 245, 229, 229, 229, 236, 236, 236, 232, 232,
	234, 234, 234, 235, 235, 235, 233, 242, 242, 244,
	244, 243, 243, 239, 239, 240, 240, 241, 241, 241,
	237, 237, 196, 196, 196, 196, 196, 246, 246, 246,
	246, 254, 254, 207, 207, 209, 209, 208, 208, 159,
	255, 255, 259, 256, 256, 260, 260, 260, 260, 260,
	257, 257, 258, 258, 287, 287, 287, 264, 264, 277,
	277, 273, 273, 274, 274, 267, 267, 279, 279, 279,
	74, 205, 205, 354, 354, 351, 282, 282, 284, 284,
	288, 288, 292, 292, 289, 289, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	399, 400, 297, 298, 298, 298,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 9,
	7, 6, 6, 2, 2, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 5, 4, 2, 2, 1,
	2, 2, 2, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 8,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -397, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -399,
	11, 438, 256, 255, 28, -12, 498, 86, -398, 646,
	-245, -229, 22, 33, 29, -227, -223, -123, -229, 20,
	18, 7, -76, -402, -76, -76, 12, 13, -76, -339,
	-341, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -363, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 498, 501, -346, 223, 229, 230,
	225, 439, 123, 122, 75, -343, 361, 531, 616, -56,
	618, 102, 104, 617, 44, 235, 619, 620, 621, 538,
	622, 244, 623, 624, 625, 626, 632, 580, 633, 634,
	635, 124, 7, -76, -292, -288, -372, -281, 89, 90,
	91, 495, 247, 529, 530, 296, 81, 41, 504, 358,
	361, 531, 468, 616, 307, 321, 315, 473, 474, 475,
	342, 334, 496, 532, 505, 299, 248, 284, 610, 332,
	132, 618, 302, 533, 262, 366, 367, 534, 368, 102,
	310, 405, 631, 301, 535, 629, 104, 617, 79, 467,
	51, 613, 44, 257, 330, 231, 326, 619, 285, 536,
	507, 278, 123, 120, 638, 36, 324, 50, 30, 628,
	122, 49, 620, 147, 537, 621, 538, 370, 349, 604,
	48, 371, 263, 539, 84, 268, 500, 305, 612, 372,
	487, 325, 373, 295, 627, 228, 540, 596, 592, 593,
	374, 375, 605, 541, 350, 354, 489, 542, 397, 472,
	376, 645, 52, 543, 544, 606, 121, 545, 78, 622,
	80, 319, 320, 546, 293, 246, 492, 493, 399, 346,
	450, 457, 458, 108, 109, 453, 110, 459, 111, 460,
	461, 462, 451, 112, 105, 452, 463, 464, 347, 348,
	113, 465, 107, 106, 454, 456, 114, 466, 244, 35,
	377, 497, 297, 58, 272, 400, 46, 352, 642, 45,
	600, 547, 603, 345, 341, 447, 53, 548, 549, 550,
	551, 469, 623, 344, 318, 340, 637, 4, 290, 470,
	624, 62, 230, 356, 355, 357, 279, 396, 337, 552,
	553, 554, 251, 82, 555, 327, 21, 556, 557, 378,
	286, 558, 56, 559, 560, 403, 260, 561, 54, 625,
	39, 562, 265, 639, 626, 563, 564, 565, 566, 267,
	567, 380, 568, 594, 595, 379, 351, 353, 274, 381,
	499, 569, 306, 323, 264, 630, 570, 252, 483, 484,
	485, 486, 611, 491, 490, 266, 271, 259, 404, 253,
	571, 572, 573, 574, 575, 300, 591, 576, 577, 311,
	632, 448, 43, 578, 579, 580, 581, 582, 294, 289,
	398, 407, 61, 83, 363, 583, 584, 609, 317, 287,
	585, 308, 55, 633, 634, 635, 281, 636, 476, 477,
	478, 479, 9, 643, 644, 471, 383, 124, 291, 292,
	47, 338, 273, 586, 303, 587, 328, 329, 343, 316,
	339, 309, 597, 275, 384, 449, 261, 588, 406, 288,
	359, 364, 304, 503, 488, 280, 385, 608, 502, 480,
	481, 336, 333, 282, 482, 589, 386, 236, 276, 277,
	590, 598, 387, 388, 298, 389, 390, 391, 392, 393,
	395, 394, 283, 501, 314, 331, 365, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 446, 234, -76, 234, -185,
	-288, 234, -257, 367, -278, 369, 382, 377, 387, 375,
	-269, 378, 380, 274, -388, 397, 234, 384, 222, 370,
	379, 388, 389, 298, 395, 390, 394, 283, 391, 392,
	393, -370, 174, 621, 636, 132, 335, 374, 372, 398,
	600, 89, -288, 309, -295, 314, -282, -372, -281, 312,
	-185, -82, 596, 226, -297, -297, -125, 600, 602, -204,
	-140, 140, -155, -158, -146, -150, -198, -199, -200, -201,
	-156, -212, 163, 164, 171, 141, -210, -159, 26, 494,
	440, 439, 174, 31, -149, 68, 69, 442, 143, 57,
	415, 416, -157, 410, 417, 412, 467, 469, 470, 471,
	468, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 472, 444, 445, 115, 446, 105, 107, 106, 447,
	448, 449, 489, 492, 493, 491, 490, 347, 348, 450,
	451, 452, 108, 109, 110, 111, 112, 113, 114, 453,
	456, 454, 455, 457, 458, 459, 464, 465, 460, 461,
	462, 463, 466, -85, -97, 520, 519, -98, -147, -148,
	-161, -282, -288, 239, 409, 233, 169, 438, -151, -144,
	-8, -208, 217, 408, 413, 414, 418, 411, 506, 508,
	523, 524, 526, 511, 516, 515, 518, 483, 484, 485,
	486, 487, 488, 592, 593, 594, 595, -372, -281, -153,
	-152, -194, 92, 98, 103, 99, -394, 116, -399, 614,
	93, 94, 95, 96, 97, 117, 118, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 44,
	383, 383, -185, -76, -76, -76, -76, -221, -123, -223,
	-10, -8, -399, 8, -76, -8, -9, -13, -34, -36,
	525, -35, -288, -229, -245, 12, 159, 42, 50, -226,
	-227, -12, -8, -140, 19, 23, 24, -128, 165, -140,
	-288, -77, -128, -267, 238, -76, -76, -256, -300, 309,
	-260, 398, 397, -284, -258, -282, -280, -257, 396, 227,
	23, 139, 25, 27, 142, 174, 127, 19, 143, 37,
	229, 335, 245, 173, 241, 439, 222, 72, 506, 410,
	412, 408, 415, 441, 442, 409, 369, 31, 13, 508,
	28, 255, 24, 38, 167, 224, 146, 509, 258, 26,
	256, 115, 118, 511, 22, 75, 250, 14, 243, 40,
	16, 512, 513, 17, 239, 238, 159, 235, 70, 11,
	217, 29, 155, 66, 514, 134, 515, 516, 517, 518,
	128, 68, 156, 20, 640, 413, 414, 33, 601, 494,
	269, 169, 73, 59, 602, 140, 411, 519, 520, 116,
	521, 119, 76, 607, 136, 18, 71, 42, 522, 270,
	523, 240, 641, 524, 401, 525, 157, 225, 438, 69,
	158, 614, 526, 615, 233, 382, 8, 443, 32, 254,
	242, 126, 67, 527, 234, 145, 444, 445, 237, 129,
	117, 7, 133, 34, 12, 74, 77, 416, 417, 418,
	57, 125, 498, 144, 15, 528, 402, 138, 132, -340,
	156, -326, -330, -282, 249, -356, 245, -185, -349, -348,
	-282, -399, -124, -277, 235, 243, 242, 133, -375, 136,
	291, 409, 233, -51, -52, -53, -257, 173, 620, -106,
	266, 270, 87, 87, -330, -329, -328, -376, 270, 249,
	-355, -347, 241, 250, -336, 242, 243, -331, 235, 134,
	-376, -331, 240, 250, 245, 249, 270, 270, 124, 270,
	124, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	265, -337, 148, -337, 502, 502, -343, -376, 245, 235,
	-376, -376, 241, -279, -331, 237, 25, 237, 35, 35,
	-337, -337, -337, -257, 173, -337, -337, -337, -337, 278,
	278, -337, -337, -337, -337, -337, -337, -337, -337, -337,
	-337, -337, -337, -337, -337, -337, -337, -337, 234, -375,
	-132, 394, 298, 81, -54, 280, -37, -185, -277, 235,
	236, -375, 267, -185, 218, -185, -271, 156, 15, -271,
	-268, 383, 381, 368, 373, -271, -271, -271, -271, 281,
	366, -332, 235, 35, 246, 383, 281, 366, 281, 282,
	281, 282, 376, 386, 281, -293, 14, 159, 409, 371,
	375, 274, 234, 275, 236, 385, 282, -293, 93, -272,
	156, 383, 277, -271, -271, -298, -399, -284, 335, -370,
	603, -298, -298, 32, 90, 237, -282, -78, -282, 93,
	-15, -11, -22, -21, -23, 148, -130, 383, -118, 174,
	621, 604, 605, 606, 603, 380, 611, 609, 607, 281,
	608, 87, 136, 138, 139, 4, -140, 155, -195, 148,
	149, 150, 151, 152, 153, 154, 159, 140, 142, 156,
	-238, 137, 160, 161, 162, 163, 164, 165, 166, 168,
	167, 169, 170, 157, 158, 173, 220, 221, -150, -150,
	-150, -150, -210, -399, -399, -399, -150, -266, -399, -399,
	-399, -399, -216, -140, -399, -403, -399, -403, -403, -316,
	-399, -316, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, 218, -399, -399, -399, -399,
	-399, -150, -316, -316, -316, -316, -316, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, 103, 98, 92,
	-212, 99, 93, -282, -288, -8, -9, -204, -399, -297,
	-385, -386, -188, -185, -399, 298, -282, -282, 267, -226,
	-12, -8, -221, -227, -223, -8, -76, -116, -129, 63,
	64, -131, 24, 38, 67, 65, 23, -400, 88, -400,
	-245, -400, 87, -36, -248, 86, 61, 43, 93, 93,
	87, 21, -222, -224, -140, 14, -286, 4, -285, 25,
	-282, 93, 218, 101, 14, -186, 29, -185, -267, -267,
	87, 309, -260, -300, -262, -261, 399, 401, 148, -287,
	-282, 93, 31, 88, 87, -185, -305, -308, -310, -309,
	-311, -306, -307, 332, 333, 174, 336, 338, 339, 340,
	341, 342, 343, 344, 345, 346, 349, 32, 257, 328,
	329, 330, 331, 350, 351, 352, 353, 354, 355, 356,
	357, 315, 334, 496, 316, 317, 318, 319, 320, 321,
	323, 324, 325, 326, 327, -371, -370, 86, 88, 87,
	-312, 86, -140, -132, 234, -370, 235, 235, 235, -76,
	438, -337, -337, -337, 265, 19, -44, -41, -363, 18,
	-40, -41, 227, 120, 121, 224, 86, -326, 86, -335,
	-371, -370, 86, 134, 240, 133, -334, -331, -334, -335,
	-370, -212, -370, 134, 134, -370, -370, -253, -282, -253,
	-253, 23, -253, 23, -253, 23, 95, -282, -253, 23,
	-253, 23, -253, 23, -253, 23, -253, 23, 31, 78,
	79, 80, 31, 82, 83, 84, -212, -370, -370, -212,
	-326, -212, -185, -370, -257, 95, 95, 95, -337, -337,
	95, 93, 93, 93, -337, -337, 95, 93, -290, -288,
	93, 93, -377, 251, 295, 297, 95, 95, 95, 95,
	31, 93, -378, 31, 628, 627, 629, 630, 631, 93,
	95, 31, 95, 31, 95, -282, 86, -185, -138, 285,
	222, 224, 227, 76, 93, 299, 303, 304, 148, 44,
	87, 237, 234, -370, -273, 239, -273, -282, -289, -288,
	-280, 93, -140, -333, 14, 159, -293, -293, -271, -185,
	-333, -293, -271, -185, -271, -271, -271, -271, -293, -293,
	-293, -271, -288, -288, -185, -185, -185, -185, -185, -185,
	-185, -298, -272, -271, 603, 93, -265, 14, 76, -298,
	-298, -296, 312, 346, 597, 598, 599, 87, 498, -178,
	-185, 603, 603, 603, 603, 603, 603, -140, -140, -140,
	-140, 521, -202, 116, 140, 117, 118, -158, -203, -208,
	-210, 100, 159, 142, 156, -238, -146, -150, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -299, -282, 93, 174, -154, -153, 99, -394, -154,
	-126, -128, -140, -140, -370, -126, -126, -140, -214, -215,
	144, -212, -400, -400, 95, 99, 165, -122, 24, 38,
	-122, -122, -122, -122, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -122, -282, -282, -115, -114, 420,
	421, 422, 423, 425, 426, 427, 430, 431, 435, 436,
	419, 437, 424, 429, 432, 433, 434, 428, 331, -140,
	-140, -140, -140, -140, -140, -83, -140, 127, 128, 129,
	-140, -140, -140, -400, -140, -140, -140, -205, -204, -369,
	-368, -367, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -400, -140, -160, -144, 95,
	-228, 99, 90, -140, -140, -127, 24, 38, -126, -284,
	-289, -280, -126, -127, -127, -126, -126, -282, -140, -140,
	-140, -140, -140, -140, -140, -140, -400, -140, 218, -245,
	-400, -204, 87, -387, 401, 402, 601, -291, 270, -290,
	25, -205, 93, 14, -251, 77, -282, -226, -226, 63,
	64, 59, -126, -131, -400, -35, 25, -247, -282, 62,
	93, -317, -257, 358, 359, 174, -140, -140, 87, -225,
	27, 28, -185, -285, 165, -289, -185, -252, 270, -185,
	-163, -165, -166, -167, -188, -211, -399, -168, 517, 514,
	14, -178, -179, -187, -288, -260, -262, 87, 400, 402,
	403, 76, 119, -140, -318, 173, -345, -344, -343, -326,
	-328, -329, -330, 88, -318, -322, 364, 363, -312, -312,
	-312, -312, -312, -317, -317, -317, -317, 86, 86, -312,
	-312, -312, -312, -320, 86, -320, -320, -321, 86, -321,
	-356, -140, -353, -352, -350, -351, 244, 102, 590, 546,
	498, 538, 580, 77, -348, -225, 95, -400, -138, -274,
	239, -354, -351, -370, -370, -370, -274, 89, 93, 89,
	93, 89, 93, -107, -58, -1, 640, 641, 642, 87,
	19, -327, -326, -57, 295, -359, -360, 270, -355, -349,
	-335, 134, -334, -335, -335, -370, 87, 29, 124, 124,
	124, 124, 498, 224, 32, -275, 537, 140, 590, 546,
	-326, -57, 237, 237, -299, -299, -299, 93, 93, -270,
	636, -178, -134, 287, 148, 276, 276, 234, 234, 289,
	-185, 300, 302, 301, 299, 303, 304, 23, 23, 23,
	288, 290, 292, 278, -185, -185, -273, 76, -180, -185,
	26, -288, -185, -271, -271, -185, -271, -271, -185, -282,
	-118, 401, 87, 498, 22, -119, 22, -399, 116, 117,
	118, -203, -146, -150, -146, 139, 258, 87, -400, 25,
	87, 77, -400, -400, -400, 87, 14, -217, -215, 146,
	-140, -400, -400, -400, -400, -204, -140, -140, -140, -140,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-204, 87, 87, 14, -303, 25, -400, -400, -400, -400,
	-400, -216, -400, 14, 87, -400, -400, -400, 87, 87,
	-400, -400, 87, 87, -400, 87, 87, 87, -400, 87,
	87, 87, 87, -400, -400, -400, -400, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, -400, -90, 522,
	-400, -400, 87, -400, 87, -400, -126, -126, -399, 218,
	-400, -400, -400, -400, -400, 87, 87, 87, 87, 87,
	87, -400, -400, -400, -284, -400, -386, 600, 402, -192,
	-191, -189, 74, 238, 75, -399, -290, -400, -154, -228,
	-250, -228, -197, -282, 95, 99, -229, -162, -164, 14,
	-131, -210, 88, 87, -317, -233, -239, -268, -282, 93,
	174, -319, 174, -319, 358, 359, -224, 218, -193, 15,
	-196, 32, 57, -11, -399, -399, 32, 87, -181, -183,
	-182, -184, 66, 70, 72, 67, 68, 69, 73, -294,
	25, -163, -9, -8, -399, -399, -399, -185, -178, -401,
	14, 77, -401, 87, 218, -261, -263, 404, 401, 407,
	-370, 93, -106, 87, -343, -330, -230, -135, 40, -323,
	365, -317, 505, -317, -325, 93, -325, 95, 95, 88,
	-47, -42, -43, 33, 81, -350, -337, 93, 39, -337,
	-337, -282, 88, -225, -134, -185, 140, 76, -354, -354,
	-354, -288, -2, 639, 645, 134, 86, 368, 18, -247,
	87, 88, -213, 296, 88, -108, -282, 88, 86, -335,
	-335, -282, -399, 234, 31, 31, 590, 546, 537, -57,
	-213, -212, -370, -318, 638, 637, 88, 236, 294, -139,
	415, -136, 93, 89, -185, -185, -185, -185, -185, 227,
	224, -395, 305, -395, 279, 237, -178, -185, 87, -81,
	253, 248, -293, -293, 33, -185, 401, 612, 610, -140,
	139, 258, -158, -150, -128, 495, -301, 174, 332, 257,
	330, 326, 346, 337, 363, 328, 364, 325, 324, 323,
	-301, -299, -140, -140, 147, -140, 145, -400, -400, -400,
	-400, -400, -221, -140, -140, -140, -400, 174, 332, 14,
	-140, -140, -140, -140, -367, -140, -204, -140, -204, -140,
	-140, -140, -140, -140, -368, -368, -368, -368, -368, -204,
	-204, -204, -204, -399, -282, -93, -92, -91, 573, 238,
	-90, -160, -93, -160, -400, -400, -127, -284, -140, -140,
	-140, -140, -140, -140, -189, -331, -331, -331, -253, 87,
	-264, 22, 14, 57, 57, -162, -193, -163, -131, -282,
	-236, 596, -242, 46, -240, -241, 47, -237, 48, 56,
	-319, -319, 165, -226, -140, -254, 76, -255, -259, -212,
	-207, -209, -208, -399, -246, -400, -282, -253, -255, -165,
	-166, -166, -165, -166, 66, 66, 66, 71, 66, 71,
	66, -182, -288, -400, -400, -9, -9, -140, -291, 77,
	-163, -163, -187, -288, 165, 401, 405, 406, -343, -393,
	116, 140, 31, 76, 361, 102, -391, 173, 534, 585,
	590, 546, 538, 580, -392, 240, 133, 134, 252, 25,
	41, 88, 87, 88, 87, 88, 87, -276, -275, -43,
	-42, -337, -337, 95, -370, 93, 93, 236, 26, -185,
	76, 76, 76, -109, 643, 95, 86, -3, 81, -140,
	86, 19, -326, -212, -361, -313, -362, -314, -315, -5,
	-6, -338, -112, 57, 102, -61, 44, 235, 623, 624,
	124, -399, 636, -353, -247, -357, -359, -185, -143, -399,
	-142, -144, -151, 163, 164, -213, -185, -133, 285, 293,
	86, -137, 90, -374, 77, 276, 361, 276, -396, 306,
	93, -396, -185, -81, -47, -185, -271, -271, 33, -370,
	-400, -158, -150, -399, -304, 504, -312, -312, -312, -321,
	-312, 320, -312, 320, -312, -400, -400, 87, -400, 22,
	-400, -140, -117, 443, 87, 87, -400, 86, 86, -140,
	-400, -400, -400, -400, -400, 87, -400, -400, -400, 87,
	-302, 591, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -89, -283, -282, -90, 555, 555, -400, -90,
	-218, 87, -400, -400, 87, -400, 87, 87, -400, 87,
	-400, 87, -190, 22, -190, -190, -400, -228, -185, -193,
	-219, 16, -233, 51, 338, -244, -243, 55, 47, -241,
	19, 49, 19, 30, -254, 87, 148, 87, -400, -400,
	87, 57, 218, -400, -193, -176, -175, 76, 77, -177,
	76, -175, 66, 66, -248, -400, -400, 87, -252, -163,
	-193, -193, 218, 116, -399, -145, -157, -143, 12, 93,
	93, -370, -390, 627, 628, 31, 95, -337, -337, 134,
	134, -185, 86, -317, 93, -317, 95, 95, 31, 82,
	83, 84, 31, 78, 79, 80, -185, -185, -185, -185,
	-358, 86, 19, -140, 86, 148, 88, -247, -247, 272,
	159, -337, 621, 278, 278, -337, -337, -337, -111, -110,
	643, 88, -400, 87, -324, 498, 501, -140, -152, -152,
	-248, 88, -366, 498, -373, -282, -282, -282, -282, 95,
	97, -146, -400, -317, -140, -140, -226, 93, -140, -140,
	95, 95, -400, -204, -140, -400, -173, -172, -174, 604,
	116, 31, -301, -400, -206, 270, -96, -95, -94, 14,
	-400, -140, -140, -140, -140, -140, -140, -399, 66, 18,
	16, -399, -399, -291, -219, -220, 17, 19, -234, 53,
	-232, 52, -232, -243, 19, 19, 93, 19, 93, 134,
	-259, -140, -209, 57, -11, -282, -207, -282, -221, -140,
	86, -140, -154, -193, -193, -140, -199, 467, 469, 470,
	471, 468, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 472, 446, 105, 107, 106, 447, 448, 449,
	489, 492, 493, 491, 490, 347, 348, 450, 451, 452,
	108, 109, 110, 111, 112, 113, 114, 453, 456, 454,
	457, 458, 459, 464, 465, 460, 461, 462, 463, 466,
	483, 484, 485, 486, 487, 488, 592, 593, 594, 595,
	93, 93, 86, -140, 88, 88, -248, -357, -58, 88,
	-247, 95, 88, 273, -208, -399, 93, -337, -337, -337,
	95, 95, -290, -400, 87, -282, -392, -359, 502, 502,
	-400, 25, -365, -364, -284, 86, 77, -121, 159, 498,
	-400, -400, -400, -400, -400, 88, 88, -400, -400, 87,
	-400, -172, -174, -400, 76, -154, -221, 19, -93, 295,
	297, -93, -400, 87, -400, -400, 87, -400, 87, -400,
	-249, -400, -282, 240, 19, 19, -249, -249, -192, -220,
	-103, -102, -101, 528, -140, -204, -235, 54, 76, 119,
	93, 93, 93, 12, -207, 218, -226, -247, -170, 368,
	-221, -400, -247, 88, 25, 88, 645, 134, 88, -208,
	-120, -399, 269, -290, 93, 93, -110, -113, -11, 87,
	148, -247, -185, -400, 496, 73, 499, -204, -400, 76,
	509, 604, -88, -87, -84, 615, 641, -204, -90, -90,
	-140, -140, -140, 87, -400, -400, -400, -103, 87, -100,
	-99, -282, 76, 119, -255, -282, 88, -400, -399, -226,
	88, -231, -11, 86, -3, 269, -313, -362, -314, -315,
	-5, -6, -338, -79, 498, -364, -342, -284, 93, 95,
	88, 62, 497, 500, -400, -86, 142, 613, 588, -141,
	-152, -149, -400, 87, -400, 87, -400, 87, -282, 240,
	-101, 87, 25, -291, -171, -169, -282, 552, -383, -382,
	494, -393, -389, 116, 140, 102, -391, 590, 546, 125,
	126, -79, -140, 86, -400, -80, 284, 600, -374, 62,
	-86, 614, 566, 540, 566, 540, -140, -140, -140, -99,
	-399, -400, 87, 22, -305, -60, 563, -380, -381, 76,
	-384, 374, 562, 583, 116, 93, 88, -247, 245, -366,
	498, 139, -400, 87, -400, 87, -400, -89, -169, 559,
	-318, -154, -381, 76, -380, 76, 13, 12, -4, 644,
	88, 286, 499, -86, -140, -140, -400, -59, 26, -170,
	-379, 253, 248, 251, 32, -379, 95, -4, 500, -400,
	-400, 563, 247, 31, 116, -154, -173, -172, -172,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 70, 72, 73, 830,
	830, 830, 0, 830, 0, 0, 830, -2, -2, 830,
	1422, 0, 830, 0, 0, -2, 762, 764, 0, 766,
	-2, 0, 0, 775, 1962, 1962, 825, 0, 0, 0,
	0, 0, 830, 830, 830, 830, 1281, 50, 830, 0,
	85, 86, 781, 782, 783, 65, 0, 1960, 1, 3,
	71, 75, 0, 0, 0, 58, 1290, 0, 78, 0,
	0, 834, 0, 832, 0, 1405, 830, 830, 0, 116,
	117, 0, 0, 0, -2, 120, -2, 149, 150, 151,
	0, 156, 576, 503, 555, 501, 540, -2, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 379, 379, 0, 0, -2, 489, 489, 489,
	1407, 0, 0, 0, 537, 441, 379, 379, 379, 0,
	379, 379, 379, 379, 0, 0, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 1308, 155, 1423, 1420, 1421, 42, 43,
	44, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 0, 1399, 0, 689,
	931, 0, 751, 751, 0, 751, 751, 751, 751, 0,
	0, 0, 701, 0, 0, 0, 0, 748, 0, 717,
	718, 0, 748, 0, 724, 754, 0, 729, 751, 751,
	732, 1963, 0, 1963, 1963, 1390, 0, 745, 743, 757,
	758, 39, 761, 765, 0, 770, 773, 1416, 1417, 0,
	788, 49, 1671, 780, 793, 794, 0, 826, 827, 45,
	1073, 0, 953, 958, 969, 984, 985, 986, 987, 988,
	990, 991, 0, 0, 0, 0, 996, 997, 0, 0,
	0, 0, 0, 1054, 1005, 0, 0, 0, 1257, 0,
	1218, 1218, 1089, 1218, 1220, 1220, 1623, 1755, 1763, 1879,
	1586, 1591, 1592, 1593, 1872, 1873, 1874, 1875, 1913, 1914,
	1918, 1683, 0, 0, 0, 1959, 1718, 1726, 1727, 1749,
	1845, 1899, 1680, 1700, 1701, 1827, 1828, 1722, 1723, 1704,
	1716, 1719, 1707, 1708, 1710, 1712, 1717, 1724, 1730, 1709,
	1729, 1728, 0, 1705, 1706, 1711, 1721, 1725, 1713, 1714,
	1715, 1720, 1731, 0, 0, 0, 0, 0, 1165, 1166,
	1167, 1266, 0, 0, 0, 0, 0, 0, 275, 276,
	1072, 1379, 0, 1220, 1220, 1220, 1220, 1220, 1014, 1015,
	1016, 1017, 1018, 1042, 1043, 1049, 1050, 1822, 1823, 1824,
	1825, 1664, 1908, 1672, 1673, 1807, 1808, -2, -2, 221,
	222, 223, 224, 225, 226, 227, 0, 217, 0, 0,
	280, 281, 277, 278, 279, 1056, 1057, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 1962,
	0, 803, 0, 0, 0, 0, 0, 1290, 0, 1282,
	1281, 63, 0, 830, -2, 0, 0, 0, 0, 47,
	0, 52, 890, 77, 76, 1330, 0, 0, 0, 59,
	1291, 67, 69, 1292, 0, 835, 836, 0, 866, 870,
	0, 831, 0, 0, 1406, 1405, 1405, 102, 0, 1895,
	1383, -2, -2, 0, 0, 1418, 1419, 1392, -2, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, -2, 0,
	0, 167, 168, 0, 40, 406, 0, 163, 0, 399,
	340, 0, 1308, 0, 0, 0, 0, 0, 830, 0,
	1400, 144, 145, 152, 153, 154, 379, 379, 379, 552,
	0, 0, 155, 155, 510, 511, 512, 0, 0, -2,
	404, 0, 490, 0, 0, 393, 393, 397, 395, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 380, 0, 550, 551, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 1409, 0, 527, 528,
	0, 0, 0, 379, 379, 0, 0, 0, 0, 379,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	1321, 0, 0, 0, -2, 0, 681, 0, 0, 0,
	1401, 1401, 0, 688, 0, 690, 691, 0, 0, 692,
	0, 748, 748, 746, 747, 694, 695, 696, 697, 751,
	0, 0, 388, 389, 390, 748, 751, 0, 751, 751,
	751, 751, 748, 748, 748, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 754, 751, 0, 725,
	0, 726, 727, 730, 731, 733, 1964, 1965, 1438, 1963,
	1963, 737, 741, 1391, 763, 771, 774, 791, 789, 790,
	792, 784, 785, 786, 787, 0, 805, 806, 811, 0,
	0, 0, 0, 817, 818, 819, 0, 0, 822, 823,
	824, 0, 0, 0, 0, 0, 951, 0, 0, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 970, 971, 0, 0, 0, 992, 993,
	994, 995, 998, 0, 0, 0, 1003, 1004, 0, 0,
	0, 0, 0, 1258, 0, 1087, 0, 1088, 1090, 1091,
	0, 1092, 840, 840, 840, 840, 840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 0, 0, 850, 850, 0,
	0, 0, 210, 211, 212, 213, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 229, 230,
	231, 232, 282, 1266, 0, 1072, 0, 0, 0, 46,
	795, 796, 0, 914, 1411, 0, 0, 846, 0, 57,
	66, 68, 1290, 61, 1290, 0, 852, 0, 0, -2,
	-2, 853, 859, 860, 861, 862, 863, 54, 1961, 55,
	0, 74, 0, 48, 0, 0, 0, 0, 352, 1333,
	0, 0, 1283, 1284, 1287, 0, 867, 1761, 871, 0,
	873, 874, 0, 833, 0, 100, 0, 930, 0, 0,
	0, 1895, 1389, 0, 104, 105, 0, 0, 0, 363,
	1394, 1395, 1396, -2, 386, 0, 363, 347, 290, 291,
	292, 340, 294, 340, 340, 340, 340, 352, 352, 352,
	352, 323, 324, 325, 326, 327, 0, 0, 309, 340,
	340, 340, 340, 330, 331, 332, 333, 334, 335, 336,
	337, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	342, 342, 342, 344, 344, 0, 41, 0, 367, 0,
	1287, 0, 0, 1321, 1403, 1413, 0, 0, 0, 1403,
	122, 0, 0, 0, 553, 587, 504, 541, 554, 0,
	507, 508, -2, 0, 0, 489, 0, 491, 0, 387,
	0, -2, 0, 397, 0, 393, 397, 394, 397, 385,
	398, 531, 532, 533, 0, 535, 536, 617, 900, 0,
	0, 0, 0, 0, 623, 624, 625, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 542, 543,
	544, 545, 546, 547, 548, 549, 0, 0, 0, 0,
	491, 0, 538, 0, 0, 443, 444, 445, 0, 0,
	448, 449, 450, 451, 0, 0, 454, 455, 456, 917,
	918, 457, 458, 483, 484, 485, 459, 460, 461, 462,
	463, 464, 465, 477, 478, 479, 480, 481, 482, 466,
	467, 468, 469, 470, 471, 474, 0, 137, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 0, 849, 932, 1424,
	1425, 752, 753, 0, 391, 392, 751, 751, 698, 738,
	0, 751, 702, 739, 703, 705, 704, 706, 719, 720,
	751, 709, 749, 750, 710, 711, 712, 713, 714, 715,
	716, 734, 721, 722, 723, 755, 0, 759, 760, 735,
	736, 0, 772, 776, 777, 778, 779, 0, 0, 808,
	96, 813, 814, 815, 816, 828, 821, 1074, 948, 949,
	950, 0, 952, 955, 0, 1058, 1060, 957, 959, 1069,
	1070, 1071, 0, 0, 0, 0, 0, 963, 967, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 989, 1234, 1235, 1236, 1006, 283, 284, 0, 1007,
	0, 864, 0, 0, 0, 0, 0, 0, 1264, 1261,
	0, 0, 1219, 1221, 0, 0, 0, 0, 841, 842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1237,
	0, 0, 0, 0, 0, 1257, 0, 1009, 1010, 1011,
	0, 0, 0, 1125, 0, 0, 0, 0, 1412, 0,
	132, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 1169,
	1170, 1171, 38, 0, 0, 0, 0, 0, 851, 1267,
	0, -2, 0, 0, 0, 0, 0, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	1377, 0, 0, 798, 799, 801, 0, 934, 0, 915,
	0, 0, 804, 0, 845, 0, 848, 60, 62, 857,
	858, 0, 875, 854, 56, 51, 0, 0, 892, 1331,
	352, 1353, 0, 361, 361, 358, 1293, 1294, 0, 1286,
	1288, 1289, 79, 872, 868, 0, 946, 0, 0, 929,
	0, 878, 880, 881, 882, 912, 0, 885, 0, 0,
	0, 0, 0, 98, 931, 1384, 103, 0, 0, 108,
	109, 1385, 1386, 1387, 1388, 0, 576, -2, 438, 169,
	171, 172, 173, 164, -2, 350, 348, 349, 293, 352,
	352, 317, 318, 319, 320, 321, 322, 0, 0, 310,
	311, 312, 313, 304, 0, 305, 306, 307, 0, 308,
	405, 0, 1295, 368, 369, 371, 379, 0, 374, 375,
	0, 379, 379, 0, 400, 401, 0, 1287, 1312, 0,
	0, 0, 1414, 1413, 1413, 1413, 0, 157, 158, 159,
	160, 161, 162, 612, 0, 0, 588, 610, 611, 155,
	0, 0, 165, 493, 492, 0, 644, 0, 403, 0,
	0, 397, 397, 382, 383, 534, 0, 0, 619, 620,
	621, 622, 0, 0, 0, 520, 432, 0, 521, 522,
	491, 493, 0, 0, 363, 446, 447, 452, 453, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 569, 570, 495, 574, 571, 495, 575,
	1309, 1310, 1311, 0, 0, 682, 0, 0, 429, 94,
	1402, 687, 748, 708, 740, 748, 700, 707, 728, 768,
	812, 0, 0, 0, 0, 820, 0, 0, 956, 1059,
	1061, 960, 0, 964, 968, 0, 0, 0, 0, 0,
	0, 0, 1055, 1079, 1080, 0, 0, 0, 1262, 0,
	0, 1086, 1222, 1223, 1093, 0, 0, 0, 0, 0,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1281, 0, 0, 0, 0, 0, 1114, 1115, 1116, 1117,
	1118, 0, 1120, 0, 0, 1123, 1124, 1126, 0, 0,
	1129, 1130, 0, 0, 1131, 0, 0, 0, 1135, 0,
	0, 0, 0, 1144, 1145, 1146, 1147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 1159, 0,
	1037, 0, 0, 1037, 0, 1075, 0, 0, 850, 0,
	1224, 1225, 1226, 1227, 1228, 0, 0, 0, 0, 0,
	0, 1191, 1192, 1194, 1267, 1378, 797, 800, 802, 888,
	935, 936, 0, 0, 0, 0, 916, 1410, 843, 844,
	847, 894, 0, 1269, 0, 0, 875, 946, 876, 0,
	855, 53, 891, 0, 1335, 1334, 1347, 1360, 361, 361,
	355, 356, 362, 357, 359, 360, 1285, 0, 1290, 0,
	1371, 0, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 919, 0, 0, 922, 0, 0, 0, 0,
	913, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	92, 93, 0, 0, 0, 106, 107, 0, 0, 113,
	364, 365, 146, 155, 440, 170, 413, 0, 0, 289,
	351, 314, 315, 316, 0, 338, 0, 0, 0, 434,
	118, 1299, 1298, 379, 379, 370, 0, 373, 0, 0,
	0, 1415, 341, 402, 0, 136, 0, 0, 0, 0,
	0, 142, 582, 0, 0, 589, 0, 0, 0, 502,
	0, 513, 514, 0, 616, -2, 678, 367, 0, 381,
	384, 901, 0, 0, 515, 0, 518, 519, 433, 493,
	524, 525, 539, 526, 475, 476, 473, 0, 0, 1322,
	1323, 1328, 1326, 1327, 123, 560, 562, 561, 565, 0,
	0, 497, 0, 497, 558, 0, 429, 1295, 0, 686,
	430, 431, 751, 751, 807, 97, 0, 810, 0, 0,
	0, 0, 961, 965, 865, 0, 1255, 340, 340, 1242,
	340, 344, 1245, 340, 1247, 340, 1250, 340, 1253, 1254,
	0, 0, 0, 0, 1085, 1265, 0, 1094, 1095, 1096,
	1097, 1098, 1259, 0, 0, 0, 1113, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1032, 1036, 0, 1038, 1039, 0, 0,
	1161, 0, 0, 1172, 1076, 1077, 0, 1268, 0, 0,
	0, 0, 0, 0, 937, 942, 942, 942, 0, 0,
	0, 1397, 1398, 1270, 1271, 946, 1272, 877, 856, 893,
	1353, 0, 1346, 0, -2, 1355, 0, 0, 0, 1361,
	353, 354, 869, 80, 947, 83, 0, 1371, 1380, 0,
	1362, 1373, 1375, 0, 0, 0, 1367, 0, 946, 879,
	908, 910, 0, 905, 920, 921, 923, 0, 925, 0,
	927, 928, 890, 884, 886, 0, 0, 0, 100, 0,
	946, 946, 99, 0, 933, 110, 111, 112, 439, 174,
	179, 0, 0, 0, 184, 0, 186, 0, 0, 0,
	191, 192, 379, 379, 414, 0, 286, 288, 0, 0,
	177, 352, 0, 352, 0, 345, 0, 415, 435, 1296,
	1297, 0, 0, 372, 376, 377, 378, 0, 1404, 138,
	0, 0, 0, 585, 0, 613, 0, 0, 0, 0,
	0, 0, 166, 494, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 0, 379, 0, 0, 0, 379, 379,
	379, 0, 670, 366, 0, 0, 641, 638, 516, 0,
	215, 216, 218, 0, 0, 523, 890, 1313, 1314, 1315,
	0, 1325, 1329, 126, 0, 0, 0, 0, 572, 0,
	496, 573, 683, 684, 685, 95, 693, 699, 809, 829,
	954, 962, 966, 0, 0, 1256, 1240, 352, 1243, 1244,
	1246, 1248, 1249, 1251, 1252, 1001, 1002, 0, 1082, 0,
	1084, 1263, 1290, 0, 0, 0, 1112, 0, 0, 0,
	1121, 1122, 1127, 1128, 1132, 0, 1134, 1136, 1137, 0,
	0, 0, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 0, 1030, 1033, 1160, 1040, 1041, 1046, 1163,
	0, 0, 1078, 1174, 0, 1179, 0, 0, 1185, 0,
	1189, 0, 0, 0, 0, 0, 914, 895, 64, 1272,
	1274, 0, 1340, 1338, 1338, 1348, 1349, 0, 0, 1356,
	0, 0, 0, 0, 84, 0, 0, 0, 1376, 0,
	0, 0, 0, 101, 1281, 902, 909, 0, 0, 903,
	0, 904, 924, 926, 883, -2, 887, 0, 946, 946,
	90, 91, 0, 180, 0, 182, 208, 209, 0, 185,
	187, 188, 189, 195, 196, 197, 190, 0, 0, 285,
	287, 0, 0, 328, 339, 329, 0, 0, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 890, 139, 140, 141,
	577, 0, 587, 0, 0, 0, 580, 0, 505, 0,
	0, 0, 379, 379, 379, 0, 0, 0, 0, 655,
	0, 0, 618, 0, 626, 0, 0, 0, 219, 220,
	0, 1324, 559, 0, 124, 125, 0, 0, 564, 498,
	499, 1229, 1000, 1241, 0, 0, 0, 1260, 0, 0,
	0, 0, 1119, 0, 0, 1140, 0, 0, 0, 607,
	608, 0, 1196, 1035, 1281, 0, 1037, 1047, 1048, 0,
	1037, 1173, 0, 0, 0, 0, 0, 0, 943, 0,
	0, 0, 0, 934, 1274, 1279, 0, 0, 1343, 0,
	1336, 1339, 1337, 1350, 0, 0, 1357, 0, 1359, 0,
	1381, 1382, 1374, 0, 1366, 1369, 1365, 1368, 1290, 906,
	0, 911, 0, 1281, 89, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 343, 346, 0, 0, 0, 578,
	0, 590, 581, 0, 668, 0, 672, 0, 0, 0,
	675, 676, 677, 654, 0, 658, 407, 642, 639, 640,
	517, 0, 127, 128, 0, 0, 0, 0, 0, 0,
	1081, 1083, 1109, 1110, 1111, 1238, 1239, 1133, 1138, 0,
	1141, 0, 0, 1142, 0, 609, 1026, 0, 0, 1044,
	1045, 0, 1175, 0, 1180, 1181, 0, 1186, 0, 1190,
	0, 939, 896, 897, 944, 945, 0, 0, 889, 1279,
	82, 1280, 1277, 0, 1275, 1273, 1332, 0, 1341, 1342,
	1351, 1352, 1358, 0, 1364, 0, 87, 0, 0, 0,
	1290, 181, 0, 200, 0, 586, 0, 589, 579, 666,
	667, 0, 679, 671, 673, 674, 656, -2, 1316, 0,
	0, 0, 566, 999, 0, 0, 0, 0, 1143, 0,
	605, 606, 1034, 1027, 0, 1012, 1013, 1031, 1162, 1164,
	0, 0, 0, 0, 938, 940, 941, 81, 0, 1276,
	1052, 0, 1344, 1345, 1372, 1370, 907, 914, 0, 88,
	420, 413, 1316, 0, 0, 0, 659, 660, 661, 662,
	663, 664, 665, 556, 1318, 129, 130, 486, 487, 488,
	123, 1230, 0, 1233, 1139, 1028, 0, 0, 0, 0,
	1024, 1025, 1176, 0, 1182, 0, 1187, 0, 898, 899,
	1278, 0, 0, 591, 0, 593, 0, -2, 408, 421,
	0, 175, 201, 202, 0, 0, 205, 206, 207, 198,
	199, 119, 0, 0, 680, 0, 1319, 1320, 126, 1231,
	0, 1019, 1020, 1021, 1022, 1023, 0, 0, 0, 1053,
	1032, 592, 0, 0, 363, 0, 602, 409, 410, 0,
	416, 417, 418, 419, 203, 204, 614, 0, 0, 563,
	0, 0, 1177, 0, 1183, 0, 1188, 0, 594, 595,
	603, 0, 411, 0, 412, 0, 0, 0, 583, 0,
	614, 1317, 0, 1029, 0, 0, 1051, 0, 604, 600,
	422, 424, 425, 0, 0, 423, 615, 584, 1232, 1178,
	1184, 0, 426, 427, 428, 596, 597, 598, 599,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 646,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:579
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:625
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *UserVariable
//line sql.y:631
		{
			yyLOCAL = NewUserDefinedVariable(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:642
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:656
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:666
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:672
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:678
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:682
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:691
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:701
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:707
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:781
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:896
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:908
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:912
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:942
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:946
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:956
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:966
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:970
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:979
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:995
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1001
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1011
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1015
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1019
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1025
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1029
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1033
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1037
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1043
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1047
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1053
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1066
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1075
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1079
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1110
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1115
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1121
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1141
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1147
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1163
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1170
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1177
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1182
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1187
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1192
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1199
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1206
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1217
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1228
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1234
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1238
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1242
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1270
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1280
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1284
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1294
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1300
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1304
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1310
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1320
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1325
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1334
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1358
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1367
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1475
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1479
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1483
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1489
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1493
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1587
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = Armscii8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = ASCIIStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Big5Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = UBinaryStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = Cp1250Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Cp1251Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Cp1256Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Cp1257Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Cp850Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Cp852Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Cp866Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Cp932Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Dec8Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = EucjpmsStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = EuckrStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = Gb18030Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = Gb2312Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = GbkStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Geostd8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = GreekStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = HebrewStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Hp8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Keybcs2Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Koi8rStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Koi8uStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = Latin1Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Latin2Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Latin5Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Latin7Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = MacceStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = MacromanStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = SjisStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Swe7Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Tis620Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Ucs2Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = UjisStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Utf16Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Utf16leStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Utf32Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Utf8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Utf8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1819
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1823
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1827
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1837
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1841
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1847
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1851
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1858
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1862
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1866
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1870
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2107
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2112
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2116
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2124
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2134
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2150
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = ""
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2229
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2238
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2244
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2254
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2258
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2263
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2267
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2271
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2275
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2279
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2283
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2299
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2303
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2307
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2311
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2315
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = yyDollar[2].str
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = "key"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2382
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2392
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2396
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2402
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2406
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2412
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2416
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2422
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2428
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2432
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2436
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2440
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2444
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2453
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2459
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2465
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2471
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2475
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2479
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2484
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2488
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2494
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2500
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2506
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2510
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2514
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2518
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2522
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2541
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2545
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2554
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2563
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2569
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2583
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2705
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2709
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2777
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2795
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2799
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2808
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2812
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2816
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2824
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2830
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2876
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2880
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3045
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3212
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3221
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3229
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3238
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3245
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3257
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3266
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3281
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3295
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3299
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3305
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3311
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3317
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3321
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3327
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3331
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3343
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3349
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3355
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3373
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3379
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3385
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3391
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3395
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3399
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3405
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3409
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3414
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3418
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3423
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3427
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3536
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3546
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3551
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3555
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3560
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3565
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3570
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3575
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3580
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3586
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3592
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3597
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3603
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3609
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3613
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3619
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3624
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3628
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3633
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3638
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3643
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3648
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3654
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3660
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3667
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3674
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3681
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3693
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3699
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3705
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3711
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3717
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3723
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3729
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3741
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3763
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3767
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = "extended "
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4051
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4069
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4073
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4083
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.empty = struct{}{}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.empty = struct{}{}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4174
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4178
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4182
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4186
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4190
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4194
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = yyDollar[1].str
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = yyDollar[1].str
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = yyDollar[1].str
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = ""
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4271
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4281
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4287
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4291
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4295
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4299
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4329
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4333
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4402
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4410
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = ""
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			setAllowComments(yylex, true)
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4434
		{
			yyVAL.strs = nil
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4438
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4444
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4448
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4452
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = SQLCacheStr
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].colIdent,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].userVariableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4498
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].userVariablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*UserVariable
//line sql.y:4503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*UserVariable
//line sql.y:4507
		{
			yyLOCAL = yyDollar[2].userVariablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4526
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4531
		{
			yyVAL.strs = nil
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4539
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4547
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.str = SQLCacheStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.str = DistinctStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.str = DistinctStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.str = StraightJoinHint
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4583
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4593
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4597
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4601
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4605
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4610
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4630
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4634
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4640
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4646
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4660
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4664
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4668
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4672
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4678
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4682
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4688
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4692
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4701
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4707
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4711
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*UserVariable
//line sql.y:4717
		{
			yyLOCAL = []*UserVariable{yyDollar[1].userVariableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yySLICE := (*[]*UserVariable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].userVariableUnion())
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4727
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4731
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4739
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4745
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4762
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4766
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4770
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4774
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4780
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4782
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4797
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4802
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4823
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4827
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4831
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4837
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4843
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4847
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4851
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4855
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4861
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4865
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4875
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4904
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4910
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4920
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4924
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4928
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4932
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4937
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4941
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4945
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4949
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5155
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5231
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5235
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5239
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5245
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5249
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5256
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5260
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5264
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5268
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5272
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5278
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5282
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5286
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5290
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5294
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5313
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5319
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5323
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5332
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5337
		{
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5346
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5352
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5356
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5368
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5374
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5378
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5384
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5388
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5394
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5398
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5410
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5416
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5420
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5426
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5432
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5452
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5456
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5463
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5467
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5471
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5475
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5481
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5485
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5489
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5493
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5497
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5501
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5505
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5511
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5515
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5519
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5526
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5532
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &CountStar{Name: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &Count{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &Max{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &Min{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &Sum{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &Avg{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &BitAnd{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &BitOr{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &BitXor{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &Std{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = &StdDev{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = &StdPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &StdSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &VarPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &VarSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &Variance{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &GroupConcatExpr{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = yyDollar[1].userVariableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6051
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6057
		{
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6059
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6063
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6067
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6071
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6075
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6079
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6083
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6087
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6091
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6095
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6099
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6105
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6109
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6113
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6117
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6121
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6125
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6129
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6133
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6137
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6192
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6196
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6200
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6204
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6208
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6232
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6268
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6296
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6300
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6306
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6324
		{
			yyVAL.str = string("")
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6328
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6334
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6338
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6344
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6359
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6363
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6367
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6396
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6411
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6417
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6421
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6430
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6439
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6445
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6451
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6455
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6461
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6466
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6470
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6474
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6483
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6489
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6493
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6497
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6506
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6510
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6514
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6518
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6525
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6529
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6533
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6537
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6543
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6547
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6551
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6555
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6560
		{
			yyVAL.str = ""
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6564
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6568
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6577
		{
			yyVAL.str = ""
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6581
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6587
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6591
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = ""
		}
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = "cascaded"
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6609
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6613
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6622
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6628
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6634
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6640
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6649
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6658
		{
			yyVAL.str = ""
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6662
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6668
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6672
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6678
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6682
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6686
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6695
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = ""
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = " header"
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6713
		{
			yyVAL.str = ""
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6717
		{
			yyVAL.str = " manifest on"
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6721
		{
			yyVAL.str = " manifest off"
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6726
		{
			yyVAL.str = ""
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6730
		{
			yyVAL.str = " overwrite on"
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6734
		{
			yyVAL.str = " overwrite off"
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6745
		{
			yyVAL.str = ""
		}
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6749
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6759
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6774
		{
			yyVAL.str = ""
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6778
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6784
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6788
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6794
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6798
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6807
		{
			yyVAL.str = ""
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6811
		{
			yyVAL.str = " optionally"
		}
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6824
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6828
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6832
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6836
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6840
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6846
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6850
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6854
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6858
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6867
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6873
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6877
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6883
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6887
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6893
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6897
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6902
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6912
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6916
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6922
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6928
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6932
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6938
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6942
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6946
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6950
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6954
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = "charset"
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6972
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6976
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7009
		{
			yyVAL.empty = struct{}{}
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7011
		{
			yyVAL.empty = struct{}{}
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7013
		{
			yyVAL.empty = struct{}{}
		}
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7017
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7026
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7033
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7037
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7043
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7047
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7054
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7060
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7064
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7070
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7074
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7081
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7642
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7651
		{
			decNesting(yylex)
		}
	case 1962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7656
		{
			skipToEnd(yylex)
		}
	case 1963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7661
		{
			skipToEnd(yylex)
		}
	case 1964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7665
		{
			skipToEnd(yylex)
		}
	case 1965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7669
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
