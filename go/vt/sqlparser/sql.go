// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const UNIQUE = 57469
const KEY = 57470
const EXPRESSION_PREC_SETTER = 57471
const OR = 57472
const XOR = 57473
const AND = 57474
const NOT = 57475
const BETWEEN = 57476
const CASE = 57477
const WHEN = 57478
const THEN = 57479
const ELSE = 57480
const END = 57481
const LE = 57482
const GE = 57483
const NE = 57484
const NULL_SAFE_EQUAL = 57485
const IS = 57486
const LIKE = 57487
const REGEXP = 57488
const IN = 57489
const SHIFT_LEFT = 57490
const SHIFT_RIGHT = 57491
const DIV = 57492
const MOD = 57493
const UNARY = 57494
const COLLATE = 57495
const BINARY = 57496
const UNDERSCORE_ARMSCII8 = 57497
const UNDERSCORE_ASCII = 57498
const UNDERSCORE_BIG5 = 57499
const UNDERSCORE_BINARY = 57500
const UNDERSCORE_CP1250 = 57501
const UNDERSCORE_CP1251 = 57502
const UNDERSCORE_CP1256 = 57503
const UNDERSCORE_CP1257 = 57504
const UNDERSCORE_CP850 = 57505
const UNDERSCORE_CP852 = 57506
const UNDERSCORE_CP866 = 57507
const UNDERSCORE_CP932 = 57508
const UNDERSCORE_DEC8 = 57509
const UNDERSCORE_EUCJPMS = 57510
const UNDERSCORE_EUCKR = 57511
const UNDERSCORE_GB18030 = 57512
const UNDERSCORE_GB2312 = 57513
const UNDERSCORE_GBK = 57514
const UNDERSCORE_GEOSTD8 = 57515
const UNDERSCORE_GREEK = 57516
const UNDERSCORE_HEBREW = 57517
const UNDERSCORE_HP8 = 57518
const UNDERSCORE_KEYBCS2 = 57519
const UNDERSCORE_KOI8R = 57520
const UNDERSCORE_KOI8U = 57521
const UNDERSCORE_LATIN1 = 57522
const UNDERSCORE_LATIN2 = 57523
const UNDERSCORE_LATIN5 = 57524
const UNDERSCORE_LATIN7 = 57525
const UNDERSCORE_MACCE = 57526
const UNDERSCORE_MACROMAN = 57527
const UNDERSCORE_SJIS = 57528
const UNDERSCORE_SWE7 = 57529
const UNDERSCORE_TIS620 = 57530
const UNDERSCORE_UCS2 = 57531
const UNDERSCORE_UJIS = 57532
const UNDERSCORE_UTF16 = 57533
const UNDERSCORE_UTF16LE = 57534
const UNDERSCORE_UTF32 = 57535
const UNDERSCORE_UTF8 = 57536
const UNDERSCORE_UTF8MB4 = 57537
const UNDERSCORE_UTF8MB3 = 57538
const INTERVAL = 57539
const JSON_EXTRACT_OP = 57540
const JSON_UNQUOTE_EXTRACT_OP = 57541
const CREATE = 57542
const ALTER = 57543
const DROP = 57544
const RENAME = 57545
const ANALYZE = 57546
const ADD = 57547
const FLUSH = 57548
const CHANGE = 57549
const MODIFY = 57550
const DEALLOCATE = 57551
const REVERT = 57552
const SCHEMA = 57553
const TABLE = 57554
const INDEX = 57555
const VIEW = 57556
const TO = 57557
const IGNORE = 57558
const IF = 57559
const PRIMARY = 57560
const COLUMN = 57561
const SPATIAL = 57562
const FULLTEXT = 57563
const KEY_BLOCK_SIZE = 57564
const CHECK = 57565
const INDEXES = 57566
const ACTION = 57567
const CASCADE = 57568
const CONSTRAINT = 57569
const FOREIGN = 57570
const NO = 57571
const REFERENCES = 57572
const RESTRICT = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const COALESCE = 57582
const EXCHANGE = 57583
const REBUILD = 57584
const PARTITIONING = 57585
const REMOVE = 57586
const PREPARE = 57587
const EXECUTE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const VINDEX = 57596
const VINDEXES = 57597
const DIRECTORY = 57598
const NAME = 57599
const UPGRADE = 57600
const STATUS = 57601
const VARIABLES = 57602
const WARNINGS = 57603
const CASCADED = 57604
const DEFINER = 57605
const OPTION = 57606
const SQL = 57607
const UNDEFINED = 57608
const SEQUENCE = 57609
const MERGE = 57610
const TEMPORARY = 57611
const TEMPTABLE = 57612
const INVOKER = 57613
const SECURITY = 57614
const FIRST = 57615
const AFTER = 57616
const LAST = 57617
const VITESS_MIGRATION = 57618
const CANCEL = 57619
const RETRY = 57620
const COMPLETE = 57621
const CLEANUP = 57622
const THROTTLE = 57623
const UNTHROTTLE = 57624
const EXPIRE = 57625
const RATIO = 57626
const BEGIN = 57627
const START = 57628
const TRANSACTION = 57629
const COMMIT = 57630
const ROLLBACK = 57631
const SAVEPOINT = 57632
const RELEASE = 57633
const WORK = 57634
const BIT = 57635
const TINYINT = 57636
const SMALLINT = 57637
const MEDIUMINT = 57638
const INT = 57639
const INTEGER = 57640
const BIGINT = 57641
const INTNUM = 57642
const REAL = 57643
const DOUBLE = 57644
const FLOAT_TYPE = 57645
const DECIMAL_TYPE = 57646
const NUMERIC = 57647
const TIME = 57648
const TIMESTAMP = 57649
const DATETIME = 57650
const YEAR = 57651
const CHAR = 57652
const VARCHAR = 57653
const BOOL = 57654
const CHARACTER = 57655
const VARBINARY = 57656
const NCHAR = 57657
const TEXT = 57658
const TINYTEXT = 57659
const MEDIUMTEXT = 57660
const LONGTEXT = 57661
const BLOB = 57662
const TINYBLOB = 57663
const MEDIUMBLOB = 57664
const LONGBLOB = 57665
const JSON = 57666
const JSON_SCHEMA_VALID = 57667
const JSON_SCHEMA_VALIDATION_REPORT = 57668
const ENUM = 57669
const GEOMETRY = 57670
const POINT = 57671
const LINESTRING = 57672
const POLYGON = 57673
const GEOMETRYCOLLECTION = 57674
const MULTIPOINT = 57675
const MULTILINESTRING = 57676
const MULTIPOLYGON = 57677
const ASCII = 57678
const UNICODE = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const CODE = 57686
const COLLATION = 57687
const COLUMNS = 57688
const DATABASES = 57689
const ENGINES = 57690
const EVENT = 57691
const EXTENDED = 57692
const FIELDS = 57693
const FULL = 57694
const FUNCTION = 57695
const GTID_EXECUTED = 57696
const KEYSPACES = 57697
const OPEN = 57698
const PLUGINS = 57699
const PRIVILEGES = 57700
const PROCESSLIST = 57701
const SCHEMAS = 57702
const TABLES = 57703
const TRIGGERS = 57704
const USER = 57705
const VGTID_EXECUTED = 57706
const VITESS_KEYSPACES = 57707
const VITESS_METADATA = 57708
const VITESS_MIGRATIONS = 57709
const VITESS_REPLICATION_STATUS = 57710
const VITESS_SHARDS = 57711
const VITESS_TABLETS = 57712
const VSCHEMA = 57713
const VITESS_THROTTLED_APPS = 57714
const NAMES = 57715
const GLOBAL = 57716
const SESSION = 57717
const ISOLATION = 57718
const LEVEL = 57719
const READ = 57720
const WRITE = 57721
const ONLY = 57722
const REPEATABLE = 57723
const COMMITTED = 57724
const UNCOMMITTED = 57725
const SERIALIZABLE = 57726
const CURRENT_TIMESTAMP = 57727
const DATABASE = 57728
const CURRENT_DATE = 57729
const NOW = 57730
const CURRENT_TIME = 57731
const LOCALTIME = 57732
const LOCALTIMESTAMP = 57733
const CURRENT_USER = 57734
const UTC_DATE = 57735
const UTC_TIME = 57736
const UTC_TIMESTAMP = 57737
const DAY = 57738
const DAY_HOUR = 57739
const DAY_MICROSECOND = 57740
const DAY_MINUTE = 57741
const DAY_SECOND = 57742
const HOUR = 57743
const HOUR_MICROSECOND = 57744
const HOUR_MINUTE = 57745
const HOUR_SECOND = 57746
const MICROSECOND = 57747
const MINUTE = 57748
const MINUTE_MICROSECOND = 57749
const MINUTE_SECOND = 57750
const MONTH = 57751
const QUARTER = 57752
const SECOND = 57753
const SECOND_MICROSECOND = 57754
const YEAR_MONTH = 57755
const WEEK = 57756
const REPLACE = 57757
const CONVERT = 57758
const CAST = 57759
const SUBSTR = 57760
const SUBSTRING = 57761
const GROUP_CONCAT = 57762
const SEPARATOR = 57763
const TIMESTAMPADD = 57764
const TIMESTAMPDIFF = 57765
const WEIGHT_STRING = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const AUTOEXTEND_SIZE = 57820
const BUCKETS = 57821
const CLONE = 57822
const COLUMN_FORMAT = 57823
const COMPONENT = 57824
const DEFINITION = 57825
const ENFORCED = 57826
const ENGINE_ATTRIBUTE = 57827
const EXCLUDE = 57828
const FOLLOWING = 57829
const GEOMCOLLECTION = 57830
const GET_MASTER_PUBLIC_KEY = 57831
const HISTOGRAM = 57832
const HISTORY = 57833
const INACTIVE = 57834
const INVISIBLE = 57835
const LOCKED = 57836
const MASTER_COMPRESSION_ALGORITHMS = 57837
const MASTER_PUBLIC_KEY_PATH = 57838
const MASTER_TLS_CIPHERSUITES = 57839
const MASTER_ZSTD_COMPRESSION_LEVEL = 57840
const NESTED = 57841
const NETWORK_NAMESPACE = 57842
const NOWAIT = 57843
const NULLS = 57844
const OJ = 57845
const OLD = 57846
const OPTIONAL = 57847
const ORDINALITY = 57848
const ORGANIZATION = 57849
const OTHERS = 57850
const PARTIAL = 57851
const PATH = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRECEDING = 57855
const PRIVILEGE_CHECKS_USER = 57856
const PROCESS = 57857
const RANDOM = 57858
const REFERENCE = 57859
const REQUIRE_ROW_FORMAT = 57860
const RESOURCE = 57861
const RESPECT = 57862
const RESTART = 57863
const RETAIN = 57864
const REUSE = 57865
const ROLE = 57866
const SECONDARY = 57867
const SECONDARY_ENGINE = 57868
const SECONDARY_ENGINE_ATTRIBUTE = 57869
const SECONDARY_LOAD = 57870
const SECONDARY_UNLOAD = 57871
const SIMPLE = 57872
const SKIP = 57873
const SRID = 57874
const THREAD_PRIORITY = 57875
const TIES = 57876
const UNBOUNDED = 57877
const VCPU = 57878
const VISIBLE = 57879
const RETURNING = 57880
const FORMAT = 57881
const TREE = 57882
const VITESS = 57883
const TRADITIONAL = 57884
const LOCAL = 57885
const LOW_PRIORITY = 57886
const NO_WRITE_TO_BINLOG = 57887
const LOGS = 57888
const ERROR = 57889
const GENERAL = 57890
const HOSTS = 57891
const OPTIMIZER_COSTS = 57892
const USER_RESOURCES = 57893
const SLOW = 57894
const CHANNEL = 57895
const RELAY = 57896
const EXPORT = 57897
const AVG_ROW_LENGTH = 57898
const CONNECTION = 57899
const CHECKSUM = 57900
const DELAY_KEY_WRITE = 57901
const ENCRYPTION = 57902
const ENGINE = 57903
const INSERT_METHOD = 57904
const MAX_ROWS = 57905
const MIN_ROWS = 57906
const PACK_KEYS = 57907
const PASSWORD = 57908
const FIXED = 57909
const DYNAMIC = 57910
const COMPRESSED = 57911
const REDUNDANT = 57912
const COMPACT = 57913
const ROW_FORMAT = 57914
const STATS_AUTO_RECALC = 57915
const STATS_PERSISTENT = 57916
const STATS_SAMPLE_PAGES = 57917
const STORAGE = 57918
const MEMORY = 57919
const DISK = 57920
const PARTITIONS = 57921
const LINEAR = 57922
const RANGE = 57923
const LIST = 57924
const SUBPARTITION = 57925
const SUBPARTITIONS = 57926
const HASH = 57927

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	603, 145,
	-2, 153,
	-1, 48,
	129, 153,
	169, 153,
	330, 153,
	-2, 492,
	-1, 55,
	35, 733,
	230, 733,
	241, 733,
	276, 747,
	277, 747,
	-2, 735,
	-1, 60,
	232, 758,
	-2, 756,
	-1, 114,
	229, 1274,
	-2, 119,
	-1, 116,
	1, 146,
	603, 146,
	-2, 153,
	-1, 127,
	130, 378,
	235, 378,
	-2, 481,
	-1, 146,
	129, 153,
	169, 153,
	330, 153,
	-2, 501,
	-1, 687,
	214, 1295,
	-2, 1291,
	-1, 688,
	214, 1296,
	-2, 1292,
	-1, 763,
	59, 826,
	-2, 841,
	-1, 800,
	145, 1697,
	-2, 112,
	-1, 801,
	145, 1540,
	-2, 113,
	-1, 807,
	145, 1623,
	-2, 1268,
	-1, 952,
	145, 1468,
	-2, 1265,
	-1, 993,
	240, 41,
	245, 41,
	-2, 389,
	-1, 1077,
	1, 548,
	603, 548,
	-2, 153,
	-1, 1310,
	59, 827,
	-2, 846,
	-1, 1311,
	59, 828,
	-2, 847,
	-1, 1364,
	129, 153,
	169, 153,
	330, 153,
	-2, 428,
	-1, 1443,
	130, 378,
	235, 378,
	-2, 481,
	-1, 1452,
	240, 42,
	245, 42,
	-2, 390,
	-1, 1752,
	214, 1300,
	-2, 1294,
	-1, 1834,
	129, 153,
	169, 153,
	330, 153,
	-2, 429,
	-1, 1841,
	25, 174,
	-2, 176,
	-1, 2085,
	87, 39,
	-2, 882,
	-1, 2136,
	77, 94,
	87, 94,
	-2, 902,
	-1, 2203,
	578, 660,
	-2, 634,
	-1, 2340,
	49, 1236,
	-2, 1230,
	-1, 2557,
	87, 39,
	-2, 883,
	-1, 2595,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 875,
	-1, 2870,
	578, 660,
	-2, 648,
	-1, 2928,
	22, 1625,
	32, 1625,
	170, 1625,
	252, 1625,
	310, 1625,
	311, 1625,
	312, 1625,
	313, 1625,
	314, 1625,
	315, 1625,
	316, 1625,
	318, 1625,
	319, 1625,
	320, 1625,
	321, 1625,
	322, 1625,
	323, 1625,
	324, 1625,
	325, 1625,
	326, 1625,
	327, 1625,
	328, 1625,
	329, 1625,
	331, 1625,
	333, 1625,
	334, 1625,
	335, 1625,
	336, 1625,
	337, 1625,
	338, 1625,
	339, 1625,
	340, 1625,
	341, 1625,
	344, 1625,
	345, 1625,
	346, 1625,
	347, 1625,
	348, 1625,
	349, 1625,
	350, 1625,
	351, 1625,
	352, 1625,
	461, 1625,
	-2, 592,
}

const yyPrivate = 57344

const yyLast = 42810

var yyAct = [...]int{
	687, 2696, 2697, 2982, 2695, 2851, 2958, 2990, 1831, 2959,
	2299, 1367, 2486, 2910, 1766, 2926, 696, 2392, 2399, 1141,
	1786, 2671, 2039, 3, 2804, 778, 680, 37, 2449, 2454,
	689, 2451, 2658, 2450, 2448, 2453, 2452, 2440, 2354, 2710,
	2351, 2073, 1768, 612, 2827, 2407, 1901, 2469, 96, 1289,
	2468, 186, 681, 756, 186, 608, 572, 186, 2355, 2566,
	1325, 2715, 588, 2108, 186, 2352, 690, 678, 2560, 2263,
	2297, 679, 186, 634, 2471, 2131, 2586, 1805, 2349, 2298,
	605, 2341, 2552, 1790, 2100, 2168, 1864, 186, 1089, 2246,
	2491, 604, 2200, 1889, 2169, 1932, 2170, 1820, 805, 1869,
	2120, 36, 155, 779, 760, 1809, 764, 38, 2092, 588,
	1312, 1810, 588, 186, 588, 955, 2075, 600, 1746, 1722,
	2238, 606, 1468, 1659, 781, 758, 141, 1617, 802, 1669,
	1118, 1888, 1001, 1797, 1910, 1948, 1871, 983, 2162, 988,
	1356, 95, 1421, 1721, 1812, 1334, 2138, 617, 1568, 1292,
	1681, 1160, 1636, 962, 1457, 1564, 959, 991, 1548, 1886,
	994, 91, 1860, 963, 989, 990, 1339, 770, 1139, 1450,
	1134, 159, 1791, 1355, 119, 117, 1353, 118, 1416, 124,
	1442, 765, 1573, 1718, 792, 1073, 125, 766, 768, 76,
	1231, 85, 97, 595, 89, 1227, 2983, 2659, 1759, 98,
	2437, 2860, 2193, 102, 1903, 1904, 1905, 1903, 2222, 2221,
	1946, 2191, 767, 77, 8, 2459, 2651, 7, 1533, 120,
	2254, 6, 2255, 2700, 2883, 2884, 2614, 1161, 544, 126,
	1763, 1764, 786, 1624, 791, 90, 1623, 1622, 1621, 1620,
	575, 2459, 1619, 2700, 104, 105, 1606, 108, 2947, 1030,
	114, 956, 772, 183, 2456, 598, 539, 599, 1611, 596,
	2071, 1005, 2337, 2540, 2962, 1936, 967, 759, 1749, 757,
	188, 189, 190, 2457, 2213, 2102, 752, 753, 754, 755,
	981, 806, 763, 87, 1161, 799, 1004, 1040, 120, 780,
	773, 979, 978, 980, 977, 2463, 2999, 972, 2957, 2457,
	1319, 2973, 2216, 1629, 2800, 1031, 1034, 1035, 2699, 1935,
	794, 795, 1934, 1193, 2799, 2884, 2664, 1029, 1028, 2665,
	2998, 2463, 2920, 2986, 1990, 2879, 78, 2971, 2699, 2672,
	2911, 78, 1046, 1171, 2809, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1202, 1201, 1203, 1204, 1929, 78, 1294, 2936,
	2111, 2919, 2262, 2878, 2524, 2931, 120, 1431, 2389, 2390,
	1357, 78, 1358, 2934, 80, 2395, 2072, 2230, 188, 189,
	190, 2229, 2940, 2941, 2388, 2112, 2253, 2409, 2410, 976,
	2728, 1082, 1083, 1987, 2935, 2147, 1825, 1137, 2146, 1988,
	1171, 2148, 1826, 1827, 1108, 750, 1765, 1113, 1114, 749,
	2852, 2460, 541, 1109, 87, 1125, 1096, 1127, 575, 87,
	2396, 1097, 591, 1085, 2194, 1102, 2159, 1076, 1096, 2488,
	751, 2963, 1711, 1097, 2563, 87, 1880, 2460, 2289, 575,
	575, 1095, 1167, 1094, 2515, 1159, 2398, 974, 2513, 87,
	586, 576, 2964, 1844, 1843, 1124, 1126, 1610, 590, 561,
	2393, 1874, 1960, 1957, 1959, 1958, 1961, 1962, 584, 1296,
	2492, 961, 2239, 2201, 2409, 2410, 1949, 1911, 1549, 1047,
	2481, 2394, 2225, 1131, 1612, 1613, 1614, 1954, 2482, 2985,
	1117, 1072, 2408, 1966, 1523, 1967, 1078, 1968, 1110, 1167,
	1111, 1112, 1115, 1136, 2411, 2241, 560, 2653, 2652, 1969,
	1103, 1053, 1116, 2400, 2489, 1052, 2490, 1951, 558, 1703,
	1692, 1693, 1694, 1695, 1705, 1696, 1697, 1698, 1710, 1706,
	1699, 1700, 1707, 1708, 1709, 1701, 1702, 1704, 1524, 2948,
	1525, 2784, 1955, 2649, 1953, 1914, 1806, 985, 1023, 186,
	1025, 186, 1122, 984, 186, 1014, 1123, 985, 555, 87,
	1022, 1021, 1012, 1020, 975, 1019, 1128, 570, 1018, 1017,
	1016, 1011, 1129, 1435, 976, 1071, 1299, 575, 1024, 2408,
	1456, 1205, 566, 588, 588, 588, 1952, 2411, 960, 1121,
	960, 2411, 2969, 997, 958, 2290, 3000, 1033, 1873, 1565,
	960, 588, 588, 996, 996, 1887, 793, 1032, 2242, 1940,
	2076, 2078, 1561, 1147, 1036, 1205, 2430, 2224, 2211, 576,
	1429, 1428, 1427, 1562, 1554, 1425, 1153, 543, 538, 37,
	1166, 1163, 1164, 1165, 1170, 1172, 1169, 2994, 1168, 1075,
	576, 576, 1003, 2848, 1092, 1162, 1098, 1099, 1100, 1101,
	1106, 545, 2810, 547, 562, 2648, 578, 2601, 577, 551,
	1204, 549, 553, 563, 554, 2258, 548, 2582, 559, 2143,
	1138, 550, 564, 565, 568, 582, 581, 569, 567, 1988,
	557, 579, 2859, 2192, 1931, 1455, 1933, 1166, 1163, 1164,
	1165, 1170, 1172, 1169, 1027, 1168, 1015, 2227, 982, 2002,
	2397, 2195, 1162, 1013, 2245, 2107, 1132, 1043, 1044, 1045,
	2063, 1048, 1049, 1050, 1051, 1042, 2564, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1074, 1287, 971, 2865, 1758, 973,
	2237, 1002, 1343, 2236, 1268, 1208, 1209, 1210, 1211, 975,
	1282, 2877, 1143, 1144, 1130, 1216, 1087, 1219, 1206, 1207,
	186, 2461, 2462, 2215, 588, 588, 2698, 2939, 2264, 2077,
	116, 1832, 1205, 2387, 2465, 1989, 775, 1212, 576, 1135,
	186, 1535, 1534, 1536, 1537, 1538, 2698, 2461, 2462, 2612,
	2613, 86, 1300, 1091, 1302, 81, 86, 1119, 1306, 588,
	2465, 1792, 1793, 186, 760, 1553, 1574, 2214, 588, 111,
	1288, 2938, 86, 2873, 588, 77, 1081, 1156, 758, 1305,
	1154, 1003, 1877, 1303, 1155, 1555, 86, 802, 1003, 1556,
	1557, 1026, 1093, 2644, 976, 2248, 968, 2576, 1233, 1229,
	2247, 1230, 2401, 970, 969, 1105, 2405, 1084, 2992, 580,
	2266, 2993, 1950, 2991, 2404, 1558, 1107, 1359, 1157, 2282,
	2248, 1878, 1682, 1682, 2016, 2247, 1176, 573, 2184, 1876,
	2724, 1930, 2619, 1288, 1304, 1641, 112, 1923, 95, 1003,
	1175, 1176, 574, 1274, 1275, 1276, 1277, 1278, 2406, 1642,
	1643, 1640, 974, 2402, 2618, 1918, 1465, 1080, 2403, 1086,
	1464, 1003, 1088, 1879, 1293, 1197, 1198, 1199, 1200, 1202,
	1201, 1203, 1204, 1875, 1927, 1454, 2276, 2275, 2274, 2268,
	1002, 2272, 1041, 2267, 1923, 2265, 1928, 1002, 1926, 1014,
	2270, 1090, 1012, 996, 999, 1000, 98, 960, 1120, 2269,
	2889, 993, 997, 1003, 2841, 2965, 1550, 1575, 1551, 1344,
	2602, 1552, 1290, 2996, 1543, 1077, 2271, 2273, 2792, 1301,
	3001, 1925, 757, 1177, 2791, 186, 1319, 759, 1324, 1417,
	1631, 1633, 1634, 1686, 1321, 1354, 1307, 1687, 1002, 1426,
	806, 1177, 2782, 2890, 996, 999, 1000, 2842, 960, 1349,
	1350, 1632, 993, 997, 1199, 1200, 1202, 1201, 1203, 1204,
	1002, 2689, 588, 87, 1452, 1006, 996, 1319, 2688, 975,
	1008, 2626, 1461, 992, 1009, 1007, 1463, 1639, 1542, 1466,
	1467, 588, 588, 2678, 588, 2679, 588, 588, 1177, 588,
	588, 588, 588, 588, 588, 1010, 2625, 1177, 1994, 1995,
	1996, 2615, 1002, 1498, 1499, 3002, 588, 1006, 996, 2025,
	186, 1504, 1008, 2438, 1332, 2426, 1009, 1007, 1462, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1179, 186, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 2166,
	588, 1541, 186, 1530, 797, 1497, 2165, 1883, 1500, 1177,
	1544, 1528, 1174, 1563, 1175, 1176, 588, 1527, 186, 1195,
	1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 1518,
	1174, 1177, 1175, 1176, 186, 1526, 1516, 1448, 1510, 2284,
	1331, 186, 1507, 1177, 1441, 701, 702, 703, 2966, 2521,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 588,
	588, 588, 1458, 1458, 1470, 1540, 1471, 1529, 1473, 1475,
	1506, 1348, 1479, 1481, 1483, 1485, 1487, 1174, 1505, 1175,
	1176, 1501, 1424, 1477, 1328, 1459, 1174, 2868, 1175, 1176,
	186, 2867, 2820, 1319, 2845, 2844, 1439, 1438, 2485, 2843,
	2787, 1460, 1451, 1437, 2772, 2771, 1430, 188, 189, 190,
	2723, 2609, 2721, 1177, 2685, 1319, 1570, 2623, 2608, 1177,
	2944, 1578, 188, 189, 190, 2493, 2519, 1319, 1582, 2429,
	1584, 1585, 1586, 1587, 1329, 2428, 588, 1591, 1174, 1502,
	1175, 1176, 1798, 1799, 2175, 2163, 1284, 1663, 1667, 1672,
	588, 1605, 1944, 1666, 1666, 1576, 1577, 1177, 1943, 1789,
	1174, 1771, 1175, 1176, 1193, 588, 588, 1664, 1664, 1581,
	1566, 1637, 1174, 1607, 1175, 1176, 1588, 1589, 1590, 120,
	1177, 1571, 979, 978, 1177, 977, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1202, 1201, 1203, 1204, 2967, 1539, 1531,
	1683, 1644, 1635, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1521, 1580, 1750, 1517,
	188, 189, 190, 1719, 2150, 186, 1513, 1601, 1602, 1603,
	588, 1512, 1604, 1366, 188, 189, 190, 1511, 1899, 1177,
	2048, 1319, 1174, 1645, 1175, 1176, 1146, 1330, 1174, 2012,
	1175, 1176, 1133, 2007, 186, 2098, 2984, 588, 94, 1776,
	2817, 1777, 2816, 2006, 2953, 1319, 1638, 186, 2856, 2098,
	2917, 588, 92, 92, 2776, 1719, 186, 2775, 186, 94,
	186, 186, 588, 93, 93, 588, 1174, 2670, 1175, 1176,
	2098, 2897, 2350, 1750, 1177, 2202, 588, 1752, 188, 189,
	190, 802, 1897, 2575, 802, 1193, 1841, 2180, 1189, 1174,
	1190, 1175, 1176, 1174, 100, 1175, 1176, 1319, 1503, 1754,
	1755, 95, 2011, 2575, 1191, 1192, 1188, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 1319, 1319,
	95, 188, 189, 190, 1177, 1895, 2109, 1751, 2098, 2893,
	1547, 588, 2109, 1782, 1840, 1808, 2577, 1177, 1890, 1891,
	1892, 2885, 1319, 1894, 1896, 1898, 2098, 2861, 1174, 1173,
	1175, 1176, 1752, 2662, 2858, 2536, 1319, 2040, 588, 2795,
	1319, 2382, 1579, 2003, 588, 1461, 2098, 2783, 1461, 1583,
	1461, 1988, 1850, 1851, 1852, 1853, 1922, 1835, 1177, 2872,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 2116, 1818, 1770,
	2098, 1836, 1668, 772, 2662, 1319, 2098, 2660, 2117, 1674,
	1675, 1784, 1803, 1174, 2575, 1175, 1176, 1912, 1319, 1923,
	1319, 588, 1866, 588, 2117, 1839, 1924, 1801, 1618, 588,
	588, 2780, 2536, 1872, 2417, 1845, 2325, 1846, 1847, 1848,
	1849, 1432, 1433, 1434, 806, 1824, 1823, 806, 1822, 2003,
	1838, 1837, 2117, 1856, 1857, 1858, 1859, 2033, 1753, 2022,
	1177, 1756, 1757, 1174, 2021, 1175, 1176, 186, 2580, 1319,
	1923, 1177, 2645, 1906, 186, 1882, 1174, 1796, 1175, 1176,
	1323, 186, 186, 1909, 1923, 186, 1177, 186, 2441, 1173,
	1319, 1177, 1761, 1867, 186, 1862, 1863, 1615, 1781, 1005,
	1177, 186, 1560, 1885, 1881, 1177, 1351, 1508, 1509, 1458,
	1893, 987, 2005, 1514, 1515, 2033, 1319, 1174, 1177, 1175,
	1176, 986, 1177, 2900, 1004, 87, 1177, 1916, 1867, 186,
	588, 1919, 1915, 2419, 2418, 1193, 1937, 2257, 1177, 2415,
	2416, 2806, 1177, 2596, 1917, 1326, 1939, 1920, 1193, 1921,
	2001, 2773, 1941, 1942, 2538, 2735, 1938, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 2487, 2534,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203,
	1204, 2415, 2414, 2527, 762, 1979, 1980, 2172, 2526, 1174,
	1982, 1175, 1176, 1177, 1947, 2117, 1319, 1177, 2643, 1983,
	1174, 2057, 1175, 1176, 2807, 1800, 2167, 2640, 1177, 2056,
	2003, 1319, 2139, 1637, 1804, 1174, 1807, 1175, 1176, 1618,
	1174, 2055, 1175, 1176, 1076, 2054, 2621, 1177, 2530, 1174,
	2529, 1175, 1176, 1177, 1174, 1422, 1175, 1176, 1972, 1988,
	2223, 1865, 1998, 2483, 2000, 1420, 2205, 1174, 2443, 1175,
	1176, 1174, 2439, 1175, 1176, 1174, 2206, 1175, 1176, 1177,
	2198, 2199, 87, 1177, 2098, 2097, 2627, 1174, 2139, 1175,
	1176, 1174, 1861, 1175, 1176, 2140, 2053, 1177, 1420, 1419,
	2052, 2094, 186, 1855, 1999, 2142, 101, 1986, 1177, 101,
	186, 2051, 1177, 1365, 1364, 588, 94, 100, 2069, 99,
	100, 588, 99, 2082, 1854, 1546, 1453, 1449, 1638, 1666,
	2050, 94, 588, 1997, 1177, 2086, 2049, 2628, 2629, 2630,
	1418, 2979, 1174, 1664, 1175, 1176, 1174, 1493, 1175, 1176,
	113, 2140, 2080, 1880, 2631, 186, 2977, 1174, 186, 1175,
	1176, 1988, 2043, 1774, 2587, 2588, 2042, 2960, 2171, 2113,
	2882, 2015, 37, 2149, 2003, 1489, 1174, 2825, 1175, 1176,
	2041, 2133, 1174, 2590, 1175, 1176, 2435, 1319, 2434, 1177,
	1319, 2038, 2593, 1177, 2433, 2037, 2350, 1752, 1494, 1495,
	1496, 2632, 2633, 2634, 2185, 1973, 1177, 1608, 1174, 2592,
	1175, 1176, 1174, 2099, 1175, 1176, 2172, 2036, 2369, 2368,
	2372, 588, 1490, 1491, 1492, 2373, 1174, 186, 1175, 1176,
	2705, 2370, 2704, 2095, 186, 1618, 2371, 1174, 2950, 1175,
	1176, 1174, 1956, 1175, 1176, 2918, 1293, 1751, 588, 1970,
	1971, 2070, 1788, 1975, 1327, 588, 2132, 1780, 2581, 1461,
	1461, 2330, 1978, 1174, 588, 1175, 1176, 2329, 2197, 1981,
	2160, 2161, 2034, 2096, 2840, 2714, 2030, 2153, 2716, 688,
	2703, 2220, 2106, 2091, 2571, 2137, 2013, 2339, 2219, 2029,
	2342, 2344, 186, 186, 186, 186, 186, 1984, 2374, 2345,
	2126, 2127, 2568, 1559, 1872, 2144, 2141, 776, 748, 2413,
	2567, 2151, 2157, 186, 186, 777, 2154, 2176, 1174, 1038,
	1175, 1176, 1174, 1037, 1175, 1176, 1678, 2501, 2171, 186,
	187, 92, 2251, 187, 2164, 1174, 187, 1175, 1176, 92,
	1679, 589, 93, 187, 1145, 2212, 94, 2173, 588, 121,
	93, 187, 2573, 1798, 1799, 2988, 2060, 2061, 2181, 94,
	2431, 2182, 2186, 2187, 2188, 1976, 187, 2857, 2802, 2412,
	2130, 2218, 1785, 1441, 2122, 2125, 2126, 2127, 2123, 2328,
	2124, 2128, 784, 785, 2587, 2588, 1965, 2327, 589, 1964,
	1963, 589, 187, 589, 2553, 1666, 1992, 1666, 99, 2832,
	1666, 2831, 758, 2722, 588, 1666, 2720, 2281, 2719, 1664,
	2712, 1664, 2217, 2641, 1664, 2572, 2277, 2570, 2444, 1664,
	588, 1907, 2300, 2319, 2300, 2240, 1436, 2300, 2207, 2208,
	101, 101, 2300, 2259, 783, 186, 100, 2711, 2561, 588,
	2243, 100, 100, 99, 2312, 2313, 2314, 2315, 588, 2249,
	2109, 2302, 2250, 2981, 2980, 588, 588, 2094, 186, 186,
	186, 186, 186, 2305, 2260, 101, 2023, 2319, 2306, 1772,
	186, 2278, 2980, 2261, 2347, 186, 100, 186, 99, 186,
	1345, 764, 186, 186, 186, 1336, 2981, 94, 1317, 1313,
	2846, 2381, 2607, 2293, 774, 2353, 2332, 2362, 106, 107,
	2353, 1306, 103, 1314, 88, 2356, 2136, 1, 2611, 2933,
	2333, 556, 2122, 2125, 2126, 2127, 2123, 2427, 2124, 2128,
	1762, 2318, 1291, 571, 2961, 2929, 186, 2930, 1778, 1779,
	1316, 2320, 1315, 2307, 2308, 2309, 2310, 2311, 1532, 588,
	2331, 1522, 2324, 2673, 1720, 2803, 2334, 588, 2447, 2321,
	2322, 2323, 186, 1913, 2383, 2639, 765, 2384, 1870, 995,
	146, 1833, 766, 2363, 1834, 186, 2366, 2467, 2913, 2375,
	2364, 2365, 110, 2367, 953, 2183, 2379, 95, 2361, 109,
	2385, 998, 1570, 186, 1104, 2446, 186, 1317, 1313, 1908,
	2663, 2158, 1842, 1371, 1369, 2391, 2502, 1370, 1368, 1373,
	1372, 2024, 1314, 2421, 2539, 2423, 2422, 1609, 585, 2129,
	184, 1360, 1337, 1039, 546, 2420, 1945, 552, 1217, 2326,
	2145, 2475, 803, 796, 1773, 2474, 2084, 1310, 1311, 1316,
	2358, 1315, 2565, 2338, 2340, 2101, 2343, 2336, 2839, 1872,
	2231, 2232, 2233, 2234, 2235, 2466, 2713, 2898, 2155, 1333,
	2478, 2014, 1224, 1680, 2445, 1813, 1630, 610, 2533, 609,
	607, 1618, 2244, 2087, 2110, 1180, 588, 186, 691, 2074,
	2497, 2494, 1346, 2496, 2121, 2119, 2118, 2252, 2499, 2500,
	1974, 1819, 2589, 2585, 2925, 1815, 1811, 2093, 618, 2504,
	611, 603, 2604, 2473, 2226, 2511, 2484, 2228, 2156, 2480,
	1158, 1309, 597, 966, 1677, 2808, 2863, 1991, 2523, 1308,
	1690, 1691, 2870, 2455, 2657, 2436, 2203, 1900, 63, 41,
	2505, 592, 2946, 186, 1149, 790, 32, 31, 30, 29,
	28, 23, 22, 21, 20, 2559, 19, 25, 18, 17,
	16, 2610, 2458, 2956, 2987, 2554, 2555, 2508, 2509, 115,
	2510, 50, 186, 2512, 2174, 2514, 47, 2516, 45, 2177,
	2178, 2562, 2569, 123, 122, 48, 2584, 44, 1079, 42,
	2574, 186, 27, 26, 186, 186, 186, 2594, 15, 14,
	13, 12, 11, 2591, 588, 588, 10, 2599, 2600, 9,
	5, 4, 35, 34, 33, 1152, 24, 2, 2598, 2597,
	2190, 1902, 0, 2475, 2646, 2647, 0, 2474, 0, 2605,
	2606, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	187, 0, 0, 187, 0, 0, 0, 0, 588, 588,
	588, 588, 0, 0, 0, 0, 0, 0, 2622, 0,
	2624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 589, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 0, 0, 0,
	589, 589, 0, 0, 2432, 0, 0, 0, 0, 0,
	2669, 0, 0, 2667, 2668, 0, 0, 0, 0, 2684,
	0, 1666, 0, 1666, 0, 0, 0, 186, 0, 0,
	2470, 0, 0, 0, 0, 1664, 0, 1664, 0, 0,
	0, 2708, 0, 2479, 0, 0, 0, 0, 2300, 0,
	2300, 588, 0, 588, 0, 587, 0, 2680, 0, 0,
	0, 2495, 0, 2681, 2498, 0, 0, 0, 0, 0,
	0, 0, 0, 2729, 0, 2691, 37, 2737, 0, 0,
	2701, 0, 0, 1666, 0, 0, 2692, 0, 0, 2353,
	2731, 0, 0, 0, 0, 2718, 2717, 1664, 2709, 182,
	2356, 0, 804, 758, 2356, 957, 2727, 964, 2733, 0,
	0, 2725, 0, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 186, 0, 0,
	588, 2738, 2739, 2741, 2781, 0, 164, 0, 0, 0,
	0, 0, 0, 588, 0, 2558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2779, 187,
	0, 2778, 2805, 589, 589, 0, 2777, 2822, 2823, 2793,
	0, 0, 2785, 588, 0, 0, 2797, 588, 588, 187,
	2798, 2826, 2424, 2425, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 589, 0,
	0, 1664, 187, 0, 0, 0, 588, 589, 0, 0,
	0, 0, 0, 589, 0, 0, 181, 0, 0, 2836,
	2835, 2833, 2834, 0, 0, 0, 2850, 0, 0, 2849,
	2620, 0, 2838, 0, 0, 0, 0, 2847, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 0, 2635,
	0, 2356, 2636, 2637, 2638, 0, 0, 758, 0, 186,
	0, 0, 2853, 0, 2855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2871, 2874, 2869, 37,
	0, 2866, 0, 0, 0, 0, 0, 2862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 588, 0, 0, 0, 0, 2896,
	0, 2899, 0, 0, 37, 0, 588, 2891, 0, 0,
	2353, 0, 2805, 2914, 187, 186, 588, 2912, 2901, 2904,
	2909, 0, 2906, 2921, 2905, 2903, 2908, 2907, 0, 2924,
	0, 0, 0, 2942, 0, 0, 2932, 2937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2949, 589, 0, 0, 0, 0, 0, 0, 0, 2955,
	0, 0, 0, 0, 0, 588, 2616, 2617, 0, 0,
	589, 589, 0, 589, 588, 589, 589, 0, 589, 589,
	589, 589, 589, 589, 2974, 2968, 2978, 2975, 2976, 2972,
	0, 2970, 0, 1666, 0, 589, 0, 0, 156, 187,
	0, 2989, 0, 0, 0, 0, 0, 1664, 2997, 2995,
	0, 0, 0, 0, 0, 0, 187, 0, 2650, 0,
	0, 0, 2654, 2655, 2656, 3005, 3006, 2823, 3004, 589,
	3003, 187, 0, 0, 0, 0, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 187, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 589, 589,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 804, 804, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1148, 1150, 0, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2875, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 589, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2788, 2789, 2790, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 164, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 1297, 1298, 0,
	589, 0, 0, 0, 0, 187, 0, 187, 0, 187,
	187, 589, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 2152, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 161, 0, 162, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 589, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 589, 0, 161, 0, 162, 0, 589, 589,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 130, 131, 152, 151, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 0, 187, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 957, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 1469, 1469, 0, 1469, 0, 1469,
	1469, 0, 1478, 1469, 1469, 1469, 1469, 1469, 187, 589,
	0, 0, 0, 0, 0, 1285, 0, 0, 1285, 957,
	147, 128, 154, 135, 127, 0, 148, 149, 0, 1318,
	0, 0, 165, 672, 0, 0, 156, 0, 0, 0,
	0, 171, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 139, 137, 132, 133,
	134, 138, 0, 0, 0, 0, 0, 0, 129, 1567,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 542, 0, 0,
	583, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 804, 804, 804, 0, 0, 0, 0, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 789, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 589, 157, 0, 0, 0, 0,
	589, 0, 169, 0, 0, 0, 0, 0, 0, 1660,
	0, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 187, 0, 0, 187, 1688, 1689,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 144, 0, 0, 145, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 1775, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 589, 0, 0,
	1787, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 1341, 0, 0, 804, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 957,
	0, 187, 187, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 187, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 187, 2954,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 964, 0, 0, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 957, 0, 0, 0, 0, 182, 964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 143, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 957, 0, 1660, 0, 0, 0,
	0, 0, 1660, 1660, 187, 0, 0, 0, 589, 0,
	0, 0, 0, 0, 153, 0, 0, 589, 0, 0,
	142, 0, 0, 0, 589, 589, 0, 187, 187, 187,
	187, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 161, 0, 162, 187, 0, 187, 1376, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 0, 1444,
	1445, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 542, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 589, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 187, 0, 147, 1446, 154,
	0, 1443, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 1405, 1406,
	1407, 1408, 1409, 1410, 0, 1411, 1412, 1413, 1414, 1415,
	1390, 1391, 1392, 1393, 1374, 1375, 1403, 0, 1377, 0,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 0,
	0, 1387, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	0, 0, 0, 0, 0, 589, 187, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 0, 0, 0,
	0, 0, 187, 542, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1320, 1322, 0, 0, 0,
	0, 0, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 1404, 0,
	187, 0, 0, 187, 187, 187, 0, 182, 0, 0,
	0, 0, 0, 589, 589, 0, 0, 0, 1440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 150, 143, 2179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 589, 589, 589,
	589, 1787, 144, 0, 0, 145, 0, 0, 2204, 0,
	0, 0, 0, 0, 0, 153, 0, 2209, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 1445, 152, 151, 181, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	589, 0, 589, 0, 0, 0, 0, 0, 542, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 1285, 0, 1285, 0, 0, 1285, 0, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 589, 0, 0, 0, 804, 147, 1446,
	154, 0, 1443, 0, 148, 149, 187, 0, 0, 589,
	165, 0, 0, 1469, 0, 1286, 0, 0, 1286, 171,
	0, 0, 589, 542, 0, 0, 0, 0, 0, 0,
	0, 0, 2335, 0, 0, 0, 0, 0, 0, 0,
	1519, 804, 0, 0, 0, 1285, 0, 0, 2360, 1469,
	1285, 0, 589, 0, 0, 542, 589, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 542, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 1593, 542, 542, 542, 542, 542,
	542, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 957, 0, 0, 1285, 156, 0, 187, 0,
	1787, 0, 0, 542, 0, 0, 0, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 589, 0,
	0, 0, 0, 0, 789, 789, 0, 0, 1684, 0,
	1286, 0, 1685, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 144, 187, 589, 145, 0, 0, 0,
	0, 789, 1569, 789, 789, 789, 789, 789, 0, 2335,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 1760,
	0, 0, 0, 0, 0, 157, 0, 0, 1519, 0,
	0, 0, 169, 0, 0, 1376, 78, 39, 40, 80,
	0, 0, 0, 789, 589, 0, 0, 0, 0, 0,
	0, 1783, 0, 589, 0, 0, 84, 771, 0, 0,
	43, 69, 70, 0, 67, 71, 0, 0, 0, 0,
	542, 0, 0, 68, 177, 0, 0, 1569, 0, 542,
	0, 542, 0, 542, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 56, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 87, 0, 0, 1389, 0, 176,
	178, 179, 180, 0, 0, 0, 0, 1787, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2674, 2675, 2676, 2677, 1402, 1405, 1406, 1407, 1408,
	1409, 1410, 0, 1411, 1412, 1413, 1414, 1415, 1390, 1391,
	1392, 1393, 1374, 1375, 1403, 0, 1377, 0, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 0, 0, 1387,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1285, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 0, 75, 72, 0, 0, 0, 1285,
	0, 0, 0, 0, 2730, 0, 2732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 83, 82,
	542, 0, 64, 65, 53, 0, 0, 542, 0, 0,
	73, 74, 0, 0, 542, 542, 0, 0, 542, 0,
	1977, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1404, 1787, 0, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 542, 2796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2829, 0, 0, 0,
	2829, 2829, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 2008, 0, 2009, 2010, 0, 0, 0, 0,
	0, 789, 0, 2018, 0, 0, 2019, 2020, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 2027, 2028, 0, 0, 2031, 0,
	2032, 0, 0, 0, 2035, 0, 0, 1787, 0, 0,
	81, 0, 2044, 2045, 2046, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 2059, 0, 0, 0,
	0, 789, 789, 2064, 2065, 2066, 2067, 2068, 0, 1783,
	1787, 86, 1569, 0, 0, 542, 0, 0, 0, 0,
	2081, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 2892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 542, 0, 0, 0, 0, 804, 804, 788, 0,
	0, 0, 0, 698, 79, 0, 0, 0, 0, 2922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 601, 2189, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 2927, 0, 0,
	0, 761, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	0, 0, 0, 0, 0, 542, 542, 542, 542, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2301,
	0, 0, 1286, 0, 1286, 0, 0, 1286, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	2316, 2317, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2359, 1286, 0, 0, 0, 0,
	1286, 542, 542, 542, 542, 542, 0, 0, 0, 0,
	0, 2377, 2378, 2376, 0, 0, 0, 0, 542, 0,
	1519, 0, 542, 0, 0, 542, 2386, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 2503, 0, 0, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2517, 2518, 2520,
	2522, 0, 0, 0, 0, 0, 0, 2528, 0, 0,
	0, 2531, 2532, 0, 0, 0, 0, 2535, 0, 0,
	0, 0, 0, 2537, 0, 0, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 0, 0, 2551, 0,
	0, 0, 0, 0, 2556, 0, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2578, 2579, 0,
	0, 2583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2595,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 1140, 1140, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 1178, 0, 0, 542, 0, 0, 542, 542, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 1213, 1214, 1215, 0, 1218, 1225,
	1220, 1221, 1222, 1223, 0, 1226, 1228, 1228, 2661, 1228,
	1232, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 0, 1269, 1270, 1271,
	1272, 1273, 0, 0, 0, 0, 1232, 1232, 1232, 1232,
	1232, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 2690, 0, 0, 0, 0, 1286, 2694,
	1286, 2743, 2745, 2744, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2794, 0, 0,
	1519, 0, 0, 0, 0, 0, 2801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2811, 2812, 2813, 0, 2814, 2815, 0, 0,
	0, 2818, 0, 2819, 0, 2821, 2824, 0, 0, 0,
	0, 0, 2828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2746, 2747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2876, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2881, 0, 0, 0, 0, 2886, 0, 0,
	0, 0, 0, 2887, 2888, 0, 0, 0, 682, 0,
	635, 686, 637, 683, 684, 0, 633, 636, 685, 0,
	1286, 2894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 639, 2742, 2748, 2749,
	2750, 2758, 2760, 660, 2759, 2761, 2762, 2763, 2766, 2767,
	2768, 2769, 2764, 2765, 2770, 0, 0, 0, 1519, 0,
	0, 0, 2945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1572, 2951, 0, 0, 0, 2952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1140, 1140, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 1626, 1627, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1670, 1671, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 1713, 1714, 1715,
	1716, 1717, 601, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	0, 694, 0, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 704, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2476, 2477, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 1830, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 87, 0, 0, 0, 0, 0, 692, 699, 700,
	701, 702, 703, 693, 695, 0, 0, 1868, 694, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 697, 704, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	699, 700, 0, 0, 0, 0, 1665, 965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2476, 2477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	682, 0, 0, 686, 0, 683, 684, 0, 0, 0,
	685, 0, 0, 0, 699, 700, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2114,
	2115, 0, 0, 0, 0, 0, 0, 0, 2134, 0,
	2135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2279, 2280, 0, 0, 0, 2283, 0, 0, 0, 0,
	2285, 2286, 2287, 0, 0, 0, 0, 0, 2291, 2292,
	0, 0, 1723, 2294, 0, 2295, 2296, 0, 0, 0,
	2303, 2304, 0, 0, 0, 0, 0, 0, 1723, 1723,
	1723, 1723, 1723, 601, 601, 601, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2348, 0,
	0, 0, 0, 0, 0, 0, 2357, 0, 79, 0,
	0, 1814, 1814, 1814, 1814, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 2380, 0, 0, 0, 2134, 0,
	0, 0, 1814, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2682, 0,
	2683, 0, 0, 0, 0, 2686, 2687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2702, 0, 2706, 2707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2726, 0, 0, 0, 0,
	0, 2357, 0, 79, 0, 2357, 2734, 0, 0, 2736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2837, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 2864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2895, 0, 0, 0,
	0, 79, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 935, 921, 461, 2943,
	868, 938, 837, 856, 948, 859, 862, 903, 816, 881,
	378, 853, 809, 841, 812, 848, 813, 839, 870, 250,
	836, 923, 885, 937, 334, 247, 818, 842, 392, 858,
	197, 905, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 944, 338, 891, 0,
	445, 363, 0, 0, 0, 872, 927, 879, 917, 867,
	904, 826, 890, 939, 854, 900, 940, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 2915, 0, 2916, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 850, 897, 934, 851, 899, 245,
	293, 252, 244, 465, 945, 926, 0, 0, 214, 936,
	874, 0, 902, 0, 951, 811, 893, 0, 814, 817,
	947, 930, 845, 255, 0, 0, 0, 0, 0, 0,
	0, 871, 880, 914, 865, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 889, 0, 0, 0, 822, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 825, 0, 844, 915,
	0, 808, 276, 819, 364, 237, 0, 919, 929, 866,
	500, 933, 864, 863, 909, 823, 925, 857, 333, 821,
	302, 192, 210, 0, 855, 374, 417, 423, 924, 840,
	849, 235, 847, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 888, 907, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 1142,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 835, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 920, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 912, 950, 387, 422, 225, 485,
	444, 830, 834, 828, 894, 829, 883, 884, 831, 941,
	942, 943, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 916, 824, 0, 832, 833, 0, 922, 931, 932,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 887, 191,
	207, 336, 946, 410, 268, 515, 494, 490, 810, 827,
	242, 838, 846, 0, 852, 860, 861, 873, 875, 876,
	877, 878, 895, 896, 898, 906, 908, 911, 913, 918,
	928, 949, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	886, 892, 347, 261, 281, 292, 901, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 882, 910, 343, 462,
	463, 288, 360, 0, 0, 935, 921, 461, 0, 868,
	938, 837, 856, 948, 859, 862, 903, 816, 881, 378,
	853, 809, 841, 812, 848, 813, 839, 870, 250, 836,
	923, 885, 937, 334, 247, 818, 842, 392, 858, 197,
	905, 435, 234, 344, 341, 468, 262, 253, 249, 233,
	289, 350, 390, 455, 384, 944, 338, 891, 0, 445,
	363, 0, 0, 0, 872, 927, 879, 917, 867, 904,
	826, 890, 939, 854, 900, 940, 295, 232, 297, 196,
	375, 446, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 850, 897, 934, 851, 899, 245, 293,
	252, 244, 465, 945, 926, 0, 0, 214, 936, 874,
	0, 902, 0, 951, 811, 893, 0, 814, 817, 947,
	930, 845, 255, 0, 0, 0, 0, 0, 0, 0,
	871, 880, 914, 865, 0, 0, 0, 0, 0, 2387,
	0, 843, 0, 889, 0, 0, 0, 822, 815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 825, 0, 844, 915, 0,
	808, 276, 819, 364, 237, 0, 919, 929, 866, 500,
	933, 864, 863, 909, 823, 925, 857, 333, 821, 302,
	192, 210, 0, 855, 374, 417, 423, 924, 840, 849,
	235, 847, 421, 388, 483, 218, 264, 414, 394, 419,
	401, 267, 888, 907, 420, 339, 470, 408, 481, 501,
	502, 243, 368, 491, 459, 497, 514, 211, 240, 382,
	452, 486, 442, 361, 466, 467, 301, 441, 274, 195,
	337, 507, 209, 429, 227, 216, 472, 489, 269, 412,
	202, 454, 479, 224, 433, 0, 0, 516, 204, 477,
	451, 357, 298, 299, 203, 0, 413, 248, 272, 238,
	377, 474, 475, 236, 517, 213, 496, 206, 1142, 495,
	370, 469, 478, 358, 349, 205, 476, 356, 348, 304,
	323, 324, 260, 283, 406, 342, 407, 284, 366, 365,
	367, 198, 487, 0, 199, 0, 447, 488, 518, 219,
	220, 222, 835, 259, 263, 271, 273, 279, 280, 287,
	335, 381, 405, 403, 409, 920, 464, 482, 492, 499,
	505, 506, 508, 509, 510, 511, 513, 512, 369, 286,
	443, 303, 340, 912, 950, 387, 422, 225, 485, 444,
	830, 834, 828, 894, 829, 883, 884, 831, 941, 942,
	943, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	916, 824, 0, 832, 833, 0, 922, 931, 932, 537,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 887, 191, 207,
	336, 946, 410, 268, 515, 494, 490, 810, 827, 242,
	838, 846, 0, 852, 860, 861, 873, 875, 876, 877,
	878, 895, 896, 898, 906, 908, 911, 913, 918, 928,
	949, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	436, 437, 438, 439, 440, 448, 449, 453, 471, 473,
	484, 498, 503, 430, 278, 480, 504, 0, 345, 886,
	892, 347, 261, 281, 292, 901, 493, 450, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 456, 457,
	458, 460, 359, 246, 395, 882, 910, 343, 462, 463,
	288, 360, 0, 0, 935, 921, 461, 0, 868, 938,
	837, 856, 948, 859, 862, 903, 816, 881, 378, 853,
	809, 841, 812, 848, 813, 839, 870, 250, 836, 923,
	885, 937, 334, 247, 818, 842, 392, 858, 197, 905,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 944, 338, 891, 0, 445, 363,
	0, 0, 0, 872, 927, 879, 917, 867, 904, 826,
	890, 939, 854, 900, 940, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 850, 897, 934, 851, 899, 245, 293, 252,
	244, 465, 945, 926, 0, 0, 214, 936, 874, 0,
	902, 0, 951, 811, 893, 0, 814, 817, 947, 930,
	845, 255, 0, 0, 0, 0, 0, 0, 0, 871,
	880, 914, 865, 0, 0, 0, 0, 0, 2346, 0,
	843, 0, 889, 0, 0, 0, 822, 815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	869, 0, 0, 0, 825, 0, 844, 915, 0, 808,
	276, 819, 364, 237, 0, 919, 929, 866, 500, 933,
	864, 863, 909, 823, 925, 857, 333, 821, 302, 192,
	210, 0, 855, 374, 417, 423, 924, 840, 849, 235,
	847, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 888, 907, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 1142, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 835, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 920, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 912, 950, 387, 422, 225, 485, 444, 830,
	834, 828, 894, 829, 883, 884, 831, 941, 942, 943,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 916,
	824, 0, 832, 833, 0, 922, 931, 932, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 887, 191, 207, 336,
	946, 410, 268, 515, 494, 490, 810, 827, 242, 838,
	846, 0, 852, 860, 861, 873, 875, 876, 877, 878,
	895, 896, 898, 906, 908, 911, 913, 918, 928, 949,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 886, 892,
	347, 261, 281, 292, 901, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 882, 910, 343, 462, 463, 288,
	360, 0, 0, 935, 921, 461, 0, 868, 938, 837,
	856, 948, 859, 862, 903, 816, 881, 378, 853, 809,
	841, 812, 848, 813, 839, 870, 250, 836, 923, 885,
	937, 334, 247, 818, 842, 392, 858, 197, 905, 435,
	234, 344, 341, 468, 262, 253, 249, 233, 289, 350,
	390, 455, 384, 944, 338, 891, 0, 445, 363, 0,
	0, 0, 872, 927, 879, 917, 867, 904, 826, 890,
	939, 854, 900, 940, 295, 232, 297, 196, 375, 446,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 850, 897, 934, 851, 899, 245, 293, 252, 244,
	465, 945, 926, 0, 0, 214, 936, 874, 0, 902,
	0, 951, 811, 893, 0, 814, 817, 947, 930, 845,
	255, 0, 0, 0, 0, 0, 0, 0, 871, 880,
	914, 865, 0, 0, 0, 0, 0, 1802, 0, 843,
	0, 889, 0, 0, 0, 822, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 0, 825, 0, 844, 915, 0, 808, 276,
	819, 364, 237, 0, 919, 929, 866, 500, 933, 864,
	863, 909, 823, 925, 857, 333, 821, 302, 192, 210,
	0, 855, 374, 417, 423, 924, 840, 849, 235, 847,
	421, 388, 483, 218, 264, 414, 394, 419, 401, 267,
	888, 907, 420, 339, 470, 408, 481, 501, 502, 243,
	368, 491, 459, 497, 514, 211, 240, 382, 452, 486,
	442, 361, 466, 467, 301, 441, 274, 195, 337, 507,
	209, 429, 227, 216, 472, 489, 269, 412, 202, 454,
	479, 224, 433, 0, 0, 516, 204, 477, 451, 357,
	298, 299, 203, 0, 413, 248, 272, 238, 377, 474,
	475, 236, 517, 213, 496, 206, 1142, 495, 370, 469,
	478, 358, 349, 205, 476, 356, 348, 304, 323, 324,
	260, 283, 406, 342, 407, 284, 366, 365, 367, 198,
	487, 0, 199, 0, 447, 488, 518, 219, 220, 222,
	835, 259, 263, 271, 273, 279, 280, 287, 335, 381,
	405, 403, 409, 920, 464, 482, 492, 499, 505, 506,
	508, 509, 510, 511, 513, 512, 369, 286, 443, 303,
	340, 912, 950, 387, 422, 225, 485, 444, 830, 834,
	828, 894, 829, 883, 884, 831, 941, 942, 943, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 0, 916, 824,
	0, 832, 833, 0, 922, 931, 932, 537, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 887, 191, 207, 336, 946,
	410, 268, 515, 494, 490, 810, 827, 242, 838, 846,
	0, 852, 860, 861, 873, 875, 876, 877, 878, 895,
	896, 898, 906, 908, 911, 913, 918, 928, 949, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 436, 437,
	438, 439, 440, 448, 449, 453, 471, 473, 484, 498,
	503, 430, 278, 480, 504, 0, 345, 886, 892, 347,
	261, 281, 292, 901, 493, 450, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 456, 457, 458, 460,
	359, 246, 395, 882, 910, 343, 462, 463, 288, 360,
	0, 0, 935, 921, 461, 0, 868, 938, 837, 856,
	948, 859, 862, 903, 816, 881, 378, 853, 809, 841,
	812, 848, 813, 839, 870, 250, 836, 923, 885, 937,
	334, 247, 818, 842, 392, 858, 197, 905, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 944, 338, 891, 0, 445, 363, 0, 0,
	0, 872, 927, 879, 917, 867, 904, 826, 890, 939,
	854, 900, 940, 295, 232, 297, 196, 375, 446, 266,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	850, 897, 934, 851, 899, 245, 293, 252, 244, 465,
	945, 926, 0, 0, 214, 936, 874, 0, 902, 0,
	951, 811, 893, 0, 814, 817, 947, 930, 845, 255,
	0, 0, 0, 0, 0, 0, 0, 871, 880, 914,
	865, 0, 0, 0, 0, 0, 0, 0, 843, 0,
	889, 0, 0, 0, 822, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 0,
	0, 0, 825, 0, 844, 915, 0, 808, 276, 819,
	364, 237, 0, 919, 929, 866, 500, 933, 864, 863,
	909, 823, 925, 857, 333, 821, 302, 192, 210, 0,
	855, 374, 417, 423, 924, 840, 849, 235, 847, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 888,
	907, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 1142, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 835,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 920, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	912, 950, 387, 422, 225, 485, 444, 830, 834, 828,
	894, 829, 883, 884, 831, 941, 942, 943, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 916, 824, 0,
	832, 833, 0, 922, 931, 932, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 887, 191, 207, 336, 946, 410,
	268, 515, 494, 490, 810, 827, 242, 838, 846, 0,
	852, 860, 861, 873, 875, 876, 877, 878, 895, 896,
	898, 906, 908, 911, 913, 918, 928, 949, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 886, 892, 347, 261,
	281, 292, 901, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 882, 910, 343, 462, 463, 288, 360, 0,
	0, 935, 921, 461, 0, 868, 938, 837, 856, 948,
	859, 862, 903, 816, 881, 378, 853, 809, 841, 812,
	848, 813, 839, 870, 250, 836, 923, 885, 937, 334,
	247, 818, 842, 392, 858, 197, 905, 435, 234, 344,
	341, 468, 262, 253, 249, 233, 289, 350, 390, 455,
	384, 944, 338, 891, 0, 445, 363, 0, 0, 0,
	872, 927, 879, 917, 867, 904, 826, 890, 939, 854,
	900, 940, 295, 232, 297, 196, 375, 446, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 850,
	897, 934, 851, 899, 245, 293, 252, 244, 465, 945,
	926, 0, 0, 214, 936, 874, 0, 902, 0, 951,
	811, 893, 0, 814, 817, 947, 930, 845, 255, 0,
	0, 0, 0, 0, 0, 0, 871, 880, 914, 865,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 889,
	0, 0, 0, 822, 815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 869, 0, 0,
	0, 825, 0, 844, 915, 0, 808, 276, 819, 364,
	237, 0, 919, 929, 866, 500, 933, 864, 863, 909,
	823, 925, 857, 333, 821, 302, 192, 210, 0, 855,
	374, 417, 423, 924, 840, 849, 235, 847, 421, 388,
	483, 218, 264, 414, 394, 419, 401, 267, 888, 907,
	420, 339, 470, 408, 481, 501, 502, 243, 368, 491,
	459, 497, 514, 211, 240, 382, 452, 486, 442, 361,
	466, 467, 301, 441, 274, 195, 337, 507, 209, 429,
	227, 216, 472, 489, 269, 412, 202, 454, 479, 224,
	433, 0, 0, 516, 204, 477, 451, 357, 298, 299,
	203, 0, 413, 248, 272, 238, 377, 474, 475, 236,
	517, 213, 496, 206, 1142, 495, 370, 469, 478, 358,
	349, 205, 476, 356, 348, 304, 323, 324, 260, 283,
	406, 342, 407, 284, 366, 365, 367, 198, 487, 0,
	199, 0, 447, 488, 518, 219, 220, 222, 835, 259,
	263, 271, 273, 279, 280, 287, 335, 381, 405, 403,
	409, 920, 464, 482, 492, 499, 505, 506, 508, 509,
	510, 511, 513, 512, 369, 286, 443, 303, 340, 912,
	950, 387, 422, 225, 485, 444, 830, 834, 828, 894,
	829, 883, 884, 831, 941, 942, 943, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 916, 824, 0, 832,
	833, 0, 922, 931, 932, 537, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 887, 191, 207, 336, 946, 410, 268,
	515, 494, 490, 810, 827, 242, 838, 846, 0, 852,
	860, 861, 873, 875, 876, 877, 878, 895, 896, 898,
	906, 908, 911, 913, 918, 928, 949, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 436, 437, 438, 439,
	440, 448, 449, 453, 471, 473, 484, 498, 503, 430,
	278, 480, 504, 0, 345, 886, 892, 347, 261, 281,
	292, 901, 493, 450, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 456, 457, 458, 460, 359, 246,
	395, 882, 910, 343, 462, 463, 288, 360, 0, 0,
	935, 921, 461, 0, 868, 938, 837, 856, 948, 859,
	862, 903, 816, 881, 378, 853, 809, 841, 812, 848,
	813, 839, 870, 250, 836, 923, 885, 937, 334, 247,
	818, 842, 392, 858, 197, 905, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	944, 338, 891, 0, 445, 363, 0, 0, 0, 872,
	927, 879, 917, 867, 904, 826, 890, 939, 854, 900,
	940, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 850, 897,
	934, 851, 899, 245, 293, 252, 244, 465, 945, 926,
	0, 0, 952, 936, 874, 0, 902, 0, 951, 811,
	893, 0, 814, 817, 947, 930, 845, 255, 0, 0,
	0, 0, 0, 0, 0, 871, 880, 914, 865, 0,
	0, 0, 0, 0, 0, 0, 843, 0, 889, 0,
	0, 0, 822, 815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	825, 0, 844, 915, 0, 808, 276, 819, 364, 237,
	0, 919, 929, 866, 500, 933, 864, 863, 909, 823,
	925, 857, 333, 821, 302, 192, 210, 0, 855, 374,
	417, 423, 924, 840, 849, 235, 847, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 888, 907, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 820, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 835, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	920, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 807, 801, 800, 303, 340, 912, 950,
	387, 422, 225, 485, 444, 830, 834, 828, 894, 829,
	883, 884, 831, 941, 942, 943, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 916, 824, 0, 832, 833,
	0, 922, 931, 932, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 887, 191, 207, 336, 946, 410, 268, 515,
	494, 490, 810, 827, 242, 838, 846, 0, 852, 860,
	861, 873, 875, 876, 877, 878, 895, 896, 898, 906,
	908, 911, 913, 918, 928, 949, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 886, 892, 347, 261, 281, 292,
	901, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	882, 910, 343, 462, 463, 288, 360, 0, 0, 935,
	921, 461, 0, 868, 938, 837, 856, 948, 859, 862,
	903, 816, 881, 378, 853, 809, 841, 812, 848, 813,
	839, 870, 250, 836, 923, 885, 937, 334, 247, 818,
	842, 392, 858, 197, 905, 435, 234, 344, 341, 468,
	262, 253, 249, 233, 289, 350, 390, 455, 384, 944,
	338, 891, 0, 445, 363, 0, 0, 0, 872, 927,
	879, 917, 867, 904, 826, 890, 939, 854, 900, 940,
	295, 232, 297, 196, 375, 446, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 850, 897, 934,
	851, 899, 245, 293, 252, 244, 465, 945, 926, 0,
	0, 952, 936, 874, 0, 902, 0, 951, 811, 893,
	0, 814, 817, 947, 930, 845, 255, 0, 0, 0,
	0, 0, 0, 0, 871, 880, 914, 865, 0, 0,
	0, 0, 0, 0, 0, 843, 0, 889, 0, 0,
	0, 822, 815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 869, 0, 0, 0, 825,
	0, 844, 915, 0, 808, 276, 819, 364, 237, 0,
	919, 929, 866, 500, 933, 864, 863, 909, 823, 925,
	857, 333, 821, 302, 192, 210, 0, 855, 374, 417,
	423, 924, 840, 849, 235, 847, 421, 388, 483, 218,
	264, 414, 394, 419, 401, 267, 888, 907, 420, 339,
	470, 408, 481, 501, 502, 243, 368, 491, 459, 497,
	514, 211, 240, 382, 452, 486, 442, 361, 466, 467,
	301, 441, 274, 195, 337, 507, 209, 429, 227, 216,
	472, 489, 269, 412, 202, 454, 1352, 224, 433, 0,
	0, 516, 204, 477, 451, 357, 298, 299, 203, 0,
	413, 248, 272, 238, 377, 474, 475, 236, 517, 213,
	496, 206, 820, 495, 370, 469, 478, 358, 349, 205,
	476, 356, 348, 304, 323, 324, 260, 283, 406, 342,
	407, 284, 366, 365, 367, 198, 487, 0, 199, 0,
	447, 488, 518, 219, 220, 222, 835, 259, 263, 271,
	273, 279, 280, 287, 335, 381, 405, 403, 409, 920,
	464, 482, 492, 499, 505, 506, 508, 509, 510, 511,
	513, 512, 807, 801, 800, 303, 340, 912, 950, 387,
	422, 225, 485, 444, 830, 834, 828, 894, 829, 883,
	884, 831, 941, 942, 943, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 0, 916, 824, 0, 832, 833, 0,
	922, 931, 932, 537, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 887, 191, 207, 336, 946, 410, 268, 515, 494,
	490, 810, 827, 242, 838, 846, 0, 852, 860, 861,
	873, 875, 876, 877, 878, 895, 896, 898, 906, 908,
	911, 913, 918, 928, 949, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 436, 437, 438, 439, 440, 448,
	449, 453, 471, 473, 484, 498, 503, 430, 278, 480,
	504, 0, 345, 886, 892, 347, 261, 281, 292, 901,
	493, 450, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 456, 457, 458, 460, 359, 246, 395, 882,
	910, 343, 462, 463, 288, 360, 0, 0, 935, 921,
	461, 0, 868, 938, 837, 856, 948, 859, 862, 903,
	816, 881, 378, 853, 809, 841, 812, 848, 813, 839,
	870, 250, 836, 923, 885, 937, 334, 247, 818, 842,
	392, 858, 197, 905, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 944, 338,
	891, 0, 445, 363, 0, 0, 0, 872, 927, 879,
	917, 867, 904, 826, 890, 939, 854, 900, 940, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 850, 897, 934, 851,
	899, 245, 293, 252, 244, 465, 945, 926, 0, 0,
	952, 936, 874, 0, 902, 0, 951, 811, 893, 0,
	814, 817, 947, 930, 845, 255, 0, 0, 0, 0,
	0, 0, 0, 871, 880, 914, 865, 0, 0, 0,
	0, 0, 0, 0, 843, 0, 889, 0, 0, 0,
	822, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 0, 0, 825, 0,
	844, 915, 0, 808, 276, 819, 364, 237, 0, 919,
	929, 866, 500, 933, 864, 863, 909, 823, 925, 857,
	333, 821, 302, 192, 210, 0, 855, 374, 417, 423,
	924, 840, 849, 235, 847, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 888, 907, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 798, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 820, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 835, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 920, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 807, 801, 800, 303, 340, 912, 950, 387, 422,
	225, 485, 444, 830, 834, 828, 894, 829, 883, 884,
	831, 941, 942, 943, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 916, 824, 0, 832, 833, 0, 922,
	931, 932, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	887, 191, 207, 336, 946, 410, 268, 515, 494, 490,
	810, 827, 242, 838, 846, 0, 852, 860, 861, 873,
	875, 876, 877, 878, 895, 896, 898, 906, 908, 911,
	913, 918, 928, 949, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 886, 892, 347, 261, 281, 292, 901, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 882, 910,
	343, 462, 463, 288, 360, 0, 0, 0, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 1747, 0, 619, 0, 0, 0,
	250, 624, 0, 0, 0, 334, 247, 0, 1748, 392,
	0, 197, 0, 435, 234, 344, 341, 468, 262, 253,
	249, 233, 289, 350, 390, 455, 384, 631, 338, 0,
	0, 445, 363, 0, 0, 0, 0, 0, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 375, 446, 266, 0, 87, 0, 0, 188,
	189, 190, 692, 699, 700, 701, 702, 703, 693, 695,
	0, 0, 223, 694, 230, 642, 644, 643, 650, 651,
	652, 653, 654, 655, 656, 640, 697, 704, 705, 0,
	245, 293, 252, 244, 465, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 602, 616, 0,
	630, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 613,
	614, 787, 0, 0, 0, 676, 0, 615, 0, 0,
	623, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 675, 0,
	0, 500, 0, 0, 673, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 483, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 339, 470, 408,
	481, 501, 502, 243, 368, 491, 459, 497, 514, 211,
	240, 382, 452, 486, 442, 361, 466, 467, 301, 441,
	274, 195, 337, 507, 209, 429, 227, 216, 472, 489,
	269, 412, 202, 454, 479, 224, 433, 0, 0, 516,
	204, 477, 451, 357, 298, 299, 203, 0, 413, 248,
	272, 238, 377, 474, 475, 236, 517, 213, 496, 206,
	0, 495, 370, 469, 478, 358, 349, 205, 476, 356,
	348, 304, 645, 646, 260, 283, 406, 342, 407, 284,
	366, 365, 367, 198, 487, 0, 199, 0, 447, 488,
	518, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 335, 381, 405, 403, 409, 0, 464, 482,
	492, 499, 505, 506, 508, 509, 510, 511, 513, 512,
	369, 286, 443, 303, 340, 0, 0, 387, 422, 225,
	485, 444, 682, 674, 635, 686, 637, 683, 684, 632,
	633, 636, 685, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 0, 677, 622, 621, 0, 628, 629, 0, 638,
	639, 641, 647, 648, 649, 657, 659, 660, 658, 661,
	662, 663, 666, 667, 668, 669, 664, 665, 670, 620,
	191, 207, 336, 0, 410, 268, 515, 494, 490, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 436, 437, 438, 439, 440, 448, 449, 453,
	471, 473, 484, 498, 503, 430, 278, 480, 504, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 493, 450,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	456, 457, 458, 460, 359, 246, 395, 0, 360, 343,
	462, 463, 288, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	619, 0, 0, 0, 250, 624, 0, 0, 0, 334,
	247, 0, 0, 392, 0, 197, 0, 435, 234, 344,
	341, 468, 262, 253, 249, 233, 289, 350, 390, 455,
	384, 631, 338, 0, 0, 445, 363, 0, 0, 0,
	0, 0, 626, 627, 0, 0, 0, 0, 0, 0,
	1828, 0, 295, 232, 297, 196, 375, 446, 266, 0,
	87, 0, 0, 188, 189, 190, 692, 699, 700, 701,
	702, 703, 693, 695, 0, 0, 223, 694, 230, 642,
	644, 643, 650, 651, 652, 653, 654, 655, 656, 640,
	697, 704, 705, 1829, 245, 293, 252, 244, 465, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 602, 616, 0, 630, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 676,
	0, 615, 0, 0, 623, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 675, 0, 0, 500, 0, 0, 673, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	483, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 339, 470, 408, 481, 501, 502, 243, 368, 491,
	459, 497, 514, 211, 240, 382, 452, 486, 442, 361,
	466, 467, 301, 441, 274, 195, 337, 507, 209, 429,
	227, 216, 472, 489, 269, 412, 202, 454, 479, 224,
	433, 0, 0, 516, 204, 477, 451, 357, 298, 299,
	203, 0, 413, 248, 272, 238, 377, 474, 475, 236,
	517, 213, 496, 206, 0, 495, 370, 469, 478, 358,
	349, 205, 476, 356, 348, 304, 645, 646, 260, 283,
	406, 342, 407, 284, 366, 365, 367, 198, 487, 0,
	199, 0, 447, 488, 518, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 335, 381, 405, 403,
	409, 0, 464, 482, 492, 499, 505, 506, 508, 509,
	510, 511, 513, 512, 369, 286, 443, 303, 340, 0,
	0, 387, 422, 225, 485, 444, 682, 674, 635, 686,
	637, 683, 684, 632, 633, 636, 685, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 0, 677, 622, 621, 0,
	628, 629, 0, 638, 639, 641, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 620, 191, 207, 336, 0, 410, 268,
	515, 494, 490, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 436, 437, 438, 439,
	440, 448, 449, 453, 471, 473, 484, 498, 503, 430,
	278, 480, 504, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 493, 450, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 456, 457, 458, 460, 359, 246,
	395, 0, 0, 343, 462, 463, 288, 360, 0, 0,
	0, 78, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 619,
	0, 0, 0, 250, 624, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	631, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 642, 644,
	643, 650, 651, 652, 653, 654, 655, 656, 640, 697,
	704, 705, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	602, 616, 0, 630, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 676, 0,
	615, 0, 0, 623, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 675, 0, 0, 500, 0, 0, 673, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 645, 646, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 682, 674, 635, 686, 637,
	683, 684, 632, 633, 636, 685, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 677, 622, 621, 0, 628,
	629, 0, 638, 639, 641, 647, 648, 649, 657, 659,
	660, 658, 661, 662, 663, 666, 667, 668, 669, 664,
	665, 670, 620, 191, 207, 336, 86, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 619, 0, 0, 0, 250, 624, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 631, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 642, 644, 643, 650, 651, 652, 653, 654,
	655, 656, 640, 697, 704, 705, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 602, 616, 0, 630, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 676, 0, 615, 0, 0, 623, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 675, 0, 0, 500, 0,
	0, 673, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 2902, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 645,
	646, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 682,
	674, 635, 686, 637, 683, 684, 632, 633, 636, 685,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 677,
	622, 621, 0, 628, 629, 0, 638, 639, 641, 647,
	648, 649, 657, 659, 660, 658, 661, 662, 663, 666,
	667, 668, 669, 664, 665, 670, 620, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 619, 0, 0,
	0, 250, 624, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 631, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 87, 0, 1319,
	188, 189, 190, 692, 699, 700, 701, 702, 703, 693,
	695, 0, 0, 223, 694, 230, 642, 644, 643, 650,
	651, 652, 653, 654, 655, 656, 640, 697, 704, 705,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 602, 616,
	0, 630, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 676, 0, 615, 0,
	0, 623, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 675,
	0, 0, 500, 0, 0, 673, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 645, 646, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 682, 674, 635, 686, 637, 683, 684,
	632, 633, 636, 685, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 677, 622, 621, 0, 628, 629, 0,
	638, 639, 641, 647, 648, 649, 657, 659, 660, 658,
	661, 662, 663, 666, 667, 668, 669, 664, 665, 670,
	620, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 619, 0, 0, 0, 250, 624, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 631, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 87, 0, 0, 188, 189, 190, 692, 699, 700,
	701, 702, 703, 693, 695, 0, 0, 223, 694, 230,
	642, 644, 643, 650, 651, 652, 653, 654, 655, 656,
	640, 697, 704, 705, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 602, 616, 0, 630, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 613, 614, 787, 0, 0, 0,
	676, 0, 615, 0, 0, 623, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 675, 0, 0, 500, 0, 0, 673,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 645, 646, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 682, 674, 635,
	686, 637, 683, 684, 632, 633, 636, 685, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 677, 622, 621,
	0, 628, 629, 0, 638, 639, 641, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 620, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 619, 0, 0, 0, 250,
	624, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 631, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 87, 0, 0, 188, 189,
	190, 692, 699, 700, 701, 702, 703, 693, 695, 0,
	0, 223, 694, 230, 642, 644, 643, 650, 651, 652,
	653, 654, 655, 656, 640, 697, 704, 705, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 602, 616, 0, 630,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 614,
	0, 0, 0, 0, 676, 0, 615, 0, 0, 623,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 675, 0, 0,
	500, 0, 0, 673, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 645, 646, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 682, 674, 635, 686, 637, 683, 684, 632, 633,
	636, 685, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 677, 622, 621, 0, 628, 629, 0, 638, 639,
	641, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 620, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 619,
	0, 0, 0, 250, 624, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	631, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 642, 644,
	643, 650, 651, 652, 653, 654, 655, 656, 640, 697,
	704, 705, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 630, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 676, 0,
	615, 0, 0, 623, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 675, 0, 0, 500, 0, 0, 673, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 645, 646, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 682, 674, 635, 686, 637,
	683, 684, 632, 633, 636, 685, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 677, 622, 621, 0, 628,
	629, 0, 638, 639, 641, 647, 648, 649, 657, 659,
	660, 658, 661, 662, 663, 666, 667, 668, 669, 664,
	665, 670, 620, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	699, 700, 0, 0, 0, 0, 1665, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 1003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 1002, 500, 0, 0, 0, 0, 0, 999, 1000,
	333, 960, 302, 192, 210, 993, 997, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 1338,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	1340, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1342, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 1174, 0,
	1175, 1176, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 1281, 1284, 0, 0, 0, 0, 1280, 1283, 0,
	0, 223, 1279, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 0, 343, 462,
	463, 288, 360, 0, 0, 0, 78, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 334, 247, 0, 0, 392, 0, 197,
	0, 435, 234, 344, 341, 468, 262, 253, 249, 233,
	289, 350, 390, 455, 384, 0, 338, 0, 0, 445,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	375, 446, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 465, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 483, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 339, 470, 408, 481, 501,
	502, 243, 368, 491, 459, 497, 514, 211, 240, 382,
	452, 486, 442, 361, 466, 467, 301, 441, 274, 195,
	337, 507, 209, 429, 227, 216, 472, 489, 269, 412,
	202, 454, 479, 224, 433, 0, 0, 516, 204, 477,
	451, 357, 298, 299, 203, 0, 413, 248, 272, 238,
	377, 474, 475, 236, 517, 213, 496, 206, 0, 495,
	370, 469, 478, 358, 349, 205, 476, 356, 348, 304,
	323, 324, 260, 283, 406, 342, 407, 284, 366, 365,
	367, 198, 487, 0, 199, 0, 447, 488, 518, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 381, 405, 403, 409, 0, 464, 482, 492, 499,
	505, 506, 508, 509, 510, 511, 513, 512, 369, 286,
	443, 303, 340, 0, 0, 387, 422, 225, 485, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 86, 410, 268, 515, 494, 490, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	436, 437, 438, 439, 440, 448, 449, 453, 471, 473,
	484, 498, 503, 430, 278, 480, 504, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 493, 450, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 456, 457,
	458, 460, 359, 246, 395, 0, 0, 343, 462, 463,
	288, 360, 0, 0, 0, 78, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 87, 0, 1319, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	86, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 1769, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 1767, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 960, 302, 192, 210, 958,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 1769, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 1319, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 2830, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1661, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2089, 0, 0, 0, 2090, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 1363, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 2923, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	2830, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 1616, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 1488, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 1486, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	1484, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 1482, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 1480, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 1476, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 1474, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	1472, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 1447, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 1347, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1151, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 594, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 593, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 360, 343, 462, 463, 288,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 334, 247, 0, 0,
	392, 0, 197, 0, 435, 234, 344, 341, 468, 262,
	253, 249, 233, 289, 350, 390, 455, 384, 0, 338,
	0, 0, 445, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 297, 196, 375, 446, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 465, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	540, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 483, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 339, 470,
	408, 481, 501, 502, 243, 368, 491, 459, 497, 514,
	211, 240, 382, 452, 486, 442, 361, 466, 467, 301,
	441, 274, 195, 337, 507, 209, 429, 227, 216, 472,
	489, 269, 412, 202, 454, 479, 224, 433, 0, 0,
	516, 204, 477, 451, 357, 298, 299, 203, 0, 413,
	248, 272, 238, 377, 474, 475, 236, 517, 213, 496,
	206, 0, 495, 370, 469, 478, 358, 349, 205, 476,
	356, 348, 304, 323, 324, 260, 283, 406, 342, 407,
	284, 366, 365, 367, 198, 487, 0, 199, 0, 447,
	488, 518, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 381, 405, 403, 409, 0, 464,
	482, 492, 499, 505, 506, 508, 509, 510, 511, 513,
	512, 369, 286, 443, 303, 340, 0, 0, 387, 422,
	225, 485, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	0, 191, 207, 336, 0, 410, 268, 515, 494, 490,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 436, 437, 438, 439, 440, 448, 449,
	453, 471, 473, 484, 498, 503, 430, 278, 480, 504,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 493,
	450, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 456, 457, 458, 460, 359, 246, 395, 0, 360,
	343, 462, 463, 288, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 392, 0, 197, 0, 435, 234,
	344, 341, 468, 262, 253, 249, 233, 289, 350, 390,
	455, 384, 0, 338, 0, 0, 445, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 375, 446, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 465,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 483, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 339, 470, 408, 481, 501, 502, 243, 368,
	491, 459, 497, 514, 211, 240, 382, 452, 486, 442,
	361, 466, 467, 301, 441, 274, 195, 337, 507, 209,
	429, 227, 216, 472, 489, 269, 412, 202, 454, 479,
	224, 433, 0, 0, 516, 204, 477, 451, 357, 298,
	299, 203, 0, 413, 248, 272, 238, 377, 474, 475,
	236, 517, 213, 496, 206, 0, 495, 370, 469, 478,
	358, 349, 205, 476, 356, 348, 304, 323, 324, 260,
	283, 406, 342, 407, 284, 366, 365, 367, 198, 487,
	0, 199, 0, 447, 488, 518, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 381, 405,
	403, 409, 0, 464, 482, 492, 499, 505, 506, 508,
	509, 510, 511, 513, 512, 369, 286, 443, 303, 340,
	0, 0, 387, 422, 225, 485, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 0, 410,
	268, 515, 494, 490, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 351, 352, 353,
	354, 2928, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 436, 437, 438,
	439, 440, 448, 449, 453, 471, 473, 484, 498, 503,
	430, 278, 480, 504, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 493, 450, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 456, 457, 458, 460, 359,
	246, 395, 0, 360, 343, 462, 463, 288, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 392, 0,
	197, 0, 435, 234, 344, 341, 468, 262, 253, 249,
	233, 289, 350, 390, 455, 384, 0, 338, 0, 0,
	445, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 375, 446, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 465, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 483, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 339, 470, 408, 481,
	501, 502, 243, 368, 491, 459, 497, 514, 211, 240,
	382, 452, 486, 442, 361, 466, 467, 301, 441, 274,
	195, 337, 507, 209, 429, 227, 216, 472, 489, 269,
	412, 202, 454, 479, 224, 433, 0, 0, 516, 204,
	477, 451, 357, 298, 299, 203, 0, 413, 248, 272,
	238, 377, 474, 475, 236, 517, 213, 496, 206, 0,
	495, 370, 469, 478, 358, 349, 205, 476, 356, 348,
	304, 323, 324, 260, 283, 406, 342, 407, 284, 366,
	365, 367, 198, 487, 0, 199, 0, 447, 488, 518,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 335, 381, 405, 403, 409, 0, 464, 482, 492,
	499, 505, 506, 508, 509, 510, 511, 513, 512, 369,
	286, 443, 303, 340, 0, 0, 387, 422, 225, 485,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 410, 268, 515, 494, 490, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 436, 437, 438, 439, 440, 448, 449, 453, 471,
	473, 484, 498, 503, 430, 278, 480, 504, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 493, 450, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 456,
	457, 458, 460, 359, 246, 395, 0, 360, 343, 462,
	463, 288, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 392, 0, 197, 0, 435, 234, 344, 341,
	468, 262, 253, 249, 233, 289, 350, 390, 455, 384,
	0, 338, 0, 0, 445, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 375, 446, 266, 0, 0,
	0, 0, 188, 2557, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 465, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 483,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	339, 470, 408, 481, 501, 502, 243, 368, 491, 459,
	497, 514, 211, 240, 382, 452, 486, 442, 361, 466,
	467, 301, 441, 274, 195, 337, 507, 209, 429, 227,
	216, 472, 489, 269, 412, 202, 454, 479, 224, 433,
	0, 0, 516, 204, 477, 451, 357, 298, 299, 203,
	0, 413, 248, 272, 238, 377, 474, 475, 236, 517,
	213, 496, 206, 0, 495, 370, 469, 478, 358, 349,
	205, 476, 356, 348, 304, 323, 324, 260, 283, 406,
	342, 407, 284, 366, 365, 367, 198, 487, 0, 199,
	0, 447, 488, 518, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 381, 405, 403, 409,
	0, 464, 482, 492, 499, 505, 506, 508, 509, 510,
	511, 513, 512, 369, 286, 443, 303, 340, 0, 0,
	387, 422, 225, 485, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 410, 268, 515,
	494, 490, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 436, 437, 438, 439, 440,
	448, 449, 453, 471, 473, 484, 498, 503, 430, 278,
	480, 504, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 493, 450, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 456, 457, 458, 460, 359, 246, 395,
	0, 360, 343, 462, 463, 288, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 334, 247, 0, 0, 392, 0, 197, 0,
	435, 234, 344, 341, 468, 262, 253, 249, 233, 289,
	350, 390, 455, 384, 0, 338, 0, 0, 445, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 375,
	446, 266, 0, 0, 0, 0, 188, 2085, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 465, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 483, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 339, 470, 408, 481, 501, 502,
	243, 368, 491, 459, 497, 514, 211, 240, 382, 452,
	486, 442, 361, 466, 467, 301, 441, 274, 195, 337,
	507, 209, 429, 227, 216, 472, 489, 269, 412, 202,
	454, 479, 224, 433, 0, 0, 516, 204, 477, 451,
	357, 298, 299, 203, 0, 413, 248, 272, 238, 377,
	474, 475, 236, 517, 213, 496, 206, 0, 495, 370,
	469, 478, 358, 349, 205, 476, 356, 348, 304, 323,
	324, 260, 283, 406, 342, 407, 284, 366, 365, 367,
	198, 487, 0, 199, 0, 447, 488, 518, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	381, 405, 403, 409, 0, 464, 482, 492, 499, 505,
	506, 508, 509, 510, 511, 513, 512, 369, 286, 443,
	303, 340, 0, 0, 387, 422, 225, 485, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 410, 268, 515, 494, 490, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 436,
	437, 438, 439, 440, 448, 449, 453, 471, 473, 484,
	498, 503, 430, 278, 480, 504, 0, 345, 0, 0,
	347, 261, 281, 292, 0, 493, 450, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 456, 457, 458,
	460, 359, 246, 395, 0, 0, 343, 462, 463, 288,
}

var yyPact = [...]int{
	4868, -1000, -409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1977, 2118, -1000, -1000,
	-1000, -1000, 2146, -1000, 713, 1724, -1000, 1978, 3342, -1000,
	41019, 389, -1000, 39831, 388, 279, 41019, -1000, 154, -1000,
	131, 41019, 141, 39237, -1000, -1000, -305, 17249, 1924, 21,
	17, 41019, -1000, -1000, -1000, -1000, 2084, 1656, -1000, 339,
	-1000, -1000, -1000, -1000, -1000, -1000, 38643, -1000, -1000, -1000,
	1990, 1969, 2142, 611, 1925, -1000, 2038, 1656, -1000, 17249,
	2075, 2019, 16655, -1000, 16655, 363, -1000, -1000, 13081, -1000,
	-1000, 22605, 41019, 29139, 596, -1000, 1978, -1000, -1000, -1000,
	111, -1000, 282, 1514, -1000, 1504, -1000, 738, 760, 296,
	428, 421, 295, 294, 293, 290, 288, 286, 285, 273,
	308, -1000, 676, 676, -149, -150, 2622, 357, 358, 358,
	372, 1948, 1944, -1000, 680, -1000, 676, 676, 676, 300,
	676, 676, 676, 676, 232, 228, 676, 676, 676, 676,
	676, 676, 676, 676, 676, 676, 676, 676, 676, 676,
	676, 676, 676, 336, 1978, 211, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41019, 151,
	41019, -1000, 532, 41019, 768, 768, 55, 768, 768, 768,
	768, 139, 605, 16, -1000, 127, 214, 121, 204, 773,
	176, 181, -1000, -1000, 196, 773, 1229, -1000, 616, 115,
	-1000, 768, 10685, 10685, 10685, -1000, 1972, -1000, -1000, -1000,
	-1000, -1000, -1000, 1226, -1000, 371, -1000, -1000, -1000, -1000,
	41019, 38049, 353, 703, -1000, -1000, -1000, 57, -1000, -1000,
	1352, 949, 17249, 904, -1000, 1241, 593, -1000, -1000, -1000,
	-1000, -1000, 533, 17843, 17843, 17843, 17843, -1000, -1000, 1519,
	1519, 1519, 1519, 17843, 1519, 17843, 1519, 1519, 1519, 1519,
	17249, 1519, 1519, 1519, -1000, 1519, 1519, 1519, 1519, 1519,
	1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, 1519, 520, 1519, 1519, 1519, 1519, 1519, -1000, -1000,
	-1000, -1000, 1519, 1519, 1519, 1519, 1519, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20219, -1000, 14873, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41019,
	-1000, 1519, 166, 41019, 41019, 304, 2038, 1656, -1000, 2084,
	2083, 339, -1000, 2224, 1762, 1320, 909, 1656, 1473, 41019,
	-1000, 1539, -1000, -1000, -1000, 1853, 1111, 1224, -1000, -1000,
	-1000, -1000, 1023, 17249, -1000, -1000, 2131, -1000, 19625, 518,
	838, 2126, 37455, -1000, 363, 363, 1499, 12482, -33, -1000,
	-1000, -1000, 702, 26763, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1972, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1686, 41019, -1000, -1000, 4705, 1103, -1000,
	1714, -1000, 1671, -1000, 1629, 17249, 1623, 386, 1103, 382,
	381, 380, -1000, -75, -1000, -1000, -1000, -1000, -1000, -1000,
	676, 676, 676, -1000, 303, 2067, 3342, 4370, -1000, -1000,
	-1000, 36861, 1701, 1103, -1000, 1700, -1000, 774, 440, 501,
	501, 1103, -1000, -1000, 41019, 1103, 759, 755, 1103, 1103,
	41019, 41019, -1000, 36267, -1000, 35673, 35079, 1058, 41019, 34485,
	33891, 33297, 32703, 32109, -1000, 1804, -1000, 1776, -1000, -1000,
	-1000, 41019, 1103, 1103, 41019, 41019, 301, -1000, -1000, 41019,
	1103, -1000, -1000, 1053, 1045, 1017, 676, 676, 1013, 1214,
	1208, 1203, 676, 676, 1011, 1196, 27951, 1193, 238, 1010,
	992, 986, 1042, 1176, 187, 1175, 1040, 913, 985, 41019,
	1699, 41019, -1000, 188, 719, 521, 700, 1978, 1919, 1495,
	370, 384, 1103, 355, 355, 41019, -1000, 11284, -1000, -1000,
	1158, 17249, -1000, 782, 773, 773, -1000, -1000, -1000, -1000,
	-1000, -1000, 768, 41019, 782, -1000, -1000, -1000, 773, 768,
	41019, 768, 768, 768, 768, 773, 773, 773, 768, 41019,
	41019, 41019, 41019, 41019, 41019, 41019, 41019, 41019, 10685, 10685,
	10685, 616, 768, -317, -1000, 1150, -1000, 1791, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 140, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -83, 1490, 31515,
	-1000, -321, -324, -325, -326, -1000, -1000, -1000, -327, -330,
	-1000, -1000, -1000, 17249, 17249, 17249, 17249, -182, -1000, 844,
	17843, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 907, 726,
	17843, 17843, 17843, 17843, 17843, 17843, 17843, 17843, 17843, 17843,
	17843, 17843, 17843, 17843, 17843, 24981, 6911, 6911, 593, 593,
	593, 593, -1000, 16655, 17249, 17249, 593, -1000, 1103, 30921,
	16655, 16655, 17249, 1962, 712, 949, 41019, -1000, 909, -1000,
	-1000, -1000, 868, -1000, 41019, 41019, 96, 17249, 17249, 17249,
	17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249,
	17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249,
	17249, 17249, 17249, 17249, 17249, 17249, 17249, 13680, 11284, 16655,
	16655, 16655, 16655, 16655, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 514, 1759, 1321, 1482,
	-1000, 1485, -1000, -165, 22011, 17249, 1138, 2115, 1746, 41019,
	-1000, -1000, -1000, 2038, -1000, 2038, 1759, 2125, 1858, 16655,
	-1000, -1000, 2125, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1299, -1000, 41019, 1473, 2007, 41019, 1850, 1136, 438,
	-1000, 17249, 17249, 1470, -1000, 1185, 41019, -1000, -182, -1000,
	30327, -1000, -1000, 10086, -1000, 41019, 271, 41019, -1000, 24387,
	29733, 11883, -33, -1000, 11883, 1438, -1000, -8, -4, 14274,
	592, -1000, -1000, -1000, 2622, 19031, 1336, 592, 85, -1000,
	-1000, -1000, 1629, -1000, 1629, 1629, 1629, 1629, 438, 438,
	438, 438, -1000, -1000, -1000, -1000, -1000, 1698, 1677, -1000,
	1629, 1629, 1629, 1629, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1666, 1666, 1666, 1635, 1635, 350, -1000, 17249, 349,
	29139, 1986, 982, 1410, 188, 361, 1736, 1103, 1103, 1103,
	361, -1000, 1322, 1279, 1215, -1000, -393, 1466, -1000, -1000,
	2062, -1000, -1000, 687, 798, 795, 802, 41019, 177, 270,
	-1000, 338, -1000, 29139, 1103, 754, 501, 1103, -1000, 1103,
	-1000, -1000, -1000, -1000, -1000, 1103, -1000, -1000, 1463, -1000,
	1477, 827, 794, 780, 792, 1463, -1000, -1000, -117, 1463,
	-1000, 1463, -1000, 1463, -1000, 1463, -1000, 1463, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 642, 175, -245,
	41019, 177, 24981, -1000, 367, -1000, -1000, -1000, 24981, 24981,
	-1000, -1000, -1000, -1000, 1135, 1129, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -383, 41019, -1000, 184, 697,
	236, 305, 248, 41019, 158, 2027, 2026, 2023, 200, 226,
	41019, 41019, 355, 1789, 41019, 1999, 41019, -1000, -1000, -1000,
	-1000, -1000, 949, 41019, -1000, -1000, 768, 768, -1000, -1000,
	41019, 768, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	768, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41019, 41019,
	-1000, -1000, -1000, -1000, -1000, 114, -12, 302, -1000, -1000,
	-1000, -1000, -1000, 2034, -1000, 949, 735, 720, -1000, 1519,
	-1000, -1000, 912, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	907, 17843, 17843, 17843, 1494, 436, 1100, 902, 932, 736,
	736, 823, 823, 484, 484, 484, 484, 484, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1123, -1000, 1603, -1000,
	1567, 1246, 909, -1000, 1603, 1603, 1305, 16655, -1000, -1000,
	711, -1000, 17249, 909, -1000, -1000, 909, 909, 1457, 1452,
	2112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1014, 1410, 1410, 1410, 1862, 1849, 909, 1352,
	909, 1450, -1000, 1845, 1410, 1790, 1768, 1764, 1360, 1753,
	1739, 1735, 1410, 1410, 1410, 1223, 1709, 1703, 1684, 1673,
	1669, 1618, 1614, 1602, 1594, 1410, 909, 16655, 16655, 1442,
	1519, 486, -1000, 1603, 909, 909, 1603, 1603, 11284, 909,
	-1000, 41019, -1000, -300, -1000, -30, 526, 1519, -1000, 27951,
	909, -1000, 6757, -1000, 42207, -1000, -1000, -1000, -1000, -1000,
	26169, 1747, 2125, -1000, -1000, 1519, 1657, -1000, -1000, 438,
	43, 25575, -1000, -1000, 949, 949, 17249, -1000, -1000, -1000,
	-1000, -1000, -1000, 481, 2095, 318, 1519, -1000, 1445, 2106,
	-1000, -1000, -1000, 2005, 20818, -1000, 1519, 41019, 1734, 1678,
	-1000, 445, -1000, 1438, -33, -10, -1000, -1000, -1000, -1000,
	949, -1000, 1201, 272, 3220, -1000, 340, -1000, -1000, -1000,
	-1000, 1932, 56, -1000, -1000, -1000, 438, 438, -1000, -1000,
	-1000, -1000, -1000, -1000, 1122, 1122, -1000, -1000, -1000, -1000,
	-1000, 981, -1000, -1000, -1000, 974, -1000, -1000, 1598, 1795,
	349, -1000, -1000, 676, 1121, -1000, -1000, 1938, 676, 676,
	41019, -1000, -1000, 1289, 1986, 184, 41019, 721, 1788, -1000,
	1736, 1736, 1736, 41019, -1000, -1000, -1000, -1000, -1000, -1000,
	-385, 71, 328, -1000, -1000, -1000, 3969, 41019, 1653, -1000,
	172, -1000, 1277, -1000, 41019, -1000, 1638, 1650, 1103, 1103,
	-1000, -1000, -1000, 41019, 1519, -1000, -1000, -1000, -1000, 379,
	1974, 243, -1000, -1000, -199, -1000, -1000, 177, 172, 592,
	1103, -1000, -1000, -1000, -1000, -1000, -386, 1632, 376, 183,
	278, 41019, 41019, 41019, 41019, 41019, 511, -1000, -1000, -1000,
	-1000, 162, -1000, -1000, 162, -1000, -1000, -1000, -1000, 221,
	366, -1000, 41019, 41019, 607, -1000, -1000, -1000, 773, -1000,
	-1000, 773, -1000, -1000, -1000, -1000, -1000, 1959, 41019, -19,
	-352, -1000, -348, 17249, -1000, -1000, -1000, -1000, 1481, 402,
	1100, 17843, 17843, 16655, -108, 588, 588, 24981, -1000, -1000,
	-1000, 17249, 17249, 1366, 705, -1000, 17249, 967, -1000, -1000,
	-1000, 17249, 17249, 17249, 909, 258, -1000, -1000, -1000, 17249,
	17249, -1000, -1000, 17249, 17249, -1000, 17249, 17249, 18437, 909,
	18437, 17249, 17249, 18437, -1000, -1000, -1000, -1000, 18437, 17249,
	17249, 17249, 17249, 17249, 17249, 17249, 17249, 17249, -1000, -1000,
	1603, 1603, 16655, 11284, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 526, -1000, 501, 501, 501, 41019,
	-1000, -1000, -1000, -1000, -1000, -1000, 1429, 2025, -1000, 1870,
	1864, 2103, 2095, -1000, 24387, 2125, -1000, -1000, 41019, -294,
	-1000, 1901, 1903, -1000, -1000, -1000, -1000, 9487, 2038, 17249,
	1780, 41019, 1519, -1000, 21417, 41019, 41019, 24387, 24387, 24387,
	24387, 24387, -1000, 1813, 1812, -1000, 1825, 1814, 1892, 41019,
	-1000, 1588, 909, 2083, 20818, 17249, 23199, 1374, 24387, -1000,
	-1000, 24387, 41019, 8888, -1000, -1000, -21, -41, -1000, -1000,
	-1000, -1000, 2622, -1000, -1000, 334, 2004, 1928, -1000, -1000,
	-1000, -1000, 1574, -1000, 1532, 1427, 1526, 175, -1000, 1586,
	1955, 676, 676, -1000, 950, -1000, 1103, 1112, 1106, -1000,
	-1000, -1000, 375, -1000, 1994, 41019, 1778, 1772, 1770, -1000,
	-400, 948, 1646, 1487, 17249, 1642, 2059, 1393, 41019, -1000,
	-1000, 41019, -1000, 197, -1000, 349, 41019, -1000, -1000, -1000,
	270, 41019, -1000, 6715, -1000, -1000, -1000, 172, -1000, -1000,
	-1000, -1000, -1000, -1000, 41019, 190, -1000, 1637, 1078, -1000,
	-1000, 1571, -1000, -1000, -1000, -1000, 148, 235, 159, 1102,
	159, -1000, 41019, 582, 1795, 41019, -1000, -1000, -1000, 768,
	768, -1000, -1000, 1954, -1000, 1103, 1410, 17843, 17843, -1000,
	593, -1000, 1519, 909, 1629, 1629, -1000, 1629, 1635, -1000,
	1629, 123, 1629, 119, 1629, -1000, -1000, 909, 909, 1109,
	1097, -84, -1000, 949, 17249, 1581, 1576, 1410, -1000, 1624,
	1622, 1410, 1410, -1000, 949, 1360, 1562, 1358, -1000, -1000,
	-1000, -1000, 1425, 1410, 1547, -292, 909, 1508, 1508, 1508,
	1508, 1508, 1482, 1482, 1482, 1482, -1000, -1000, 909, -1000,
	-1000, 2032, 2032, 2032, 1412, 41613, 41019, -1000, -1000, -1000,
	-1000, 2095, 2082, 1417, -1000, -1000, 43, 373, -1000, 1915,
	1903, -1000, 2058, 1895, 2056, -1000, -1000, -1000, 949, -1000,
	1982, 1286, -1000, 682, 1339, -1000, -1000, 16061, 1461, 1861,
	443, 1412, 1407, 2106, 1748, 1767, 1968, -1000, -1000, -1000,
	-1000, 1803, -1000, 1786, -1000, -1000, 1539, -1000, -1000, 1321,
	1536, 271, 24387, 1401, 1401, -1000, 433, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 824, 6588, 2140, -1000, 1095, -1000,
	1088, 195, 936, -1000, -1000, 676, 676, -1000, 753, 731,
	-1000, 41019, 1620, -1000, 438, 1094, 438, 931, -1000, 906,
	-1000, -1000, -1000, -1000, 1715, 1783, -1000, -1000, -1000, -1000,
	41019, -1000, -1000, 41019, 41019, 41019, 1601, 2054, -1000, 17249,
	1592, 678, 1464, 41019, 41019, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 378, 676, -362, 225,
	224, 676, 676, 676, -403, -1000, -1000, 1399, 1397, -1000,
	-147, -1000, 17249, -1000, -1000, -1000, 1020, 1020, -1000, 1539,
	-1000, -1000, -1000, 1269, -1000, -1000, -134, 41019, 41019, 41019,
	41019, -1000, 918, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 593, 17843, -1000, -1000, 438,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17249,
	-1000, 17249, -1000, 2038, 1091, 949, 17249, 17249, -1000, 903,
	896, -1000, -1000, 909, 18437, -1000, 18437, -1000, 17249, 212,
	588, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1519, 1874, 1519, 1519, 23199, -1000, -1000, 2082,
	2080, 2051, 1882, 1886, 1886, 1915, -1000, 2049, 2047, -1000,
	1089, 2044, 1087, 729, -1000, 41019, 17249, 1519, -1000, 323,
	41019, 1519, 41019, -1000, 2078, -1000, -1000, 17249, 1549, -1000,
	17249, -1000, -1000, -1000, -1000, -1000, 6911, 2095, 1401, -1000,
	-1000, 602, -1000, 17249, -1000, -1000, -1000, 6006, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1082, 1081, -1000, -1000,
	1545, 17249, -1000, -1000, -1000, 1259, 1256, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1539, -1000, -1000, -1000, -1000,
	270, -390, 1423, 41019, 877, -1000, 1369, 1393, 263, 1519,
	1077, 676, 676, 676, 859, 853, 27951, 1362, -1000, 41019,
	330, -1000, 270, -1000, -153, -163, 1410, -1000, -1000, 2003,
	-1000, -1000, 11284, -1000, -1000, 1535, 1607, -1000, -1000, -1000,
	179, -1000, 1410, 1410, 909, -1000, 1410, 1410, 1244, 1242,
	-1000, 1358, -1000, 1075, -1000, 212, 909, 1761, -1000, -1000,
	6911, -1000, 23793, -1000, 2042, 2040, 28545, 28545, 526, 2080,
	-1000, 17249, 17249, 1880, 858, -1000, -1000, -1000, -1000, 1076,
	1072, -1000, 1071, -1000, 2138, -1000, 949, -1000, 1519, -1000,
	419, 1339, -1000, 2038, 949, 41019, 949, 37, 2078, -1000,
	1410, -1000, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
	1519, -1000, -1000, 41019, 1250, -1000, -1000, 2002, 1356, 70,
	-1000, 1349, -1000, -1000, 463, -1000, 17249, -1000, 27951, 1068,
	1064, -1000, -1000, -1000, -1000, -403, -1000, -1000, -1000, -1000,
	-1000, -1000, 339, 1382, -1000, 658, 41019, 41019, 909, 280,
	-139, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17249, -1000, 909, 1754, -1000, -249, -1000, 1344, -1000, -1000,
	-1000, -1000, -1000, 1344, 1344, -1000, -1000, 949, 1352, -1000,
	854, -1000, -1000, -1000, -1000, -1000, 41019, 1339, 41019, -1000,
	1331, 909, 1519, 2038, -1000, 1273, -1000, 339, -1000, 1517,
	1487, -1000, -1000, -1000, 15467, -1000, -1000, -1000, -1000, -1000,
	171, -133, 11284, 8289, 1252, -1000, -1000, 1843, -111, -143,
	1360, -1000, -339, -1000, -1000, 27357, -1000, -1000, -1000, -1000,
	-1000, 1306, -1000, -1000, 23199, 40425, -1000, -104, 247, -133,
	17249, 1104, 909, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -31, -1000, -1000, -1000, -1000, -1000, 1571, -1000, 1836,
	-1000, 909, -1000, -1000, -1000, 1247, -1000, 3907, -229, 1751,
	-1000, -105, -1000, -1000, -1000, 819, 1025, -1000, -1000, -1000,
	-1000, -1000, -1000, 1179, 41019, -1000, 342, -1000, -1000, -134,
	-136, -1000, -1000, 40425, -222, 592, 6911, -1000, 1740, 1725,
	2101, -1000, -1000, -1000, -1000, -1000, -1000, -405, 1238, 198,
	-1000, -141, -1000, -1000, 1989, 37, -1000, 2134, -1000, 2119,
	595, 595, -1000, 848, -405, -1000, -145, -231, -1000, -1000,
	-1000, -1000, -1000, 344, 919, -1000, -1000, -1000, -1000, 6911,
	-1000, -1000, -1000, 192, 192, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2461, 2460, 37, 3, 36, 35, 2457, 26, 101,
	189, 23, 191, 107, 2456, 2455, 2454, 2453, 2452, 2451,
	2450, 221, 217, 214, 2449, 2446, 2442, 2441, 2440, 2439,
	2438, 2433, 2432, 2429, 212, 167, 188, 2428, 2427, 2425,
	126, 180, 94, 96, 186, 2424, 2423, 85, 2418, 2416,
	2411, 177, 175, 174, 760, 2409, 171, 134, 46, 2404,
	2403, 2402, 2400, 2399, 2398, 2397, 2396, 2394, 2393, 2392,
	2391, 2390, 2389, 2388, 2387, 2386, 203, 2385, 2384, 13,
	2382, 89, 2381, 2379, 2378, 137, 2377, 2376, 2375, 32,
	2374, 2373, 2372, 2371, 2370, 2369, 2368, 151, 2367, 2366,
	2365, 2364, 192, 2363, 2362, 268, 118, 129, 2361, 2360,
	110, 185, 2359, 135, 2358, 2357, 2356, 158, 2354, 5398,
	2353, 74, 71, 2352, 80, 121, 67, 66, 30, 10,
	2351, 2350, 73, 91, 2348, 108, 75, 2347, 105, 111,
	2346, 2345, 15, 5, 2344, 1, 4, 2, 76, 2343,
	2342, 127, 2341, 2340, 2336, 100, 2335, 2334, 348, 2332,
	97, 144, 116, 82, 2329, 41, 63, 2328, 2325, 2324,
	2323, 2320, 55, 2319, 2317, 2316, 152, 49, 183, 38,
	52, 58, 147, 2315, 43, 92, 2313, 150, 2312, 2311,
	68, 39, 53, 2309, 48, 145, 133, 25, 103, 161,
	2308, 2307, 61, 84, 2306, 2298, 2297, 2296, 2295, 2294,
	81, 2293, 59, 2292, 198, 2290, 20, 2286, 60, 44,
	2284, 77, 122, 78, 40, 2283, 172, 2282, 65, 176,
	140, 173, 2280, 2279, 2278, 184, 275, 2277, 2276, 88,
	170, 155, 159, 95, 2275, 266, 2274, 2273, 98, 1939,
	2523, 19, 166, 2272, 2271, 3573, 148, 42, 14, 2270,
	130, 2269, 2268, 2267, 193, 168, 123, 965, 69, 2264,
	2261, 11, 2260, 2259, 2258, 2257, 2254, 2253, 142, 34,
	33, 31, 190, 83, 8, 162, 86, 2252, 2251, 2250,
	138, 115, 2249, 165, 164, 139, 132, 2244, 182, 154,
	169, 2241, 540, 29, 2239, 2234, 2232, 2228, 102, 2224,
	2221, 2220, 2219, 163, 153, 136, 93, 2218, 99, 131,
	160, 156, 50, 2215, 47, 2213, 2208, 28, 179, 24,
	2205, 21, 79, 70, 22, 119, 143, 2204, 0, 2203,
	12, 178, 297, 157, 2201, 2198, 7, 6, 9, 2187,
	2185, 2184, 2183, 2182, 149, 2180, 2171, 2169, 2168, 18,
	45, 17, 16, 120, 90, 2167, 2164, 5403, 3569, 146,
	2162, 195,
}

//line sql.y:7045
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 365, 366, 366, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 338, 338,
	338, 341, 341, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	369, 369, 153, 153, 151, 151, 152, 152, 221, 221,
	24, 25, 25, 231, 231, 230, 230, 230, 232, 232,
	232, 232, 267, 267, 26, 26, 26, 26, 26, 103,
	103, 340, 340, 339, 331, 331, 330, 330, 329, 337,
	337, 336, 336, 335, 38, 39, 48, 48, 48, 48,
	49, 50, 342, 342, 304, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 306, 306, 292, 292, 305, 305, 305, 305, 305,
	305, 305, 291, 291, 114, 114, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 358, 358, 358, 357, 357, 201, 201,
	201, 201, 201, 201, 201, 201, 123, 123, 132, 132,
	132, 132, 132, 121, 121, 122, 120, 120, 120, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 131, 131, 127, 127, 127, 128, 128,
	128, 129, 129, 359, 359, 359, 359, 271, 271, 271,
	271, 274, 274, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 273, 273, 273, 273, 273, 275, 275, 275,
	275, 275, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 277, 277, 277,
	277, 277, 277, 277, 277, 290, 290, 278, 278, 285,
	285, 286, 286, 286, 287, 287, 287, 288, 288, 283,
	283, 283, 283, 283, 283, 284, 284, 284, 293, 318,
	318, 317, 317, 315, 315, 315, 315, 315, 315, 315,
	315, 302, 302, 312, 312, 312, 312, 312, 301, 301,
	297, 297, 297, 298, 298, 299, 299, 296, 296, 300,
	300, 314, 314, 313, 313, 294, 294, 295, 295, 320,
	360, 360, 360, 360, 360, 361, 361, 321, 349, 351,
	351, 351, 350, 350, 347, 348, 346, 346, 346, 346,
	346, 81, 81, 81, 243, 243, 244, 244, 310, 310,
	309, 309, 309, 311, 311, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 238, 238, 238, 345,
	345, 345, 345, 345, 345, 344, 344, 344, 307, 307,
	307, 343, 343, 57, 57, 185, 185, 363, 363, 364,
	364, 364, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 85, 85, 86,
	86, 86, 86, 88, 88, 88, 323, 323, 58, 58,
	3, 3, 141, 143, 144, 144, 142, 142, 142, 142,
	142, 142, 60, 60, 59, 59, 146, 145, 147, 147,
	147, 1, 1, 2, 2, 4, 4, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 289,
	289, 289, 322, 322, 324, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 91, 90, 90, 89, 92,
	92, 92, 92, 92, 92, 92, 92, 326, 326, 326,
	61, 61, 327, 279, 280, 281, 5, 6, 303, 325,
	99, 99, 28, 37, 37, 29, 29, 29, 29, 30,
	30, 62, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 352, 352, 237, 237, 246, 246, 236, 236, 260,
	260, 260, 239, 239, 239, 240, 240, 356, 356, 356,
	64, 64, 64, 66, 66, 67, 68, 68, 262, 262,
	263, 263, 69, 70, 82, 82, 82, 82, 82, 82,
	84, 84, 84, 15, 15, 15, 15, 78, 78, 78,
	14, 14, 65, 65, 72, 353, 353, 354, 355, 355,
	355, 355, 73, 75, 31, 31, 31, 31, 31, 31,
	109, 109, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 104, 104, 104, 98, 98, 370,
	76, 77, 77, 102, 102, 102, 95, 95, 95, 101,
	101, 101, 16, 16, 17, 220, 220, 18, 18, 106,
	106, 108, 108, 108, 108, 108, 110, 110, 110, 110,
	110, 110, 110, 105, 105, 107, 107, 107, 107, 253,
	253, 253, 252, 252, 135, 135, 137, 136, 136, 138,
	138, 139, 139, 139, 139, 183, 161, 161, 218, 218,
	216, 216, 217, 217, 219, 219, 219, 219, 222, 222,
	140, 140, 140, 140, 148, 148, 149, 149, 150, 150,
	261, 261, 258, 258, 258, 257, 257, 154, 154, 154,
	156, 155, 155, 155, 155, 157, 157, 159, 159, 158,
	158, 160, 165, 165, 164, 164, 162, 162, 162, 162,
	163, 163, 163, 163, 166, 166, 119, 119, 119, 119,
	119, 119, 119, 130, 130, 130, 130, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 234, 234, 167, 167, 175, 175,
	175, 175, 168, 168, 168, 168, 168, 168, 168, 176,
	176, 176, 182, 177, 177, 173, 173, 173, 173, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 269, 269, 334, 334, 333, 333, 332, 332,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 371, 371, 282, 282, 282, 282, 174, 174, 174,
	174, 174, 100, 100, 100, 100, 100, 266, 266, 266,
	270, 270, 270, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 188, 188,
	96, 96, 186, 186, 187, 189, 189, 184, 184, 184,
	170, 170, 170, 190, 190, 191, 191, 192, 192, 194,
	193, 193, 195, 196, 196, 196, 197, 197, 198, 198,
	198, 47, 47, 47, 47, 47, 42, 42, 42, 42,
	43, 43, 43, 43, 111, 111, 111, 111, 113, 113,
	112, 112, 79, 79, 80, 80, 80, 117, 117, 118,
	118, 118, 115, 115, 116, 116, 214, 214, 199, 199,
	199, 206, 206, 206, 202, 202, 204, 204, 204, 205,
	205, 205, 203, 211, 211, 213, 213, 212, 212, 208,
	208, 209, 209, 210, 210, 210, 207, 207, 169, 169,
	169, 169, 169, 215, 215, 215, 215, 223, 223, 179,
	179, 181, 181, 180, 134, 224, 224, 228, 225, 225,
	229, 229, 229, 229, 229, 226, 226, 227, 227, 254,
	254, 254, 233, 233, 245, 245, 241, 241, 242, 242,
	235, 235, 247, 247, 247, 74, 178, 178, 319, 319,
	316, 250, 250, 251, 251, 255, 255, 259, 259, 256,
	256, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 367, 368, 264, 265, 265, 265,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	4, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 0, 2, 0, 2, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -365, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 217, -49, -39, 218,
	-50, 220, 219, 256, 221, 249, 74, 302, 303, 305,
	306, 307, 308, -84, 254, 255, 223, 36, 45, 33,
	34, 37, 227, 262, 263, 226, -10, -34, 8, -367,
	11, 432, 251, 250, 28, -12, 463, 86, -366, 603,
	-214, -199, 22, 33, 29, -198, -194, -102, -199, 20,
	18, 7, -76, -370, -76, -76, 12, 13, -76, -304,
	-306, 86, 153, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -328, -44, -41, 222, 219, 266,
	120, 121, 256, 257, 258, 221, 240, 255, 259, 254,
	275, -40, 81, 33, 463, 466, -311, 218, 224, 225,
	433, 123, 122, 75, 220, -308, 356, 495, 573, -56,
	575, 102, 104, 574, 44, 230, 576, 577, 578, 502,
	579, 239, 580, 581, 582, 583, 589, 544, 590, 591,
	592, 124, 7, -76, -259, -255, -338, -249, 89, 90,
	91, 460, 242, 493, 494, 291, 81, 41, 353, 356,
	495, 573, 302, 316, 310, 337, 329, 461, 496, 294,
	243, 279, 570, 327, 129, 575, 297, 497, 257, 361,
	362, 498, 363, 102, 305, 399, 588, 296, 499, 586,
	104, 574, 79, 51, 44, 252, 325, 226, 321, 576,
	280, 500, 471, 273, 123, 120, 595, 36, 319, 50,
	30, 585, 122, 49, 577, 144, 501, 578, 502, 365,
	344, 564, 48, 366, 258, 503, 84, 263, 465, 300,
	572, 367, 320, 368, 290, 584, 223, 504, 556, 369,
	370, 565, 505, 345, 349, 506, 391, 371, 602, 52,
	507, 508, 566, 121, 509, 78, 579, 80, 314, 315,
	510, 288, 241, 393, 341, 442, 449, 450, 108, 109,
	445, 110, 451, 111, 452, 453, 454, 443, 112, 105,
	444, 455, 456, 342, 343, 113, 457, 107, 106, 446,
	448, 114, 458, 239, 35, 372, 462, 292, 58, 267,
	394, 46, 347, 599, 45, 560, 511, 563, 340, 336,
	53, 512, 513, 514, 515, 580, 339, 313, 335, 594,
	4, 285, 581, 62, 225, 351, 350, 352, 274, 390,
	332, 516, 517, 518, 246, 82, 519, 322, 21, 520,
	521, 373, 281, 522, 56, 523, 524, 397, 255, 525,
	54, 582, 39, 526, 260, 596, 583, 527, 528, 529,
	530, 262, 531, 375, 532, 374, 346, 348, 269, 376,
	464, 533, 301, 318, 259, 587, 534, 247, 571, 261,
	266, 254, 398, 248, 535, 536, 537, 538, 539, 295,
	555, 540, 541, 306, 589, 43, 542, 543, 544, 545,
	546, 289, 284, 392, 401, 61, 83, 358, 547, 548,
	569, 312, 282, 549, 303, 55, 590, 591, 592, 276,
	593, 9, 600, 601, 378, 124, 286, 287, 47, 333,
	268, 550, 298, 551, 323, 324, 338, 311, 334, 304,
	557, 270, 379, 256, 552, 400, 283, 354, 359, 299,
	468, 275, 380, 568, 467, 331, 328, 277, 553, 381,
	231, 271, 272, 554, 558, 382, 383, 293, 384, 385,
	386, 387, 389, 388, 278, 466, 309, 326, 360, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 441, 229, -76,
	229, -158, -255, 229, -226, 362, -246, 364, 377, 372,
	382, 370, -237, 373, 375, 269, -356, 391, 229, 379,
	217, 170, 365, 374, 383, 384, 293, 389, 385, 388,
	278, -352, -338, 578, 593, 129, 330, 369, 367, 392,
	560, 387, 386, -255, 304, -262, 309, -250, -338, -249,
	307, -158, -82, 556, 221, -264, -264, -104, 560, 562,
	-177, -119, 137, -130, -133, -124, -125, -171, -172, -173,
	-174, -131, -184, 159, 160, 167, 138, -182, -134, 26,
	459, 434, 433, 170, 31, 213, 68, 69, 436, 437,
	140, 57, 409, 410, -132, 404, 411, 406, 439, 440,
	115, 441, 105, 107, 106, 342, 343, 442, 443, 444,
	108, 109, 110, 111, 112, 113, 114, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -250, -255, 234, 403, 228, 165, 432, -126, -122,
	-8, -180, 402, 407, 408, 412, 405, -338, -249, -128,
	-127, -167, 92, 98, 103, 99, -362, 116, -367, 93,
	94, 95, 96, 97, 117, 118, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 44, 378,
	378, -158, -76, -76, -76, -76, -192, -102, -194, -10,
	-8, -367, 8, -76, -8, -9, -13, -34, -36, 489,
	-35, -255, -199, -214, 12, 155, 42, 50, -197, -198,
	-12, -8, -119, 19, 23, 24, -107, 161, -119, -255,
	-77, -107, -235, 233, -76, -76, -225, -267, 304, -229,
	392, 391, -251, -227, -250, -248, -226, 390, 222, 23,
	469, 136, 25, 27, 139, 170, 19, 140, 37, 224,
	330, 240, 169, 236, 433, 217, 72, 470, 404, 406,
	402, 409, 435, 436, 403, 364, 31, 13, 472, 28,
	250, 24, 38, 163, 219, 143, 473, 253, 26, 251,
	115, 118, 475, 22, 75, 245, 14, 238, 40, 16,
	476, 477, 17, 234, 233, 155, 230, 70, 11, 213,
	29, 152, 66, 478, 131, 479, 480, 481, 482, 68,
	153, 20, 597, 407, 408, 33, 561, 459, 264, 165,
	73, 59, 562, 137, 405, 483, 484, 116, 485, 119,
	76, 567, 133, 18, 71, 42, 486, 265, 487, 235,
	598, 488, 395, 489, 154, 220, 432, 69, 490, 228,
	377, 8, 438, 32, 249, 237, 126, 67, 491, 229,
	142, 439, 440, 232, 117, 7, 130, 34, 12, 74,
	77, 410, 411, 412, 57, 125, 463, 141, 15, 492,
	396, 135, 129, -305, 153, -291, -295, -250, 244, -321,
	240, -158, -314, -313, -250, -367, -103, -245, 230, 238,
	237, 130, -342, 133, 286, 403, 228, -51, -52, -53,
	-226, 169, 577, -85, 261, 265, 87, 87, -295, -294,
	-293, -343, 265, 244, -320, -312, 236, 245, -301, 237,
	238, -296, 230, 131, -343, -296, 235, 245, 240, 244,
	265, 265, 124, 265, 124, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 260, -302, 145, -302, 467, 467,
	-308, -343, 240, 230, -343, -343, 232, 35, 35, -247,
	-296, 232, 25, -302, -302, -302, -226, 169, -302, -302,
	-302, -302, 273, 273, -302, -302, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, -302,
	-302, 229, -342, -111, 388, 293, 81, -54, 275, -37,
	-158, -245, 230, 231, -342, 262, -158, 214, -158, -239,
	153, 15, -239, -236, 378, 376, 363, 368, -239, -239,
	-239, -239, 276, 361, -297, 230, 35, 241, 378, 276,
	361, 276, 277, 276, 277, 371, 381, 276, -260, 14,
	155, 403, 366, 370, 269, 229, 270, 231, 380, -338,
	563, 277, -260, 93, -240, 153, 378, 272, -239, -265,
	-367, -251, 330, -265, -265, 32, 90, 232, -250, -78,
	-250, 93, -15, -11, -22, -21, -23, 145, -109, 378,
	-97, 170, 578, 564, 565, 566, 563, 375, 571, 569,
	567, 276, 568, 87, 133, 135, 136, 4, -119, 152,
	-168, 145, 146, 147, 148, 149, 150, 151, 155, 137,
	139, 153, 154, 134, 156, 157, 158, 159, 160, 161,
	162, 164, 163, 165, 166, 169, 215, 216, -125, -125,
	-125, -125, -182, -367, -367, -367, -125, -234, -367, -125,
	-367, -367, -367, -367, -188, -119, -367, -371, -367, -371,
	-371, -282, -367, -282, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, 214, -367,
	-367, -367, -367, -367, -282, -282, -282, -282, -282, 103,
	98, 92, -184, 99, 93, -250, -255, -8, -9, -177,
	-264, -353, -354, -161, -158, -367, 293, -250, -250, 262,
	-197, -12, -8, -192, -198, -194, -8, -76, -95, -108,
	63, 64, -110, 24, 38, 67, 65, 23, -368, 88,
	-368, -214, -368, 87, -36, -218, 86, 61, 43, 93,
	93, 87, 21, -193, -195, -119, 14, -253, 4, -252,
	25, -250, 93, 214, 101, 14, -159, 29, -158, -235,
	-235, 87, 304, -229, -267, -231, -230, 393, 395, 145,
	-254, -250, 93, 31, 88, 87, -158, -271, -274, -276,
	-275, -277, -272, -273, 327, 328, 170, 331, 333, 334,
	335, 336, 337, 338, 339, 340, 341, 344, 32, 252,
	323, 324, 325, 326, 345, 346, 347, 348, 349, 350,
	351, 352, 310, 329, 461, 311, 312, 313, 314, 315,
	316, 318, 319, 320, 321, 322, -341, -338, 86, 88,
	87, -278, 86, -119, -111, 229, -338, 230, 230, 230,
	-76, 432, -302, -302, -302, 260, 19, -44, -41, -328,
	18, -40, -41, 222, 120, 121, 219, 86, -291, 86,
	-300, -341, -338, 86, 131, 235, 130, -299, -296, -299,
	-300, -338, -184, -338, 131, 131, -338, -338, -222, -250,
	-222, -222, 23, -222, 23, -222, 23, 95, -250, -222,
	23, -222, 23, -222, 23, -222, 23, -222, 23, 31,
	78, 79, 80, 31, 82, 83, 84, -184, -338, -338,
	-184, -291, -226, -158, -338, 95, 95, 95, -302, -302,
	95, 93, 93, 93, -302, -302, 95, 93, -257, -255,
	93, 93, -344, 246, 290, 292, 95, 95, 95, 95,
	31, 93, -345, 31, 585, 584, 586, 587, 588, 93,
	95, 31, 95, 31, 95, -250, 86, -158, -117, 280,
	217, 219, 222, 76, 93, 294, 298, 299, 145, 44,
	87, 232, 229, -338, -241, 234, -241, -250, -256, -255,
	-248, 93, -119, -298, 14, 155, -260, -260, -239, -158,
	-298, -260, -239, -158, -239, -239, -239, -239, -260, -260,
	-260, -239, -255, -255, -158, -158, -158, -158, -158, -158,
	-158, -265, -265, -265, -240, -239, 563, 93, 76, -263,
	307, 341, 557, 558, 559, 87, 463, -151, -158, 563,
	563, 563, 563, 563, 563, -119, -119, -119, -119, 485,
	-175, 116, 137, 117, 118, -133, -176, -180, -182, 100,
	155, 139, 153, 154, -124, -125, -124, -124, -124, -124,
	-124, -124, -124, -124, -124, -124, -124, -124, -124, -266,
	-250, 93, 170, -129, -128, 99, -362, -129, -105, -107,
	-119, -119, -338, -250, -105, -105, -119, -101, 24, 38,
	-186, -187, 141, -184, -368, -368, 95, 99, -250, -250,
	-94, -93, 414, 415, 416, 417, 419, 420, 421, 424,
	425, 429, 430, 413, 431, 418, 423, 426, 427, 428,
	422, 326, -119, -119, -119, -119, -119, -119, -178, -177,
	-337, -336, -335, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -106, 24, 38, -105,
	-251, -256, -248, -105, -106, -106, -105, -105, 214, -214,
	-368, 87, -355, 395, 396, 561, -258, 265, -257, 25,
	-178, 93, 14, -220, 77, -250, -197, -197, 63, 64,
	59, -105, -110, -368, -35, 25, -216, -250, 62, 93,
	-283, -226, 353, 354, -119, -119, 87, -196, 27, 28,
	-158, -252, 161, -256, -158, -221, 265, -158, -136, -138,
	-139, -140, -161, -183, -367, -141, 478, 14, -151, -152,
	-160, -255, -229, -231, 87, 394, 396, 397, 76, 119,
	-119, -284, 169, -310, -309, -308, -291, -293, -294, -295,
	88, -284, -287, 359, 358, -278, -278, -278, -278, -278,
	-283, -283, -283, -283, 86, 86, -278, -278, -278, -278,
	-285, 86, -285, -285, -286, 86, -286, -321, -119, -318,
	-317, -315, -316, 239, 102, 554, 510, 463, 502, 544,
	77, -313, -196, 95, -368, -117, -242, 234, -319, -316,
	-338, -338, -338, -242, -338, 93, -338, 93, -338, 93,
	-86, -58, -1, 597, 598, 599, 87, 19, -292, -291,
	-57, 290, -324, -325, 265, -320, -314, -300, 131, -299,
	-300, -300, -338, 87, 29, 124, 124, 124, 124, 463,
	219, 32, -243, 501, 137, 554, 510, -291, -57, -266,
	232, -266, -266, 93, 93, -238, 593, -151, -113, 282,
	145, 271, 271, 229, 229, 284, -158, 295, 297, 296,
	294, 298, 299, 23, 23, 23, 283, 285, 287, 273,
	-158, -158, -241, 76, -153, -158, 26, -255, -158, -239,
	-239, -158, -239, -239, -158, -250, -97, 395, 87, 463,
	22, -98, 22, -367, 116, 117, 118, -176, -124, -125,
	-124, 136, 253, 87, -368, 25, 87, 77, -368, -368,
	-368, 87, 14, -105, -189, -187, 143, -119, -368, -368,
	-368, 87, 87, 14, -270, 25, -368, -368, -368, 87,
	87, -368, -368, 87, 87, -368, 87, 87, 87, -334,
	87, 87, 87, 87, -368, -368, -368, -368, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, -368, -368,
	-105, -105, -367, 214, -368, -368, -368, -368, -368, -251,
	-354, 560, 396, -165, -164, -162, 74, 233, 75, -367,
	-257, -368, -129, 90, -217, 90, -216, -170, -250, 95,
	99, -199, -135, -137, 14, -110, -182, 88, 87, -283,
	-203, -208, -236, -250, 93, 170, -195, 214, -166, 15,
	-169, 32, 57, -11, -367, -367, 32, 87, -154, -156,
	-155, -157, 66, 70, 72, 67, 68, 69, 73, -261,
	25, -136, -9, -8, -367, -367, -158, -151, -369, 14,
	77, -369, 87, 214, -230, -232, 398, 395, 401, -338,
	93, -85, 87, -308, -295, -200, -114, 40, -288, 360,
	-283, -283, -290, 93, -290, 95, 95, 88, -47, -42,
	-43, 33, 81, -315, -302, 93, 39, -302, -302, -250,
	88, -196, -113, -158, 137, 76, -319, -319, -319, -255,
	-2, 596, 602, 131, 86, 363, 18, -216, 87, 88,
	-185, 291, 88, -87, -250, 88, 86, -300, -300, -250,
	-367, 229, 31, 31, 554, 510, 501, -57, -185, -284,
	-338, 595, 594, 88, 231, 289, -118, 409, -115, 93,
	89, -158, -158, -158, -158, -158, 222, 219, -363, 300,
	-363, 274, 232, -151, -158, 87, -81, 248, 243, -260,
	-260, 33, -158, 395, 572, 570, -119, 136, 253, -133,
	-125, -107, 460, -268, 170, 327, 252, 325, 321, 341,
	332, 358, 323, 359, 320, 319, 318, -268, -266, -119,
	-119, -192, 144, -119, 142, -119, -119, -119, -368, 170,
	327, -119, -119, -335, -119, -119, -119, -333, -332, -129,
	-184, -368, -333, -119, -119, -332, -332, -336, -336, -336,
	-336, -336, -177, -177, -177, -177, -368, -368, -106, -251,
	-162, -296, -296, -296, -222, 87, -233, 22, 14, 57,
	57, -135, -166, -136, -110, -250, -206, 556, -211, 46,
	-209, -210, 47, -207, 48, 56, 161, -197, -119, -223,
	76, -224, -228, -184, -179, -181, -180, -367, -215, -368,
	-250, -222, -224, -138, -139, -139, -138, -139, 66, 66,
	66, 71, 66, 71, 66, -155, -255, -368, -368, -9,
	-119, -258, 77, -136, -136, -160, -255, 161, 395, 399,
	400, -308, -361, 116, 137, 31, 76, 356, 102, -359,
	169, 498, 549, 554, 510, 502, 544, -360, 235, 130,
	131, 247, 25, 41, 88, 87, 88, 87, 88, 87,
	-244, -243, -43, -42, -302, -302, 95, -338, 93, 93,
	231, 26, -158, 76, 76, 76, -88, 600, 95, 86,
	-3, 81, -119, 86, 19, -291, -184, -326, -279, -327,
	-280, -281, -5, -6, -303, -91, 57, 102, -61, 44,
	230, 580, 581, 124, -367, 593, -318, -216, -322, -324,
	-158, -121, -367, -120, -122, -126, 159, 160, -185, -158,
	-112, 280, 288, 86, -116, 90, -340, 77, 271, 356,
	271, -364, 301, 93, -364, -158, -81, -47, -158, -239,
	-239, 33, -338, -368, -133, -125, -367, -368, -278, -278,
	-278, -286, -278, 315, -278, 315, -278, -368, -368, 87,
	-368, 22, -368, -96, 438, -119, 87, 87, -368, 86,
	86, -368, -368, -334, 87, -368, 87, -368, 87, -269,
	555, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -163, 22, -163, -163, -368, 90, -158, -166,
	-190, 16, -203, 51, 333, -213, -212, 55, 47, -210,
	19, 49, 19, 30, -223, 87, 145, 87, -368, -368,
	87, 57, 214, -368, -166, -149, -148, 76, 77, -150,
	76, -148, 66, 66, -218, -368, 87, -221, -136, -166,
	-166, 214, 116, -367, -123, -132, -121, 12, 93, 93,
	-338, -358, 584, 585, 31, 95, -302, -302, 131, 131,
	-158, 86, -283, 93, -283, 95, 95, 31, 82, 83,
	84, 31, 78, 79, 80, -158, -158, -158, -158, -323,
	86, 19, -119, 86, 145, 88, -216, -216, 267, 155,
	-302, 578, 273, 273, -302, -302, -302, -90, -89, 600,
	88, -368, 87, -289, 463, 466, -119, -127, -127, -218,
	88, -331, 463, -339, -250, -250, -250, -250, 95, 97,
	-124, -283, -119, -119, -197, 93, -119, -119, 95, 95,
	-368, -333, -332, -119, -368, -146, -145, -147, 564, 116,
	31, -268, -367, 66, 18, 16, -367, -367, -258, -190,
	-191, 17, 19, -204, 53, -202, 52, -202, -212, 19,
	19, 93, 19, 93, 131, -228, -119, -181, 57, -11,
	-250, -179, -250, -192, -119, 86, -119, -129, -166, -166,
	-119, -172, 441, 105, 107, 106, 342, 343, 442, 443,
	444, 108, 109, 110, 111, 112, 113, 114, 445, 448,
	446, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, 93, 93, 86, -119, 88, 88, -218, -322, -58,
	88, -216, 95, 88, 268, -180, -367, 93, -302, -302,
	-302, 95, 95, -257, -368, 87, -250, -360, -324, 467,
	467, -368, 25, -330, -329, -251, 86, 77, -100, 155,
	463, -368, -368, -368, -368, -368, 88, 88, -368, -368,
	87, -368, -145, -147, -368, 76, -129, -219, -368, -250,
	235, 19, 19, -219, -219, -165, -191, -119, -177, -205,
	54, 76, 119, 93, 93, 93, 12, -179, 214, -197,
	-216, -143, 363, -192, -368, -216, 88, 25, 88, 602,
	131, 88, -180, -99, -367, 264, -257, 93, 93, -89,
	-92, -11, 87, 145, -216, -158, -368, 461, 73, 464,
	-119, -368, 76, 473, 564, 87, -368, -368, -368, 76,
	119, -224, -250, 88, -368, -367, -197, 88, -201, -11,
	86, -3, 264, -279, -327, -280, -281, -5, -6, -303,
	-79, 463, -329, -307, -251, 93, 95, 88, 62, 462,
	465, -334, -250, 235, -258, -144, -142, -250, 516, -350,
	-349, 459, -361, -357, 116, 137, 102, -359, 554, 510,
	125, 126, -79, -119, 86, -368, -80, 279, 560, -340,
	62, -368, -368, 87, 22, -271, -60, 527, -347, -348,
	76, -351, 369, 526, 547, 116, 93, 88, -216, 240,
	-331, 463, -142, 523, -284, -129, -348, 76, -347, 76,
	13, 12, -4, 601, 88, 281, 464, -59, 26, -143,
	-346, 248, 243, 246, 32, -346, 95, -4, 465, 527,
	242, 31, 116, -129, -146, -145, -145,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 819,
	819, 819, 0, 819, 0, 0, 819, -2, -2, 819,
	1297, 0, 819, 0, 0, -2, 751, 753, 0, 755,
	-2, 0, 0, 764, 1794, 1794, 814, 0, 0, 0,
	0, 0, 819, 819, 819, 819, 1157, 48, 819, 0,
	83, 84, 770, 771, 772, 63, 0, 1792, 1, 3,
	69, 73, 0, 0, 0, 56, 1166, 0, 76, 0,
	0, 823, 0, 821, 0, 1280, 819, 819, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 567, 495, 546, 493, 531, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 528, 1282, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1184, 153, 1298, 1295, 1296, 38, 39,
	40, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 0, 1274,
	0, 680, 919, 0, 742, 742, 0, 742, 742, 742,
	742, 0, 0, 0, 692, 0, 0, 0, 0, 739,
	0, 0, 711, 713, 0, 739, 0, 721, 745, 0,
	726, 742, 1795, 1795, 1795, 1265, 0, 736, 734, 748,
	749, 731, 732, 750, 754, 0, 759, 762, 1291, 1292,
	0, 777, 47, 1532, 769, 782, 783, 0, 815, 816,
	43, 1013, 0, 941, 946, 957, 970, 971, 972, 973,
	974, 976, 977, 0, 0, 0, 0, 982, 983, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	1138, 0, 1101, 1101, 1030, 1101, 1103, 1103, 0, 0,
	0, 1791, 1573, 1581, 1582, 1577, 1578, 1559, 1571, 1574,
	1562, 1563, 1565, 1567, 1572, 1579, 1585, 1564, 1584, 1583,
	0, 1560, 1561, 1566, 1576, 1580, 1568, 1569, 1570, 1575,
	1586, 1147, 0, 0, 0, 0, 0, 0, 273, 274,
	1012, 1254, 1103, 1103, 1103, 1103, 1103, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 278,
	279, 275, 276, 277, 996, 997, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 1794, 0,
	792, 0, 0, 0, 0, 0, 1166, 0, 1158, 1157,
	61, 0, 819, -2, 0, 0, 0, 0, 45, 0,
	50, 878, 75, 74, 1206, 0, 0, 0, 57, 1167,
	65, 67, 1168, 0, 824, 825, 0, 855, 859, 0,
	820, 0, 0, 1281, 1280, 1280, 100, 0, 1733, 1258,
	-2, -2, 0, 0, 1293, 1294, 1267, -2, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, -2, 0, 0, 165, 166, 0, 41, 398,
	0, 161, 0, 391, 337, 0, 1184, 0, 0, 0,
	0, 0, 819, 0, 1275, 142, 143, 150, 151, 152,
	371, 371, 371, 543, 0, 0, 153, 153, 502, 503,
	504, 0, 0, -2, 396, 0, 482, 0, 0, 385,
	385, 389, 387, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 520, 0, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 372, 0, 541, 542,
	434, 0, 0, 0, 0, 0, 0, 518, 519, 0,
	0, 1283, 1284, 0, 0, 0, 371, 371, 0, 0,
	0, 0, 371, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 1197, 0, 0, 0, -2, 0, 672,
	0, 0, 0, 1276, 1276, 0, 679, 0, 681, 682,
	0, 0, 683, 0, 739, 739, 737, 738, 685, 686,
	687, 688, 742, 0, 0, 380, 381, 382, 739, 742,
	0, 742, 742, 742, 742, 739, 739, 739, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 1795,
	1795, 745, 742, 0, 722, 0, 723, 724, 727, 728,
	1796, 1797, 1313, 729, 730, 1266, 752, 760, 763, 780,
	778, 779, 781, 773, 774, 775, 776, 0, 794, 795,
	800, 0, 0, 0, 0, 806, 807, 808, 0, 0,
	811, 812, 813, 0, 0, 0, 0, 0, 939, 0,
	0, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 978, 979,
	980, 981, 984, 0, 0, 0, 989, 990, 0, 0,
	0, 0, 0, 829, 0, 1139, 0, 1028, 0, 1029,
	1031, 1032, 0, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1286, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 0,
	839, 839, 0, 0, 208, 209, 210, 211, 212, 226,
	227, 228, 229, 230, 280, 1147, 0, 1012, 0, 0,
	44, 784, 785, 0, 902, 1286, 0, 0, 835, 0,
	55, 64, 66, 1166, 59, 1166, 0, 841, 0, 0,
	-2, -2, 842, 848, 849, 850, 851, 852, 52, 1793,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 349,
	1209, 0, 0, 1159, 1160, 1163, 0, 856, 1614, 860,
	0, 862, 863, 0, 822, 0, 98, 0, 918, 0,
	0, 0, 1733, 1264, 0, 102, 103, 0, 0, 0,
	355, 1269, 1270, 1271, -2, 378, 0, 355, 344, 288,
	289, 290, 337, 292, 337, 337, 337, 337, 349, 349,
	349, 349, 320, 321, 322, 323, 324, 0, 0, 307,
	337, 337, 337, 337, 327, 328, 329, 330, 331, 332,
	333, 334, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 339, 339, 339, 341, 341, 0, 42, 0, 359,
	0, 1163, 0, 0, 1197, 1278, 1288, 0, 0, 0,
	1278, 120, 0, 0, 0, 544, 578, 496, 532, 545,
	0, 499, 500, -2, 0, 0, 481, 0, 483, 0,
	379, 0, -2, 0, 389, 0, 385, 389, 386, 389,
	377, 390, 522, 523, 524, 0, 526, 527, 608, 888,
	0, 0, 0, 0, 0, 614, 615, 616, 0, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 483, 0, 529, 0, 435, 436, 437, 0, 0,
	440, 441, 442, 443, 0, 0, 446, 447, 448, 905,
	906, 449, 450, 475, 476, 477, 451, 452, 453, 454,
	455, 456, 457, 469, 470, 471, 472, 473, 474, 458,
	459, 460, 461, 462, 463, 466, 0, 135, 1188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 838, 920, 1299,
	1300, 743, 744, 0, 383, 384, 742, 742, 689, 712,
	0, 742, 693, 714, 694, 696, 695, 697, 716, 717,
	742, 700, 740, 741, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 718, 719, 720, 746, 0, 0,
	761, 765, 766, 767, 768, 0, 0, 797, 94, 802,
	803, 804, 805, 817, 810, 1014, 936, 937, 938, 0,
	940, 943, 0, 998, 1000, 945, 947, 1009, 1010, 1011,
	0, 0, 0, 0, 0, 951, 955, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 975,
	1117, 1118, 1119, 992, 281, 282, 0, 993, 0, 853,
	0, 0, 0, 991, 0, 0, 0, 0, 830, 831,
	1145, 1142, 0, 0, 1102, 1104, 0, 0, 0, 0,
	0, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1120, 0, 0, 0, 0, 0, 0, 1287,
	0, 130, 131, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	1148, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 787, 788, 790, 0, 922, 0, 903, 0,
	0, 793, 0, 834, 0, 837, 58, 60, 846, 847,
	0, 864, 843, 54, 49, 0, 0, 880, 1207, 349,
	1229, 0, 353, 354, 1169, 1170, 0, 1162, 1164, 1165,
	77, 861, 857, 0, 934, 0, 0, 917, 0, 867,
	869, 870, 871, 900, 0, 874, 0, 0, 0, 0,
	96, 919, 1259, 101, 0, 0, 106, 107, 1260, 1261,
	1262, 1263, 0, 567, -2, 430, 167, 169, 170, 171,
	162, -2, 347, 345, 346, 291, 349, 349, 314, 315,
	316, 317, 318, 319, 0, 0, 308, 309, 310, 311,
	302, 0, 303, 304, 305, 0, 306, 397, 0, 1171,
	360, 361, 363, 371, 0, 366, 367, 0, 371, 371,
	0, 392, 393, 0, 1163, 1188, 0, 0, 0, 1289,
	1288, 1288, 1288, 0, 155, 156, 157, 158, 159, 160,
	603, 0, 0, 579, 601, 602, 153, 0, 0, 163,
	485, 484, 0, 635, 0, 395, 0, 0, 389, 389,
	374, 375, 525, 0, 0, 610, 611, 612, 613, 0,
	0, 0, 512, 424, 0, 513, 514, 483, 485, 355,
	0, 438, 439, 444, 445, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 559, 560,
	561, 487, 565, 562, 487, 566, 1185, 1186, 1187, 0,
	0, 673, 0, 0, 421, 92, 1277, 678, 739, 699,
	715, 739, 691, 698, 725, 757, 801, 0, 0, 0,
	0, 809, 0, 0, 944, 999, 1001, 948, 0, 952,
	956, 0, 0, 0, 0, 0, 0, 0, 995, 1019,
	1020, 0, 0, 1157, 0, 1143, 0, 0, 1027, 1105,
	1106, 0, 0, 0, 0, 0, 1038, 1039, 1040, 0,
	0, 1043, 1044, 0, 0, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 1057, 1058, 1059, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 1015,
	0, 0, 839, 0, 1107, 1108, 1109, 1110, 1111, 1148,
	786, 789, 791, 876, 923, 924, 0, 0, 0, 0,
	904, 1285, 832, 833, 836, -2, 0, 0, 1150, 0,
	0, 864, 934, 865, 0, 844, 51, 879, 0, 1211,
	1210, 1223, 1236, 350, 351, 352, 1161, 0, 1166, 0,
	1247, 0, 0, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 910, 0, 0, 0, 0,
	901, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 356,
	357, 144, 153, 432, 168, 405, 0, 0, 287, 348,
	312, 313, 0, 335, 0, 0, 0, 426, 116, 1175,
	1174, 371, 371, 362, 0, 365, 0, 0, 0, 1290,
	338, 394, 0, 134, 0, 0, 0, 0, 0, 140,
	573, 0, 0, 580, 0, 0, 0, 494, 0, 505,
	506, 0, 607, -2, 669, 359, 0, 373, 376, 889,
	0, 0, 507, 0, 510, 511, 425, 485, 516, 517,
	530, 467, 468, 465, 0, 0, 1198, 1199, 1204, 1202,
	1203, 121, 551, 553, 552, 556, 0, 0, 489, 0,
	489, 549, 0, 421, 1171, 0, 677, 422, 423, 742,
	742, 796, 95, 0, 799, 0, 0, 0, 0, 949,
	953, 854, 0, 0, 337, 337, 1125, 337, 341, 1128,
	337, 1130, 337, 1133, 337, 1136, 1137, 0, 0, 0,
	0, 1140, 1026, 1146, 0, 0, 0, 0, 1037, 0,
	0, 0, 0, 132, 133, 1074, 0, 0, 1076, 1078,
	1079, 1049, 1075, 0, 0, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1016, 1017, 0, 1149,
	925, 930, 930, 930, 0, 0, 0, 1272, 1273, 1151,
	1152, 934, 1153, 866, 845, 881, 1229, 0, 1222, 0,
	-2, 1231, 0, 0, 0, 1237, 858, 78, 935, 81,
	0, 1247, 1255, 0, 1238, 1249, 1251, 0, 0, 0,
	1243, 0, 934, 868, 896, 898, 0, 893, 908, 909,
	911, 0, 913, 0, 915, 916, 878, 873, 875, 0,
	0, 98, 0, 934, 934, 97, 0, 921, 108, 109,
	110, 431, 172, 177, 0, 0, 0, 182, 0, 184,
	0, 0, 0, 189, 190, 371, 371, 406, 0, 284,
	286, 0, 0, 175, 349, 0, 349, 0, 342, 0,
	407, 427, 1172, 1173, 0, 0, 364, 368, 369, 370,
	0, 1279, 136, 0, 0, 0, 576, 0, 604, 0,
	0, 0, 0, 0, 0, 164, 486, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 0, 371, 0, 0,
	0, 371, 371, 371, 0, 661, 358, 0, 0, 632,
	629, 508, 0, 213, 214, 216, 0, 0, 515, 878,
	1189, 1190, 1191, 0, 1201, 1205, 124, 0, 0, 0,
	0, 563, 0, 488, 564, 674, 675, 676, 93, 684,
	690, 798, 818, 942, 950, 954, 0, 986, 1123, 349,
	1126, 1127, 1129, 1131, 1132, 1134, 1135, 987, 988, 0,
	1022, 0, 1024, 1166, 0, 1144, 0, 0, 1036, 0,
	0, 1041, 1042, 0, 0, 1048, 0, 1050, 0, 0,
	0, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1018, 0, 0, 0, 0, 902, -2, 62, 1153,
	1155, 0, 1216, 1214, 1214, 1224, 1225, 0, 0, 1232,
	0, 0, 0, 0, 82, 0, 0, 0, 1252, 0,
	0, 0, 0, 99, 1157, 890, 897, 0, 0, 891,
	0, 892, 912, 914, 872, -2, 0, 934, 934, 88,
	89, 0, 178, 0, 180, 206, 207, 0, 183, 185,
	186, 187, 193, 194, 195, 188, 0, 0, 283, 285,
	0, 0, 325, 336, 326, 0, 0, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 878, 137, 138, 139, 568,
	0, 578, 0, 0, 0, 571, 0, 497, 0, 0,
	0, 371, 371, 371, 0, 0, 0, 0, 646, 0,
	0, 609, 0, 617, 0, 0, 0, 217, 218, 0,
	1200, 550, 0, 122, 123, 0, 0, 555, 490, 491,
	1112, 1124, 0, 0, 0, 1141, 0, 0, 0, 0,
	1046, 0, 1077, 0, 1053, 0, 0, 0, 598, 599,
	0, 1073, 0, 931, 0, 0, 0, 0, 922, 1155,
	80, 0, 0, 1219, 0, 1212, 1215, 1213, 1226, 0,
	0, 1233, 0, 1235, 0, 1256, 1257, 1250, 0, 1242,
	1245, 1241, 1244, 1166, 894, 0, 899, 0, 1157, 87,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 0, 0, 340, 343, 0, 0, 0,
	569, 0, 581, 572, 0, 659, 0, 663, 0, 0,
	0, 666, 667, 668, 645, 0, 649, 399, 633, 630,
	631, 509, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 1021, 1023, 1025, 1034, 1035, 1121, 1122, 1047, 1051,
	0, 1054, 0, 0, 1055, 0, 600, 0, 927, 884,
	885, 932, 933, 0, 0, 877, 79, 1156, 1154, 1208,
	0, 1217, 1218, 1227, 1228, 1234, 0, 1240, 0, 85,
	0, 0, 0, 1166, 179, 0, 198, 0, 577, 0,
	580, 570, 657, 658, 0, 670, 662, 664, 665, 647,
	-2, 1192, 0, 0, 0, 557, 985, 0, 0, 0,
	1074, 1056, 0, 596, 597, 0, 926, 928, 929, 1220,
	1221, 1248, 1246, 895, 902, 0, 86, 412, 405, 1192,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	547, 1194, 127, 128, 478, 479, 480, 121, 1113, 0,
	1116, 0, 886, 887, 582, 0, 584, 0, -2, 400,
	413, 0, 173, 199, 200, 0, 0, 203, 204, 205,
	196, 197, 117, 0, 0, 671, 0, 1195, 1196, 124,
	1114, 1052, 583, 0, 0, 355, 0, 593, 401, 402,
	0, 408, 409, 410, 411, 201, 202, 605, 0, 0,
	554, 0, 585, 586, 594, 0, 403, 0, 404, 0,
	0, 0, 574, 0, 605, 1193, 0, 0, 595, 591,
	414, 416, 417, 0, 0, 415, 606, 575, 1115, 0,
	418, 419, 420, 587, 588, 589, 590,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 138, 3, 3, 3, 164, 156, 3,
	86, 88, 161, 159, 87, 160, 214, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 603,
	146, 145, 147, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 166, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 134, 3, 167,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
	136, 137, 139, 140, 141, 142, 143, 144, 148, 149,
	150, 151, 152, 153, 154, 155, 157, 158, 163, 165,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:531
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:536
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:572
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:591
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:601
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:607
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:626
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:632
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:636
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:642
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:801
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:833
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:845
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:849
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:855
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:878
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:883
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:893
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:903
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:916
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:938
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:942
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:948
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:952
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:966
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:980
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:984
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1016
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1027
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1032
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1042
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1047
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1052
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1058
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1063
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1069
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1078
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1084
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1100
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1119
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1124
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1129
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1136
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1143
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1154
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1165
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1171
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1175
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1207
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1211
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1227
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1231
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1237
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1241
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1247
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1257
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1262
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1295
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1304
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1313
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1390
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1402
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1412
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1416
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1426
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1430
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1444
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1450
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1514
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1525
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1531
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1771
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1775
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1779
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1789
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1796
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1800
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1804
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1808
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2039
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2048
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2056
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2066
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2138
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2147
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2153
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2157
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2163
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2172
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2176
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2180
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2184
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2188
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2192
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2208
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2212
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2216
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2220
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2224
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2292
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2302
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2306
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2312
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2316
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2322
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2326
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2332
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2338
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2342
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2346
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2350
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2363
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2369
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2375
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2381
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2385
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2394
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2398
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2404
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2410
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2416
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2420
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2424
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2428
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2432
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2451
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2464
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2469
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2473
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2479
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2493
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2503
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2507
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2511
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2515
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2519
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2523
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2527
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2531
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2535
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2539
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2543
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2547
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2551
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2555
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2559
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2563
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2567
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2571
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2575
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2579
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2583
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2587
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2591
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2595
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2599
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2628
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2636
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2687
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2705
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2709
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2718
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2722
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2726
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2734
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2740
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2754
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2758
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2762
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2766
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2770
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2774
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2778
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2782
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2786
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2790
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2800
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2804
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2808
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2812
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2816
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2820
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2824
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2836
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2878
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2888
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2892
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2896
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2900
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2904
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2908
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2930
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2937
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2944
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2951
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2957
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2993
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3003
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3056
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3118
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3127
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3135
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3144
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3151
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3163
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3172
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3187
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3201
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3205
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3211
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3217
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3223
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3233
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3237
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3243
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3249
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3255
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3261
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3285
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3291
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3297
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3301
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3305
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3311
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3315
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3320
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3324
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3329
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3333
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3339
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3343
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3347
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3351
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3355
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3359
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3363
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3367
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3371
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3375
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3379
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3383
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3387
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3391
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3395
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3399
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3403
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3407
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3411
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3415
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3419
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3423
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3443
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3458
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3462
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3467
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3472
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3477
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3482
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3487
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3493
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3499
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3504
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3510
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3516
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3526
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3531
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3535
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3540
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3545
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3550
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3555
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3561
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3567
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3574
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3581
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3588
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3606
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3612
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3618
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3624
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3630
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3636
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3642
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3648
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3664
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3670
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3674
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3680
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3693
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3697
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3939
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = "extended "
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3969
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3973
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3977
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3987
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3991
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4001
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4007
		{
			yyVAL.empty = struct{}{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.empty = struct{}{}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.empty = struct{}{}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4060
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4083
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4087
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4091
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4095
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4099
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4103
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = yyDollar[1].str
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = yyDollar[1].str
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = yyDollar[1].str
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4180
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4184
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4190
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4196
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4200
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4204
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4208
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4311
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4315
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			setAllowComments(yylex, true)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4343
		{
			yyVAL.strs = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = SQLCacheStr
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4379
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4383
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4418
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4424
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4437
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4442
		{
			yyVAL.strs = nil
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4458
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = SQLCacheStr
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = DistinctStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = DistinctStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = StraightJoinHint
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4494
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4498
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4504
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4508
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4512
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4516
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4521
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4541
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4545
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4551
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4557
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4571
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4575
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4579
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4589
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4595
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4599
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4608
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4614
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4618
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4624
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4634
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4638
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4642
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4646
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4652
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4669
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4673
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4677
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4681
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4689
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4693
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4699
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4701
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4704
		{
			yyVAL.empty = struct{}{}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.empty = struct{}{}
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4709
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4730
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4734
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4738
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4744
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4750
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4754
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4758
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4762
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4768
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4772
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4782
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4786
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4811
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4817
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4827
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4831
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4835
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4839
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4844
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4848
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4852
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4856
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4934
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5125
		{
			yyVAL.str = ""
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5129
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5135
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5139
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5146
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5150
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5154
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5158
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5164
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5168
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5172
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5176
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5180
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5184
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5188
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5194
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5198
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5202
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5209
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5215
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5219
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5478
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5483
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5487
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5493
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5497
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5515
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5519
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5523
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5527
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5531
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5535
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5539
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5543
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5547
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5551
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5555
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5561
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5565
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5569
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5573
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5577
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5581
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5585
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5589
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5593
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5648
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5652
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5656
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5660
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5664
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5688
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5692
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5698
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5702
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5706
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5710
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5714
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5720
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5724
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5728
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5732
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5736
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5740
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5744
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5748
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5752
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5756
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5771
		{
			yyVAL.str = string("")
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5775
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5781
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5785
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5791
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5806
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5810
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5814
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5843
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5861
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5867
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5873
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5877
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5883
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5888
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5892
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5896
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5905
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5911
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5915
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5919
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5928
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5932
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5936
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5940
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5947
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5951
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5955
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5959
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5965
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5969
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5973
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5977
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = ""
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5990
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5999
		{
			yyVAL.str = ""
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6003
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6018
		{
			yyVAL.str = ""
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6022
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6027
		{
			yyVAL.str = "cascaded"
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6035
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6044
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6050
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6056
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6062
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6080
		{
			yyVAL.str = ""
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6090
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6094
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6100
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6104
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6108
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6121
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = " header"
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6139
		{
			yyVAL.str = " manifest on"
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = " manifest off"
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6148
		{
			yyVAL.str = ""
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = " overwrite on"
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = " overwrite off"
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6162
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6167
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6171
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6177
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6181
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6196
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6200
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6206
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6210
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6216
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6220
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6229
		{
			yyVAL.str = ""
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6233
		{
			yyVAL.str = " optionally"
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6246
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6250
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6254
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6258
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6262
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6268
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6272
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6276
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6280
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6289
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6295
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6305
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6309
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6315
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6330
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6334
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6340
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6346
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6350
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6356
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6360
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6364
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6368
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6372
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6380
		{
			yyVAL.str = "charset"
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6407
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6409
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6412
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6417
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6419
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6424
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6427
		{
			yyVAL.empty = struct{}{}
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6429
		{
			yyVAL.empty = struct{}{}
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6431
		{
			yyVAL.empty = struct{}{}
		}
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6435
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6444
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6451
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6455
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6461
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6465
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6472
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6478
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6482
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6488
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6492
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6499
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7015
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7024
		{
			decNesting(yylex)
		}
	case 1794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7029
		{
			skipToEnd(yylex)
		}
	case 1795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7034
		{
			skipToEnd(yylex)
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7038
		{
			skipToEnd(yylex)
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7042
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
