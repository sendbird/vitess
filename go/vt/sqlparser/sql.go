// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const INTERVAL = 57537
const JSON_EXTRACT_OP = 57538
const JSON_UNQUOTE_EXTRACT_OP = 57539
const CREATE = 57540
const ALTER = 57541
const DROP = 57542
const RENAME = 57543
const ANALYZE = 57544
const ADD = 57545
const FLUSH = 57546
const CHANGE = 57547
const MODIFY = 57548
const DEALLOCATE = 57549
const REVERT = 57550
const SCHEMA = 57551
const TABLE = 57552
const INDEX = 57553
const VIEW = 57554
const TO = 57555
const IGNORE = 57556
const IF = 57557
const PRIMARY = 57558
const COLUMN = 57559
const SPATIAL = 57560
const FULLTEXT = 57561
const KEY_BLOCK_SIZE = 57562
const CHECK = 57563
const INDEXES = 57564
const ACTION = 57565
const CASCADE = 57566
const CONSTRAINT = 57567
const FOREIGN = 57568
const NO = 57569
const REFERENCES = 57570
const RESTRICT = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const COALESCE = 57580
const EXCHANGE = 57581
const REBUILD = 57582
const PARTITIONING = 57583
const REMOVE = 57584
const PREPARE = 57585
const EXECUTE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const VINDEX = 57594
const VINDEXES = 57595
const DIRECTORY = 57596
const NAME = 57597
const UPGRADE = 57598
const STATUS = 57599
const VARIABLES = 57600
const WARNINGS = 57601
const CASCADED = 57602
const DEFINER = 57603
const OPTION = 57604
const SQL = 57605
const UNDEFINED = 57606
const SEQUENCE = 57607
const MERGE = 57608
const TEMPORARY = 57609
const TEMPTABLE = 57610
const INVOKER = 57611
const SECURITY = 57612
const FIRST = 57613
const AFTER = 57614
const LAST = 57615
const VITESS_MIGRATION = 57616
const CANCEL = 57617
const RETRY = 57618
const COMPLETE = 57619
const CLEANUP = 57620
const BEGIN = 57621
const START = 57622
const TRANSACTION = 57623
const COMMIT = 57624
const ROLLBACK = 57625
const SAVEPOINT = 57626
const RELEASE = 57627
const WORK = 57628
const BIT = 57629
const TINYINT = 57630
const SMALLINT = 57631
const MEDIUMINT = 57632
const INT = 57633
const INTEGER = 57634
const BIGINT = 57635
const INTNUM = 57636
const REAL = 57637
const DOUBLE = 57638
const FLOAT_TYPE = 57639
const DECIMAL_TYPE = 57640
const NUMERIC = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const TEXT = 57652
const TINYTEXT = 57653
const MEDIUMTEXT = 57654
const LONGTEXT = 57655
const BLOB = 57656
const TINYBLOB = 57657
const MEDIUMBLOB = 57658
const LONGBLOB = 57659
const JSON = 57660
const JSON_SCHEMA_VALID = 57661
const JSON_SCHEMA_VALIDATION_REPORT = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const NOW = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const JSON_ARRAY = 57760
const JSON_OBJECT = 57761
const JSON_QUOTE = 57762
const JSON_DEPTH = 57763
const JSON_TYPE = 57764
const JSON_LENGTH = 57765
const JSON_VALID = 57766
const JSON_ARRAY_APPEND = 57767
const JSON_ARRAY_INSERT = 57768
const JSON_INSERT = 57769
const JSON_MERGE = 57770
const JSON_MERGE_PATCH = 57771
const JSON_MERGE_PRESERVE = 57772
const JSON_REMOVE = 57773
const JSON_REPLACE = 57774
const JSON_SET = 57775
const JSON_UNQUOTE = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const WITHOUT = 57784
const VALIDATION = 57785
const UNUSED = 57786
const ARRAY = 57787
const CUME_DIST = 57788
const DESCRIPTION = 57789
const DENSE_RANK = 57790
const EMPTY = 57791
const EXCEPT = 57792
const FIRST_VALUE = 57793
const GROUPING = 57794
const GROUPS = 57795
const JSON_TABLE = 57796
const LAG = 57797
const LAST_VALUE = 57798
const LATERAL = 57799
const LEAD = 57800
const NTH_VALUE = 57801
const NTILE = 57802
const OF = 57803
const OVER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const RECURSIVE = 57807
const ROW_NUMBER = 57808
const SYSTEM = 57809
const WINDOW = 57810
const ACTIVE = 57811
const ADMIN = 57812
const BUCKETS = 57813
const CLONE = 57814
const COMPONENT = 57815
const DEFINITION = 57816
const ENFORCED = 57817
const EXCLUDE = 57818
const FOLLOWING = 57819
const GEOMCOLLECTION = 57820
const GET_MASTER_PUBLIC_KEY = 57821
const HISTOGRAM = 57822
const HISTORY = 57823
const INACTIVE = 57824
const INVISIBLE = 57825
const LOCKED = 57826
const MASTER_COMPRESSION_ALGORITHMS = 57827
const MASTER_PUBLIC_KEY_PATH = 57828
const MASTER_TLS_CIPHERSUITES = 57829
const MASTER_ZSTD_COMPRESSION_LEVEL = 57830
const NESTED = 57831
const NETWORK_NAMESPACE = 57832
const NOWAIT = 57833
const NULLS = 57834
const OJ = 57835
const OLD = 57836
const OPTIONAL = 57837
const ORDINALITY = 57838
const ORGANIZATION = 57839
const OTHERS = 57840
const PATH = 57841
const PERSIST = 57842
const PERSIST_ONLY = 57843
const PRECEDING = 57844
const PRIVILEGE_CHECKS_USER = 57845
const PROCESS = 57846
const RANDOM = 57847
const REFERENCE = 57848
const REQUIRE_ROW_FORMAT = 57849
const RESOURCE = 57850
const RESPECT = 57851
const RESTART = 57852
const RETAIN = 57853
const REUSE = 57854
const ROLE = 57855
const SECONDARY = 57856
const SECONDARY_ENGINE = 57857
const SECONDARY_LOAD = 57858
const SECONDARY_UNLOAD = 57859
const SKIP = 57860
const SRID = 57861
const THREAD_PRIORITY = 57862
const TIES = 57863
const UNBOUNDED = 57864
const VCPU = 57865
const VISIBLE = 57866
const RETURNING = 57867
const FORMAT = 57868
const TREE = 57869
const VITESS = 57870
const TRADITIONAL = 57871
const LOCAL = 57872
const LOW_PRIORITY = 57873
const NO_WRITE_TO_BINLOG = 57874
const LOGS = 57875
const ERROR = 57876
const GENERAL = 57877
const HOSTS = 57878
const OPTIMIZER_COSTS = 57879
const USER_RESOURCES = 57880
const SLOW = 57881
const CHANNEL = 57882
const RELAY = 57883
const EXPORT = 57884
const AVG_ROW_LENGTH = 57885
const CONNECTION = 57886
const CHECKSUM = 57887
const DELAY_KEY_WRITE = 57888
const ENCRYPTION = 57889
const ENGINE = 57890
const INSERT_METHOD = 57891
const MAX_ROWS = 57892
const MIN_ROWS = 57893
const PACK_KEYS = 57894
const PASSWORD = 57895
const FIXED = 57896
const DYNAMIC = 57897
const COMPRESSED = 57898
const REDUNDANT = 57899
const COMPACT = 57900
const ROW_FORMAT = 57901
const STATS_AUTO_RECALC = 57902
const STATS_PERSISTENT = 57903
const STATS_SAMPLE_PAGES = 57904
const STORAGE = 57905
const MEMORY = 57906
const DISK = 57907
const PARTITIONS = 57908
const LINEAR = 57909
const RANGE = 57910
const LIST = 57911
const SUBPARTITION = 57912
const SUBPARTITIONS = 57913
const HASH = 57914

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	590, 145,
	-2, 151,
	-1, 48,
	128, 151,
	168, 151,
	324, 151,
	-2, 459,
	-1, 55,
	35, 674,
	228, 674,
	239, 674,
	274, 688,
	275, 688,
	-2, 676,
	-1, 60,
	230, 699,
	-2, 697,
	-1, 114,
	227, 1214,
	-2, 119,
	-1, 116,
	1, 146,
	590, 146,
	-2, 151,
	-1, 126,
	129, 360,
	233, 360,
	-2, 453,
	-1, 145,
	128, 151,
	168, 151,
	324, 151,
	-2, 468,
	-1, 670,
	212, 1235,
	-2, 1231,
	-1, 671,
	212, 1236,
	-2, 1232,
	-1, 745,
	59, 767,
	-2, 782,
	-1, 782,
	144, 1629,
	-2, 112,
	-1, 783,
	144, 1476,
	-2, 113,
	-1, 789,
	144, 1558,
	-2, 1208,
	-1, 934,
	144, 1407,
	-2, 1205,
	-1, 973,
	238, 41,
	243, 41,
	-2, 371,
	-1, 1050,
	1, 507,
	590, 507,
	-2, 151,
	-1, 1283,
	59, 768,
	-2, 787,
	-1, 1284,
	59, 769,
	-2, 788,
	-1, 1337,
	128, 151,
	168, 151,
	324, 151,
	-2, 403,
	-1, 1415,
	129, 360,
	233, 360,
	-2, 453,
	-1, 1424,
	238, 42,
	243, 42,
	-2, 372,
	-1, 1714,
	212, 1240,
	-2, 1234,
	-1, 1796,
	128, 151,
	168, 151,
	324, 151,
	-2, 404,
	-1, 1803,
	25, 170,
	-2, 172,
	-1, 2034,
	86, 39,
	-2, 823,
	-1, 2085,
	77, 94,
	86, 94,
	-2, 843,
	-1, 2150,
	565, 602,
	-2, 589,
	-1, 2281,
	49, 1176,
	-2, 1170,
	-1, 2485,
	86, 39,
	-2, 824,
	-1, 2523,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 816,
	-1, 2830,
	22, 1560,
	32, 1560,
	169, 1560,
	250, 1560,
	304, 1560,
	305, 1560,
	306, 1560,
	307, 1560,
	308, 1560,
	309, 1560,
	310, 1560,
	312, 1560,
	313, 1560,
	314, 1560,
	315, 1560,
	316, 1560,
	317, 1560,
	318, 1560,
	319, 1560,
	320, 1560,
	321, 1560,
	322, 1560,
	323, 1560,
	325, 1560,
	327, 1560,
	328, 1560,
	329, 1560,
	330, 1560,
	331, 1560,
	332, 1560,
	333, 1560,
	334, 1560,
	335, 1560,
	338, 1560,
	339, 1560,
	340, 1560,
	341, 1560,
	342, 1560,
	343, 1560,
	344, 1560,
	345, 1560,
	346, 1560,
	454, 1560,
	-2, 547,
}

const yyPrivate = 57344

const yyLast = 40423

var yyAct = [...]int{
	670, 2611, 2613, 679, 2881, 2240, 2612, 2762, 2589, 672,
	2875, 1793, 2832, 2831, 2828, 2418, 2812, 2715, 1340, 2333,
	1748, 2340, 1728, 1988, 2374, 1114, 1262, 760, 2292, 2022,
	1730, 2626, 3, 2295, 2401, 2738, 1859, 738, 2342, 2400,
	1298, 591, 96, 663, 37, 2631, 2296, 2057, 2239, 2293,
	673, 182, 2238, 661, 182, 2204, 555, 182, 1752, 662,
	2494, 1767, 571, 617, 182, 2403, 2514, 2290, 2488, 2080,
	2282, 2049, 182, 2480, 2187, 1826, 2147, 664, 2117, 1849,
	1831, 2118, 761, 2119, 154, 1394, 2069, 182, 589, 1782,
	2041, 981, 38, 1285, 583, 1684, 2024, 1683, 787, 1621,
	1708, 587, 937, 1422, 1579, 1631, 1759, 1868, 140, 571,
	1901, 1062, 571, 182, 571, 1771, 2111, 1833, 1438, 740,
	95, 742, 968, 746, 36, 1003, 1848, 1772, 963, 1329,
	1307, 2087, 1091, 1774, 784, 1265, 1643, 1133, 1598, 600,
	1530, 763, 1711, 974, 91, 1846, 1526, 944, 1429, 969,
	1512, 945, 1822, 970, 941, 1753, 1328, 1312, 752, 1112,
	971, 1326, 117, 1535, 1107, 595, 1389, 1414, 1680, 123,
	124, 774, 748, 1046, 750, 76, 85, 97, 578, 1200,
	1721, 1204, 98, 2771, 89, 2882, 2392, 2371, 2140, 1861,
	1862, 1863, 1861, 157, 118, 2166, 2165, 1899, 2138, 2389,
	588, 749, 77, 1498, 747, 8, 7, 1134, 768, 2572,
	773, 528, 6, 2195, 2196, 2793, 125, 90, 1586, 985,
	1585, 2616, 1584, 1725, 1726, 1583, 1582, 1581, 1568, 1573,
	1008, 184, 185, 186, 938, 754, 581, 2616, 582, 2792,
	2847, 119, 2020, 2390, 579, 1016, 2278, 2468, 954, 949,
	2895, 2857, 2872, 741, 739, 2357, 2548, 1591, 2051, 2711,
	2710, 1007, 1006, 2582, 788, 2396, 2583, 1134, 1005, 2894,
	781, 2822, 755, 102, 762, 961, 2885, 1292, 2788, 960,
	2870, 1019, 1020, 2590, 1023, 1024, 1025, 1026, 984, 2813,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 2615, 1887, 1009, 1010, 1011,
	119, 959, 1144, 1021, 104, 105, 78, 108, 2821, 78,
	114, 2615, 78, 179, 2793, 80, 523, 1840, 78, 2203,
	2787, 1939, 1166, 2452, 1404, 2330, 2331, 1098, 953, 1100,
	2060, 955, 184, 185, 186, 2021, 734, 735, 736, 737,
	2329, 1836, 745, 2720, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1175, 1174, 1176, 1177, 2061, 1788, 1789, 2644, 1330,
	2393, 1331, 1144, 2096, 119, 2194, 2095, 1097, 1099, 2097,
	776, 777, 558, 1727, 958, 2174, 1055, 1056, 1936, 2173,
	1787, 1081, 732, 87, 1110, 1937, 87, 1086, 1087, 87,
	731, 1069, 2336, 1049, 1069, 87, 1070, 1140, 2763, 1070,
	1132, 2108, 1806, 1805, 1068, 2230, 1067, 2443, 1058, 2141,
	2491, 1082, 1075, 545, 2441, 569, 1572, 573, 1045, 567,
	2420, 1269, 558, 558, 2148, 958, 1488, 950, 1574, 1575,
	1576, 558, 956, 1869, 952, 951, 2413, 2337, 1913, 1910,
	1912, 1911, 2169, 1907, 2414, 2884, 1915, 1518, 1916, 1902,
	1917, 1513, 1084, 1085, 1104, 1090, 1051, 1140, 178, 544,
	1095, 2574, 2339, 1022, 1096, 558, 2182, 2422, 2573, 2143,
	1489, 542, 1490, 1918, 1101, 1028, 2334, 1835, 1088, 1027,
	1906, 1904, 120, 956, 142, 2698, 1109, 1872, 1089, 87,
	2344, 2345, 1083, 1076, 1768, 162, 1094, 2335, 1908, 1272,
	2848, 2421, 964, 2570, 965, 962, 965, 1407, 992, 1001,
	1002, 539, 990, 182, 1000, 182, 1178, 999, 182, 998,
	553, 997, 1905, 996, 995, 994, 152, 989, 2346, 2341,
	2889, 141, 1527, 1178, 2879, 550, 1102, 775, 1937, 958,
	1044, 1847, 2186, 2868, 957, 942, 571, 571, 571, 942,
	977, 983, 159, 940, 160, 942, 976, 2231, 1428, 2183,
	1079, 1893, 1523, 1120, 571, 571, 2025, 2027, 559, 1012,
	1416, 1417, 151, 150, 177, 2364, 2168, 2158, 1139, 1136,
	1137, 1138, 1143, 1145, 1142, 1402, 1141, 2759, 1401, 2181,
	1400, 1524, 2180, 1135, 2343, 957, 983, 1398, 1126, 2199,
	529, 2356, 531, 546, 1048, 561, 2346, 560, 535, 37,
	533, 537, 547, 538, 2569, 532, 1951, 543, 559, 559,
	534, 548, 549, 551, 565, 564, 552, 559, 541, 562,
	527, 1065, 2770, 1071, 1072, 1073, 1074, 2139, 1139, 1136,
	1137, 1138, 1143, 1145, 1142, 2721, 1141, 1519, 993, 982,
	1754, 1755, 991, 1135, 986, 976, 1111, 522, 1517, 2529,
	2205, 559, 1427, 1018, 987, 1889, 2776, 146, 1418, 153,
	2510, 1415, 1105, 147, 148, 1181, 1182, 1183, 1184, 163,
	2092, 2142, 2056, 1103, 988, 1189, 2492, 1192, 168, 2171,
	2838, 1179, 1180, 2189, 982, 1047, 1839, 2189, 2188, 2394,
	2395, 2786, 2188, 116, 2836, 2012, 1116, 1117, 1720, 957,
	1316, 2338, 2397, 2840, 2841, 1260, 1241, 1060, 2344, 2345,
	1794, 1178, 182, 2026, 1177, 2837, 571, 571, 2328, 81,
	1092, 2614, 1185, 1500, 1499, 1501, 1502, 1503, 1536, 757,
	1838, 2207, 182, 2877, 111, 1064, 2878, 2614, 2876, 983,
	1108, 2782, 1004, 1078, 86, 1938, 1273, 86, 2565, 983,
	86, 571, 1057, 1054, 1080, 182, 86, 77, 983, 1276,
	571, 1129, 1127, 1275, 740, 1278, 571, 1279, 1128, 1066,
	2504, 1837, 983, 742, 1903, 1520, 1202, 1332, 1203, 1150,
	1130, 563, 1206, 2223, 1644, 784, 1261, 1514, 1644, 1515,
	1965, 155, 1516, 2217, 2216, 2215, 2209, 2131, 2213, 556,
	2208, 112, 2206, 1148, 1149, 1277, 1149, 2211, 2640, 95,
	2540, 2539, 2343, 1876, 557, 1437, 2210, 184, 185, 186,
	1436, 1623, 1426, 1886, 2346, 1255, 1884, 1247, 1248, 1249,
	1250, 1251, 1881, 2212, 2214, 1603, 1881, 982, 992, 990,
	1888, 2798, 986, 976, 1327, 1266, 1673, 982, 1261, 1604,
	1605, 1602, 987, 976, 979, 980, 982, 942, 1017, 2864,
	1093, 973, 977, 1150, 1943, 1944, 1945, 149, 1537, 1885,
	982, 98, 1063, 1883, 1050, 2890, 976, 979, 980, 2530,
	942, 2752, 972, 2799, 973, 977, 1760, 1761, 1317, 1263,
	1172, 1173, 1175, 1174, 1176, 1177, 1274, 143, 1624, 739,
	144, 1593, 1595, 1596, 87, 741, 1297, 1147, 1294, 1148,
	1149, 2892, 2706, 1292, 2705, 788, 2225, 182, 1601, 2865,
	1648, 1390, 1594, 2753, 1649, 684, 685, 686, 1322, 1323,
	2696, 1399, 1665, 1654, 1655, 1656, 1657, 1667, 1658, 1659,
	1660, 1672, 1668, 1661, 1662, 1669, 1670, 1671, 1663, 1664,
	1666, 1507, 571, 779, 1424, 2605, 184, 185, 186, 2891,
	2537, 1505, 1433, 184, 185, 186, 1435, 2099, 2604, 571,
	571, 2547, 571, 2546, 571, 571, 1150, 571, 571, 571,
	571, 571, 571, 1170, 1171, 1172, 1173, 1175, 1174, 1176,
	1177, 1147, 571, 1148, 1149, 1150, 182, 1471, 1280, 1495,
	2372, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 182, 1150, 1506, 2362, 1974, 173, 174, 175,
	176, 2115, 1150, 571, 1504, 182, 1168, 1169, 1170, 1171,
	1172, 1173, 1175, 1174, 1176, 1177, 1525, 2114, 1843, 571,
	2449, 182, 1484, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1152, 1430, 1430, 1508, 1420, 1493, 1413, 182, 2731, 1292,
	1492, 1491, 1494, 1482, 182, 1432, 1301, 1405, 1406, 1476,
	1473, 1472, 1447, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 571, 571, 571, 2779, 1956, 2778, 1440, 2756,
	1441, 2755, 1443, 1445, 1468, 1955, 1449, 1451, 1453, 1455,
	1457, 2417, 1397, 2754, 1147, 1292, 1148, 1149, 1150, 1431,
	1119, 2701, 2639, 182, 1410, 1302, 1411, 1409, 2637, 2601,
	1423, 2544, 2536, 1147, 2124, 1148, 1149, 1474, 1475, 2112,
	1434, 1257, 1897, 1480, 1481, 184, 185, 186, 1150, 1532,
	1896, 1147, 1751, 1148, 1149, 184, 185, 186, 1469, 1857,
	1147, 1733, 1148, 1149, 1569, 1466, 1467, 1533, 671, 1622,
	1496, 1483, 1479, 1628, 1628, 1625, 1629, 1540, 1478, 1626,
	1626, 1477, 1634, 571, 1544, 1303, 1546, 1547, 1548, 1549,
	1538, 1539, 1150, 1553, 1528, 1106, 94, 92, 571, 571,
	2447, 1292, 1292, 960, 1543, 2047, 2883, 1567, 93, 2853,
	1292, 1550, 1551, 1552, 2047, 2819, 1150, 2728, 1403, 183,
	1150, 2727, 183, 2047, 2806, 183, 2047, 2802, 101, 1599,
	572, 1542, 183, 1681, 119, 959, 2690, 1305, 2088, 100,
	183, 99, 1166, 1607, 2198, 1597, 1147, 2689, 1148, 1149,
	94, 1563, 1564, 1565, 1292, 183, 2588, 1712, 182, 1566,
	2794, 1292, 1292, 571, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1175, 1174, 1176, 1177, 2866, 1147, 572, 1148, 1149,
	572, 183, 572, 2047, 2772, 1681, 2149, 182, 2580, 2769,
	571, 1600, 2464, 1292, 1738, 2291, 1739, 2127, 1997, 1292,
	182, 2089, 1304, 2323, 571, 2503, 1150, 1802, 1292, 182,
	2091, 182, 1937, 182, 182, 571, 1961, 2065, 571, 1630,
	1147, 2503, 1148, 1149, 2058, 1150, 1636, 1637, 2058, 571,
	1714, 2505, 1712, 95, 1716, 1717, 100, 184, 185, 186,
	784, 1855, 1803, 784, 1147, 1146, 1148, 1149, 1147, 1150,
	1148, 1149, 95, 1150, 1606, 1645, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1744,
	101, 2066, 1713, 1882, 1150, 1715, 2047, 2697, 1718, 1719,
	2781, 100, 1770, 99, 571, 2580, 1292, 92, 1960, 2047,
	2578, 1850, 1851, 1852, 94, 2066, 1854, 1856, 93, 2503,
	1812, 1813, 1814, 1815, 1952, 1714, 2047, 1989, 1881, 1292,
	571, 2066, 1797, 2508, 1292, 1743, 571, 1433, 1780, 2464,
	1433, 1807, 1433, 1808, 1809, 1810, 1811, 1732, 1880, 754,
	1881, 1798, 2767, 2352, 1147, 2524, 1148, 1149, 2266, 1818,
	1819, 1820, 1821, 1146, 1292, 1746, 1870, 1765, 1982, 1292,
	1292, 1801, 1292, 1147, 1828, 1148, 1149, 1292, 571, 1786,
	1622, 1763, 1834, 2354, 2353, 1622, 1622, 2350, 2351, 1952,
	788, 2844, 1785, 788, 2350, 2349, 1784, 1147, 1800, 1148,
	1149, 1147, 1799, 1148, 1149, 2066, 1292, 1952, 1292, 1937,
	2167, 1842, 1393, 2152, 2145, 2146, 2047, 2046, 1393, 1392,
	985, 182, 1147, 1982, 1148, 1149, 1338, 1337, 182, 1971,
	1430, 1970, 1867, 182, 182, 1881, 1864, 182, 1166, 182,
	1875, 1758, 1150, 1878, 1296, 1879, 182, 1723, 1824, 1825,
	1577, 1522, 1150, 182, 1829, 1841, 1150, 654, 1845, 1853,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1174, 1176,
	1177, 1166, 1324, 1954, 1162, 744, 1163, 1873, 2088, 1892,
	1890, 182, 571, 1874, 1894, 1895, 1891, 1877, 1829, 984,
	1164, 1165, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1175, 1174, 1176, 1177, 1166, 1150, 1950, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1175, 1174, 1176, 1177, 967, 570,
	966, 2809, 2043, 2375, 2466, 1900, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1175, 1174, 1176, 1177, 94, 1150, 2694,
	87, 2089, 2717, 1299, 2687, 1150, 2651, 2549, 2564, 1150,
	1937, 2561, 87, 2542, 1150, 1462, 2458, 2457, 1395, 1827,
	1928, 1929, 2415, 2377, 2373, 1931, 786, 1150, 2153, 939,
	1147, 946, 1148, 1149, 1932, 1823, 1150, 1817, 1816, 1510,
	1147, 1921, 1148, 1149, 1147, 1425, 1148, 1149, 2566, 1421,
	1599, 1391, 113, 2553, 1952, 2121, 1150, 2550, 2551, 2552,
	1049, 2515, 2516, 1948, 1150, 1463, 1464, 1465, 2120, 1150,
	2419, 183, 1459, 183, 1150, 2718, 183, 1840, 2861, 1150,
	2462, 1736, 2859, 2833, 2791, 1935, 2521, 2455, 2736, 2518,
	1150, 2454, 2369, 1147, 182, 1148, 1149, 2116, 2850, 2520,
	2554, 2555, 182, 2368, 572, 572, 572, 571, 1628, 2006,
	2031, 1946, 1600, 571, 1626, 2121, 2018, 2310, 2005, 1460,
	1461, 2367, 572, 572, 571, 2291, 1147, 2035, 1148, 1149,
	2132, 1922, 2029, 1147, 1570, 1148, 1149, 1147, 2004, 1148,
	1149, 2820, 1147, 2313, 1148, 1149, 2003, 182, 2314, 1964,
	182, 2002, 1962, 2309, 1750, 1147, 2001, 1148, 1149, 1150,
	2315, 2000, 2075, 2076, 1147, 2098, 1148, 1149, 1150, 2621,
	2062, 2620, 1999, 2311, 1947, 1300, 1949, 1742, 2312, 1150,
	2048, 37, 2509, 1150, 1147, 2271, 1148, 1149, 2270, 1714,
	2082, 2751, 1147, 2496, 1148, 1149, 2630, 1147, 758, 1148,
	1149, 2495, 1147, 2632, 1148, 1149, 759, 1147, 2044, 1148,
	1149, 571, 2499, 2280, 1521, 730, 2106, 182, 1147, 2619,
	1148, 1149, 2009, 2010, 182, 2348, 2125, 1266, 1640, 2019,
	1014, 1713, 2429, 1013, 1150, 92, 571, 2109, 2110, 2120,
	2192, 1998, 1641, 571, 2283, 2285, 93, 1433, 1433, 1118,
	1992, 2102, 571, 2286, 2086, 2160, 2144, 2045, 2040, 2055,
	1150, 1991, 2159, 120, 2164, 1990, 2071, 2074, 2075, 2076,
	2072, 2081, 2073, 2077, 2163, 182, 182, 182, 182, 182,
	183, 2501, 1834, 2090, 572, 572, 2093, 1147, 94, 1148,
	1149, 2103, 182, 182, 2100, 92, 1147, 2887, 1148, 1149,
	183, 2365, 94, 1925, 2113, 2768, 93, 1147, 182, 1148,
	1149, 1147, 2713, 1148, 1149, 1150, 1987, 1760, 1761, 572,
	2122, 2128, 101, 183, 2347, 2079, 2129, 1622, 572, 1747,
	1914, 2123, 2269, 100, 572, 99, 766, 767, 2162, 2481,
	2268, 101, 1986, 1413, 94, 1290, 1286, 2133, 2134, 2135,
	2154, 2155, 100, 1941, 99, 99, 2743, 2742, 2638, 2636,
	1287, 1628, 1147, 1628, 1148, 1149, 1628, 1626, 2161, 1626,
	2222, 1628, 1626, 2635, 2628, 740, 2562, 1626, 2500, 1290,
	1286, 2218, 2498, 571, 2378, 1740, 1741, 1289, 1147, 1288,
	1148, 1149, 1865, 1408, 1287, 101, 2184, 1985, 765, 571,
	2253, 2254, 2255, 2256, 100, 2489, 100, 2627, 2260, 2058,
	2201, 2246, 2243, 2043, 182, 1972, 2247, 1734, 571, 1283,
	1284, 1289, 2200, 1288, 2863, 2862, 2219, 571, 2202, 1318,
	2190, 1309, 2862, 2191, 571, 571, 2863, 182, 182, 182,
	182, 182, 2757, 1147, 2535, 1148, 1149, 756, 2234, 182,
	106, 107, 2260, 103, 182, 2288, 182, 88, 182, 2273,
	1, 182, 182, 182, 2303, 2835, 2248, 2249, 2250, 2251,
	2252, 540, 1724, 786, 786, 786, 1264, 746, 2322, 554,
	1497, 1487, 2259, 2274, 2591, 183, 1682, 2262, 2263, 2264,
	2261, 1121, 1123, 1150, 2714, 2383, 2363, 1279, 2381, 1871,
	2560, 2272, 1832, 182, 975, 1150, 145, 1795, 2275, 2297,
	1796, 2815, 110, 935, 109, 2388, 571, 2265, 978, 1077,
	572, 1866, 2581, 2241, 571, 2241, 748, 2324, 2241, 182,
	2325, 2107, 1804, 2241, 2316, 95, 2385, 572, 572, 182,
	572, 2384, 572, 572, 2399, 572, 572, 572, 572, 572,
	572, 2326, 2304, 2302, 182, 2307, 2332, 182, 747, 2382,
	572, 1532, 1344, 1342, 183, 2305, 2306, 2430, 2308, 1343,
	1341, 2359, 2358, 1346, 1150, 1983, 1345, 1973, 2320, 2467,
	183, 1571, 1291, 568, 2407, 2078, 180, 1979, 1333, 1310,
	2406, 572, 1015, 183, 530, 2355, 2294, 1258, 1898, 536,
	1190, 2294, 1834, 2398, 2267, 2094, 785, 572, 2410, 183,
	778, 1735, 2033, 2299, 2493, 2279, 2360, 2361, 2379, 2281,
	2050, 1147, 2284, 1148, 1149, 183, 2277, 2750, 2629, 2424,
	2461, 2807, 183, 1147, 2425, 1148, 1149, 571, 182, 2104,
	1306, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	572, 572, 572, 1270, 1271, 2439, 1978, 1963, 2433, 1197,
	1642, 2436, 2437, 1775, 2438, 1592, 593, 2440, 592, 2442,
	2432, 2444, 2427, 2428, 590, 2036, 2071, 2074, 2075, 2076,
	2072, 183, 2073, 2077, 2380, 2059, 2515, 2516, 1314, 1153,
	2487, 674, 2023, 1319, 182, 2070, 2068, 786, 2067, 1923,
	1781, 2517, 1147, 1334, 1148, 1149, 2513, 2482, 2483, 2827,
	1777, 1773, 2538, 2042, 601, 594, 586, 182, 2532, 2490,
	2405, 2512, 2497, 2170, 2416, 2172, 2105, 2412, 2522, 1131,
	2502, 1282, 580, 948, 1639, 182, 2719, 2774, 182, 182,
	182, 572, 2527, 2528, 2519, 1940, 2451, 1281, 571, 571,
	1652, 1653, 2370, 2150, 2525, 1858, 572, 572, 63, 41,
	2407, 575, 2846, 2526, 1122, 772, 2406, 32, 2567, 2568,
	2533, 31, 2534, 30, 29, 28, 23, 22, 2543, 21,
	2545, 20, 19, 25, 18, 17, 16, 2856, 2886, 2391,
	571, 571, 571, 571, 115, 50, 47, 45, 122, 121,
	48, 44, 1052, 42, 27, 26, 15, 14, 13, 12,
	11, 10, 9, 5, 4, 35, 183, 34, 33, 1125,
	24, 572, 2587, 2, 2387, 2386, 2137, 1860, 0, 2585,
	2586, 0, 0, 0, 0, 0, 1628, 0, 1628, 0,
	0, 0, 1626, 0, 1626, 183, 0, 0, 572, 2600,
	0, 0, 0, 0, 0, 182, 0, 0, 183, 0,
	0, 0, 572, 0, 0, 0, 2597, 183, 0, 183,
	0, 183, 183, 572, 0, 0, 572, 2624, 0, 571,
	0, 571, 0, 2608, 0, 2607, 2571, 572, 0, 939,
	2575, 2576, 2577, 0, 2617, 0, 0, 0, 1628, 0,
	2653, 0, 1258, 0, 1626, 0, 1439, 1439, 2633, 1439,
	2645, 1439, 1439, 2647, 1448, 1439, 1439, 1439, 1439, 1439,
	2649, 37, 2643, 2641, 2634, 740, 2625, 1258, 1258, 939,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 572, 2654, 2655, 0, 0, 2657, 182, 0,
	0, 0, 0, 2297, 0, 2695, 0, 2297, 0, 0,
	1509, 571, 0, 0, 0, 0, 0, 2691, 572, 2693,
	0, 2692, 0, 0, 572, 0, 1529, 0, 2707, 0,
	0, 0, 0, 0, 2734, 2709, 2716, 2708, 2733, 571,
	1628, 0, 2737, 571, 571, 0, 1626, 0, 2241, 0,
	2241, 0, 0, 0, 0, 2596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 0, 2699, 786,
	786, 786, 571, 0, 2746, 2749, 0, 2747, 2744, 2745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	0, 0, 2761, 0, 0, 0, 0, 2760, 2758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 183,
	0, 0, 2764, 0, 0, 0, 183, 740, 2702, 2703,
	2704, 183, 183, 182, 0, 183, 0, 183, 2766, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 571, 182,
	0, 183, 2297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2777, 0, 0, 0, 0, 2783, 0,
	1635, 0, 0, 0, 0, 0, 2780, 1258, 0, 183,
	572, 0, 0, 0, 0, 1650, 1651, 37, 0, 0,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2773, 0, 0, 0,
	0, 0, 571, 571, 0, 0, 2800, 0, 0, 786,
	0, 0, 2805, 0, 0, 571, 2810, 178, 0, 2814,
	0, 2808, 0, 0, 182, 571, 0, 2716, 2816, 0,
	0, 0, 37, 2823, 0, 0, 0, 0, 0, 0,
	1737, 120, 0, 0, 0, 2842, 2826, 2834, 0, 2839,
	0, 0, 0, 0, 162, 2849, 0, 0, 0, 0,
	0, 0, 0, 0, 2858, 571, 2860, 1749, 2855, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 2869, 0,
	1628, 1314, 2874, 0, 786, 2867, 1626, 2873, 2871, 0,
	0, 0, 786, 0, 2880, 786, 2101, 0, 0, 0,
	0, 0, 2888, 0, 0, 0, 939, 0, 2893, 0,
	0, 159, 0, 160, 178, 0, 0, 0, 2897, 1628,
	2734, 2896, 183, 2898, 2899, 1626, 0, 0, 0, 0,
	183, 0, 0, 177, 0, 572, 0, 0, 120, 0,
	0, 572, 0, 2294, 0, 0, 0, 0, 0, 0,
	0, 162, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 183, 0,
	1293, 1295, 0, 0, 0, 0, 0, 939, 0, 0,
	0, 0, 0, 946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 939, 0, 0, 163, 572,
	0, 0, 0, 0, 0, 183, 0, 168, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 655, 0, 0, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 183, 183, 183, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 183, 0, 0, 0, 0, 0, 181, 0, 0,
	526, 0, 0, 566, 0, 163, 183, 0, 0, 1934,
	526, 0, 0, 0, 168, 0, 0, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 0, 155, 0, 0,
	0, 0, 572, 572, 0, 183, 183, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 183, 0, 183, 0, 183, 0, 786, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 2854, 183, 0, 0, 183, 173, 174, 175, 176,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1646, 0, 0, 0, 1647, 0,
	2151, 0, 0, 0, 0, 0, 0, 0, 0, 2156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 183, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 0,
	0, 0, 0, 173, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 1293, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 1745, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 1258, 0, 0,
	1258, 0, 0, 183, 0, 1258, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 572, 572, 0, 0,
	786, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1439, 0, 0, 526,
	0, 526, 0, 0, 526, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 2276, 0, 0, 572, 572,
	572, 572, 0, 0, 786, 0, 0, 0, 1258, 1844,
	0, 2301, 1439, 1258, 0, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 0, 0, 0, 0,
	0, 0, 0, 1375, 1378, 1379, 1380, 1381, 1382, 1383,
	0, 1384, 1385, 1386, 1387, 1388, 1363, 1364, 1365, 1366,
	1347, 1348, 1376, 183, 1350, 0, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 943, 0, 1360, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 0, 572, 0, 572,
	0, 0, 0, 939, 0, 0, 1258, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1259, 0, 0, 0,
	0, 0, 0, 572, 0, 0, 78, 39, 40, 80,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 572,
	43, 69, 70, 0, 67, 71, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 526, 0,
	0, 0, 0, 1377, 0, 0, 0, 572, 0, 0,
	0, 572, 572, 0, 0, 0, 0, 0, 753, 0,
	0, 0, 56, 0, 2276, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	572, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 1957, 0, 1958,
	1959, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 1968, 1969, 0, 0, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 1975, 1976,
	1977, 0, 0, 1980, 0, 1981, 572, 183, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 1993, 1994, 1995,
	1996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 2008, 0, 0, 0, 1749, 1749, 0, 2013, 2014,
	2015, 2016, 2017, 0, 1745, 0, 0, 0, 572, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 46, 49, 52, 51, 54, 0, 66,
	572, 572, 75, 72, 0, 0, 0, 2592, 2593, 2594,
	2595, 0, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 572, 0, 55, 83, 82, 0, 0,
	64, 65, 53, 526, 0, 0, 0, 0, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1258, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 0, 57, 58, 0, 59, 60, 61,
	62, 1259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 0, 0, 0, 0, 2646, 0, 2648, 0,
	0, 0, 0, 0, 0, 0, 1259, 1259, 0, 0,
	0, 0, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 1059, 1485, 0,
	1061, 0, 0, 0, 681, 79, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 786, 0,
	526, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	1555, 526, 526, 526, 526, 526, 526, 526, 0, 0,
	0, 0, 0, 81, 0, 0, 2740, 0, 0, 0,
	2740, 2740, 743, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2229, 0, 0, 526,
	0, 0, 743, 0, 86, 0, 0, 0, 0, 1749,
	0, 2242, 0, 0, 0, 0, 0, 0, 947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2257, 2258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 0, 0, 0, 0, 0,
	771, 771, 0, 0, 0, 0, 1259, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2318, 2319, 0, 0, 771, 1531, 771,
	771, 771, 771, 771, 0, 1258, 0, 2801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 786,
	786, 0, 0, 0, 0, 0, 0, 1321, 0, 771,
	0, 0, 2824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2829, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	0, 0, 0, 1531, 0, 526, 0, 526, 0, 526,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 2829, 0, 0, 0, 0, 0, 0, 0, 0,
	2431, 0, 0, 0, 0, 0, 0, 2435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2445, 2446, 2448, 2450, 0, 0, 770, 0, 0,
	0, 2456, 0, 0, 0, 2459, 2460, 0, 0, 0,
	0, 2463, 0, 0, 0, 0, 0, 2465, 0, 0,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	0, 0, 2479, 0, 0, 0, 0, 0, 2484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 0,
	0, 2506, 2507, 0, 0, 2511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2523, 0, 0, 0, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 1470, 526,
	526, 0, 0, 526, 0, 1926, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 2579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	1113, 1113, 1113, 0, 0, 0, 0, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 2606, 0, 0, 0, 0, 0,
	2610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 771, 743, 1186, 1187,
	1188, 0, 1191, 0, 1193, 1194, 1195, 1196, 0, 1199,
	1201, 1201, 0, 1201, 1205, 1205, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	0, 1242, 1243, 1244, 1245, 1246, 0, 0, 0, 0,
	1205, 1205, 1205, 1205, 1205, 0, 771, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	526, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 2712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2722, 2723, 2724, 0, 2725, 2726, 0, 0, 0,
	2729, 0, 2730, 0, 2732, 2735, 0, 0, 1268, 0,
	0, 2739, 0, 526, 743, 0, 526, 0, 743, 0,
	0, 0, 0, 0, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2765,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 1769, 0, 0, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	2136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2790, 0, 0, 0,
	0, 2795, 0, 0, 0, 0, 0, 2796, 2797, 0,
	0, 526, 526, 526, 526, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2803, 0, 0, 526, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 2845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2851, 0, 178, 0,
	2852, 0, 0, 0, 1259, 0, 1259, 0, 0, 1259,
	0, 1198, 0, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 120, 0, 142, 0, 0, 0, 771, 0,
	0, 0, 0, 1580, 0, 162, 0, 0, 0, 0,
	1909, 0, 0, 0, 0, 1919, 1920, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	526, 0, 0, 0, 0, 1930, 152, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 1259, 0, 584,
	0, 0, 1259, 526, 526, 526, 526, 526, 0, 0,
	0, 0, 159, 1933, 160, 2317, 0, 0, 0, 0,
	526, 0, 1485, 0, 526, 0, 0, 526, 2327, 1531,
	129, 130, 151, 150, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 1113, 1113, 1113, 0,
	0, 0, 0, 1308, 0, 1259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 0, 0, 526, 0, 0, 0, 146, 127, 153,
	134, 126, 0, 147, 148, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 136, 131, 132, 133, 137, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 155, 0, 0, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 2130,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 526, 0, 0, 526, 526, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2175, 2176, 2177,
	2178, 2179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 2185, 0, 143, 947, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2193, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1259,
	947, 1259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 1588, 1589, 1590, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 1633, 0, 0, 0,
	0, 0, 0, 1638, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 1675,
	1676, 1677, 1678, 1679, 584, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 0, 0,
	0, 0, 0, 1361, 0, 0, 1942, 178, 0, 0,
	0, 0, 0, 0, 0, 2366, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	0, 120, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 2402, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 2411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1757, 0, 0, 2423, 0, 0, 2426,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 1485,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 159, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	1417, 151, 150, 177, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 1259, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 2028, 0, 0, 0, 0, 1830,
	2486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 2063, 2064, 0, 0, 0, 0, 0, 0,
	0, 2083, 0, 2084, 0, 2659, 2661, 2660, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 1418, 153, 0,
	1415, 1362, 147, 148, 0, 0, 0, 0, 163, 2541,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2556, 0, 0,
	2557, 2558, 2559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 1378, 1379, 1380, 1381,
	1382, 1383, 0, 1384, 1385, 1386, 1387, 1388, 1363, 1364,
	1365, 1366, 1347, 1348, 1376, 0, 1350, 2157, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 0, 0, 1360,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1377, 149, 2662, 2663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 1776, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2298, 0, 79, 0,
	0, 1776, 1776, 1776, 1776, 1776, 665, 0, 618, 669,
	620, 666, 667, 0, 616, 619, 668, 0, 2083, 0,
	0, 0, 1776, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 621, 622, 2658, 2664, 2665, 2666, 2674,
	2676, 643, 2675, 2677, 2678, 2679, 2682, 2683, 2684, 2685,
	2680, 2681, 2686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 87, 2404, 173, 174, 175, 176,
	675, 682, 683, 684, 685, 686, 676, 678, 0, 0,
	0, 677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2784, 0, 0, 680, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2408, 2409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	2197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 2221,
	0, 0, 0, 2224, 0, 0, 0, 0, 2226, 2227,
	2228, 0, 0, 0, 0, 0, 2232, 2233, 1776, 0,
	1685, 2235, 0, 2236, 2237, 0, 0, 0, 2244, 2245,
	0, 2531, 0, 0, 0, 0, 1685, 1685, 1685, 1685,
	1685, 584, 584, 584, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 2321, 0, 0, 0, 675, 682, 683, 684,
	685, 686, 676, 678, 0, 0, 0, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 669, 0, 666,
	667, 0, 0, 0, 668, 2618, 0, 2622, 2623, 2376,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 682,
	683, 0, 0, 2408, 2409, 1627, 0, 0, 0, 0,
	2298, 0, 79, 0, 2298, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2453, 0, 2700, 0, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 2298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 2563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2804, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2598, 0, 2599, 0, 0,
	0, 0, 2602, 2603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2609, 682, 683, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2650, 0, 0, 2652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2688, 0, 0, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2748, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 0, 0, 917, 903, 448, 2843, 850, 920,
	819, 838, 930, 841, 844, 885, 798, 863, 369, 835,
	791, 823, 794, 830, 795, 821, 852, 244, 818, 905,
	867, 919, 325, 241, 800, 824, 383, 840, 193, 887,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 926, 329, 873, 0, 433, 354,
	0, 0, 0, 854, 909, 861, 899, 849, 886, 808,
	872, 921, 836, 882, 922, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 2817,
	0, 2818, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 832, 879, 916, 833, 881, 239, 285, 246, 238,
	452, 927, 908, 0, 0, 209, 918, 856, 0, 884,
	0, 933, 793, 875, 0, 796, 799, 929, 912, 827,
	249, 0, 0, 0, 0, 0, 0, 0, 853, 862,
	896, 847, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 871, 0, 0, 0, 804, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 807, 0, 826, 897, 0, 790, 268, 801,
	355, 231, 0, 901, 911, 848, 485, 915, 846, 845,
	891, 805, 907, 839, 324, 803, 293, 188, 205, 0,
	837, 365, 406, 412, 906, 822, 831, 229, 829, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 870,
	889, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 1115, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 817, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 902, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 894, 932, 378, 411, 219,
	471, 432, 812, 816, 810, 876, 811, 865, 866, 813,
	923, 924, 925, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 898, 806, 0, 814, 815, 0, 904, 913,
	914, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 869,
	187, 202, 327, 928, 400, 261, 499, 479, 475, 792,
	809, 236, 820, 828, 0, 834, 842, 843, 855, 857,
	858, 859, 860, 877, 878, 880, 888, 890, 893, 895,
	900, 910, 931, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 868, 874, 338, 254, 273,
	284, 883, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 864, 892, 334, 449, 450, 280, 351, 0, 0,
	917, 903, 448, 0, 850, 920, 819, 838, 930, 841,
	844, 885, 798, 863, 369, 835, 791, 823, 794, 830,
	795, 821, 852, 244, 818, 905, 867, 919, 325, 241,
	800, 824, 383, 840, 193, 887, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	926, 329, 873, 0, 433, 354, 0, 0, 0, 854,
	909, 861, 899, 849, 886, 808, 872, 921, 836, 882,
	922, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 832, 879, 916,
	833, 881, 239, 285, 246, 238, 452, 927, 908, 0,
	0, 209, 918, 856, 0, 884, 0, 933, 793, 875,
	0, 796, 799, 929, 912, 827, 249, 0, 0, 0,
	0, 0, 0, 0, 853, 862, 896, 847, 0, 0,
	0, 0, 0, 2328, 0, 825, 0, 871, 0, 0,
	0, 804, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 807, 0,
	826, 897, 0, 790, 268, 801, 355, 231, 0, 901,
	911, 848, 485, 915, 846, 845, 891, 805, 907, 839,
	324, 803, 293, 188, 205, 0, 837, 365, 406, 412,
	906, 822, 831, 229, 829, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 870, 889, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 1115, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 817, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 902, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 894, 932, 378, 411, 219, 471, 432, 812, 816,
	810, 876, 811, 865, 866, 813, 923, 924, 925, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 898, 806,
	0, 814, 815, 0, 904, 913, 914, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 869, 187, 202, 327, 928,
	400, 261, 499, 479, 475, 792, 809, 236, 820, 828,
	0, 834, 842, 843, 855, 857, 858, 859, 860, 877,
	878, 880, 888, 890, 893, 895, 900, 910, 931, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 868, 874, 338, 254, 273, 284, 883, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 864, 892, 334,
	449, 450, 280, 351, 0, 0, 917, 903, 448, 0,
	850, 920, 819, 838, 930, 841, 844, 885, 798, 863,
	369, 835, 791, 823, 794, 830, 795, 821, 852, 244,
	818, 905, 867, 919, 325, 241, 800, 824, 383, 840,
	193, 887, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 926, 329, 873, 0,
	433, 354, 0, 0, 0, 854, 909, 861, 899, 849,
	886, 808, 872, 921, 836, 882, 922, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 832, 879, 916, 833, 881, 239, 285,
	246, 238, 452, 927, 908, 0, 0, 209, 918, 856,
	0, 884, 0, 933, 793, 875, 0, 796, 799, 929,
	912, 827, 249, 0, 0, 0, 0, 0, 0, 0,
	853, 862, 896, 847, 0, 0, 0, 0, 0, 2287,
	0, 825, 0, 871, 0, 0, 0, 804, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 807, 0, 826, 897, 0, 790,
	268, 801, 355, 231, 0, 901, 911, 848, 485, 915,
	846, 845, 891, 805, 907, 839, 324, 803, 293, 188,
	205, 0, 837, 365, 406, 412, 906, 822, 831, 229,
	829, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 870, 889, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 1115, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 817, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	902, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 894, 932, 378,
	411, 219, 471, 432, 812, 816, 810, 876, 811, 865,
	866, 813, 923, 924, 925, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 898, 806, 0, 814, 815, 0,
	904, 913, 914, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 869, 187, 202, 327, 928, 400, 261, 499, 479,
	475, 792, 809, 236, 820, 828, 0, 834, 842, 843,
	855, 857, 858, 859, 860, 877, 878, 880, 888, 890,
	893, 895, 900, 910, 931, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 868, 874, 338,
	254, 273, 284, 883, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 864, 892, 334, 449, 450, 280, 351,
	0, 0, 917, 903, 448, 0, 850, 920, 819, 838,
	930, 841, 844, 885, 798, 863, 369, 835, 791, 823,
	794, 830, 795, 821, 852, 244, 818, 905, 867, 919,
	325, 241, 800, 824, 383, 840, 193, 887, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 926, 329, 873, 0, 433, 354, 0, 0,
	0, 854, 909, 861, 899, 849, 886, 808, 872, 921,
	836, 882, 922, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 832,
	879, 916, 833, 881, 239, 285, 246, 238, 452, 927,
	908, 0, 0, 209, 918, 856, 0, 884, 0, 933,
	793, 875, 0, 796, 799, 929, 912, 827, 249, 0,
	0, 0, 0, 0, 0, 0, 853, 862, 896, 847,
	0, 0, 0, 0, 0, 1764, 0, 825, 0, 871,
	0, 0, 0, 804, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	807, 0, 826, 897, 0, 790, 268, 801, 355, 231,
	0, 901, 911, 848, 485, 915, 846, 845, 891, 805,
	907, 839, 324, 803, 293, 188, 205, 0, 837, 365,
	406, 412, 906, 822, 831, 229, 829, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 870, 889, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 1115,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 817, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 902, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 894, 932, 378, 411, 219, 471, 432,
	812, 816, 810, 876, 811, 865, 866, 813, 923, 924,
	925, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	898, 806, 0, 814, 815, 0, 904, 913, 914, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 869, 187, 202,
	327, 928, 400, 261, 499, 479, 475, 792, 809, 236,
	820, 828, 0, 834, 842, 843, 855, 857, 858, 859,
	860, 877, 878, 880, 888, 890, 893, 895, 900, 910,
	931, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 868, 874, 338, 254, 273, 284, 883,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 864,
	892, 334, 449, 450, 280, 351, 0, 0, 917, 903,
	448, 0, 850, 920, 819, 838, 930, 841, 844, 885,
	798, 863, 369, 835, 791, 823, 794, 830, 795, 821,
	852, 244, 818, 905, 867, 919, 325, 241, 800, 824,
	383, 840, 193, 887, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 926, 329,
	873, 0, 433, 354, 0, 0, 0, 854, 909, 861,
	899, 849, 886, 808, 872, 921, 836, 882, 922, 287,
	226, 192, 366, 434, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 832, 879, 916, 833, 881,
	239, 285, 246, 238, 452, 927, 908, 0, 0, 209,
	918, 856, 0, 884, 0, 933, 793, 875, 0, 796,
	799, 929, 912, 827, 249, 0, 0, 0, 0, 0,
	0, 0, 853, 862, 896, 847, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 871, 0, 0, 0, 804,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 807, 0, 826, 897,
	0, 790, 268, 801, 355, 231, 0, 901, 911, 848,
	485, 915, 846, 845, 891, 805, 907, 839, 324, 803,
	293, 188, 205, 0, 837, 365, 406, 412, 906, 822,
	831, 229, 829, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 870, 889, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 1115, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 817,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 902, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 894,
	932, 378, 411, 219, 471, 432, 812, 816, 810, 876,
	811, 865, 866, 813, 923, 924, 925, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 898, 806, 0, 814,
	815, 0, 904, 913, 914, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 869, 187, 202, 327, 928, 400, 261,
	499, 479, 475, 792, 809, 236, 820, 828, 0, 834,
	842, 843, 855, 857, 858, 859, 860, 877, 878, 880,
	888, 890, 893, 895, 900, 910, 931, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 868,
	874, 338, 254, 273, 284, 883, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 864, 892, 334, 449, 450,
	280, 351, 0, 0, 917, 903, 448, 0, 850, 920,
	819, 838, 930, 841, 844, 885, 798, 863, 369, 835,
	791, 823, 794, 830, 795, 821, 852, 244, 818, 905,
	867, 919, 325, 241, 800, 824, 383, 840, 193, 887,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 926, 329, 873, 0, 433, 354,
	0, 0, 0, 854, 909, 861, 899, 849, 886, 808,
	872, 921, 836, 882, 922, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 832, 879, 916, 833, 881, 239, 285, 246, 238,
	452, 927, 908, 0, 0, 209, 918, 856, 0, 884,
	0, 933, 793, 875, 0, 796, 799, 929, 912, 827,
	249, 0, 0, 0, 0, 0, 0, 0, 853, 862,
	896, 847, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 871, 0, 0, 0, 804, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 807, 0, 826, 897, 0, 790, 268, 801,
	355, 231, 0, 901, 911, 848, 485, 915, 846, 845,
	891, 805, 907, 839, 324, 803, 293, 188, 205, 0,
	837, 365, 406, 412, 906, 822, 831, 229, 829, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 870,
	889, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 1115, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 817, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 902, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 894, 932, 378, 411, 219,
	471, 432, 812, 816, 810, 876, 811, 865, 866, 813,
	923, 924, 925, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 898, 806, 0, 814, 815, 0, 904, 913,
	914, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 869,
	187, 202, 327, 928, 400, 261, 499, 479, 475, 792,
	809, 236, 820, 828, 0, 834, 842, 843, 855, 857,
	858, 859, 860, 877, 878, 880, 888, 890, 893, 895,
	900, 910, 931, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 868, 874, 338, 254, 273,
	284, 883, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 864, 892, 334, 449, 450, 280, 351, 0, 0,
	917, 903, 448, 0, 850, 920, 819, 838, 930, 841,
	844, 885, 798, 863, 369, 835, 791, 823, 794, 830,
	795, 821, 852, 244, 818, 905, 867, 919, 325, 241,
	800, 824, 383, 840, 193, 887, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	926, 329, 873, 0, 433, 354, 0, 0, 0, 854,
	909, 861, 899, 849, 886, 808, 872, 921, 836, 882,
	922, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 832, 879, 916,
	833, 881, 239, 285, 246, 238, 452, 927, 908, 0,
	0, 934, 918, 856, 0, 884, 0, 933, 793, 875,
	0, 796, 799, 929, 912, 827, 249, 0, 0, 0,
	0, 0, 0, 0, 853, 862, 896, 847, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 871, 0, 0,
	0, 804, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 807, 0,
	826, 897, 0, 790, 268, 801, 355, 231, 0, 901,
	911, 848, 485, 915, 846, 845, 891, 805, 907, 839,
	324, 803, 293, 188, 205, 0, 837, 365, 406, 412,
	906, 822, 831, 229, 829, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 870, 889, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 802, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 817, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 902, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 789, 783, 782, 294,
	331, 894, 932, 378, 411, 219, 471, 432, 812, 816,
	810, 876, 811, 865, 866, 813, 923, 924, 925, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 898, 806,
	0, 814, 815, 0, 904, 913, 914, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 869, 187, 202, 327, 928,
	400, 261, 499, 479, 475, 792, 809, 236, 820, 828,
	0, 834, 842, 843, 855, 857, 858, 859, 860, 877,
	878, 880, 888, 890, 893, 895, 900, 910, 931, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 868, 874, 338, 254, 273, 284, 883, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 864, 892, 334,
	449, 450, 280, 351, 0, 0, 917, 903, 448, 0,
	850, 920, 819, 838, 930, 841, 844, 885, 798, 863,
	369, 835, 791, 823, 794, 830, 795, 821, 852, 244,
	818, 905, 867, 919, 325, 241, 800, 824, 383, 840,
	193, 887, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 926, 329, 873, 0,
	433, 354, 0, 0, 0, 854, 909, 861, 899, 849,
	886, 808, 872, 921, 836, 882, 922, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 832, 879, 916, 833, 881, 239, 285,
	246, 238, 452, 927, 908, 0, 0, 934, 918, 856,
	0, 884, 0, 933, 793, 875, 0, 796, 799, 929,
	912, 827, 249, 0, 0, 0, 0, 0, 0, 0,
	853, 862, 896, 847, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 871, 0, 0, 0, 804, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 807, 0, 826, 897, 0, 790,
	268, 801, 355, 231, 0, 901, 911, 848, 485, 915,
	846, 845, 891, 805, 907, 839, 324, 803, 293, 188,
	205, 0, 837, 365, 406, 412, 906, 822, 831, 229,
	829, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 870, 889, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 1325, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 802, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 817, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	902, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 789, 783, 782, 294, 331, 894, 932, 378,
	411, 219, 471, 432, 812, 816, 810, 876, 811, 865,
	866, 813, 923, 924, 925, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 898, 806, 0, 814, 815, 0,
	904, 913, 914, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 869, 187, 202, 327, 928, 400, 261, 499, 479,
	475, 792, 809, 236, 820, 828, 0, 834, 842, 843,
	855, 857, 858, 859, 860, 877, 878, 880, 888, 890,
	893, 895, 900, 910, 931, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 868, 874, 338,
	254, 273, 284, 883, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 864, 892, 334, 449, 450, 280, 351,
	0, 0, 917, 903, 448, 0, 850, 920, 819, 838,
	930, 841, 844, 885, 798, 863, 369, 835, 791, 823,
	794, 830, 795, 821, 852, 244, 818, 905, 867, 919,
	325, 241, 800, 824, 383, 840, 193, 887, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 926, 329, 873, 0, 433, 354, 0, 0,
	0, 854, 909, 861, 899, 849, 886, 808, 872, 921,
	836, 882, 922, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 832,
	879, 916, 833, 881, 239, 285, 246, 238, 452, 927,
	908, 0, 0, 934, 918, 856, 0, 884, 0, 933,
	793, 875, 0, 796, 799, 929, 912, 827, 249, 0,
	0, 0, 0, 0, 0, 0, 853, 862, 896, 847,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 871,
	0, 0, 0, 804, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	807, 0, 826, 897, 0, 790, 268, 801, 355, 231,
	0, 901, 911, 848, 485, 915, 846, 845, 891, 805,
	907, 839, 324, 803, 293, 188, 205, 0, 837, 365,
	406, 412, 906, 822, 831, 229, 829, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 870, 889, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 780, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 802,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 817, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 902, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 789, 783,
	782, 294, 331, 894, 932, 378, 411, 219, 471, 432,
	812, 816, 810, 876, 811, 865, 866, 813, 923, 924,
	925, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	898, 806, 0, 814, 815, 0, 904, 913, 914, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 869, 187, 202,
	327, 928, 400, 261, 499, 479, 475, 792, 809, 236,
	820, 828, 0, 834, 842, 843, 855, 857, 858, 859,
	860, 877, 878, 880, 888, 890, 893, 895, 900, 910,
	931, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 868, 874, 338, 254, 273, 284, 883,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 864,
	892, 334, 449, 450, 280, 351, 0, 0, 0, 0,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 1709, 0, 602, 0, 0,
	0, 244, 607, 0, 0, 0, 325, 241, 0, 1710,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 614, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 87, 0, 0, 184,
	185, 186, 675, 682, 683, 684, 685, 686, 676, 678,
	0, 0, 217, 677, 224, 625, 627, 626, 633, 634,
	635, 636, 637, 638, 639, 623, 680, 687, 688, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 585, 599, 0,
	613, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 769, 0, 0, 0, 659, 0, 598, 0, 0,
	606, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 658, 0, 0,
	485, 0, 0, 656, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 628, 629, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 665, 657, 618, 669,
	620, 666, 667, 615, 616, 619, 668, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 660, 605, 604, 0,
	611, 612, 0, 621, 622, 624, 630, 631, 632, 640,
	642, 643, 641, 644, 645, 646, 649, 650, 651, 652,
	647, 648, 653, 603, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 602, 0,
	0, 0, 244, 607, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 614,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	609, 610, 0, 0, 0, 0, 0, 0, 1790, 0,
	287, 226, 192, 366, 434, 259, 0, 87, 0, 0,
	184, 185, 186, 675, 682, 683, 684, 685, 686, 676,
	678, 0, 0, 217, 677, 224, 625, 627, 626, 633,
	634, 635, 636, 637, 638, 639, 623, 680, 687, 688,
	1791, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 585, 599,
	0, 613, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 597, 0, 0, 0, 0, 659, 0, 598, 0,
	0, 606, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 658, 0,
	0, 485, 0, 0, 656, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 628, 629,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 665, 657, 618,
	669, 620, 666, 667, 615, 616, 619, 668, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 660, 605, 604,
	0, 611, 612, 0, 621, 622, 624, 630, 631, 632,
	640, 642, 643, 641, 644, 645, 646, 649, 650, 651,
	652, 647, 648, 653, 603, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 0, 334, 449,
	450, 280, 351, 0, 0, 0, 78, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 602, 0, 0, 0, 244, 607,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 614, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 87, 0, 0, 184, 185, 186, 675,
	682, 683, 684, 685, 686, 676, 678, 0, 0, 217,
	677, 224, 625, 627, 626, 633, 634, 635, 636, 637,
	638, 639, 623, 680, 687, 688, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 585, 599, 0, 613, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 0, 0,
	0, 0, 659, 0, 598, 0, 0, 606, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 658, 0, 0, 485, 0, 0,
	656, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 628, 629, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 665, 657, 618, 669, 620, 666, 667,
	615, 616, 619, 668, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 660, 605, 604, 0, 611, 612, 0,
	621, 622, 624, 630, 631, 632, 640, 642, 643, 641,
	644, 645, 646, 649, 650, 651, 652, 647, 648, 653,
	603, 187, 202, 327, 86, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 602, 0, 0, 0, 244,
	607, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 614, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 87, 0, 0, 184, 185, 186,
	675, 682, 683, 684, 685, 686, 676, 678, 0, 0,
	217, 677, 224, 625, 627, 626, 633, 634, 635, 636,
	637, 638, 639, 623, 680, 687, 688, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 585, 599, 0, 613, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 0,
	0, 0, 0, 659, 0, 598, 0, 0, 606, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 658, 0, 0, 485, 0,
	0, 656, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 2811, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 628, 629, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 665, 657, 618, 669, 620, 666,
	667, 615, 616, 619, 668, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 660, 605, 604, 0, 611, 612,
	0, 621, 622, 624, 630, 631, 632, 640, 642, 643,
	641, 644, 645, 646, 649, 650, 651, 652, 647, 648,
	653, 603, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 602, 0, 0, 0,
	244, 607, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 614, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 87, 0, 1292, 184, 185,
	186, 675, 682, 683, 684, 685, 686, 676, 678, 0,
	0, 217, 677, 224, 625, 627, 626, 633, 634, 635,
	636, 637, 638, 639, 623, 680, 687, 688, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 585, 599, 0, 613,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	0, 0, 0, 0, 659, 0, 598, 0, 0, 606,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 658, 0, 0, 485,
	0, 0, 656, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 628, 629, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 665, 657, 618, 669, 620,
	666, 667, 615, 616, 619, 668, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 660, 605, 604, 0, 611,
	612, 0, 621, 622, 624, 630, 631, 632, 640, 642,
	643, 641, 644, 645, 646, 649, 650, 651, 652, 647,
	648, 653, 603, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 602, 0, 0,
	0, 244, 607, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 614, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 87, 0, 0, 184,
	185, 186, 675, 682, 683, 684, 685, 686, 676, 678,
	0, 0, 217, 677, 224, 625, 627, 626, 633, 634,
	635, 636, 637, 638, 639, 623, 680, 687, 688, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 585, 599, 0,
	613, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 769, 0, 0, 0, 659, 0, 598, 0, 0,
	606, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 658, 0, 0,
	485, 0, 0, 656, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 628, 629, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 665, 657, 618, 669,
	620, 666, 667, 615, 616, 619, 668, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 660, 605, 604, 0,
	611, 612, 0, 621, 622, 624, 630, 631, 632, 640,
	642, 643, 641, 644, 645, 646, 649, 650, 651, 652,
	647, 648, 653, 603, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 602, 0,
	0, 0, 244, 607, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 614,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 87, 0, 0,
	184, 185, 186, 675, 682, 683, 684, 685, 686, 676,
	678, 0, 0, 217, 677, 224, 625, 627, 626, 633,
	634, 635, 636, 637, 638, 639, 623, 680, 687, 688,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 585, 599,
	0, 613, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 597, 0, 0, 0, 0, 659, 0, 598, 0,
	0, 606, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 658, 0,
	0, 485, 0, 0, 656, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 628, 629,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 665, 657, 618,
	669, 620, 666, 667, 615, 616, 619, 668, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 660, 605, 604,
	0, 611, 612, 0, 621, 622, 624, 630, 631, 632,
	640, 642, 643, 641, 644, 645, 646, 649, 650, 651,
	652, 647, 648, 653, 603, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 602,
	0, 0, 0, 244, 607, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	614, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 87, 0,
	0, 184, 185, 186, 675, 682, 683, 684, 685, 686,
	676, 678, 0, 0, 217, 677, 224, 625, 627, 626,
	633, 634, 635, 636, 637, 638, 639, 623, 680, 687,
	688, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 0, 613, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 0, 0, 0, 0, 659, 0, 598,
	0, 0, 606, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 658,
	0, 0, 485, 0, 0, 656, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 628,
	629, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 665, 657,
	618, 669, 620, 666, 667, 615, 616, 619, 668, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 660, 605,
	604, 0, 611, 612, 0, 621, 622, 624, 630, 631,
	632, 640, 642, 643, 641, 644, 645, 646, 649, 650,
	651, 652, 647, 648, 653, 603, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 682, 683, 0, 0,
	0, 0, 1627, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 982, 485, 0, 0, 0, 0, 0,
	979, 980, 324, 942, 293, 188, 205, 973, 977, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	1311, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 1313, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1315, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 1147, 0,
	1148, 1149, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 1254, 1257,
	0, 0, 0, 0, 1253, 1256, 0, 0, 217, 1252,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 0, 334, 449, 450, 280, 351, 0, 0,
	0, 78, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 86,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 0, 334,
	449, 450, 280, 351, 0, 0, 0, 78, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 87, 0, 1292, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 86, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 1731, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 1729, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 942,
	293, 188, 205, 940, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 1731, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	1292, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 2741, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 2053, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	351, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	2038, 0, 0, 0, 2039, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 1336, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 2825, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 2741, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 1578, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	351, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 1458,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	1456, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 1454, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 270, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 1452, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 1450, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 362, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 1446, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 1444, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 1442, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 351, 334,
	449, 450, 280, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 383, 0, 193, 0, 424, 228, 335,
	332, 455, 255, 247, 243, 227, 281, 341, 381, 442,
	375, 0, 329, 0, 0, 433, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 366, 434, 259, 0, 1419,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 452, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 355, 231, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 365, 406,
	412, 0, 0, 0, 229, 0, 410, 379, 469, 213,
	257, 403, 384, 408, 391, 260, 0, 0, 409, 330,
	457, 398, 467, 486, 487, 237, 359, 476, 446, 482,
	498, 206, 234, 373, 439, 472, 430, 352, 453, 454,
	292, 429, 266, 191, 328, 492, 204, 418, 221, 211,
	197, 441, 465, 218, 422, 0, 0, 500, 199, 463,
	438, 348, 289, 290, 198, 0, 402, 242, 264, 232,
	368, 460, 461, 230, 501, 208, 481, 201, 0, 480,
	361, 456, 464, 349, 340, 200, 462, 347, 339, 295,
	314, 315, 253, 275, 396, 333, 397, 276, 357, 356,
	358, 194, 473, 0, 195, 0, 435, 474, 502, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 372, 395, 393, 399, 0, 451, 468, 477, 484,
	490, 491, 493, 494, 495, 496, 497, 360, 278, 431,
	294, 331, 0, 0, 378, 411, 219, 471, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 400, 261, 499, 479, 475, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 342, 343, 344, 345,
	362, 363, 364, 367, 370, 371, 374, 376, 377, 380,
	387, 388, 389, 390, 392, 394, 401, 405, 413, 414,
	415, 416, 417, 420, 421, 425, 426, 427, 428, 436,
	440, 458, 459, 470, 483, 488, 419, 270, 466, 489,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 478,
	437, 207, 407, 262, 196, 225, 210, 233, 248, 251,
	288, 346, 353, 382, 386, 267, 245, 223, 404, 220,
	423, 443, 444, 445, 447, 350, 240, 385, 0, 351,
	334, 449, 450, 280, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 1320, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 383, 0, 193, 0, 424, 228,
	335, 332, 455, 255, 247, 243, 227, 281, 341, 381,
	442, 375, 0, 329, 0, 0, 433, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 366, 434, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 452, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 355, 231,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 365,
	406, 412, 0, 0, 0, 229, 0, 410, 379, 469,
	213, 257, 403, 384, 408, 391, 260, 0, 0, 409,
	330, 457, 398, 467, 486, 487, 237, 359, 476, 446,
	482, 498, 206, 234, 373, 439, 472, 430, 352, 453,
	454, 292, 429, 266, 191, 328, 492, 204, 418, 221,
	211, 197, 441, 465, 218, 422, 0, 0, 500, 199,
	463, 438, 348, 289, 290, 198, 0, 402, 242, 264,
	232, 368, 460, 461, 230, 501, 208, 481, 201, 0,
	480, 361, 456, 464, 349, 340, 200, 462, 347, 339,
	295, 314, 315, 253, 275, 396, 333, 397, 276, 357,
	356, 358, 194, 473, 0, 195, 0, 435, 474, 502,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 372, 395, 393, 399, 0, 451, 468, 477,
	484, 490, 491, 493, 494, 495, 496, 497, 360, 278,
	431, 294, 331, 0, 0, 378, 411, 219, 471, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 400, 261, 499, 479, 475, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 342, 343, 344,
	345, 362, 363, 364, 367, 370, 371, 374, 376, 377,
	380, 387, 388, 389, 390, 392, 394, 401, 405, 413,
	414, 415, 416, 417, 420, 421, 425, 426, 427, 428,
	436, 440, 458, 459, 470, 483, 488, 419, 270, 466,
	489, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	478, 437, 207, 407, 262, 196, 225, 210, 233, 248,
	251, 288, 346, 353, 382, 386, 267, 245, 223, 404,
	220, 423, 443, 444, 445, 447, 350, 240, 385, 0,
	351, 334, 449, 450, 280, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 383, 0, 193, 0, 424,
	228, 335, 332, 455, 255, 247, 243, 227, 281, 341,
	381, 442, 375, 0, 329, 0, 0, 433, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 366, 434, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1124, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 452,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 355,
	231, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	365, 406, 412, 0, 0, 0, 229, 0, 410, 379,
	469, 213, 257, 403, 384, 408, 391, 260, 0, 0,
	409, 330, 457, 398, 467, 486, 487, 237, 359, 476,
	446, 482, 498, 206, 234, 373, 439, 472, 430, 352,
	453, 454, 292, 429, 266, 191, 328, 492, 204, 418,
	221, 211, 197, 441, 465, 218, 422, 0, 0, 500,
	199, 463, 438, 348, 289, 290, 198, 0, 402, 242,
	264, 232, 368, 460, 461, 230, 501, 208, 481, 201,
	0, 480, 361, 456, 464, 349, 340, 200, 462, 347,
	339, 295, 314, 315, 253, 275, 396, 333, 397, 276,
	357, 356, 358, 194, 473, 0, 195, 0, 435, 474,
	502, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 372, 395, 393, 399, 0, 451, 468,
	477, 484, 490, 491, 493, 494, 495, 496, 497, 360,
	278, 431, 294, 331, 0, 0, 378, 411, 219, 471,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 400, 261, 499, 479, 475, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 342, 343,
	344, 345, 362, 363, 364, 367, 370, 371, 374, 376,
	377, 380, 387, 388, 389, 390, 392, 394, 401, 405,
	413, 414, 415, 416, 417, 420, 421, 425, 426, 427,
	428, 436, 440, 458, 459, 470, 483, 488, 419, 270,
	466, 489, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 478, 437, 207, 407, 262, 196, 225, 210, 233,
	248, 251, 288, 346, 353, 382, 386, 267, 245, 223,
	404, 220, 423, 443, 444, 445, 447, 350, 240, 385,
	0, 351, 334, 449, 450, 280, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 383, 0, 193, 0,
	424, 228, 335, 332, 455, 255, 247, 243, 227, 281,
	341, 381, 442, 375, 0, 329, 0, 0, 433, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 366, 434,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	452, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	355, 231, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 365, 406, 412, 0, 0, 0, 229, 0, 410,
	379, 469, 213, 257, 403, 384, 408, 391, 260, 0,
	0, 409, 330, 457, 398, 467, 486, 487, 237, 359,
	476, 446, 482, 498, 206, 234, 373, 439, 472, 430,
	352, 453, 454, 292, 429, 266, 191, 328, 492, 204,
	418, 221, 211, 197, 441, 465, 218, 422, 0, 0,
	500, 199, 463, 438, 348, 289, 290, 198, 0, 402,
	242, 264, 232, 368, 460, 461, 230, 501, 208, 481,
	201, 0, 480, 361, 456, 464, 349, 340, 200, 462,
	347, 339, 295, 314, 315, 253, 275, 396, 333, 397,
	276, 357, 356, 358, 194, 473, 0, 195, 0, 435,
	474, 502, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 372, 395, 393, 399, 0, 451,
	468, 477, 484, 490, 491, 493, 494, 495, 496, 497,
	360, 278, 431, 294, 331, 0, 0, 378, 411, 219,
	471, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 400, 261, 499, 479, 475, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 751,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 342,
	343, 344, 345, 362, 363, 364, 367, 370, 371, 374,
	376, 377, 380, 387, 388, 389, 390, 392, 394, 401,
	405, 413, 414, 415, 416, 417, 420, 421, 425, 426,
	427, 428, 436, 440, 458, 459, 470, 483, 488, 419,
	270, 466, 489, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 478, 437, 207, 407, 262, 196, 225, 210,
	233, 248, 251, 288, 346, 353, 382, 386, 267, 245,
	223, 404, 220, 423, 443, 444, 445, 447, 350, 240,
	385, 0, 351, 334, 449, 450, 280, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 383, 0, 193,
	0, 424, 228, 335, 332, 455, 255, 247, 243, 227,
	281, 341, 381, 442, 375, 0, 329, 0, 0, 433,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 366,
	434, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 452, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 268,
	0, 355, 231, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 365, 406, 412, 0, 0, 0, 229, 0,
	410, 379, 469, 213, 257, 403, 384, 408, 391, 260,
	0, 0, 409, 330, 457, 398, 467, 486, 487, 237,
	359, 476, 446, 482, 498, 206, 234, 373, 439, 472,
	430, 352, 453, 454, 292, 429, 266, 191, 328, 492,
	204, 418, 221, 211, 197, 441, 465, 218, 422, 0,
	0, 500, 199, 463, 438, 348, 289, 290, 198, 0,
	402, 242, 264, 232, 368, 460, 461, 230, 501, 208,
	481, 201, 0, 480, 361, 456, 464, 349, 340, 200,
	462, 347, 339, 295, 314, 315, 253, 275, 396, 333,
	397, 276, 357, 356, 358, 194, 473, 0, 195, 0,
	435, 474, 502, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 372, 395, 393, 399, 0,
	451, 468, 477, 484, 490, 491, 493, 494, 495, 496,
	497, 360, 278, 431, 294, 331, 0, 0, 378, 411,
	219, 471, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 400, 261, 499, 479, 475,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	342, 343, 344, 345, 362, 363, 364, 367, 370, 371,
	374, 376, 377, 380, 387, 388, 389, 390, 392, 394,
	401, 405, 413, 414, 415, 416, 417, 420, 421, 425,
	426, 427, 428, 436, 440, 458, 459, 470, 483, 488,
	419, 576, 466, 489, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 478, 437, 207, 407, 262, 196, 225,
	210, 233, 248, 251, 288, 346, 353, 382, 386, 267,
	245, 223, 404, 220, 423, 443, 444, 445, 447, 350,
	240, 385, 0, 351, 334, 449, 450, 280, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 383, 0,
	193, 0, 424, 228, 335, 332, 455, 255, 247, 243,
	227, 281, 341, 381, 442, 375, 0, 329, 0, 0,
	433, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	366, 434, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 452, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 355, 231, 0, 0, 524, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 365, 406, 412, 0, 0, 0, 229,
	0, 410, 379, 469, 213, 257, 403, 384, 408, 391,
	260, 0, 0, 409, 330, 457, 398, 467, 486, 487,
	237, 359, 476, 446, 482, 498, 206, 234, 373, 439,
	472, 430, 352, 453, 454, 292, 429, 266, 191, 328,
	492, 204, 418, 221, 211, 197, 441, 465, 218, 422,
	0, 0, 500, 199, 463, 438, 348, 289, 290, 198,
	0, 402, 242, 264, 232, 368, 460, 461, 230, 501,
	208, 481, 201, 0, 480, 361, 456, 464, 349, 340,
	200, 462, 347, 339, 295, 314, 315, 253, 275, 396,
	333, 397, 276, 357, 356, 358, 194, 473, 0, 195,
	0, 435, 474, 502, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 372, 395, 393, 399,
	0, 451, 468, 477, 484, 490, 491, 493, 494, 495,
	496, 497, 360, 278, 431, 294, 331, 0, 0, 378,
	411, 219, 471, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 400, 261, 499, 479,
	475, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 342, 343, 344, 345, 362, 363, 364, 367, 370,
	371, 374, 376, 377, 380, 387, 388, 389, 390, 392,
	394, 401, 405, 413, 414, 415, 416, 417, 420, 421,
	425, 426, 427, 428, 436, 440, 458, 459, 470, 483,
	488, 419, 270, 466, 489, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 478, 437, 207, 407, 262, 196,
	225, 210, 233, 248, 251, 288, 346, 353, 382, 386,
	267, 245, 223, 404, 220, 423, 443, 444, 445, 447,
	350, 240, 385, 0, 351, 334, 449, 450, 280, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 383,
	0, 193, 0, 424, 228, 335, 332, 455, 255, 247,
	243, 227, 281, 341, 381, 442, 375, 0, 329, 0,
	0, 433, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 366, 434, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 452, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 355, 231, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 365, 406, 412, 0, 0, 0,
	229, 0, 410, 379, 469, 213, 257, 403, 384, 408,
	391, 260, 0, 0, 409, 330, 457, 398, 467, 486,
	487, 237, 359, 476, 446, 482, 498, 206, 234, 373,
	439, 472, 430, 352, 453, 454, 292, 429, 266, 191,
	328, 492, 204, 418, 221, 211, 197, 441, 465, 218,
	422, 0, 0, 500, 199, 463, 438, 348, 289, 290,
	198, 0, 402, 242, 264, 232, 368, 460, 461, 230,
	501, 208, 481, 201, 0, 480, 361, 456, 464, 349,
	340, 200, 462, 347, 339, 295, 314, 315, 253, 275,
	396, 333, 397, 276, 357, 356, 358, 194, 473, 0,
	195, 0, 435, 474, 502, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 372, 395, 393,
	399, 0, 451, 468, 477, 484, 490, 491, 493, 494,
	495, 496, 497, 360, 278, 431, 294, 331, 0, 0,
	378, 411, 219, 471, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 400, 261, 499,
	479, 475, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 342, 343, 344, 345, 2830, 363, 364, 367,
	370, 371, 374, 376, 377, 380, 387, 388, 389, 390,
	392, 394, 401, 405, 413, 414, 415, 416, 417, 420,
	421, 425, 426, 427, 428, 436, 440, 458, 459, 470,
	483, 488, 419, 270, 466, 489, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 478, 437, 207, 407, 262,
	196, 225, 210, 233, 248, 251, 288, 346, 353, 382,
	386, 267, 245, 223, 404, 220, 423, 443, 444, 445,
	447, 350, 240, 385, 0, 351, 334, 449, 450, 280,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	383, 0, 193, 0, 424, 228, 335, 332, 455, 255,
	247, 243, 227, 281, 341, 381, 442, 375, 0, 329,
	0, 0, 433, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 366, 434, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 452, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 355, 231, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 365, 406, 412, 0, 0,
	0, 229, 0, 410, 379, 469, 213, 257, 403, 384,
	408, 391, 260, 0, 0, 409, 330, 457, 398, 467,
	486, 487, 237, 359, 476, 446, 482, 498, 206, 234,
	373, 439, 472, 430, 352, 453, 454, 292, 429, 266,
	191, 328, 492, 204, 418, 221, 211, 197, 441, 465,
	218, 422, 0, 0, 500, 199, 463, 438, 348, 289,
	290, 198, 0, 402, 242, 264, 232, 368, 460, 461,
	230, 501, 208, 481, 201, 0, 480, 361, 456, 464,
	349, 340, 200, 462, 347, 339, 295, 314, 315, 253,
	275, 396, 333, 397, 276, 357, 356, 358, 194, 473,
	0, 195, 0, 435, 474, 502, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 372, 395,
	393, 399, 0, 451, 468, 477, 484, 490, 491, 493,
	494, 495, 496, 497, 360, 278, 431, 294, 331, 0,
	0, 378, 411, 219, 471, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 400, 261,
	499, 479, 475, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 342, 343, 344, 345, 362, 363, 364,
	367, 370, 371, 374, 376, 377, 380, 387, 388, 389,
	390, 392, 394, 401, 405, 413, 414, 415, 416, 417,
	420, 421, 425, 426, 427, 428, 436, 440, 458, 459,
	470, 483, 488, 419, 270, 466, 489, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 478, 437, 207, 407,
	262, 196, 225, 210, 233, 248, 251, 288, 346, 353,
	382, 386, 267, 245, 223, 404, 220, 423, 443, 444,
	445, 447, 350, 240, 385, 0, 351, 334, 449, 450,
	280, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 383, 0, 193, 0, 424, 228, 335, 332, 455,
	255, 247, 243, 227, 281, 341, 381, 442, 375, 0,
	329, 0, 0, 433, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 366, 434, 259, 0, 0, 0, 0,
	184, 2485, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 452, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 355, 231, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 365, 406, 412, 0,
	0, 0, 229, 0, 410, 379, 469, 213, 257, 403,
	384, 408, 391, 260, 0, 0, 409, 330, 457, 398,
	467, 486, 487, 237, 359, 476, 446, 482, 498, 206,
	234, 373, 439, 472, 430, 352, 453, 454, 292, 429,
	266, 191, 328, 492, 204, 418, 221, 211, 197, 441,
	465, 218, 422, 0, 0, 500, 199, 463, 438, 348,
	289, 290, 198, 0, 402, 242, 264, 232, 368, 460,
	461, 230, 501, 208, 481, 201, 0, 480, 361, 456,
	464, 349, 340, 200, 462, 347, 339, 295, 314, 315,
	253, 275, 396, 333, 397, 276, 357, 356, 358, 194,
	473, 0, 195, 0, 435, 474, 502, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 372,
	395, 393, 399, 0, 451, 468, 477, 484, 490, 491,
	493, 494, 495, 496, 497, 360, 278, 431, 294, 331,
	0, 0, 378, 411, 219, 471, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 400,
	261, 499, 479, 475, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 342, 343, 344, 345, 362, 363,
	364, 367, 370, 371, 374, 376, 377, 380, 387, 388,
	389, 390, 392, 394, 401, 405, 413, 414, 415, 416,
	417, 420, 421, 425, 426, 427, 428, 436, 440, 458,
	459, 470, 483, 488, 419, 270, 466, 489, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 478, 437, 207,
	407, 262, 196, 225, 210, 233, 248, 251, 288, 346,
	353, 382, 386, 267, 245, 223, 404, 220, 423, 443,
	444, 445, 447, 350, 240, 385, 0, 351, 334, 449,
	450, 280, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 383, 0, 193, 0, 424, 228, 335, 332,
	455, 255, 247, 243, 227, 281, 341, 381, 442, 375,
	0, 329, 0, 0, 433, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 366, 434, 259, 0, 0, 0,
	0, 184, 2034, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 452, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 355, 231, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 365, 406, 412,
	0, 0, 0, 229, 0, 410, 379, 469, 213, 257,
	403, 384, 408, 391, 260, 0, 0, 409, 330, 457,
	398, 467, 486, 487, 237, 359, 476, 446, 482, 498,
	206, 234, 373, 439, 472, 430, 352, 453, 454, 292,
	429, 266, 191, 328, 492, 204, 418, 221, 211, 197,
	441, 465, 218, 422, 0, 0, 500, 199, 463, 438,
	348, 289, 290, 198, 0, 402, 242, 264, 232, 368,
	460, 461, 230, 501, 208, 481, 201, 0, 480, 361,
	456, 464, 349, 340, 200, 462, 347, 339, 295, 314,
	315, 253, 275, 396, 333, 397, 276, 357, 356, 358,
	194, 473, 0, 195, 0, 435, 474, 502, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	372, 395, 393, 399, 0, 451, 468, 477, 484, 490,
	491, 493, 494, 495, 496, 497, 360, 278, 431, 294,
	331, 0, 0, 378, 411, 219, 471, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	400, 261, 499, 479, 475, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 342, 343, 344, 345, 362,
	363, 364, 367, 370, 371, 374, 376, 377, 380, 387,
	388, 389, 390, 392, 394, 401, 405, 413, 414, 415,
	416, 417, 420, 421, 425, 426, 427, 428, 436, 440,
	458, 459, 470, 483, 488, 419, 270, 466, 489, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 478, 437,
	207, 407, 262, 196, 225, 210, 233, 248, 251, 288,
	346, 353, 382, 386, 267, 245, 223, 404, 220, 423,
	443, 444, 445, 447, 350, 240, 385, 0, 0, 334,
	449, 450, 280,
}

var yyPact = [...]int{
	3738, -1000, -406, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1903, 1945, -1000, -1000,
	-1000, -1000, 2068, -1000, 669, 1597, -1000, 1862, 5031, -1000,
	38671, 440, -1000, 37509, 413, 254, 38671, -1000, 131, -1000,
	122, 38671, 126, 36928, -1000, -1000, -311, 16002, 1801, 28,
	20, 38671, -1000, -1000, -1000, -1000, 2018, 1557, -1000, 320,
	-1000, -1000, -1000, -1000, -1000, -1000, 36347, -1000, -1000, -1000,
	1889, 1843, 2065, 595, 1786, -1000, 1965, 1557, -1000, 16002,
	2009, 1943, 15421, -1000, 15421, 316, -1000, -1000, 11925, -1000,
	-1000, 21241, 38671, 27051, 209, -1000, 1862, -1000, -1000, 347,
	-1000, 253, 1524, -1000, 1522, -1000, 639, 431, 274, 399,
	395, 272, 271, 270, 268, 266, 264, 261, 256, 262,
	-1000, 618, 618, -198, -199, 2887, 332, 332, 332, 349,
	1828, 1825, -1000, 648, -1000, 618, 618, 305, 618, 618,
	618, 618, 218, 214, 618, 618, 618, 618, 618, 618,
	618, 618, 618, 618, 618, 618, 618, 618, 618, 323,
	1862, 193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 38671, 158, 38671, -1000, 515, 38671, 740, 740,
	44, 740, 740, 740, 740, 148, 535, 19, -1000, 147,
	188, 123, 191, 726, 110, 143, -1000, -1000, 189, 726,
	1113, 608, 124, -1000, 740, 9581, 9581, 9581, -1000, 1847,
	-1000, -1000, -1000, -1000, -1000, -1000, 1041, -1000, 343, -1000,
	-1000, -1000, -1000, 38671, 35766, 314, 656, -1000, -1000, -1000,
	38, -1000, -1000, 1269, 1154, 16002, 919, -1000, 1428, 563,
	-1000, -1000, -1000, -1000, -1000, 488, 16583, 16583, 16583, 16583,
	-1000, -1000, 1545, 1545, 1545, 1545, 16583, 1545, 16583, 1545,
	1545, 1545, 1545, 16002, 1545, 1545, 1545, -1000, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 514, 1545, 1545, 1545, 1545,
	1545, -1000, -1000, -1000, -1000, 1545, 1545, 1545, 1545, 1545,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18907,
	-1000, 13678, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 38671, -1000, 1545, 140, 38671, 38671, 249, 1965, 1557,
	-1000, 2018, 1964, 320, -1000, 1986, 1231, 1375, 1125, 1557,
	1448, 38671, -1000, 1548, -1000, -1000, -1000, 1744, 1043, 1103,
	-1000, -1000, -1000, -1000, 1226, 16002, -1000, -1000, 2047, -1000,
	18326, 508, 808, 2045, 35185, -1000, 316, 316, 1476, 11339,
	-17, -1000, -1000, -1000, 653, 24727, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1847, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1430, 38671, -1000, -1000, 5651,
	1067, -1000, 1596, -1000, 1422, -1000, 1563, 16002, 1610, 380,
	1067, 372, 370, 367, -1000, -91, -1000, -1000, -1000, -1000,
	-1000, 618, 618, -1000, 259, 2004, 5031, 5680, -1000, -1000,
	-1000, 34604, 1594, 1067, -1000, 1590, -1000, 712, 439, 476,
	476, 1067, -1000, -1000, 38671, 1067, 710, 705, 38671, 38671,
	-1000, 34023, -1000, 33442, 32861, 998, 38671, 32280, 31699, 31118,
	30537, 29956, -1000, 1671, -1000, 1614, -1000, -1000, -1000, 38671,
	38671, 38671, 304, -1000, -1000, 38671, 1067, -1000, -1000, 997,
	996, 618, 618, 995, 1099, 1096, 1090, 618, 618, 989,
	1089, 25889, 192, 987, 986, 981, 988, 1088, 172, 950,
	940, 979, 38671, 1584, 38671, -1000, 183, 592, 365, 651,
	1862, 1800, 1455, 342, 374, 1067, 310, 310, 38671, -1000,
	10167, -1000, -1000, 1085, 16002, -1000, 734, 726, 726, -1000,
	-1000, -1000, -1000, -1000, -1000, 740, 38671, 734, -1000, -1000,
	-1000, 726, 740, 38671, 740, 740, 740, 740, 726, 726,
	726, 740, 38671, 38671, 38671, 38671, 38671, 38671, 38671, 38671,
	38671, 9581, 9581, 9581, 608, 740, -322, -1000, 1082, -1000,
	1688, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-106, 1454, 29375, -1000, -323, -324, -325, -328, -1000, -1000,
	-1000, -330, -332, -1000, -1000, -1000, 16002, 16002, 16002, 16002,
	-221, -1000, 806, 16583, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 839, 717, 16583, 16583, 16583, 16583, 16583, 16583, 16583,
	16583, 16583, 16583, 16583, 16583, 16583, 16583, 16583, 749, 6813,
	6813, 563, 563, 563, 563, -1000, 15421, 16002, 16002, 563,
	-1000, 1067, 28794, 15421, 15421, 16002, 1834, 664, 1154, 38671,
	-1000, 1125, -1000, -1000, -1000, 846, -1000, 38671, 38671, 546,
	16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002,
	16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002,
	16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002, 16002,
	12511, 10167, 15421, 15421, 15421, 15421, 15421, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 506,
	1373, 1185, 1367, -1000, 1451, -1000, -165, 20660, 16002, 1079,
	2033, 1634, 38671, -1000, -1000, -1000, 1965, -1000, 1965, 1373,
	1952, 1748, 15421, -1000, -1000, 1952, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1177, -1000, 38671, 1448, 1934, 38671,
	1722, 1070, 313, -1000, 16002, 16002, 1445, -1000, 879, 38671,
	-1000, -221, -1000, 28213, -1000, -1000, 8995, -1000, 38671, 241,
	38671, -1000, 22984, 27632, 10753, -17, -1000, 10753, 1383, -1000,
	3, -23, 13092, 562, -1000, -1000, -1000, 2887, 17745, 1230,
	562, 60, -1000, -1000, -1000, 1563, -1000, 1563, 1563, 1563,
	1563, 313, 313, 313, 313, -1000, -1000, -1000, -1000, -1000,
	1583, 1582, -1000, 1563, 1563, 1563, 1563, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1580, 1580, 1580, 1564, 1564, 327,
	-1000, 16002, 250, 27051, 1920, 964, 1380, 183, 319, 1630,
	1067, 1067, 1067, 319, -1000, 1259, 1077, -1000, -395, 1440,
	-1000, -1000, 2003, -1000, -1000, 662, 736, 735, 629, 38671,
	155, 234, -1000, 317, -1000, 27051, 1067, 703, 476, 1067,
	-1000, 1067, -1000, -1000, -1000, -1000, -1000, 1067, 1439, -1000,
	1354, 770, 723, 766, 720, 1439, -1000, -1000, -150, 1439,
	-1000, 1439, -1000, 1439, -1000, 1439, -1000, 1439, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 643, 38671, 155, 749,
	-1000, 341, -1000, -1000, 749, 749, -1000, -1000, -1000, -1000,
	1068, 1060, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -383,
	38671, -1000, 179, 650, 222, 263, 226, 38671, 156, 1937,
	175, 212, 38671, 38671, 310, 1685, 38671, 1907, 38671, -1000,
	-1000, -1000, -1000, -1000, 1154, 38671, -1000, -1000, 740, 740,
	-1000, -1000, 38671, 740, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 740, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38671, 38671, -1000, -1000, -1000, -1000, -1000, 98, 0, 309,
	-1000, -1000, -1000, -1000, -1000, 1961, -1000, 1154, 689, 691,
	-1000, 1545, -1000, -1000, 769, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 839, 16583, 16583, 16583, 1461, 375, 1395, 1442,
	890, 845, 845, 750, 750, 569, 569, 569, 569, 569,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1059, -1000,
	1411, -1000, 1538, 1029, 1125, -1000, 1411, 1411, 1312, 15421,
	-1000, -1000, 668, -1000, 16002, 1125, -1000, -1000, 1125, 1125,
	1435, 1433, 2031, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1011, 1380, 1380, 1380, 2200, 2131,
	1125, 1269, 1125, 1427, -1000, 2119, 1380, 1941, 1886, 1860,
	1331, 1809, 1805, 1794, 1380, 1380, 1380, 1222, 1785, 1716,
	1705, 1700, 1695, 1690, 1682, 1662, 1653, 1380, 1125, 15421,
	15421, 1393, 1545, 503, -1000, 1411, 1125, 1125, 1411, 1411,
	10167, 1125, -1000, 38671, -1000, -305, -1000, -44, 502, 1545,
	-1000, 25889, 1125, -1000, 6497, -1000, 39833, -1000, -1000, -1000,
	-1000, -1000, 24146, 1598, 1952, -1000, -1000, 1545, 1420, -1000,
	-1000, 313, 47, 23565, -1000, -1000, 1154, 1154, 16002, -1000,
	-1000, -1000, -1000, -1000, -1000, 480, 2024, 308, 1545, -1000,
	1295, 1830, -1000, -1000, -1000, 1930, 19493, -1000, 1545, 38671,
	1554, 1234, -1000, 478, -1000, 1383, -17, -15, -1000, -1000,
	-1000, -1000, 1154, -1000, 895, 251, 2790, -1000, 321, -1000,
	-1000, -1000, -1000, 1806, 57, -1000, -1000, -1000, 313, 313,
	-1000, -1000, -1000, -1000, -1000, -1000, 1057, 1057, -1000, -1000,
	-1000, -1000, -1000, 963, -1000, -1000, -1000, 947, -1000, -1000,
	1640, 1665, 250, -1000, -1000, 618, 1052, -1000, -1000, 1817,
	38671, -1000, -1000, 1220, 1920, 179, 38671, 681, 1684, -1000,
	1630, 1630, 1630, 38671, -1000, -1000, -1000, -1000, -385, 58,
	334, -1000, -1000, -1000, 461, 38671, 1418, -1000, 145, -1000,
	1209, -1000, 38671, -1000, 1416, 1573, 1067, 1067, -1000, -1000,
	-1000, 38671, 1545, -1000, -1000, -1000, -1000, 360, 1861, 1854,
	155, 145, 562, 1067, -1000, -1000, -1000, -1000, -1000, -386,
	1413, 357, 165, 297, 38671, 38671, 38671, 38671, 38671, 382,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 204, 339,
	-1000, 38671, 38671, 466, -1000, -1000, -1000, 726, -1000, -1000,
	726, -1000, -1000, -1000, -1000, -1000, 1837, 38671, -13, -346,
	-1000, -343, 16002, -1000, -1000, -1000, -1000, 1119, 358, 1395,
	16583, 16583, 15421, -124, 501, 501, 749, -1000, -1000, -1000,
	16002, 16002, 1328, 660, -1000, 16002, 795, -1000, -1000, -1000,
	16002, 16002, 16002, 1125, 246, -1000, -1000, -1000, 16002, 16002,
	-1000, -1000, 16002, 16002, -1000, 16002, 16002, 17164, 1125, 17164,
	16002, 16002, 17164, -1000, -1000, -1000, -1000, 17164, 16002, 16002,
	16002, 16002, 16002, 16002, 16002, 16002, 16002, -1000, -1000, 1411,
	1411, 15421, 10167, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 502, -1000, 476, 476, 476, 38671, -1000,
	-1000, -1000, -1000, -1000, -1000, 1362, 1948, -1000, 1761, 1758,
	2029, 2024, -1000, 22984, 1952, -1000, -1000, 38671, -297, -1000,
	1797, 1827, -1000, -1000, -1000, -1000, 8409, 1965, 16002, 1679,
	38671, 1545, -1000, 20079, 38671, 38671, 22984, 22984, 22984, 22984,
	22984, -1000, 1717, 1681, -1000, 1737, 1707, 1724, 38671, -1000,
	1409, 1125, 1964, 19493, 16002, 21822, 1236, 22984, -1000, -1000,
	22984, 38671, 7823, -1000, -1000, -38, -57, -1000, -1000, -1000,
	-1000, 2887, -1000, -1000, 371, 1929, 1814, -1000, -1000, -1000,
	-1000, 1398, -1000, 1391, 1357, 1387, 119, -1000, 1605, 1836,
	618, 618, -1000, 941, -1000, 1067, -1000, -1000, -1000, 356,
	-1000, 1905, 38671, 1675, 1657, 1646, -1000, -400, 926, 1569,
	1533, 16002, 1568, 1995, 1330, 38671, -1000, -1000, 38671, -1000,
	142, -1000, 250, 38671, -1000, -1000, -1000, 234, 38671, -1000,
	6435, 145, -1000, -1000, -1000, -1000, -1000, -1000, 38671, 168,
	-1000, 1567, 1032, -1000, -1000, 1623, -1000, -1000, -1000, -1000,
	161, 208, -1000, 38671, 462, 1665, 38671, -1000, -1000, -1000,
	740, 740, -1000, -1000, 1829, -1000, 1067, 1380, 16583, 16583,
	-1000, 563, -1000, 1545, 1125, 1563, 1563, -1000, 1563, 1564,
	-1000, 1563, 115, 1563, 108, 1563, -1000, -1000, 1125, 1125,
	1124, 1038, -98, -1000, 1154, 16002, 1635, 1631, 1380, -1000,
	1562, 1561, 1380, 1380, -1000, 1154, 1331, 1624, 1216, -1000,
	-1000, -1000, -1000, 1343, 1380, 1528, -295, 1125, 1372, 1372,
	1372, 1372, 1372, 1367, 1367, 1367, 1367, -1000, -1000, 1125,
	-1000, -1000, 1947, 1947, 1947, 1332, 39252, 38671, -1000, -1000,
	-1000, -1000, 2024, 2019, 1335, -1000, -1000, 47, 369, -1000,
	1776, 1827, -1000, 1993, 1793, 1989, -1000, -1000, -1000, 1154,
	-1000, 1881, 1229, -1000, 646, 1255, -1000, -1000, 14840, 1337,
	1755, 468, 1332, 1323, 1830, 1615, 1643, 2240, -1000, -1000,
	-1000, -1000, 1663, -1000, 1650, -1000, -1000, 1548, -1000, -1000,
	1185, 1359, 241, 22984, 1319, 1319, -1000, 457, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 784, 6169, 2062, -1000, 1050,
	-1000, 888, -1000, 701, 700, -1000, 38671, 1558, -1000, 313,
	1049, 313, 899, -1000, 897, -1000, -1000, -236, -1000, -1000,
	1606, 1652, -1000, -1000, 38671, -1000, -1000, 38671, 38671, 38671,
	1556, 1987, -1000, 16002, 1553, 624, 1591, 38671, 38671, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 359,
	618, -356, 207, 200, 618, 618, 618, -1000, -1000, 1313,
	1309, -1000, -193, -1000, 16002, -1000, -1000, -1000, 851, 851,
	-1000, 1548, -1000, -1000, -1000, 1179, -1000, -1000, -173, 38671,
	38671, 38671, 38671, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 563, 16583, -1000, -1000, 313, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 16002, -1000, 16002,
	-1000, 1965, 1047, 1154, 16002, 16002, -1000, 894, 881, -1000,
	-1000, 1125, 17164, -1000, 17164, -1000, 16002, 190, 501, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1545, 1783, 1545, 1545, 21822, -1000, -1000, 2019, 2020, 1985,
	1773, 1781, 1781, 1776, -1000, 1984, 1970, -1000, 1046, 1969,
	1040, 698, -1000, 38671, 16002, 1545, -1000, 311, 38671, 1545,
	38671, -1000, 2016, -1000, -1000, 16002, 1551, -1000, 16002, -1000,
	-1000, -1000, -1000, -1000, 6813, 2024, 1319, -1000, -1000, 578,
	-1000, 16002, -1000, -1000, -1000, 5771, -1000, -1000, -1000, -1000,
	-1000, 1549, 16002, -1000, -1000, -1000, 1170, 1159, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1548, -1000, -1000, -1000,
	-1000, 234, -392, 1542, 38671, 856, -1000, 1300, 1330, 229,
	1545, 1039, 618, 618, 618, 840, 838, 25889, 293, -1000,
	234, -1000, -200, -201, 1380, -1000, -1000, 1917, -1000, -1000,
	10167, -1000, -1000, 1547, 1628, -1000, 199, -1000, 1380, 1380,
	1125, -1000, 1380, 1380, 1144, 1140, -1000, 1216, -1000, 992,
	-1000, 190, 1125, 1642, -1000, -1000, 6813, -1000, 22403, -1000,
	1968, 1967, 26470, 26470, 502, 2020, -1000, 16002, 16002, 1767,
	825, -1000, -1000, -1000, -1000, 1031, 1019, -1000, 1017, -1000,
	2060, -1000, 1154, -1000, 1545, -1000, 385, 1255, -1000, 1965,
	1154, 38671, 1154, 51, 2016, -1000, 1380, -1000, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 38671, 1355, -1000,
	-1000, 1910, 1212, 53, -1000, 1207, -1000, -1000, 414, -1000,
	16002, -1000, 25889, 1015, 1013, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 320, 1304, -1000, 617, 38671, 38671, 1125,
	257, -179, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16002, -1000, 1125, 1638, -1000, -227, -1000, 1184, -1000,
	-1000, -1000, -1000, -1000, 1184, 1184, -1000, -1000, 1154, 1269,
	-1000, 785, -1000, -1000, -1000, -1000, -1000, 38671, 1255, 38671,
	-1000, 1150, 1125, 1545, 1965, -1000, 1147, -1000, 320, -1000,
	1526, 1533, -1000, -1000, -1000, 14259, -1000, -1000, -1000, -1000,
	-167, 10167, 7237, 1138, -1000, -1000, 1709, -137, -187, 1331,
	-1000, -336, -1000, -1000, 25308, -1000, -1000, -1000, -1000, -1000,
	1245, -1000, -1000, 21822, 38090, -1000, 1637, 599, -167, 16002,
	1396, 1125, -1000, -37, -1000, -1000, -1000, -1000, -1000, 1623,
	-1000, 1666, -1000, 1125, -1000, -1000, -1000, 1133, -1000, 3339,
	-265, 1636, 1632, 2042, -1000, -1000, -1000, 764, 847, -1000,
	-1000, -1000, -1000, 1198, 38671, -1000, 315, -1000, -1000, -173,
	-176, -1000, -1000, 38090, -261, 562, 6813, -1000, -1000, 2054,
	-1000, 2049, 512, 512, -1000, -1000, -403, 1129, 176, -1000,
	-181, -1000, -1000, 1901, 51, -1000, -1000, -1000, 300, 864,
	-1000, -1000, 837, -403, -1000, -189, -266, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6813, 206, 206, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2457, 2456, 24, 4, 2455, 2454, 2453, 43, 124,
	175, 32, 176, 92, 2450, 2449, 2448, 2447, 2445, 2444,
	2443, 212, 206, 205, 2442, 2441, 2440, 2439, 2438, 2437,
	2436, 2435, 2434, 2433, 201, 158, 174, 2432, 2431, 2430,
	108, 167, 81, 83, 170, 2429, 2428, 78, 2427, 2426,
	2425, 194, 162, 713, 2424, 193, 107, 36, 2419, 2418,
	2417, 2416, 2415, 2414, 2413, 2412, 2411, 2409, 2407, 2406,
	2405, 2404, 2403, 2401, 2397, 273, 2395, 2394, 16, 2392,
	74, 2391, 2389, 2388, 128, 2385, 2383, 2382, 2381, 2380,
	2377, 2376, 137, 2375, 2367, 2366, 2364, 177, 2363, 2362,
	142, 100, 105, 2361, 2359, 93, 173, 2357, 110, 2356,
	2355, 2354, 150, 2353, 4437, 2350, 65, 59, 2348, 200,
	88, 53, 50, 9, 5, 2346, 2345, 63, 101, 2344,
	90, 69, 2343, 115, 127, 2341, 2340, 14, 7, 2339,
	6, 1, 2, 66, 2336, 2331, 104, 2330, 2329, 2328,
	86, 2326, 2325, 3562, 2323, 89, 133, 96, 73, 2322,
	29, 47, 2321, 2319, 2315, 2305, 2304, 41, 2298, 2296,
	2295, 138, 26, 168, 33, 77, 46, 139, 2293, 165,
	76, 2290, 136, 2289, 2287, 68, 31, 37, 2270, 42,
	130, 106, 27, 82, 144, 2269, 2261, 45, 71, 2258,
	2257, 2256, 2252, 2250, 2249, 70, 2245, 60, 2244, 180,
	2243, 20, 2242, 40, 35, 2241, 61, 118, 67, 28,
	2240, 155, 2236, 49, 161, 129, 156, 2235, 2234, 2230,
	171, 258, 2229, 2228, 111, 164, 146, 145, 2225, 249,
	2224, 2222, 98, 1178, 1547, 25, 157, 2219, 2218, 3056,
	140, 30, 22, 2216, 132, 2215, 2213, 2211, 178, 159,
	99, 864, 55, 2209, 2207, 18, 2206, 2203, 2200, 2199,
	2193, 2192, 85, 2189, 2171, 2166, 181, 58, 11, 152,
	75, 2162, 2161, 2152, 116, 102, 2151, 153, 149, 122,
	91, 2149, 163, 148, 103, 2148, 125, 2145, 2144, 2143,
	2142, 2141, 84, 2140, 2137, 2136, 2134, 151, 147, 117,
	79, 2132, 80, 126, 143, 154, 39, 2130, 34, 2129,
	2128, 2125, 169, 17, 2124, 8, 48, 52, 23, 95,
	97, 2116, 0, 2114, 15, 166, 248, 160, 2111, 2110,
	10, 13, 12, 2109, 2106, 135, 2102, 2101, 2095, 21,
	38, 19, 3, 2090, 2087, 4094, 2212, 131, 2083, 179,
}

//line sql.y:6721
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 353, 354, 354, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 332, 332,
	332, 335, 335, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 82, 82, 22, 23, 23, 23, 23,
	357, 357, 148, 148, 146, 146, 147, 147, 216, 216,
	24, 25, 25, 226, 226, 225, 225, 225, 227, 227,
	227, 227, 261, 261, 26, 26, 26, 26, 26, 98,
	98, 334, 334, 333, 325, 325, 324, 324, 323, 331,
	331, 330, 330, 329, 38, 39, 48, 48, 48, 48,
	49, 50, 336, 336, 298, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 300, 300, 286,
	286, 299, 299, 299, 299, 299, 299, 299, 285, 285,
	109, 109, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 348, 348, 196, 196, 196, 196, 196,
	196, 118, 118, 127, 127, 127, 127, 127, 116, 116,
	117, 115, 115, 115, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 126, 126, 122,
	122, 122, 123, 123, 123, 124, 124, 349, 349, 349,
	349, 265, 265, 265, 265, 268, 268, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 267, 267, 267, 267,
	267, 269, 269, 269, 269, 269, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 271, 271, 271, 271, 271, 271, 271, 271, 284,
	284, 272, 272, 279, 279, 280, 280, 280, 281, 281,
	281, 282, 282, 277, 277, 277, 277, 277, 277, 278,
	278, 278, 287, 312, 312, 311, 311, 309, 309, 309,
	309, 309, 309, 296, 296, 306, 306, 306, 306, 306,
	295, 295, 291, 291, 291, 292, 292, 293, 293, 290,
	290, 294, 294, 308, 308, 307, 307, 288, 288, 289,
	289, 314, 350, 350, 350, 350, 350, 351, 351, 315,
	341, 342, 340, 340, 340, 340, 340, 80, 80, 80,
	238, 238, 238, 304, 304, 303, 303, 303, 305, 305,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 233, 233,
	233, 339, 339, 339, 339, 339, 339, 338, 338, 338,
	301, 301, 301, 337, 337, 56, 56, 180, 180, 45,
	45, 45, 45, 45, 45, 44, 44, 44, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 84, 84, 85, 85, 85, 85, 87, 87,
	87, 317, 317, 57, 57, 3, 3, 136, 138, 139,
	139, 137, 137, 137, 137, 137, 137, 60, 60, 59,
	59, 141, 140, 142, 142, 142, 1, 1, 2, 2,
	4, 4, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 283, 283, 283, 316, 316, 318,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 320,
	320, 320, 58, 58, 321, 273, 274, 275, 5, 6,
	297, 319, 94, 94, 28, 37, 37, 29, 29, 29,
	29, 30, 30, 61, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 343, 343, 232, 232, 240, 240, 231, 231,
	254, 254, 254, 234, 234, 234, 235, 235, 347, 347,
	347, 63, 63, 63, 65, 65, 66, 67, 67, 256,
	256, 257, 257, 68, 69, 81, 81, 81, 81, 81,
	81, 83, 83, 83, 15, 15, 15, 15, 77, 77,
	77, 14, 14, 64, 64, 71, 344, 344, 345, 346,
	346, 346, 346, 72, 74, 31, 31, 31, 31, 31,
	31, 104, 104, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 99, 99, 99, 93, 93,
	358, 75, 76, 76, 97, 97, 97, 90, 90, 90,
	96, 96, 96, 16, 16, 17, 215, 215, 18, 18,
	101, 101, 103, 103, 103, 103, 103, 105, 105, 105,
	105, 105, 105, 105, 100, 100, 102, 102, 102, 102,
	247, 247, 247, 246, 246, 130, 130, 132, 131, 131,
	133, 133, 134, 134, 134, 134, 178, 156, 156, 213,
	213, 211, 211, 212, 212, 214, 214, 214, 214, 217,
	217, 135, 135, 135, 135, 143, 143, 144, 144, 145,
	145, 255, 255, 252, 252, 252, 251, 251, 149, 149,
	149, 151, 150, 150, 150, 150, 152, 152, 154, 154,
	153, 153, 155, 160, 160, 159, 159, 157, 157, 157,
	157, 158, 158, 158, 158, 161, 161, 114, 114, 114,
	114, 114, 114, 114, 125, 125, 125, 125, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 229, 229, 162, 162, 170,
	170, 170, 170, 163, 163, 163, 163, 163, 163, 163,
	171, 171, 171, 177, 172, 172, 168, 168, 168, 168,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 263, 263, 328, 328, 327, 327, 326,
	326, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 359, 359, 276, 276, 276, 276, 169, 169,
	169, 169, 169, 95, 95, 95, 95, 95, 260, 260,
	260, 264, 264, 264, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 183,
	183, 91, 91, 181, 181, 182, 184, 184, 179, 179,
	179, 165, 165, 165, 185, 185, 186, 186, 187, 187,
	189, 188, 188, 190, 191, 191, 191, 192, 192, 193,
	193, 193, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 106, 106, 106, 106, 108, 108,
	107, 107, 78, 78, 79, 79, 79, 112, 112, 113,
	113, 113, 110, 110, 111, 111, 209, 209, 194, 194,
	194, 201, 201, 201, 197, 197, 199, 199, 199, 200,
	200, 200, 198, 206, 206, 208, 208, 207, 207, 203,
	203, 204, 204, 205, 205, 205, 202, 202, 164, 164,
	164, 164, 164, 210, 210, 210, 210, 218, 218, 174,
	174, 176, 176, 175, 129, 219, 219, 223, 220, 220,
	224, 224, 224, 224, 224, 221, 221, 222, 222, 248,
	248, 248, 228, 228, 239, 239, 236, 236, 237, 237,
	230, 230, 241, 241, 241, 73, 173, 173, 313, 313,
	310, 244, 244, 245, 245, 249, 249, 253, 253, 250,
	250, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	355, 356, 258, 259, 259, 259,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 5, 6, 6, 7, 7, 0, 1, 5,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	0, 1, 2, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 8, 6, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 4, 2, 4, 5, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 3, 7, 0,
	3, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	4, 4, 6, 6, 4, 4, 4, 7, 8, 6,
	5, 6, 8, 11, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -353, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -82, -33, 32, -38, -48, 215, -49, -39, 216,
	-50, 218, 217, 254, 219, 247, 74, 296, 297, 299,
	300, 301, 302, -83, 252, 253, 221, 36, 45, 33,
	34, 37, 225, 260, 261, 224, -10, -34, 8, -355,
	11, 425, 249, 248, 28, -12, 456, 85, -354, 590,
	-209, -194, 22, 33, 29, -193, -189, -97, -194, 20,
	18, 7, -75, -358, -75, -75, 12, 13, -75, -298,
	-300, 85, 152, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -322, -44, -41, 220, 217, 264, 119,
	120, 254, 255, 256, 219, 238, 253, 257, 252, 273,
	-40, 80, 33, 456, 459, -305, 216, 222, 223, 426,
	122, 121, 75, 218, -302, 350, 560, -55, 562, 101,
	103, 561, 44, 228, 563, 564, 565, 566, 237, 567,
	568, 569, 570, 576, 577, 578, 579, 123, 7, -75,
	-253, -249, -332, -243, 88, 89, 90, 453, 240, 486,
	487, 289, 80, 41, 347, 350, 560, 296, 310, 304,
	331, 323, 454, 488, 292, 241, 277, 557, 321, 128,
	562, 295, 489, 255, 355, 356, 357, 101, 299, 392,
	575, 294, 490, 573, 103, 561, 79, 51, 44, 250,
	319, 224, 315, 563, 278, 491, 464, 271, 122, 119,
	582, 36, 313, 50, 30, 572, 121, 49, 564, 143,
	492, 565, 359, 338, 551, 48, 360, 256, 493, 83,
	261, 458, 559, 361, 314, 362, 288, 571, 221, 494,
	543, 363, 364, 552, 495, 339, 343, 496, 384, 365,
	589, 52, 497, 498, 553, 120, 499, 78, 566, 308,
	309, 500, 286, 239, 386, 335, 435, 442, 443, 107,
	108, 438, 109, 444, 110, 445, 446, 447, 436, 111,
	104, 437, 448, 449, 336, 337, 112, 450, 106, 105,
	439, 441, 113, 451, 237, 35, 366, 455, 290, 58,
	265, 387, 46, 341, 586, 45, 547, 501, 550, 334,
	330, 53, 502, 503, 504, 505, 567, 333, 307, 329,
	581, 4, 283, 568, 62, 223, 345, 344, 346, 272,
	383, 326, 506, 507, 508, 244, 81, 509, 316, 21,
	510, 511, 367, 279, 512, 56, 513, 514, 390, 253,
	515, 54, 569, 39, 258, 583, 570, 516, 517, 518,
	519, 260, 520, 369, 521, 368, 340, 342, 267, 370,
	457, 522, 312, 257, 574, 523, 245, 558, 259, 264,
	252, 391, 246, 524, 525, 526, 527, 528, 293, 542,
	529, 530, 300, 576, 43, 531, 532, 533, 534, 287,
	282, 385, 394, 61, 82, 352, 535, 556, 306, 280,
	536, 297, 55, 577, 578, 579, 274, 580, 9, 587,
	588, 372, 123, 284, 285, 47, 327, 266, 537, 538,
	317, 318, 332, 305, 328, 298, 544, 268, 373, 254,
	539, 393, 281, 348, 353, 461, 273, 374, 555, 460,
	325, 322, 275, 540, 375, 229, 269, 270, 541, 545,
	376, 377, 291, 378, 379, 380, 381, 382, 276, 459,
	303, 320, 354, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 434, 227, -75, 227, -153, -249, 227, -221, 356,
	-240, 358, 371, 366, 376, 364, -232, 367, 369, 267,
	-347, 384, 227, 373, 215, 169, 359, 368, 377, 378,
	291, 379, 382, 276, -343, -332, 565, 580, 128, 324,
	363, 361, 385, 547, 381, 380, -249, 298, -256, 303,
	-244, -332, -243, 301, -153, -81, 543, 219, -258, -258,
	-99, 547, 549, -172, -114, 136, -125, -128, -119, -120,
	-166, -167, -168, -169, -126, -179, 158, 159, 166, 137,
	-177, -129, 26, 452, 427, 426, 169, 31, 211, 68,
	69, 429, 430, 139, 57, 402, 403, -127, 397, 404,
	399, 432, 433, 114, 434, 104, 106, 105, 336, 337,
	435, 436, 437, 107, 108, 109, 110, 111, 112, 113,
	438, 441, 439, 440, 442, 443, 444, 449, 450, 445,
	446, 447, 448, 451, -244, -249, 232, 396, 226, 164,
	425, -121, -117, -8, -175, 395, 400, 401, 405, 398,
	-332, -243, -123, -122, -162, 91, 97, 102, 98, -352,
	115, -355, 92, 93, 94, 95, 96, 116, 117, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	44, 372, 372, -153, -75, -75, -75, -75, -187, -97,
	-189, -10, -8, -355, 8, -75, -8, -9, -13, -34,
	-36, 482, -35, -249, -194, -209, 12, 154, 42, 50,
	-192, -193, -12, -8, -114, 19, 23, 24, -102, 160,
	-114, -249, -76, -102, -230, 231, -75, -75, -220, -261,
	298, -224, 385, 384, -245, -222, -244, -242, -221, 383,
	220, 23, 462, 135, 25, 27, 138, 169, 19, 139,
	37, 222, 324, 238, 168, 234, 426, 215, 72, 463,
	397, 399, 395, 402, 428, 429, 396, 358, 31, 13,
	465, 28, 248, 24, 38, 162, 217, 142, 466, 251,
	26, 249, 114, 117, 468, 22, 75, 243, 14, 236,
	40, 16, 469, 470, 17, 232, 231, 154, 228, 70,
	11, 211, 29, 151, 66, 471, 130, 472, 473, 474,
	475, 68, 152, 20, 584, 400, 401, 33, 548, 452,
	262, 164, 73, 59, 549, 136, 398, 476, 477, 115,
	478, 118, 76, 554, 132, 18, 71, 42, 479, 263,
	480, 233, 585, 481, 388, 482, 153, 218, 425, 69,
	483, 226, 371, 8, 431, 32, 247, 235, 125, 67,
	484, 227, 141, 432, 433, 230, 116, 7, 129, 34,
	12, 74, 77, 403, 404, 405, 57, 124, 456, 140,
	15, 485, 389, 134, 128, -299, 152, -285, -289, -244,
	242, -315, 238, -153, -308, -307, -244, -355, -98, -239,
	228, 236, 235, 129, -336, 132, 284, 396, 226, -51,
	-52, -221, 168, -84, 259, 263, 86, 86, -289, -288,
	-287, -337, 263, 242, -314, -306, 234, 243, -295, 235,
	236, -290, 228, 130, -337, -290, 233, 243, 263, 263,
	123, 263, 123, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 258, -296, 144, -296, 460, 460, -302, -337,
	-337, -337, 230, 35, 35, -241, -290, 230, 25, -296,
	-296, -221, 168, -296, -296, -296, -296, 271, 271, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, -296, 227, -336, -106, 382, 291, 80,
	-53, 273, -37, -153, -239, 228, 229, -336, 260, -153,
	212, -153, -234, 152, 15, -234, -231, 372, 370, 357,
	362, -234, -234, -234, -234, 274, 355, -291, 228, 35,
	239, 372, 274, 355, 274, 275, 274, 275, 365, 375,
	274, -254, 14, 154, 396, 360, 364, 267, 227, 268,
	229, 374, -332, 550, 275, -254, 92, -235, 152, 372,
	270, -234, -259, -355, -245, 324, -259, -259, 32, 89,
	230, -244, -77, -244, 92, -15, -11, -22, -21, -23,
	144, -104, 372, -92, 169, 565, 551, 552, 553, 550,
	369, 558, 556, 554, 274, 555, 86, 132, 134, 135,
	4, -114, 151, -163, 144, 145, 146, 147, 148, 149,
	150, 154, 136, 138, 152, 153, 133, 155, 156, 157,
	158, 159, 160, 161, 163, 162, 164, 165, 168, 213,
	214, -120, -120, -120, -120, -177, -355, -355, -355, -120,
	-229, -355, -120, -355, -355, -355, -355, -183, -114, -355,
	-359, -355, -359, -359, -276, -355, -276, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, 212, -355, -355, -355, -355, -355, -276, -276, -276,
	-276, -276, 102, 97, 91, -179, 98, 92, -244, -249,
	-8, -9, -172, -258, -344, -345, -156, -153, -355, 291,
	-244, -244, 260, -192, -12, -8, -187, -193, -189, -8,
	-75, -90, -103, 63, 64, -105, 24, 38, 67, 65,
	23, -356, 87, -356, -209, -356, 86, -36, -213, 85,
	61, 43, 92, 92, 86, 21, -188, -190, -114, 14,
	-247, 4, -246, 25, -244, 92, 212, 100, 14, -154,
	29, -153, -230, -230, 86, 298, -224, -261, -226, -225,
	386, 388, 144, -248, -244, 92, 31, 87, 86, -153,
	-265, -268, -270, -269, -271, -266, -267, 321, 322, 169,
	325, 327, 328, 329, 330, 331, 332, 333, 334, 335,
	338, 32, 250, 317, 318, 319, 320, 339, 340, 341,
	342, 343, 344, 345, 346, 304, 323, 454, 305, 306,
	307, 308, 309, 310, 312, 313, 314, 315, 316, -335,
	-332, 85, 87, 86, -272, 85, -114, -106, 227, -332,
	228, 228, 228, -75, 425, -296, -296, 258, 19, -44,
	-41, -322, 18, -40, -41, 220, 119, 120, 217, 85,
	-285, 85, -294, -335, -332, 85, 130, 233, 129, -293,
	-290, -293, -294, -332, -179, -332, 130, 130, -217, -244,
	-217, -217, 23, -217, 23, -217, 23, 94, -244, -217,
	23, -217, 23, -217, 23, -217, 23, -217, 23, 31,
	78, 79, 31, 81, 82, 83, -179, -179, -285, -221,
	-153, -332, 94, 94, -296, -296, 94, 92, 92, 92,
	-296, -296, 94, 92, -251, -249, 92, -338, 244, 288,
	290, 94, 94, 94, 94, 31, 92, -339, 31, 572,
	571, 573, 574, 575, 94, 31, 94, 31, 94, -244,
	85, -153, -112, 278, 215, 217, 220, 76, 92, 292,
	144, 44, 86, 230, 227, -332, -236, 232, -236, -244,
	-250, -249, -242, 92, -114, -292, 14, 154, -254, -254,
	-234, -153, -292, -254, -234, -153, -234, -234, -234, -234,
	-254, -254, -254, -234, -249, -249, -153, -153, -153, -153,
	-153, -153, -153, -259, -259, -259, -235, -234, 550, 92,
	76, -257, 301, 335, 544, 545, 546, 86, 456, -146,
	-153, 550, 550, 550, 550, 550, 550, -114, -114, -114,
	-114, 478, -170, 115, 136, 116, 117, -128, -171, -175,
	-177, 99, 154, 138, 152, 153, -119, -120, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -260, -332, 92, 169, -124, -123, 98, -352, -124,
	-100, -102, -114, -114, -332, -244, -100, -100, -114, -96,
	24, 38, -181, -182, 140, -179, -356, -356, 94, 98,
	-244, -244, -89, -88, 407, 408, 409, 410, 412, 413,
	414, 417, 418, 422, 423, 406, 424, 411, 416, 419,
	420, 421, 415, 320, -114, -114, -114, -114, -114, -114,
	-173, -172, -331, -330, -329, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -101, 24,
	38, -100, -245, -250, -242, -100, -101, -101, -100, -100,
	212, -209, -356, 86, -346, 388, 389, 548, -252, 263,
	-251, 25, -173, 92, 14, -215, 77, -244, -192, -192,
	63, 64, 59, -100, -105, -356, -35, 25, -211, -244,
	62, 92, -277, -221, 347, 348, -114, -114, 86, -191,
	27, 28, -153, -246, 160, -250, -153, -216, 263, -153,
	-131, -133, -134, -135, -156, -178, -355, -136, 471, 14,
	-146, -147, -155, -249, -224, -226, 86, 387, 389, 390,
	76, 118, -114, -278, 168, -304, -303, -302, -285, -287,
	-288, -289, 87, -278, -281, 353, 352, -272, -272, -272,
	-272, -272, -277, -277, -277, -277, 85, 85, -272, -272,
	-272, -272, -279, 85, -279, -279, -280, 85, -280, -315,
	-114, -312, -311, -309, -310, 237, 101, 541, 500, 456,
	77, -307, -191, 94, -356, -112, -237, 232, -313, -310,
	-332, -332, -332, -237, -332, 92, -332, 92, -85, -57,
	-1, 584, 585, 586, 86, 19, -286, -285, -56, 288,
	-318, -319, 263, -314, -308, -294, 130, -293, -294, -294,
	-332, 86, 29, 123, 123, 123, 123, 456, 217, 32,
	-285, -56, -260, 230, -260, -260, 92, 92, -233, 580,
	-146, -108, 280, 144, 269, 269, 227, 227, 282, -153,
	293, 295, 294, 292, 23, 281, 283, 285, 271, -153,
	-153, -236, 76, -148, -153, 26, -249, -153, -234, -234,
	-153, -234, -234, -153, -244, -92, 388, 86, 456, 22,
	-93, 22, -355, 115, 116, 117, -171, -119, -120, -119,
	135, 251, 86, -356, 25, 86, 77, -356, -356, -356,
	86, 14, -100, -184, -182, 142, -114, -356, -356, -356,
	86, 86, 14, -264, 25, -356, -356, -356, 86, 86,
	-356, -356, 86, 86, -356, 86, 86, 86, -328, 86,
	86, 86, 86, -356, -356, -356, -356, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, -356, -356, -100,
	-100, -355, 212, -356, -356, -356, -356, -356, -245, -345,
	547, 389, -160, -159, -157, 74, 231, 75, -355, -251,
	-356, -124, 89, -212, 89, -211, -165, -244, 94, 98,
	-194, -130, -132, 14, -105, -177, 87, 86, -277, -198,
	-203, -231, -244, 92, 169, -190, 212, -161, 15, -164,
	32, 57, -11, -355, -355, 32, 86, -149, -151, -150,
	-152, 66, 70, 72, 67, 68, 69, 73, -255, 25,
	-131, -9, -8, -355, -355, -153, -146, -357, 14, 77,
	-357, 86, 212, -225, -227, 391, 388, 394, -332, 92,
	-84, 86, -302, -289, -195, -109, 40, -282, 354, -277,
	-277, -284, 92, -284, 94, 94, 87, -47, -42, -43,
	33, 80, -309, -296, 92, 39, -244, 87, -191, -108,
	-153, 136, 76, -313, -313, -313, -249, -2, 583, 589,
	130, 85, 357, 18, -211, 86, 87, -180, 289, 87,
	-86, -244, 87, 85, -294, -294, -244, -355, 227, 31,
	31, -56, -180, -278, -332, 582, 581, 87, 229, 287,
	-113, 402, -110, 92, 88, -153, -153, -153, -153, -153,
	220, 217, 272, 230, -146, -153, 86, -80, 246, 241,
	-254, -254, 33, -153, 388, 559, 557, -114, 135, 251,
	-128, -120, -102, 453, -262, 169, 321, 250, 319, 315,
	335, 326, 352, 317, 353, 314, 313, 312, -262, -260,
	-114, -114, -187, 143, -114, 141, -114, -114, -114, -356,
	169, 321, -114, -114, -329, -114, -114, -114, -327, -326,
	-124, -179, -356, -327, -114, -114, -326, -326, -330, -330,
	-330, -330, -330, -172, -172, -172, -172, -356, -356, -101,
	-245, -157, -290, -290, -290, -217, 86, -228, 22, 14,
	57, 57, -130, -161, -131, -105, -244, -201, 543, -206,
	46, -204, -205, 47, -202, 48, 56, 160, -192, -114,
	-218, 76, -219, -223, -179, -174, -176, -175, -355, -210,
	-356, -244, -217, -219, -133, -134, -134, -133, -134, 66,
	66, 66, 71, 66, 71, 66, -150, -249, -356, -356,
	-9, -114, -252, 77, -131, -131, -155, -249, 160, 388,
	392, 393, -302, -351, 115, 136, 31, 76, 350, 101,
	-349, 168, -350, 233, 129, 130, 245, 25, 41, 87,
	86, 87, 86, 87, 86, -238, 492, 136, -43, -42,
	-296, -296, 94, -332, 229, 26, -153, 76, 76, 76,
	-87, 587, 94, 85, -3, 80, -114, 85, 19, -285,
	-179, -320, -273, -321, -274, -275, -5, -6, -297, 57,
	101, -58, 44, 228, 567, 568, 123, 580, -312, -211,
	-316, -318, -153, -116, -355, -115, -117, -121, 158, 159,
	-180, -153, -107, 278, 286, 85, -111, 89, -334, 77,
	269, 350, 269, -153, -80, -47, -153, -234, -234, 33,
	-332, -356, -128, -120, -355, -356, -272, -272, -272, -280,
	-272, 309, -272, 309, -272, -356, -356, 86, -356, 22,
	-356, -91, 431, -114, 86, 86, -356, 85, 85, -356,
	-356, -328, 86, -356, 86, -356, 86, -263, 542, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-158, 22, -158, -158, -356, 89, -153, -161, -185, 16,
	-198, 51, 327, -208, -207, 55, 47, -205, 19, 49,
	19, 30, -218, 86, 144, 86, -356, -356, 86, 57,
	212, -356, -161, -144, -143, 76, 77, -145, 76, -143,
	66, 66, -213, -356, 86, -216, -131, -161, -161, 212,
	115, -355, -118, -127, -116, 12, 92, 92, -332, 130,
	130, -153, 85, -277, 92, -277, 94, 94, 492, 31,
	81, 82, 83, 31, 78, 79, -153, -153, -153, -153,
	-317, 85, 19, -114, 85, 144, 87, -211, -211, 265,
	154, -296, 565, 271, 271, -296, -296, -296, 87, -356,
	86, -283, 456, 459, -114, -122, -122, -213, 87, -325,
	456, -333, -244, -244, -244, -244, -119, -277, -114, -114,
	-192, 92, -114, -114, 94, 94, -356, -327, -326, -114,
	-356, -141, -140, -142, 551, 115, 31, -262, -355, 66,
	18, 16, -355, -355, -252, -185, -186, 17, 19, -199,
	53, -197, 52, -197, -207, 19, 19, 92, 19, 92,
	130, -223, -114, -176, 57, -11, -244, -174, -244, -187,
	-114, 85, -114, -124, -161, -161, -114, -167, 434, 104,
	106, 105, 336, 337, 435, 436, 437, 107, 108, 109,
	110, 111, 112, 113, 438, 441, 439, 442, 443, 444,
	449, 450, 445, 446, 447, 448, 451, 85, -114, 87,
	87, -213, -316, -57, 87, -211, 94, 87, 266, -175,
	-355, 92, -296, -296, -296, 94, 94, -251, -350, -318,
	460, 460, -356, 25, -324, -323, -245, 85, 77, -95,
	154, 456, -356, -356, -356, -356, -356, 87, 87, -356,
	-356, 86, -356, -140, -142, -356, 76, -124, -214, -356,
	-244, 233, 19, 19, -214, -214, -160, -186, -114, -172,
	-200, 54, 76, 118, 92, 92, 92, 12, -174, 212,
	-192, -211, -138, 357, -187, -356, -211, 87, 25, 87,
	589, 130, 87, -175, -94, -355, 262, -251, 92, 92,
	-11, 86, 144, -211, -153, -356, 454, 73, 457, -114,
	-356, 76, 466, 551, 86, -356, -356, -356, 76, 118,
	-219, -244, 87, -356, -355, -192, 87, -196, -11, 85,
	-3, 262, -78, 456, -323, -301, -245, 92, 94, 87,
	62, 455, 458, -328, -244, 233, -252, -139, -137, -244,
	506, -341, -342, 76, -351, -348, 115, 136, 101, -349,
	124, 125, -78, -114, 85, -356, -79, 277, 547, -334,
	62, -356, -356, 86, 22, -265, -60, 516, -342, 76,
	-341, 76, 13, 12, 115, 92, 87, -211, 238, -325,
	456, -137, 513, -278, -124, -340, 246, 241, 244, 32,
	-340, -4, 588, 87, 279, 457, -59, 26, -138, 240,
	31, 115, 94, -4, 458, 516, -124, -141, -140, -140,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 760,
	760, 760, 0, 760, 0, 0, 760, -2, -2, 760,
	1237, 0, 760, 0, 0, -2, 692, 694, 0, 696,
	-2, 0, 0, 705, 1722, 1722, 755, 0, 0, 0,
	0, 0, 760, 760, 760, 760, 1098, 48, 760, 0,
	83, 84, 711, 712, 713, 63, 0, 1720, 1, 3,
	69, 73, 0, 0, 0, 56, 1107, 0, 76, 0,
	0, 764, 0, 762, 0, 1220, 760, 760, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 522, 462, 505, 460, 491, -2, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 353, 353, 0, 0, -2, 453, 453, 453, 0,
	0, 0, 488, 1222, 408, 353, 353, 0, 353, 353,
	353, 353, 0, 0, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 1124,
	151, 1238, 1235, 1236, 38, 39, 40, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 0, 1214, 0, 622, 860, 0, 683, 683,
	0, 683, 683, 683, 683, 0, 0, 0, 634, 0,
	0, 0, 0, 680, 0, 0, 653, 655, 0, 680,
	0, 686, 0, 667, 683, 1723, 1723, 1723, 1205, 0,
	677, 675, 689, 690, 672, 673, 691, 695, 0, 700,
	703, 1231, 1232, 0, 718, 47, 1468, 710, 723, 724,
	0, 756, 757, 43, 954, 0, 882, 887, 898, 911,
	912, 913, 914, 915, 917, 918, 0, 0, 0, 0,
	923, 924, 0, 0, 0, 0, 0, 935, 0, 0,
	0, 0, 0, 1079, 0, 1042, 1042, 971, 1042, 1044,
	1044, 0, 0, 0, 1719, 1508, 1516, 1517, 1512, 1513,
	1494, 1506, 1509, 1497, 1498, 1500, 1502, 1507, 1514, 1520,
	1499, 1519, 1518, 0, 1495, 1496, 1501, 1511, 1515, 1503,
	1504, 1505, 1510, 1521, 1088, 0, 0, 0, 0, 0,
	0, 257, 258, 953, 1194, 1044, 1044, 1044, 1044, 1044,
	-2, -2, 204, 205, 206, 207, 208, 209, 210, 0,
	200, 0, 262, 263, 259, 260, 261, 937, 938, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	1722, 0, 733, 0, 0, 0, 0, 0, 1107, 0,
	1099, 1098, 61, 0, 760, -2, 0, 0, 0, 0,
	45, 0, 50, 819, 75, 74, 1146, 0, 0, 0,
	57, 1108, 65, 67, 1109, 0, 765, 766, 0, 796,
	800, 0, 761, 0, 0, 1221, 1220, 1220, 100, 0,
	1663, 1198, -2, -2, 0, 0, 1233, 1234, 1207, -2,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, -2, 0, 0, 161, 162, 0,
	41, 380, 0, 157, 0, 373, 321, 0, 1124, 0,
	0, 0, 0, 0, 760, 0, 1215, 142, 143, 149,
	150, 353, 353, 502, 0, 0, 151, 151, 469, 470,
	471, 0, 0, -2, 378, 0, 454, 0, 0, 367,
	367, 371, 369, 370, 0, 0, 0, 0, 0, 0,
	482, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 0, 354, 0, 500, 501, 409, 0,
	0, 0, 0, 480, 481, 0, 0, 1223, 1224, 0,
	0, 353, 353, 0, 0, 0, 0, 353, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 1137, 0, 0, 0,
	-2, 0, 614, 0, 0, 0, 1216, 1216, 0, 621,
	0, 623, 624, 0, 0, 625, 0, 680, 680, 678,
	679, 627, 628, 629, 630, 683, 0, 0, 362, 363,
	364, 680, 683, 0, 683, 683, 683, 683, 680, 680,
	680, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 1723, 1723, 686, 683, 0, 663, 0, 664,
	665, 668, 669, 1724, 1725, 1253, 670, 671, 1206, 693,
	701, 704, 721, 719, 720, 722, 714, 715, 716, 717,
	0, 735, 736, 741, 0, 0, 0, 0, 747, 748,
	749, 0, 0, 752, 753, 754, 0, 0, 0, 0,
	0, 880, 0, 0, 943, 944, 945, 946, 947, 948,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 920, 921, 922, 925, 0, 0, 0, 930,
	931, 0, 0, 0, 0, 0, 770, 0, 1080, 0,
	969, 0, 970, 972, 973, 0, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	780, 0, 0, 780, 780, 0, 0, 193, 194, 195,
	196, 197, 211, 212, 213, 214, 215, 264, 1088, 0,
	953, 0, 0, 44, 725, 726, 0, 843, 1226, 0,
	0, 776, 0, 55, 64, 66, 1107, 59, 1107, 0,
	782, 0, 0, -2, -2, 783, 789, 790, 791, 792,
	793, 52, 1721, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 333, 1149, 0, 0, 1100, 1101, 1104, 0,
	797, 1549, 801, 0, 803, 804, 0, 763, 0, 98,
	0, 859, 0, 0, 0, 1663, 1204, 0, 102, 103,
	0, 0, 0, 339, 1209, 1210, 1211, -2, 360, 0,
	339, 328, 272, 273, 274, 321, 276, 321, 321, 321,
	321, 333, 333, 333, 333, 304, 305, 306, 307, 308,
	0, 0, 291, 321, 321, 321, 321, 311, 312, 313,
	314, 315, 316, 317, 318, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 323, 323, 323, 325, 325, 0,
	42, 0, 343, 0, 1104, 0, 0, 1137, 1218, 1228,
	0, 0, 0, 1218, 120, 0, 0, 503, 533, 463,
	492, 504, 0, 466, 467, -2, 0, 0, 453, 0,
	455, 0, 361, 0, -2, 0, 371, 0, 367, 371,
	368, 371, 359, 372, 484, 485, 486, 0, 563, 829,
	0, 0, 0, 0, 0, 569, 570, 571, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 493,
	494, 495, 496, 497, 498, 499, 0, 0, 455, 0,
	489, 0, 410, 411, 0, 0, 414, 415, 416, 417,
	0, 0, 420, 421, 422, 846, 847, 423, 447, 448,
	449, 424, 425, 426, 427, 428, 429, 430, 441, 442,
	443, 444, 445, 446, 431, 432, 433, 434, 435, 438,
	0, 135, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 779,
	861, 1239, 1240, 684, 685, 0, 365, 366, 683, 683,
	631, 654, 0, 683, 635, 656, 636, 638, 637, 639,
	658, 659, 683, 642, 681, 682, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 660, 661, 662, 687,
	0, 0, 702, 706, 707, 708, 709, 0, 0, 738,
	94, 743, 744, 745, 746, 758, 751, 955, 877, 878,
	879, 0, 881, 884, 0, 939, 941, 886, 888, 950,
	951, 952, 0, 0, 0, 0, 0, 892, 896, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 916, 1058, 1059, 1060, 933, 265, 266, 0, 934,
	0, 794, 0, 0, 0, 932, 0, 0, 0, 0,
	771, 772, 1086, 1083, 0, 0, 1043, 1045, 0, 0,
	0, 0, 0, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1061, 0, 0, 0, 0, 0,
	0, 1227, 0, 130, 131, 0, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 781, 1089, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 1193, 0, 728, 729, 731, 0, 863, 0,
	844, 0, 0, 734, 0, 775, 0, 778, 58, 60,
	787, 788, 0, 805, 784, 54, 49, 0, 0, 821,
	1147, 333, 1169, 0, 337, 338, 1110, 1111, 0, 1103,
	1105, 1106, 77, 802, 798, 0, 875, 0, 0, 858,
	0, 808, 810, 811, 812, 841, 0, 815, 0, 0,
	0, 0, 96, 860, 1199, 101, 0, 0, 106, 107,
	1200, 1201, 1202, 1203, 0, 522, -2, 405, 163, 165,
	166, 167, 158, -2, 331, 329, 330, 275, 333, 333,
	298, 299, 300, 301, 302, 303, 0, 0, 292, 293,
	294, 295, 286, 0, 287, 288, 289, 0, 290, 379,
	0, 1112, 344, 345, 347, 353, 0, 350, 351, 0,
	0, 374, 375, 0, 1104, 1128, 0, 0, 0, 1229,
	1228, 1228, 1228, 0, 153, 154, 155, 156, 558, 0,
	0, 534, 556, 557, 151, 0, 0, 159, 457, 456,
	0, 590, 0, 377, 0, 0, 371, 371, 356, 357,
	487, 0, 0, 565, 566, 567, 568, 0, 0, 0,
	455, 457, 339, 0, 412, 413, 418, 419, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 1125, 1126, 1127, 0, 0,
	615, 0, 0, 397, 92, 1217, 620, 680, 641, 657,
	680, 633, 640, 666, 698, 742, 0, 0, 0, 0,
	750, 0, 0, 885, 940, 942, 889, 0, 893, 897,
	0, 0, 0, 0, 0, 0, 0, 936, 960, 961,
	0, 0, 1098, 0, 1084, 0, 0, 968, 1046, 1047,
	0, 0, 0, 0, 0, 979, 980, 981, 0, 0,
	984, 985, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 0, 0, 998, 999, 1000, 1001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 956, 0,
	0, 780, 0, 1048, 1049, 1050, 1051, 1052, 1089, 727,
	730, 732, 817, 864, 865, 0, 0, 0, 0, 845,
	1225, 773, 774, 777, -2, 0, 0, 1091, 0, 0,
	805, 875, 806, 0, 785, 51, 820, 0, 1151, 1150,
	1163, 1176, 334, 335, 336, 1102, 0, 1107, 0, 1187,
	0, 0, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 848, 0, 0, 851, 0, 0, 0, 0, 842,
	0, 0, 0, 0, 0, -2, 0, 0, 90, 91,
	0, 0, 0, 104, 105, 0, 0, 111, 340, 341,
	144, 151, 407, 164, 387, 0, 0, 271, 332, 296,
	297, 0, 319, 0, 0, 0, 400, 116, 1116, 1115,
	353, 353, 346, 0, 349, 0, 1230, 322, 376, 0,
	134, 0, 0, 0, 0, 0, 140, 528, 0, 0,
	535, 0, 0, 0, 461, 0, 472, 473, 0, 562,
	-2, 611, 343, 0, 355, 358, 830, 0, 0, 474,
	0, 457, 478, 479, 490, 439, 440, 437, 0, 0,
	1138, 1139, 1144, 1142, 1143, 121, 510, 512, 511, 515,
	0, 0, 508, 0, 397, 1112, 0, 619, 398, 399,
	683, 683, 737, 95, 0, 740, 0, 0, 0, 0,
	890, 894, 795, 0, 0, 321, 321, 1066, 321, 325,
	1069, 321, 1071, 321, 1074, 321, 1077, 1078, 0, 0,
	0, 0, 1081, 967, 1087, 0, 0, 0, 0, 978,
	0, 0, 0, 0, 132, 133, 1015, 0, 0, 1017,
	1019, 1020, 990, 1016, 0, 0, 1013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	1090, 866, 871, 871, 871, 0, 0, 0, 1212, 1213,
	1092, 1093, 875, 1094, 807, 786, 822, 1169, 0, 1162,
	0, -2, 1171, 0, 0, 0, 1177, 799, 78, 876,
	81, 0, 1187, 1195, 0, 1178, 1189, 1191, 0, 0,
	0, 1183, 0, 875, 809, 837, 839, 0, 834, 849,
	850, 852, 0, 854, 0, 856, 857, 819, 814, 816,
	0, 0, 98, 0, 875, 875, 97, 0, 862, 108,
	109, 110, 406, 168, 173, 0, 0, 0, 178, 0,
	180, 0, 388, 0, 268, 270, 0, 0, 171, 333,
	0, 333, 0, 326, 0, 389, 401, 0, 1113, 1114,
	0, 0, 348, 352, 0, 1219, 136, 0, 0, 0,
	531, 0, 559, 0, 0, 0, 0, 0, 0, 160,
	458, 591, 592, 593, 594, 595, 596, 597, 598, 0,
	353, 0, 0, 0, 353, 353, 353, 603, 342, 0,
	0, 587, 584, 475, 0, 198, 199, 201, 0, 0,
	477, 819, 1129, 1130, 1131, 0, 1141, 1145, 124, 0,
	0, 0, 0, 616, 617, 618, 93, 626, 632, 739,
	759, 883, 891, 895, 0, 927, 1064, 333, 1067, 1068,
	1070, 1072, 1073, 1075, 1076, 928, 929, 0, 963, 0,
	965, 1107, 0, 1085, 0, 0, 977, 0, 0, 982,
	983, 0, 0, 989, 0, 991, 0, 0, 0, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 959,
	0, 0, 0, 0, 843, -2, 62, 1094, 1096, 0,
	1156, 1154, 1154, 1164, 1165, 0, 0, 1172, 0, 0,
	0, 0, 82, 0, 0, 0, 1192, 0, 0, 0,
	0, 99, 1098, 831, 838, 0, 0, 832, 0, 833,
	853, 855, 813, -2, 0, 875, 875, 88, 89, 0,
	174, 0, 176, 191, 192, 0, 179, 181, 182, 267,
	269, 0, 0, 309, 320, 310, 0, 0, 402, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 819, 137, 138, 139,
	523, 0, 533, 0, 0, 0, 526, 0, 464, 0,
	0, 0, 353, 353, 353, 0, 0, 0, 0, 564,
	0, 572, 0, 0, 0, 202, 203, 0, 1140, 509,
	0, 122, 123, 0, 0, 514, 1053, 1065, 0, 0,
	0, 1082, 0, 0, 0, 0, 987, 0, 1018, 0,
	994, 0, 0, 0, 553, 554, 0, 1014, 0, 872,
	0, 0, 0, 0, 863, 1096, 80, 0, 0, 1159,
	0, 1152, 1155, 1153, 1166, 0, 0, 1173, 0, 1175,
	0, 1196, 1197, 1190, 0, 1182, 1185, 1181, 1184, 1107,
	835, 0, 840, 0, 1098, 87, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	327, 0, 0, 0, 524, 0, 536, 527, 0, 601,
	0, 605, 0, 0, 0, 608, 609, 610, 381, 588,
	585, 586, 476, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 962, 964, 966, 975, 976, 1062, 1063, 988,
	992, 0, 995, 0, 0, 996, 0, 555, 0, 868,
	825, 826, 873, 874, 0, 0, 818, 79, 1097, 1095,
	1148, 0, 1157, 1158, 1167, 1168, 1174, 0, 1180, 0,
	85, 0, 0, 0, 1107, 175, 0, 185, 0, 532,
	0, 535, 525, 599, 600, 0, 612, 604, 606, 607,
	1132, 0, 0, 0, 516, 926, 0, 0, 0, 1015,
	997, 0, 551, 552, 0, 867, 869, 870, 1160, 1161,
	1188, 1186, 836, 843, 0, 86, 382, 387, 1132, 0,
	0, 0, 506, 1134, 127, 128, 450, 451, 452, 121,
	1054, 0, 1057, 0, 827, 828, 537, 0, 539, 0,
	-2, 383, 384, 0, 169, 186, 187, 0, 0, 190,
	183, 184, 117, 0, 0, 613, 0, 1135, 1136, 124,
	1055, 993, 538, 0, 0, 339, 0, 548, 385, 0,
	386, 0, 0, 0, 188, 189, 560, 0, 0, 513,
	0, 540, 541, 549, 0, 390, 392, 393, 0, 0,
	391, 529, 0, 560, 1133, 0, 0, 550, 546, 394,
	395, 396, 561, 530, 1056, 0, 542, 543, 544, 545,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 212, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 590,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:514
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:560
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:595
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:601
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:605
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:624
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:630
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:718
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:833
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:837
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:857
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:871
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:881
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:904
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:926
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:936
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:940
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:944
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:950
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:954
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:958
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:968
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:972
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1020
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1035
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1046
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1066
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1072
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1088
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1095
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1124
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1131
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1142
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1153
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1159
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1163
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1208
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1212
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1218
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1228
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1233
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1242
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1266
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1275
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1354
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1358
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1441
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1492
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1708
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1712
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1716
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1720
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1951
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1960
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1968
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2050
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2059
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2065
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2075
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2079
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2084
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2088
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2092
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2096
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2102
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2112
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2116
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2120
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2124
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2128
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = yyDollar[2].str
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = "key"
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = yyDollar[1].str
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2196
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2200
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2206
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2210
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2216
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2220
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2226
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2230
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2236
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2242
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2246
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2250
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2254
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2258
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2267
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2273
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2279
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2285
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2291
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2295
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2299
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2303
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2307
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2342
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2348
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2362
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2372
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2448
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2452
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2456
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2460
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2464
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2468
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2472
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2476
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2480
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = ""
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2544
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2553
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2557
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2561
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2569
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2575
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2683
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2693
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2697
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2701
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2705
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2802
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2806
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2819
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2851
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2858
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2883
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2892
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2900
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2909
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2916
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2928
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2937
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2952
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2961
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2966
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2970
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2976
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2982
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2988
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2992
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2998
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3002
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3008
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3014
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3020
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3026
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3036
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3040
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3044
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3050
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3056
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3062
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3066
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3070
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3076
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3080
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3085
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3089
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3094
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3098
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3104
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3108
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3112
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3116
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3120
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3124
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3128
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3132
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3136
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3140
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3144
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3148
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3152
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3156
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3160
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3164
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3168
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3172
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3176
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3180
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3184
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3188
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3208
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3218
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3223
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3227
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3232
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3237
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3242
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3247
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3252
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3258
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3264
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3271
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3278
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3285
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3303
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3309
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3315
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3321
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3327
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3333
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3345
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = ""
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = ""
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3367
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3371
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3394
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3499
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3503
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3594
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = "extended "
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3642
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3646
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3662
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3680
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3684
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3694
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3700
		{
			yyVAL.empty = struct{}{}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.empty = struct{}{}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.empty = struct{}{}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3728
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3748
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3753
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3758
		{
			yyVAL.empty = struct{}{}
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3760
		{
			yyVAL.empty = struct{}{}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3776
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3780
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3784
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3788
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3792
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3796
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3802
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.str = yyDollar[1].str
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.str = yyDollar[1].str
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3873
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3877
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3883
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3889
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3893
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3897
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3901
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3945
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3949
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3975
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4017
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4026
		{
			setAllowComments(yylex, true)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4036
		{
			yyVAL.strs = nil
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4046
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4050
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = SQLCacheStr
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4111
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4130
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4135
		{
			yyVAL.strs = nil
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4143
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4147
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4151
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.str = SQLCacheStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = DistinctStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = DistinctStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = StraightJoinHint
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4187
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4197
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4201
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4205
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4209
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4234
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4238
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4244
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4250
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4264
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4268
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4272
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4276
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4282
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4288
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4292
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4301
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4307
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4311
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4317
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4327
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4331
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4345
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4349
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4362
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4366
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4370
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4374
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4382
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4386
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4394
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4402
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4410
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4423
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4427
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4431
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4437
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4443
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4447
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4451
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4455
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4461
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4465
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4475
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4504
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4510
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4514
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4520
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4524
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4528
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4532
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4537
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4541
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4545
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4549
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4566
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4570
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4574
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4578
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4677
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4705
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4719
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4727
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4731
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4739
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4743
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4747
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4751
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4828
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4832
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4839
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4843
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4847
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4851
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4857
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4861
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4865
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4869
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4873
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4877
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4881
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4887
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4891
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4895
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4902
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4908
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4934
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5171
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5180
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5186
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5196
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5208
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5212
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5216
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5220
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5224
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5228
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5232
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5236
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5240
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5244
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5248
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5254
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5258
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5262
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5266
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5270
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5274
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5278
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5282
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5286
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5341
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5345
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5349
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5353
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5357
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5381
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5385
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5391
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5395
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5399
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5403
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5407
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5413
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5417
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5421
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5425
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5429
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5441
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5445
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5449
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5464
		{
			yyVAL.str = string("")
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5468
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5474
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5478
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5484
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5499
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5503
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5507
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5536
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5554
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5560
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5566
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5570
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5576
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5581
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5585
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5589
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5598
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5604
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5608
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5612
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5621
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5625
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5629
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5633
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5640
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5644
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5648
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5652
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5658
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5662
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5666
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = ""
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5675
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5679
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5683
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5688
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5692
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5707
		{
			yyVAL.str = ""
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.str = "cascaded"
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5720
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5724
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5733
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5739
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5745
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5751
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5764
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = ""
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5779
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5783
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5789
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5793
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5797
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = ""
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5806
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5815
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5819
		{
			yyVAL.str = " header"
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5824
		{
			yyVAL.str = ""
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5828
		{
			yyVAL.str = " manifest on"
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = " manifest off"
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = ""
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = " overwrite on"
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = " overwrite off"
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5851
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5856
		{
			yyVAL.str = ""
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5860
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5866
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5870
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = ""
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5913
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = ""
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5922
		{
			yyVAL.str = " optionally"
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5935
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5939
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5943
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5947
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5951
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5957
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5961
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5965
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5969
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5978
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5984
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5994
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5998
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6004
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6019
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6029
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6035
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6039
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6045
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6049
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6053
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6057
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6061
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6069
		{
			yyVAL.str = "charset"
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6098
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6103
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6106
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6108
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6111
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6116
		{
			yyVAL.empty = struct{}{}
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.empty = struct{}{}
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6120
		{
			yyVAL.empty = struct{}{}
		}
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6124
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6133
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6140
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6144
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6161
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6167
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6177
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6188
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6692
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6701
		{
			decNesting(yylex)
		}
	case 1722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6706
		{
			skipToEnd(yylex)
		}
	case 1723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6711
		{
			skipToEnd(yylex)
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6715
		{
			skipToEnd(yylex)
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6719
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
