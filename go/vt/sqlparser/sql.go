// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const THROTTLE = 57624
const UNTHROTTLE = 57625
const EXPIRE = 57626
const RATIO = 57627
const BEGIN = 57628
const START = 57629
const TRANSACTION = 57630
const COMMIT = 57631
const ROLLBACK = 57632
const SAVEPOINT = 57633
const RELEASE = 57634
const WORK = 57635
const BIT = 57636
const TINYINT = 57637
const SMALLINT = 57638
const MEDIUMINT = 57639
const INT = 57640
const INTEGER = 57641
const BIGINT = 57642
const INTNUM = 57643
const REAL = 57644
const DOUBLE = 57645
const FLOAT_TYPE = 57646
const DECIMAL_TYPE = 57647
const NUMERIC = 57648
const TIME = 57649
const TIMESTAMP = 57650
const DATETIME = 57651
const YEAR = 57652
const CHAR = 57653
const VARCHAR = 57654
const BOOL = 57655
const CHARACTER = 57656
const VARBINARY = 57657
const NCHAR = 57658
const TEXT = 57659
const TINYTEXT = 57660
const MEDIUMTEXT = 57661
const LONGTEXT = 57662
const BLOB = 57663
const TINYBLOB = 57664
const MEDIUMBLOB = 57665
const LONGBLOB = 57666
const JSON = 57667
const JSON_SCHEMA_VALID = 57668
const JSON_SCHEMA_VALIDATION_REPORT = 57669
const ENUM = 57670
const GEOMETRY = 57671
const POINT = 57672
const LINESTRING = 57673
const POLYGON = 57674
const GEOMETRYCOLLECTION = 57675
const MULTIPOINT = 57676
const MULTILINESTRING = 57677
const MULTIPOLYGON = 57678
const ASCII = 57679
const UNICODE = 57680
const NULLX = 57681
const AUTO_INCREMENT = 57682
const APPROXNUM = 57683
const SIGNED = 57684
const UNSIGNED = 57685
const ZEROFILL = 57686
const CODE = 57687
const COLLATION = 57688
const COLUMNS = 57689
const DATABASES = 57690
const ENGINES = 57691
const EVENT = 57692
const EXTENDED = 57693
const FIELDS = 57694
const FULL = 57695
const FUNCTION = 57696
const GTID_EXECUTED = 57697
const KEYSPACES = 57698
const OPEN = 57699
const PLUGINS = 57700
const PRIVILEGES = 57701
const PROCESSLIST = 57702
const SCHEMAS = 57703
const TABLES = 57704
const TRIGGERS = 57705
const USER = 57706
const VGTID_EXECUTED = 57707
const VITESS_KEYSPACES = 57708
const VITESS_METADATA = 57709
const VITESS_MIGRATIONS = 57710
const VITESS_REPLICATION_STATUS = 57711
const VITESS_SHARDS = 57712
const VITESS_TABLETS = 57713
const VITESS_TARGET = 57714
const VSCHEMA = 57715
const VITESS_THROTTLED_APPS = 57716
const NAMES = 57717
const GLOBAL = 57718
const SESSION = 57719
const ISOLATION = 57720
const LEVEL = 57721
const READ = 57722
const WRITE = 57723
const ONLY = 57724
const REPEATABLE = 57725
const COMMITTED = 57726
const UNCOMMITTED = 57727
const SERIALIZABLE = 57728
const CURRENT_TIMESTAMP = 57729
const DATABASE = 57730
const CURRENT_DATE = 57731
const NOW = 57732
const CURRENT_TIME = 57733
const LOCALTIME = 57734
const LOCALTIMESTAMP = 57735
const CURRENT_USER = 57736
const UTC_DATE = 57737
const UTC_TIME = 57738
const UTC_TIMESTAMP = 57739
const DAY = 57740
const DAY_HOUR = 57741
const DAY_MICROSECOND = 57742
const DAY_MINUTE = 57743
const DAY_SECOND = 57744
const HOUR = 57745
const HOUR_MICROSECOND = 57746
const HOUR_MINUTE = 57747
const HOUR_SECOND = 57748
const MICROSECOND = 57749
const MINUTE = 57750
const MINUTE_MICROSECOND = 57751
const MINUTE_SECOND = 57752
const MONTH = 57753
const QUARTER = 57754
const SECOND = 57755
const SECOND_MICROSECOND = 57756
const YEAR_MONTH = 57757
const WEEK = 57758
const REPLACE = 57759
const CONVERT = 57760
const CAST = 57761
const SUBSTR = 57762
const SUBSTRING = 57763
const GROUP_CONCAT = 57764
const SEPARATOR = 57765
const TIMESTAMPADD = 57766
const TIMESTAMPDIFF = 57767
const WEIGHT_STRING = 57768
const LTRIM = 57769
const RTRIM = 57770
const TRIM = 57771
const JSON_ARRAY = 57772
const JSON_OBJECT = 57773
const JSON_QUOTE = 57774
const JSON_DEPTH = 57775
const JSON_TYPE = 57776
const JSON_LENGTH = 57777
const JSON_VALID = 57778
const JSON_ARRAY_APPEND = 57779
const JSON_ARRAY_INSERT = 57780
const JSON_INSERT = 57781
const JSON_MERGE = 57782
const JSON_MERGE_PATCH = 57783
const JSON_MERGE_PRESERVE = 57784
const JSON_REMOVE = 57785
const JSON_REPLACE = 57786
const JSON_SET = 57787
const JSON_UNQUOTE = 57788
const MATCH = 57789
const AGAINST = 57790
const BOOLEAN = 57791
const LANGUAGE = 57792
const WITH = 57793
const QUERY = 57794
const EXPANSION = 57795
const WITHOUT = 57796
const VALIDATION = 57797
const UNUSED = 57798
const ARRAY = 57799
const CUME_DIST = 57800
const DESCRIPTION = 57801
const DENSE_RANK = 57802
const EMPTY = 57803
const EXCEPT = 57804
const FIRST_VALUE = 57805
const GROUPING = 57806
const GROUPS = 57807
const JSON_TABLE = 57808
const LAG = 57809
const LAST_VALUE = 57810
const LATERAL = 57811
const LEAD = 57812
const NTH_VALUE = 57813
const NTILE = 57814
const OF = 57815
const OVER = 57816
const PERCENT_RANK = 57817
const RANK = 57818
const RECURSIVE = 57819
const ROW_NUMBER = 57820
const SYSTEM = 57821
const WINDOW = 57822
const ACTIVE = 57823
const ADMIN = 57824
const AUTOEXTEND_SIZE = 57825
const BUCKETS = 57826
const CLONE = 57827
const COLUMN_FORMAT = 57828
const COMPONENT = 57829
const DEFINITION = 57830
const ENFORCED = 57831
const ENGINE_ATTRIBUTE = 57832
const EXCLUDE = 57833
const FOLLOWING = 57834
const GEOMCOLLECTION = 57835
const GET_MASTER_PUBLIC_KEY = 57836
const HISTOGRAM = 57837
const HISTORY = 57838
const INACTIVE = 57839
const INVISIBLE = 57840
const LOCKED = 57841
const MASTER_COMPRESSION_ALGORITHMS = 57842
const MASTER_PUBLIC_KEY_PATH = 57843
const MASTER_TLS_CIPHERSUITES = 57844
const MASTER_ZSTD_COMPRESSION_LEVEL = 57845
const NESTED = 57846
const NETWORK_NAMESPACE = 57847
const NOWAIT = 57848
const NULLS = 57849
const OJ = 57850
const OLD = 57851
const OPTIONAL = 57852
const ORDINALITY = 57853
const ORGANIZATION = 57854
const OTHERS = 57855
const PARTIAL = 57856
const PATH = 57857
const PERSIST = 57858
const PERSIST_ONLY = 57859
const PRECEDING = 57860
const PRIVILEGE_CHECKS_USER = 57861
const PROCESS = 57862
const RANDOM = 57863
const REFERENCE = 57864
const REQUIRE_ROW_FORMAT = 57865
const RESOURCE = 57866
const RESPECT = 57867
const RESTART = 57868
const RETAIN = 57869
const REUSE = 57870
const ROLE = 57871
const SECONDARY = 57872
const SECONDARY_ENGINE = 57873
const SECONDARY_ENGINE_ATTRIBUTE = 57874
const SECONDARY_LOAD = 57875
const SECONDARY_UNLOAD = 57876
const SIMPLE = 57877
const SKIP = 57878
const SRID = 57879
const THREAD_PRIORITY = 57880
const TIES = 57881
const UNBOUNDED = 57882
const VCPU = 57883
const VISIBLE = 57884
const RETURNING = 57885
const FORMAT = 57886
const TREE = 57887
const VITESS = 57888
const TRADITIONAL = 57889
const LOCAL = 57890
const LOW_PRIORITY = 57891
const NO_WRITE_TO_BINLOG = 57892
const LOGS = 57893
const ERROR = 57894
const GENERAL = 57895
const HOSTS = 57896
const OPTIMIZER_COSTS = 57897
const USER_RESOURCES = 57898
const SLOW = 57899
const CHANNEL = 57900
const RELAY = 57901
const EXPORT = 57902
const AVG_ROW_LENGTH = 57903
const CONNECTION = 57904
const CHECKSUM = 57905
const DELAY_KEY_WRITE = 57906
const ENCRYPTION = 57907
const ENGINE = 57908
const INSERT_METHOD = 57909
const MAX_ROWS = 57910
const MIN_ROWS = 57911
const PACK_KEYS = 57912
const PASSWORD = 57913
const FIXED = 57914
const DYNAMIC = 57915
const COMPRESSED = 57916
const REDUNDANT = 57917
const COMPACT = 57918
const ROW_FORMAT = 57919
const STATS_AUTO_RECALC = 57920
const STATS_PERSISTENT = 57921
const STATS_SAMPLE_PAGES = 57922
const STORAGE = 57923
const MEMORY = 57924
const DISK = 57925
const PARTITIONS = 57926
const LINEAR = 57927
const RANGE = 57928
const LIST = 57929
const SUBPARTITION = 57930
const SUBPARTITIONS = 57931
const HASH = 57932

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	608, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	331, 153,
	-2, 489,
	-1, 55,
	35, 709,
	231, 709,
	242, 709,
	277, 723,
	278, 723,
	-2, 711,
	-1, 60,
	233, 736,
	-2, 734,
	-1, 114,
	230, 1260,
	-2, 119,
	-1, 116,
	1, 146,
	608, 146,
	-2, 153,
	-1, 127,
	132, 376,
	236, 376,
	-2, 478,
	-1, 146,
	131, 153,
	171, 153,
	331, 153,
	-2, 498,
	-1, 693,
	215, 1281,
	-2, 1277,
	-1, 694,
	215, 1282,
	-2, 1278,
	-1, 768,
	59, 804,
	-2, 819,
	-1, 805,
	147, 1687,
	-2, 112,
	-1, 806,
	147, 1529,
	-2, 113,
	-1, 812,
	147, 1612,
	-2, 1254,
	-1, 960,
	147, 1457,
	-2, 1251,
	-1, 1001,
	241, 41,
	246, 41,
	-2, 387,
	-1, 1081,
	1, 537,
	608, 537,
	-2, 153,
	-1, 1318,
	59, 805,
	-2, 824,
	-1, 1319,
	59, 806,
	-2, 825,
	-1, 1372,
	131, 153,
	171, 153,
	331, 153,
	-2, 425,
	-1, 1451,
	132, 376,
	236, 376,
	-2, 478,
	-1, 1460,
	241, 42,
	246, 42,
	-2, 388,
	-1, 1764,
	215, 1286,
	-2, 1280,
	-1, 1847,
	131, 153,
	171, 153,
	331, 153,
	-2, 426,
	-1, 1854,
	25, 174,
	-2, 176,
	-1, 2098,
	86, 39,
	-2, 861,
	-1, 2150,
	77, 94,
	86, 94,
	-2, 881,
	-1, 2217,
	583, 636,
	-2, 623,
	-1, 2353,
	49, 1222,
	-2, 1216,
	-1, 2571,
	86, 39,
	-2, 862,
	-1, 2609,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 853,
	-1, 2931,
	22, 1614,
	32, 1614,
	172, 1614,
	253, 1614,
	311, 1614,
	312, 1614,
	313, 1614,
	314, 1614,
	315, 1614,
	316, 1614,
	317, 1614,
	319, 1614,
	320, 1614,
	321, 1614,
	322, 1614,
	323, 1614,
	324, 1614,
	325, 1614,
	326, 1614,
	327, 1614,
	328, 1614,
	329, 1614,
	330, 1614,
	332, 1614,
	334, 1614,
	335, 1614,
	336, 1614,
	337, 1614,
	338, 1614,
	339, 1614,
	340, 1614,
	341, 1614,
	342, 1614,
	345, 1614,
	346, 1614,
	347, 1614,
	348, 1614,
	349, 1614,
	350, 1614,
	351, 1614,
	352, 1614,
	353, 1614,
	466, 1614,
	-2, 581,
}

const yyPrivate = 57344

const yyLast = 42694

var yyAct = [...]int{
	693, 2708, 2709, 2985, 2707, 2993, 2863, 2961, 1844, 2962,
	2682, 2929, 1375, 2498, 2312, 2913, 1778, 2052, 1798, 2406,
	2413, 702, 2454, 2722, 2816, 783, 2086, 1780, 2420, 2364,
	96, 3, 2367, 2839, 1297, 687, 761, 695, 2481, 1144,
	1914, 611, 1333, 2310, 2368, 2274, 684, 686, 37, 2480,
	2365, 186, 2580, 2311, 186, 2727, 576, 186, 608, 696,
	685, 637, 591, 2574, 186, 2483, 2121, 1817, 2362, 2144,
	2354, 2600, 186, 2113, 2182, 2503, 609, 1877, 2257, 2214,
	2566, 1902, 1882, 1093, 2183, 607, 155, 186, 2184, 2133,
	1833, 784, 36, 2105, 1320, 38, 1009, 1822, 1429, 1733,
	1758, 2088, 603, 963, 1923, 1734, 810, 763, 1664, 591,
	1674, 1821, 591, 186, 591, 2249, 141, 1622, 1901, 1809,
	1956, 1884, 2176, 991, 1458, 765, 2152, 769, 1802, 95,
	1364, 1342, 1824, 996, 1474, 1300, 1229, 1571, 1686, 1641,
	615, 91, 1761, 1165, 970, 786, 620, 1567, 807, 1899,
	1551, 967, 1002, 999, 997, 998, 971, 1465, 1873, 1363,
	775, 1361, 1803, 1730, 1142, 1347, 1136, 1576, 1424, 159,
	119, 117, 770, 118, 1450, 771, 124, 125, 797, 98,
	1077, 773, 1771, 85, 598, 1236, 76, 102, 1232, 2872,
	2207, 89, 97, 1122, 2986, 1916, 1917, 1918, 1916, 2472,
	2451, 2233, 2232, 1954, 2205, 2629, 772, 77, 8, 7,
	6, 2665, 2469, 791, 580, 796, 2265, 120, 547, 90,
	1536, 2266, 2893, 126, 2712, 1013, 1031, 2712, 104, 105,
	2894, 108, 777, 1036, 114, 1629, 1628, 183, 1627, 1626,
	542, 1775, 1776, 1625, 1624, 964, 1607, 601, 1616, 602,
	599, 1044, 2950, 2084, 989, 2350, 2470, 188, 189, 190,
	757, 758, 759, 760, 764, 2554, 768, 2115, 2965, 762,
	804, 811, 1166, 980, 778, 975, 2976, 3002, 2476, 2960,
	1327, 785, 1012, 988, 2435, 2641, 120, 987, 986, 1634,
	985, 2812, 2811, 2675, 799, 800, 2676, 78, 1035, 1034,
	3001, 1037, 1038, 1039, 2923, 1998, 2989, 2889, 2711, 2974,
	2683, 2711, 2922, 2894, 2939, 2914, 1942, 2273, 2934, 2536,
	2888, 1439, 1050, 2241, 2403, 2404, 2161, 2240, 2937, 2160,
	1839, 1840, 2162, 1365, 1198, 1366, 2402, 2943, 2944, 2085,
	1129, 2264, 1131, 1995, 1838, 2422, 2423, 1112, 1139, 755,
	754, 2864, 2938, 1113, 120, 2821, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1207, 1206, 1208, 1209, 1080, 78, 1996,
	1033, 1100, 2173, 2208, 87, 1106, 1101, 1176, 2577, 78,
	1128, 1130, 2409, 1047, 1048, 1049, 2473, 1052, 1053, 1054,
	1055, 580, 2124, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1777, 2500, 979, 2300, 581, 981, 182, 2125, 1117, 1118,
	78, 2527, 1893, 80, 188, 189, 190, 2410, 2740, 2966,
	1857, 1856, 2525, 589, 1166, 1615, 593, 587, 1114, 2504,
	121, 984, 1526, 1086, 1087, 87, 1887, 580, 2250, 2421,
	2967, 1304, 2412, 164, 1138, 580, 87, 1076, 1100, 2215,
	1107, 2424, 1924, 1101, 1957, 2236, 2407, 580, 1617, 1618,
	1619, 1099, 2275, 1098, 1962, 1089, 1172, 1126, 1974, 1164,
	1975, 1127, 1976, 2422, 2423, 2493, 1527, 1051, 1528, 2988,
	2408, 1132, 1552, 2494, 1133, 2166, 2501, 87, 1121, 982,
	1968, 1965, 1967, 1966, 1969, 1970, 1115, 1116, 577, 984,
	161, 976, 162, 1119, 1082, 1125, 984, 1075, 978, 977,
	2252, 1961, 2414, 1120, 2667, 2666, 1977, 1057, 1557, 1963,
	1056, 2502, 181, 1959, 2799, 87, 992, 2951, 1020, 1176,
	993, 1018, 186, 2663, 186, 1927, 1210, 186, 1818, 2424,
	993, 1029, 1028, 2277, 563, 3003, 1027, 1004, 1026, 1025,
	1024, 1023, 1022, 1960, 1017, 1307, 561, 982, 1443, 2301,
	1030, 2997, 2972, 1210, 968, 1996, 2256, 591, 1146, 591,
	591, 1079, 968, 968, 1011, 1886, 966, 2421, 1005, 2089,
	2091, 581, 1568, 1110, 591, 591, 1464, 1900, 798, 2424,
	2253, 1948, 1564, 1152, 1437, 1040, 558, 2860, 2444, 2235,
	1436, 1435, 2225, 1565, 1433, 572, 2616, 983, 546, 2287,
	2286, 2285, 2279, 541, 2283, 2596, 2278, 1158, 2276, 2269,
	568, 1944, 1096, 2281, 1102, 1103, 1104, 1105, 1172, 2157,
	165, 2120, 2280, 37, 1011, 2248, 2238, 581, 2247, 171,
	2076, 2434, 2209, 1770, 2662, 581, 2010, 1140, 1141, 2282,
	2284, 2578, 1046, 2871, 2206, 990, 2822, 581, 1171, 1168,
	1169, 1170, 1175, 1177, 1174, 1351, 1173, 1078, 1804, 1805,
	1276, 1021, 1010, 1167, 1019, 983, 1091, 1014, 1004, 1211,
	1212, 1845, 983, 1213, 1214, 1215, 1216, 1015, 116, 548,
	1463, 550, 564, 1221, 583, 1224, 582, 554, 2411, 552,
	556, 565, 557, 2887, 551, 2877, 562, 1016, 1210, 553,
	566, 567, 570, 573, 574, 575, 571, 569, 2942, 560,
	584, 1558, 1209, 2259, 2259, 1559, 1560, 1147, 2258, 2258,
	2474, 2475, 1010, 1148, 1149, 2401, 780, 1137, 1123, 2090,
	1577, 1997, 1295, 2477, 111, 186, 2883, 86, 1095, 591,
	591, 1134, 2710, 2627, 2628, 2710, 156, 1032, 2658, 1217,
	1011, 1556, 2941, 2590, 1182, 186, 1646, 1958, 1538, 1537,
	1539, 1540, 1541, 2995, 1011, 1561, 2996, 1308, 2994, 1109,
	1647, 1648, 1645, 1367, 591, 763, 1313, 1296, 186, 1162,
	1111, 1311, 77, 591, 1161, 1159, 1160, 2293, 1687, 591,
	1310, 2198, 1181, 1890, 1314, 2736, 1088, 1097, 1085, 1943,
	765, 1180, 1181, 1011, 112, 1234, 1238, 1235, 86, 2633,
	1171, 1168, 1169, 1170, 1175, 1177, 1174, 2632, 1173, 86,
	1931, 1011, 807, 1290, 1473, 1167, 81, 1472, 1462, 188,
	189, 190, 1891, 1666, 2415, 1941, 1939, 1312, 2418, 1296,
	1889, 95, 1687, 1020, 2024, 1936, 2417, 1018, 1010, 1936,
	1045, 1636, 1638, 1639, 1282, 1283, 1284, 1285, 1286, 2968,
	86, 2899, 1010, 1081, 2002, 2003, 2004, 1301, 1004, 1007,
	1008, 1124, 968, 1578, 1892, 1637, 1001, 1005, 1094, 2853,
	2419, 585, 1940, 2617, 1888, 1179, 1938, 1180, 1181, 157,
	2416, 98, 1362, 1553, 2295, 1554, 169, 1000, 1555, 578,
	1352, 1010, 2689, 2900, 2690, 2999, 1182, 1004, 1007, 1008,
	2807, 968, 3004, 1667, 579, 1001, 1005, 2806, 1298, 1010,
	2797, 2854, 2700, 2699, 1014, 1004, 1309, 1204, 1205, 1207,
	1206, 1208, 1209, 1329, 1015, 1315, 1332, 762, 177, 764,
	707, 708, 709, 186, 1182, 811, 87, 1425, 1202, 1203,
	1204, 1205, 1207, 1206, 1208, 1209, 1182, 1434, 1357, 1358,
	1644, 2640, 2497, 2639, 2452, 2033, 1182, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 2440, 1546,
	591, 2180, 1460, 176, 178, 179, 180, 2013, 2832, 1327,
	1469, 1182, 1544, 2179, 1471, 1896, 3005, 591, 591, 1547,
	591, 802, 591, 591, 1198, 591, 591, 591, 591, 591,
	591, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1184, 1533,
	591, 1198, 1531, 2268, 186, 1507, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1207, 1206, 1208, 1209, 1179, 1182, 1180,
	1181, 186, 1545, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1207, 1206, 1208, 1209, 591, 1543, 186, 1200, 1201, 1202,
	1203, 1204, 1205, 1207, 1206, 1208, 1209, 1566, 1521, 1327,
	591, 1530, 186, 2531, 1327, 1179, 1691, 1180, 1181, 1529,
	1692, 1336, 1532, 1456, 1466, 1466, 1519, 1179, 186, 1180,
	1181, 1182, 1449, 1513, 1510, 186, 1509, 1179, 1508, 1180,
	1181, 2041, 1483, 2969, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 591, 1468, 188, 189, 190, 2880, 2624,
	2061, 1327, 1179, 1504, 1180, 1181, 2589, 591, 591, 2879,
	1337, 2857, 1476, 1470, 1477, 1432, 1479, 1481, 2856, 2855,
	1485, 1487, 1489, 1491, 1493, 186, 1467, 2802, 1438, 1446,
	1459, 1447, 1445, 188, 189, 190, 2787, 2164, 1502, 1503,
	188, 189, 190, 2786, 1912, 2735, 2733, 2696, 2637, 1179,
	1581, 1180, 1181, 2623, 1327, 2505, 2443, 1585, 1573, 1587,
	1588, 1589, 1590, 1505, 2442, 2189, 1594, 2177, 188, 189,
	190, 1665, 1910, 1182, 1292, 1440, 1441, 1442, 1606, 188,
	189, 190, 1952, 1908, 1677, 591, 1668, 1672, 1951, 1642,
	1801, 2533, 1783, 1671, 1671, 1608, 1569, 188, 189, 190,
	591, 591, 1179, 1574, 1180, 1181, 1542, 1534, 1524, 1669,
	1669, 120, 987, 986, 1649, 985, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1520,
	1182, 1640, 1516, 1650, 1182, 1515, 1583, 1511, 1512, 1514,
	2020, 1338, 1135, 1517, 1518, 1151, 1731, 1327, 1182, 2829,
	92, 2828, 1579, 1580, 2791, 2947, 1327, 1604, 2790, 1198,
	1605, 93, 1194, 186, 1195, 1340, 1584, 2122, 591, 2111,
	2987, 1612, 1613, 1591, 1592, 1593, 1762, 2681, 1196, 1197,
	1193, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1206,
	1208, 1209, 186, 2956, 1327, 591, 2216, 1788, 1731, 1789,
	1643, 2111, 2920, 2363, 1179, 186, 1180, 1181, 2194, 591,
	100, 101, 2019, 2589, 186, 1327, 186, 2970, 186, 186,
	591, 1673, 100, 591, 99, 2111, 2907, 1853, 1679, 1680,
	1339, 2591, 1688, 94, 591, 101, 2111, 2903, 2130, 1766,
	1767, 2895, 1327, 1764, 1854, 2107, 100, 95, 99, 2111,
	2873, 1762, 1178, 1182, 2673, 2870, 2550, 1327, 2882, 807,
	94, 1179, 807, 1180, 1181, 1179, 95, 1180, 1181, 2111,
	2798, 2673, 1327, 1182, 1763, 1794, 1810, 1811, 2011, 1179,
	1765, 1180, 1181, 1768, 1769, 2111, 2671, 1820, 92, 591,
	94, 1327, 1936, 1327, 2122, 94, 1903, 1904, 1905, 93,
	1182, 1907, 1909, 1911, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1207, 1206, 1208, 1209, 1327, 591, 2011, 1764, 1848,
	1793, 2111, 591, 1469, 2594, 1327, 1469, 1782, 1469, 1178,
	1327, 777, 2046, 1327, 1935, 2910, 1831, 1849, 2130, 1858,
	2153, 1859, 1860, 1861, 1862, 1182, 2015, 1326, 1327, 1815,
	2550, 694, 1796, 1327, 2430, 2014, 1925, 1869, 1870, 1871,
	1872, 1879, 2432, 2431, 591, 2589, 1665, 1852, 2129, 1885,
	2338, 1182, 1665, 1665, 1813, 1863, 1864, 1865, 1866, 1182,
	1836, 1835, 811, 2868, 1179, 811, 1180, 1181, 1851, 1850,
	2428, 2429, 2428, 2427, 1937, 1716, 2130, 1327, 2011, 1327,
	1996, 2234, 187, 2154, 1179, 187, 1180, 1181, 187, 1895,
	186, 1013, 2156, 592, 1837, 187, 2011, 186, 2046, 1922,
	2396, 1466, 2130, 187, 186, 186, 1182, 2053, 186, 1996,
	186, 1179, 2030, 1180, 1181, 1182, 1880, 186, 187, 1875,
	1876, 1428, 2219, 1898, 186, 1894, 2029, 1930, 1906, 1182,
	1933, 1936, 1934, 2153, 1327, 1936, 1182, 2212, 2213, 1919,
	592, 87, 2795, 592, 187, 592, 1929, 1945, 1012, 1946,
	186, 1880, 1928, 1182, 1947, 591, 1179, 1808, 1180, 1181,
	1949, 1950, 1932, 1708, 1697, 1698, 1699, 1700, 1710, 1701,
	1702, 1703, 1715, 1711, 1704, 1705, 1712, 1713, 1714, 1706,
	1707, 1709, 1179, 1331, 1180, 1181, 1182, 2111, 2110, 2659,
	1179, 1773, 1180, 1181, 1620, 1182, 2154, 2611, 1428, 1427,
	1198, 1563, 2009, 1987, 1988, 1996, 2642, 1955, 1990, 1182,
	1359, 2552, 1373, 1372, 995, 767, 994, 1991, 2548, 2818,
	1182, 1642, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207,
	1206, 1208, 1209, 1334, 2455, 2539, 2788, 1179, 2747, 1180,
	1181, 1182, 2657, 2654, 2635, 2006, 1179, 2008, 1180, 1181,
	2542, 2541, 1430, 1980, 1182, 1498, 2643, 2644, 2645, 1182,
	1179, 1878, 1180, 1181, 2007, 1182, 2495, 1179, 2538, 1180,
	1181, 2457, 2453, 1182, 2220, 1874, 2499, 1182, 2181, 1868,
	1867, 1549, 1461, 1457, 1179, 1426, 1180, 1181, 1182, 113,
	2646, 2070, 87, 2186, 1182, 1080, 2601, 2602, 2819, 1182,
	1893, 2185, 2069, 1786, 1994, 1499, 1500, 1501, 2982, 1495,
	2980, 1610, 2963, 2607, 186, 2892, 2837, 1179, 2604, 1180,
	1181, 1182, 186, 2068, 2449, 2005, 1179, 591, 1180, 1181,
	2448, 1182, 1643, 591, 2447, 1335, 2067, 2647, 2648, 2095,
	1179, 2066, 1180, 1181, 591, 2099, 1671, 2065, 2186, 2093,
	2082, 1179, 2363, 1180, 1181, 2064, 1496, 1497, 2199, 2063,
	2606, 1981, 1669, 2953, 2023, 2021, 2387, 186, 2139, 2140,
	2062, 186, 1179, 1611, 1180, 1181, 2056, 2385, 1182, 2382,
	2381, 2055, 2386, 2921, 1182, 1179, 2163, 1180, 1181, 2126,
	1179, 1800, 1180, 1181, 1792, 2595, 1179, 2383, 1180, 1181,
	2039, 1182, 2384, 2054, 1179, 37, 1180, 1181, 1179, 1182,
	1180, 1181, 2343, 2051, 2146, 1182, 2342, 1764, 2582, 1179,
	2852, 1180, 1181, 2726, 2728, 1179, 2581, 1180, 1181, 2108,
	1179, 781, 1180, 1181, 591, 2717, 2585, 2716, 2352, 782,
	186, 2190, 2073, 2074, 1562, 753, 1301, 186, 1763, 2083,
	2426, 1042, 1179, 2171, 1180, 1181, 1041, 1683, 92, 2145,
	2050, 591, 1179, 2513, 1180, 1181, 2049, 1150, 591, 93,
	2112, 1684, 1469, 1469, 2167, 2104, 2185, 591, 2262, 2211,
	2119, 2355, 2357, 2047, 2109, 2715, 2227, 92, 2151, 2231,
	2358, 2043, 2226, 121, 94, 94, 2230, 2042, 93, 2155,
	186, 186, 186, 186, 186, 1885, 2587, 2991, 2158, 1179,
	2165, 1180, 1181, 2445, 101, 1179, 1984, 1180, 1181, 1810,
	1811, 186, 186, 2168, 2869, 100, 2814, 99, 2174, 2175,
	2425, 2178, 1179, 2143, 1180, 1181, 94, 186, 1973, 1797,
	1179, 1972, 1180, 1181, 2341, 2187, 1179, 1971, 1180, 1181,
	789, 790, 2340, 2567, 101, 2000, 1665, 2195, 99, 2196,
	2844, 2843, 2200, 2201, 2202, 100, 2229, 99, 2734, 2732,
	2731, 2724, 2655, 187, 2586, 187, 1449, 2584, 187, 2135,
	2138, 2139, 2140, 2136, 2458, 2137, 2141, 1920, 1444, 788,
	2228, 101, 763, 100, 2723, 2575, 2221, 2222, 2292, 2107,
	2288, 2122, 100, 2984, 2983, 103, 2302, 2031, 592, 1784,
	592, 592, 1353, 1671, 1344, 1671, 2983, 591, 1671, 106,
	107, 2984, 2858, 1671, 2622, 592, 592, 2271, 2251, 1669,
	779, 1669, 88, 591, 1669, 2270, 1, 2315, 2254, 1669,
	2626, 2936, 2325, 2326, 2327, 2328, 559, 1774, 186, 1299,
	2318, 2964, 591, 2188, 2932, 2319, 2332, 2933, 2191, 2192,
	1535, 591, 2272, 1525, 2289, 2684, 1732, 2815, 591, 591,
	2463, 186, 186, 186, 186, 186, 2461, 1926, 2653, 1883,
	1003, 146, 1846, 186, 1847, 2916, 110, 2360, 186, 961,
	109, 186, 2306, 186, 2468, 1006, 186, 186, 186, 2375,
	2332, 2369, 2320, 2321, 2322, 2323, 2324, 2395, 1108, 1921,
	2674, 2172, 2345, 1855, 2465, 769, 2331, 2346, 2464, 2462,
	2260, 1379, 1377, 2261, 1378, 1376, 2334, 2335, 2336, 2333,
	1381, 2441, 2313, 1380, 2313, 1314, 2146, 2313, 2344, 2032,
	186, 2553, 2313, 2347, 2135, 2138, 2139, 2140, 2136, 1614,
	2137, 2141, 588, 591, 2601, 2602, 2142, 184, 1368, 1345,
	770, 591, 2397, 771, 1043, 2398, 186, 2337, 549, 2377,
	2378, 2388, 2380, 2433, 1953, 555, 186, 1222, 95, 2479,
	2392, 2393, 2376, 1609, 2339, 2379, 187, 2399, 2159, 808,
	592, 592, 801, 2405, 186, 1785, 2097, 186, 1328, 1330,
	2371, 2579, 2351, 2374, 1573, 2366, 187, 2514, 2353, 2437,
	2366, 2114, 2436, 2356, 2487, 2349, 2851, 1325, 1321, 2725,
	2908, 2169, 1341, 2022, 1685, 592, 1825, 1635, 2486, 187,
	613, 612, 1322, 610, 592, 2100, 2123, 1185, 697, 2087,
	592, 1885, 2478, 1354, 2134, 2132, 2131, 1982, 2490, 1325,
	1321, 1832, 2603, 2599, 2928, 1827, 2459, 1790, 1791, 1324,
	1823, 1323, 2106, 621, 1322, 614, 2547, 2506, 606, 2619,
	2509, 2485, 677, 2508, 2237, 2496, 2239, 2170, 2492, 591,
	186, 1163, 1317, 600, 2511, 2512, 2517, 974, 1682, 1318,
	1319, 1324, 2820, 1323, 2516, 2875, 2460, 2523, 1999, 2535,
	1316, 1695, 1696, 2450, 2217, 1913, 63, 41, 1723, 595,
	2949, 1154, 795, 32, 2520, 2521, 31, 2522, 30, 29,
	2524, 28, 2526, 23, 2528, 22, 21, 20, 19, 25,
	18, 17, 16, 2471, 590, 2959, 2990, 186, 115, 50,
	47, 45, 123, 122, 48, 44, 1083, 42, 27, 26,
	15, 2573, 2438, 2439, 14, 2625, 2568, 2569, 13, 12,
	11, 10, 9, 2576, 2583, 186, 5, 4, 35, 34,
	33, 1157, 2608, 2588, 24, 2, 2467, 2466, 2204, 1915,
	0, 809, 2598, 0, 965, 186, 972, 0, 186, 186,
	186, 2605, 0, 0, 187, 0, 2487, 0, 591, 591,
	0, 0, 0, 2612, 2614, 2615, 2613, 0, 0, 0,
	2486, 2620, 0, 0, 0, 2621, 2660, 2661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 0, 0, 0, 0,
	591, 591, 591, 591, 0, 0, 0, 0, 592, 592,
	0, 592, 0, 592, 592, 0, 592, 592, 592, 592,
	592, 592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 0, 0, 2680, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2678, 2679,
	0, 0, 187, 0, 0, 0, 2636, 0, 2638, 0,
	0, 2695, 0, 0, 0, 592, 0, 187, 0, 0,
	1671, 186, 1671, 0, 0, 0, 0, 2691, 0, 0,
	0, 592, 0, 187, 0, 0, 1669, 2720, 1669, 0,
	0, 0, 2703, 0, 0, 591, 0, 591, 0, 187,
	2713, 0, 0, 0, 2704, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 592, 2741, 2749, 2369, 2743, 763,
	0, 2369, 2730, 1671, 2729, 2745, 2739, 2721, 592, 592,
	2737, 37, 0, 0, 0, 2630, 2631, 0, 0, 1669,
	2692, 0, 0, 0, 0, 0, 187, 0, 591, 0,
	0, 0, 0, 0, 2753, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 2796, 0, 0, 2750,
	2751, 0, 0, 0, 591, 0, 0, 0, 0, 2313,
	0, 2313, 2792, 0, 0, 0, 2794, 2664, 2808, 2800,
	2809, 2668, 2669, 2670, 2793, 0, 0, 0, 0, 2834,
	2835, 0, 2810, 0, 0, 591, 592, 0, 0, 591,
	591, 1689, 0, 2817, 0, 1690, 0, 2838, 0, 0,
	2366, 592, 592, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2848, 0, 2847, 591, 0,
	1669, 0, 2845, 2846, 0, 0, 0, 0, 0, 2850,
	0, 0, 0, 0, 0, 0, 2862, 0, 0, 0,
	0, 2861, 0, 2859, 0, 0, 2369, 0, 0, 0,
	0, 763, 0, 0, 1328, 1772, 0, 2865, 0, 591,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 186, 0, 0, 2867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 591,
	186, 0, 0, 187, 0, 0, 592, 0, 0, 0,
	0, 2878, 0, 0, 0, 2874, 187, 2884, 0, 0,
	592, 0, 0, 0, 0, 187, 2881, 187, 0, 187,
	187, 592, 0, 0, 592, 0, 0, 0, 0, 0,
	0, 591, 37, 0, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 591, 0, 0, 0, 2901, 0,
	0, 2906, 2803, 2804, 2805, 2911, 591, 0, 0, 0,
	0, 2909, 0, 0, 0, 186, 591, 2915, 2924, 809,
	0, 809, 809, 0, 0, 0, 0, 37, 0, 1897,
	592, 2927, 2817, 2917, 0, 2945, 1153, 1155, 2935, 2940,
	0, 0, 0, 0, 2952, 0, 0, 0, 0, 0,
	0, 0, 0, 2958, 0, 0, 0, 592, 591, 0,
	0, 0, 0, 592, 0, 0, 0, 591, 0, 0,
	0, 0, 0, 2973, 0, 0, 2971, 2977, 2975, 0,
	2981, 2979, 0, 0, 2978, 0, 0, 0, 0, 0,
	0, 1671, 0, 0, 0, 2992, 0, 0, 0, 0,
	2998, 3000, 0, 0, 0, 592, 0, 1669, 0, 2366,
	0, 0, 0, 0, 0, 0, 0, 0, 3008, 3009,
	2835, 3007, 0, 0, 0, 0, 0, 3006, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 0, 0, 0, 0,
	1669, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 187,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 809, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 2016, 0, 2017, 2018, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 2027,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 2035, 2036, 2037,
	2038, 0, 2040, 0, 0, 0, 0, 121, 2044, 0,
	2045, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	164, 0, 2057, 2058, 2059, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 2072, 0, 0, 0,
	0, 0, 0, 2077, 2078, 2079, 2080, 2081, 0, 1795,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	2094, 0, 0, 187, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 0, 592, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 0, 0, 0, 1475,
	1475, 0, 1475, 0, 1475, 1475, 0, 1484, 1475, 1475,
	1475, 1475, 1475, 0, 0, 0, 0, 0, 0, 0,
	1293, 1293, 965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 165, 0, 592,
	0, 0, 1570, 0, 0, 0, 171, 0, 592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 187, 187, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 809, 0, 0, 0, 0,
	0, 0, 187, 187, 0, 0, 0, 0, 0, 809,
	809, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 185, 0, 0, 545, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	2299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2314, 0, 0, 156, 0, 0, 794, 0, 794, 0,
	0, 0, 0, 0, 0, 0, 545, 1678, 0, 0,
	0, 2329, 2330, 0, 1293, 0, 0, 0, 592, 0,
	0, 0, 1693, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 592, 0, 0, 0, 0, 0, 809,
	0, 0, 592, 0, 0, 2372, 0, 0, 0, 592,
	592, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 2390, 2391, 187, 0, 0, 0, 0, 187,
	1787, 0, 187, 0, 187, 0, 0, 187, 187, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 2755,
	2757, 2756, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 643,
	0, 1349, 0, 0, 809, 0, 157, 0, 0, 0,
	0, 187, 809, 169, 0, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 0, 965, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 187, 0,
	0, 0, 0, 2957, 0, 2515, 0, 0, 0, 0,
	0, 972, 2519, 1396, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 2529, 2530, 2532, 2534,
	176, 178, 179, 180, 0, 0, 2540, 0, 965, 0,
	0, 2544, 2545, 2546, 972, 0, 0, 0, 2549, 0,
	0, 0, 0, 0, 2551, 0, 0, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 0, 0, 2565,
	0, 0, 0, 0, 0, 2570, 0, 0, 0, 0,
	592, 187, 0, 0, 0, 0, 965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2592, 2593,
	0, 0, 2597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2609, 2610, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 2761, 2762,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	187, 187, 0, 0, 0, 0, 0, 1993, 0, 592,
	592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2672, 688,
	0, 638, 692, 640, 689, 690, 0, 636, 639, 691,
	0, 0, 0, 0, 1397, 545, 0, 545, 0, 0,
	545, 592, 592, 592, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 642, 2754, 2758,
	2759, 2760, 2763, 2764, 2765, 2773, 2775, 666, 2774, 2776,
	2777, 2778, 2781, 2782, 2783, 2784, 2779, 2780, 2785, 0,
	0, 2701, 0, 0, 0, 2702, 0, 0, 0, 0,
	1302, 2706, 1410, 1413, 1414, 1415, 1416, 1417, 1418, 0,
	1419, 1420, 1421, 1422, 1423, 1398, 1399, 1400, 1401, 1382,
	1383, 1411, 187, 1385, 0, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 0, 0, 1395, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 0, 592, 0, 592, 0,
	0, 0, 0, 0, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 594, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 2101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 592,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	0, 2823, 2824, 2825, 0, 2826, 2827, 0, 0, 0,
	0, 2830, 0, 2831, 0, 2833, 2836, 1412, 545, 0,
	0, 0, 2840, 0, 0, 0, 592, 0, 0, 0,
	592, 592, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 0, 78, 39, 40, 80, 2193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	2866, 545, 84, 0, 0, 0, 43, 69, 70, 0,
	67, 71, 0, 1799, 0, 0, 0, 0, 0, 68,
	2218, 0, 0, 0, 0, 0, 0, 0, 0, 2223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 0, 0, 0, 56, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 2886, 0,
	592, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2891, 0, 0, 0, 0, 2896, 0, 0,
	0, 0, 0, 2897, 2898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2904, 592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 592, 0, 0, 182, 0,
	0, 0, 0, 0, 1293, 0, 1293, 592, 0, 1293,
	0, 0, 0, 0, 1293, 0, 187, 592, 0, 0,
	2948, 0, 121, 0, 143, 0, 545, 0, 0, 809,
	0, 0, 2954, 0, 0, 164, 2955, 0, 0, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 592,
	0, 75, 72, 0, 2348, 0, 153, 0, 592, 0,
	0, 142, 0, 809, 0, 0, 1294, 1293, 0, 0,
	2373, 1475, 1293, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 161, 0, 162, 0, 0, 73, 74, 0,
	0, 1294, 1294, 0, 0, 0, 0, 545, 0, 0,
	130, 131, 152, 151, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 545,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 1293, 0,
	0, 545, 0, 1799, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 1596, 545,
	545, 545, 545, 545, 545, 545, 0, 0, 0, 0,
	0, 0, 1084, 0, 1090, 0, 0, 1092, 0, 0,
	147, 128, 154, 135, 127, 0, 148, 149, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 545, 0,
	0, 171, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 137, 132, 133,
	134, 138, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 0, 0, 0, 0, 794,
	794, 2348, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	1572, 794, 794, 794, 794, 794, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 604, 0, 0, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	1799, 1799, 0, 0, 0, 1572, 0, 545, 0, 545,
	0, 545, 1834, 787, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 2686, 2687, 2688, 0, 0, 1356, 144,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 1293, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 1293, 0, 0, 0, 0, 2742, 0, 2744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 1374, 0, 0, 0, 545, 545, 0,
	0, 545, 0, 1985, 0, 0, 809, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2841, 0, 0,
	0, 2841, 2841, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 79,
	1799, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 1799, 0, 0, 1396, 1586, 766, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 973, 2902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 794, 794, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 1572, 809, 809, 545, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 2925, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 2930,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1230, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	2203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 1819, 0, 0, 1623,
	0, 0, 0, 545, 545, 545, 545, 545, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 545, 0, 0, 0, 0,
	0, 0, 0, 1410, 1413, 1414, 1415, 1416, 1417, 1418,
	545, 1419, 1420, 1421, 1422, 1423, 1398, 1399, 1400, 1401,
	1382, 1383, 1411, 0, 1385, 794, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 0, 0, 1395, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 1294, 0, 1294, 0, 0,
	1294, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 1294, 545, 545, 545, 545, 545, 0,
	0, 0, 0, 0, 0, 0, 2389, 0, 1412, 0,
	1623, 545, 0, 0, 1522, 0, 545, 1964, 0, 545,
	2400, 1572, 0, 0, 1978, 1979, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 1143, 0, 1143, 1143, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 79, 0, 0, 1431, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	545, 766, 1218, 1219, 1220, 0, 1223, 0, 1225, 1226,
	1227, 1228, 0, 1231, 1233, 1233, 0, 1233, 1237, 1237,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 0, 1277, 1278,
	1279, 1280, 1281, 0, 0, 0, 0, 1237, 1237, 1237,
	1237, 1237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2210, 0, 1303, 0, 0, 0, 0,
	545, 766, 0, 0, 0, 766, 121, 0, 143, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 2150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 1631, 1632, 1633, 0, 0, 545, 0,
	153, 545, 545, 545, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 162, 0,
	0, 0, 0, 1675, 1676, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 1452, 1453, 152, 151, 181, 0,
	2197, 0, 0, 0, 0, 0, 1717, 1718, 1719, 1720,
	1721, 1722, 1724, 1728, 1729, 604, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 1294, 0, 1294, 0, 0, 1448, 0, 0,
	2242, 2243, 2244, 2245, 2246, 0, 0, 604, 0, 0,
	121, 0, 143, 0, 1522, 0, 0, 0, 0, 0,
	0, 1623, 2255, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 147, 1454, 154, 2263, 1451, 0,
	148, 149, 0, 1806, 1807, 0, 165, 2096, 0, 0,
	705, 706, 0, 0, 153, 171, 1670, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1452, 1453,
	152, 151, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 1454,
	154, 0, 1451, 0, 148, 149, 0, 0, 0, 0,
	165, 1143, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 1143, 1143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2446, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 2482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2491, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 2507, 0, 0, 2510, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1230, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 2649, 169, 0, 2650, 2651,
	2652, 0, 87, 0, 0, 0, 0, 0, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 973, 0, 700,
	0, 0, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 703, 710, 711, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 705, 706, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 2488, 2489,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2267, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2290, 2291, 0, 0, 0, 2294, 0,
	0, 0, 0, 2296, 2297, 2298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2303, 2304, 2305, 0, 0,
	1735, 2307, 0, 2308, 2309, 0, 0, 0, 2316, 2317,
	0, 0, 0, 0, 0, 0, 1735, 1735, 1735, 1735,
	1735, 604, 604, 604, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 692, 0, 689, 690, 0, 0,
	0, 691, 0, 0, 0, 87, 2361, 0, 0, 0,
	0, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 2075, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2394, 0, 703, 710, 711, 2092, 0,
	2885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2127, 2128, 0, 0,
	0, 2488, 2489, 0, 0, 2147, 0, 2148, 2149, 0,
	0, 0, 2456, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2537,
	0, 0, 0, 0, 0, 0, 2543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 2677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2370, 0, 79, 0, 0, 1826,
	1826, 1826, 1826, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2147, 766, 0, 0,
	0, 1826, 0, 0, 1826, 2693, 0, 2694, 0, 0,
	0, 0, 2697, 2698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2746, 2484, 0, 2748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2849, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2714, 0, 2718, 2719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2370, 0, 79, 0, 2370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2876, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	943, 928, 462, 79, 874, 946, 843, 862, 956, 865,
	868, 910, 822, 888, 378, 859, 814, 847, 817, 854,
	818, 845, 876, 250, 842, 930, 892, 945, 333, 247,
	824, 848, 392, 864, 197, 912, 436, 234, 343, 340,
	469, 262, 253, 249, 233, 289, 350, 390, 456, 384,
	952, 337, 898, 2905, 446, 363, 0, 0, 79, 878,
	934, 886, 924, 873, 911, 832, 897, 947, 860, 907,
	948, 295, 232, 196, 375, 447, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 2918, 0, 2919, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 856, 904, 942,
	857, 906, 245, 293, 252, 244, 466, 953, 933, 821,
	885, 941, 0, 0, 214, 944, 880, 0, 909, 0,
	959, 816, 900, 0, 819, 823, 955, 937, 851, 255,
	0, 0, 0, 0, 0, 0, 0, 877, 887, 921,
	871, 0, 0, 0, 0, 0, 0, 0, 849, 0,
	896, 0, 0, 0, 828, 820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 831, 0, 850, 922, 0, 813, 276, 825, 364,
	237, 0, 926, 936, 872, 502, 940, 870, 869, 916,
	829, 932, 863, 332, 827, 301, 192, 210, 0, 861,
	374, 417, 423, 931, 846, 855, 235, 853, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 895, 914,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 1145, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 841, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 927, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	919, 958, 387, 422, 225, 487, 445, 836, 840, 834,
	901, 835, 890, 891, 837, 949, 950, 951, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 923, 830, 0,
	838, 839, 0, 929, 938, 939, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 894, 191, 207,
	335, 954, 410, 268, 518, 496, 492, 815, 833, 242,
	844, 852, 0, 858, 866, 867, 879, 881, 882, 883,
	884, 902, 903, 905, 913, 915, 918, 920, 925, 935,
	957, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 893,
	899, 346, 261, 281, 292, 908, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 889, 917, 342, 463, 464,
	288, 360, 0, 0, 943, 928, 462, 0, 874, 946,
	843, 862, 956, 865, 868, 910, 822, 888, 378, 859,
	814, 847, 817, 854, 818, 845, 876, 250, 842, 930,
	892, 945, 333, 247, 824, 848, 392, 864, 197, 912,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 952, 337, 898, 0, 446, 363,
	0, 0, 0, 878, 934, 886, 924, 873, 911, 832,
	897, 947, 860, 907, 948, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 856, 904, 942, 857, 906, 245, 293, 252, 244,
	466, 953, 933, 821, 885, 941, 0, 0, 214, 944,
	880, 0, 909, 0, 959, 816, 900, 0, 819, 823,
	955, 937, 851, 255, 0, 0, 0, 0, 0, 0,
	0, 877, 887, 921, 871, 0, 0, 0, 0, 0,
	2401, 0, 849, 0, 896, 0, 0, 0, 828, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 831, 0, 850, 922, 0,
	813, 276, 825, 364, 237, 0, 926, 936, 872, 502,
	940, 870, 869, 916, 829, 932, 863, 332, 827, 301,
	192, 210, 0, 861, 374, 417, 423, 931, 846, 855,
	235, 853, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 895, 914, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 1145, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 841, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 927, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 919, 958, 387, 422, 225, 487,
	445, 836, 840, 834, 901, 835, 890, 891, 837, 949,
	950, 951, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 923, 830, 0, 838, 839, 0, 929, 938, 939,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 894, 191, 207, 335, 954, 410, 268, 518, 496,
	492, 815, 833, 242, 844, 852, 0, 858, 866, 867,
	879, 881, 882, 883, 884, 902, 903, 905, 913, 915,
	918, 920, 925, 935, 957, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 893, 899, 346, 261, 281, 292, 908,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 889,
	917, 342, 463, 464, 288, 360, 0, 0, 943, 928,
	462, 0, 874, 946, 843, 862, 956, 865, 868, 910,
	822, 888, 378, 859, 814, 847, 817, 854, 818, 845,
	876, 250, 842, 930, 892, 945, 333, 247, 824, 848,
	392, 864, 197, 912, 436, 234, 343, 340, 469, 262,
	253, 249, 233, 289, 350, 390, 456, 384, 952, 337,
	898, 0, 446, 363, 0, 0, 0, 878, 934, 886,
	924, 873, 911, 832, 897, 947, 860, 907, 948, 295,
	232, 196, 375, 447, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 856, 904, 942, 857, 906,
	245, 293, 252, 244, 466, 953, 933, 821, 885, 941,
	0, 0, 214, 944, 880, 0, 909, 0, 959, 816,
	900, 0, 819, 823, 955, 937, 851, 255, 0, 0,
	0, 0, 0, 0, 0, 877, 887, 921, 871, 0,
	0, 0, 0, 0, 2359, 0, 849, 0, 896, 0,
	0, 0, 828, 820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 831,
	0, 850, 922, 0, 813, 276, 825, 364, 237, 0,
	926, 936, 872, 502, 940, 870, 869, 916, 829, 932,
	863, 332, 827, 301, 192, 210, 0, 861, 374, 417,
	423, 931, 846, 855, 235, 853, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 895, 914, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 1145, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 841, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 927,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 919, 958,
	387, 422, 225, 487, 445, 836, 840, 834, 901, 835,
	890, 891, 837, 949, 950, 951, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 923, 830, 0, 838, 839,
	0, 929, 938, 939, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 894, 191, 207, 335, 954,
	410, 268, 518, 496, 492, 815, 833, 242, 844, 852,
	0, 858, 866, 867, 879, 881, 882, 883, 884, 902,
	903, 905, 913, 915, 918, 920, 925, 935, 957, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 893, 899, 346,
	261, 281, 292, 908, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 889, 917, 342, 463, 464, 288, 360,
	0, 0, 943, 928, 462, 0, 874, 946, 843, 862,
	956, 865, 868, 910, 822, 888, 378, 859, 814, 847,
	817, 854, 818, 845, 876, 250, 842, 930, 892, 945,
	333, 247, 824, 848, 392, 864, 197, 912, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 952, 337, 898, 0, 446, 363, 0, 0,
	0, 878, 934, 886, 924, 873, 911, 832, 897, 947,
	860, 907, 948, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 856,
	904, 942, 857, 906, 245, 293, 252, 244, 466, 953,
	933, 821, 885, 941, 0, 0, 214, 944, 880, 0,
	909, 0, 959, 816, 900, 0, 819, 823, 955, 937,
	851, 255, 0, 0, 0, 0, 0, 0, 0, 877,
	887, 921, 871, 0, 0, 0, 0, 0, 1814, 0,
	849, 0, 896, 0, 0, 0, 828, 820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 831, 0, 850, 922, 0, 813, 276,
	825, 364, 237, 0, 926, 936, 872, 502, 940, 870,
	869, 916, 829, 932, 863, 332, 827, 301, 192, 210,
	0, 861, 374, 417, 423, 931, 846, 855, 235, 853,
	421, 388, 485, 218, 264, 414, 394, 419, 401, 267,
	895, 914, 420, 338, 471, 408, 482, 503, 504, 243,
	368, 493, 460, 499, 517, 211, 240, 382, 453, 488,
	443, 361, 467, 468, 300, 442, 274, 195, 336, 509,
	209, 429, 227, 216, 473, 491, 269, 412, 202, 455,
	480, 224, 433, 0, 0, 519, 204, 478, 452, 357,
	297, 298, 203, 0, 413, 248, 272, 238, 377, 475,
	476, 236, 520, 213, 498, 206, 1145, 497, 370, 470,
	479, 358, 348, 205, 477, 356, 347, 303, 322, 323,
	260, 283, 406, 341, 407, 284, 366, 365, 367, 198,
	489, 0, 199, 0, 448, 490, 521, 219, 220, 222,
	841, 259, 263, 271, 273, 279, 280, 287, 334, 381,
	405, 403, 409, 927, 465, 483, 494, 501, 507, 508,
	510, 511, 512, 513, 514, 516, 515, 369, 286, 444,
	302, 339, 919, 958, 387, 422, 225, 487, 445, 836,
	840, 834, 901, 835, 890, 891, 837, 949, 950, 951,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 0, 923,
	830, 0, 838, 839, 0, 929, 938, 939, 540, 349,
	435, 484, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 894,
	191, 207, 335, 954, 410, 268, 518, 496, 492, 815,
	833, 242, 844, 852, 0, 858, 866, 867, 879, 881,
	882, 883, 884, 902, 903, 905, 913, 915, 918, 920,
	925, 935, 957, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 437, 438, 439, 440, 441, 449, 450, 454,
	472, 474, 486, 500, 505, 430, 278, 481, 506, 0,
	344, 893, 899, 346, 261, 281, 292, 908, 495, 451,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	457, 458, 459, 461, 359, 246, 395, 889, 917, 342,
	463, 464, 288, 360, 0, 0, 943, 928, 462, 0,
	874, 946, 843, 862, 956, 865, 868, 910, 822, 888,
	378, 859, 814, 847, 817, 854, 818, 845, 876, 250,
	842, 930, 892, 945, 333, 247, 824, 848, 392, 864,
	197, 912, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 952, 337, 898, 0,
	446, 363, 0, 0, 0, 878, 934, 886, 924, 873,
	911, 832, 897, 947, 860, 907, 948, 295, 232, 196,
	375, 447, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 856, 904, 942, 857, 906, 245, 293,
	252, 244, 466, 953, 933, 821, 885, 941, 0, 0,
	214, 944, 880, 0, 909, 0, 959, 816, 900, 0,
	819, 823, 955, 937, 851, 255, 0, 0, 0, 0,
	0, 0, 0, 877, 887, 921, 871, 0, 0, 0,
	0, 0, 0, 0, 849, 0, 896, 0, 0, 0,
	828, 820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 831, 0, 850,
	922, 0, 813, 276, 825, 364, 237, 0, 926, 936,
	872, 502, 940, 870, 869, 916, 829, 932, 863, 332,
	827, 301, 192, 210, 0, 861, 374, 417, 423, 931,
	846, 855, 235, 853, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 895, 914, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	1145, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 322, 323, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 841, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 927, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 919, 958, 387, 422,
	225, 487, 445, 836, 840, 834, 901, 835, 890, 891,
	837, 949, 950, 951, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 923, 830, 0, 838, 839, 0, 929,
	938, 939, 540, 349, 435, 484, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 894, 191, 207, 335, 954, 410, 268,
	518, 496, 492, 815, 833, 242, 844, 852, 0, 858,
	866, 867, 879, 881, 882, 883, 884, 902, 903, 905,
	913, 915, 918, 920, 925, 935, 957, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 893, 899, 346, 261, 281,
	292, 908, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 889, 917, 342, 463, 464, 288, 360, 0, 0,
	943, 928, 462, 0, 874, 946, 843, 862, 956, 865,
	868, 910, 822, 888, 378, 859, 814, 847, 817, 854,
	818, 845, 876, 250, 842, 930, 892, 945, 333, 247,
	824, 848, 392, 864, 197, 912, 436, 234, 343, 340,
	469, 262, 253, 249, 233, 289, 350, 390, 456, 384,
	952, 337, 898, 0, 446, 363, 0, 0, 0, 878,
	934, 886, 924, 873, 911, 832, 897, 947, 860, 907,
	948, 295, 232, 196, 375, 447, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 856, 904, 942,
	857, 906, 245, 293, 252, 244, 466, 953, 933, 821,
	885, 941, 0, 0, 214, 944, 880, 0, 909, 0,
	959, 816, 900, 0, 819, 823, 955, 937, 851, 255,
	0, 0, 0, 0, 0, 0, 0, 877, 887, 921,
	871, 0, 0, 0, 0, 0, 0, 0, 849, 0,
	896, 0, 0, 0, 828, 820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 831, 0, 850, 922, 0, 813, 276, 825, 364,
	237, 0, 926, 936, 872, 502, 940, 870, 869, 916,
	829, 932, 863, 332, 827, 301, 192, 210, 0, 861,
	374, 417, 423, 931, 846, 855, 235, 853, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 895, 914,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 1145, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 841, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 927, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	919, 958, 387, 422, 225, 487, 445, 836, 840, 834,
	901, 835, 890, 891, 837, 949, 950, 951, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 923, 830, 0,
	838, 839, 0, 929, 938, 939, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 894, 191, 207,
	335, 954, 410, 268, 518, 496, 492, 815, 833, 242,
	844, 852, 0, 858, 866, 867, 879, 881, 882, 883,
	884, 902, 903, 905, 913, 915, 918, 920, 925, 935,
	957, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 893,
	899, 346, 261, 281, 292, 908, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 889, 917, 342, 463, 464,
	288, 360, 0, 0, 943, 928, 462, 0, 874, 946,
	843, 862, 956, 865, 868, 910, 822, 888, 378, 859,
	814, 847, 817, 854, 818, 845, 876, 250, 842, 930,
	892, 945, 333, 247, 824, 848, 392, 864, 197, 912,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 952, 337, 898, 0, 446, 363,
	0, 0, 0, 878, 934, 886, 924, 873, 911, 832,
	897, 947, 860, 907, 948, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 856, 904, 942, 857, 906, 245, 293, 252, 244,
	466, 953, 933, 821, 885, 941, 0, 0, 960, 944,
	880, 0, 909, 0, 959, 816, 900, 0, 819, 823,
	955, 937, 851, 255, 0, 0, 0, 0, 0, 0,
	0, 877, 887, 921, 871, 0, 0, 0, 0, 0,
	0, 0, 849, 0, 896, 0, 0, 0, 828, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 831, 0, 850, 922, 0,
	813, 276, 825, 364, 237, 0, 926, 936, 872, 502,
	940, 870, 869, 916, 829, 932, 863, 332, 827, 301,
	192, 210, 0, 861, 374, 417, 423, 931, 846, 855,
	235, 853, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 895, 914, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 826, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 841, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 927, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 812,
	806, 805, 302, 339, 919, 958, 387, 422, 225, 487,
	445, 836, 840, 834, 901, 835, 890, 891, 837, 949,
	950, 951, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 923, 830, 0, 838, 839, 0, 929, 938, 939,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 894, 191, 207, 335, 954, 410, 268, 518, 496,
	492, 815, 833, 242, 844, 852, 0, 858, 866, 867,
	879, 881, 882, 883, 884, 902, 903, 905, 913, 915,
	918, 920, 925, 935, 957, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 893, 899, 346, 261, 281, 292, 908,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 889,
	917, 342, 463, 464, 288, 360, 0, 0, 943, 928,
	462, 0, 874, 946, 843, 862, 956, 865, 868, 910,
	822, 888, 378, 859, 814, 847, 817, 854, 818, 845,
	876, 250, 842, 930, 892, 945, 333, 247, 824, 848,
	392, 864, 197, 912, 436, 234, 343, 340, 469, 262,
	253, 249, 233, 289, 350, 390, 456, 384, 952, 337,
	898, 0, 446, 363, 0, 0, 0, 878, 934, 886,
	924, 873, 911, 832, 897, 947, 860, 907, 948, 295,
	232, 196, 375, 447, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 856, 904, 942, 857, 906,
	245, 293, 252, 244, 466, 953, 933, 821, 885, 941,
	0, 0, 960, 944, 880, 0, 909, 0, 959, 816,
	900, 0, 819, 823, 955, 937, 851, 255, 0, 0,
	0, 0, 0, 0, 0, 877, 887, 921, 871, 0,
	0, 0, 0, 0, 0, 0, 849, 0, 896, 0,
	0, 0, 828, 820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 831,
	0, 850, 922, 0, 813, 276, 825, 364, 237, 0,
	926, 936, 872, 502, 940, 870, 869, 916, 829, 932,
	863, 332, 827, 301, 192, 210, 0, 861, 374, 417,
	423, 931, 846, 855, 235, 853, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 895, 914, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 1360, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 826, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 841, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 927,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 812, 806, 805, 302, 339, 919, 958,
	387, 422, 225, 487, 445, 836, 840, 834, 901, 835,
	890, 891, 837, 949, 950, 951, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 923, 830, 0, 838, 839,
	0, 929, 938, 939, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 894, 191, 207, 335, 954,
	410, 268, 518, 496, 492, 815, 833, 242, 844, 852,
	0, 858, 866, 867, 879, 881, 882, 883, 884, 902,
	903, 905, 913, 915, 918, 920, 925, 935, 957, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 893, 899, 346,
	261, 281, 292, 908, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 889, 917, 342, 463, 464, 288, 360,
	0, 0, 943, 928, 462, 0, 874, 946, 843, 862,
	956, 865, 868, 910, 822, 888, 378, 859, 814, 847,
	817, 854, 818, 845, 876, 250, 842, 930, 892, 945,
	333, 247, 824, 848, 392, 864, 197, 912, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 952, 337, 898, 0, 446, 363, 0, 0,
	0, 878, 934, 886, 924, 873, 911, 832, 897, 947,
	860, 907, 948, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 856,
	904, 942, 857, 906, 245, 293, 252, 244, 466, 953,
	933, 821, 885, 941, 0, 0, 960, 944, 880, 0,
	909, 0, 959, 816, 900, 0, 819, 823, 955, 937,
	851, 255, 0, 0, 0, 0, 0, 0, 0, 877,
	887, 921, 871, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 896, 0, 0, 0, 828, 820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 831, 0, 850, 922, 0, 813, 276,
	825, 364, 237, 0, 926, 936, 872, 502, 940, 870,
	869, 916, 829, 932, 863, 332, 827, 301, 192, 210,
	0, 861, 374, 417, 423, 931, 846, 855, 235, 853,
	421, 388, 485, 218, 264, 414, 394, 419, 401, 267,
	895, 914, 420, 338, 471, 408, 482, 503, 504, 243,
	368, 493, 460, 499, 517, 211, 240, 382, 453, 488,
	443, 361, 467, 468, 300, 442, 274, 195, 336, 509,
	209, 429, 227, 216, 473, 491, 269, 412, 202, 455,
	803, 224, 433, 0, 0, 519, 204, 478, 452, 357,
	297, 298, 203, 0, 413, 248, 272, 238, 377, 475,
	476, 236, 520, 213, 498, 206, 826, 497, 370, 470,
	479, 358, 348, 205, 477, 356, 347, 303, 322, 323,
	260, 283, 406, 341, 407, 284, 366, 365, 367, 198,
	489, 0, 199, 0, 448, 490, 521, 219, 220, 222,
	841, 259, 263, 271, 273, 279, 280, 287, 334, 381,
	405, 403, 409, 927, 465, 483, 494, 501, 507, 508,
	510, 511, 512, 513, 514, 516, 515, 812, 806, 805,
	302, 339, 919, 958, 387, 422, 225, 487, 445, 836,
	840, 834, 901, 835, 890, 891, 837, 949, 950, 951,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 0, 923,
	830, 0, 838, 839, 0, 929, 938, 939, 540, 349,
	435, 484, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 894,
	191, 207, 335, 954, 410, 268, 518, 496, 492, 815,
	833, 242, 844, 852, 0, 858, 866, 867, 879, 881,
	882, 883, 884, 902, 903, 905, 913, 915, 918, 920,
	925, 935, 957, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 437, 438, 439, 440, 441, 449, 450, 454,
	472, 474, 486, 500, 505, 430, 278, 481, 506, 0,
	344, 893, 899, 346, 261, 281, 292, 908, 495, 451,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	457, 458, 459, 461, 359, 246, 395, 889, 917, 342,
	463, 464, 288, 360, 0, 0, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 1759, 0, 622, 0, 0, 0, 250,
	627, 0, 0, 0, 333, 247, 0, 1760, 392, 0,
	197, 0, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 634, 337, 0, 0,
	446, 363, 0, 0, 0, 0, 0, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	375, 447, 266, 0, 87, 0, 0, 188, 189, 190,
	698, 705, 706, 707, 708, 709, 699, 701, 0, 0,
	223, 700, 230, 645, 647, 646, 656, 657, 658, 659,
	660, 661, 662, 643, 703, 710, 711, 0, 245, 293,
	252, 244, 466, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 605, 619,
	0, 633, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 617, 792, 0, 0, 0, 682, 0, 618, 0,
	0, 626, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 681, 0,
	0, 502, 0, 0, 679, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	0, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 651, 652, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 0, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 0, 0, 387, 422,
	225, 487, 445, 688, 680, 638, 692, 640, 689, 690,
	635, 636, 639, 691, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 683, 625, 624, 0, 631, 632, 0,
	641, 642, 644, 648, 649, 650, 653, 654, 655, 663,
	665, 666, 664, 667, 668, 669, 672, 673, 674, 675,
	670, 671, 676, 623, 191, 207, 335, 0, 410, 268,
	518, 496, 492, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 0, 360, 342, 463, 464, 288, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 622, 0, 0, 0, 250, 627,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 634, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 87, 0, 0, 188, 189, 190, 698,
	705, 706, 707, 708, 709, 699, 701, 0, 0, 223,
	700, 230, 645, 647, 646, 656, 657, 658, 659, 660,
	661, 662, 643, 703, 710, 711, 0, 245, 293, 252,
	244, 466, 0, 0, 1725, 1726, 1727, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 605, 619, 0,
	633, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	617, 0, 0, 0, 0, 682, 0, 618, 0, 0,
	626, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 681, 0, 0,
	502, 0, 0, 679, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 651, 652, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 688, 680, 638, 692, 640, 689, 690, 635,
	636, 639, 691, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 683, 625, 624, 0, 631, 632, 0, 641,
	642, 644, 648, 649, 650, 653, 654, 655, 663, 665,
	666, 664, 667, 668, 669, 672, 673, 674, 675, 670,
	671, 676, 623, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 622, 0, 0, 0, 250, 627, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 634, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 629, 630, 0, 0, 0,
	0, 0, 0, 1841, 0, 295, 232, 196, 375, 447,
	266, 0, 87, 0, 0, 188, 189, 190, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 0, 223, 700,
	230, 645, 647, 646, 656, 657, 658, 659, 660, 661,
	662, 643, 703, 710, 711, 1842, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 605, 619, 0, 633,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 617,
	0, 0, 0, 0, 682, 0, 618, 0, 0, 626,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 681, 0, 0, 502,
	0, 0, 679, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	651, 652, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 688, 680, 638, 692, 640, 689, 690, 635, 636,
	639, 691, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 683, 625, 624, 0, 631, 632, 0, 641, 642,
	644, 648, 649, 650, 653, 654, 655, 663, 665, 666,
	664, 667, 668, 669, 672, 673, 674, 675, 670, 671,
	676, 623, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	0, 342, 463, 464, 288, 360, 0, 0, 0, 78,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 622, 0, 0,
	0, 250, 627, 0, 0, 0, 333, 247, 0, 0,
	392, 0, 197, 0, 436, 234, 343, 340, 469, 262,
	253, 249, 233, 289, 350, 390, 456, 384, 634, 337,
	0, 0, 446, 363, 0, 0, 0, 0, 0, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 375, 447, 266, 0, 87, 0, 0, 188,
	189, 190, 698, 705, 706, 707, 708, 709, 699, 701,
	0, 0, 223, 700, 230, 645, 647, 646, 656, 657,
	658, 659, 660, 661, 662, 643, 703, 710, 711, 0,
	245, 293, 252, 244, 466, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	605, 619, 0, 633, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 617, 0, 0, 0, 0, 682, 0,
	618, 0, 0, 626, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	681, 0, 0, 502, 0, 0, 679, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 651, 652, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 688, 680, 638, 692, 640,
	689, 690, 635, 636, 639, 691, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 683, 625, 624, 0, 631,
	632, 0, 641, 642, 644, 648, 649, 650, 653, 654,
	655, 663, 665, 666, 664, 667, 668, 669, 672, 673,
	674, 675, 670, 671, 676, 623, 191, 207, 335, 86,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 622, 0, 0, 0,
	250, 627, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 634, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 0, 188, 189,
	190, 698, 705, 706, 707, 708, 709, 699, 701, 0,
	0, 223, 700, 230, 645, 647, 646, 656, 657, 658,
	659, 660, 661, 662, 643, 703, 710, 711, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 605,
	619, 0, 633, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 682, 0, 618,
	0, 0, 626, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 681,
	0, 0, 502, 0, 0, 679, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 485, 218, 264,
	414, 394, 419, 401, 267, 2912, 0, 420, 338, 471,
	408, 482, 503, 504, 243, 368, 493, 460, 499, 517,
	211, 240, 382, 453, 488, 443, 361, 467, 468, 300,
	442, 274, 195, 336, 509, 209, 429, 227, 216, 473,
	491, 269, 412, 202, 455, 480, 224, 433, 0, 0,
	519, 204, 478, 452, 357, 297, 298, 203, 0, 413,
	248, 272, 238, 377, 475, 476, 236, 520, 213, 498,
	206, 0, 497, 370, 470, 479, 358, 348, 205, 477,
	356, 347, 303, 651, 652, 260, 283, 406, 341, 407,
	284, 366, 365, 367, 198, 489, 0, 199, 0, 448,
	490, 521, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 381, 405, 403, 409, 0, 465,
	483, 494, 501, 507, 508, 510, 511, 512, 513, 514,
	516, 515, 369, 286, 444, 302, 339, 0, 0, 387,
	422, 225, 487, 445, 688, 680, 638, 692, 640, 689,
	690, 635, 636, 639, 691, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 0, 683, 625, 624, 0, 631, 632,
	0, 641, 642, 644, 648, 649, 650, 653, 654, 655,
	663, 665, 666, 664, 667, 668, 669, 672, 673, 674,
	675, 670, 671, 676, 623, 191, 207, 335, 0, 410,
	268, 518, 496, 492, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 437, 438, 439,
	440, 441, 449, 450, 454, 472, 474, 486, 500, 505,
	430, 278, 481, 506, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 495, 451, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 457, 458, 459, 461, 359,
	246, 395, 0, 360, 342, 463, 464, 288, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 622, 0, 0, 0, 250,
	627, 0, 0, 0, 333, 247, 0, 0, 392, 0,
	197, 0, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 634, 337, 0, 0,
	446, 363, 0, 0, 0, 0, 0, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	375, 447, 266, 0, 87, 0, 1327, 188, 189, 190,
	698, 705, 706, 707, 708, 709, 699, 701, 0, 0,
	223, 700, 230, 645, 647, 646, 656, 657, 658, 659,
	660, 661, 662, 643, 703, 710, 711, 0, 245, 293,
	252, 244, 466, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 605, 619,
	0, 633, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 617, 0, 0, 0, 0, 682, 0, 618, 0,
	0, 626, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 681, 0,
	0, 502, 0, 0, 679, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	0, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 651, 652, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 0, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 0, 0, 387, 422,
	225, 487, 445, 688, 680, 638, 692, 640, 689, 690,
	635, 636, 639, 691, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 683, 625, 624, 0, 631, 632, 0,
	641, 642, 644, 648, 649, 650, 653, 654, 655, 663,
	665, 666, 664, 667, 668, 669, 672, 673, 674, 675,
	670, 671, 676, 623, 191, 207, 335, 0, 410, 268,
	518, 496, 492, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 0, 360, 342, 463, 464, 288, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 622, 0, 0, 0, 250, 627,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 634, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 87, 0, 0, 188, 189, 190, 698,
	705, 706, 707, 708, 709, 699, 701, 0, 0, 223,
	700, 230, 645, 647, 646, 656, 657, 658, 659, 660,
	661, 662, 643, 703, 710, 711, 0, 245, 293, 252,
	244, 466, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 605, 619, 0,
	633, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	617, 792, 0, 0, 0, 682, 0, 618, 0, 0,
	626, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 681, 0, 0,
	502, 0, 0, 679, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 651, 652, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 688, 680, 638, 692, 640, 689, 690, 635,
	636, 639, 691, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 683, 625, 624, 0, 631, 632, 0, 641,
	642, 644, 648, 649, 650, 653, 654, 655, 663, 665,
	666, 664, 667, 668, 669, 672, 673, 674, 675, 670,
	671, 676, 623, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 622, 0, 0, 0, 250, 627, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 634, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 87, 0, 0, 188, 189, 190, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 0, 223, 700,
	230, 645, 647, 646, 656, 657, 658, 659, 660, 661,
	662, 643, 703, 710, 711, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 605, 619, 0, 633,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 617,
	0, 0, 0, 0, 682, 0, 618, 0, 0, 626,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 681, 0, 0, 502,
	0, 0, 679, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	651, 652, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 688, 680, 638, 692, 640, 689, 690, 635, 636,
	639, 691, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 683, 625, 624, 0, 631, 632, 0, 641, 642,
	644, 648, 649, 650, 653, 654, 655, 663, 665, 666,
	664, 667, 668, 669, 672, 673, 674, 675, 670, 671,
	676, 623, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	360, 342, 463, 464, 288, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 622, 0, 0, 0, 250, 627, 0, 0,
	0, 333, 247, 0, 0, 392, 0, 197, 0, 436,
	234, 343, 340, 469, 262, 253, 249, 233, 289, 350,
	390, 456, 384, 634, 337, 0, 0, 446, 363, 0,
	0, 0, 0, 0, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 375, 447, 266,
	0, 87, 0, 0, 188, 189, 190, 698, 705, 706,
	707, 708, 709, 699, 701, 0, 0, 223, 700, 230,
	645, 647, 646, 656, 657, 658, 659, 660, 661, 662,
	643, 703, 710, 711, 0, 245, 293, 252, 244, 466,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 619, 0, 633, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 617, 0,
	0, 0, 0, 682, 0, 618, 0, 0, 626, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 681, 0, 0, 502, 0,
	0, 679, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 651,
	652, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	688, 680, 638, 692, 640, 689, 690, 635, 636, 639,
	691, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	683, 625, 624, 0, 631, 632, 0, 641, 642, 644,
	648, 649, 650, 653, 654, 655, 663, 665, 666, 664,
	667, 668, 669, 672, 673, 674, 675, 670, 671, 676,
	623, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 705, 706, 0,
	0, 0, 0, 1670, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 364, 237, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 374, 417, 423, 0, 0, 0, 235, 0,
	421, 388, 485, 218, 264, 414, 394, 419, 401, 267,
	0, 0, 420, 338, 471, 408, 482, 503, 504, 243,
	368, 493, 460, 499, 517, 211, 240, 382, 453, 488,
	443, 361, 467, 468, 300, 442, 274, 195, 336, 509,
	209, 429, 227, 216, 473, 491, 269, 412, 202, 455,
	480, 224, 433, 0, 0, 519, 204, 478, 452, 357,
	297, 298, 203, 0, 413, 248, 272, 238, 377, 475,
	476, 236, 520, 213, 498, 206, 0, 497, 370, 470,
	479, 358, 348, 205, 477, 356, 347, 303, 322, 323,
	260, 283, 406, 341, 407, 284, 366, 365, 367, 198,
	489, 0, 199, 0, 448, 490, 521, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 381,
	405, 403, 409, 0, 465, 483, 494, 501, 507, 508,
	510, 511, 512, 513, 514, 516, 515, 369, 286, 444,
	302, 339, 0, 0, 387, 422, 225, 487, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 349,
	435, 484, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 410, 268, 518, 496, 492, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 437, 438, 439, 440, 441, 449, 450, 454,
	472, 474, 486, 500, 505, 430, 278, 481, 506, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 495, 451,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	457, 458, 459, 461, 359, 246, 395, 0, 360, 342,
	463, 464, 288, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 392, 0, 197, 0, 436, 234, 343,
	340, 469, 262, 253, 249, 233, 289, 350, 390, 456,
	384, 0, 337, 0, 0, 446, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 375, 447, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 466, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 1011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 1010, 502, 0, 0, 0,
	0, 0, 1007, 1008, 332, 968, 301, 192, 210, 1001,
	1005, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 485, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 338, 471, 408, 482, 503, 504, 243, 368,
	493, 460, 499, 517, 211, 240, 382, 453, 488, 443,
	361, 467, 468, 300, 442, 274, 195, 336, 509, 209,
	429, 227, 216, 473, 491, 269, 412, 202, 455, 480,
	224, 433, 0, 0, 519, 204, 478, 452, 357, 297,
	298, 203, 0, 413, 248, 272, 238, 377, 475, 476,
	236, 520, 213, 498, 206, 0, 497, 370, 470, 479,
	358, 348, 205, 477, 356, 347, 303, 322, 323, 260,
	283, 406, 341, 407, 284, 366, 365, 367, 198, 489,
	0, 199, 0, 448, 490, 521, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 381, 405,
	403, 409, 0, 465, 483, 494, 501, 507, 508, 510,
	511, 512, 513, 514, 516, 515, 369, 286, 444, 302,
	339, 0, 0, 387, 422, 225, 487, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 349, 435,
	484, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 0, 410, 268, 518, 496, 492, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 437, 438, 439, 440, 441, 449, 450, 454, 472,
	474, 486, 500, 505, 430, 278, 481, 506, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 495, 451, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 457,
	458, 459, 461, 359, 246, 395, 0, 0, 342, 463,
	464, 288, 360, 0, 0, 0, 78, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 0, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 466, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 86, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 1346, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 1348, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 1179, 0, 1180, 1181, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	360, 342, 463, 464, 288, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 392, 0, 197, 0, 436,
	234, 343, 340, 469, 262, 253, 249, 233, 289, 350,
	390, 456, 384, 0, 337, 0, 0, 446, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 375, 447, 266,
	0, 0, 0, 0, 188, 189, 190, 1289, 1292, 0,
	0, 0, 0, 1288, 1291, 0, 0, 223, 1287, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 466,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 0,
	342, 463, 464, 288, 360, 0, 0, 0, 78, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 87, 0, 1327, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 485, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 338, 471,
	408, 482, 503, 504, 243, 368, 493, 460, 499, 517,
	211, 240, 382, 453, 488, 443, 361, 467, 468, 300,
	442, 274, 195, 336, 509, 209, 429, 227, 216, 473,
	491, 269, 412, 202, 455, 480, 224, 433, 0, 0,
	519, 204, 478, 452, 357, 297, 298, 203, 0, 413,
	248, 272, 238, 377, 475, 476, 236, 520, 213, 498,
	206, 0, 497, 370, 470, 479, 358, 348, 205, 477,
	356, 347, 303, 322, 323, 260, 283, 406, 341, 407,
	284, 366, 365, 367, 198, 489, 0, 199, 0, 448,
	490, 521, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 381, 405, 403, 409, 0, 465,
	483, 494, 501, 507, 508, 510, 511, 512, 513, 514,
	516, 515, 369, 286, 444, 302, 339, 0, 0, 387,
	422, 225, 487, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 349, 435, 484, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 86, 410,
	268, 518, 496, 492, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 437, 438, 439,
	440, 441, 449, 450, 454, 472, 474, 486, 500, 505,
	430, 278, 481, 506, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 495, 451, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 457, 458, 459, 461, 359,
	246, 395, 0, 360, 342, 463, 464, 288, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 392, 0,
	197, 0, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 0, 337, 0, 0,
	446, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	375, 447, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 466, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	0, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 322, 323, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 0, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 0, 0, 387, 422,
	225, 487, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 349, 435, 484, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 410, 268,
	518, 496, 492, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 0, 360, 342, 463, 464, 288, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 1781, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 0, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 466, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 1779, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 332, 968, 301,
	192, 210, 966, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	360, 342, 463, 464, 288, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 1781, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 392, 0, 197, 0, 436,
	234, 343, 340, 469, 262, 253, 249, 233, 289, 350,
	390, 456, 384, 0, 337, 0, 0, 446, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 375, 447, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 466,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 1327, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 364, 237, 0, 0, 0, 0, 502, 0, 0,
	0, 2842, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 374, 417, 423, 0, 0, 0, 235, 0,
	421, 388, 485, 218, 264, 414, 394, 419, 401, 267,
	0, 0, 420, 338, 471, 408, 482, 503, 504, 243,
	368, 493, 460, 499, 517, 211, 240, 382, 453, 488,
	443, 361, 467, 468, 300, 442, 274, 195, 336, 509,
	209, 429, 227, 216, 473, 491, 269, 412, 202, 455,
	480, 224, 433, 0, 0, 519, 204, 478, 452, 357,
	297, 298, 203, 0, 413, 248, 272, 238, 377, 475,
	476, 236, 520, 213, 498, 206, 0, 497, 370, 470,
	479, 358, 348, 205, 477, 356, 347, 303, 322, 323,
	260, 283, 406, 341, 407, 284, 366, 365, 367, 198,
	489, 0, 199, 0, 448, 490, 521, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 381,
	405, 403, 409, 0, 465, 483, 494, 501, 507, 508,
	510, 511, 512, 513, 514, 516, 515, 369, 286, 444,
	302, 339, 0, 0, 387, 422, 225, 487, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 349,
	435, 484, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 410, 268, 518, 496, 492, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 437, 438, 439, 440, 441, 449, 450, 454,
	472, 474, 486, 500, 505, 430, 278, 481, 506, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 495, 451,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	457, 458, 459, 461, 359, 246, 395, 0, 360, 342,
	463, 464, 288, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 392, 0, 197, 0, 436, 234, 343,
	340, 469, 262, 253, 249, 233, 289, 350, 390, 456,
	384, 0, 337, 0, 0, 446, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 375, 447, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 2117, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 466, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 485, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 338, 471, 408, 482, 503, 504, 243, 368,
	493, 460, 499, 517, 211, 240, 382, 453, 488, 443,
	361, 467, 468, 300, 442, 274, 195, 336, 509, 209,
	429, 227, 216, 473, 491, 269, 412, 202, 455, 480,
	224, 433, 0, 0, 519, 204, 478, 452, 357, 297,
	298, 203, 0, 413, 248, 272, 238, 377, 475, 476,
	236, 520, 213, 498, 206, 0, 497, 370, 470, 479,
	358, 348, 205, 477, 356, 347, 303, 322, 323, 260,
	283, 406, 341, 407, 284, 366, 365, 367, 198, 489,
	0, 199, 0, 448, 490, 521, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 381, 405,
	403, 409, 0, 465, 483, 494, 501, 507, 508, 510,
	511, 512, 513, 514, 516, 515, 369, 286, 444, 302,
	339, 0, 0, 387, 422, 225, 487, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 349, 435,
	484, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 0, 410, 268, 518, 496, 492, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 437, 438, 439, 440, 441, 449, 450, 454, 472,
	474, 486, 500, 505, 430, 278, 481, 506, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 495, 451, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 457,
	458, 459, 461, 359, 246, 395, 0, 360, 342, 463,
	464, 288, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 392, 0, 197, 0, 436, 234, 343, 340,
	469, 262, 253, 249, 233, 289, 350, 390, 456, 384,
	0, 337, 0, 0, 446, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 375, 447, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2102, 0, 0,
	0, 2103, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 466, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 1371, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1370, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 485,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	338, 471, 408, 482, 503, 504, 243, 368, 493, 460,
	499, 517, 211, 240, 382, 453, 488, 443, 361, 467,
	468, 300, 442, 274, 195, 336, 509, 209, 429, 227,
	216, 473, 491, 269, 412, 202, 455, 480, 224, 433,
	0, 0, 519, 204, 478, 452, 357, 297, 298, 203,
	0, 413, 248, 272, 238, 377, 475, 476, 236, 520,
	213, 498, 206, 0, 497, 370, 470, 479, 358, 348,
	205, 477, 356, 347, 303, 322, 323, 260, 283, 406,
	341, 407, 284, 366, 365, 367, 198, 489, 0, 199,
	0, 448, 490, 521, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 381, 405, 403, 409,
	0, 465, 483, 494, 501, 507, 508, 510, 511, 512,
	513, 514, 516, 515, 369, 286, 444, 302, 339, 0,
	0, 387, 422, 225, 487, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 349, 435, 484, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 410, 268, 518, 496, 492, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 437,
	438, 439, 440, 441, 449, 450, 454, 472, 474, 486,
	500, 505, 430, 278, 481, 506, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 495, 451, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 457, 458, 459,
	461, 359, 246, 395, 0, 360, 342, 463, 464, 288,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	392, 0, 197, 0, 436, 234, 343, 340, 469, 262,
	253, 249, 233, 289, 350, 390, 456, 384, 0, 337,
	0, 0, 446, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 375, 447, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 466, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 2926, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 485, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 338, 471,
	408, 482, 503, 504, 243, 368, 493, 460, 499, 517,
	211, 240, 382, 453, 488, 443, 361, 467, 468, 300,
	442, 274, 195, 336, 509, 209, 429, 227, 216, 473,
	491, 269, 412, 202, 455, 480, 224, 433, 0, 0,
	519, 204, 478, 452, 357, 297, 298, 203, 0, 413,
	248, 272, 238, 377, 475, 476, 236, 520, 213, 498,
	206, 0, 497, 370, 470, 479, 358, 348, 205, 477,
	356, 347, 303, 322, 323, 260, 283, 406, 341, 407,
	284, 366, 365, 367, 198, 489, 0, 199, 0, 448,
	490, 521, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 381, 405, 403, 409, 0, 465,
	483, 494, 501, 507, 508, 510, 511, 512, 513, 514,
	516, 515, 369, 286, 444, 302, 339, 0, 0, 387,
	422, 225, 487, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 349, 435, 484, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 410,
	268, 518, 496, 492, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 437, 438, 439,
	440, 441, 449, 450, 454, 472, 474, 486, 500, 505,
	430, 278, 481, 506, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 495, 451, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 457, 458, 459, 461, 359,
	246, 395, 0, 360, 342, 463, 464, 288, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 392, 0,
	197, 0, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 0, 337, 0, 0,
	446, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	375, 447, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 466, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 0, 0,
	0, 502, 0, 0, 0, 2842, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	0, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 322, 323, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 0, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 0, 0, 387, 422,
	225, 487, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 349, 435, 484, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 410, 268,
	518, 496, 492, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 0, 360, 342, 463, 464, 288, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 0, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 466, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	360, 342, 463, 464, 288, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 392, 0, 197, 0, 436,
	234, 343, 340, 469, 262, 253, 249, 233, 289, 350,
	390, 456, 384, 0, 337, 0, 0, 446, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 375, 447, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 466,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 364, 237, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 374, 417, 423, 0, 0, 0, 235, 0,
	421, 388, 485, 218, 264, 414, 394, 419, 401, 267,
	0, 0, 420, 338, 471, 408, 482, 503, 504, 243,
	368, 493, 460, 499, 517, 211, 240, 382, 453, 488,
	443, 361, 467, 468, 300, 442, 274, 195, 336, 509,
	209, 429, 227, 216, 473, 491, 269, 412, 202, 455,
	480, 224, 433, 0, 0, 519, 204, 478, 452, 357,
	297, 298, 203, 0, 413, 248, 272, 238, 377, 475,
	476, 236, 520, 213, 498, 206, 0, 497, 370, 470,
	479, 358, 348, 205, 477, 356, 347, 303, 322, 323,
	260, 283, 406, 341, 407, 284, 366, 365, 367, 198,
	489, 0, 199, 0, 448, 490, 521, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 381,
	405, 403, 409, 0, 465, 483, 494, 501, 507, 508,
	510, 511, 512, 513, 514, 516, 515, 369, 286, 444,
	302, 339, 0, 0, 387, 422, 225, 487, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 349,
	435, 484, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 410, 268, 518, 496, 492, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 437, 438, 439, 440, 441, 449, 450, 454,
	472, 474, 486, 500, 505, 430, 278, 481, 506, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 495, 451,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	457, 458, 459, 461, 359, 246, 395, 0, 360, 342,
	463, 464, 288, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 392, 0, 197, 0, 436, 234, 343,
	340, 469, 262, 253, 249, 233, 289, 350, 390, 456,
	384, 0, 337, 0, 0, 446, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 375, 447, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 466, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 485, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 338, 471, 408, 482, 503, 504, 243, 368,
	493, 460, 499, 517, 211, 240, 382, 453, 488, 443,
	361, 467, 468, 300, 442, 274, 195, 336, 509, 209,
	429, 227, 216, 473, 491, 269, 412, 202, 455, 480,
	224, 433, 0, 0, 519, 204, 478, 452, 357, 297,
	298, 203, 0, 413, 248, 272, 238, 377, 475, 476,
	236, 520, 213, 498, 206, 0, 497, 370, 470, 479,
	358, 348, 205, 477, 356, 347, 303, 322, 323, 260,
	283, 406, 341, 407, 284, 366, 365, 367, 198, 489,
	0, 199, 0, 448, 490, 521, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 381, 405,
	403, 409, 0, 465, 483, 494, 501, 507, 508, 510,
	511, 512, 513, 514, 516, 515, 369, 286, 444, 302,
	339, 0, 0, 387, 422, 225, 487, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 349, 435,
	484, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 1621, 410, 268, 518, 496, 492, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 437, 438, 439, 440, 441, 449, 450, 454, 472,
	474, 486, 500, 505, 430, 278, 481, 506, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 495, 451, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 457,
	458, 459, 461, 359, 246, 395, 0, 360, 342, 463,
	464, 288, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 1494, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 392, 0, 197, 0, 436, 234, 343, 340,
	469, 262, 253, 249, 233, 289, 350, 390, 456, 384,
	0, 337, 0, 0, 446, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 375, 447, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 466, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1492, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 485,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	338, 471, 408, 482, 503, 504, 243, 368, 493, 460,
	499, 517, 211, 240, 382, 453, 488, 443, 361, 467,
	468, 300, 442, 274, 195, 336, 509, 209, 429, 227,
	216, 473, 491, 269, 412, 202, 455, 480, 224, 433,
	0, 0, 519, 204, 478, 452, 357, 297, 298, 203,
	0, 413, 248, 272, 238, 377, 475, 476, 236, 520,
	213, 498, 206, 0, 497, 370, 470, 479, 358, 348,
	205, 477, 356, 347, 303, 322, 323, 260, 283, 406,
	341, 407, 284, 366, 365, 367, 198, 489, 0, 199,
	0, 448, 490, 521, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 381, 405, 403, 409,
	0, 465, 483, 494, 501, 507, 508, 510, 511, 512,
	513, 514, 516, 515, 369, 286, 444, 302, 339, 0,
	0, 387, 422, 225, 487, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 349, 435, 484, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 410, 268, 518, 496, 492, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 437,
	438, 439, 440, 441, 449, 450, 454, 472, 474, 486,
	500, 505, 430, 278, 481, 506, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 495, 451, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 457, 458, 459,
	461, 359, 246, 395, 0, 360, 342, 463, 464, 288,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 1490, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	392, 0, 197, 0, 436, 234, 343, 340, 469, 262,
	253, 249, 233, 289, 350, 390, 456, 384, 0, 337,
	0, 0, 446, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 375, 447, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 466, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 278, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 1488, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 485, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 338, 471,
	408, 482, 503, 504, 243, 368, 493, 460, 499, 517,
	211, 240, 382, 453, 488, 443, 361, 467, 468, 300,
	442, 274, 195, 336, 509, 209, 429, 227, 216, 473,
	491, 269, 412, 202, 455, 480, 224, 433, 0, 0,
	519, 204, 478, 452, 357, 297, 298, 203, 0, 413,
	248, 272, 238, 377, 475, 476, 236, 520, 213, 498,
	206, 0, 497, 370, 470, 479, 358, 348, 205, 477,
	356, 347, 303, 322, 323, 260, 283, 406, 341, 407,
	284, 366, 365, 367, 198, 489, 0, 199, 0, 448,
	490, 521, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 381, 405, 403, 409, 0, 465,
	483, 494, 501, 507, 508, 510, 511, 512, 513, 514,
	516, 515, 369, 286, 444, 302, 339, 0, 0, 387,
	422, 225, 487, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 349, 435, 484, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 410,
	268, 518, 496, 492, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 437, 438, 439,
	440, 441, 449, 450, 454, 472, 474, 486, 500, 505,
	430, 278, 481, 506, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 495, 451, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 457, 458, 459, 461, 359,
	246, 395, 0, 360, 342, 463, 464, 288, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 1486, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 392, 0,
	197, 0, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 0, 337, 0, 0,
	446, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	375, 447, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 466, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	0, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 322, 323, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 0, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 0, 0, 387, 422,
	225, 487, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 349, 435, 484, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 410, 268,
	518, 496, 492, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	371, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 0, 360, 342, 463, 464, 288, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 1482, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 0, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 466, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	1480, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	360, 342, 463, 464, 288, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 1478,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 392, 0, 197, 0, 436,
	234, 343, 340, 469, 262, 253, 249, 233, 289, 350,
	390, 456, 384, 0, 337, 0, 0, 446, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 375, 447, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 466,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 360,
	342, 463, 464, 288, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	333, 247, 0, 0, 392, 0, 197, 0, 436, 234,
	343, 340, 469, 262, 253, 249, 233, 289, 350, 390,
	456, 384, 0, 337, 0, 0, 446, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 196, 375, 447, 266, 0,
	1455, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 318,
	327, 326, 307, 308, 310, 312, 317, 324, 330, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 466, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 364, 237, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 301, 192, 210,
	0, 0, 374, 417, 423, 0, 0, 0, 235, 0,
	421, 388, 485, 218, 264, 414, 394, 419, 401, 267,
	0, 0, 420, 338, 471, 408, 482, 503, 504, 243,
	368, 493, 460, 499, 517, 211, 240, 382, 453, 488,
	443, 361, 467, 468, 300, 442, 274, 195, 336, 509,
	209, 429, 227, 216, 473, 491, 269, 412, 202, 455,
	480, 224, 433, 0, 0, 519, 204, 478, 452, 357,
	297, 298, 203, 0, 413, 248, 272, 238, 377, 475,
	476, 236, 520, 213, 498, 206, 0, 497, 370, 470,
	479, 358, 348, 205, 477, 356, 347, 303, 322, 323,
	260, 283, 406, 341, 407, 284, 366, 365, 367, 198,
	489, 0, 199, 0, 448, 490, 521, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 334, 381,
	405, 403, 409, 0, 465, 483, 494, 501, 507, 508,
	510, 511, 512, 513, 514, 516, 515, 369, 286, 444,
	302, 339, 0, 0, 387, 422, 225, 487, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 349,
	435, 484, 304, 316, 319, 309, 328, 0, 329, 305,
	306, 311, 313, 314, 315, 320, 321, 325, 331, 0,
	191, 207, 335, 0, 410, 268, 518, 496, 492, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	299, 345, 351, 352, 353, 354, 371, 372, 373, 376,
	379, 380, 383, 385, 386, 389, 393, 397, 398, 399,
	400, 402, 404, 411, 416, 424, 425, 426, 427, 428,
	431, 432, 437, 438, 439, 440, 441, 449, 450, 454,
	472, 474, 486, 500, 505, 430, 278, 481, 506, 0,
	344, 0, 0, 346, 261, 281, 292, 0, 495, 451,
	212, 418, 270, 201, 231, 215, 239, 254, 257, 296,
	355, 362, 391, 396, 275, 251, 229, 415, 226, 434,
	457, 458, 459, 461, 359, 246, 395, 0, 360, 342,
	463, 464, 288, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 1355, 250, 0, 0, 0, 0, 333,
	247, 0, 0, 392, 0, 197, 0, 436, 234, 343,
	340, 469, 262, 253, 249, 233, 289, 350, 390, 456,
	384, 0, 337, 0, 0, 446, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 196, 375, 447, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 318, 327,
	326, 307, 308, 310, 312, 317, 324, 330, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 466, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	364, 237, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 301, 192, 210, 0,
	0, 374, 417, 423, 0, 0, 0, 235, 0, 421,
	388, 485, 218, 264, 414, 394, 419, 401, 267, 0,
	0, 420, 338, 471, 408, 482, 503, 504, 243, 368,
	493, 460, 499, 517, 211, 240, 382, 453, 488, 443,
	361, 467, 468, 300, 442, 274, 195, 336, 509, 209,
	429, 227, 216, 473, 491, 269, 412, 202, 455, 480,
	224, 433, 0, 0, 519, 204, 478, 452, 357, 297,
	298, 203, 0, 413, 248, 272, 238, 377, 475, 476,
	236, 520, 213, 498, 206, 0, 497, 370, 470, 479,
	358, 348, 205, 477, 356, 347, 303, 322, 323, 260,
	283, 406, 341, 407, 284, 366, 365, 367, 198, 489,
	0, 199, 0, 448, 490, 521, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 334, 381, 405,
	403, 409, 0, 465, 483, 494, 501, 507, 508, 510,
	511, 512, 513, 514, 516, 515, 369, 286, 444, 302,
	339, 0, 0, 387, 422, 225, 487, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 349, 435,
	484, 304, 316, 319, 309, 328, 0, 329, 305, 306,
	311, 313, 314, 315, 320, 321, 325, 331, 0, 191,
	207, 335, 0, 410, 268, 518, 496, 492, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 299,
	345, 351, 352, 353, 354, 371, 372, 373, 376, 379,
	380, 383, 385, 386, 389, 393, 397, 398, 399, 400,
	402, 404, 411, 416, 424, 425, 426, 427, 428, 431,
	432, 437, 438, 439, 440, 441, 449, 450, 454, 472,
	474, 486, 500, 505, 430, 278, 481, 506, 0, 344,
	0, 0, 346, 261, 281, 292, 0, 495, 451, 212,
	418, 270, 201, 231, 215, 239, 254, 257, 296, 355,
	362, 391, 396, 275, 251, 229, 415, 226, 434, 457,
	458, 459, 461, 359, 246, 395, 0, 360, 342, 463,
	464, 288, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 333, 247,
	0, 0, 392, 0, 197, 0, 436, 234, 343, 340,
	469, 262, 253, 249, 233, 289, 350, 390, 456, 384,
	0, 337, 0, 0, 446, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 196, 375, 447, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 318, 327, 326,
	307, 308, 310, 312, 317, 324, 330, 0, 0, 0,
	0, 0, 245, 293, 252, 244, 466, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 364, 237,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 301, 192, 210, 0, 0, 374,
	417, 423, 0, 0, 0, 235, 0, 421, 388, 485,
	218, 264, 414, 394, 419, 401, 267, 0, 0, 420,
	338, 471, 408, 482, 503, 504, 243, 368, 493, 460,
	499, 517, 211, 240, 382, 453, 488, 443, 361, 467,
	468, 300, 442, 274, 195, 336, 509, 209, 429, 227,
	216, 473, 491, 269, 412, 202, 455, 480, 224, 433,
	0, 0, 519, 204, 478, 452, 357, 297, 298, 203,
	0, 413, 248, 272, 238, 377, 475, 476, 236, 520,
	213, 498, 206, 0, 497, 370, 470, 479, 358, 348,
	205, 477, 356, 347, 303, 322, 323, 260, 283, 406,
	341, 407, 284, 366, 365, 367, 198, 489, 0, 199,
	0, 448, 490, 521, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 334, 381, 405, 403, 409,
	0, 465, 483, 494, 501, 507, 508, 510, 511, 512,
	513, 514, 516, 515, 369, 286, 444, 302, 339, 0,
	0, 387, 422, 225, 487, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 349, 435, 484, 304,
	316, 319, 309, 328, 0, 329, 305, 306, 311, 313,
	314, 315, 320, 321, 325, 331, 0, 191, 207, 335,
	0, 410, 268, 518, 496, 492, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 774, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 299, 345, 351,
	352, 353, 354, 371, 372, 373, 376, 379, 380, 383,
	385, 386, 389, 393, 397, 398, 399, 400, 402, 404,
	411, 416, 424, 425, 426, 427, 428, 431, 432, 437,
	438, 439, 440, 441, 449, 450, 454, 472, 474, 486,
	500, 505, 430, 278, 481, 506, 0, 344, 0, 0,
	346, 261, 281, 292, 0, 495, 451, 212, 418, 270,
	201, 231, 215, 239, 254, 257, 296, 355, 362, 391,
	396, 275, 251, 229, 415, 226, 434, 457, 458, 459,
	461, 359, 246, 395, 0, 360, 342, 463, 464, 288,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 333, 247, 0, 0,
	392, 0, 197, 0, 436, 234, 343, 340, 469, 262,
	253, 249, 233, 289, 350, 390, 456, 384, 0, 337,
	0, 0, 446, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	232, 196, 375, 447, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 318, 327, 326, 307, 308,
	310, 312, 317, 324, 330, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 466, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 276, 0, 364, 237, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 301, 192, 210, 0, 0, 374, 417,
	423, 0, 0, 0, 235, 0, 421, 388, 485, 218,
	264, 414, 394, 419, 401, 267, 0, 0, 420, 338,
	471, 408, 482, 503, 504, 243, 368, 493, 460, 499,
	517, 211, 240, 382, 453, 488, 443, 361, 467, 468,
	300, 442, 274, 195, 336, 509, 209, 429, 227, 216,
	473, 491, 269, 412, 202, 455, 480, 224, 433, 0,
	0, 519, 204, 478, 452, 357, 297, 298, 203, 0,
	413, 248, 272, 238, 377, 475, 476, 236, 520, 213,
	498, 206, 0, 497, 370, 470, 479, 358, 348, 205,
	477, 356, 347, 303, 322, 323, 260, 283, 406, 341,
	407, 284, 366, 365, 367, 198, 489, 0, 199, 0,
	448, 490, 521, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 334, 381, 405, 403, 409, 0,
	465, 483, 494, 501, 507, 508, 510, 511, 512, 513,
	514, 516, 515, 369, 286, 444, 302, 339, 0, 0,
	387, 422, 225, 487, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 349, 435, 484, 304, 316,
	319, 309, 328, 0, 329, 305, 306, 311, 313, 314,
	315, 320, 321, 325, 331, 0, 191, 207, 335, 0,
	410, 268, 518, 496, 492, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 299, 345, 351, 352,
	353, 354, 371, 372, 373, 376, 379, 380, 383, 385,
	386, 389, 393, 397, 398, 399, 400, 402, 404, 411,
	416, 424, 425, 426, 427, 428, 431, 432, 437, 438,
	439, 440, 441, 449, 450, 454, 472, 474, 486, 500,
	505, 430, 596, 481, 506, 0, 344, 0, 0, 346,
	261, 281, 292, 0, 495, 451, 212, 418, 270, 201,
	231, 215, 239, 254, 257, 296, 355, 362, 391, 396,
	275, 251, 229, 415, 226, 434, 457, 458, 459, 461,
	359, 246, 395, 0, 360, 342, 463, 464, 288, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 333, 247, 0, 0, 392,
	0, 197, 0, 436, 234, 343, 340, 469, 262, 253,
	249, 233, 289, 350, 390, 456, 384, 0, 337, 0,
	0, 446, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	196, 375, 447, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 318, 327, 326, 307, 308, 310,
	312, 317, 324, 330, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 466, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 364, 237, 0, 0,
	543, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 301, 192, 210, 0, 0, 374, 417, 423,
	0, 0, 0, 235, 0, 421, 388, 485, 218, 264,
	414, 394, 419, 401, 267, 0, 0, 420, 338, 471,
	408, 482, 503, 504, 243, 368, 493, 460, 499, 517,
	211, 240, 382, 453, 488, 443, 361, 467, 468, 300,
	442, 274, 195, 336, 509, 209, 429, 227, 216, 473,
	491, 269, 412, 202, 455, 480, 224, 433, 0, 0,
	519, 204, 478, 452, 357, 297, 298, 203, 0, 413,
	248, 272, 238, 377, 475, 476, 236, 520, 213, 498,
	206, 0, 497, 370, 470, 479, 358, 348, 205, 477,
	356, 347, 303, 322, 323, 260, 283, 406, 341, 407,
	284, 366, 365, 367, 198, 489, 0, 199, 0, 448,
	490, 521, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 334, 381, 405, 403, 409, 0, 465,
	483, 494, 501, 507, 508, 510, 511, 512, 513, 514,
	516, 515, 369, 286, 444, 302, 339, 0, 0, 387,
	422, 225, 487, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 349, 435, 484, 304, 316, 319,
	309, 328, 0, 329, 305, 306, 311, 313, 314, 315,
	320, 321, 325, 331, 0, 191, 207, 335, 0, 410,
	268, 518, 496, 492, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 299, 345, 351, 352, 353,
	354, 371, 372, 373, 376, 379, 380, 383, 385, 386,
	389, 393, 397, 398, 399, 400, 402, 404, 411, 416,
	424, 425, 426, 427, 428, 431, 432, 437, 438, 439,
	440, 441, 449, 450, 454, 472, 474, 486, 500, 505,
	430, 278, 481, 506, 0, 344, 0, 0, 346, 261,
	281, 292, 0, 495, 451, 212, 418, 270, 201, 231,
	215, 239, 254, 257, 296, 355, 362, 391, 396, 275,
	251, 229, 415, 226, 434, 457, 458, 459, 461, 359,
	246, 395, 0, 360, 342, 463, 464, 288, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 333, 247, 0, 0, 392, 0,
	197, 0, 436, 234, 343, 340, 469, 262, 253, 249,
	233, 289, 350, 390, 456, 384, 0, 337, 0, 0,
	446, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 196,
	375, 447, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 318, 327, 326, 307, 308, 310, 312,
	317, 324, 330, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 466, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 364, 237, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 301, 192, 210, 0, 0, 374, 417, 423, 0,
	0, 0, 235, 0, 421, 388, 485, 218, 264, 414,
	394, 419, 401, 267, 0, 0, 420, 338, 471, 408,
	482, 503, 504, 243, 368, 493, 460, 499, 517, 211,
	240, 382, 453, 488, 443, 361, 467, 468, 300, 442,
	274, 195, 336, 509, 209, 429, 227, 216, 473, 491,
	269, 412, 202, 455, 480, 224, 433, 0, 0, 519,
	204, 478, 452, 357, 297, 298, 203, 0, 413, 248,
	272, 238, 377, 475, 476, 236, 520, 213, 498, 206,
	0, 497, 370, 470, 479, 358, 348, 205, 477, 356,
	347, 303, 322, 323, 260, 283, 406, 341, 407, 284,
	366, 365, 367, 198, 489, 0, 199, 0, 448, 490,
	521, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 334, 381, 405, 403, 409, 0, 465, 483,
	494, 501, 507, 508, 510, 511, 512, 513, 514, 516,
	515, 369, 286, 444, 302, 339, 0, 0, 387, 422,
	225, 487, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 349, 435, 484, 304, 316, 319, 309,
	328, 0, 329, 305, 306, 311, 313, 314, 315, 320,
	321, 325, 331, 0, 191, 207, 335, 0, 410, 268,
	518, 496, 492, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 299, 345, 351, 352, 353, 354,
	2931, 372, 373, 376, 379, 380, 383, 385, 386, 389,
	393, 397, 398, 399, 400, 402, 404, 411, 416, 424,
	425, 426, 427, 428, 431, 432, 437, 438, 439, 440,
	441, 449, 450, 454, 472, 474, 486, 500, 505, 430,
	278, 481, 506, 0, 344, 0, 0, 346, 261, 281,
	292, 0, 495, 451, 212, 418, 270, 201, 231, 215,
	239, 254, 257, 296, 355, 362, 391, 396, 275, 251,
	229, 415, 226, 434, 457, 458, 459, 461, 359, 246,
	395, 0, 360, 342, 463, 464, 288, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 333, 247, 0, 0, 392, 0, 197,
	0, 436, 234, 343, 340, 469, 262, 253, 249, 233,
	289, 350, 390, 456, 384, 0, 337, 0, 0, 446,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 196, 375,
	447, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 318, 327, 326, 307, 308, 310, 312, 317,
	324, 330, 0, 0, 0, 0, 0, 245, 293, 252,
	244, 466, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 2571, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 364, 237, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 301,
	192, 210, 0, 0, 374, 417, 423, 0, 0, 0,
	235, 0, 421, 388, 485, 218, 264, 414, 394, 419,
	401, 267, 0, 0, 420, 338, 471, 408, 482, 503,
	504, 243, 368, 493, 460, 499, 517, 211, 240, 382,
	453, 488, 443, 361, 467, 468, 300, 442, 274, 195,
	336, 509, 209, 429, 227, 216, 473, 491, 269, 412,
	202, 455, 480, 224, 433, 0, 0, 519, 204, 478,
	452, 357, 297, 298, 203, 0, 413, 248, 272, 238,
	377, 475, 476, 236, 520, 213, 498, 206, 0, 497,
	370, 470, 479, 358, 348, 205, 477, 356, 347, 303,
	322, 323, 260, 283, 406, 341, 407, 284, 366, 365,
	367, 198, 489, 0, 199, 0, 448, 490, 521, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	334, 381, 405, 403, 409, 0, 465, 483, 494, 501,
	507, 508, 510, 511, 512, 513, 514, 516, 515, 369,
	286, 444, 302, 339, 0, 0, 387, 422, 225, 487,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 349, 435, 484, 304, 316, 319, 309, 328, 0,
	329, 305, 306, 311, 313, 314, 315, 320, 321, 325,
	331, 0, 191, 207, 335, 0, 410, 268, 518, 496,
	492, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 299, 345, 351, 352, 353, 354, 371, 372,
	373, 376, 379, 380, 383, 385, 386, 389, 393, 397,
	398, 399, 400, 402, 404, 411, 416, 424, 425, 426,
	427, 428, 431, 432, 437, 438, 439, 440, 441, 449,
	450, 454, 472, 474, 486, 500, 505, 430, 278, 481,
	506, 0, 344, 0, 0, 346, 261, 281, 292, 0,
	495, 451, 212, 418, 270, 201, 231, 215, 239, 254,
	257, 296, 355, 362, 391, 396, 275, 251, 229, 415,
	226, 434, 457, 458, 459, 461, 359, 246, 395, 0,
	360, 342, 463, 464, 288, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 333, 247, 0, 0, 392, 0, 197, 0, 436,
	234, 343, 340, 469, 262, 253, 249, 233, 289, 350,
	390, 456, 384, 0, 337, 0, 0, 446, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 232, 196, 375, 447, 266,
	0, 0, 0, 0, 188, 2098, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	318, 327, 326, 307, 308, 310, 312, 317, 324, 330,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 466,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 364, 237, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 301, 192,
	210, 0, 0, 374, 417, 423, 0, 0, 0, 235,
	0, 421, 388, 485, 218, 264, 414, 394, 419, 401,
	267, 0, 0, 420, 338, 471, 408, 482, 503, 504,
	243, 368, 493, 460, 499, 517, 211, 240, 382, 453,
	488, 443, 361, 467, 468, 300, 442, 274, 195, 336,
	509, 209, 429, 227, 216, 473, 491, 269, 412, 202,
	455, 480, 224, 433, 0, 0, 519, 204, 478, 452,
	357, 297, 298, 203, 0, 413, 248, 272, 238, 377,
	475, 476, 236, 520, 213, 498, 206, 0, 497, 370,
	470, 479, 358, 348, 205, 477, 356, 347, 303, 322,
	323, 260, 283, 406, 341, 407, 284, 366, 365, 367,
	198, 489, 0, 199, 0, 448, 490, 521, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 334,
	381, 405, 403, 409, 0, 465, 483, 494, 501, 507,
	508, 510, 511, 512, 513, 514, 516, 515, 369, 286,
	444, 302, 339, 0, 0, 387, 422, 225, 487, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	349, 435, 484, 304, 316, 319, 309, 328, 0, 329,
	305, 306, 311, 313, 314, 315, 320, 321, 325, 331,
	0, 191, 207, 335, 0, 410, 268, 518, 496, 492,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 299, 345, 351, 352, 353, 354, 371, 372, 373,
	376, 379, 380, 383, 385, 386, 389, 393, 397, 398,
	399, 400, 402, 404, 411, 416, 424, 425, 426, 427,
	428, 431, 432, 437, 438, 439, 440, 441, 449, 450,
	454, 472, 474, 486, 500, 505, 430, 278, 481, 506,
	0, 344, 0, 0, 346, 261, 281, 292, 0, 495,
	451, 212, 418, 270, 201, 231, 215, 239, 254, 257,
	296, 355, 362, 391, 396, 275, 251, 229, 415, 226,
	434, 457, 458, 459, 461, 359, 246, 395, 0, 0,
	342, 463, 464, 288,
}

var yyPact = [...]int{
	4214, -1000, -417, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1925, 1967, -1000, -1000,
	-1000, -1000, 2067, -1000, 669, 1664, -1000, 1922, 4371, -1000,
	40888, 393, -1000, 39690, 388, 336, 40888, -1000, 132, -1000,
	123, 40888, 128, 39091, -1000, -1000, -318, 17517, 1861, -29,
	-30, 40888, -1000, -1000, -1000, -1000, 2044, 1667, -1000, 289,
	-1000, -1000, -1000, -1000, -1000, -1000, 38492, -1000, -1000, -1000,
	1926, 1896, 2078, 589, 1849, -1000, 1998, 1667, -1000, 17517,
	2030, 1987, 16918, -1000, 16918, 364, -1000, -1000, 12715, -1000,
	-1000, 23517, 40888, 28908, 280, -1000, 1922, -1000, -1000, -1000,
	83, -1000, 274, 1590, -1000, 1588, -1000, 651, 451, 298,
	418, 415, 296, 295, 294, 293, 292, 290, 286, 285,
	309, -1000, 620, 620, -173, -174, 3186, 320, 320, 320,
	372, 1881, 1876, -1000, 637, -1000, 620, 620, 620, 316,
	620, 620, 620, 620, 256, 253, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 287, 1922, 238, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 40888, 212, 40888, -1000, 471, 40888, 743, 743, 94,
	743, 743, 743, 743, 98, 558, -32, -1000, 76, 229,
	141, 221, 734, 110, -1000, -1000, 216, 734, 1190, -1000,
	592, 75, -1000, 743, 743, -1000, 10299, 169, 10299, 10299,
	-1000, 1895, -1000, -1000, -1000, -1000, 1196, -1000, 370, -1000,
	-1000, -1000, -1000, 40888, 37893, 412, 652, -1000, -1000, -1000,
	100, -1000, -1000, 1306, 972, 17517, 884, -1000, 1163, 547,
	-1000, -1000, -1000, -1000, -1000, 473, 18116, 18116, 18116, 18116,
	-1000, -1000, 1516, 1516, 1516, 1516, 18116, 1516, 18116, 1516,
	1516, 1516, 1516, 17517, 1516, 1516, 1516, -1000, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 465, 1516,
	1516, 1516, 1516, 1516, -1000, -1000, -1000, -1000, 1516, 1516,
	1516, 1516, 1516, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21116, -1000, 15121, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 40888, -1000, 1516, 157, 40888, 40888,
	302, 1998, 1667, -1000, 2044, 2007, 289, -1000, 2286, 1344,
	1406, 1200, 1667, 1557, 40888, -1000, 1608, -1000, -1000, -1000,
	1734, 1058, 1189, -1000, -1000, -1000, -1000, 1284, 17517, -1000,
	-1000, 2060, -1000, 20517, 460, 820, 2058, 37294, -1000, 364,
	364, 1584, 12111, -62, -1000, -1000, -1000, 646, 26512, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1895, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1586, 40888, -1000, -1000, 5122, 1149, -1000, 1660, -1000,
	1572, -1000, 1627, 17517, 1675, 384, 1149, 380, 379, 373,
	-1000, -113, -1000, -1000, -1000, -1000, -1000, -1000, 620, 620,
	620, -1000, 307, 2029, 4371, 5979, -1000, -1000, -1000, 36695,
	1658, 1149, -1000, 1657, -1000, 715, 464, 511, 511, 1149,
	-1000, -1000, 40888, 1149, 714, 711, 40888, 40888, -1000, 36096,
	-1000, 35497, 34898, 1028, 40888, 34299, 33700, 33101, 32502, 31903,
	-1000, 1738, -1000, 1684, -1000, -1000, -1000, 40888, 40888, 40888,
	260, -1000, -1000, 40888, 1149, -1000, -1000, 1024, 1022, 1020,
	620, 620, 1019, 1187, 1183, 1180, 620, 620, 1012, 1177,
	27710, 1156, 195, 1005, 997, 948, 1008, 1155, 189, 1154,
	981, 968, 925, 40888, 1656, 40888, -1000, 211, 695, 436,
	638, 1922, 1860, 1575, 369, 383, 1149, 357, 357, 40888,
	-1000, 10903, -1000, -1000, 1151, 17517, -1000, 736, 734, 734,
	-1000, -1000, -1000, -1000, -1000, -1000, 743, 40888, 736, -1000,
	-1000, -1000, 734, 743, 40888, 743, 743, 743, 743, 734,
	734, 734, 743, 40888, 40888, 40888, 40888, 40888, 40888, 40888,
	40888, 40888, 10299, 592, 743, -322, -1000, 1143, -1000, 1757,
	-1000, -1000, -1000, -1000, -1000, -1000, 10299, 10299, -1000, -1000,
	-1000, -1000, 127, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -94, 1568, 31304, -1000, -324, -325, -329, -330,
	-1000, -1000, -1000, -332, -333, -1000, -1000, -1000, 17517, 17517,
	17517, 17517, -201, -1000, 756, 18116, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 881, 635, 18116, 18116, 18116, 18116, 18116,
	18116, 18116, 18116, 18116, 18116, 18116, 18116, 18116, 18116, 18116,
	761, 6449, 6449, 547, 547, 547, 547, -1000, 16918, 17517,
	17517, 547, -1000, 1149, 30705, 16918, 16918, 17517, 1893, 665,
	972, 40888, -1000, 1200, -1000, -1000, -1000, 1002, -1000, 40888,
	40888, 1208, 17517, 17517, 17517, 17517, 17517, 17517, 13918, 17517,
	17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517,
	17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517,
	17517, 17517, 17517, 17517, 17517, 13319, 10903, 16918, 16918, 16918,
	16918, 16918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 438, 1368, 1268, 1383, -1000, 1565,
	-1000, -156, 22918, 17517, 1140, 2055, 1686, 40888, -1000, -1000,
	-1000, 1998, -1000, 1998, 1368, 2254, 1795, 16918, -1000, -1000,
	2254, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1401,
	-1000, 40888, 1557, 1974, 40888, 1789, 1138, 324, -1000, 17517,
	17517, 1531, -1000, 1389, 40888, -1000, -201, -1000, 30106, -1000,
	-1000, 9695, -1000, 40888, 282, 40888, -1000, 22319, 29507, 11507,
	-62, -1000, 11507, 1468, -1000, -52, -68, 14517, 520, -1000,
	-1000, -1000, 3186, 19314, 1280, 520, 71, -1000, -1000, -1000,
	1627, -1000, 1627, 1627, 1627, 1627, 324, 324, 324, 324,
	-1000, -1000, -1000, -1000, -1000, 1655, 1654, -1000, 1627, 1627,
	1627, 1627, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1650,
	1650, 1650, 1636, 1636, 333, -1000, 17517, 345, 28908, 1952,
	921, 1507, 211, 362, 1683, 1149, 1149, 1149, 362, -1000,
	1131, 1120, 1092, -1000, -407, 1513, -1000, -1000, 2028, -1000,
	-1000, 690, 744, 740, 708, 40888, 171, 279, -1000, 342,
	-1000, 28908, 1149, 707, 511, 1149, -1000, 1149, -1000, -1000,
	-1000, -1000, -1000, 1149, 1509, -1000, 1505, 783, 733, 779,
	732, 1509, -1000, -1000, -152, 1509, -1000, 1509, -1000, 1509,
	-1000, 1509, -1000, 1509, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 599, 40888, 171, 761, -1000, 368, -1000, -1000,
	-1000, 761, 761, -1000, -1000, -1000, -1000, 1136, 1130, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -395, 40888,
	-1000, 181, 630, 261, 291, 244, 40888, 205, 1984, 1978,
	1975, 194, 252, 40888, 40888, 357, 1745, 40888, 1950, 40888,
	-1000, -1000, -1000, -1000, -1000, 972, 40888, -1000, -1000, 743,
	743, -1000, -1000, 40888, 743, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 743, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40888,
	-1000, -1000, -1000, -1000, 40888, -1000, -1000, -1000, -1000, -1000,
	262, -54, 283, -1000, -1000, -1000, -1000, -1000, 1993, -1000,
	972, 684, 674, -1000, 1516, -1000, -1000, 769, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 881, 18116, 18116, 18116, 1524,
	402, 888, 1286, 918, 807, 807, 784, 784, 564, 564,
	564, 564, 564, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1122, -1000, 1452, -1000, 982, 1409, 1200, -1000, 1452,
	1452, 1266, 16918, -1000, -1000, 719, -1000, 17517, 1200, -1000,
	-1000, 1200, 1200, 1500, 1486, 2053, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 960, 1507, 1507,
	1507, 1507, 1507, 17517, 1107, -1000, -1000, -1000, 1871, 1865,
	1200, 1306, 1200, 1472, -1000, 1857, 1507, 1840, 1834, 1787,
	1481, 1777, 1755, 1750, 1507, 1507, 1507, 1054, 1744, 1733,
	1729, 1721, 1715, 1710, 1697, 1676, 1665, 1507, 1200, 16918,
	16918, 1470, 1516, 435, -1000, 1452, 1200, 1200, 1452, 1452,
	10903, 1200, -1000, 40888, -1000, -312, -1000, -59, 515, 1516,
	-1000, 27710, 1200, -1000, 5958, -1000, 42086, -1000, -1000, -1000,
	-1000, -1000, 25913, 1371, 2254, -1000, -1000, 1516, 1561, -1000,
	-1000, 324, 7, 25314, -1000, -1000, 972, 972, 17517, -1000,
	-1000, -1000, -1000, -1000, -1000, 426, 2046, 360, 1516, -1000,
	1476, 1973, -1000, -1000, -1000, 1968, 19918, -1000, 1516, 1516,
	40888, 1579, 1466, -1000, 424, -1000, 1468, -62, -71, -1000,
	-1000, -1000, -1000, 972, -1000, 1085, 284, 409, -1000, 341,
	-1000, -1000, -1000, -1000, 1873, 11, -1000, -1000, -1000, 324,
	324, -1000, -1000, -1000, -1000, -1000, -1000, 1115, 1115, -1000,
	-1000, -1000, -1000, -1000, 919, -1000, -1000, -1000, 907, -1000,
	-1000, 1651, 1728, 345, -1000, -1000, 620, 1113, -1000, -1000,
	1862, 620, 620, 40888, -1000, -1000, 1261, 1952, 181, 40888,
	672, 1742, -1000, 1683, 1683, 1683, 40888, -1000, -1000, -1000,
	-1000, -1000, -1000, -397, 57, 288, -1000, -1000, -1000, 5815,
	40888, 1511, -1000, 167, -1000, 1249, -1000, 40888, -1000, 1495,
	1649, 1149, 1149, -1000, -1000, -1000, 40888, 1516, -1000, -1000,
	-1000, -1000, 382, 1921, 1915, 171, 167, 520, 1149, -1000,
	-1000, -1000, -1000, -1000, -398, 1454, 377, 175, 235, 40888,
	40888, 40888, 40888, 40888, 425, -1000, -1000, -1000, -1000, 147,
	-1000, -1000, 147, -1000, -1000, -1000, -1000, 245, 367, -1000,
	40888, 40888, 490, -1000, -1000, -1000, 734, -1000, -1000, 734,
	-1000, -1000, -1000, -1000, -1000, 1905, 40888, -56, -361, -1000,
	-354, 17517, -1000, -1000, -1000, -1000, 905, 375, 888, 18116,
	18116, 16918, -148, 300, 300, 761, -1000, -1000, -1000, 17517,
	17517, 1332, 661, -1000, 17517, 770, -1000, -1000, -1000, 17517,
	17517, 17517, 1200, 241, -1000, -1000, -1000, -1000, -1000, 2052,
	-1000, 17517, 17517, 17517, -1000, -1000, 17517, 17517, -1000, 17517,
	17517, 18715, 1200, 18715, 17517, 17517, 18715, -1000, -1000, -1000,
	-1000, 18715, 17517, 17517, 17517, 17517, 17517, 17517, 17517, 17517,
	17517, -1000, -1000, 1452, 1452, 16918, 10903, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 515, -1000, 511,
	511, 511, 40888, -1000, -1000, -1000, -1000, -1000, -1000, 1424,
	1990, -1000, 1819, 1815, 2045, 2046, -1000, 22319, 2254, -1000,
	-1000, 40888, -306, -1000, 1852, 1894, -1000, -1000, -1000, -1000,
	9091, 1998, 17517, 1736, 40888, 1516, -1000, 21720, 40888, 40888,
	22319, 22319, 22319, 22319, 22319, -1000, 1774, 1773, -1000, 1791,
	1771, 1760, 40888, -1000, 1450, 1200, 2007, 19918, 289, 17517,
	24116, 1483, 22319, -1000, -1000, 22319, 40888, 8487, -1000, -1000,
	-61, -77, -1000, -1000, -1000, -1000, 3186, -1000, -1000, 351,
	1965, 1869, -1000, -1000, -1000, -1000, 1446, -1000, 1444, 1408,
	1416, 145, -1000, 1673, 1903, 620, 620, -1000, 904, -1000,
	1149, 1112, 1104, -1000, -1000, -1000, 376, -1000, 1947, 40888,
	1718, 1714, 1708, -1000, -405, 890, 1647, 1614, 17517, 1646,
	2025, 1375, 40888, -1000, -1000, 40888, -1000, 155, -1000, 345,
	40888, -1000, -1000, -1000, 279, 40888, -1000, 6740, 167, -1000,
	-1000, -1000, -1000, -1000, -1000, 40888, 204, -1000, 1641, 893,
	-1000, -1000, 1659, -1000, -1000, -1000, -1000, 139, 259, 137,
	1103, 137, -1000, 40888, 489, 1728, 40888, -1000, -1000, -1000,
	743, 743, -1000, -1000, 1890, -1000, 1149, 1507, 18116, 18116,
	-1000, 547, -1000, 1516, 1200, 1627, 1627, -1000, 1627, 1636,
	-1000, 1627, 116, 1627, 105, 1627, -1000, -1000, 1200, 1200,
	1007, 1209, -121, -1000, 972, 17517, 1642, 1609, 1507, -1000,
	1626, 1625, 17517, 1507, 1507, 1507, -1000, 972, 1481, 1592,
	1310, -1000, -1000, -1000, -1000, 1404, 1507, 1585, -295, 1200,
	1386, 1386, 1386, 1386, 1386, 1383, 1383, 1383, 1383, -1000,
	-1000, 1200, -1000, -1000, 1991, 1991, 1991, 1346, 41487, 40888,
	-1000, -1000, -1000, -1000, 2046, 2039, 1392, -1000, -1000, 7,
	327, -1000, 1831, 1894, -1000, 2018, 1847, 2015, -1000, -1000,
	-1000, 972, -1000, 1936, 1267, -1000, 626, 1285, -1000, -1000,
	16319, 1378, 1798, 410, 1346, 1419, 1973, 1680, 1702, 2138,
	-1000, -1000, -1000, -1000, 1754, -1000, 1707, -1000, -1000, 1608,
	-1000, -1000, 1268, 1200, 1571, 282, 22319, 1292, 1292, -1000,
	401, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 788, 6407,
	2072, -1000, 1101, -1000, 1047, 174, -1000, -1000, 620, 620,
	-1000, 704, 696, -1000, 40888, 1619, -1000, 324, 1096, 324,
	889, -1000, 887, -1000, -1000, -221, -1000, -1000, 1635, 1719,
	-1000, -1000, -1000, -1000, 40888, -1000, -1000, 40888, 40888, 40888,
	1618, 2013, -1000, 17517, 1617, 621, 1562, 40888, 40888, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386,
	620, -372, 251, 250, 620, 620, 620, -1000, -1000, 1339,
	1325, -1000, -175, -1000, 17517, -1000, -1000, -1000, 866, 866,
	-1000, 1608, -1000, -1000, -1000, 1230, -1000, -1000, -158, 40888,
	40888, 40888, 40888, -1000, 828, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 547, 18116, -1000,
	-1000, 324, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17517, -1000, 17517, -1000, 1998, 1095, 972, 17517, 17517,
	-1000, 849, 848, 1507, -1000, -1000, -1000, 1200, 18715, -1000,
	18715, -1000, 17517, 193, 300, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1516, 1879, 1516, 1516,
	24116, -1000, -1000, 2039, 2037, 2012, 1830, 1832, 1832, 1831,
	-1000, 2011, 2010, -1000, 1094, 2009, 1093, 682, -1000, 40888,
	17517, 1516, -1000, 371, 40888, 1516, 40888, -1000, 2035, -1000,
	-1000, 17517, 1613, -1000, 17517, -1000, -1000, -1000, -1000, -1000,
	-1000, 6449, 2046, 1292, -1000, -1000, 582, -1000, 17517, -1000,
	-1000, -1000, 3565, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1091, 1084, -1000, -1000, 1611, 17517, -1000, -1000, -1000, 1211,
	1207, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1608,
	-1000, -1000, -1000, -1000, 279, -404, 1515, 40888, 846, -1000,
	1323, 1375, 265, 1516, 1075, 620, 620, 620, 843, 836,
	27710, 301, -1000, 279, -1000, -180, -181, 1507, -1000, -1000,
	1961, -1000, -1000, 10903, -1000, -1000, 1594, 1681, -1000, -1000,
	-1000, 198, -1000, 1507, 1507, 1200, -1000, 1507, 1507, 1204,
	1202, -1000, -1000, 1310, -1000, 922, -1000, 193, 1200, 1700,
	-1000, -1000, 6449, -1000, 24715, -1000, 2002, 2001, 28309, 28309,
	515, 2037, -1000, 17517, 17517, 1826, 823, -1000, -1000, -1000,
	-1000, 1067, 1066, -1000, 1059, -1000, 2070, -1000, 972, -1000,
	1516, -1000, 392, 1285, -1000, 1998, 972, 40888, 972, -13,
	2035, -1000, 1507, -1000, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
	1516, 1516, 1516, 1516, 1516, 1516, -1000, -1000, 40888, 1436,
	-1000, -1000, 1959, 1308, 56, -1000, 1303, -1000, -1000, 450,
	-1000, 17517, -1000, 27710, 1057, 1046, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 289, 1312, -1000, 609, 40888, 40888,
	1200, 247, -162, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17517, -1000, 1200, 1699, -1000, -256, -1000, 1295,
	-1000, -1000, -1000, -1000, -1000, 1295, 1295, -1000, -1000, 972,
	1306, -1000, 805, -1000, -1000, -1000, -1000, -1000, 40888, 1285,
	40888, -1000, 1290, 1200, 1516, 1998, -1000, 1279, -1000, 289,
	-1000, 1390, 1614, -1000, -1000, -1000, 15720, -1000, -1000, -1000,
	-1000, -153, 10903, 7883, 1255, -1000, -1000, 1781, -155, -166,
	1481, -1000, -339, -1000, -1000, 27111, -1000, -1000, -1000, -1000,
	-1000, 1060, -1000, -1000, 24116, 40289, -1000, -146, 213, -153,
	17517, 1210, 1200, -1000, -28, -1000, -1000, -1000, -1000, -1000,
	1659, -1000, 1761, -1000, 1200, -1000, -1000, -1000, 1247, -1000,
	3731, -253, 1696, -1000, -102, -1000, -1000, -1000, 764, 1031,
	-1000, -1000, -1000, -1000, -1000, -1000, 1270, 40888, -1000, 331,
	-1000, -1000, -158, -159, -1000, -1000, 40289, -252, 520, 6449,
	-1000, 1694, 1692, 2051, -1000, -1000, -1000, -1000, -1000, -1000,
	-412, 1223, 207, -1000, -163, -1000, -1000, 1941, -13, -1000,
	2069, -1000, 2063, 539, 539, -1000, 831, -412, -1000, -170,
	-255, -1000, -1000, -1000, -1000, -1000, 312, 901, -1000, -1000,
	-1000, -1000, 6449, -1000, -1000, -1000, 196, 196, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2439, 2438, 22, 3, 2437, 2436, 2435, 47, 92,
	186, 31, 183, 95, 2434, 2431, 2430, 2429, 2428, 2427,
	2426, 210, 209, 208, 2422, 2421, 2420, 2419, 2418, 2414,
	2410, 2409, 2408, 2407, 206, 160, 181, 2406, 2405, 2404,
	116, 174, 84, 88, 177, 2403, 2402, 74, 2401, 2400,
	2399, 173, 171, 170, 698, 2398, 169, 104, 40, 2396,
	2395, 2393, 2392, 2391, 2390, 2389, 2388, 2387, 2386, 2385,
	2383, 2381, 2379, 2378, 2376, 2373, 187, 2372, 2371, 15,
	2370, 78, 2369, 2368, 2367, 2366, 123, 2365, 2364, 2363,
	2362, 2361, 2360, 2359, 143, 2358, 2355, 2352, 2348, 192,
	2347, 2343, 142, 100, 110, 2342, 2341, 94, 180, 2338,
	120, 2337, 2336, 2335, 150, 2334, 4703, 2331, 65, 60,
	2329, 58, 76, 46, 59, 37, 14, 2328, 2325, 61,
	85, 2323, 93, 69, 2322, 111, 97, 2320, 2315, 11,
	6, 2314, 1, 4, 2, 71, 2313, 2312, 117, 2311,
	2307, 2306, 89, 2305, 2304, 4040, 2303, 90, 132, 101,
	80, 2299, 26, 66, 2298, 2297, 2296, 2295, 2293, 41,
	2291, 2290, 2287, 139, 34, 163, 32, 35, 44, 146,
	2286, 140, 79, 2284, 138, 136, 2283, 63, 23, 36,
	2282, 30, 131, 119, 25, 91, 141, 2281, 2280, 55,
	73, 2279, 2276, 2275, 2273, 2271, 2268, 70, 2262, 52,
	2261, 182, 2260, 18, 2256, 42, 33, 2255, 67, 134,
	68, 29, 2252, 162, 2249, 50, 161, 130, 159, 2248,
	2244, 2243, 2237, 178, 267, 2235, 2234, 83, 166, 147,
	149, 2233, 275, 2228, 2224, 106, 1491, 2332, 39, 165,
	2219, 2218, 3443, 137, 27, 16, 2217, 193, 2216, 2212,
	2209, 184, 164, 108, 912, 45, 2201, 2199, 12, 2193,
	2190, 2185, 2184, 2182, 2181, 98, 2179, 2178, 2174, 185,
	128, 8, 158, 77, 2173, 2171, 2170, 122, 103, 2169,
	155, 154, 133, 96, 2168, 167, 157, 124, 2155, 226,
	2154, 2150, 2149, 2146, 2145, 86, 2144, 2142, 2141, 2140,
	156, 144, 121, 81, 2139, 82, 118, 152, 151, 49,
	2138, 38, 2137, 2136, 2130, 176, 24, 2127, 10, 53,
	43, 17, 105, 99, 2126, 0, 2125, 13, 168, 273,
	153, 2123, 2120, 5, 7, 9, 2117, 2114, 2111, 2109,
	135, 2107, 2106, 2101, 2100, 20, 28, 19, 21, 115,
	75, 2096, 2092, 5078, 1487, 126, 2065, 188,
}

//line sql.y:6962
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 361, 362, 362, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 335, 335,
	335, 338, 338, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	365, 365, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 264, 264, 26, 26, 26, 26, 26, 100,
	100, 337, 337, 336, 328, 328, 327, 327, 326, 334,
	334, 333, 333, 332, 38, 39, 48, 48, 48, 48,
	49, 50, 339, 339, 301, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 303, 303, 289, 289, 302, 302, 302, 302, 302,
	302, 302, 288, 288, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 354, 354, 354, 353, 353, 198, 198, 198,
	198, 198, 198, 198, 198, 120, 120, 129, 129, 129,
	129, 129, 118, 118, 119, 117, 117, 117, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 128, 128, 124, 124, 124, 125, 125, 125, 126,
	126, 355, 355, 355, 355, 268, 268, 268, 268, 271,
	271, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	270, 270, 270, 270, 270, 272, 272, 272, 272, 272,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 274, 274, 274, 274, 274,
	274, 274, 274, 287, 287, 275, 275, 282, 282, 283,
	283, 283, 284, 284, 284, 285, 285, 280, 280, 280,
	280, 280, 280, 281, 281, 281, 290, 315, 315, 314,
	314, 312, 312, 312, 312, 312, 312, 312, 312, 299,
	299, 309, 309, 309, 309, 309, 298, 298, 294, 294,
	294, 295, 295, 296, 296, 293, 293, 297, 297, 311,
	311, 310, 310, 291, 291, 292, 292, 317, 356, 356,
	356, 356, 356, 357, 357, 318, 346, 348, 348, 348,
	347, 347, 344, 345, 343, 343, 343, 343, 343, 81,
	81, 81, 241, 241, 241, 307, 307, 306, 306, 306,
	308, 308, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 236, 236, 236, 342, 342, 342, 342,
	342, 342, 341, 341, 341, 304, 304, 304, 340, 340,
	57, 57, 182, 182, 359, 359, 360, 360, 360, 45,
	45, 45, 45, 45, 45, 44, 44, 44, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 86, 86, 87, 87,
	87, 87, 89, 89, 89, 320, 320, 58, 58, 3,
	3, 138, 140, 141, 141, 139, 139, 139, 139, 139,
	139, 60, 60, 59, 59, 143, 142, 144, 144, 144,
	1, 1, 2, 2, 4, 4, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 286, 286,
	286, 319, 319, 321, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 323, 323, 323, 61, 61, 324, 276,
	277, 278, 5, 6, 300, 322, 96, 96, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 235,
	235, 243, 243, 234, 234, 257, 257, 257, 237, 237,
	237, 238, 238, 352, 352, 352, 231, 231, 64, 64,
	64, 66, 66, 67, 68, 68, 259, 259, 260, 260,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 349, 349, 350, 351, 351, 351, 351,
	73, 75, 31, 31, 31, 31, 31, 31, 106, 106,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 101, 101, 101, 95, 95, 366, 76, 77,
	77, 99, 99, 99, 92, 92, 92, 98, 98, 98,
	16, 16, 17, 217, 217, 18, 18, 103, 103, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 102, 102, 104, 104, 104, 104, 250, 250, 250,
	249, 249, 132, 132, 134, 133, 133, 135, 135, 136,
	136, 136, 136, 180, 180, 158, 158, 215, 215, 213,
	213, 214, 214, 216, 216, 216, 216, 219, 219, 137,
	137, 137, 137, 145, 145, 146, 146, 147, 147, 258,
	258, 255, 255, 255, 254, 254, 151, 151, 151, 153,
	152, 152, 152, 152, 154, 154, 156, 156, 155, 155,
	157, 162, 162, 161, 161, 159, 159, 159, 159, 160,
	160, 160, 160, 163, 163, 116, 116, 116, 116, 116,
	116, 116, 127, 127, 127, 127, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 83, 83, 83, 232, 232, 164, 164,
	172, 172, 172, 172, 165, 165, 165, 165, 165, 165,
	165, 173, 173, 173, 179, 174, 174, 170, 170, 170,
	170, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 266,
	266, 331, 331, 330, 330, 329, 329, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 367, 367,
	279, 279, 279, 279, 171, 171, 171, 171, 171, 97,
	97, 97, 97, 97, 263, 263, 263, 267, 267, 267,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 185, 185, 93, 93, 183,
	183, 184, 186, 186, 181, 181, 181, 167, 167, 167,
	187, 187, 188, 188, 189, 189, 191, 190, 190, 192,
	193, 193, 193, 194, 194, 195, 195, 195, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	108, 108, 108, 108, 110, 110, 109, 109, 79, 79,
	80, 80, 80, 114, 114, 115, 115, 115, 112, 112,
	113, 113, 211, 211, 196, 196, 196, 203, 203, 203,
	199, 199, 201, 201, 201, 202, 202, 202, 200, 208,
	208, 210, 210, 209, 209, 205, 205, 206, 206, 207,
	207, 207, 204, 204, 166, 166, 166, 166, 166, 212,
	212, 212, 212, 220, 220, 176, 176, 178, 178, 177,
	131, 221, 221, 225, 222, 222, 226, 226, 226, 226,
	226, 223, 223, 224, 224, 251, 251, 251, 230, 230,
	242, 242, 239, 239, 240, 240, 233, 233, 244, 244,
	244, 74, 175, 175, 316, 316, 313, 247, 247, 248,
	248, 252, 252, 256, 256, 253, 253, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 363, 364, 261, 262, 262, 262,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 2, 2,
	4, 4, 1, 1, 1, 1, 1, 0, 2, 2,
	3, 3, 2, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 1, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 2, 0, 2, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 8, 6, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 1, 1, 1, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 6, 6, 6,
	4, 4, 4, 7, 8, 6, 5, 6, 8, 11,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -361, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 303, 304, 306,
	307, 308, 309, -85, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -363,
	11, 434, 252, 251, 28, -12, 468, 85, -362, 608,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -366, -76, -76, 12, 13, -76, -301,
	-303, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -325, -44, -41, 223, 220, 267,
	119, 120, 257, 258, 259, 222, 241, 256, 260, 255,
	276, -40, 80, 33, 468, 471, -308, 219, 225, 226,
	435, 122, 121, 75, 221, -305, 357, 500, 578, -56,
	580, 101, 103, 579, 44, 231, 581, 582, 583, 507,
	584, 240, 585, 586, 587, 588, 594, 549, 595, 596,
	597, 123, 7, -76, -256, -252, -335, -246, 88, 89,
	90, 465, 243, 498, 499, 292, 80, 41, 354, 357,
	500, 578, 303, 317, 311, 338, 330, 466, 501, 295,
	244, 280, 575, 328, 131, 580, 298, 502, 258, 362,
	363, 503, 364, 101, 306, 401, 593, 297, 504, 591,
	103, 579, 79, 51, 44, 253, 326, 227, 322, 581,
	281, 505, 476, 274, 122, 119, 600, 36, 320, 50,
	30, 590, 121, 49, 582, 146, 506, 583, 507, 366,
	345, 569, 48, 367, 259, 508, 83, 264, 470, 301,
	577, 368, 321, 369, 291, 589, 224, 509, 561, 370,
	371, 570, 510, 346, 350, 511, 393, 372, 607, 52,
	512, 513, 571, 120, 514, 78, 584, 315, 316, 515,
	289, 242, 395, 342, 447, 454, 455, 107, 108, 450,
	109, 456, 110, 457, 458, 459, 448, 111, 104, 449,
	460, 461, 343, 344, 112, 462, 106, 105, 451, 453,
	113, 463, 240, 35, 373, 467, 293, 58, 268, 396,
	46, 348, 604, 45, 565, 516, 568, 341, 337, 444,
	53, 517, 518, 519, 520, 585, 340, 314, 336, 599,
	4, 286, 586, 62, 226, 352, 351, 353, 275, 392,
	333, 521, 522, 523, 247, 81, 524, 323, 21, 525,
	526, 374, 282, 527, 56, 528, 529, 399, 256, 530,
	54, 587, 39, 531, 261, 601, 588, 532, 533, 534,
	535, 263, 536, 376, 537, 375, 347, 349, 270, 377,
	469, 538, 302, 319, 260, 592, 539, 248, 576, 262,
	267, 255, 400, 249, 540, 541, 542, 543, 544, 296,
	560, 545, 546, 307, 594, 445, 43, 547, 548, 549,
	550, 551, 290, 285, 394, 403, 61, 82, 359, 552,
	553, 574, 313, 283, 554, 304, 55, 595, 596, 597,
	277, 598, 9, 605, 606, 379, 123, 287, 288, 47,
	334, 269, 555, 299, 556, 324, 325, 339, 312, 335,
	305, 562, 271, 380, 446, 257, 557, 402, 284, 355,
	360, 300, 473, 276, 381, 573, 472, 332, 329, 278,
	558, 382, 232, 272, 273, 559, 563, 383, 384, 294,
	385, 386, 387, 388, 389, 391, 390, 279, 471, 310,
	327, 361, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	443, 230, -76, 230, -155, -252, 230, -223, 363, -243,
	365, 378, 373, 383, 371, -235, 374, 376, 270, -352,
	393, 230, 380, 218, 366, 375, 384, 385, 294, 391,
	386, 390, 279, 387, 388, 389, -335, 172, 583, 598,
	131, 331, 370, 368, 394, 565, -252, 305, -259, 310,
	-247, -335, -246, 308, -155, -82, 561, 222, -261, -261,
	-101, 565, 567, -174, -116, 139, -127, -130, -121, -122,
	-168, -169, -170, -171, -128, -181, 161, 162, 169, 140,
	-179, -131, 26, 464, 436, 435, 172, 31, 214, 68,
	69, 438, 439, 142, 57, 411, 412, -129, 406, 413,
	408, 441, 442, 114, 443, 104, 106, 105, 444, 445,
	446, 343, 344, 447, 448, 449, 107, 108, 109, 110,
	111, 112, 113, 450, 453, 451, 452, 454, 455, 456,
	461, 462, 457, 458, 459, 460, 463, -247, -252, 235,
	405, 229, 167, 434, -123, -119, -8, -177, 404, 409,
	410, 414, 407, -335, -246, -125, -124, -164, 91, 97,
	102, 98, -358, 115, -363, 92, 93, 94, 95, 96,
	116, 117, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 44, 379, 379, -155, -76, -76, -76,
	-76, -189, -99, -191, -10, -8, -363, 8, -76, -8,
	-9, -13, -34, -36, 494, -35, -252, -196, -211, 12,
	157, 42, 50, -194, -195, -12, -8, -116, 19, 23,
	24, -104, 163, -116, -252, -77, -104, -233, 234, -76,
	-76, -222, -264, 305, -226, 394, 393, -248, -224, -247,
	-245, -223, 392, 223, 23, 474, 138, 25, 27, 141,
	172, 126, 19, 142, 37, 225, 331, 241, 171, 237,
	435, 218, 72, 475, 406, 408, 404, 411, 437, 438,
	405, 365, 31, 13, 477, 28, 251, 24, 38, 165,
	220, 145, 478, 254, 26, 252, 114, 117, 480, 22,
	75, 246, 14, 239, 40, 16, 481, 482, 17, 235,
	234, 157, 231, 70, 11, 214, 29, 154, 66, 483,
	133, 484, 485, 486, 487, 127, 68, 155, 20, 602,
	409, 410, 33, 566, 464, 265, 167, 73, 59, 567,
	139, 407, 488, 489, 115, 490, 118, 76, 572, 135,
	18, 71, 42, 491, 266, 492, 236, 603, 493, 397,
	494, 156, 221, 434, 69, 495, 229, 378, 8, 440,
	32, 250, 238, 125, 67, 496, 230, 144, 441, 442,
	233, 128, 116, 7, 132, 34, 12, 74, 77, 412,
	413, 414, 57, 124, 468, 143, 15, 497, 398, 137,
	131, -302, 155, -288, -292, -247, 245, -318, 241, -155,
	-311, -310, -247, -363, -100, -242, 231, 239, 238, 132,
	-339, 135, 287, 405, 229, -51, -52, -53, -223, 171,
	582, -86, 262, 266, 86, 86, -292, -291, -290, -340,
	266, 245, -317, -309, 237, 246, -298, 238, 239, -293,
	231, 133, -340, -293, 236, 246, 266, 266, 123, 266,
	123, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	261, -299, 147, -299, 472, 472, -305, -340, -340, -340,
	233, 35, 35, -244, -293, 233, 25, -299, -299, -299,
	-223, 171, -299, -299, -299, -299, 274, 274, -299, -299,
	-299, -299, -299, -299, -299, -299, -299, -299, -299, -299,
	-299, -299, -299, -299, -299, 230, -339, -108, 390, 294,
	80, -54, 276, -37, -155, -242, 231, 232, -339, 263,
	-155, 215, -155, -237, 155, 15, -237, -234, 379, 377,
	364, 369, -237, -237, -237, -237, 277, 362, -294, 231,
	35, 242, 379, 277, 362, 277, 278, 277, 278, 372,
	382, 277, -257, 14, 157, 405, 367, 371, 270, 230,
	271, 232, 381, 278, -257, 92, -238, 155, 379, 273,
	-237, -237, -262, -363, -248, 331, -335, 568, -262, -262,
	32, 89, 233, -247, -78, -247, 92, -15, -11, -22,
	-21, -23, 147, -106, 379, -94, 172, 583, 569, 570,
	571, 568, 376, 576, 574, 572, 277, 573, 86, 135,
	137, 138, 4, -116, 154, -165, 147, 148, 149, 150,
	151, 152, 153, 157, 139, 141, 155, 156, 136, 158,
	159, 160, 161, 162, 163, 164, 166, 165, 167, 168,
	171, 216, 217, -122, -122, -122, -122, -179, -363, -363,
	-363, -122, -232, -363, -122, -363, -363, -363, -363, -185,
	-116, -363, -367, -363, -367, -367, -279, -363, -279, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, 215, -363, -363, -363,
	-363, -363, -279, -279, -279, -279, -279, 102, 97, 91,
	-181, 98, 92, -247, -252, -8, -9, -174, -261, -349,
	-350, -158, -155, -363, 294, -247, -247, 263, -194, -12,
	-8, -189, -195, -191, -8, -76, -92, -105, 63, 64,
	-107, 24, 38, 67, 65, 23, -364, 87, -364, -211,
	-364, 86, -36, -215, 85, 61, 43, 92, 92, 86,
	21, -190, -192, -116, 14, -250, 4, -249, 25, -247,
	92, 215, 100, 14, -156, 29, -155, -233, -233, 86,
	305, -226, -264, -228, -227, 395, 397, 147, -251, -247,
	92, 31, 87, 86, -155, -268, -271, -273, -272, -274,
	-269, -270, 328, 329, 172, 332, 334, 335, 336, 337,
	338, 339, 340, 341, 342, 345, 32, 253, 324, 325,
	326, 327, 346, 347, 348, 349, 350, 351, 352, 353,
	311, 330, 466, 312, 313, 314, 315, 316, 317, 319,
	320, 321, 322, 323, -338, -335, 85, 87, 86, -275,
	85, -116, -108, 230, -335, 231, 231, 231, -76, 434,
	-299, -299, -299, 261, 19, -44, -41, -325, 18, -40,
	-41, 223, 119, 120, 220, 85, -288, 85, -297, -338,
	-335, 85, 133, 236, 132, -296, -293, -296, -297, -335,
	-181, -335, 133, 133, -219, -247, -219, -219, 23, -219,
	23, -219, 23, 94, -247, -219, 23, -219, 23, -219,
	23, -219, 23, -219, 23, 31, 78, 79, 31, 81,
	82, 83, -181, -181, -288, -223, -155, -335, 94, 94,
	94, -299, -299, 94, 92, 92, 92, -299, -299, 94,
	92, -254, -252, 92, 92, -341, 247, 291, 293, 94,
	94, 94, 94, 31, 92, -342, 31, 590, 589, 591,
	592, 593, 92, 94, 31, 94, 31, 94, -247, 85,
	-155, -114, 281, 218, 220, 223, 76, 92, 295, 299,
	300, 147, 44, 86, 233, 230, -335, -239, 235, -239,
	-247, -253, -252, -245, 92, -116, -295, 14, 157, -257,
	-257, -237, -155, -295, -257, -237, -155, -237, -237, -237,
	-237, -257, -257, -257, -237, -252, -252, -155, -155, -155,
	-155, -155, -155, -155, -262, -238, -237, 568, 92, -231,
	14, 76, -262, -262, -260, 308, 342, 562, 563, 564,
	86, 468, -148, -155, 568, 568, 568, 568, 568, 568,
	-116, -116, -116, -116, 490, -172, 115, 139, 116, 117,
	-130, -173, -177, -179, 99, 157, 141, 155, 156, -121,
	-122, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -263, -335, 92, 172, -126, -125,
	98, -358, -126, -102, -104, -116, -116, -335, -247, -102,
	-102, -116, -98, 24, 38, -183, -184, 143, -181, -364,
	-364, 94, 98, -247, -247, -91, -90, 416, 417, 418,
	419, 421, 422, 423, 426, 427, 431, 432, 415, 433,
	420, 425, 428, 429, 430, 424, 327, -116, -116, -116,
	-116, -116, -116, -83, -116, 126, 127, 128, -116, -116,
	-175, -174, -334, -333, -332, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -103, 24,
	38, -102, -248, -253, -245, -102, -103, -103, -102, -102,
	215, -211, -364, 86, -351, 397, 398, 566, -255, 266,
	-254, 25, -175, 92, 14, -217, 77, -247, -194, -194,
	63, 64, 59, -102, -107, -364, -35, 25, -213, -247,
	62, 92, -280, -223, 354, 355, -116, -116, 86, -193,
	27, 28, -155, -249, 163, -253, -155, -218, 266, -155,
	-133, -135, -136, -137, -158, -180, -363, -138, 486, 483,
	14, -148, -149, -157, -252, -226, -228, 86, 396, 398,
	399, 76, 118, -116, -281, 171, -307, -306, -305, -288,
	-290, -291, -292, 87, -281, -284, 360, 359, -275, -275,
	-275, -275, -275, -280, -280, -280, -280, 85, 85, -275,
	-275, -275, -275, -282, 85, -282, -282, -283, 85, -283,
	-318, -116, -315, -314, -312, -313, 240, 101, 559, 515,
	468, 507, 549, 77, -310, -193, 94, -364, -114, -240,
	235, -316, -313, -335, -335, -335, -240, -335, 92, -335,
	92, -335, 92, -87, -58, -1, 602, 603, 604, 86,
	19, -289, -288, -57, 291, -321, -322, 266, -317, -311,
	-297, 133, -296, -297, -297, -335, 86, 29, 123, 123,
	123, 123, 468, 220, 32, -288, -57, -263, 233, -263,
	-263, 92, 92, -236, 598, -148, -110, 283, 147, 272,
	272, 230, 230, 285, -155, 296, 298, 297, 295, 299,
	300, 23, 23, 23, 284, 286, 288, 274, -155, -155,
	-239, 76, -150, -155, 26, -252, -155, -237, -237, -155,
	-237, -237, -155, -247, -94, 397, 86, 468, 22, -95,
	22, -363, 115, 116, 117, -173, -121, -122, -121, 138,
	254, 86, -364, 25, 86, 77, -364, -364, -364, 86,
	14, -102, -186, -184, 145, -116, -364, -364, -364, 86,
	86, 14, -267, 25, -364, -364, -364, -364, -364, -185,
	-364, 14, 86, 86, -364, -364, 86, 86, -364, 86,
	86, 86, -331, 86, 86, 86, 86, -364, -364, -364,
	-364, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, -364, -364, -102, -102, -363, 215, -364, -364, -364,
	-364, -364, -248, -350, 565, 398, -162, -161, -159, 74,
	234, 75, -363, -254, -364, -126, 89, -214, 89, -213,
	-167, -247, 94, 98, -196, -132, -134, 14, -107, -179,
	87, 86, -280, -200, -205, -234, -247, 92, 172, -192,
	215, -163, 15, -166, 32, 57, -11, -363, -363, 32,
	86, -151, -153, -152, -154, 66, 70, 72, 67, 68,
	69, 73, -258, 25, -133, -9, -8, -363, -363, -363,
	-155, -148, -365, 14, 77, -365, 86, 215, -227, -229,
	400, 397, 403, -335, 92, -86, 86, -305, -292, -197,
	-111, 40, -285, 361, -280, -280, -287, 92, -287, 94,
	94, 87, -47, -42, -43, 33, 80, -312, -299, 92,
	39, -299, -299, -247, 87, -193, -110, -155, 139, 76,
	-316, -316, -316, -252, -2, 601, 607, 133, 85, 364,
	18, -213, 86, 87, -182, 292, 87, -88, -247, 87,
	85, -297, -297, -247, -363, 230, 31, 31, -57, -182,
	-281, -335, 600, 599, 87, 232, 290, -115, 411, -112,
	92, 88, -155, -155, -155, -155, -155, 223, 220, -359,
	301, -359, 275, 233, -148, -155, 86, -81, 249, 244,
	-257, -257, 33, -155, 397, 577, 575, -116, 138, 254,
	-130, -122, -104, 465, -265, 172, 328, 253, 326, 322,
	342, 333, 359, 324, 360, 321, 320, 319, -265, -263,
	-116, -116, -189, 146, -116, 144, -116, -116, -116, -364,
	172, 328, 14, -116, -116, -116, -332, -116, -116, -116,
	-330, -329, -126, -181, -364, -330, -116, -116, -329, -329,
	-333, -333, -333, -333, -333, -174, -174, -174, -174, -364,
	-364, -103, -248, -159, -293, -293, -293, -219, 86, -230,
	22, 14, 57, 57, -132, -163, -133, -107, -247, -203,
	561, -208, 46, -206, -207, 47, -204, 48, 56, 163,
	-194, -116, -220, 76, -221, -225, -181, -176, -178, -177,
	-363, -212, -364, -247, -219, -221, -135, -136, -136, -135,
	-136, 66, 66, 66, 71, 66, 71, 66, -152, -252,
	-364, -364, -9, -9, -116, -255, 77, -133, -133, -157,
	-252, 163, 397, 401, 402, -305, -357, 115, 139, 31,
	76, 357, 101, -355, 171, 503, 559, 515, 507, 549,
	-356, 236, 132, 133, 248, 25, 41, 87, 86, 87,
	86, 87, 86, -241, 506, 139, -43, -42, -299, -299,
	94, -335, 92, 92, 232, 26, -155, 76, 76, 76,
	-89, 605, 94, 85, -3, 80, -116, 85, 19, -288,
	-181, -323, -276, -324, -277, -278, -5, -6, -300, 57,
	101, -61, 44, 231, 585, 586, 123, 598, -315, -213,
	-319, -321, -155, -118, -363, -117, -119, -123, 161, 162,
	-182, -155, -109, 281, 289, 85, -113, 89, -337, 77,
	272, 357, 272, -360, 302, 92, -360, -155, -81, -47,
	-155, -237, -237, 33, -335, -364, -130, -122, -363, -364,
	-275, -275, -275, -283, -275, 316, -275, 316, -275, -364,
	-364, 86, -364, 22, -364, -93, 440, -116, 86, 86,
	-364, 85, 85, -116, -364, -364, -364, -331, 86, -364,
	86, -364, 86, -266, 560, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -160, 22, -160, -160,
	-364, 89, -155, -163, -187, 16, -200, 51, 334, -210,
	-209, 55, 47, -207, 19, 49, 19, 30, -220, 86,
	147, 86, -364, -364, 86, 57, 215, -364, -163, -146,
	-145, 76, 77, -147, 76, -145, 66, 66, -215, -364,
	-364, 86, -218, -133, -163, -163, 215, 115, -363, -120,
	-129, -118, 12, 92, 92, -335, -354, 589, 590, 31,
	-299, -299, 133, 133, -155, 85, -280, 92, -280, 94,
	94, 506, 31, 81, 82, 83, 31, 78, 79, -155,
	-155, -155, -155, -320, 85, 19, -116, 85, 147, 87,
	-213, -213, 268, 157, -299, 583, 274, 274, -299, -299,
	-299, 87, -364, 86, -286, 468, 471, -116, -124, -124,
	-215, 87, -328, 468, -336, -247, -247, -247, -247, 94,
	96, -121, -280, -116, -116, -194, 92, -116, -116, 94,
	94, -364, -364, -330, -329, -116, -364, -143, -142, -144,
	569, 115, 31, -265, -363, 66, 18, 16, -363, -363,
	-255, -187, -188, 17, 19, -201, 53, -199, 52, -199,
	-209, 19, 19, 92, 19, 92, 133, -225, -116, -178,
	57, -11, -247, -176, -247, -189, -116, 85, -116, -126,
	-163, -163, -116, -169, 443, 104, 106, 105, 444, 445,
	446, 343, 344, 447, 448, 449, 107, 108, 109, 110,
	111, 112, 113, 450, 453, 451, 454, 455, 456, 461,
	462, 457, 458, 459, 460, 463, 92, 92, 85, -116,
	87, 87, -215, -319, -58, 87, -213, 94, 87, 269,
	-177, -363, 92, -299, -299, -299, 94, 94, -254, -356,
	-321, 472, 472, -364, 25, -327, -326, -248, 85, 77,
	-97, 157, 468, -364, -364, -364, -364, -364, 87, 87,
	-364, -364, 86, -364, -142, -144, -364, 76, -126, -216,
	-364, -247, 236, 19, 19, -216, -216, -162, -188, -116,
	-174, -202, 54, 76, 118, 92, 92, 92, 12, -176,
	215, -194, -213, -140, 364, -189, -364, -213, 87, 25,
	87, 607, 133, 87, -177, -96, -363, 265, -254, 92,
	92, -11, 86, 147, -213, -155, -364, 466, 73, 469,
	-116, -364, 76, 478, 569, 86, -364, -364, -364, 76,
	118, -221, -247, 87, -364, -363, -194, 87, -198, -11,
	85, -3, 265, -79, 468, -326, -304, -248, 92, 94,
	87, 62, 467, 470, -331, -247, 236, -255, -141, -139,
	-247, 521, -347, -346, 464, -357, -353, 115, 139, 101,
	-355, 559, 515, 124, 125, -79, -116, 85, -364, -80,
	280, 565, -337, 62, -364, -364, 86, 22, -268, -60,
	532, -344, -345, 76, -348, 370, 531, 552, 115, 92,
	87, -213, 241, -328, 468, -139, 528, -281, -126, -345,
	76, -344, 76, 13, 12, -4, 606, 87, 282, 469,
	-59, 26, -140, -343, 249, 244, 247, 32, -343, 94,
	-4, 470, 532, 243, 31, 115, -126, -143, -142, -142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 797,
	797, 797, 0, 797, 0, 0, 797, -2, -2, 797,
	1283, 0, 797, 0, 0, -2, 729, 731, 0, 733,
	-2, 0, 0, 742, 1786, 1786, 792, 0, 0, 0,
	0, 0, 797, 797, 797, 797, 1144, 48, 797, 0,
	83, 84, 748, 749, 750, 63, 0, 1784, 1, 3,
	69, 73, 0, 0, 0, 56, 1153, 0, 76, 0,
	0, 801, 0, 799, 0, 1266, 797, 797, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 556, 492, 535, 490, 521, -2, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 369, 369, 0, 0, -2, 478, 478, 478,
	0, 0, 0, 518, 1268, 430, 369, 369, 369, 0,
	369, 369, 369, 369, 0, 0, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 1170, 153, 1284, 1281, 1282, 38, 39,
	40, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 0, 1260, 0, 656, 898, 0, 718, 718, 0,
	718, 718, 718, 718, 0, 0, 0, 668, 0, 0,
	0, 0, 715, 0, 684, 685, 0, 715, 0, 691,
	721, 0, 696, 718, 718, 699, 1787, 0, 1787, 1787,
	1251, 0, 712, 710, 724, 725, 728, 732, 0, 737,
	740, 1277, 1278, 0, 755, 47, 1521, 747, 760, 761,
	0, 793, 794, 43, 995, 0, 920, 925, 936, 949,
	950, 951, 952, 953, 955, 956, 0, 0, 0, 0,
	961, 962, 0, 0, 0, 0, 0, 976, 0, 0,
	0, 0, 0, 1125, 0, 1088, 1088, 1012, 1088, 1090,
	1090, 0, 0, 0, 1783, 1561, 1569, 1570, 1592, 1678,
	1727, 1565, 1566, 1547, 1559, 1562, 1550, 1551, 1553, 1555,
	1560, 1567, 1573, 1552, 1572, 1571, 0, 1548, 1549, 1554,
	1564, 1568, 1556, 1557, 1558, 1563, 1574, 1134, 0, 0,
	0, 0, 0, 0, 271, 272, 994, 1240, 1090, 1090,
	1090, 1090, 1090, -2, -2, 218, 219, 220, 221, 222,
	223, 224, 0, 214, 0, 276, 277, 273, 274, 275,
	978, 979, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 1786, 0, 770, 0, 0, 0, 0,
	0, 1153, 0, 1145, 1144, 61, 0, 797, -2, 0,
	0, 0, 0, 45, 0, 50, 857, 75, 74, 1192,
	0, 0, 0, 57, 1154, 65, 67, 1155, 0, 802,
	803, 0, 833, 837, 0, 798, 0, 0, 1267, 1266,
	1266, 100, 0, 1723, 1244, -2, -2, 0, 0, 1279,
	1280, 1253, -2, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	-2, 0, 0, 165, 166, 0, 41, 396, 0, 161,
	0, 389, 335, 0, 1170, 0, 0, 0, 0, 0,
	797, 0, 1261, 142, 143, 150, 151, 152, 369, 369,
	369, 532, 0, 0, 153, 153, 499, 500, 501, 0,
	0, -2, 394, 0, 479, 0, 0, 383, 383, 387,
	385, 386, 0, 0, 0, 0, 0, 0, 512, 0,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	617, 0, 370, 0, 530, 531, 431, 0, 0, 0,
	0, 510, 511, 0, 0, 1269, 1270, 0, 0, 0,
	369, 369, 0, 0, 0, 0, 369, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 1183, 0, 0,
	0, -2, 0, 648, 0, 0, 0, 1262, 1262, 0,
	655, 0, 657, 658, 0, 0, 659, 0, 715, 715,
	713, 714, 661, 662, 663, 664, 718, 0, 0, 378,
	379, 380, 715, 718, 0, 718, 718, 718, 718, 715,
	715, 715, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 721, 718, 0, 692, 0, 693, 694,
	697, 698, 700, 1788, 1789, 1300, 1787, 1787, 704, 708,
	1252, 730, 738, 741, 758, 756, 757, 759, 751, 752,
	753, 754, 0, 772, 773, 778, 0, 0, 0, 0,
	784, 785, 786, 0, 0, 789, 790, 791, 0, 0,
	0, 0, 0, 918, 0, 0, 984, 985, 986, 987,
	988, 989, 990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 957, 958, 959, 960, 963, 0, 0,
	0, 968, 969, 0, 0, 0, 0, 0, 807, 0,
	1126, 0, 1010, 0, 1011, 1013, 1014, 0, 1015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 817, 817,
	0, 0, 207, 208, 209, 210, 211, 225, 226, 227,
	228, 229, 278, 1134, 0, 994, 0, 0, 44, 762,
	763, 0, 881, 1272, 0, 0, 813, 0, 55, 64,
	66, 1153, 59, 1153, 0, 819, 0, 0, -2, -2,
	820, 826, 827, 828, 829, 830, 52, 1785, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 347, 1195, 0,
	0, 1146, 1147, 1150, 0, 834, 1603, 838, 0, 840,
	841, 0, 800, 0, 98, 0, 897, 0, 0, 0,
	1723, 1250, 0, 102, 103, 0, 0, 0, 353, 1255,
	1256, 1257, -2, 376, 0, 353, 342, 286, 287, 288,
	335, 290, 335, 335, 335, 335, 347, 347, 347, 347,
	318, 319, 320, 321, 322, 0, 0, 305, 335, 335,
	335, 335, 325, 326, 327, 328, 329, 330, 331, 332,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 337,
	337, 337, 339, 339, 0, 42, 0, 357, 0, 1150,
	0, 0, 1183, 1264, 1274, 0, 0, 0, 1264, 120,
	0, 0, 0, 533, 567, 493, 522, 534, 0, 496,
	497, -2, 0, 0, 478, 0, 480, 0, 377, 0,
	-2, 0, 387, 0, 383, 387, 384, 387, 375, 388,
	514, 515, 516, 0, 597, 867, 0, 0, 0, 0,
	0, 603, 604, 605, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 523, 524, 525, 526, 527,
	528, 529, 0, 0, 480, 0, 519, 0, 432, 433,
	434, 0, 0, 437, 438, 439, 440, 0, 0, 443,
	444, 445, 884, 885, 446, 447, 472, 473, 474, 448,
	449, 450, 451, 452, 453, 454, 466, 467, 468, 469,
	470, 471, 455, 456, 457, 458, 459, 460, 463, 0,
	135, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	816, 899, 1285, 1286, 719, 720, 0, 381, 382, 718,
	718, 665, 705, 0, 718, 669, 706, 670, 672, 671,
	673, 686, 687, 718, 676, 716, 717, 677, 678, 679,
	680, 681, 682, 683, 701, 688, 689, 690, 722, 0,
	726, 727, 702, 703, 0, 739, 743, 744, 745, 746,
	0, 0, 775, 94, 780, 781, 782, 783, 795, 788,
	996, 915, 916, 917, 0, 919, 922, 0, 980, 982,
	924, 926, 991, 992, 993, 0, 0, 0, 0, 0,
	930, 934, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 954, 1104, 1105, 1106, 971, 279,
	280, 0, 972, 0, 831, 0, 0, 0, 970, 0,
	0, 0, 0, 808, 809, 1132, 1129, 0, 0, 1089,
	1091, 0, 0, 0, 0, 0, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1107, 0, 0,
	0, 0, 0, 1125, 0, 973, 974, 975, 0, 0,
	0, 1273, 0, 130, 131, 0, 0, 0, 0, 0,
	1061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 818, 1135, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 1239, 0, 765, 766, 768, 0, 901, 0,
	882, 0, 0, 771, 0, 812, 0, 815, 58, 60,
	824, 825, 0, 842, 821, 54, 49, 0, 0, 859,
	1193, 347, 1215, 0, 351, 352, 1156, 1157, 0, 1149,
	1151, 1152, 77, 839, 835, 0, 913, 0, 0, 896,
	0, 845, 847, 848, 849, 879, 0, 852, 0, 0,
	0, 0, 0, 96, 898, 1245, 101, 0, 0, 106,
	107, 1246, 1247, 1248, 1249, 0, 556, -2, 427, 167,
	169, 170, 171, 162, -2, 345, 343, 344, 289, 347,
	347, 312, 313, 314, 315, 316, 317, 0, 0, 306,
	307, 308, 309, 300, 0, 301, 302, 303, 0, 304,
	395, 0, 1158, 358, 359, 361, 369, 0, 364, 365,
	0, 369, 369, 0, 390, 391, 0, 1150, 1174, 0,
	0, 0, 1275, 1274, 1274, 1274, 0, 155, 156, 157,
	158, 159, 160, 592, 0, 0, 568, 590, 591, 153,
	0, 0, 163, 482, 481, 0, 624, 0, 393, 0,
	0, 387, 387, 372, 373, 517, 0, 0, 599, 600,
	601, 602, 0, 0, 0, 480, 482, 353, 0, 435,
	436, 441, 442, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 548, 549, 550, 484,
	554, 551, 484, 555, 1171, 1172, 1173, 0, 0, 649,
	0, 0, 419, 92, 1263, 654, 715, 675, 707, 715,
	667, 674, 695, 735, 779, 0, 0, 0, 0, 787,
	0, 0, 923, 981, 983, 927, 0, 931, 935, 0,
	0, 0, 0, 0, 0, 0, 977, 1001, 1002, 0,
	0, 1144, 0, 1130, 0, 0, 1009, 1092, 1093, 0,
	0, 0, 0, 0, 1020, 1021, 1022, 1023, 1024, 0,
	1026, 0, 0, 0, 1030, 1031, 0, 0, 1032, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 1045, 1046,
	1047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1058, 997, 0, 0, 817, 0, 1094, 1095, 1096,
	1097, 1098, 1135, 764, 767, 769, 855, 902, 903, 0,
	0, 0, 0, 883, 1271, 810, 811, 814, -2, 0,
	0, 1137, 0, 0, 842, 913, 843, 0, 822, 51,
	858, 0, 1197, 1196, 1209, 1222, 348, 349, 350, 1148,
	0, 1153, 0, 1233, 0, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 889, 0,
	0, 0, 0, 880, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 354, 355, 144, 153, 429, 168, 403,
	0, 0, 285, 346, 310, 311, 0, 333, 0, 0,
	0, 422, 116, 1162, 1161, 369, 369, 360, 0, 363,
	0, 0, 0, 1276, 336, 392, 0, 134, 0, 0,
	0, 0, 0, 140, 562, 0, 0, 569, 0, 0,
	0, 491, 0, 502, 503, 0, 596, -2, 645, 357,
	0, 371, 374, 868, 0, 0, 504, 0, 482, 508,
	509, 520, 464, 465, 462, 0, 0, 1184, 1185, 1190,
	1188, 1189, 121, 540, 542, 541, 545, 0, 0, 486,
	0, 486, 538, 0, 419, 1158, 0, 653, 420, 421,
	718, 718, 774, 95, 0, 777, 0, 0, 0, 0,
	928, 932, 832, 0, 0, 335, 335, 1112, 335, 339,
	1115, 335, 1117, 335, 1120, 335, 1123, 1124, 0, 0,
	0, 0, 1127, 1008, 1133, 0, 0, 0, 0, 1019,
	0, 0, 0, 0, 0, 0, 132, 133, 1061, 0,
	0, 1063, 1065, 1066, 1036, 1062, 0, 0, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 998,
	999, 0, 1136, 904, 909, 909, 909, 0, 0, 0,
	1258, 1259, 1138, 1139, 913, 1140, 844, 823, 860, 1215,
	0, 1208, 0, -2, 1217, 0, 0, 0, 1223, 836,
	78, 914, 81, 0, 1233, 1241, 0, 1224, 1235, 1237,
	0, 0, 0, 1229, 0, 913, 846, 875, 877, 0,
	872, 887, 888, 890, 0, 892, 0, 894, 895, 857,
	851, 853, 0, 0, 0, 98, 0, 913, 913, 97,
	0, 900, 108, 109, 110, 428, 172, 177, 0, 0,
	0, 182, 0, 184, 0, 0, 188, 189, 369, 369,
	404, 0, 282, 284, 0, 0, 175, 347, 0, 347,
	0, 340, 0, 405, 423, 0, 1159, 1160, 0, 0,
	362, 366, 367, 368, 0, 1265, 136, 0, 0, 0,
	565, 0, 593, 0, 0, 0, 0, 0, 0, 164,
	483, 625, 626, 627, 628, 629, 630, 631, 632, 0,
	369, 0, 0, 0, 369, 369, 369, 637, 356, 0,
	0, 621, 618, 505, 0, 212, 213, 215, 0, 0,
	507, 857, 1175, 1176, 1177, 0, 1187, 1191, 124, 0,
	0, 0, 0, 552, 0, 485, 553, 650, 651, 652,
	93, 660, 666, 776, 796, 921, 929, 933, 0, 965,
	1110, 347, 1113, 1114, 1116, 1118, 1119, 1121, 1122, 966,
	967, 0, 1004, 0, 1006, 1153, 0, 1131, 0, 0,
	1018, 0, 0, 0, 1027, 1028, 1029, 0, 0, 1035,
	0, 1037, 0, 0, 0, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1000, 0, 0, 0, 0,
	881, -2, 62, 1140, 1142, 0, 1202, 1200, 1200, 1210,
	1211, 0, 0, 1218, 0, 0, 0, 0, 82, 0,
	0, 0, 1238, 0, 0, 0, 0, 99, 1144, 869,
	876, 0, 0, 870, 0, 871, 891, 893, 850, -2,
	854, 0, 913, 913, 88, 89, 0, 178, 0, 180,
	205, 206, 0, 183, 185, 186, 187, 192, 193, 194,
	0, 0, 281, 283, 0, 0, 323, 334, 324, 0,
	0, 424, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 857,
	137, 138, 139, 557, 0, 567, 0, 0, 0, 560,
	0, 494, 0, 0, 0, 369, 369, 369, 0, 0,
	0, 0, 598, 0, 606, 0, 0, 0, 216, 217,
	0, 1186, 539, 0, 122, 123, 0, 0, 544, 487,
	488, 1099, 1111, 0, 0, 0, 1128, 0, 0, 0,
	0, 1025, 1033, 0, 1064, 0, 1040, 0, 0, 0,
	587, 588, 0, 1060, 0, 910, 0, 0, 0, 0,
	901, 1142, 80, 0, 0, 1205, 0, 1198, 1201, 1199,
	1212, 0, 0, 1219, 0, 1221, 0, 1242, 1243, 1236,
	0, 1228, 1231, 1227, 1230, 1153, 873, 0, 878, 0,
	1144, 87, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 0, 0,
	338, 341, 0, 0, 0, 558, 0, 570, 561, 0,
	635, 0, 639, 0, 0, 0, 642, 643, 644, 397,
	622, 619, 620, 506, 0, 125, 126, 0, 0, 0,
	0, 0, 0, 1003, 1005, 1007, 1016, 1017, 1108, 1109,
	1034, 1038, 0, 1041, 0, 0, 1042, 0, 589, 0,
	906, 863, 864, 911, 912, 0, 0, 856, 79, 1143,
	1141, 1194, 0, 1203, 1204, 1213, 1214, 1220, 0, 1226,
	0, 85, 0, 0, 0, 1153, 179, 0, 197, 0,
	566, 0, 569, 559, 633, 634, 0, 646, 638, 640,
	641, 1178, 0, 0, 0, 546, 964, 0, 0, 0,
	1061, 1043, 0, 585, 586, 0, 905, 907, 908, 1206,
	1207, 1234, 1232, 874, 881, 0, 86, 410, 403, 1178,
	0, 0, 0, 536, 1180, 127, 128, 475, 476, 477,
	121, 1100, 0, 1103, 0, 865, 866, 571, 0, 573,
	0, -2, 398, 411, 0, 173, 198, 199, 0, 0,
	202, 203, 204, 195, 196, 117, 0, 0, 647, 0,
	1181, 1182, 124, 1101, 1039, 572, 0, 0, 353, 0,
	582, 399, 400, 0, 406, 407, 408, 409, 200, 201,
	594, 0, 0, 543, 0, 574, 575, 583, 0, 401,
	0, 402, 0, 0, 0, 563, 0, 594, 1179, 0,
	0, 584, 580, 412, 414, 415, 0, 0, 413, 595,
	564, 1102, 0, 416, 417, 418, 576, 577, 578, 579,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 608,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:523
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:528
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:529
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:533
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:569
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:598
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:604
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:623
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:629
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:633
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:639
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:818
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:830
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:842
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:846
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:880
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:890
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:900
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:913
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:935
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:945
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:949
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:953
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:967
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:971
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:977
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:981
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1020
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1044
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1049
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1081
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1097
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1104
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1116
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1126
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1133
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1140
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1151
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1162
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1176
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1208
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1228
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1234
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1238
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1244
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1254
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1259
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1292
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1301
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1349
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1378
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1382
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1394
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1398
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1404
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1408
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1412
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1418
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1422
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1427
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1458
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1513
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1517
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1523
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1527
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1531
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1552
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1556
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Armscii8Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = ASCIIStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Big5Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = UBinaryStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Cp1250Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Cp1251Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Cp1256Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Cp1257Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Cp850Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Cp852Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Cp866Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Cp932Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Dec8Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = EucjpmsStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = EuckrStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Gb18030Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Gb2312Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = GbkStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Geostd8Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = GreekStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = HebrewStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Hp8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Keybcs2Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Koi8rStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Koi8uStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Latin1Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Latin2Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Latin5Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Latin7Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = MacceStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = MacromanStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = SjisStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = Swe7Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = Tis620Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Ucs2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = UjisStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Utf16Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Utf16leStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Utf32Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Utf8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Utf8mb4Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1759
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1763
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1767
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1773
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1777
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1784
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1788
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1792
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1796
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2018
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2027
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2032
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2036
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2048
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2054
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2062
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2066
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2070
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2075
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2079
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2126
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2135
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2141
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2151
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2155
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2160
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2164
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2168
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2172
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2176
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2180
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2196
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2200
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2204
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2208
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2212
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = ""
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = yyDollar[2].str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = "key"
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = yyDollar[1].str
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2280
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2290
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2294
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2300
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2304
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2310
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2314
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2320
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2326
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2330
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2334
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2338
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2342
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2351
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2357
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2363
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2369
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2373
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2377
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2382
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2386
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2392
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2398
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2404
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2408
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2412
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2416
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2420
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2446
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2455
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2461
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2465
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2475
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2479
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2485
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2489
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2493
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2497
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2501
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2505
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2509
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2513
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2517
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2521
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2525
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2529
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2533
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2537
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2541
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2545
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2549
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2553
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2557
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2561
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2565
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2569
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2573
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2577
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2610
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2665
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2669
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2687
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2691
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2700
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2704
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2708
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2716
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2722
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2736
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2740
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2744
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2748
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2752
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2756
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2760
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2764
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2768
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2772
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2776
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2780
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2784
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2788
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2792
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2796
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2800
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2804
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2808
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2812
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2816
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2820
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2824
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2830
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2878
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2885
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2892
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2899
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2905
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2915
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2922
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2929
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2941
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2951
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2955
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2959
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2972
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2982
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2986
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2997
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3004
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3025
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3066
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3075
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3083
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3092
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3099
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3111
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3120
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3135
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3149
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3153
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3159
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3165
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3171
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3181
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3185
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3191
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3197
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3203
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3209
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3215
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3219
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3223
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3227
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3233
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3239
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3245
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3249
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3253
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3259
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3263
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3268
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3272
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3277
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3281
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3287
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3291
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3295
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3299
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3303
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3307
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3311
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3315
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3319
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3323
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3327
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3331
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3335
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3339
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3343
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3347
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3351
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3355
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3359
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3363
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3367
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3371
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3380
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3384
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3391
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3406
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3410
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3415
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3420
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3425
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3430
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3435
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3441
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3447
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3454
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3461
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3468
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3486
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3492
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3498
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3504
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3510
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3516
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3528
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = ""
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.str = ""
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3550
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3554
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3610
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3626
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3646
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3670
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3682
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = "extended "
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3837
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3855
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3859
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3869
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.empty = struct{}{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.empty = struct{}{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.empty = struct{}{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3938
		{
			yyVAL.empty = struct{}{}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.empty = struct{}{}
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3943
		{
			yyVAL.empty = struct{}{}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3945
		{
			yyVAL.empty = struct{}{}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3961
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3965
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3969
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3973
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3977
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3981
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = yyDollar[1].str
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = yyDollar[1].str
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = yyDollar[1].str
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = ""
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4058
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4068
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4074
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4078
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4082
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4086
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4134
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4189
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4211
		{
			setAllowComments(yylex, true)
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4221
		{
			yyVAL.strs = nil
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4239
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = SQLCacheStr
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4257
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4261
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4265
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4287
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4296
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4315
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4320
		{
			yyVAL.strs = nil
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4336
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = SQLCacheStr
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = DistinctStr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = DistinctStr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = StraightJoinHint
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4372
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4382
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4386
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4390
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4394
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4419
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4423
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4429
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4435
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4449
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4453
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4457
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4467
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4471
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4477
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4481
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4490
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4496
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4506
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4516
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4520
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4534
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4551
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4555
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4559
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4563
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4569
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4571
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4575
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4581
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4583
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4586
		{
			yyVAL.empty = struct{}{}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.empty = struct{}{}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4591
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4612
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4616
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4620
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4626
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4632
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4636
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4640
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4644
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4650
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4654
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4664
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4693
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4699
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4703
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4709
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4713
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4717
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4721
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4726
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4730
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4734
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4738
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4786
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4790
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4808
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4812
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4816
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4820
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4824
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4828
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4832
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4836
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4840
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4844
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4858
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4874
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4882
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4886
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5006
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5010
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5014
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = ""
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5030
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5034
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5041
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5045
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5049
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5053
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5059
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5063
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5067
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5071
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5075
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5079
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5083
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5089
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5093
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5097
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5104
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5110
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5114
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5393
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5402
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5408
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5412
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5430
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5434
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5438
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5442
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5446
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5450
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5454
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5458
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5462
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5466
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5470
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5476
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5480
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5484
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5488
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5492
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5496
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5500
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5504
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5508
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5553
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5563
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5567
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5571
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5575
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5579
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5603
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5607
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5613
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5617
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5621
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5625
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5629
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5635
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5639
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5643
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5647
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5651
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5655
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5659
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5663
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5667
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5671
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = string("")
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5696
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5700
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5706
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5721
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5725
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5729
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5758
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5776
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5782
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5788
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5792
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5798
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5803
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5807
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5811
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5820
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5826
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5830
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5834
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5843
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5847
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5851
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5855
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5862
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5866
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5870
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5874
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5880
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5884
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5888
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5893
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5897
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5901
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5910
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5914
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5924
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = ""
		}
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = "cascaded"
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5955
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5961
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5967
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5973
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5991
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5995
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6001
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6005
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6011
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6015
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6019
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6028
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6037
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6041
		{
			yyVAL.str = " header"
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6050
		{
			yyVAL.str = " manifest on"
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6054
		{
			yyVAL.str = " manifest off"
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6059
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = " overwrite on"
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = " overwrite off"
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6073
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6078
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6088
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6092
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6102
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6107
		{
			yyVAL.str = ""
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6121
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6131
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6140
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6144
		{
			yyVAL.str = " optionally"
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6157
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6161
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6165
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6169
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6173
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6179
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6183
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6191
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6200
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6206
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6210
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6216
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6220
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6226
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6241
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6245
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6251
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6257
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6261
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6267
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6271
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6275
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6279
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6283
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6291
		{
			yyVAL.str = "charset"
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6323
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6328
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6338
		{
			yyVAL.empty = struct{}{}
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6340
		{
			yyVAL.empty = struct{}{}
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6342
		{
			yyVAL.empty = struct{}{}
		}
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6346
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6355
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6362
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6366
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6376
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6383
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6393
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6399
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6403
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6410
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6932
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6941
		{
			decNesting(yylex)
		}
	case 1786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6946
		{
			skipToEnd(yylex)
		}
	case 1787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6951
		{
			skipToEnd(yylex)
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6955
		{
			skipToEnd(yylex)
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6959
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
