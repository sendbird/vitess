// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const THROTTLE = 57624
const UNTHROTTLE = 57625
const EXPIRE = 57626
const RATIO = 57627
const BEGIN = 57628
const START = 57629
const TRANSACTION = 57630
const COMMIT = 57631
const ROLLBACK = 57632
const SAVEPOINT = 57633
const RELEASE = 57634
const WORK = 57635
const BIT = 57636
const TINYINT = 57637
const SMALLINT = 57638
const MEDIUMINT = 57639
const INT = 57640
const INTEGER = 57641
const BIGINT = 57642
const INTNUM = 57643
const REAL = 57644
const DOUBLE = 57645
const FLOAT_TYPE = 57646
const DECIMAL_TYPE = 57647
const NUMERIC = 57648
const TIME = 57649
const TIMESTAMP = 57650
const DATETIME = 57651
const YEAR = 57652
const CHAR = 57653
const VARCHAR = 57654
const BOOL = 57655
const CHARACTER = 57656
const VARBINARY = 57657
const NCHAR = 57658
const TEXT = 57659
const TINYTEXT = 57660
const MEDIUMTEXT = 57661
const LONGTEXT = 57662
const BLOB = 57663
const TINYBLOB = 57664
const MEDIUMBLOB = 57665
const LONGBLOB = 57666
const JSON = 57667
const JSON_SCHEMA_VALID = 57668
const JSON_SCHEMA_VALIDATION_REPORT = 57669
const ENUM = 57670
const GEOMETRY = 57671
const POINT = 57672
const LINESTRING = 57673
const POLYGON = 57674
const GEOMETRYCOLLECTION = 57675
const MULTIPOINT = 57676
const MULTILINESTRING = 57677
const MULTIPOLYGON = 57678
const ASCII = 57679
const UNICODE = 57680
const NULLX = 57681
const AUTO_INCREMENT = 57682
const APPROXNUM = 57683
const SIGNED = 57684
const UNSIGNED = 57685
const ZEROFILL = 57686
const CODE = 57687
const COLLATION = 57688
const COLUMNS = 57689
const DATABASES = 57690
const ENGINES = 57691
const EVENT = 57692
const EXTENDED = 57693
const FIELDS = 57694
const FULL = 57695
const FUNCTION = 57696
const GTID_EXECUTED = 57697
const KEYSPACES = 57698
const OPEN = 57699
const PLUGINS = 57700
const PRIVILEGES = 57701
const PROCESSLIST = 57702
const SCHEMAS = 57703
const TABLES = 57704
const TRIGGERS = 57705
const USER = 57706
const VGTID_EXECUTED = 57707
const VITESS_KEYSPACES = 57708
const VITESS_METADATA = 57709
const VITESS_MIGRATIONS = 57710
const VITESS_REPLICATION_STATUS = 57711
const VITESS_SHARDS = 57712
const VITESS_TABLETS = 57713
const VITESS_TARGET = 57714
const VSCHEMA = 57715
const VITESS_THROTTLED_APPS = 57716
const NAMES = 57717
const GLOBAL = 57718
const SESSION = 57719
const ISOLATION = 57720
const LEVEL = 57721
const READ = 57722
const WRITE = 57723
const ONLY = 57724
const REPEATABLE = 57725
const COMMITTED = 57726
const UNCOMMITTED = 57727
const SERIALIZABLE = 57728
const CURRENT_TIMESTAMP = 57729
const DATABASE = 57730
const CURRENT_DATE = 57731
const NOW = 57732
const CURRENT_TIME = 57733
const LOCALTIME = 57734
const LOCALTIMESTAMP = 57735
const CURRENT_USER = 57736
const UTC_DATE = 57737
const UTC_TIME = 57738
const UTC_TIMESTAMP = 57739
const DAY = 57740
const DAY_HOUR = 57741
const DAY_MICROSECOND = 57742
const DAY_MINUTE = 57743
const DAY_SECOND = 57744
const HOUR = 57745
const HOUR_MICROSECOND = 57746
const HOUR_MINUTE = 57747
const HOUR_SECOND = 57748
const MICROSECOND = 57749
const MINUTE = 57750
const MINUTE_MICROSECOND = 57751
const MINUTE_SECOND = 57752
const MONTH = 57753
const QUARTER = 57754
const SECOND = 57755
const SECOND_MICROSECOND = 57756
const YEAR_MONTH = 57757
const WEEK = 57758
const REPLACE = 57759
const CONVERT = 57760
const CAST = 57761
const SUBSTR = 57762
const SUBSTRING = 57763
const GROUP_CONCAT = 57764
const SEPARATOR = 57765
const TIMESTAMPADD = 57766
const TIMESTAMPDIFF = 57767
const WEIGHT_STRING = 57768
const LTRIM = 57769
const RTRIM = 57770
const TRIM = 57771
const JSON_ARRAY = 57772
const JSON_OBJECT = 57773
const JSON_QUOTE = 57774
const JSON_DEPTH = 57775
const JSON_TYPE = 57776
const JSON_LENGTH = 57777
const JSON_VALID = 57778
const JSON_ARRAY_APPEND = 57779
const JSON_ARRAY_INSERT = 57780
const JSON_INSERT = 57781
const JSON_MERGE = 57782
const JSON_MERGE_PATCH = 57783
const JSON_MERGE_PRESERVE = 57784
const JSON_REMOVE = 57785
const JSON_REPLACE = 57786
const JSON_SET = 57787
const JSON_UNQUOTE = 57788
const MATCH = 57789
const AGAINST = 57790
const BOOLEAN = 57791
const LANGUAGE = 57792
const WITH = 57793
const QUERY = 57794
const EXPANSION = 57795
const WITHOUT = 57796
const VALIDATION = 57797
const UNUSED = 57798
const ARRAY = 57799
const CUME_DIST = 57800
const DESCRIPTION = 57801
const DENSE_RANK = 57802
const EMPTY = 57803
const EXCEPT = 57804
const FIRST_VALUE = 57805
const GROUPING = 57806
const GROUPS = 57807
const JSON_TABLE = 57808
const LAG = 57809
const LAST_VALUE = 57810
const LATERAL = 57811
const LEAD = 57812
const NTH_VALUE = 57813
const NTILE = 57814
const OF = 57815
const OVER = 57816
const PERCENT_RANK = 57817
const RANK = 57818
const RECURSIVE = 57819
const ROW_NUMBER = 57820
const SYSTEM = 57821
const WINDOW = 57822
const ACTIVE = 57823
const ADMIN = 57824
const AUTOEXTEND_SIZE = 57825
const BUCKETS = 57826
const CLONE = 57827
const COMPONENT = 57828
const DEFINITION = 57829
const ENFORCED = 57830
const ENGINE_ATTRIBUTE = 57831
const EXCLUDE = 57832
const FOLLOWING = 57833
const GEOMCOLLECTION = 57834
const GET_MASTER_PUBLIC_KEY = 57835
const HISTOGRAM = 57836
const HISTORY = 57837
const INACTIVE = 57838
const INVISIBLE = 57839
const LOCKED = 57840
const MASTER_COMPRESSION_ALGORITHMS = 57841
const MASTER_PUBLIC_KEY_PATH = 57842
const MASTER_TLS_CIPHERSUITES = 57843
const MASTER_ZSTD_COMPRESSION_LEVEL = 57844
const NESTED = 57845
const NETWORK_NAMESPACE = 57846
const NOWAIT = 57847
const NULLS = 57848
const OJ = 57849
const OLD = 57850
const OPTIONAL = 57851
const ORDINALITY = 57852
const ORGANIZATION = 57853
const OTHERS = 57854
const PATH = 57855
const PERSIST = 57856
const PERSIST_ONLY = 57857
const PRECEDING = 57858
const PRIVILEGE_CHECKS_USER = 57859
const PROCESS = 57860
const RANDOM = 57861
const REFERENCE = 57862
const REQUIRE_ROW_FORMAT = 57863
const RESOURCE = 57864
const RESPECT = 57865
const RESTART = 57866
const RETAIN = 57867
const REUSE = 57868
const ROLE = 57869
const SECONDARY = 57870
const SECONDARY_ENGINE = 57871
const SECONDARY_ENGINE_ATTRIBUTE = 57872
const SECONDARY_LOAD = 57873
const SECONDARY_UNLOAD = 57874
const SKIP = 57875
const SRID = 57876
const THREAD_PRIORITY = 57877
const TIES = 57878
const UNBOUNDED = 57879
const VCPU = 57880
const VISIBLE = 57881
const RETURNING = 57882
const FORMAT = 57883
const TREE = 57884
const VITESS = 57885
const TRADITIONAL = 57886
const LOCAL = 57887
const LOW_PRIORITY = 57888
const NO_WRITE_TO_BINLOG = 57889
const LOGS = 57890
const ERROR = 57891
const GENERAL = 57892
const HOSTS = 57893
const OPTIMIZER_COSTS = 57894
const USER_RESOURCES = 57895
const SLOW = 57896
const CHANNEL = 57897
const RELAY = 57898
const EXPORT = 57899
const AVG_ROW_LENGTH = 57900
const CONNECTION = 57901
const CHECKSUM = 57902
const DELAY_KEY_WRITE = 57903
const ENCRYPTION = 57904
const ENGINE = 57905
const INSERT_METHOD = 57906
const MAX_ROWS = 57907
const MIN_ROWS = 57908
const PACK_KEYS = 57909
const PASSWORD = 57910
const FIXED = 57911
const DYNAMIC = 57912
const COMPRESSED = 57913
const REDUNDANT = 57914
const COMPACT = 57915
const ROW_FORMAT = 57916
const STATS_AUTO_RECALC = 57917
const STATS_PERSISTENT = 57918
const STATS_SAMPLE_PAGES = 57919
const STORAGE = 57920
const MEMORY = 57921
const DISK = 57922
const PARTITIONS = 57923
const LINEAR = 57924
const RANGE = 57925
const LIST = 57926
const SUBPARTITION = 57927
const SUBPARTITIONS = 57928
const HASH = 57929

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	605, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	331, 151,
	-2, 469,
	-1, 55,
	35, 689,
	231, 689,
	242, 689,
	277, 703,
	278, 703,
	-2, 691,
	-1, 60,
	233, 716,
	-2, 714,
	-1, 114,
	230, 1240,
	-2, 119,
	-1, 116,
	1, 146,
	605, 146,
	-2, 151,
	-1, 126,
	132, 362,
	236, 362,
	-2, 458,
	-1, 145,
	131, 151,
	171, 151,
	331, 151,
	-2, 478,
	-1, 689,
	215, 1261,
	-2, 1257,
	-1, 690,
	215, 1262,
	-2, 1258,
	-1, 764,
	59, 784,
	-2, 799,
	-1, 801,
	147, 1665,
	-2, 112,
	-1, 802,
	147, 1508,
	-2, 113,
	-1, 808,
	147, 1591,
	-2, 1234,
	-1, 956,
	147, 1437,
	-2, 1231,
	-1, 995,
	241, 41,
	246, 41,
	-2, 373,
	-1, 1075,
	1, 517,
	605, 517,
	-2, 151,
	-1, 1312,
	59, 785,
	-2, 804,
	-1, 1313,
	59, 786,
	-2, 805,
	-1, 1366,
	131, 151,
	171, 151,
	331, 151,
	-2, 405,
	-1, 1444,
	132, 362,
	236, 362,
	-2, 458,
	-1, 1453,
	241, 42,
	246, 42,
	-2, 374,
	-1, 1757,
	215, 1266,
	-2, 1260,
	-1, 1840,
	131, 151,
	171, 151,
	331, 151,
	-2, 406,
	-1, 1847,
	25, 170,
	-2, 172,
	-1, 2089,
	86, 39,
	-2, 841,
	-1, 2141,
	77, 94,
	86, 94,
	-2, 861,
	-1, 2208,
	580, 616,
	-2, 603,
	-1, 2344,
	49, 1202,
	-2, 1196,
	-1, 2557,
	86, 39,
	-2, 842,
	-1, 2595,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 833,
	-1, 2909,
	22, 1593,
	32, 1593,
	172, 1593,
	253, 1593,
	311, 1593,
	312, 1593,
	313, 1593,
	314, 1593,
	315, 1593,
	316, 1593,
	317, 1593,
	319, 1593,
	320, 1593,
	321, 1593,
	322, 1593,
	323, 1593,
	324, 1593,
	325, 1593,
	326, 1593,
	327, 1593,
	328, 1593,
	329, 1593,
	330, 1593,
	332, 1593,
	334, 1593,
	335, 1593,
	336, 1593,
	337, 1593,
	338, 1593,
	339, 1593,
	340, 1593,
	341, 1593,
	342, 1593,
	345, 1593,
	346, 1593,
	347, 1593,
	348, 1593,
	349, 1593,
	350, 1593,
	351, 1593,
	352, 1593,
	353, 1593,
	466, 1593,
	-2, 561,
}

const yyPrivate = 57344

const yyLast = 42353

var yyAct = [...]int{
	689, 698, 2960, 2841, 2303, 2688, 2954, 2687, 2689, 1837,
	2907, 2910, 2662, 1369, 2484, 2891, 2911, 2397, 2404, 2043,
	1138, 2440, 779, 1771, 1773, 2794, 2467, 3, 2358, 1791,
	2702, 2355, 2077, 691, 1291, 2406, 1905, 682, 37, 1327,
	607, 2817, 2466, 2112, 683, 2359, 2566, 2301, 2356, 2707,
	2265, 185, 757, 2560, 185, 680, 572, 185, 2302, 96,
	604, 2135, 587, 1795, 185, 692, 681, 633, 2469, 2586,
	1810, 2353, 185, 2345, 2104, 2552, 1870, 2173, 605, 2248,
	2489, 1895, 1875, 959, 2205, 1087, 603, 185, 2175, 2174,
	1826, 154, 38, 2124, 2096, 1314, 1423, 1815, 611, 2079,
	1727, 1657, 599, 2240, 1667, 780, 1914, 1751, 140, 587,
	1814, 36, 587, 185, 587, 761, 1894, 765, 1802, 1615,
	806, 1877, 2167, 985, 1947, 1358, 91, 1336, 1451, 803,
	1817, 2143, 990, 1223, 616, 782, 759, 1294, 1679, 1560,
	1159, 673, 1726, 95, 1634, 996, 966, 1564, 1892, 963,
	967, 1458, 1544, 991, 992, 1357, 1866, 993, 1355, 1796,
	771, 1341, 1723, 1071, 98, 793, 1136, 1130, 1467, 1569,
	158, 117, 767, 1418, 769, 118, 1226, 1443, 123, 124,
	76, 2850, 97, 85, 89, 1116, 1764, 2198, 2961, 2437,
	1230, 766, 1907, 2196, 594, 1907, 1908, 1909, 187, 188,
	189, 102, 1945, 586, 2224, 2223, 1754, 787, 1529, 792,
	768, 77, 1160, 1003, 2645, 543, 8, 773, 119, 2256,
	2257, 2872, 7, 90, 6, 1622, 125, 2692, 2871, 187,
	188, 189, 1768, 1769, 2458, 2692, 1621, 1030, 1620, 1619,
	1618, 576, 104, 105, 960, 108, 1160, 2455, 114, 1617,
	805, 182, 1600, 961, 538, 968, 2075, 2926, 760, 758,
	595, 597, 2341, 598, 2540, 971, 2974, 800, 807, 2106,
	2936, 976, 2951, 2621, 753, 754, 755, 756, 774, 983,
	764, 781, 573, 1321, 2421, 1006, 1627, 119, 982, 1609,
	2790, 2456, 981, 2789, 2655, 1029, 1028, 2656, 1886, 78,
	78, 78, 2973, 80, 1031, 1032, 1033, 2901, 795, 796,
	2964, 2691, 2867, 2462, 78, 2949, 2872, 1170, 1044, 2691,
	2663, 2892, 1880, 2115, 1933, 2900, 2866, 2264, 559, 1989,
	2522, 1433, 181, 2152, 2232, 1359, 2151, 1360, 2231, 2153,
	557, 1007, 2394, 2395, 1832, 1833, 2076, 2393, 2116, 2255,
	2720, 1170, 1986, 1831, 119, 1106, 120, 751, 1133, 750,
	980, 2842, 1080, 1081, 1111, 1112, 1094, 1038, 1094, 163,
	2199, 1095, 2164, 1095, 1850, 1849, 87, 87, 87, 1093,
	554, 1092, 1107, 1100, 2563, 1074, 2486, 2513, 576, 568,
	2291, 87, 2511, 1987, 1083, 583, 585, 1608, 1770, 589,
	576, 2490, 576, 2241, 564, 1519, 1298, 2206, 1192, 1915,
	2227, 2157, 1123, 1948, 1125, 2479, 1166, 576, 978, 1158,
	2963, 2459, 1709, 2480, 1953, 1545, 160, 1127, 161, 2799,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1200, 1202,
	1203, 577, 1045, 1965, 1115, 1966, 1076, 1967, 180, 1520,
	1166, 1521, 1122, 1124, 1070, 2243, 1550, 984, 2647, 1113,
	975, 1879, 2777, 977, 1132, 1109, 1110, 1108, 1101, 1114,
	1301, 2487, 2646, 544, 1968, 546, 560, 1051, 579, 1954,
	578, 550, 1050, 548, 552, 561, 553, 2488, 547, 1952,
	558, 1950, 2643, 549, 562, 563, 566, 569, 570, 571,
	567, 565, 1918, 556, 580, 1014, 1610, 1611, 1612, 1811,
	1701, 1690, 1691, 1692, 1693, 1703, 1694, 1695, 1696, 1708,
	1704, 1697, 1698, 1705, 1706, 1707, 1699, 1700, 1702, 87,
	1012, 1951, 987, 1005, 980, 1069, 979, 986, 185, 2927,
	185, 987, 1023, 185, 1022, 1021, 2292, 1020, 1436, 1120,
	1019, 1024, 2410, 1121, 1018, 1017, 164, 980, 2968, 972,
	1016, 1011, 1987, 1126, 2958, 170, 974, 973, 1204, 998,
	1204, 1005, 2947, 587, 1140, 587, 587, 1959, 1956, 1958,
	1957, 1960, 1961, 964, 964, 2247, 794, 1119, 577, 999,
	587, 587, 964, 1457, 2080, 2082, 962, 1561, 1893, 1073,
	577, 2244, 577, 2642, 1939, 1165, 1162, 1163, 1164, 1169,
	1171, 1168, 1557, 1167, 1146, 978, 1034, 577, 2430, 1152,
	1161, 2226, 1104, 1797, 1798, 1005, 1040, 1431, 2216, 37,
	1090, 1004, 1096, 1097, 1098, 1099, 1008, 998, 1558, 1165,
	1162, 1163, 1164, 1169, 1171, 1168, 1009, 1167, 1015, 2200,
	2420, 2260, 2849, 2001, 1161, 1134, 1135, 2229, 2197, 1551,
	1430, 1429, 1427, 1552, 1553, 542, 1010, 2564, 2239, 1004,
	537, 2238, 581, 1013, 2838, 998, 1001, 1002, 1935, 964,
	1005, 1025, 155, 995, 999, 1205, 1206, 2602, 2582, 1883,
	574, 1207, 1208, 1209, 1210, 1072, 2148, 1456, 2917, 2111,
	2067, 1215, 1763, 1218, 994, 575, 1141, 1838, 1345, 2855,
	979, 1270, 2915, 1085, 805, 116, 805, 805, 1203, 2865,
	2250, 2919, 2920, 1004, 1204, 2249, 81, 1884, 2392, 2408,
	2409, 1147, 1149, 979, 1005, 1882, 2916, 776, 1289, 1131,
	2800, 1142, 1143, 2250, 1549, 1089, 1117, 1570, 2249, 1128,
	2861, 185, 111, 1211, 2081, 587, 587, 1026, 2638, 86,
	86, 86, 2690, 1531, 1530, 1532, 1533, 1534, 1885, 2576,
	2690, 185, 2460, 2461, 86, 1988, 2956, 1881, 1004, 2957,
	1302, 2955, 1949, 1008, 998, 2463, 1554, 1361, 1156, 2284,
	587, 1680, 2189, 1009, 185, 1175, 1304, 1284, 2716, 587,
	1308, 1680, 77, 2015, 1079, 587, 761, 2613, 1155, 1228,
	1082, 1229, 1290, 1305, 1153, 1091, 1154, 1005, 1103, 803,
	759, 1307, 112, 2612, 1027, 156, 1922, 1232, 1466, 1105,
	1465, 168, 1004, 2407, 1039, 1176, 1455, 1041, 1042, 1043,
	1287, 1046, 1047, 1048, 1049, 2410, 2943, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1932, 1930, 1934, 1306, 1639, 1014,
	1012, 95, 176, 2603, 1290, 1276, 1277, 1278, 1279, 1280,
	1346, 1295, 1640, 1641, 1638, 1088, 1546, 2400, 1547, 1118,
	1571, 1548, 98, 1174, 1175, 2266, 1299, 1300, 1356, 1075,
	157, 162, 159, 165, 166, 167, 169, 171, 172, 173,
	174, 1927, 2971, 1321, 1927, 1004, 175, 177, 178, 179,
	1684, 998, 1001, 1002, 1685, 964, 1629, 1631, 1632, 995,
	999, 1343, 2401, 87, 187, 188, 189, 2669, 1659, 2670,
	805, 1176, 1303, 758, 1292, 1326, 1363, 1637, 1931, 760,
	1630, 1929, 1539, 1323, 1176, 1192, 2969, 2403, 807, 185,
	2785, 1351, 1352, 1419, 2877, 1309, 1173, 2831, 1174, 1175,
	1537, 2398, 1526, 1428, 2784, 2286, 2268, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1201, 1200, 1202, 1203, 2408, 2409,
	1993, 1994, 1995, 2775, 587, 2399, 1453, 1198, 1199, 1201,
	1200, 1202, 1203, 2680, 1462, 1176, 2878, 798, 1464, 2832,
	2679, 587, 587, 1176, 587, 1538, 587, 587, 1660, 587,
	587, 587, 587, 587, 587, 2620, 2619, 2405, 1803, 1804,
	2438, 2519, 2426, 1536, 587, 1525, 2810, 1321, 185, 1500,
	2970, 2171, 2278, 2277, 2276, 2270, 2170, 2274, 1889, 2269,
	1540, 2267, 703, 704, 705, 185, 2272, 1196, 1197, 1198,
	1199, 1201, 1200, 1202, 1203, 2271, 1524, 1523, 587, 1522,
	185, 1512, 1173, 1506, 1174, 1175, 1503, 1449, 1502, 1514,
	1501, 1559, 2273, 2275, 587, 1173, 185, 1174, 1175, 1476,
	2944, 2858, 2407, 1176, 1330, 2857, 1321, 2835, 1442, 2834,
	2833, 2483, 185, 2032, 2410, 1463, 187, 188, 189, 185,
	2610, 187, 188, 189, 2780, 2155, 2715, 1497, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 587, 2713, 2676,
	1495, 1496, 1461, 2617, 1426, 961, 1173, 2609, 1174, 1175,
	1176, 587, 587, 1331, 1173, 2491, 1174, 1175, 1287, 187,
	188, 189, 1468, 1468, 1460, 1468, 2429, 1468, 1468, 185,
	1477, 1468, 1468, 1468, 1468, 1468, 1439, 1440, 1438, 1452,
	2428, 2180, 2168, 1287, 1287, 961, 1321, 1296, 1432, 1286,
	1469, 1145, 1470, 1943, 1472, 1474, 1574, 1942, 1478, 1480,
	1482, 1484, 1486, 1578, 1498, 1580, 1581, 1582, 1583, 1794,
	1776, 1601, 1587, 1176, 1567, 1658, 1566, 1664, 1664, 1541,
	1661, 1665, 1535, 2402, 1599, 1459, 1459, 1527, 1670, 587,
	1517, 1513, 1562, 2945, 1173, 1563, 1174, 1175, 2575, 1509,
	1508, 540, 1635, 1507, 587, 587, 1332, 1129, 1176, 1662,
	1662, 590, 2102, 2962, 2932, 1321, 119, 982, 94, 752,
	1642, 981, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1321, 1633, 2807, 805, 1643,
	92, 1173, 1576, 1174, 1175, 2102, 2898, 94, 1572, 1573,
	1724, 93, 805, 805, 2806, 2517, 1321, 1192, 2769, 2259,
	965, 1755, 1577, 1597, 92, 1598, 2768, 185, 2661, 1584,
	1585, 1586, 587, 2102, 2885, 93, 1321, 1605, 1606, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1201, 1200, 1202, 1203,
	2052, 1321, 1636, 2354, 1681, 2577, 185, 2207, 1781, 587,
	1782, 2185, 1724, 2575, 1173, 1321, 1174, 1175, 1846, 185,
	187, 188, 189, 587, 1903, 187, 188, 189, 185, 1901,
	185, 1172, 185, 185, 587, 2102, 2881, 587, 2113, 1321,
	1671, 2873, 1321, 2102, 2851, 2860, 1755, 1287, 587, 1173,
	2102, 1174, 1175, 2121, 803, 1686, 1687, 803, 2536, 1847,
	1759, 1760, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1178,
	2416, 1757, 2653, 2848, 1176, 95, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1201, 1200, 1202, 1203, 1176, 2536, 1321,
	1787, 2329, 805, 1813, 95, 2024, 2102, 2776, 1756, 1666,
	1176, 2653, 1321, 587, 2102, 2651, 1672, 1673, 2004, 2121,
	1896, 1897, 1898, 1927, 1321, 1900, 1902, 1334, 2580, 1321,
	1172, 1321, 2120, 1780, 1856, 1857, 1858, 1859, 2387, 587,
	773, 1842, 1176, 2037, 1321, 587, 1462, 1987, 1841, 1462,
	1775, 1462, 2011, 2418, 2417, 100, 1757, 1926, 2414, 2415,
	1792, 1851, 1824, 1852, 1853, 1854, 1855, 1916, 1758, 2414,
	2413, 1761, 1762, 1830, 1343, 2002, 1789, 805, 2113, 1862,
	1863, 1864, 1865, 1808, 1872, 805, 2121, 587, 805, 1658,
	1845, 2037, 1333, 1878, 1806, 1658, 1658, 2121, 1321, 961,
	1829, 1176, 1828, 807, 2002, 1321, 807, 1928, 1786, 1987,
	2225, 1844, 1843, 1422, 2210, 1173, 2021, 1174, 1175, 2203,
	2204, 2020, 1913, 2002, 2010, 2102, 2101, 1927, 1173, 1910,
	1174, 1175, 1888, 185, 1422, 1421, 1367, 1366, 1801, 1325,
	185, 1173, 1766, 1174, 1175, 2923, 1176, 185, 185, 2575,
	1613, 185, 1556, 185, 968, 1353, 763, 989, 1873, 988,
	185, 1868, 1869, 1887, 1927, 2888, 87, 185, 2796, 1891,
	1936, 1899, 1328, 1173, 1921, 1174, 1175, 1924, 2766, 1925,
	961, 1176, 1192, 2044, 2727, 1188, 968, 1189, 1919, 2637,
	1938, 1920, 1873, 185, 1937, 1006, 1940, 1941, 587, 1923,
	1176, 1190, 1191, 1187, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1201, 1200, 1202, 1203, 1192, 1176, 2000, 1194, 1195,
	1196, 1197, 1198, 1199, 1201, 1200, 1202, 1203, 961, 2846,
	2634, 2144, 1173, 87, 1174, 1175, 2615, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1201, 1200, 1202, 1203, 1978, 1979,
	2528, 1007, 1946, 1981, 2006, 1434, 1435, 101, 2144, 2527,
	1424, 1459, 1982, 2005, 1871, 2481, 2443, 2439, 100, 1176,
	99, 2211, 1867, 1635, 101, 1861, 2622, 1173, 1176, 1174,
	1175, 690, 1176, 1321, 1860, 100, 2098, 99, 1971, 1176,
	1997, 1542, 1999, 1176, 2145, 1454, 94, 2485, 1450, 2773,
	1176, 94, 2441, 2147, 1420, 1078, 113, 1084, 1176, 1998,
	1086, 2177, 1173, 1074, 1174, 1175, 1504, 1505, 2797, 2626,
	1886, 2145, 1510, 1511, 1176, 1779, 2623, 2624, 2625, 1491,
	1987, 1173, 186, 1174, 1175, 186, 1176, 1321, 186, 1984,
	2940, 2176, 1603, 588, 1985, 186, 2938, 1173, 1176, 1174,
	1175, 2912, 2639, 186, 1321, 1176, 2870, 185, 2002, 2815,
	2597, 2593, 2590, 1636, 2538, 185, 2627, 2628, 186, 1664,
	587, 2534, 2086, 1996, 2073, 2525, 587, 2587, 2588, 1492,
	1493, 1494, 2524, 2435, 2592, 2434, 2433, 587, 2177, 2084,
	588, 2172, 2354, 588, 186, 588, 1488, 2190, 1972, 2090,
	1173, 1662, 1174, 1175, 1604, 2373, 2061, 2014, 2372, 1173,
	185, 1174, 1175, 1173, 185, 1174, 1175, 2929, 2060, 2899,
	1173, 1793, 1174, 1175, 1173, 1329, 1174, 1175, 2117, 2154,
	2059, 1173, 1785, 1174, 1175, 2581, 2334, 2058, 37, 1173,
	2030, 1174, 1175, 1489, 1490, 2333, 2376, 2137, 2103, 2374,
	1176, 2377, 2830, 2706, 2375, 1173, 2568, 1174, 1175, 2126,
	2129, 2130, 2131, 2127, 2567, 2128, 2132, 1173, 2708, 1174,
	1175, 2571, 2012, 2099, 1757, 2343, 2697, 587, 2696, 1173,
	1555, 1174, 1175, 185, 2346, 2348, 1173, 1295, 1174, 1175,
	185, 1176, 777, 2349, 2074, 805, 2378, 1176, 2130, 2131,
	778, 1756, 587, 2095, 1176, 749, 2165, 2166, 2412, 587,
	2162, 1792, 2181, 1462, 1462, 2100, 1036, 2092, 587, 2110,
	1176, 2136, 2158, 1676, 1035, 2499, 2695, 2176, 2107, 92,
	2222, 2202, 2057, 2142, 2253, 1144, 94, 1677, 2221, 2218,
	93, 185, 185, 185, 185, 185, 2149, 2146, 1878, 2064,
	2065, 1319, 1315, 2156, 2217, 120, 92, 2573, 101, 1803,
	1804, 1350, 185, 185, 94, 2159, 1316, 93, 2966, 100,
	2431, 99, 1975, 2056, 2169, 1319, 1315, 1964, 185, 2055,
	94, 1173, 2847, 1174, 1175, 2792, 2054, 1176, 2178, 2411,
	1316, 1783, 1784, 1318, 2134, 1317, 1790, 1658, 1963, 2186,
	785, 786, 2053, 2191, 2192, 2193, 2187, 1962, 2553, 1442,
	1991, 99, 2220, 2332, 2822, 1312, 1313, 1318, 2184, 1317,
	2821, 2331, 1173, 2714, 1174, 1175, 1176, 2712, 1173, 2711,
	1174, 1175, 2704, 2219, 1664, 1173, 1664, 1174, 1175, 1664,
	2635, 2212, 2213, 1792, 1664, 2572, 2279, 2570, 2444, 1911,
	2209, 1173, 101, 1174, 1175, 2283, 1437, 2242, 587, 2214,
	784, 101, 759, 100, 100, 99, 1662, 2703, 1662, 2047,
	2262, 1662, 100, 2561, 587, 2113, 1662, 2261, 2323, 2942,
	2941, 2245, 2306, 2316, 2317, 2318, 2319, 2098, 2293, 185,
	2022, 1777, 1347, 587, 1338, 2941, 2309, 2263, 2280, 106,
	107, 2310, 587, 2942, 2836, 2608, 775, 103, 2046, 587,
	587, 88, 185, 185, 185, 185, 185, 1, 1173, 2914,
	1174, 1175, 2323, 555, 185, 2351, 1368, 1767, 2297, 185,
	2336, 2304, 185, 2304, 185, 1293, 2304, 185, 185, 185,
	1528, 2304, 2366, 1518, 2664, 1725, 765, 2793, 2449, 2447,
	2337, 2360, 1917, 2251, 2633, 2386, 2252, 1173, 1876, 1174,
	1175, 997, 145, 1839, 2322, 1840, 1308, 2137, 2324, 2894,
	110, 957, 2427, 109, 1287, 2454, 1287, 1000, 1102, 1287,
	2335, 185, 1912, 2654, 1287, 2338, 2311, 2312, 2313, 2314,
	2315, 1176, 2163, 1848, 587, 2388, 2451, 2450, 2389, 805,
	2448, 767, 587, 1373, 2357, 1499, 1371, 185, 1372, 2357,
	2368, 2369, 1370, 2371, 1176, 1468, 2379, 185, 1176, 186,
	766, 186, 2367, 1375, 186, 2370, 1374, 2023, 2390, 2539,
	1607, 2465, 584, 95, 2339, 185, 2133, 1543, 185, 2396,
	2383, 2384, 2328, 805, 183, 1362, 1339, 1287, 2500, 1176,
	2364, 1468, 1287, 2422, 588, 2423, 588, 588, 1037, 1566,
	545, 2419, 1944, 551, 2473, 1216, 1602, 2330, 2150, 1575,
	804, 588, 588, 2045, 797, 2472, 1579, 2445, 2365, 1778,
	1176, 2088, 1878, 2464, 2325, 2326, 2327, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 2476, 2446, 2042, 2362, 2565, 2342,
	2041, 2344, 2105, 2347, 2340, 2829, 2705, 1176, 2886, 2533,
	2160, 1335, 2013, 2492, 2495, 2494, 1678, 1176, 1818, 1628,
	587, 185, 1173, 609, 1174, 1175, 1616, 2497, 2498, 2503,
	608, 2040, 606, 2091, 2114, 961, 2502, 2509, 1287, 1179,
	693, 2078, 1348, 1792, 2125, 1173, 2123, 1174, 1175, 1173,
	2122, 1174, 1175, 2506, 2507, 1973, 2508, 1825, 2589, 2510,
	2585, 2512, 2038, 2514, 2126, 2129, 2130, 2131, 2127, 2559,
	2128, 2132, 2906, 1820, 2587, 2588, 1816, 2097, 185, 617,
	1173, 610, 1174, 1175, 602, 2605, 2471, 2228, 2482, 2034,
	2230, 2161, 2554, 2555, 2478, 1157, 2611, 1311, 596, 2033,
	2584, 185, 970, 1675, 2798, 2562, 2853, 1990, 2569, 2521,
	2594, 1173, 1310, 1174, 1175, 1688, 1689, 2574, 2436, 2208,
	1904, 185, 2600, 2601, 185, 185, 185, 63, 41, 1716,
	2591, 591, 186, 2925, 587, 587, 588, 588, 1173, 2599,
	1174, 1175, 1148, 791, 32, 31, 2473, 2598, 1173, 30,
	1174, 1175, 186, 29, 28, 23, 22, 2472, 2606, 2607,
	21, 2339, 20, 2640, 2641, 19, 25, 2616, 18, 2618,
	17, 588, 16, 2457, 2935, 186, 587, 587, 587, 587,
	588, 2965, 115, 50, 47, 45, 588, 122, 121, 48,
	44, 1077, 42, 27, 26, 15, 14, 13, 12, 11,
	10, 9, 5, 4, 35, 34, 1805, 2660, 33, 1151,
	24, 2, 2453, 2452, 2195, 1809, 1906, 1812, 0, 0,
	1616, 0, 0, 0, 0, 0, 1664, 0, 1664, 0,
	2658, 2659, 0, 0, 2675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 2179, 0, 0, 0, 2671, 2182, 2183, 1662, 0,
	1662, 2672, 0, 0, 0, 0, 0, 0, 0, 0,
	2700, 587, 2683, 587, 0, 1792, 1792, 0, 0, 0,
	0, 2693, 0, 0, 0, 2684, 0, 0, 0, 1664,
	0, 0, 2729, 0, 0, 0, 0, 2721, 0, 0,
	2723, 0, 2710, 2701, 2709, 0, 0, 37, 0, 0,
	0, 0, 2360, 2719, 2717, 0, 2360, 2665, 2666, 2667,
	2668, 1662, 0, 2304, 0, 2304, 0, 2725, 587, 0,
	0, 0, 2730, 2731, 759, 0, 0, 0, 0, 2733,
	186, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 0, 0, 2774, 0, 2770,
	0, 0, 2772, 0, 2357, 2786, 1287, 2771, 1287, 0,
	2788, 0, 0, 0, 2795, 588, 0, 2787, 2778, 0,
	0, 0, 0, 2812, 1664, 587, 2813, 2816, 0, 587,
	587, 0, 588, 588, 0, 588, 0, 588, 588, 0,
	588, 588, 588, 588, 588, 588, 0, 1287, 0, 0,
	1616, 0, 2722, 0, 2724, 588, 1662, 1955, 587, 186,
	0, 0, 2826, 2825, 1969, 1970, 0, 0, 1974, 2828,
	2823, 2824, 0, 0, 0, 0, 186, 1977, 2839, 2837,
	0, 0, 0, 0, 1980, 0, 0, 2840, 0, 588,
	0, 186, 0, 0, 0, 2360, 0, 587, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 186, 0, 1792,
	1983, 0, 185, 2843, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 186, 0, 0, 2845, 587, 185, 0,
	186, 0, 0, 0, 0, 805, 2856, 0, 0, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 588, 0,
	2859, 0, 2852, 0, 0, 0, 2862, 0, 0, 0,
	37, 0, 588, 588, 0, 0, 2819, 0, 0, 587,
	2819, 2819, 0, 0, 0, 674, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 2424, 2425,
	0, 587, 587, 0, 0, 0, 2884, 0, 2879, 1792,
	0, 0, 2889, 0, 587, 2887, 0, 0, 0, 0,
	0, 2795, 2895, 185, 587, 37, 2893, 0, 2902, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 541,
	0, 0, 582, 2921, 2913, 2918, 2905, 0, 1792, 541,
	588, 0, 0, 2928, 0, 0, 0, 541, 0, 0,
	0, 0, 2934, 2939, 587, 588, 588, 2937, 0, 0,
	0, 0, 772, 587, 0, 2357, 0, 1664, 1792, 0,
	2953, 2948, 0, 2950, 2952, 0, 0, 0, 790, 2959,
	790, 0, 0, 2946, 0, 0, 0, 2967, 541, 0,
	0, 0, 0, 0, 0, 2972, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 1664, 0, 1287, 2975,
	2880, 2977, 2978, 2976, 0, 2813, 0, 181, 186, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	0, 2141, 805, 805, 0, 0, 0, 0, 1662, 1320,
	0, 120, 0, 142, 0, 2903, 0, 186, 0, 0,
	588, 0, 0, 0, 163, 2908, 0, 0, 0, 0,
	186, 0, 0, 0, 588, 0, 0, 0, 0, 186,
	0, 186, 0, 186, 186, 588, 0, 0, 588, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 588,
	141, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	2188, 0, 0, 0, 2908, 0, 0, 0, 0, 0,
	0, 160, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 151, 150, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2233, 2234,
	2235, 2236, 2237, 0, 0, 0, 0, 0, 2644, 0,
	588, 0, 2648, 2649, 2650, 0, 588, 0, 0, 1616,
	2246, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 2254, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 142, 0, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 146,
	127, 153, 134, 126, 0, 147, 148, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 135, 0, 0, 0, 152, 0, 0, 0, 0,
	141, 0, 0, 0, 186, 138, 136, 131, 132, 133,
	137, 186, 0, 0, 0, 0, 0, 128, 186, 186,
	0, 160, 186, 161, 186, 0, 139, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 186, 1445,
	1446, 151, 150, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 1441, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 2781, 2782, 2783,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 2432, 146,
	1447, 153, 0, 1444, 0, 147, 148, 0, 0, 0,
	160, 164, 161, 541, 0, 541, 0, 0, 541, 0,
	170, 0, 0, 0, 2468, 0, 0, 0, 1445, 1446,
	151, 150, 180, 0, 2477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 2493, 0, 0, 2496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 588, 0, 0, 0, 0, 0, 588, 0, 0,
	156, 0, 0, 0, 0, 0, 168, 0, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 1447,
	153, 0, 1444, 0, 147, 148, 0, 155, 2558, 0,
	164, 186, 0, 0, 0, 186, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 162, 159, 165, 166,
	167, 169, 171, 172, 173, 174, 0, 0, 0, 0,
	0, 175, 177, 178, 179, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 186, 149, 0, 0, 2614, 0,
	0, 186, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 2629, 0,
	588, 2630, 2631, 2632, 0, 0, 772, 0, 143, 588,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 541,
	0, 0, 186, 186, 186, 186, 186, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 186, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 162, 159, 165, 166,
	167, 169, 171, 172, 173, 174, 0, 0, 0, 0,
	0, 175, 177, 178, 179, 0, 0, 143, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 1322, 1324, 0, 156,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	186, 0, 0, 0, 588, 181, 0, 0, 0, 0,
	0, 0, 0, 588, 541, 0, 0, 0, 0, 0,
	588, 588, 0, 186, 186, 186, 186, 186, 0, 120,
	0, 0, 0, 0, 0, 186, 176, 0, 0, 0,
	186, 0, 163, 186, 0, 186, 0, 0, 186, 186,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 157, 162, 159, 165, 166, 167,
	169, 171, 172, 173, 174, 0, 0, 0, 0, 0,
	175, 177, 178, 179, 0, 0, 0, 1288, 1288, 0,
	0, 0, 186, 541, 0, 0, 0, 0, 0, 160,
	0, 161, 0, 0, 0, 588, 0, 0, 0, 0,
	1515, 0, 0, 588, 0, 0, 0, 0, 186, 0,
	0, 180, 0, 0, 0, 541, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1565, 0, 0, 0, 0, 186, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 1589, 541, 541, 541, 541, 541,
	541, 541, 0, 0, 0, 2863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 164,
	0, 588, 186, 0, 0, 0, 0, 0, 170, 0,
	84, 0, 0, 0, 43, 69, 70, 0, 67, 71,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 0, 0, 0, 790, 790, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 56, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 790, 1565, 790, 790, 790,
	790, 790, 186, 0, 0, 186, 186, 186, 0, 0,
	0, 0, 0, 0, 0, 588, 588, 0, 0, 0,
	0, 0, 1515, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 790, 0, 2735,
	2737, 2736, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 639,
	0, 772, 0, 0, 0, 0, 0, 588, 588, 588,
	588, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 1565, 0, 541, 0, 541, 0, 541, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 49, 52, 51, 54, 0, 66, 0, 0, 75,
	72, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 55, 83, 82, 0, 0, 64, 65, 53,
	0, 0, 0, 0, 0, 73, 74, 0, 0, 0,
	0, 0, 588, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	1322, 1765, 0, 0, 0, 57, 58, 0, 59, 60,
	61, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 1788, 0, 176, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 157, 162, 159, 165, 166, 167, 169,
	171, 172, 173, 174, 0, 0, 0, 0, 0, 175,
	177, 178, 179, 0, 0, 0, 588, 0, 541, 0,
	588, 588, 0, 0, 0, 541, 0, 0, 2741, 2742,
	0, 0, 541, 541, 0, 0, 541, 0, 1976, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 588,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1890, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 684,
	0, 634, 688, 636, 685, 686, 0, 632, 635, 687,
	86, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 186,
	0, 0, 0, 0, 0, 0, 637, 638, 2734, 2738,
	2739, 2740, 2743, 2744, 2745, 2753, 2755, 662, 2754, 2756,
	2757, 2758, 2761, 2762, 2763, 2764, 2759, 2760, 2765, 0,
	0, 790, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	0, 0, 541, 0, 0, 588, 0, 0, 0, 0,
	1515, 0, 0, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	2007, 0, 2008, 2009, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 2018, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 2026, 2027, 2028, 2029, 0, 2031, 0, 0,
	0, 0, 0, 2035, 0, 2036, 0, 0, 541, 2039,
	0, 0, 0, 0, 0, 2194, 0, 2048, 2049, 2050,
	2051, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	2062, 2063, 0, 0, 0, 0, 0, 0, 2068, 2069,
	2070, 2071, 2072, 0, 1788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 541, 541, 541,
	541, 0, 0, 0, 0, 0, 2933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1390, 541, 541, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 0, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	1288, 0, 0, 1288, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 700, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 1288, 541, 541, 541,
	541, 541, 0, 0, 0, 0, 0, 0, 0, 2380,
	0, 0, 0, 0, 541, 0, 0, 1515, 0, 541,
	0, 0, 541, 2391, 1565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 2290, 0, 0, 541, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 969, 0, 0,
	0, 0, 1288, 2305, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 2320, 2321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 541, 0, 1404, 1407, 1408, 1409, 1410,
	1411, 1412, 0, 1413, 1414, 1415, 1416, 1417, 1392, 1393,
	1394, 1395, 1376, 1377, 1405, 0, 1379, 0, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 2363, 1389,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 0, 0,
	0, 0, 0, 0, 0, 2381, 2382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 1407, 1408, 1409, 1410,
	1411, 1412, 0, 1413, 1414, 1415, 1416, 1417, 1392, 1393,
	1394, 1395, 1376, 1377, 1405, 0, 1379, 0, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 0, 0, 1389,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2501, 0,
	0, 0, 0, 0, 0, 2505, 541, 0, 0, 541,
	541, 541, 0, 0, 0, 0, 0, 0, 0, 2515,
	2516, 2518, 2520, 0, 0, 0, 0, 0, 0, 2526,
	0, 0, 0, 0, 2530, 2531, 2532, 0, 0, 0,
	0, 2535, 0, 0, 0, 0, 0, 2537, 0, 0,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	0, 0, 2551, 0, 0, 0, 0, 0, 2556, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2578, 2579, 0, 0, 2583, 0, 0, 0, 0,
	1288, 0, 1288, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2595, 2596, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1137, 0, 1137, 1137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 2681,
	0, 0, 0, 2682, 0, 0, 0, 0, 0, 2686,
	0, 0, 762, 1212, 1213, 1214, 0, 1217, 0, 1219,
	1220, 1221, 1222, 0, 1225, 1227, 1227, 0, 1227, 1231,
	1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 0, 1271,
	1272, 1273, 1274, 1275, 0, 0, 0, 0, 1231, 1231,
	1231, 1231, 1231, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 2801, 2802, 2803, 1297, 2804, 2805, 0,
	0, 0, 762, 2808, 0, 2809, 762, 2811, 2814, 0,
	0, 0, 762, 0, 2818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 694, 701, 702, 703,
	704, 705, 695, 697, 0, 0, 0, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 706, 707, 0, 0, 0, 0, 0, 2864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2869, 0, 0, 0, 0, 2874, 0, 0,
	0, 0, 0, 2875, 2876, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 0, 0, 2474, 2475, 0, 0,
	0, 2882, 0, 0, 0, 0, 0, 0, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 0,
	2924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2930, 0, 0, 0, 2931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 1624, 1625, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1668, 1669, 0,
	0, 0, 0, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1710, 1711, 1712, 1713, 1714, 1715, 1717, 1721, 1722, 600,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 694, 701, 702,
	703, 704, 705, 695, 697, 0, 0, 0, 696, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	1137, 699, 706, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1137, 1137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 1800, 684,
	0, 0, 688, 2087, 685, 686, 701, 702, 0, 687,
	0, 0, 1663, 0, 0, 0, 0, 2474, 2475, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	701, 702, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 1992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 2119, 2258, 0, 0, 0,
	0, 0, 0, 2138, 0, 2139, 2140, 0, 0, 0,
	0, 0, 0, 0, 2281, 2282, 0, 0, 0, 2285,
	0, 0, 0, 0, 2287, 2288, 2289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2294, 2295, 2296, 0,
	0, 1728, 2298, 0, 2299, 2300, 0, 0, 0, 2307,
	2308, 0, 0, 0, 0, 0, 0, 1728, 1728, 1728,
	1728, 1728, 600, 600, 600, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2215, 0, 0, 0, 0, 2352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	2523, 0, 0, 0, 0, 0, 0, 2529, 0, 0,
	2361, 0, 79, 0, 0, 1819, 1819, 1819, 1819, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2138, 762, 0, 0, 0, 1819, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2636, 0, 0, 0, 0, 2504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2673, 0, 2674, 0, 0, 0, 0, 2677, 2678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	2718, 0, 0, 0, 2604, 0, 0, 0, 0, 0,
	0, 2726, 0, 0, 2728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2827, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2694, 0, 2698, 2699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2361, 0, 79, 0, 2361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2922, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2854, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 939, 924, 458, 79, 870, 942, 839,
	858, 952, 861, 864, 906, 818, 884, 376, 855, 810,
	843, 813, 850, 814, 841, 872, 248, 838, 926, 888,
	941, 331, 245, 820, 844, 390, 860, 196, 908, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 948, 335, 894, 2883, 443, 361, 0,
	0, 79, 874, 930, 882, 920, 869, 907, 828, 893,
	943, 856, 903, 944, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 2896, 0,
	2897, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	852, 900, 938, 853, 902, 243, 291, 250, 242, 462,
	949, 929, 817, 881, 937, 0, 0, 213, 940, 876,
	0, 905, 0, 955, 812, 896, 0, 815, 819, 951,
	933, 847, 253, 0, 0, 0, 0, 0, 0, 0,
	873, 883, 917, 867, 0, 0, 0, 0, 0, 0,
	0, 845, 0, 892, 0, 0, 0, 824, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	871, 0, 0, 0, 827, 0, 846, 918, 0, 809,
	274, 821, 362, 235, 0, 922, 932, 868, 498, 936,
	866, 865, 912, 825, 928, 859, 330, 823, 299, 191,
	209, 0, 857, 372, 414, 420, 927, 842, 851, 233,
	849, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 891, 910, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 1139, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 837, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 923, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 915, 954, 385, 419, 223, 483, 442,
	832, 836, 830, 897, 831, 886, 887, 833, 945, 946,
	947, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	919, 826, 0, 834, 835, 0, 925, 934, 935, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	890, 190, 206, 333, 950, 407, 266, 514, 492, 488,
	811, 829, 240, 840, 848, 0, 854, 862, 863, 875,
	877, 878, 879, 880, 898, 899, 901, 909, 911, 914,
	916, 921, 931, 953, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 889,
	895, 344, 259, 279, 290, 904, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 885, 913, 340, 459, 460,
	286, 358, 0, 0, 939, 924, 458, 0, 870, 942,
	839, 858, 952, 861, 864, 906, 818, 884, 376, 855,
	810, 843, 813, 850, 814, 841, 872, 248, 838, 926,
	888, 941, 331, 245, 820, 844, 390, 860, 196, 908,
	433, 232, 341, 338, 465, 260, 251, 247, 231, 287,
	348, 388, 452, 382, 948, 335, 894, 0, 443, 361,
	0, 0, 0, 874, 930, 882, 920, 869, 907, 828,
	893, 943, 856, 903, 944, 293, 230, 195, 373, 444,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 852, 900, 938, 853, 902, 243, 291, 250, 242,
	462, 949, 929, 817, 881, 937, 0, 0, 213, 940,
	876, 0, 905, 0, 955, 812, 896, 0, 815, 819,
	951, 933, 847, 253, 0, 0, 0, 0, 0, 0,
	0, 873, 883, 917, 867, 0, 0, 0, 0, 0,
	2392, 0, 845, 0, 892, 0, 0, 0, 824, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 827, 0, 846, 918, 0,
	809, 274, 821, 362, 235, 0, 922, 932, 868, 498,
	936, 866, 865, 912, 825, 928, 859, 330, 823, 299,
	191, 209, 0, 857, 372, 414, 420, 927, 842, 851,
	233, 849, 418, 386, 481, 217, 262, 411, 391, 416,
	398, 265, 891, 910, 417, 336, 467, 405, 478, 499,
	500, 241, 366, 489, 456, 495, 513, 210, 238, 380,
	449, 484, 440, 359, 463, 464, 298, 439, 272, 194,
	334, 505, 208, 426, 225, 215, 469, 487, 267, 409,
	201, 451, 476, 222, 430, 0, 0, 515, 203, 474,
	448, 355, 295, 296, 202, 0, 410, 246, 270, 236,
	375, 471, 472, 234, 516, 212, 494, 205, 1139, 493,
	368, 466, 475, 356, 346, 204, 473, 354, 345, 301,
	320, 321, 258, 281, 403, 339, 404, 282, 364, 363,
	365, 197, 485, 0, 198, 0, 445, 486, 517, 218,
	219, 220, 837, 257, 261, 269, 271, 277, 278, 285,
	332, 379, 402, 400, 406, 923, 461, 479, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 512, 511, 367,
	284, 441, 300, 337, 915, 954, 385, 419, 223, 483,
	442, 832, 836, 830, 897, 831, 886, 887, 833, 945,
	946, 947, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 919, 826, 0, 834, 835, 0, 925, 934, 935,
	536, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 890, 190, 206, 333, 950, 407, 266, 514, 492,
	488, 811, 829, 240, 840, 848, 0, 854, 862, 863,
	875, 877, 878, 879, 880, 898, 899, 901, 909, 911,
	914, 916, 921, 931, 953, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 450, 468,
	470, 482, 496, 501, 427, 276, 477, 502, 0, 342,
	889, 895, 344, 259, 279, 290, 904, 491, 447, 211,
	415, 268, 200, 229, 214, 237, 252, 255, 294, 353,
	360, 389, 393, 273, 249, 227, 412, 224, 431, 453,
	454, 455, 457, 357, 244, 392, 885, 913, 340, 459,
	460, 286, 358, 0, 0, 939, 924, 458, 0, 870,
	942, 839, 858, 952, 861, 864, 906, 818, 884, 376,
	855, 810, 843, 813, 850, 814, 841, 872, 248, 838,
	926, 888, 941, 331, 245, 820, 844, 390, 860, 196,
	908, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 948, 335, 894, 0, 443,
	361, 0, 0, 0, 874, 930, 882, 920, 869, 907,
	828, 893, 943, 856, 903, 944, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 852, 900, 938, 853, 902, 243, 291, 250,
	242, 462, 949, 929, 817, 881, 937, 0, 0, 213,
	940, 876, 0, 905, 0, 955, 812, 896, 0, 815,
	819, 951, 933, 847, 253, 0, 0, 0, 0, 0,
	0, 0, 873, 883, 917, 867, 0, 0, 0, 0,
	0, 2350, 0, 845, 0, 892, 0, 0, 0, 824,
	816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 871, 0, 0, 0, 827, 0, 846, 918,
	0, 809, 274, 821, 362, 235, 0, 922, 932, 868,
	498, 936, 866, 865, 912, 825, 928, 859, 330, 823,
	299, 191, 209, 0, 857, 372, 414, 420, 927, 842,
	851, 233, 849, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 891, 910, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 1139,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 837, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 923, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 915, 954, 385, 419, 223,
	483, 442, 832, 836, 830, 897, 831, 886, 887, 833,
	945, 946, 947, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 919, 826, 0, 834, 835, 0, 925, 934,
	935, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 890, 190, 206, 333, 950, 407, 266, 514,
	492, 488, 811, 829, 240, 840, 848, 0, 854, 862,
	863, 875, 877, 878, 879, 880, 898, 899, 901, 909,
	911, 914, 916, 921, 931, 953, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 889, 895, 344, 259, 279, 290, 904, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 885, 913, 340,
	459, 460, 286, 358, 0, 0, 939, 924, 458, 0,
	870, 942, 839, 858, 952, 861, 864, 906, 818, 884,
	376, 855, 810, 843, 813, 850, 814, 841, 872, 248,
	838, 926, 888, 941, 331, 245, 820, 844, 390, 860,
	196, 908, 433, 232, 341, 338, 465, 260, 251, 247,
	231, 287, 348, 388, 452, 382, 948, 335, 894, 0,
	443, 361, 0, 0, 0, 874, 930, 882, 920, 869,
	907, 828, 893, 943, 856, 903, 944, 293, 230, 195,
	373, 444, 264, 0, 0, 0, 0, 187, 188, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 852, 900, 938, 853, 902, 243, 291,
	250, 242, 462, 949, 929, 817, 881, 937, 0, 0,
	213, 940, 876, 0, 905, 0, 955, 812, 896, 0,
	815, 819, 951, 933, 847, 253, 0, 0, 0, 0,
	0, 0, 0, 873, 883, 917, 867, 0, 0, 0,
	0, 0, 1807, 0, 845, 0, 892, 0, 0, 0,
	824, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 827, 0, 846,
	918, 0, 809, 274, 821, 362, 235, 0, 922, 932,
	868, 498, 936, 866, 865, 912, 825, 928, 859, 330,
	823, 299, 191, 209, 0, 857, 372, 414, 420, 927,
	842, 851, 233, 849, 418, 386, 481, 217, 262, 411,
	391, 416, 398, 265, 891, 910, 417, 336, 467, 405,
	478, 499, 500, 241, 366, 489, 456, 495, 513, 210,
	238, 380, 449, 484, 440, 359, 463, 464, 298, 439,
	272, 194, 334, 505, 208, 426, 225, 215, 469, 487,
	267, 409, 201, 451, 476, 222, 430, 0, 0, 515,
	203, 474, 448, 355, 295, 296, 202, 0, 410, 246,
	270, 236, 375, 471, 472, 234, 516, 212, 494, 205,
	1139, 493, 368, 466, 475, 356, 346, 204, 473, 354,
	345, 301, 320, 321, 258, 281, 403, 339, 404, 282,
	364, 363, 365, 197, 485, 0, 198, 0, 445, 486,
	517, 218, 219, 220, 837, 257, 261, 269, 271, 277,
	278, 285, 332, 379, 402, 400, 406, 923, 461, 479,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 512,
	511, 367, 284, 441, 300, 337, 915, 954, 385, 419,
	223, 483, 442, 832, 836, 830, 897, 831, 886, 887,
	833, 945, 946, 947, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 919, 826, 0, 834, 835, 0, 925,
	934, 935, 536, 347, 432, 480, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 890, 190, 206, 333, 950, 407, 266,
	514, 492, 488, 811, 829, 240, 840, 848, 0, 854,
	862, 863, 875, 877, 878, 879, 880, 898, 899, 901,
	909, 911, 914, 916, 921, 931, 953, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 394,
	395, 396, 397, 399, 401, 408, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	450, 468, 470, 482, 496, 501, 427, 276, 477, 502,
	0, 342, 889, 895, 344, 259, 279, 290, 904, 491,
	447, 211, 415, 268, 200, 229, 214, 237, 252, 255,
	294, 353, 360, 389, 393, 273, 249, 227, 412, 224,
	431, 453, 454, 455, 457, 357, 244, 392, 885, 913,
	340, 459, 460, 286, 358, 0, 0, 939, 924, 458,
	0, 870, 942, 839, 858, 952, 861, 864, 906, 818,
	884, 376, 855, 810, 843, 813, 850, 814, 841, 872,
	248, 838, 926, 888, 941, 331, 245, 820, 844, 390,
	860, 196, 908, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 948, 335, 894,
	0, 443, 361, 0, 0, 0, 874, 930, 882, 920,
	869, 907, 828, 893, 943, 856, 903, 944, 293, 230,
	195, 373, 444, 264, 0, 87, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 852, 900, 938, 853, 902, 243,
	291, 250, 242, 462, 949, 929, 817, 881, 937, 0,
	0, 213, 940, 876, 0, 905, 0, 955, 812, 896,
	0, 815, 819, 951, 933, 847, 253, 0, 0, 0,
	0, 0, 0, 0, 873, 883, 917, 867, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 892, 0, 0,
	0, 824, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 871, 0, 0, 0, 827, 0,
	846, 918, 0, 809, 274, 821, 362, 235, 0, 922,
	932, 868, 498, 936, 866, 865, 912, 825, 928, 859,
	330, 823, 299, 191, 209, 0, 857, 372, 414, 420,
	927, 842, 851, 233, 849, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 891, 910, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 1139, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 837, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 923, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 915, 954, 385,
	419, 223, 483, 442, 832, 836, 830, 897, 831, 886,
	887, 833, 945, 946, 947, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 919, 826, 0, 834, 835, 0,
	925, 934, 935, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 890, 190, 206, 333, 950, 407,
	266, 514, 492, 488, 811, 829, 240, 840, 848, 0,
	854, 862, 863, 875, 877, 878, 879, 880, 898, 899,
	901, 909, 911, 914, 916, 921, 931, 953, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 889, 895, 344, 259, 279, 290, 904,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 885,
	913, 340, 459, 460, 286, 358, 0, 0, 939, 924,
	458, 0, 870, 942, 839, 858, 952, 861, 864, 906,
	818, 884, 376, 855, 810, 843, 813, 850, 814, 841,
	872, 248, 838, 926, 888, 941, 331, 245, 820, 844,
	390, 860, 196, 908, 433, 232, 341, 338, 465, 260,
	251, 247, 231, 287, 348, 388, 452, 382, 948, 335,
	894, 0, 443, 361, 0, 0, 0, 874, 930, 882,
	920, 869, 907, 828, 893, 943, 856, 903, 944, 293,
	230, 195, 373, 444, 264, 0, 0, 0, 0, 187,
	188, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 852, 900, 938, 853, 902,
	243, 291, 250, 242, 462, 949, 929, 817, 881, 937,
	0, 0, 213, 940, 876, 0, 905, 0, 955, 812,
	896, 0, 815, 819, 951, 933, 847, 253, 0, 0,
	0, 0, 0, 0, 0, 873, 883, 917, 867, 0,
	0, 0, 0, 0, 0, 0, 845, 0, 892, 0,
	0, 0, 824, 816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 0, 827,
	0, 846, 918, 0, 809, 274, 821, 362, 235, 0,
	922, 932, 868, 498, 936, 866, 865, 912, 825, 928,
	859, 330, 823, 299, 191, 209, 0, 857, 372, 414,
	420, 927, 842, 851, 233, 849, 418, 386, 481, 217,
	262, 411, 391, 416, 398, 265, 891, 910, 417, 336,
	467, 405, 478, 499, 500, 241, 366, 489, 456, 495,
	513, 210, 238, 380, 449, 484, 440, 359, 463, 464,
	298, 439, 272, 194, 334, 505, 208, 426, 225, 215,
	469, 487, 267, 409, 201, 451, 476, 222, 430, 0,
	0, 515, 203, 474, 448, 355, 295, 296, 202, 0,
	410, 246, 270, 236, 375, 471, 472, 234, 516, 212,
	494, 205, 1139, 493, 368, 466, 475, 356, 346, 204,
	473, 354, 345, 301, 320, 321, 258, 281, 403, 339,
	404, 282, 364, 363, 365, 197, 485, 0, 198, 0,
	445, 486, 517, 218, 219, 220, 837, 257, 261, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 923,
	461, 479, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 512, 511, 367, 284, 441, 300, 337, 915, 954,
	385, 419, 223, 483, 442, 832, 836, 830, 897, 831,
	886, 887, 833, 945, 946, 947, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 919, 826, 0, 834, 835,
	0, 925, 934, 935, 536, 347, 432, 480, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 890, 190, 206, 333, 950,
	407, 266, 514, 492, 488, 811, 829, 240, 840, 848,
	0, 854, 862, 863, 875, 877, 878, 879, 880, 898,
	899, 901, 909, 911, 914, 916, 921, 931, 953, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 450, 468, 470, 482, 496, 501, 427, 276,
	477, 502, 0, 342, 889, 895, 344, 259, 279, 290,
	904, 491, 447, 211, 415, 268, 200, 229, 214, 237,
	252, 255, 294, 353, 360, 389, 393, 273, 249, 227,
	412, 224, 431, 453, 454, 455, 457, 357, 244, 392,
	885, 913, 340, 459, 460, 286, 358, 0, 0, 939,
	924, 458, 0, 870, 942, 839, 858, 952, 861, 864,
	906, 818, 884, 376, 855, 810, 843, 813, 850, 814,
	841, 872, 248, 838, 926, 888, 941, 331, 245, 820,
	844, 390, 860, 196, 908, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 948,
	335, 894, 0, 443, 361, 0, 0, 0, 874, 930,
	882, 920, 869, 907, 828, 893, 943, 856, 903, 944,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 852, 900, 938, 853,
	902, 243, 291, 250, 242, 462, 949, 929, 817, 881,
	937, 0, 0, 956, 940, 876, 0, 905, 0, 955,
	812, 896, 0, 815, 819, 951, 933, 847, 253, 0,
	0, 0, 0, 0, 0, 0, 873, 883, 917, 867,
	0, 0, 0, 0, 0, 0, 0, 845, 0, 892,
	0, 0, 0, 824, 816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 871, 0, 0, 0,
	827, 0, 846, 918, 0, 809, 274, 821, 362, 235,
	0, 922, 932, 868, 498, 936, 866, 865, 912, 825,
	928, 859, 330, 823, 299, 191, 209, 0, 857, 372,
	414, 420, 927, 842, 851, 233, 849, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 891, 910, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 822, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 837, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	923, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 808, 802, 801, 300, 337, 915,
	954, 385, 419, 223, 483, 442, 832, 836, 830, 897,
	831, 886, 887, 833, 945, 946, 947, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 919, 826, 0, 834,
	835, 0, 925, 934, 935, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 890, 190, 206, 333,
	950, 407, 266, 514, 492, 488, 811, 829, 240, 840,
	848, 0, 854, 862, 863, 875, 877, 878, 879, 880,
	898, 899, 901, 909, 911, 914, 916, 921, 931, 953,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 889, 895, 344, 259, 279,
	290, 904, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 885, 913, 340, 459, 460, 286, 358, 0, 0,
	939, 924, 458, 0, 870, 942, 839, 858, 952, 861,
	864, 906, 818, 884, 376, 855, 810, 843, 813, 850,
	814, 841, 872, 248, 838, 926, 888, 941, 331, 245,
	820, 844, 390, 860, 196, 908, 433, 232, 341, 338,
	465, 260, 251, 247, 231, 287, 348, 388, 452, 382,
	948, 335, 894, 0, 443, 361, 0, 0, 0, 874,
	930, 882, 920, 869, 907, 828, 893, 943, 856, 903,
	944, 293, 230, 195, 373, 444, 264, 0, 0, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 852, 900, 938,
	853, 902, 243, 291, 250, 242, 462, 949, 929, 817,
	881, 937, 0, 0, 956, 940, 876, 0, 905, 0,
	955, 812, 896, 0, 815, 819, 951, 933, 847, 253,
	0, 0, 0, 0, 0, 0, 0, 873, 883, 917,
	867, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	892, 0, 0, 0, 824, 816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 827, 0, 846, 918, 0, 809, 274, 821, 362,
	235, 0, 922, 932, 868, 498, 936, 866, 865, 912,
	825, 928, 859, 330, 823, 299, 191, 209, 0, 857,
	372, 414, 420, 927, 842, 851, 233, 849, 418, 386,
	481, 217, 262, 411, 391, 416, 398, 265, 891, 910,
	417, 336, 467, 405, 478, 499, 500, 241, 366, 489,
	456, 495, 513, 210, 238, 380, 449, 484, 440, 359,
	463, 464, 298, 439, 272, 194, 334, 505, 208, 426,
	225, 215, 469, 487, 267, 409, 201, 451, 1354, 222,
	430, 0, 0, 515, 203, 474, 448, 355, 295, 296,
	202, 0, 410, 246, 270, 236, 375, 471, 472, 234,
	516, 212, 494, 205, 822, 493, 368, 466, 475, 356,
	346, 204, 473, 354, 345, 301, 320, 321, 258, 281,
	403, 339, 404, 282, 364, 363, 365, 197, 485, 0,
	198, 0, 445, 486, 517, 218, 219, 220, 837, 257,
	261, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 923, 461, 479, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 512, 511, 808, 802, 801, 300, 337,
	915, 954, 385, 419, 223, 483, 442, 832, 836, 830,
	897, 831, 886, 887, 833, 945, 946, 947, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 919, 826, 0,
	834, 835, 0, 925, 934, 935, 536, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 890, 190, 206,
	333, 950, 407, 266, 514, 492, 488, 811, 829, 240,
	840, 848, 0, 854, 862, 863, 875, 877, 878, 879,
	880, 898, 899, 901, 909, 911, 914, 916, 921, 931,
	953, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 450, 468, 470, 482, 496, 501,
	427, 276, 477, 502, 0, 342, 889, 895, 344, 259,
	279, 290, 904, 491, 447, 211, 415, 268, 200, 229,
	214, 237, 252, 255, 294, 353, 360, 389, 393, 273,
	249, 227, 412, 224, 431, 453, 454, 455, 457, 357,
	244, 392, 885, 913, 340, 459, 460, 286, 358, 0,
	0, 939, 924, 458, 0, 870, 942, 839, 858, 952,
	861, 864, 906, 818, 884, 376, 855, 810, 843, 813,
	850, 814, 841, 872, 248, 838, 926, 888, 941, 331,
	245, 820, 844, 390, 860, 196, 908, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 948, 335, 894, 0, 443, 361, 0, 0, 0,
	874, 930, 882, 920, 869, 907, 828, 893, 943, 856,
	903, 944, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 852, 900,
	938, 853, 902, 243, 291, 250, 242, 462, 949, 929,
	817, 881, 937, 0, 0, 956, 940, 876, 0, 905,
	0, 955, 812, 896, 0, 815, 819, 951, 933, 847,
	253, 0, 0, 0, 0, 0, 0, 0, 873, 883,
	917, 867, 0, 0, 0, 0, 0, 0, 0, 845,
	0, 892, 0, 0, 0, 824, 816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	0, 0, 827, 0, 846, 918, 0, 809, 274, 821,
	362, 235, 0, 922, 932, 868, 498, 936, 866, 865,
	912, 825, 928, 859, 330, 823, 299, 191, 209, 0,
	857, 372, 414, 420, 927, 842, 851, 233, 849, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 891,
	910, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 799,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 822, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 837,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 923, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 808, 802, 801, 300,
	337, 915, 954, 385, 419, 223, 483, 442, 832, 836,
	830, 897, 831, 886, 887, 833, 945, 946, 947, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 919, 826,
	0, 834, 835, 0, 925, 934, 935, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 890, 190,
	206, 333, 950, 407, 266, 514, 492, 488, 811, 829,
	240, 840, 848, 0, 854, 862, 863, 875, 877, 878,
	879, 880, 898, 899, 901, 909, 911, 914, 916, 921,
	931, 953, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 889, 895, 344,
	259, 279, 290, 904, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 885, 913, 340, 459, 460, 286, 358,
	0, 0, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 1752,
	0, 618, 0, 0, 0, 248, 623, 0, 0, 0,
	331, 245, 0, 1753, 390, 0, 196, 0, 433, 232,
	341, 338, 465, 260, 251, 247, 231, 287, 348, 388,
	452, 382, 630, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 230, 195, 373, 444, 264, 0,
	87, 0, 0, 187, 188, 189, 694, 701, 702, 703,
	704, 705, 695, 697, 0, 0, 221, 696, 228, 641,
	643, 642, 652, 653, 654, 655, 656, 657, 658, 639,
	699, 706, 707, 0, 243, 291, 250, 242, 462, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 601, 615, 0, 629, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 612, 613, 788, 0,
	0, 0, 678, 0, 614, 0, 0, 622, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 235, 0, 677, 0, 0, 498, 0, 0,
	675, 0, 0, 0, 0, 330, 0, 299, 191, 209,
	0, 0, 372, 414, 420, 0, 0, 0, 233, 0,
	418, 386, 481, 217, 262, 411, 391, 416, 398, 265,
	0, 0, 417, 336, 467, 405, 478, 499, 500, 241,
	366, 489, 456, 495, 513, 210, 238, 380, 449, 484,
	440, 359, 463, 464, 298, 439, 272, 194, 334, 505,
	208, 426, 225, 215, 469, 487, 267, 409, 201, 451,
	476, 222, 430, 0, 0, 515, 203, 474, 448, 355,
	295, 296, 202, 0, 410, 246, 270, 236, 375, 471,
	472, 234, 516, 212, 494, 205, 0, 493, 368, 466,
	475, 356, 346, 204, 473, 354, 345, 301, 647, 648,
	258, 281, 403, 339, 404, 282, 364, 363, 365, 197,
	485, 0, 198, 0, 445, 486, 517, 218, 219, 220,
	0, 257, 261, 269, 271, 277, 278, 285, 332, 379,
	402, 400, 406, 0, 461, 479, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 512, 511, 367, 284, 441,
	300, 337, 0, 0, 385, 419, 223, 483, 442, 684,
	676, 634, 688, 636, 685, 686, 631, 632, 635, 687,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 679,
	621, 620, 0, 627, 628, 0, 637, 638, 640, 644,
	645, 646, 649, 650, 651, 659, 661, 662, 660, 663,
	664, 665, 668, 669, 670, 671, 666, 667, 672, 619,
	190, 206, 333, 0, 407, 266, 514, 492, 488, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 394, 395, 396, 397, 399,
	401, 408, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 450, 468, 470, 482,
	496, 501, 427, 276, 477, 502, 0, 342, 0, 0,
	344, 259, 279, 290, 0, 491, 447, 211, 415, 268,
	200, 229, 214, 237, 252, 255, 294, 353, 360, 389,
	393, 273, 249, 227, 412, 224, 431, 453, 454, 455,
	457, 357, 244, 392, 0, 358, 340, 459, 460, 286,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 618, 0, 0,
	0, 248, 623, 0, 0, 0, 331, 245, 0, 0,
	390, 0, 196, 0, 433, 232, 341, 338, 465, 260,
	251, 247, 231, 287, 348, 388, 452, 382, 630, 335,
	0, 0, 443, 361, 0, 0, 0, 0, 0, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	230, 195, 373, 444, 264, 0, 87, 0, 0, 187,
	188, 189, 694, 701, 702, 703, 704, 705, 695, 697,
	0, 0, 221, 696, 228, 641, 643, 642, 652, 653,
	654, 655, 656, 657, 658, 639, 699, 706, 707, 0,
	243, 291, 250, 242, 462, 0, 0, 1718, 1719, 1720,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	601, 615, 0, 629, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 612, 613, 0, 0, 0, 0, 678, 0,
	614, 0, 0, 622, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 235, 0,
	677, 0, 0, 498, 0, 0, 675, 0, 0, 0,
	0, 330, 0, 299, 191, 209, 0, 0, 372, 414,
	420, 0, 0, 0, 233, 0, 418, 386, 481, 217,
	262, 411, 391, 416, 398, 265, 0, 0, 417, 336,
	467, 405, 478, 499, 500, 241, 366, 489, 456, 495,
	513, 210, 238, 380, 449, 484, 440, 359, 463, 464,
	298, 439, 272, 194, 334, 505, 208, 426, 225, 215,
	469, 487, 267, 409, 201, 451, 476, 222, 430, 0,
	0, 515, 203, 474, 448, 355, 295, 296, 202, 0,
	410, 246, 270, 236, 375, 471, 472, 234, 516, 212,
	494, 205, 0, 493, 368, 466, 475, 356, 346, 204,
	473, 354, 345, 301, 647, 648, 258, 281, 403, 339,
	404, 282, 364, 363, 365, 197, 485, 0, 198, 0,
	445, 486, 517, 218, 219, 220, 0, 257, 261, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	461, 479, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 512, 511, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 223, 483, 442, 684, 676, 634, 688, 636,
	685, 686, 631, 632, 635, 687, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 679, 621, 620, 0, 627,
	628, 0, 637, 638, 640, 644, 645, 646, 649, 650,
	651, 659, 661, 662, 660, 663, 664, 665, 668, 669,
	670, 671, 666, 667, 672, 619, 190, 206, 333, 0,
	407, 266, 514, 492, 488, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 450, 468, 470, 482, 496, 501, 427, 276,
	477, 502, 0, 342, 0, 0, 344, 259, 279, 290,
	0, 491, 447, 211, 415, 268, 200, 229, 214, 237,
	252, 255, 294, 353, 360, 389, 393, 273, 249, 227,
	412, 224, 431, 453, 454, 455, 457, 357, 244, 392,
	0, 358, 340, 459, 460, 286, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 618, 0, 0, 0, 248, 623, 0,
	0, 0, 331, 245, 0, 0, 390, 0, 196, 0,
	433, 232, 341, 338, 465, 260, 251, 247, 231, 287,
	348, 388, 452, 382, 630, 335, 0, 0, 443, 361,
	0, 0, 0, 0, 0, 625, 626, 0, 0, 0,
	0, 0, 0, 1834, 0, 293, 230, 195, 373, 444,
	264, 0, 87, 0, 0, 187, 188, 189, 694, 701,
	702, 703, 704, 705, 695, 697, 0, 0, 221, 696,
	228, 641, 643, 642, 652, 653, 654, 655, 656, 657,
	658, 639, 699, 706, 707, 1835, 243, 291, 250, 242,
	462, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 601, 615, 0, 629,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 613,
	0, 0, 0, 0, 678, 0, 614, 0, 0, 622,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 235, 0, 677, 0, 0, 498,
	0, 0, 675, 0, 0, 0, 0, 330, 0, 299,
	191, 209, 0, 0, 372, 414, 420, 0, 0, 0,
	233, 0, 418, 386, 481, 217, 262, 411, 391, 416,
	398, 265, 0, 0, 417, 336, 467, 405, 478, 499,
	500, 241, 366, 489, 456, 495, 513, 210, 238, 380,
	449, 484, 440, 359, 463, 464, 298, 439, 272, 194,
	334, 505, 208, 426, 225, 215, 469, 487, 267, 409,
	201, 451, 476, 222, 430, 0, 0, 515, 203, 474,
	448, 355, 295, 296, 202, 0, 410, 246, 270, 236,
	375, 471, 472, 234, 516, 212, 494, 205, 0, 493,
	368, 466, 475, 356, 346, 204, 473, 354, 345, 301,
	647, 648, 258, 281, 403, 339, 404, 282, 364, 363,
	365, 197, 485, 0, 198, 0, 445, 486, 517, 218,
	219, 220, 0, 257, 261, 269, 271, 277, 278, 285,
	332, 379, 402, 400, 406, 0, 461, 479, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 512, 511, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 223, 483,
	442, 684, 676, 634, 688, 636, 685, 686, 631, 632,
	635, 687, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 679, 621, 620, 0, 627, 628, 0, 637, 638,
	640, 644, 645, 646, 649, 650, 651, 659, 661, 662,
	660, 663, 664, 665, 668, 669, 670, 671, 666, 667,
	672, 619, 190, 206, 333, 0, 407, 266, 514, 492,
	488, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 450, 468,
	470, 482, 496, 501, 427, 276, 477, 502, 0, 342,
	0, 0, 344, 259, 279, 290, 0, 491, 447, 211,
	415, 268, 200, 229, 214, 237, 252, 255, 294, 353,
	360, 389, 393, 273, 249, 227, 412, 224, 431, 453,
	454, 455, 457, 357, 244, 392, 0, 0, 340, 459,
	460, 286, 358, 0, 0, 0, 78, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 618, 0, 0, 0, 248, 623,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 630, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 87, 0, 0, 187, 188, 189, 694,
	701, 702, 703, 704, 705, 695, 697, 0, 0, 221,
	696, 228, 641, 643, 642, 652, 653, 654, 655, 656,
	657, 658, 639, 699, 706, 707, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 601, 615, 0,
	629, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 612,
	613, 0, 0, 0, 0, 678, 0, 614, 0, 0,
	622, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 677, 0, 0,
	498, 0, 0, 675, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 647, 648, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 684, 676, 634, 688, 636, 685, 686, 631,
	632, 635, 687, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 679, 621, 620, 0, 627, 628, 0, 637,
	638, 640, 644, 645, 646, 649, 650, 651, 659, 661,
	662, 660, 663, 664, 665, 668, 669, 670, 671, 666,
	667, 672, 619, 190, 206, 333, 86, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	618, 0, 0, 0, 248, 623, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 630, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 87,
	0, 0, 187, 188, 189, 694, 701, 702, 703, 704,
	705, 695, 697, 0, 0, 221, 696, 228, 641, 643,
	642, 652, 653, 654, 655, 656, 657, 658, 639, 699,
	706, 707, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 601, 615, 0, 629, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 612, 613, 0, 0, 0,
	0, 678, 0, 614, 0, 0, 622, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 677, 0, 0, 498, 0, 0, 675,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 2890,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 647, 648, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 684, 676,
	634, 688, 636, 685, 686, 631, 632, 635, 687, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 679, 621,
	620, 0, 627, 628, 0, 637, 638, 640, 644, 645,
	646, 649, 650, 651, 659, 661, 662, 660, 663, 664,
	665, 668, 669, 670, 671, 666, 667, 672, 619, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 618, 0, 0, 0,
	248, 623, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 630, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 87, 0, 1321, 187, 188,
	189, 694, 701, 702, 703, 704, 705, 695, 697, 0,
	0, 221, 696, 228, 641, 643, 642, 652, 653, 654,
	655, 656, 657, 658, 639, 699, 706, 707, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 601,
	615, 0, 629, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 613, 0, 0, 0, 0, 678, 0, 614,
	0, 0, 622, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 677,
	0, 0, 498, 0, 0, 675, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 647, 648, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 684, 676, 634, 688, 636, 685,
	686, 631, 632, 635, 687, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 679, 621, 620, 0, 627, 628,
	0, 637, 638, 640, 644, 645, 646, 649, 650, 651,
	659, 661, 662, 660, 663, 664, 665, 668, 669, 670,
	671, 666, 667, 672, 619, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 618, 0, 0, 0, 248, 623, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 630, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 87, 0, 0, 187, 188, 189, 694, 701, 702,
	703, 704, 705, 695, 697, 0, 0, 221, 696, 228,
	641, 643, 642, 652, 653, 654, 655, 656, 657, 658,
	639, 699, 706, 707, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 601, 615, 0, 629, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 613, 788,
	0, 0, 0, 678, 0, 614, 0, 0, 622, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 677, 0, 0, 498, 0,
	0, 675, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 647,
	648, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	684, 676, 634, 688, 636, 685, 686, 631, 632, 635,
	687, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	679, 621, 620, 0, 627, 628, 0, 637, 638, 640,
	644, 645, 646, 649, 650, 651, 659, 661, 662, 660,
	663, 664, 665, 668, 669, 670, 671, 666, 667, 672,
	619, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 618, 0,
	0, 0, 248, 623, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 630,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 87, 0, 0,
	187, 188, 189, 694, 701, 702, 703, 704, 705, 695,
	697, 0, 0, 221, 696, 228, 641, 643, 642, 652,
	653, 654, 655, 656, 657, 658, 639, 699, 706, 707,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 601, 615, 0, 629, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 612, 613, 0, 0, 0, 0, 678,
	0, 614, 0, 0, 622, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 677, 0, 0, 498, 0, 0, 675, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 647, 648, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 684, 676, 634, 688,
	636, 685, 686, 631, 632, 635, 687, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 679, 621, 620, 0,
	627, 628, 0, 637, 638, 640, 644, 645, 646, 649,
	650, 651, 659, 661, 662, 660, 663, 664, 665, 668,
	669, 670, 671, 666, 667, 672, 619, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 618, 0, 0, 0, 248, 623,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 630, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 87, 0, 0, 187, 188, 189, 694,
	701, 702, 703, 704, 705, 695, 697, 0, 0, 221,
	696, 228, 641, 643, 642, 652, 653, 654, 655, 656,
	657, 658, 639, 699, 706, 707, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	629, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 612,
	613, 0, 0, 0, 0, 678, 0, 614, 0, 0,
	622, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 677, 0, 0,
	498, 0, 0, 675, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 647, 648, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 684, 676, 634, 688, 636, 685, 686, 631,
	632, 635, 687, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 679, 621, 620, 0, 627, 628, 0, 637,
	638, 640, 644, 645, 646, 649, 650, 651, 659, 661,
	662, 660, 663, 664, 665, 668, 669, 670, 671, 666,
	667, 672, 619, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 701, 702, 0, 0,
	0, 0, 1663, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 1004, 498, 0, 0, 0, 0, 0, 1001, 1002,
	330, 964, 299, 191, 209, 995, 999, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	0, 340, 459, 460, 286, 358, 0, 0, 0, 78,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 331, 245, 0, 0,
	390, 0, 196, 0, 433, 232, 341, 338, 465, 260,
	251, 247, 231, 287, 348, 388, 452, 382, 0, 335,
	0, 0, 443, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	230, 195, 373, 444, 264, 0, 87, 0, 0, 187,
	188, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	243, 291, 250, 242, 462, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 235, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 191, 209, 0, 0, 372, 414,
	420, 0, 0, 0, 233, 0, 418, 386, 481, 217,
	262, 411, 391, 416, 398, 265, 0, 0, 417, 336,
	467, 405, 478, 499, 500, 241, 366, 489, 456, 495,
	513, 210, 238, 380, 449, 484, 440, 359, 463, 464,
	298, 439, 272, 194, 334, 505, 208, 426, 225, 215,
	469, 487, 267, 409, 201, 451, 476, 222, 430, 0,
	0, 515, 203, 474, 448, 355, 295, 296, 202, 0,
	410, 246, 270, 236, 375, 471, 472, 234, 516, 212,
	494, 205, 0, 493, 368, 466, 475, 356, 346, 204,
	473, 354, 345, 301, 320, 321, 258, 281, 403, 339,
	404, 282, 364, 363, 365, 197, 485, 0, 198, 0,
	445, 486, 517, 218, 219, 220, 0, 257, 261, 269,
	271, 277, 278, 285, 332, 379, 402, 400, 406, 0,
	461, 479, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 512, 511, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 223, 483, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 347, 432, 480, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 190, 206, 333, 86,
	407, 266, 514, 492, 488, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 394, 395, 396, 397, 399, 401, 408, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 450, 468, 470, 482, 496, 501, 427, 276,
	477, 502, 0, 342, 0, 0, 344, 259, 279, 290,
	0, 491, 447, 211, 415, 268, 200, 229, 214, 237,
	252, 255, 294, 353, 360, 389, 393, 273, 249, 227,
	412, 224, 431, 453, 454, 455, 457, 357, 244, 392,
	0, 1340, 340, 459, 460, 286, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 1342, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 331, 245, 0, 0, 390, 0, 196, 0,
	433, 232, 341, 338, 465, 260, 251, 247, 231, 287,
	348, 388, 452, 382, 0, 335, 0, 0, 443, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 230, 195, 373, 444,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 243, 291, 250, 242,
	462, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 0, 1173, 0, 1174, 1175, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 235, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	191, 209, 0, 0, 372, 414, 420, 0, 0, 0,
	233, 0, 418, 386, 481, 217, 262, 411, 391, 416,
	398, 265, 0, 0, 417, 336, 467, 405, 478, 499,
	500, 241, 366, 489, 456, 495, 513, 210, 238, 380,
	449, 484, 440, 359, 463, 464, 298, 439, 272, 194,
	334, 505, 208, 426, 225, 215, 469, 487, 267, 409,
	201, 451, 476, 222, 430, 0, 0, 515, 203, 474,
	448, 355, 295, 296, 202, 0, 410, 246, 270, 236,
	375, 471, 472, 234, 516, 212, 494, 205, 0, 493,
	368, 466, 475, 356, 346, 204, 473, 354, 345, 301,
	320, 321, 258, 281, 403, 339, 404, 282, 364, 363,
	365, 197, 485, 0, 198, 0, 445, 486, 517, 218,
	219, 220, 0, 257, 261, 269, 271, 277, 278, 285,
	332, 379, 402, 400, 406, 0, 461, 479, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 512, 511, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 223, 483,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 190, 206, 333, 0, 407, 266, 514, 492,
	488, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 394, 395, 396,
	397, 399, 401, 408, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 450, 468,
	470, 482, 496, 501, 427, 276, 477, 502, 0, 342,
	0, 0, 344, 259, 279, 290, 0, 491, 447, 211,
	415, 268, 200, 229, 214, 237, 252, 255, 294, 353,
	360, 389, 393, 273, 249, 227, 412, 224, 431, 453,
	454, 455, 457, 357, 244, 392, 0, 358, 340, 459,
	460, 286, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 331, 245,
	0, 0, 390, 0, 196, 0, 433, 232, 341, 338,
	465, 260, 251, 247, 231, 287, 348, 388, 452, 382,
	0, 335, 0, 0, 443, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 230, 195, 373, 444, 264, 0, 0, 0,
	0, 187, 188, 189, 1283, 1286, 0, 0, 0, 0,
	1282, 1285, 0, 0, 221, 1281, 228, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 243, 291, 250, 242, 462, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	235, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 191, 209, 0, 0,
	372, 414, 420, 0, 0, 0, 233, 0, 418, 386,
	481, 217, 262, 411, 391, 416, 398, 265, 0, 0,
	417, 336, 467, 405, 478, 499, 500, 241, 366, 489,
	456, 495, 513, 210, 238, 380, 449, 484, 440, 359,
	463, 464, 298, 439, 272, 194, 334, 505, 208, 426,
	225, 215, 469, 487, 267, 409, 201, 451, 476, 222,
	430, 0, 0, 515, 203, 474, 448, 355, 295, 296,
	202, 0, 410, 246, 270, 236, 375, 471, 472, 234,
	516, 212, 494, 205, 0, 493, 368, 466, 475, 356,
	346, 204, 473, 354, 345, 301, 320, 321, 258, 281,
	403, 339, 404, 282, 364, 363, 365, 197, 485, 0,
	198, 0, 445, 486, 517, 218, 219, 220, 0, 257,
	261, 269, 271, 277, 278, 285, 332, 379, 402, 400,
	406, 0, 461, 479, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 512, 511, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 223, 483, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 190, 206,
	333, 0, 407, 266, 514, 492, 488, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 394, 395, 396, 397, 399, 401, 408,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 450, 468, 470, 482, 496, 501,
	427, 276, 477, 502, 0, 342, 0, 0, 344, 259,
	279, 290, 0, 491, 447, 211, 415, 268, 200, 229,
	214, 237, 252, 255, 294, 353, 360, 389, 393, 273,
	249, 227, 412, 224, 431, 453, 454, 455, 457, 357,
	244, 392, 0, 0, 340, 459, 460, 286, 358, 0,
	0, 0, 78, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 87,
	0, 1321, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 86, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 87, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 1774, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 1772, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 964, 299, 191, 209, 962, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 1774, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 1321, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	2820, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	2093, 0, 0, 0, 2094, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 1365, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 1364, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 2904, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 2820, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 87, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 1614, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 1487,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 1485, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 1483, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 1481, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 1479, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 1475,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 1473, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 1471, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 1448,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 1349,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 592, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 358, 340,
	459, 460, 286, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 331,
	245, 0, 0, 390, 0, 196, 0, 433, 232, 341,
	338, 465, 260, 251, 247, 231, 287, 348, 388, 452,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 230, 195, 373, 444, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 243, 291, 250, 242, 462, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 235, 0, 0, 539, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 191, 209, 0,
	0, 372, 414, 420, 0, 0, 0, 233, 0, 418,
	386, 481, 217, 262, 411, 391, 416, 398, 265, 0,
	0, 417, 336, 467, 405, 478, 499, 500, 241, 366,
	489, 456, 495, 513, 210, 238, 380, 449, 484, 440,
	359, 463, 464, 298, 439, 272, 194, 334, 505, 208,
	426, 225, 215, 469, 487, 267, 409, 201, 451, 476,
	222, 430, 0, 0, 515, 203, 474, 448, 355, 295,
	296, 202, 0, 410, 246, 270, 236, 375, 471, 472,
	234, 516, 212, 494, 205, 0, 493, 368, 466, 475,
	356, 346, 204, 473, 354, 345, 301, 320, 321, 258,
	281, 403, 339, 404, 282, 364, 363, 365, 197, 485,
	0, 198, 0, 445, 486, 517, 218, 219, 220, 0,
	257, 261, 269, 271, 277, 278, 285, 332, 379, 402,
	400, 406, 0, 461, 479, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 512, 511, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 223, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 190,
	206, 333, 0, 407, 266, 514, 492, 488, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 394, 395, 396, 397, 399, 401,
	408, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 450, 468, 470, 482, 496,
	501, 427, 276, 477, 502, 0, 342, 0, 0, 344,
	259, 279, 290, 0, 491, 447, 211, 415, 268, 200,
	229, 214, 237, 252, 255, 294, 353, 360, 389, 393,
	273, 249, 227, 412, 224, 431, 453, 454, 455, 457,
	357, 244, 392, 0, 358, 340, 459, 460, 286, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 331, 245, 0, 0, 390,
	0, 196, 0, 433, 232, 341, 338, 465, 260, 251,
	247, 231, 287, 348, 388, 452, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 230,
	195, 373, 444, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 243,
	291, 250, 242, 462, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 235, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 191, 209, 0, 0, 372, 414, 420,
	0, 0, 0, 233, 0, 418, 386, 481, 217, 262,
	411, 391, 416, 398, 265, 0, 0, 417, 336, 467,
	405, 478, 499, 500, 241, 366, 489, 456, 495, 513,
	210, 238, 380, 449, 484, 440, 359, 463, 464, 298,
	439, 272, 194, 334, 505, 208, 426, 225, 215, 469,
	487, 267, 409, 201, 451, 476, 222, 430, 0, 0,
	515, 203, 474, 448, 355, 295, 296, 202, 0, 410,
	246, 270, 236, 375, 471, 472, 234, 516, 212, 494,
	205, 0, 493, 368, 466, 475, 356, 346, 204, 473,
	354, 345, 301, 320, 321, 258, 281, 403, 339, 404,
	282, 364, 363, 365, 197, 485, 0, 198, 0, 445,
	486, 517, 218, 219, 220, 0, 257, 261, 269, 271,
	277, 278, 285, 332, 379, 402, 400, 406, 0, 461,
	479, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	512, 511, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 223, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 190, 206, 333, 0, 407,
	266, 514, 492, 488, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	2909, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	394, 395, 396, 397, 399, 401, 408, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 450, 468, 470, 482, 496, 501, 427, 276, 477,
	502, 0, 342, 0, 0, 344, 259, 279, 290, 0,
	491, 447, 211, 415, 268, 200, 229, 214, 237, 252,
	255, 294, 353, 360, 389, 393, 273, 249, 227, 412,
	224, 431, 453, 454, 455, 457, 357, 244, 392, 0,
	358, 340, 459, 460, 286, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 331, 245, 0, 0, 390, 0, 196, 0, 433,
	232, 341, 338, 465, 260, 251, 247, 231, 287, 348,
	388, 452, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 230, 195, 373, 444, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 243, 291, 250, 242, 462,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 235, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 191,
	209, 0, 0, 372, 414, 420, 0, 0, 0, 233,
	0, 418, 386, 481, 217, 262, 411, 391, 416, 398,
	265, 0, 0, 417, 336, 467, 405, 478, 499, 500,
	241, 366, 489, 456, 495, 513, 210, 238, 380, 449,
	484, 440, 359, 463, 464, 298, 439, 272, 194, 334,
	505, 208, 426, 225, 215, 469, 487, 267, 409, 201,
	451, 476, 222, 430, 0, 0, 515, 203, 474, 448,
	355, 295, 296, 202, 0, 410, 246, 270, 236, 375,
	471, 472, 234, 516, 212, 494, 205, 0, 493, 368,
	466, 475, 356, 346, 204, 473, 354, 345, 301, 320,
	321, 258, 281, 403, 339, 404, 282, 364, 363, 365,
	197, 485, 0, 198, 0, 445, 486, 517, 218, 219,
	220, 0, 257, 261, 269, 271, 277, 278, 285, 332,
	379, 402, 400, 406, 0, 461, 479, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 512, 511, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 223, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 190, 206, 333, 0, 407, 266, 514, 492, 488,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 394, 395, 396, 397,
	399, 401, 408, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 450, 468, 470,
	482, 496, 501, 427, 276, 477, 502, 0, 342, 0,
	0, 344, 259, 279, 290, 0, 491, 447, 211, 415,
	268, 200, 229, 214, 237, 252, 255, 294, 353, 360,
	389, 393, 273, 249, 227, 412, 224, 431, 453, 454,
	455, 457, 357, 244, 392, 0, 358, 340, 459, 460,
	286, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 331, 245, 0,
	0, 390, 0, 196, 0, 433, 232, 341, 338, 465,
	260, 251, 247, 231, 287, 348, 388, 452, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 230, 195, 373, 444, 264, 0, 0, 0, 0,
	187, 2557, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 243, 291, 250, 242, 462, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 235,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 191, 209, 0, 0, 372,
	414, 420, 0, 0, 0, 233, 0, 418, 386, 481,
	217, 262, 411, 391, 416, 398, 265, 0, 0, 417,
	336, 467, 405, 478, 499, 500, 241, 366, 489, 456,
	495, 513, 210, 238, 380, 449, 484, 440, 359, 463,
	464, 298, 439, 272, 194, 334, 505, 208, 426, 225,
	215, 469, 487, 267, 409, 201, 451, 476, 222, 430,
	0, 0, 515, 203, 474, 448, 355, 295, 296, 202,
	0, 410, 246, 270, 236, 375, 471, 472, 234, 516,
	212, 494, 205, 0, 493, 368, 466, 475, 356, 346,
	204, 473, 354, 345, 301, 320, 321, 258, 281, 403,
	339, 404, 282, 364, 363, 365, 197, 485, 0, 198,
	0, 445, 486, 517, 218, 219, 220, 0, 257, 261,
	269, 271, 277, 278, 285, 332, 379, 402, 400, 406,
	0, 461, 479, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 512, 511, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 223, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 190, 206, 333,
	0, 407, 266, 514, 492, 488, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 394, 395, 396, 397, 399, 401, 408, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 450, 468, 470, 482, 496, 501, 427,
	276, 477, 502, 0, 342, 0, 0, 344, 259, 279,
	290, 0, 491, 447, 211, 415, 268, 200, 229, 214,
	237, 252, 255, 294, 353, 360, 389, 393, 273, 249,
	227, 412, 224, 431, 453, 454, 455, 457, 357, 244,
	392, 0, 358, 340, 459, 460, 286, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 331, 245, 0, 0, 390, 0, 196,
	0, 433, 232, 341, 338, 465, 260, 251, 247, 231,
	287, 348, 388, 452, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 230, 195, 373,
	444, 264, 0, 0, 0, 0, 187, 2089, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 243, 291, 250,
	242, 462, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 235, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 191, 209, 0, 0, 372, 414, 420, 0, 0,
	0, 233, 0, 418, 386, 481, 217, 262, 411, 391,
	416, 398, 265, 0, 0, 417, 336, 467, 405, 478,
	499, 500, 241, 366, 489, 456, 495, 513, 210, 238,
	380, 449, 484, 440, 359, 463, 464, 298, 439, 272,
	194, 334, 505, 208, 426, 225, 215, 469, 487, 267,
	409, 201, 451, 476, 222, 430, 0, 0, 515, 203,
	474, 448, 355, 295, 296, 202, 0, 410, 246, 270,
	236, 375, 471, 472, 234, 516, 212, 494, 205, 0,
	493, 368, 466, 475, 356, 346, 204, 473, 354, 345,
	301, 320, 321, 258, 281, 403, 339, 404, 282, 364,
	363, 365, 197, 485, 0, 198, 0, 445, 486, 517,
	218, 219, 220, 0, 257, 261, 269, 271, 277, 278,
	285, 332, 379, 402, 400, 406, 0, 461, 479, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 512, 511,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 223,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 190, 206, 333, 0, 407, 266, 514,
	492, 488, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 394, 395,
	396, 397, 399, 401, 408, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 450,
	468, 470, 482, 496, 501, 427, 276, 477, 502, 0,
	342, 0, 0, 344, 259, 279, 290, 0, 491, 447,
	211, 415, 268, 200, 229, 214, 237, 252, 255, 294,
	353, 360, 389, 393, 273, 249, 227, 412, 224, 431,
	453, 454, 455, 457, 357, 244, 392, 0, 0, 340,
	459, 460, 286,
}

var yyPact = [...]int{
	4002, -1000, -421, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1917, 1961, -1000, -1000,
	-1000, -1000, 2097, -1000, 667, 1631, -1000, 1934, 2980, -1000,
	40556, 440, -1000, 39364, 435, 110, 40556, -1000, 90, -1000,
	86, 40556, 91, 38768, -1000, -1000, -301, 17302, 1871, -20,
	-22, 40556, -1000, -1000, -1000, -1000, 2064, 1558, -1000, 306,
	-1000, -1000, -1000, -1000, -1000, -1000, 38172, -1000, -1000, -1000,
	1945, 1944, 2104, 580, 1860, -1000, 2001, 1558, -1000, 17302,
	2051, 1987, 16706, -1000, 16706, 352, -1000, -1000, 12524, -1000,
	-1000, 23272, 40556, 28636, 328, -1000, 1934, -1000, -1000, 286,
	-1000, 275, 1483, -1000, 1481, -1000, 438, 400, 295, 407,
	382, 294, 289, 288, 284, 281, 279, 278, 276, 290,
	-1000, 610, 610, -176, -177, 3788, 332, 332, 332, 383,
	1899, 1891, -1000, 601, -1000, 610, 610, 610, 271, 610,
	610, 610, 610, 208, 203, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 305, 1934, 170, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 40556, 131, 40556,
	-1000, 498, 40556, 730, 730, 2, 730, 730, 730, 730,
	106, 587, -24, -1000, 105, 188, 87, 167, 732, 182,
	-1000, -1000, 149, 732, 1145, -1000, 584, 85, -1000, 730,
	730, -1000, 10120, 141, 10120, 10120, -1000, 1913, -1000, -1000,
	-1000, -1000, 1092, -1000, 381, -1000, -1000, -1000, -1000, 40556,
	37576, 292, 641, -1000, -1000, -1000, 40, -1000, -1000, 1265,
	937, 17302, 1235, -1000, 1456, 553, -1000, -1000, -1000, -1000,
	-1000, 469, 17898, 17898, 17898, 17898, -1000, -1000, 1491, 1491,
	1491, 1491, 17898, 1491, 17898, 1491, 1491, 1491, 1491, 17302,
	1491, 1491, 1491, -1000, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 496, 1491, 1491, 1491, 1491, 1491,
	-1000, -1000, -1000, -1000, 1491, 1491, 1491, 1491, 1491, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20883, -1000,
	14918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40556, -1000, 1491, 112, 40556, 40556, 207, 2001, 1558, -1000,
	2064, 2055, 306, -1000, 1962, 1677, 1248, 1178, 1558, 1463,
	40556, -1000, 1497, -1000, -1000, -1000, 1774, 1051, 1144, -1000,
	-1000, -1000, -1000, 1416, 17302, -1000, -1000, 2090, -1000, 20287,
	493, 780, 2088, 36980, -1000, 352, 352, 1479, 11923, -60,
	-1000, -1000, -1000, 640, 26252, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1913, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1460, 40556, -1000,
	-1000, 4874, 1061, -1000, 1629, -1000, 1458, -1000, 1585, 17302,
	1643, 432, 1061, 430, 429, 396, -1000, -103, -1000, -1000,
	-1000, -1000, -1000, 610, 610, -1000, 287, 2047, 2980, 3279,
	-1000, -1000, -1000, 36384, 1623, 1061, -1000, 1620, -1000, 703,
	461, 492, 492, 1061, -1000, -1000, 40556, 1061, 697, 695,
	40556, 40556, -1000, 35788, -1000, 35192, 34596, 995, 40556, 34000,
	33404, 32808, 32212, 31616, -1000, 1775, -1000, 1708, -1000, -1000,
	-1000, 40556, 40556, 40556, 257, -1000, -1000, 40556, 1061, -1000,
	-1000, 986, 984, 982, 610, 610, 979, 1141, 1138, 1137,
	610, 610, 977, 1129, 27444, 1128, 158, 975, 973, 972,
	941, 1125, 177, 1120, 939, 921, 956, 40556, 1616, 40556,
	-1000, 144, 668, 364, 639, 1934, 1846, 1476, 379, 408,
	1061, 362, 362, 40556, -1000, 10721, -1000, -1000, 1112, 17302,
	-1000, 733, 732, 732, -1000, -1000, -1000, -1000, -1000, -1000,
	730, 40556, 733, -1000, -1000, -1000, 732, 730, 40556, 730,
	730, 730, 730, 732, 732, 732, 730, 40556, 40556, 40556,
	40556, 40556, 40556, 40556, 40556, 40556, 10120, 584, 730, -313,
	-1000, 1109, -1000, 1738, -1000, -1000, -1000, -1000, -1000, -1000,
	10120, 10120, -1000, -1000, -1000, -1000, 89, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -53, 1474, 31020, -1000,
	-316, -325, -326, -327, -1000, -1000, -1000, -329, -340, -1000,
	-1000, -1000, 17302, 17302, 17302, 17302, -204, -1000, 811, 17898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 848, 727, 17898,
	17898, 17898, 17898, 17898, 17898, 17898, 17898, 17898, 17898, 17898,
	17898, 17898, 17898, 17898, 846, 6068, 6068, 553, 553, 553,
	553, -1000, 16706, 17302, 17302, 553, -1000, 1061, 30424, 16706,
	16706, 17302, 1909, 648, 937, 40556, -1000, 1178, -1000, -1000,
	-1000, 826, -1000, 40556, 40556, 95, 17302, 17302, 17302, 17302,
	17302, 17302, 13721, 17302, 17302, 17302, 17302, 17302, 17302, 17302,
	17302, 17302, 17302, 17302, 17302, 17302, 17302, 17302, 17302, 17302,
	17302, 17302, 17302, 17302, 17302, 17302, 17302, 17302, 17302, 13125,
	10721, 16706, 16706, 16706, 16706, 16706, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 487, 1660,
	1272, 1354, -1000, 1466, -1000, -165, 22676, 17302, 1108, 2087,
	1658, 40556, -1000, -1000, -1000, 2001, -1000, 2001, 1660, 1938,
	1783, 16706, -1000, -1000, 1938, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1219, -1000, 40556, 1463, 1981, 40556, 1769,
	1107, 269, -1000, 17302, 17302, 1462, -1000, 1001, 40556, -1000,
	-204, -1000, 29828, -1000, -1000, 9519, -1000, 40556, 243, 40556,
	-1000, 22080, 29232, 11322, -60, -1000, 11322, 1397, -1000, -43,
	-54, 14317, 536, -1000, -1000, -1000, 3788, 19090, 1251, 536,
	15, -1000, -1000, -1000, 1585, -1000, 1585, 1585, 1585, 1585,
	269, 269, 269, 269, -1000, -1000, -1000, -1000, -1000, 1609,
	1600, -1000, 1585, 1585, 1585, 1585, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1597, 1597, 1597, 1589, 1589, 342, -1000,
	17302, 221, 28636, 1942, 954, 1606, 144, 363, 1653, 1061,
	1061, 1061, 363, -1000, 1257, 1252, -1000, -404, 1453, -1000,
	-1000, 2040, -1000, -1000, 684, 747, 746, 547, 40556, 118,
	236, -1000, 343, -1000, 28636, 1061, 693, 492, 1061, -1000,
	1061, -1000, -1000, -1000, -1000, -1000, 1061, 1451, -1000, 1488,
	828, 742, 825, 741, 1451, -1000, -1000, -144, 1451, -1000,
	1451, -1000, 1451, -1000, 1451, -1000, 1451, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 646, 40556, 118, 846, -1000,
	371, -1000, -1000, -1000, 846, 846, -1000, -1000, -1000, -1000,
	1095, 1091, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -393, 40556, -1000, 130, 635, 219, 259, 194, 40556,
	282, 1994, 1985, 1964, 159, 200, 40556, 40556, 362, 1732,
	40556, 1956, 40556, -1000, -1000, -1000, -1000, -1000, 937, 40556,
	-1000, -1000, 730, 730, -1000, -1000, 40556, 730, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 730, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 40556, -1000, -1000, -1000, -1000, 40556, -1000, -1000,
	-1000, -1000, -1000, 74, -45, 307, -1000, -1000, -1000, -1000,
	-1000, 1998, -1000, 937, 756, 657, -1000, 1491, -1000, -1000,
	875, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 848, 17898,
	17898, 17898, 1489, 399, 819, 1238, 1469, 896, 896, 834,
	834, 550, 550, 550, 550, 550, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1087, -1000, 1428, -1000, 1403, 1587,
	1178, -1000, 1428, 1428, 1448, 16706, -1000, -1000, 658, -1000,
	17302, 1178, -1000, -1000, 1178, 1178, 1445, 1440, 2086, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1390, 1606, 1606, 1606, 1606, 1606, 17302, 1089, -1000, -1000,
	-1000, 2323, 2313, 1178, 1265, 1178, 1415, -1000, 2286, 1606,
	2255, 2224, 2220, 1507, 2197, 2032, 1993, 1606, 1606, 1606,
	1234, 1926, 1910, 1903, 1897, 1856, 1761, 1754, 1742, 1730,
	1606, 1178, 16706, 16706, 1399, 1491, 485, -1000, 1428, 1178,
	1178, 1428, 1428, 10721, 1178, -1000, 40556, -1000, -306, -1000,
	-52, 520, 1491, -1000, 27444, 1178, -1000, 6004, -1000, 41748,
	-1000, -1000, -1000, -1000, -1000, 25656, 1682, 1938, -1000, -1000,
	1491, 1449, -1000, -1000, 269, 4, 25060, -1000, -1000, 937,
	937, 17302, -1000, -1000, -1000, -1000, -1000, -1000, 484, 2070,
	291, 1491, -1000, 1410, 1803, -1000, -1000, -1000, 1979, 19691,
	-1000, 1491, 1491, 40556, 1654, 1627, -1000, 481, -1000, 1397,
	-60, -64, -1000, -1000, -1000, -1000, 937, -1000, 1023, 266,
	325, -1000, 351, -1000, -1000, -1000, -1000, 1880, 11, -1000,
	-1000, -1000, 269, 269, -1000, -1000, -1000, -1000, -1000, -1000,
	1080, 1080, -1000, -1000, -1000, -1000, -1000, 952, -1000, -1000,
	-1000, 947, -1000, -1000, 1714, 1718, 221, -1000, -1000, 610,
	1079, -1000, -1000, 1883, 610, 610, 40556, -1000, -1000, 1244,
	1942, 130, 40556, 653, 1731, -1000, 1653, 1653, 1653, 40556,
	-1000, -1000, -1000, -1000, -405, 54, 285, -1000, -1000, -1000,
	3150, 40556, 1443, -1000, 115, -1000, 1240, -1000, 40556, -1000,
	1437, 1596, 1061, 1061, -1000, -1000, -1000, 40556, 1491, -1000,
	-1000, -1000, -1000, 398, 1933, 1918, 118, 115, 536, 1061,
	-1000, -1000, -1000, -1000, -1000, -392, 1433, 389, 120, 246,
	40556, 40556, 40556, 40556, 40556, 448, -1000, -1000, -1000, -1000,
	102, -1000, -1000, 102, -1000, -1000, -1000, -1000, 180, 368,
	-1000, 40556, 40556, 499, -1000, -1000, -1000, 732, -1000, -1000,
	732, -1000, -1000, -1000, -1000, -1000, 1911, 40556, -48, -355,
	-1000, -352, 17302, -1000, -1000, -1000, -1000, 1151, 397, 819,
	17898, 17898, 16706, -138, 723, 723, 846, -1000, -1000, -1000,
	17302, 17302, 1447, 643, -1000, 17302, 831, -1000, -1000, -1000,
	17302, 17302, 17302, 1178, 218, -1000, -1000, -1000, -1000, -1000,
	2084, -1000, 17302, 17302, 17302, -1000, -1000, 17302, 17302, -1000,
	17302, 17302, 18494, 1178, 18494, 17302, 17302, 18494, -1000, -1000,
	-1000, -1000, 18494, 17302, 17302, 17302, 17302, 17302, 17302, 17302,
	17302, 17302, -1000, -1000, 1428, 1428, 16706, 10721, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 520, -1000,
	492, 492, 492, 40556, -1000, -1000, -1000, -1000, -1000, -1000,
	1325, 2009, -1000, 1798, 1789, 2083, 2070, -1000, 22080, 1938,
	-1000, -1000, 40556, -296, -1000, 1839, 1847, -1000, -1000, -1000,
	-1000, 8918, 2001, 17302, 1726, 40556, 1491, -1000, 21484, 40556,
	40556, 22080, 22080, 22080, 22080, 22080, -1000, 1752, 1749, -1000,
	1793, 1790, 1840, 40556, -1000, 1421, 1178, 2055, 19691, 306,
	17302, 23868, 1371, 22080, -1000, -1000, 22080, 40556, 8317, -1000,
	-1000, -50, -59, -1000, -1000, -1000, -1000, 3788, -1000, -1000,
	856, 1974, 1877, -1000, -1000, -1000, -1000, 1393, -1000, 1382,
	1304, 1377, 145, -1000, 1641, 1904, 610, 610, -1000, 938,
	-1000, 1061, 1078, 1064, -1000, -1000, -1000, 386, -1000, 1954,
	40556, 1720, 1719, 1717, -1000, -413, 936, 1592, 1632, 17302,
	1591, 2039, 1284, 40556, -1000, -1000, 40556, -1000, 190, -1000,
	221, 40556, -1000, -1000, -1000, 236, 40556, -1000, 5946, 115,
	-1000, -1000, -1000, -1000, -1000, -1000, 40556, 134, -1000, 1590,
	1012, -1000, -1000, 1630, -1000, -1000, -1000, -1000, 114, 215,
	99, 1053, 99, -1000, 40556, 476, 1718, 40556, -1000, -1000,
	-1000, 730, 730, -1000, -1000, 1902, -1000, 1061, 1606, 17898,
	17898, -1000, 553, -1000, 1491, 1178, 1585, 1585, -1000, 1585,
	1589, -1000, 1585, 76, 1585, 71, 1585, -1000, -1000, 1178,
	1178, 1199, 1009, -110, -1000, 937, 17302, 1706, 1699, 1606,
	-1000, 1584, 1575, 17302, 1606, 1606, 1606, -1000, 937, 1507,
	1695, 1322, -1000, -1000, -1000, -1000, 1292, 1606, 1688, -293,
	1178, 1367, 1367, 1367, 1367, 1367, 1354, 1354, 1354, 1354,
	-1000, -1000, 1178, -1000, -1000, 1996, 1996, 1996, 1347, 41152,
	40556, -1000, -1000, -1000, -1000, 2070, 2067, 1287, -1000, -1000,
	4, 333, -1000, 1819, 1847, -1000, 2038, 1832, 2036, -1000,
	-1000, -1000, 937, -1000, 1937, 1247, -1000, 622, 1239, -1000,
	-1000, 16110, 1352, 1788, 473, 1347, 1473, 1803, 1711, 1696,
	2308, -1000, -1000, -1000, -1000, 1728, -1000, 1705, -1000, -1000,
	1497, -1000, -1000, 1272, 1178, 1684, 243, 22080, 1343, 1343,
	-1000, 472, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 758,
	5685, 2103, -1000, 1045, -1000, 1018, -1000, 690, 674, -1000,
	40556, 1561, -1000, 269, 1041, 269, 932, -1000, 931, -1000,
	-1000, -232, -1000, -1000, 1655, 1698, -1000, -1000, -1000, -1000,
	40556, -1000, -1000, 40556, 40556, 40556, 1555, 2031, -1000, 17302,
	1514, 611, 1675, 40556, 40556, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 335, 610, -366, 198, 184,
	610, 610, 610, -1000, -1000, 1338, 1335, -1000, -174, -1000,
	17302, -1000, -1000, -1000, 958, 958, -1000, 1497, -1000, -1000,
	-1000, 1211, -1000, -1000, -148, 40556, 40556, 40556, 40556, -1000,
	843, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 553, 17898, -1000, -1000, 269, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17302, -1000, 17302,
	-1000, 2001, 1037, 937, 17302, 17302, -1000, 916, 909, 1606,
	-1000, -1000, -1000, 1178, 18494, -1000, 18494, -1000, 17302, 196,
	723, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1491, 1870, 1491, 1491, 23868, -1000, -1000, 2067,
	2060, 2023, 1810, 1826, 1826, 1819, -1000, 2020, 2018, -1000,
	1036, 2014, 1024, 665, -1000, 40556, 17302, 1491, -1000, 293,
	40556, 1491, 40556, -1000, 2056, -1000, -1000, 17302, 1509, -1000,
	17302, -1000, -1000, -1000, -1000, -1000, -1000, 6068, 2070, 1343,
	-1000, -1000, 565, -1000, 17302, -1000, -1000, -1000, 4055, -1000,
	-1000, -1000, -1000, -1000, 1503, 17302, -1000, -1000, -1000, 1209,
	1201, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1497,
	-1000, -1000, -1000, -1000, 236, -407, 1622, 40556, 899, -1000,
	1330, 1284, 193, 1491, 1022, 610, 610, 610, 880, 866,
	27444, 304, -1000, 236, -1000, -179, -182, 1606, -1000, -1000,
	1970, -1000, -1000, 10721, -1000, -1000, 1493, 1651, -1000, -1000,
	-1000, 272, -1000, 1606, 1606, 1178, -1000, 1606, 1606, 1197,
	1180, -1000, -1000, 1322, -1000, 950, -1000, 196, 1178, 1693,
	-1000, -1000, 6068, -1000, 24464, -1000, 2011, 2005, 28040, 28040,
	520, 2060, -1000, 17302, 17302, 1808, 891, -1000, -1000, -1000,
	-1000, 1008, 1007, -1000, 1005, -1000, 2102, -1000, 937, -1000,
	1491, -1000, 459, 1239, -1000, 2001, 937, 40556, 937, -3,
	2056, -1000, 1606, -1000, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 40556, 1552, -1000, -1000,
	1967, 1306, 48, -1000, 1277, -1000, -1000, 444, -1000, 17302,
	-1000, 27444, 1003, 999, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 306, 1279, -1000, 603, 40556, 40556, 1178, 253,
	-157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17302, -1000, 1178, 1690, -1000, -250, -1000, 1275, -1000, -1000,
	-1000, -1000, -1000, 1275, 1275, -1000, -1000, 937, 1265, -1000,
	888, -1000, -1000, -1000, -1000, -1000, 40556, 1239, 40556, -1000,
	1269, 1178, 1491, 2001, -1000, 1217, -1000, 306, -1000, 1490,
	1632, -1000, -1000, -1000, 15514, -1000, -1000, -1000, -1000, -147,
	10721, 7716, 1189, -1000, -1000, 1767, -142, -163, 1507, -1000,
	-345, -1000, -1000, 26848, -1000, -1000, -1000, -1000, -1000, 1142,
	-1000, -1000, 23868, 39960, -1000, 1685, 597, -147, 17302, 1470,
	1178, -1000, -23, -1000, -1000, -1000, -1000, -1000, 1630, -1000,
	1765, -1000, 1178, -1000, -1000, -1000, 1158, -1000, 4784, -260,
	1680, 1674, 2077, -1000, -1000, -1000, 731, 998, -1000, -1000,
	-1000, -1000, 1136, 40556, -1000, 331, -1000, -1000, -148, -153,
	-1000, -1000, 39960, -255, 536, 6068, -1000, -1000, 2101, -1000,
	2092, 532, 532, -1000, -1000, -415, 1156, 138, -1000, -159,
	-1000, -1000, 1952, -3, -1000, -1000, -1000, 315, 925, -1000,
	-1000, 818, -415, -1000, -168, -264, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6068, 204, 204, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2526, 2524, 21, 2, 2523, 2522, 2521, 37, 111,
	180, 27, 183, 92, 2520, 2519, 2518, 2515, 2514, 2513,
	2512, 224, 222, 216, 2511, 2510, 2509, 2508, 2507, 2506,
	2505, 2504, 2503, 2502, 210, 160, 174, 2501, 2500, 2499,
	108, 177, 89, 88, 179, 2498, 2497, 77, 2495, 2494,
	2493, 175, 171, 715, 2492, 170, 106, 36, 2491, 2484,
	2483, 2482, 2480, 2478, 2476, 2475, 2472, 2470, 2466, 2465,
	2464, 2463, 2459, 2455, 2454, 201, 2453, 2452, 15, 2443,
	79, 2441, 2439, 2438, 2437, 123, 2430, 2429, 2428, 2426,
	2425, 2422, 2419, 140, 2417, 2416, 2414, 2413, 182, 2412,
	2408, 206, 107, 104, 2407, 2405, 95, 163, 2404, 124,
	2401, 2400, 2398, 152, 2397, 4753, 2396, 68, 66, 2395,
	60, 78, 55, 65, 33, 4, 2394, 2391, 67, 86,
	2389, 94, 61, 2387, 110, 97, 2386, 2383, 10, 3,
	2382, 5, 7, 8, 69, 2370, 2368, 119, 2367, 2365,
	2360, 93, 2356, 2354, 1177, 2352, 90, 130, 99, 75,
	2351, 32, 43, 2350, 2349, 2344, 2343, 2342, 40, 2340,
	2333, 2329, 144, 34, 162, 28, 44, 45, 134, 2328,
	98, 84, 2326, 138, 133, 2322, 53, 30, 52, 2321,
	59, 127, 118, 22, 105, 126, 2320, 2318, 49, 74,
	2316, 2315, 2314, 2313, 2312, 2311, 73, 2309, 46, 2308,
	186, 2307, 29, 2291, 39, 41, 2289, 70, 168, 71,
	31, 2284, 159, 2280, 48, 158, 125, 155, 2278, 2277,
	2276, 2275, 165, 269, 2273, 2272, 85, 167, 139, 148,
	2271, 265, 2270, 2268, 120, 1691, 141, 20, 161, 2256,
	2255, 2845, 147, 24, 23, 2254, 185, 2246, 2242, 2240,
	194, 166, 101, 898, 50, 2239, 2237, 13, 2236, 2233,
	2222, 2218, 2216, 2213, 96, 2210, 2207, 2206, 190, 63,
	9, 156, 76, 2203, 2202, 2193, 122, 83, 2192, 154,
	153, 132, 213, 2188, 169, 151, 128, 2187, 681, 2185,
	2183, 2181, 2180, 2179, 91, 2175, 2173, 2172, 2171, 150,
	146, 121, 81, 2168, 82, 116, 145, 149, 42, 2164,
	26, 2162, 2159, 2158, 178, 25, 2157, 12, 58, 47,
	19, 100, 142, 2155, 0, 2154, 14, 173, 271, 157,
	2153, 2150, 6, 11, 16, 2145, 137, 2137, 2133, 2129,
	18, 35, 17, 1, 103, 80, 2127, 2121, 4933, 3009,
	131, 2117, 176,
}

//line sql.y:6853
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 356, 357, 357, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 334, 334,
	334, 337, 337, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	360, 360, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 263, 263, 26, 26, 26, 26, 26, 99,
	99, 336, 336, 335, 327, 327, 326, 326, 325, 333,
	333, 332, 332, 331, 38, 39, 48, 48, 48, 48,
	49, 50, 338, 338, 300, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 302, 302, 288,
	288, 301, 301, 301, 301, 301, 301, 301, 287, 287,
	110, 110, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 349, 349, 197, 197, 197, 197, 197,
	197, 119, 119, 128, 128, 128, 128, 128, 117, 117,
	118, 116, 116, 116, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 127, 127, 123,
	123, 123, 124, 124, 124, 125, 125, 350, 350, 350,
	350, 267, 267, 267, 267, 270, 270, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 269, 269, 269, 269,
	269, 271, 271, 271, 271, 271, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 286,
	286, 274, 274, 281, 281, 282, 282, 282, 283, 283,
	283, 284, 284, 279, 279, 279, 279, 279, 279, 280,
	280, 280, 289, 314, 314, 313, 313, 311, 311, 311,
	311, 311, 311, 311, 311, 298, 298, 308, 308, 308,
	308, 308, 297, 297, 293, 293, 293, 294, 294, 295,
	295, 292, 292, 296, 296, 310, 310, 309, 309, 290,
	290, 291, 291, 316, 351, 351, 351, 351, 351, 352,
	352, 317, 343, 344, 342, 342, 342, 342, 342, 80,
	80, 80, 240, 240, 240, 306, 306, 305, 305, 305,
	307, 307, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 235, 235, 235, 341, 341, 341, 341,
	341, 341, 340, 340, 340, 303, 303, 303, 339, 339,
	56, 56, 181, 181, 354, 354, 355, 355, 355, 45,
	45, 45, 45, 45, 45, 44, 44, 44, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 85, 85, 86, 86,
	86, 86, 88, 88, 88, 319, 319, 57, 57, 3,
	3, 137, 139, 140, 140, 138, 138, 138, 138, 138,
	138, 59, 59, 58, 58, 142, 141, 143, 143, 143,
	1, 1, 2, 2, 4, 4, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 285, 285,
	285, 318, 318, 320, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 322, 322, 322, 60, 60, 323, 275,
	276, 277, 5, 6, 299, 321, 95, 95, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 61, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 234,
	234, 242, 242, 233, 233, 256, 256, 256, 236, 236,
	236, 237, 237, 348, 348, 348, 230, 230, 63, 63,
	63, 65, 65, 66, 67, 67, 258, 258, 259, 259,
	68, 69, 81, 81, 81, 81, 81, 81, 84, 84,
	84, 15, 15, 15, 15, 77, 77, 77, 14, 14,
	64, 64, 71, 345, 345, 346, 347, 347, 347, 347,
	72, 74, 31, 31, 31, 31, 31, 31, 105, 105,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 100, 100, 100, 94, 94, 361, 75, 76,
	76, 98, 98, 98, 91, 91, 91, 97, 97, 97,
	16, 16, 17, 216, 216, 18, 18, 102, 102, 104,
	104, 104, 104, 104, 106, 106, 106, 106, 106, 106,
	106, 101, 101, 103, 103, 103, 103, 249, 249, 249,
	248, 248, 131, 131, 133, 132, 132, 134, 134, 135,
	135, 135, 135, 179, 179, 157, 157, 214, 214, 212,
	212, 213, 213, 215, 215, 215, 215, 218, 218, 136,
	136, 136, 136, 144, 144, 145, 145, 146, 146, 257,
	257, 254, 254, 254, 253, 253, 150, 150, 150, 152,
	151, 151, 151, 151, 153, 153, 155, 155, 154, 154,
	156, 161, 161, 160, 160, 158, 158, 158, 158, 159,
	159, 159, 159, 162, 162, 115, 115, 115, 115, 115,
	115, 115, 126, 126, 126, 126, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 82, 82, 82, 231, 231, 163, 163,
	171, 171, 171, 171, 164, 164, 164, 164, 164, 164,
	164, 172, 172, 172, 178, 173, 173, 169, 169, 169,
	169, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 265,
	265, 330, 330, 329, 329, 328, 328, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 362, 362,
	278, 278, 278, 278, 170, 170, 170, 170, 170, 96,
	96, 96, 96, 96, 262, 262, 262, 266, 266, 266,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 184, 184, 92, 92, 182,
	182, 183, 185, 185, 180, 180, 180, 166, 166, 166,
	186, 186, 187, 187, 188, 188, 190, 189, 189, 191,
	192, 192, 192, 193, 193, 194, 194, 194, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	107, 107, 107, 107, 109, 109, 108, 108, 78, 78,
	79, 79, 79, 113, 113, 114, 114, 114, 111, 111,
	112, 112, 210, 210, 195, 195, 195, 202, 202, 202,
	198, 198, 200, 200, 200, 201, 201, 201, 199, 207,
	207, 209, 209, 208, 208, 204, 204, 205, 205, 206,
	206, 206, 203, 203, 165, 165, 165, 165, 165, 211,
	211, 211, 211, 219, 219, 175, 175, 177, 177, 176,
	130, 220, 220, 224, 221, 221, 225, 225, 225, 225,
	225, 222, 222, 223, 223, 250, 250, 250, 229, 229,
	241, 241, 238, 238, 239, 239, 232, 232, 243, 243,
	243, 73, 174, 174, 315, 315, 312, 246, 246, 247,
	247, 251, 251, 255, 255, 252, 252, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 358, 359, 260, 261, 261, 261,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 5, 6, 6, 7, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 2, 0, 2, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 8, 6, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 1, 1, 1, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 6, 6, 6,
	4, 4, 4, 7, 8, 6, 5, 6, 8, 11,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -356, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 303, 304, 306,
	307, 308, 309, -84, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -358,
	11, 434, 252, 251, 28, -12, 468, 85, -357, 605,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -75, -361, -75, -75, 12, 13, -75, -300,
	-302, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -324, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 468, 471, -307, 219, 225, 226, 435,
	122, 121, 75, 221, -304, 357, 500, 575, -55, 577,
	101, 103, 576, 44, 231, 578, 579, 580, 506, 581,
	240, 582, 583, 584, 585, 591, 547, 592, 593, 594,
	123, 7, -75, -255, -251, -334, -245, 88, 89, 90,
	465, 243, 498, 499, 292, 80, 41, 354, 357, 500,
	575, 303, 317, 311, 338, 330, 466, 501, 295, 244,
	280, 572, 328, 131, 577, 298, 502, 258, 362, 363,
	364, 101, 306, 401, 590, 297, 503, 588, 103, 576,
	79, 51, 44, 253, 326, 227, 322, 578, 281, 504,
	476, 274, 122, 119, 597, 36, 320, 50, 30, 587,
	121, 49, 579, 146, 505, 580, 506, 366, 345, 566,
	48, 367, 259, 507, 83, 264, 470, 301, 574, 368,
	321, 369, 291, 586, 224, 508, 558, 370, 371, 567,
	509, 346, 350, 510, 393, 372, 604, 52, 511, 512,
	568, 120, 513, 78, 581, 315, 316, 514, 289, 242,
	395, 342, 447, 454, 455, 107, 108, 450, 109, 456,
	110, 457, 458, 459, 448, 111, 104, 449, 460, 461,
	343, 344, 112, 462, 106, 105, 451, 453, 113, 463,
	240, 35, 373, 467, 293, 58, 268, 396, 46, 348,
	601, 45, 562, 515, 565, 341, 337, 444, 53, 516,
	517, 518, 519, 582, 340, 314, 336, 596, 4, 286,
	583, 62, 226, 352, 351, 353, 275, 392, 333, 520,
	521, 522, 247, 81, 523, 323, 21, 524, 525, 374,
	282, 526, 56, 527, 528, 399, 256, 529, 54, 584,
	39, 261, 598, 585, 530, 531, 532, 533, 263, 534,
	376, 535, 375, 347, 349, 270, 377, 469, 536, 302,
	319, 260, 589, 537, 248, 573, 262, 267, 255, 400,
	249, 538, 539, 540, 541, 542, 296, 557, 543, 544,
	307, 591, 445, 43, 545, 546, 547, 548, 549, 290,
	285, 394, 403, 61, 82, 359, 550, 571, 313, 283,
	551, 304, 55, 592, 593, 594, 277, 595, 9, 602,
	603, 379, 123, 287, 288, 47, 334, 269, 552, 299,
	553, 324, 325, 339, 312, 335, 305, 559, 271, 380,
	446, 257, 554, 402, 284, 355, 360, 300, 473, 276,
	381, 570, 472, 332, 329, 278, 555, 382, 232, 272,
	273, 556, 560, 383, 384, 294, 385, 386, 387, 388,
	389, 391, 390, 279, 471, 310, 327, 361, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 443, 230, -75, 230,
	-154, -251, 230, -222, 363, -242, 365, 378, 373, 383,
	371, -234, 374, 376, 270, -348, 393, 230, 380, 218,
	366, 375, 384, 385, 294, 391, 386, 390, 279, 387,
	388, 389, -334, 172, 580, 595, 131, 331, 370, 368,
	394, 562, -251, 305, -258, 310, -246, -334, -245, 308,
	-154, -81, 558, 222, -260, -260, -100, 562, 564, -173,
	-115, 139, -126, -129, -120, -121, -167, -168, -169, -170,
	-127, -180, 161, 162, 169, 140, -178, -130, 26, 464,
	436, 435, 172, 31, 214, 68, 69, 438, 439, 142,
	57, 411, 412, -128, 406, 413, 408, 441, 442, 114,
	443, 104, 106, 105, 444, 445, 446, 343, 344, 447,
	448, 449, 107, 108, 109, 110, 111, 112, 113, 450,
	453, 451, 452, 454, 455, 456, 461, 462, 457, 458,
	459, 460, 463, -246, -251, 235, 405, 229, 167, 434,
	-122, -118, -8, -176, 404, 409, 410, 414, 407, -334,
	-245, -124, -123, -163, 91, 97, 102, 98, -353, 115,
	-358, 92, 93, 94, 95, 96, 116, 117, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 44,
	379, 379, -154, -75, -75, -75, -75, -188, -98, -190,
	-10, -8, -358, 8, -75, -8, -9, -13, -34, -36,
	494, -35, -251, -195, -210, 12, 157, 42, 50, -193,
	-194, -12, -8, -115, 19, 23, 24, -103, 163, -115,
	-251, -76, -103, -232, 234, -75, -75, -221, -263, 305,
	-225, 394, 393, -247, -223, -246, -244, -222, 392, 223,
	23, 474, 138, 25, 27, 141, 172, 126, 19, 142,
	37, 225, 331, 241, 171, 237, 435, 218, 72, 475,
	406, 408, 404, 411, 437, 438, 405, 365, 31, 13,
	477, 28, 251, 24, 38, 165, 220, 145, 478, 254,
	26, 252, 114, 117, 480, 22, 75, 246, 14, 239,
	40, 16, 481, 482, 17, 235, 234, 157, 231, 70,
	11, 214, 29, 154, 66, 483, 133, 484, 485, 486,
	487, 127, 68, 155, 20, 599, 409, 410, 33, 563,
	464, 265, 167, 73, 59, 564, 139, 407, 488, 489,
	115, 490, 118, 76, 569, 135, 18, 71, 42, 491,
	266, 492, 236, 600, 493, 397, 494, 156, 221, 434,
	69, 495, 229, 378, 8, 440, 32, 250, 238, 125,
	67, 496, 230, 144, 441, 442, 233, 128, 116, 7,
	132, 34, 12, 74, 77, 412, 413, 414, 57, 124,
	468, 143, 15, 497, 398, 137, 131, -301, 155, -287,
	-291, -246, 245, -317, 241, -154, -310, -309, -246, -358,
	-99, -241, 231, 239, 238, 132, -338, 135, 287, 405,
	229, -51, -52, -222, 171, -85, 262, 266, 86, 86,
	-291, -290, -289, -339, 266, 245, -316, -308, 237, 246,
	-297, 238, 239, -292, 231, 133, -339, -292, 236, 246,
	266, 266, 123, 266, 123, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 261, -298, 147, -298, 472, 472,
	-304, -339, -339, -339, 233, 35, 35, -243, -292, 233,
	25, -298, -298, -298, -222, 171, -298, -298, -298, -298,
	274, 274, -298, -298, -298, -298, -298, -298, -298, -298,
	-298, -298, -298, -298, -298, -298, -298, -298, -298, 230,
	-338, -107, 390, 294, 80, -53, 276, -37, -154, -241,
	231, 232, -338, 263, -154, 215, -154, -236, 155, 15,
	-236, -233, 379, 377, 364, 369, -236, -236, -236, -236,
	277, 362, -293, 231, 35, 242, 379, 277, 362, 277,
	278, 277, 278, 372, 382, 277, -256, 14, 157, 405,
	367, 371, 270, 230, 271, 232, 381, 278, -256, 92,
	-237, 155, 379, 273, -236, -236, -261, -358, -247, 331,
	-334, 565, -261, -261, 32, 89, 233, -246, -77, -246,
	92, -15, -11, -22, -21, -23, 147, -105, 379, -93,
	172, 580, 566, 567, 568, 565, 376, 573, 571, 569,
	277, 570, 86, 135, 137, 138, 4, -115, 154, -164,
	147, 148, 149, 150, 151, 152, 153, 157, 139, 141,
	155, 156, 136, 158, 159, 160, 161, 162, 163, 164,
	166, 165, 167, 168, 171, 216, 217, -121, -121, -121,
	-121, -178, -358, -358, -358, -121, -231, -358, -121, -358,
	-358, -358, -358, -184, -115, -358, -362, -358, -362, -362,
	-278, -358, -278, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	215, -358, -358, -358, -358, -358, -278, -278, -278, -278,
	-278, 102, 97, 91, -180, 98, 92, -246, -251, -8,
	-9, -173, -260, -345, -346, -157, -154, -358, 294, -246,
	-246, 263, -193, -12, -8, -188, -194, -190, -8, -75,
	-91, -104, 63, 64, -106, 24, 38, 67, 65, 23,
	-359, 87, -359, -210, -359, 86, -36, -214, 85, 61,
	43, 92, 92, 86, 21, -189, -191, -115, 14, -249,
	4, -248, 25, -246, 92, 215, 100, 14, -155, 29,
	-154, -232, -232, 86, 305, -225, -263, -227, -226, 395,
	397, 147, -250, -246, 92, 31, 87, 86, -154, -267,
	-270, -272, -271, -273, -268, -269, 328, 329, 172, 332,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 345,
	32, 253, 324, 325, 326, 327, 346, 347, 348, 349,
	350, 351, 352, 353, 311, 330, 466, 312, 313, 314,
	315, 316, 317, 319, 320, 321, 322, 323, -337, -334,
	85, 87, 86, -274, 85, -115, -107, 230, -334, 231,
	231, 231, -75, 434, -298, -298, 261, 19, -44, -41,
	-324, 18, -40, -41, 223, 119, 120, 220, 85, -287,
	85, -296, -337, -334, 85, 133, 236, 132, -295, -292,
	-295, -296, -334, -180, -334, 133, 133, -218, -246, -218,
	-218, 23, -218, 23, -218, 23, 94, -246, -218, 23,
	-218, 23, -218, 23, -218, 23, -218, 23, 31, 78,
	79, 31, 81, 82, 83, -180, -180, -287, -222, -154,
	-334, 94, 94, 94, -298, -298, 94, 92, 92, 92,
	-298, -298, 94, 92, -253, -251, 92, 92, -340, 247,
	291, 293, 94, 94, 94, 94, 31, 92, -341, 31,
	587, 586, 588, 589, 590, 92, 94, 31, 94, 31,
	94, -246, 85, -154, -113, 281, 218, 220, 223, 76,
	92, 295, 299, 300, 147, 44, 86, 233, 230, -334,
	-238, 235, -238, -246, -252, -251, -244, 92, -115, -294,
	14, 157, -256, -256, -236, -154, -294, -256, -236, -154,
	-236, -236, -236, -236, -256, -256, -256, -236, -251, -251,
	-154, -154, -154, -154, -154, -154, -154, -261, -237, -236,
	565, 92, -230, 14, 76, -261, -261, -259, 308, 342,
	559, 560, 561, 86, 468, -147, -154, 565, 565, 565,
	565, 565, 565, -115, -115, -115, -115, 490, -171, 115,
	139, 116, 117, -129, -172, -176, -178, 99, 157, 141,
	155, 156, -120, -121, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -262, -334, 92,
	172, -125, -124, 98, -353, -125, -101, -103, -115, -115,
	-334, -246, -101, -101, -115, -97, 24, 38, -182, -183,
	143, -180, -359, -359, 94, 98, -246, -246, -90, -89,
	416, 417, 418, 419, 421, 422, 423, 426, 427, 431,
	432, 415, 433, 420, 425, 428, 429, 430, 424, 327,
	-115, -115, -115, -115, -115, -115, -82, -115, 126, 127,
	128, -115, -115, -174, -173, -333, -332, -331, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -102, 24, 38, -101, -247, -252, -244, -101, -102,
	-102, -101, -101, 215, -210, -359, 86, -347, 397, 398,
	563, -254, 266, -253, 25, -174, 92, 14, -216, 77,
	-246, -193, -193, 63, 64, 59, -101, -106, -359, -35,
	25, -212, -246, 62, 92, -279, -222, 354, 355, -115,
	-115, 86, -192, 27, 28, -154, -248, 163, -252, -154,
	-217, 266, -154, -132, -134, -135, -136, -157, -179, -358,
	-137, 486, 483, 14, -147, -148, -156, -251, -225, -227,
	86, 396, 398, 399, 76, 118, -115, -280, 171, -306,
	-305, -304, -287, -289, -290, -291, 87, -280, -283, 360,
	359, -274, -274, -274, -274, -274, -279, -279, -279, -279,
	85, 85, -274, -274, -274, -274, -281, 85, -281, -281,
	-282, 85, -282, -317, -115, -314, -313, -311, -312, 240,
	101, 556, 514, 468, 506, 547, 77, -309, -192, 94,
	-359, -113, -239, 235, -315, -312, -334, -334, -334, -239,
	-334, 92, -334, 92, -86, -57, -1, 599, 600, 601,
	86, 19, -288, -287, -56, 291, -320, -321, 266, -316,
	-310, -296, 133, -295, -296, -296, -334, 86, 29, 123,
	123, 123, 123, 468, 220, 32, -287, -56, -262, 233,
	-262, -262, 92, 92, -235, 595, -147, -109, 283, 147,
	272, 272, 230, 230, 285, -154, 296, 298, 297, 295,
	299, 300, 23, 23, 23, 284, 286, 288, 274, -154,
	-154, -238, 76, -149, -154, 26, -251, -154, -236, -236,
	-154, -236, -236, -154, -246, -93, 397, 86, 468, 22,
	-94, 22, -358, 115, 116, 117, -172, -120, -121, -120,
	138, 254, 86, -359, 25, 86, 77, -359, -359, -359,
	86, 14, -101, -185, -183, 145, -115, -359, -359, -359,
	86, 86, 14, -266, 25, -359, -359, -359, -359, -359,
	-184, -359, 14, 86, 86, -359, -359, 86, 86, -359,
	86, 86, 86, -330, 86, 86, 86, 86, -359, -359,
	-359, -359, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, -359, -359, -101, -101, -358, 215, -359, -359,
	-359, -359, -359, -247, -346, 562, 398, -161, -160, -158,
	74, 234, 75, -358, -253, -359, -125, 89, -213, 89,
	-212, -166, -246, 94, 98, -195, -131, -133, 14, -106,
	-178, 87, 86, -279, -199, -204, -233, -246, 92, 172,
	-191, 215, -162, 15, -165, 32, 57, -11, -358, -358,
	32, 86, -150, -152, -151, -153, 66, 70, 72, 67,
	68, 69, 73, -257, 25, -132, -9, -8, -358, -358,
	-358, -154, -147, -360, 14, 77, -360, 86, 215, -226,
	-228, 400, 397, 403, -334, 92, -85, 86, -304, -291,
	-196, -110, 40, -284, 361, -279, -279, -286, 92, -286,
	94, 94, 87, -47, -42, -43, 33, 80, -311, -298,
	92, 39, -298, -298, -246, 87, -192, -109, -154, 139,
	76, -315, -315, -315, -251, -2, 598, 604, 133, 85,
	364, 18, -212, 86, 87, -181, 292, 87, -87, -246,
	87, 85, -296, -296, -246, -358, 230, 31, 31, -56,
	-181, -280, -334, 597, 596, 87, 232, 290, -114, 411,
	-111, 92, 88, -154, -154, -154, -154, -154, 223, 220,
	-354, 301, -354, 275, 233, -147, -154, 86, -80, 249,
	244, -256, -256, 33, -154, 397, 574, 572, -115, 138,
	254, -129, -121, -103, 465, -264, 172, 328, 253, 326,
	322, 342, 333, 359, 324, 360, 321, 320, 319, -264,
	-262, -115, -115, -188, 146, -115, 144, -115, -115, -115,
	-359, 172, 328, 14, -115, -115, -115, -331, -115, -115,
	-115, -329, -328, -125, -180, -359, -329, -115, -115, -328,
	-328, -332, -332, -332, -332, -332, -173, -173, -173, -173,
	-359, -359, -102, -247, -158, -292, -292, -292, -218, 86,
	-229, 22, 14, 57, 57, -131, -162, -132, -106, -246,
	-202, 558, -207, 46, -205, -206, 47, -203, 48, 56,
	163, -193, -115, -219, 76, -220, -224, -180, -175, -177,
	-176, -358, -211, -359, -246, -218, -220, -134, -135, -135,
	-134, -135, 66, 66, 66, 71, 66, 71, 66, -151,
	-251, -359, -359, -9, -9, -115, -254, 77, -132, -132,
	-156, -251, 163, 397, 401, 402, -304, -352, 115, 139,
	31, 76, 357, 101, -350, 171, -351, 236, 132, 133,
	248, 25, 41, 87, 86, 87, 86, 87, 86, -240,
	505, 139, -43, -42, -298, -298, 94, -334, 92, 92,
	232, 26, -154, 76, 76, 76, -88, 602, 94, 85,
	-3, 80, -115, 85, 19, -287, -180, -322, -275, -323,
	-276, -277, -5, -6, -299, 57, 101, -60, 44, 231,
	582, 583, 123, 595, -314, -212, -318, -320, -154, -117,
	-358, -116, -118, -122, 161, 162, -181, -154, -108, 281,
	289, 85, -112, 89, -336, 77, 272, 357, 272, -355,
	302, 92, -355, -154, -80, -47, -154, -236, -236, 33,
	-334, -359, -129, -121, -358, -359, -274, -274, -274, -282,
	-274, 316, -274, 316, -274, -359, -359, 86, -359, 22,
	-359, -92, 440, -115, 86, 86, -359, 85, 85, -115,
	-359, -359, -359, -330, 86, -359, 86, -359, 86, -265,
	557, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -159, 22, -159, -159, -359, 89, -154, -162,
	-186, 16, -199, 51, 334, -209, -208, 55, 47, -206,
	19, 49, 19, 30, -219, 86, 147, 86, -359, -359,
	86, 57, 215, -359, -162, -145, -144, 76, 77, -146,
	76, -144, 66, 66, -214, -359, -359, 86, -217, -132,
	-162, -162, 215, 115, -358, -119, -128, -117, 12, 92,
	92, -334, 133, 133, -154, 85, -279, 92, -279, 94,
	94, 505, 31, 81, 82, 83, 31, 78, 79, -154,
	-154, -154, -154, -319, 85, 19, -115, 85, 147, 87,
	-212, -212, 268, 157, -298, 580, 274, 274, -298, -298,
	-298, 87, -359, 86, -285, 468, 471, -115, -123, -123,
	-214, 87, -327, 468, -335, -246, -246, -246, -246, 94,
	96, -120, -279, -115, -115, -193, 92, -115, -115, 94,
	94, -359, -359, -329, -328, -115, -359, -142, -141, -143,
	566, 115, 31, -264, -358, 66, 18, 16, -358, -358,
	-254, -186, -187, 17, 19, -200, 53, -198, 52, -198,
	-208, 19, 19, 92, 19, 92, 133, -224, -115, -177,
	57, -11, -246, -175, -246, -188, -115, 85, -115, -125,
	-162, -162, -115, -168, 443, 104, 106, 105, 444, 445,
	446, 343, 344, 447, 448, 449, 107, 108, 109, 110,
	111, 112, 113, 450, 453, 451, 454, 455, 456, 461,
	462, 457, 458, 459, 460, 463, 85, -115, 87, 87,
	-214, -318, -57, 87, -212, 94, 87, 269, -176, -358,
	92, -298, -298, -298, 94, 94, -253, -351, -320, 472,
	472, -359, 25, -326, -325, -247, 85, 77, -96, 157,
	468, -359, -359, -359, -359, -359, 87, 87, -359, -359,
	86, -359, -141, -143, -359, 76, -125, -215, -359, -246,
	236, 19, 19, -215, -215, -161, -187, -115, -173, -201,
	54, 76, 118, 92, 92, 92, 12, -175, 215, -193,
	-212, -139, 364, -188, -359, -212, 87, 25, 87, 604,
	133, 87, -176, -95, -358, 265, -253, 92, 92, -11,
	86, 147, -212, -154, -359, 466, 73, 469, -115, -359,
	76, 478, 566, 86, -359, -359, -359, 76, 118, -220,
	-246, 87, -359, -358, -193, 87, -197, -11, 85, -3,
	265, -78, 468, -325, -303, -247, 92, 94, 87, 62,
	467, 470, -330, -246, 236, -254, -140, -138, -246, 520,
	-343, -344, 76, -352, -349, 115, 139, 101, -350, 124,
	125, -78, -115, 85, -359, -79, 280, 562, -336, 62,
	-359, -359, 86, 22, -267, -59, 530, -344, 76, -343,
	76, 13, 12, 115, 92, 87, -212, 241, -327, 468,
	-138, 527, -280, -125, -342, 249, 244, 247, 32, -342,
	-4, 603, 87, 282, 469, -58, 26, -139, 243, 31,
	115, 94, -4, 470, 530, -125, -142, -141, -141,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 777,
	777, 777, 0, 777, 0, 0, 777, -2, -2, 777,
	1263, 0, 777, 0, 0, -2, 709, 711, 0, 713,
	-2, 0, 0, 722, 1763, 1763, 772, 0, 0, 0,
	0, 0, 777, 777, 777, 777, 1124, 48, 777, 0,
	83, 84, 728, 729, 730, 63, 0, 1761, 1, 3,
	69, 73, 0, 0, 0, 56, 1133, 0, 76, 0,
	0, 781, 0, 779, 0, 1246, 777, 777, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 536, 472, 515, 470, 501, -2, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 355, 355, 0, 0, -2, 458, 458, 458, 0,
	0, 0, 498, 1248, 410, 355, 355, 355, 0, 355,
	355, 355, 355, 0, 0, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 1150, 151, 1264, 1261, 1262, 38, 39, 40,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 0, 1240, 0,
	636, 878, 0, 698, 698, 0, 698, 698, 698, 698,
	0, 0, 0, 648, 0, 0, 0, 0, 695, 0,
	664, 665, 0, 695, 0, 671, 701, 0, 676, 698,
	698, 679, 1764, 0, 1764, 1764, 1231, 0, 692, 690,
	704, 705, 708, 712, 0, 717, 720, 1257, 1258, 0,
	735, 47, 1500, 727, 740, 741, 0, 773, 774, 43,
	975, 0, 900, 905, 916, 929, 930, 931, 932, 933,
	935, 936, 0, 0, 0, 0, 941, 942, 0, 0,
	0, 0, 0, 956, 0, 0, 0, 0, 0, 1105,
	0, 1068, 1068, 992, 1068, 1070, 1070, 0, 0, 0,
	1760, 1540, 1548, 1549, 1571, 1656, 1704, 1544, 1545, 1526,
	1538, 1541, 1529, 1530, 1532, 1534, 1539, 1546, 1552, 1531,
	1551, 1550, 0, 1527, 1528, 1533, 1543, 1547, 1535, 1536,
	1537, 1542, 1553, 1114, 0, 0, 0, 0, 0, 0,
	257, 258, 974, 1220, 1070, 1070, 1070, 1070, 1070, -2,
	-2, 204, 205, 206, 207, 208, 209, 210, 0, 200,
	0, 262, 263, 259, 260, 261, 958, 959, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 1763,
	0, 750, 0, 0, 0, 0, 0, 1133, 0, 1125,
	1124, 61, 0, 777, -2, 0, 0, 0, 0, 45,
	0, 50, 837, 75, 74, 1172, 0, 0, 0, 57,
	1134, 65, 67, 1135, 0, 782, 783, 0, 813, 817,
	0, 778, 0, 0, 1247, 1246, 1246, 100, 0, 1700,
	1224, -2, -2, 0, 0, 1259, 1260, 1233, -2, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, -2, 0, 0, 161,
	162, 0, 41, 382, 0, 157, 0, 375, 321, 0,
	1150, 0, 0, 0, 0, 0, 777, 0, 1241, 142,
	143, 149, 150, 355, 355, 512, 0, 0, 151, 151,
	479, 480, 481, 0, 0, -2, 380, 0, 459, 0,
	0, 369, 369, 373, 371, 372, 0, 0, 0, 0,
	0, 0, 492, 0, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 0, 356, 0, 510, 511,
	411, 0, 0, 0, 0, 490, 491, 0, 0, 1249,
	1250, 0, 0, 0, 355, 355, 0, 0, 0, 0,
	355, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1163, 0, 0, 0, -2, 0, 628, 0, 0,
	0, 1242, 1242, 0, 635, 0, 637, 638, 0, 0,
	639, 0, 695, 695, 693, 694, 641, 642, 643, 644,
	698, 0, 0, 364, 365, 366, 695, 698, 0, 698,
	698, 698, 698, 695, 695, 695, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 701, 698, 0,
	672, 0, 673, 674, 677, 678, 680, 1765, 1766, 1280,
	1764, 1764, 684, 688, 1232, 710, 718, 721, 738, 736,
	737, 739, 731, 732, 733, 734, 0, 752, 753, 758,
	0, 0, 0, 0, 764, 765, 766, 0, 0, 769,
	770, 771, 0, 0, 0, 0, 0, 898, 0, 0,
	964, 965, 966, 967, 968, 969, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 937, 938, 939,
	940, 943, 0, 0, 0, 948, 949, 0, 0, 0,
	0, 0, 787, 0, 1106, 0, 990, 0, 991, 993,
	994, 0, 995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 797,
	0, 0, 797, 797, 0, 0, 193, 194, 195, 196,
	197, 211, 212, 213, 214, 215, 264, 1114, 0, 974,
	0, 0, 44, 742, 743, 0, 861, 1252, 0, 0,
	793, 0, 55, 64, 66, 1133, 59, 1133, 0, 799,
	0, 0, -2, -2, 800, 806, 807, 808, 809, 810,
	52, 1762, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 333, 1175, 0, 0, 1126, 1127, 1130, 0, 814,
	1582, 818, 0, 820, 821, 0, 780, 0, 98, 0,
	877, 0, 0, 0, 1700, 1230, 0, 102, 103, 0,
	0, 0, 339, 1235, 1236, 1237, -2, 362, 0, 339,
	328, 272, 273, 274, 321, 276, 321, 321, 321, 321,
	333, 333, 333, 333, 304, 305, 306, 307, 308, 0,
	0, 291, 321, 321, 321, 321, 311, 312, 313, 314,
	315, 316, 317, 318, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 323, 323, 323, 325, 325, 0, 42,
	0, 343, 0, 1130, 0, 0, 1163, 1244, 1254, 0,
	0, 0, 1244, 120, 0, 0, 513, 547, 473, 502,
	514, 0, 476, 477, -2, 0, 0, 458, 0, 460,
	0, 363, 0, -2, 0, 373, 0, 369, 373, 370,
	373, 361, 374, 494, 495, 496, 0, 577, 847, 0,
	0, 0, 0, 0, 583, 584, 585, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 503, 504,
	505, 506, 507, 508, 509, 0, 0, 460, 0, 499,
	0, 412, 413, 414, 0, 0, 417, 418, 419, 420,
	0, 0, 423, 424, 425, 864, 865, 426, 427, 452,
	453, 454, 428, 429, 430, 431, 432, 433, 434, 446,
	447, 448, 449, 450, 451, 435, 436, 437, 438, 439,
	440, 443, 0, 135, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 796, 879, 1265, 1266, 699, 700, 0,
	367, 368, 698, 698, 645, 685, 0, 698, 649, 686,
	650, 652, 651, 653, 666, 667, 698, 656, 696, 697,
	657, 658, 659, 660, 661, 662, 663, 681, 668, 669,
	670, 702, 0, 706, 707, 682, 683, 0, 719, 723,
	724, 725, 726, 0, 0, 755, 94, 760, 761, 762,
	763, 775, 768, 976, 895, 896, 897, 0, 899, 902,
	0, 960, 962, 904, 906, 971, 972, 973, 0, 0,
	0, 0, 0, 910, 914, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 934, 1084, 1085,
	1086, 951, 265, 266, 0, 952, 0, 811, 0, 0,
	0, 950, 0, 0, 0, 0, 788, 789, 1112, 1109,
	0, 0, 1069, 1071, 0, 0, 0, 0, 0, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1087, 0, 0, 0, 0, 0, 1105, 0, 953, 954,
	955, 0, 0, 0, 1253, 0, 130, 131, 0, 0,
	0, 0, 0, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 798, 1115, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 745, 746, 748,
	0, 881, 0, 862, 0, 0, 751, 0, 792, 0,
	795, 58, 60, 804, 805, 0, 822, 801, 54, 49,
	0, 0, 839, 1173, 333, 1195, 0, 337, 338, 1136,
	1137, 0, 1129, 1131, 1132, 77, 819, 815, 0, 893,
	0, 0, 876, 0, 825, 827, 828, 829, 859, 0,
	832, 0, 0, 0, 0, 0, 96, 878, 1225, 101,
	0, 0, 106, 107, 1226, 1227, 1228, 1229, 0, 536,
	-2, 407, 163, 165, 166, 167, 158, -2, 331, 329,
	330, 275, 333, 333, 298, 299, 300, 301, 302, 303,
	0, 0, 292, 293, 294, 295, 286, 0, 287, 288,
	289, 0, 290, 381, 0, 1138, 344, 345, 347, 355,
	0, 350, 351, 0, 355, 355, 0, 376, 377, 0,
	1130, 1154, 0, 0, 0, 1255, 1254, 1254, 1254, 0,
	153, 154, 155, 156, 572, 0, 0, 548, 570, 571,
	151, 0, 0, 159, 462, 461, 0, 604, 0, 379,
	0, 0, 373, 373, 358, 359, 497, 0, 0, 579,
	580, 581, 582, 0, 0, 0, 460, 462, 339, 0,
	415, 416, 421, 422, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 528, 529, 530,
	464, 534, 531, 464, 535, 1151, 1152, 1153, 0, 0,
	629, 0, 0, 399, 92, 1243, 634, 695, 655, 687,
	695, 647, 654, 675, 715, 759, 0, 0, 0, 0,
	767, 0, 0, 903, 961, 963, 907, 0, 911, 915,
	0, 0, 0, 0, 0, 0, 0, 957, 981, 982,
	0, 0, 1124, 0, 1110, 0, 0, 989, 1072, 1073,
	0, 0, 0, 0, 0, 1000, 1001, 1002, 1003, 1004,
	0, 1006, 0, 0, 0, 1010, 1011, 0, 0, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1026, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1038, 977, 0, 0, 797, 0, 1074, 1075,
	1076, 1077, 1078, 1115, 744, 747, 749, 835, 882, 883,
	0, 0, 0, 0, 863, 1251, 790, 791, 794, -2,
	0, 0, 1117, 0, 0, 822, 893, 823, 0, 802,
	51, 838, 0, 1177, 1176, 1189, 1202, 334, 335, 336,
	1128, 0, 1133, 0, 1213, 0, 0, 1205, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 869,
	0, 0, 0, 0, 860, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 90, 91, 0, 0, 0, 104,
	105, 0, 0, 111, 340, 341, 144, 151, 409, 164,
	389, 0, 0, 271, 332, 296, 297, 0, 319, 0,
	0, 0, 402, 116, 1142, 1141, 355, 355, 346, 0,
	349, 0, 0, 0, 1256, 322, 378, 0, 134, 0,
	0, 0, 0, 0, 140, 542, 0, 0, 549, 0,
	0, 0, 471, 0, 482, 483, 0, 576, -2, 625,
	343, 0, 357, 360, 848, 0, 0, 484, 0, 462,
	488, 489, 500, 444, 445, 442, 0, 0, 1164, 1165,
	1170, 1168, 1169, 121, 520, 522, 521, 525, 0, 0,
	466, 0, 466, 518, 0, 399, 1138, 0, 633, 400,
	401, 698, 698, 754, 95, 0, 757, 0, 0, 0,
	0, 908, 912, 812, 0, 0, 321, 321, 1092, 321,
	325, 1095, 321, 1097, 321, 1100, 321, 1103, 1104, 0,
	0, 0, 0, 1107, 988, 1113, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 132, 133, 1041,
	0, 0, 1043, 1045, 1046, 1016, 1042, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	978, 979, 0, 1116, 884, 889, 889, 889, 0, 0,
	0, 1238, 1239, 1118, 1119, 893, 1120, 824, 803, 840,
	1195, 0, 1188, 0, -2, 1197, 0, 0, 0, 1203,
	816, 78, 894, 81, 0, 1213, 1221, 0, 1204, 1215,
	1217, 0, 0, 0, 1209, 0, 893, 826, 855, 857,
	0, 852, 867, 868, 870, 0, 872, 0, 874, 875,
	837, 831, 833, 0, 0, 0, 98, 0, 893, 893,
	97, 0, 880, 108, 109, 110, 408, 168, 173, 0,
	0, 0, 178, 0, 180, 0, 390, 0, 268, 270,
	0, 0, 171, 333, 0, 333, 0, 326, 0, 391,
	403, 0, 1139, 1140, 0, 0, 348, 352, 353, 354,
	0, 1245, 136, 0, 0, 0, 545, 0, 573, 0,
	0, 0, 0, 0, 0, 160, 463, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 355, 0, 0, 0,
	355, 355, 355, 617, 342, 0, 0, 601, 598, 485,
	0, 198, 199, 201, 0, 0, 487, 837, 1155, 1156,
	1157, 0, 1167, 1171, 124, 0, 0, 0, 0, 532,
	0, 465, 533, 630, 631, 632, 93, 640, 646, 756,
	776, 901, 909, 913, 0, 945, 1090, 333, 1093, 1094,
	1096, 1098, 1099, 1101, 1102, 946, 947, 0, 984, 0,
	986, 1133, 0, 1111, 0, 0, 998, 0, 0, 0,
	1007, 1008, 1009, 0, 0, 1015, 0, 1017, 0, 0,
	0, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 980, 0, 0, 0, 0, 861, -2, 62, 1120,
	1122, 0, 1182, 1180, 1180, 1190, 1191, 0, 0, 1198,
	0, 0, 0, 0, 82, 0, 0, 0, 1218, 0,
	0, 0, 0, 99, 1124, 849, 856, 0, 0, 850,
	0, 851, 871, 873, 830, -2, 834, 0, 893, 893,
	88, 89, 0, 174, 0, 176, 191, 192, 0, 179,
	181, 182, 267, 269, 0, 0, 309, 320, 310, 0,
	0, 404, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 837,
	137, 138, 139, 537, 0, 547, 0, 0, 0, 540,
	0, 474, 0, 0, 0, 355, 355, 355, 0, 0,
	0, 0, 578, 0, 586, 0, 0, 0, 202, 203,
	0, 1166, 519, 0, 122, 123, 0, 0, 524, 467,
	468, 1079, 1091, 0, 0, 0, 1108, 0, 0, 0,
	0, 1005, 1013, 0, 1044, 0, 1020, 0, 0, 0,
	567, 568, 0, 1040, 0, 890, 0, 0, 0, 0,
	881, 1122, 80, 0, 0, 1185, 0, 1178, 1181, 1179,
	1192, 0, 0, 1199, 0, 1201, 0, 1222, 1223, 1216,
	0, 1208, 1211, 1207, 1210, 1133, 853, 0, 858, 0,
	1124, 87, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 327,
	0, 0, 0, 538, 0, 550, 541, 0, 615, 0,
	619, 0, 0, 0, 622, 623, 624, 383, 602, 599,
	600, 486, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 983, 985, 987, 996, 997, 1088, 1089, 1014, 1018,
	0, 1021, 0, 0, 1022, 0, 569, 0, 886, 843,
	844, 891, 892, 0, 0, 836, 79, 1123, 1121, 1174,
	0, 1183, 1184, 1193, 1194, 1200, 0, 1206, 0, 85,
	0, 0, 0, 1133, 175, 0, 185, 0, 546, 0,
	549, 539, 613, 614, 0, 626, 618, 620, 621, 1158,
	0, 0, 0, 526, 944, 0, 0, 0, 1041, 1023,
	0, 565, 566, 0, 885, 887, 888, 1186, 1187, 1214,
	1212, 854, 861, 0, 86, 384, 389, 1158, 0, 0,
	0, 516, 1160, 127, 128, 455, 456, 457, 121, 1080,
	0, 1083, 0, 845, 846, 551, 0, 553, 0, -2,
	385, 386, 0, 169, 186, 187, 0, 0, 190, 183,
	184, 117, 0, 0, 627, 0, 1161, 1162, 124, 1081,
	1019, 552, 0, 0, 339, 0, 562, 387, 0, 388,
	0, 0, 0, 188, 189, 574, 0, 0, 523, 0,
	554, 555, 563, 0, 392, 394, 395, 0, 0, 393,
	543, 0, 574, 1159, 0, 0, 564, 560, 396, 397,
	398, 575, 544, 1082, 0, 556, 557, 558, 559,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 605,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:524
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:529
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:565
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:606
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:619
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:629
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:635
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:838
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:842
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:876
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:909
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:931
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:935
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:941
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:945
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:949
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:955
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:967
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:973
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:977
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1051
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1093
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1100
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1129
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1136
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1147
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1158
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1164
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1168
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1186
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1192
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1196
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1213
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1217
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1223
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1233
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1238
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1271
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1280
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1289
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1306
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1348
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1359
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1363
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1424
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1497
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1713
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1717
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1721
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1725
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1956
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1961
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1965
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1973
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1983
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1995
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2055
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2064
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2070
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2080
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2084
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2089
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2093
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2097
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2101
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2105
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2109
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2125
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2129
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2133
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2137
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2141
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = ""
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = yyDollar[2].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2180
		{
			yyVAL.str = "key"
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2209
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2219
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2223
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2229
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2233
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2239
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2243
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2249
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2255
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2259
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2263
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2267
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2271
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2280
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2286
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2292
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2298
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2304
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2308
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2312
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2316
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2320
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2325
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2355
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2361
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2369
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2375
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2453
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2457
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2461
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2465
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2469
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2473
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2477
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2481
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2485
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2489
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2493
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2497
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2501
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2505
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2569
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2574
		{
			yyVAL.str = ""
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2583
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2587
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2591
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2600
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2604
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2612
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2616
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2622
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2708
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2712
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2720
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2724
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2730
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2740
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2744
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2748
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2752
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2756
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2760
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2764
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2768
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2772
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2778
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2799
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2835
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2866
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2891
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2898
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2905
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2912
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2919
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2949
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2960
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2969
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2977
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2986
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2993
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3005
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3014
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3029
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3043
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3047
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3053
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3059
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3065
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3075
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3079
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3085
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3091
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3097
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3103
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3127
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3133
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3139
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3143
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3147
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3153
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3157
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3162
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3166
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3171
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3175
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3181
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3185
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3189
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3193
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3197
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3201
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3205
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3209
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3213
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3217
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3221
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3225
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3229
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3233
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3237
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3241
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3245
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3249
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3253
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3257
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3261
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3265
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3285
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3300
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3304
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3309
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3314
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3319
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3324
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3329
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3335
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3341
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3348
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3355
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3362
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3380
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3386
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3392
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3398
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3404
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3410
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3416
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3422
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yyVAL.str = ""
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3444
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3448
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3512
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3636
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3640
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3644
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3648
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3652
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3656
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3687
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3691
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = "extended "
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3731
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3749
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3753
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3763
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3769
		{
			yyVAL.empty = struct{}{}
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.empty = struct{}{}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.empty = struct{}{}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.empty = struct{}{}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.empty = struct{}{}
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3837
		{
			yyVAL.empty = struct{}{}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.empty = struct{}{}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3855
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3859
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3863
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3867
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3871
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3875
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = yyDollar[1].str
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = yyDollar[1].str
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3952
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3962
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3968
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3972
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3976
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3980
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4105
		{
			setAllowComments(yylex, true)
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4115
		{
			yyVAL.strs = nil
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4125
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4190
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4209
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.strs = nil
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4226
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4230
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = SQLCacheStr
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = DistinctStr
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = DistinctStr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = StraightJoinHint
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4266
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4270
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4276
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4280
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4284
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4288
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4293
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4313
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4317
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4323
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4329
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4343
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4347
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4351
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4355
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4361
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4365
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4371
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4375
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4384
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4390
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4400
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4410
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4414
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4422
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4428
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4432
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4445
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4449
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4453
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4457
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4463
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4465
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4469
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4477
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4480
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4485
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4506
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4510
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4514
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4520
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4526
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4530
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4534
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4538
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4544
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4548
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4558
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4583
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4587
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4593
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4603
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4607
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4611
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4615
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4620
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4624
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4628
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4632
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4642
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4680
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4684
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4688
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4718
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4722
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4726
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4730
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4734
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4738
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4776
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4784
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4788
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4822
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4826
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4830
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4834
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4842
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4846
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4858
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4882
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4900
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4904
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4908
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4914
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4924
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4928
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4935
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4939
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4943
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4947
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4953
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4957
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4961
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4965
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4969
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4973
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4977
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4983
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4987
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4991
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4998
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5004
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5287
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5296
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5302
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5324
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5328
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5332
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5336
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5340
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5344
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5348
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5352
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5356
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5360
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5364
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5370
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5374
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5378
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5382
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5386
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5390
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5394
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5398
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5402
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5457
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5461
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5465
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5469
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5473
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5497
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5501
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5507
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5511
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5515
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5519
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5523
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5529
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5533
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5537
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5541
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5545
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5549
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5553
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5557
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5561
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5565
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = string("")
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5584
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5590
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5594
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5600
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5615
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5619
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5623
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5652
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5670
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5676
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5682
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5686
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5692
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5697
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5701
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5705
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5714
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5720
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5724
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5728
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5737
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5741
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5745
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5749
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5756
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5760
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5764
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5768
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5774
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5778
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5782
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = ""
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5791
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5795
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5799
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5804
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5823
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5827
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = "cascaded"
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5849
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5855
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5861
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5867
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5895
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5899
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5905
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5909
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5913
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5922
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5926
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5935
		{
			yyVAL.str = " header"
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5940
		{
			yyVAL.str = ""
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5944
		{
			yyVAL.str = " manifest on"
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5948
		{
			yyVAL.str = " manifest off"
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5953
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = " overwrite on"
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5961
		{
			yyVAL.str = " overwrite off"
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5996
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6005
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6021
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = " optionally"
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6051
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6055
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6059
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6063
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6067
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6073
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6077
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6085
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6094
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6100
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6110
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6114
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6120
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6135
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6145
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6151
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6161
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6165
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6169
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6173
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6177
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6185
		{
			yyVAL.str = "charset"
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6217
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6219
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6224
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6232
		{
			yyVAL.empty = struct{}{}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.empty = struct{}{}
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6236
		{
			yyVAL.empty = struct{}{}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6240
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6249
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6256
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6260
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6270
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6283
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6287
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6293
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6304
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6823
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6832
		{
			decNesting(yylex)
		}
	case 1763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6837
		{
			skipToEnd(yylex)
		}
	case 1764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6842
		{
			skipToEnd(yylex)
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			skipToEnd(yylex)
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6850
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
