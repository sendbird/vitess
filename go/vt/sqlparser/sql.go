// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const DEALLOCATE = 57537
const REVERT = 57538
const SCHEMA = 57539
const TABLE = 57540
const INDEX = 57541
const VIEW = 57542
const TO = 57543
const IGNORE = 57544
const IF = 57545
const PRIMARY = 57546
const COLUMN = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const KEY_BLOCK_SIZE = 57550
const CHECK = 57551
const INDEXES = 57552
const ACTION = 57553
const CASCADE = 57554
const CONSTRAINT = 57555
const FOREIGN = 57556
const NO = 57557
const REFERENCES = 57558
const RESTRICT = 57559
const SHOW = 57560
const DESCRIBE = 57561
const EXPLAIN = 57562
const DATE = 57563
const ESCAPE = 57564
const REPAIR = 57565
const OPTIMIZE = 57566
const TRUNCATE = 57567
const COALESCE = 57568
const EXCHANGE = 57569
const REBUILD = 57570
const PARTITIONING = 57571
const REMOVE = 57572
const PREPARE = 57573
const EXECUTE = 57574
const MAXVALUE = 57575
const PARTITION = 57576
const REORGANIZE = 57577
const LESS = 57578
const THAN = 57579
const PROCEDURE = 57580
const TRIGGER = 57581
const VINDEX = 57582
const VINDEXES = 57583
const DIRECTORY = 57584
const NAME = 57585
const UPGRADE = 57586
const STATUS = 57587
const VARIABLES = 57588
const WARNINGS = 57589
const CASCADED = 57590
const DEFINER = 57591
const OPTION = 57592
const SQL = 57593
const UNDEFINED = 57594
const SEQUENCE = 57595
const MERGE = 57596
const TEMPORARY = 57597
const TEMPTABLE = 57598
const INVOKER = 57599
const SECURITY = 57600
const FIRST = 57601
const AFTER = 57602
const LAST = 57603
const VITESS_MIGRATION = 57604
const CANCEL = 57605
const RETRY = 57606
const COMPLETE = 57607
const CLEANUP = 57608
const BEGIN = 57609
const START = 57610
const TRANSACTION = 57611
const COMMIT = 57612
const ROLLBACK = 57613
const SAVEPOINT = 57614
const RELEASE = 57615
const WORK = 57616
const BIT = 57617
const TINYINT = 57618
const SMALLINT = 57619
const MEDIUMINT = 57620
const INT = 57621
const INTEGER = 57622
const BIGINT = 57623
const INTNUM = 57624
const REAL = 57625
const DOUBLE = 57626
const FLOAT_TYPE = 57627
const DECIMAL_TYPE = 57628
const NUMERIC = 57629
const TIME = 57630
const TIMESTAMP = 57631
const DATETIME = 57632
const YEAR = 57633
const CHAR = 57634
const VARCHAR = 57635
const BOOL = 57636
const CHARACTER = 57637
const VARBINARY = 57638
const NCHAR = 57639
const TEXT = 57640
const TINYTEXT = 57641
const MEDIUMTEXT = 57642
const LONGTEXT = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const ASCII = 57658
const UNICODE = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const CODE = 57666
const COLLATION = 57667
const COLUMNS = 57668
const DATABASES = 57669
const ENGINES = 57670
const EVENT = 57671
const EXTENDED = 57672
const FIELDS = 57673
const FULL = 57674
const FUNCTION = 57675
const GTID_EXECUTED = 57676
const KEYSPACES = 57677
const OPEN = 57678
const PLUGINS = 57679
const PRIVILEGES = 57680
const PROCESSLIST = 57681
const SCHEMAS = 57682
const TABLES = 57683
const TRIGGERS = 57684
const USER = 57685
const VGTID_EXECUTED = 57686
const VITESS_KEYSPACES = 57687
const VITESS_METADATA = 57688
const VITESS_MIGRATIONS = 57689
const VITESS_REPLICATION_STATUS = 57690
const VITESS_SHARDS = 57691
const VITESS_TABLETS = 57692
const VSCHEMA = 57693
const NAMES = 57694
const GLOBAL = 57695
const SESSION = 57696
const ISOLATION = 57697
const LEVEL = 57698
const READ = 57699
const WRITE = 57700
const ONLY = 57701
const REPEATABLE = 57702
const COMMITTED = 57703
const UNCOMMITTED = 57704
const SERIALIZABLE = 57705
const CURRENT_TIMESTAMP = 57706
const DATABASE = 57707
const CURRENT_DATE = 57708
const NOW = 57709
const CURRENT_TIME = 57710
const LOCALTIME = 57711
const LOCALTIMESTAMP = 57712
const CURRENT_USER = 57713
const UTC_DATE = 57714
const UTC_TIME = 57715
const UTC_TIMESTAMP = 57716
const DAY = 57717
const DAY_HOUR = 57718
const DAY_MICROSECOND = 57719
const DAY_MINUTE = 57720
const DAY_SECOND = 57721
const HOUR = 57722
const HOUR_MICROSECOND = 57723
const HOUR_MINUTE = 57724
const HOUR_SECOND = 57725
const MICROSECOND = 57726
const MINUTE = 57727
const MINUTE_MICROSECOND = 57728
const MINUTE_SECOND = 57729
const MONTH = 57730
const QUARTER = 57731
const SECOND = 57732
const SECOND_MICROSECOND = 57733
const YEAR_MONTH = 57734
const WEEK = 57735
const REPLACE = 57736
const CONVERT = 57737
const CAST = 57738
const SUBSTR = 57739
const SUBSTRING = 57740
const GROUP_CONCAT = 57741
const SEPARATOR = 57742
const TIMESTAMPADD = 57743
const TIMESTAMPDIFF = 57744
const WEIGHT_STRING = 57745
const MATCH = 57746
const AGAINST = 57747
const BOOLEAN = 57748
const LANGUAGE = 57749
const WITH = 57750
const QUERY = 57751
const EXPANSION = 57752
const WITHOUT = 57753
const VALIDATION = 57754
const UNUSED = 57755
const ARRAY = 57756
const CUME_DIST = 57757
const DESCRIPTION = 57758
const DENSE_RANK = 57759
const EMPTY = 57760
const EXCEPT = 57761
const FIRST_VALUE = 57762
const GROUPING = 57763
const GROUPS = 57764
const JSON_TABLE = 57765
const LAG = 57766
const LAST_VALUE = 57767
const LATERAL = 57768
const LEAD = 57769
const MEMBER = 57770
const NTH_VALUE = 57771
const NTILE = 57772
const OF = 57773
const OVER = 57774
const PERCENT_RANK = 57775
const RANK = 57776
const RECURSIVE = 57777
const ROW_NUMBER = 57778
const SYSTEM = 57779
const WINDOW = 57780
const ACTIVE = 57781
const ADMIN = 57782
const BUCKETS = 57783
const CLONE = 57784
const COMPONENT = 57785
const DEFINITION = 57786
const ENFORCED = 57787
const EXCLUDE = 57788
const FOLLOWING = 57789
const GEOMCOLLECTION = 57790
const GET_MASTER_PUBLIC_KEY = 57791
const HISTOGRAM = 57792
const HISTORY = 57793
const INACTIVE = 57794
const INVISIBLE = 57795
const LOCKED = 57796
const MASTER_COMPRESSION_ALGORITHMS = 57797
const MASTER_PUBLIC_KEY_PATH = 57798
const MASTER_TLS_CIPHERSUITES = 57799
const MASTER_ZSTD_COMPRESSION_LEVEL = 57800
const NESTED = 57801
const NETWORK_NAMESPACE = 57802
const NOWAIT = 57803
const NULLS = 57804
const OJ = 57805
const OLD = 57806
const OPTIONAL = 57807
const ORDINALITY = 57808
const ORGANIZATION = 57809
const OTHERS = 57810
const PATH = 57811
const PERSIST = 57812
const PERSIST_ONLY = 57813
const PRECEDING = 57814
const PRIVILEGE_CHECKS_USER = 57815
const PROCESS = 57816
const RANDOM = 57817
const REFERENCE = 57818
const REQUIRE_ROW_FORMAT = 57819
const RESOURCE = 57820
const RESPECT = 57821
const RESTART = 57822
const RETAIN = 57823
const REUSE = 57824
const ROLE = 57825
const SECONDARY = 57826
const SECONDARY_ENGINE = 57827
const SECONDARY_LOAD = 57828
const SECONDARY_UNLOAD = 57829
const SKIP = 57830
const SRID = 57831
const THREAD_PRIORITY = 57832
const TIES = 57833
const UNBOUNDED = 57834
const VCPU = 57835
const VISIBLE = 57836
const FORMAT = 57837
const TREE = 57838
const VITESS = 57839
const TRADITIONAL = 57840
const LOCAL = 57841
const LOW_PRIORITY = 57842
const NO_WRITE_TO_BINLOG = 57843
const LOGS = 57844
const ERROR = 57845
const GENERAL = 57846
const HOSTS = 57847
const OPTIMIZER_COSTS = 57848
const USER_RESOURCES = 57849
const SLOW = 57850
const CHANNEL = 57851
const RELAY = 57852
const EXPORT = 57853
const AVG_ROW_LENGTH = 57854
const CONNECTION = 57855
const CHECKSUM = 57856
const DELAY_KEY_WRITE = 57857
const ENCRYPTION = 57858
const ENGINE = 57859
const INSERT_METHOD = 57860
const MAX_ROWS = 57861
const MIN_ROWS = 57862
const PACK_KEYS = 57863
const PASSWORD = 57864
const FIXED = 57865
const DYNAMIC = 57866
const COMPRESSED = 57867
const REDUNDANT = 57868
const COMPACT = 57869
const ROW_FORMAT = 57870
const STATS_AUTO_RECALC = 57871
const STATS_PERSISTENT = 57872
const STATS_SAMPLE_PAGES = 57873
const STORAGE = 57874
const MEMORY = 57875
const DISK = 57876
const PARTITIONS = 57877
const LINEAR = 57878
const RANGE = 57879
const LIST = 57880
const SUBPARTITION = 57881
const SUBPARTITIONS = 57882
const HASH = 57883

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	559, 140,
	-2, 146,
	-1, 48,
	116, 146,
	156, 146,
	312, 146,
	-2, 453,
	-1, 55,
	33, 649,
	216, 649,
	227, 649,
	262, 663,
	263, 663,
	-2, 651,
	-1, 60,
	218, 674,
	-2, 672,
	-1, 114,
	215, 1145,
	-2, 119,
	-1, 116,
	1, 141,
	559, 141,
	-2, 146,
	-1, 126,
	117, 355,
	221, 355,
	-2, 447,
	-1, 145,
	116, 146,
	156, 146,
	312, 146,
	-2, 462,
	-1, 612,
	200, 1166,
	-2, 1162,
	-1, 613,
	200, 1167,
	-2, 1163,
	-1, 687,
	57, 742,
	-2, 757,
	-1, 724,
	132, 1529,
	-2, 112,
	-1, 725,
	132, 1405,
	-2, 113,
	-1, 731,
	132, 1459,
	-2, 1139,
	-1, 874,
	132, 1336,
	-2, 1136,
	-1, 912,
	226, 41,
	231, 41,
	-2, 366,
	-1, 989,
	1, 501,
	559, 501,
	-2, 146,
	-1, 1192,
	57, 743,
	-2, 762,
	-1, 1193,
	57, 744,
	-2, 763,
	-1, 1245,
	116, 146,
	156, 146,
	312, 146,
	-2, 397,
	-1, 1322,
	117, 355,
	221, 355,
	-2, 447,
	-1, 1331,
	226, 42,
	231, 42,
	-2, 367,
	-1, 1588,
	200, 1171,
	-2, 1165,
	-1, 1669,
	116, 146,
	156, 146,
	312, 146,
	-2, 398,
	-1, 1676,
	23, 165,
	-2, 167,
	-1, 1871,
	84, 39,
	-2, 797,
	-1, 1921,
	75, 94,
	84, 94,
	-2, 817,
	-1, 1985,
	534, 577,
	-2, 564,
	-1, 2090,
	47, 1107,
	-2, 1101,
	-1, 2272,
	84, 39,
	-2, 798,
	-1, 2310,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 790,
}

const yyPrivate = 57344

const yyLast = 36440

var yyAct = [...]int{
	612, 2591, 2585, 1623, 2375, 2552, 2226, 2553, 2539, 2104,
	2141, 2148, 3, 2182, 702, 606, 2101, 1604, 2460, 1053,
	1171, 680, 2400, 2474, 605, 37, 1859, 2209, 2208, 1729,
	96, 1207, 1894, 562, 2150, 2105, 2102, 2281, 2275, 1602,
	615, 1642, 942, 566, 2405, 2301, 588, 559, 603, 604,
	2211, 182, 1917, 2091, 182, 2099, 526, 182, 1627, 1886,
	2267, 1953, 542, 560, 182, 2022, 1982, 1699, 1704, 1001,
	877, 1955, 182, 1954, 729, 1861, 154, 1719, 1655, 558,
	1906, 703, 38, 1194, 2038, 1878, 1582, 182, 554, 1646,
	1527, 1030, 1666, 1718, 140, 1738, 1771, 1706, 1947, 902,
	1237, 1329, 684, 1647, 688, 621, 920, 682, 1923, 542,
	1216, 571, 542, 182, 542, 36, 1345, 1504, 1531, 95,
	1538, 1649, 705, 1174, 1585, 907, 1072, 1550, 726, 1433,
	1437, 1486, 1336, 884, 913, 910, 1716, 885, 908, 91,
	909, 1419, 1236, 881, 694, 1634, 1234, 1051, 1046, 157,
	1442, 1220, 117, 118, 1297, 123, 1321, 1695, 124, 716,
	692, 76, 690, 985, 97, 549, 1142, 85, 2505, 1595,
	1975, 1628, 1138, 89, 2592, 2200, 2179, 98, 1731, 1732,
	1733, 1731, 2001, 2000, 1769, 944, 1973, 1405, 2197, 691,
	77, 8, 2358, 7, 2030, 689, 6, 119, 958, 959,
	2031, 962, 963, 964, 965, 125, 90, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 947, 710, 1493, 715, 1492, 499, 1599, 1600,
	696, 550, 2198, 1491, 924, 1302, 1073, 878, 1490, 683,
	1489, 681, 1488, 1475, 2204, 1857, 2568, 184, 185, 186,
	1480, 552, 1073, 553, 2087, 723, 893, 178, 888, 1888,
	955, 697, 2334, 923, 2456, 704, 119, 2165, 594, 899,
	898, 102, 2455, 2368, 1104, 946, 2369, 78, 945, 2601,
	730, 120, 948, 949, 950, 78, 2549, 2595, 1809, 78,
	2522, 900, 2584, 2376, 162, 2465, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1113, 1112, 1114, 1115, 78, 1711, 1897,
	80, 2540, 104, 105, 1757, 108, 2548, 2037, 114, 2521,
	2259, 179, 1311, 2009, 494, 892, 2418, 2008, 894, 960,
	119, 1176, 1709, 1858, 1898, 897, 1937, 994, 995, 2137,
	1037, 1083, 1039, 2029, 676, 677, 678, 679, 1806, 2201,
	687, 159, 1807, 160, 87, 2138, 2139, 1083, 1661, 1662,
	1660, 1049, 87, 177, 988, 1020, 87, 1932, 674, 997,
	1931, 1601, 1238, 1933, 1239, 673, 178, 1008, 718, 719,
	1036, 1038, 1009, 1008, 87, 496, 1976, 1944, 1009, 1025,
	1026, 1679, 1678, 895, 1021, 545, 1007, 1014, 1006, 2250,
	120, 2278, 2228, 675, 2248, 540, 2064, 1479, 544, 538,
	1395, 529, 1739, 162, 2004, 529, 1178, 2144, 1783, 1780,
	1782, 1781, 897, 1983, 889, 2221, 1420, 529, 529, 1777,
	1772, 891, 890, 2222, 1079, 2594, 984, 1071, 1425, 1043,
	1481, 1482, 1483, 1785, 883, 1786, 1029, 1787, 1023, 1024,
	1079, 961, 990, 2017, 1396, 901, 1397, 2360, 1708, 2359,
	1788, 1048, 2145, 967, 966, 2443, 1776, 2230, 163, 1774,
	159, 1034, 160, 1022, 1742, 1035, 1015, 168, 1027, 1643,
	895, 2229, 177, 2356, 1778, 1040, 931, 2147, 1028, 903,
	929, 2142, 904, 904, 182, 87, 182, 2569, 940, 182,
	897, 983, 1181, 896, 939, 2152, 2153, 1033, 1775, 938,
	937, 936, 2143, 935, 934, 933, 928, 1041, 1314, 941,
	2154, 2589, 2596, 2582, 882, 1434, 882, 542, 542, 542,
	882, 916, 1335, 717, 880, 915, 1807, 1717, 2021, 2018,
	1862, 1864, 1763, 1430, 2149, 542, 542, 607, 1059, 589,
	611, 591, 608, 609, 1116, 587, 590, 610, 2065, 1065,
	951, 1018, 2172, 922, 1116, 987, 2003, 1309, 2495, 1308,
	1004, 37, 1010, 1011, 1012, 1013, 1307, 1993, 2466, 1431,
	1305, 498, 493, 2315, 592, 593, 2431, 163, 155, 2016,
	896, 2297, 2015, 1759, 2355, 1050, 168, 1928, 1078, 1075,
	1076, 1077, 1082, 1084, 1081, 2164, 1080, 530, 2504, 2151,
	1974, 530, 1044, 1074, 1078, 1075, 1076, 1077, 1082, 1084,
	1081, 2154, 1080, 530, 530, 2006, 932, 1893, 1426, 1074,
	930, 1119, 1120, 1121, 1122, 1849, 1334, 2033, 1117, 1118,
	1594, 1127, 1224, 1130, 1629, 1630, 1977, 1820, 1169, 1150,
	999, 116, 1116, 1667, 986, 1115, 2136, 957, 1710, 922,
	699, 921, 2510, 1031, 1443, 1164, 1047, 2279, 896, 2202,
	2203, 2520, 111, 2057, 182, 1055, 1056, 2516, 542, 542,
	1042, 2024, 2205, 2024, 943, 1123, 2023, 1863, 2023, 2351,
	2291, 1773, 1424, 1808, 182, 1182, 86, 1003, 1407, 1406,
	1408, 1409, 1410, 1427, 86, 1185, 1184, 155, 86, 1240,
	1188, 1069, 81, 542, 682, 1187, 684, 182, 1580, 1551,
	2587, 1835, 542, 2588, 2146, 2586, 86, 1551, 542, 112,
	1966, 922, 1086, 922, 1087, 1088, 77, 1088, 1068, 1170,
	1066, 726, 2414, 1067, 1017, 1110, 1111, 1113, 1112, 1114,
	1115, 996, 922, 993, 2326, 1019, 2325, 921, 1144, 1746,
	1140, 1005, 1141, 915, 918, 919, 1186, 882, 1758, 1756,
	95, 912, 916, 1344, 1156, 1157, 1158, 1159, 1160, 1087,
	1088, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 911, 1032, 1444, 1175, 1343, 173, 174, 175,
	176, 1170, 1572, 1561, 1562, 1563, 1564, 1574, 1565, 1566,
	1567, 1579, 1575, 1568, 1569, 1576, 1577, 1578, 1570, 1571,
	1573, 1421, 1333, 1422, 1002, 992, 1423, 998, 98, 921,
	1000, 921, 989, 1751, 925, 915, 925, 915, 1172, 1754,
	931, 929, 1831, 2559, 926, 1235, 926, 2557, 681, 1183,
	921, 2578, 956, 683, 1206, 2316, 2561, 2562, 1225, 1203,
	1755, 2152, 2153, 2599, 712, 1751, 927, 1086, 2558, 1087,
	1088, 184, 185, 186, 2451, 1529, 2059, 182, 1230, 1231,
	1509, 1298, 1108, 1109, 1110, 1111, 1113, 1112, 1114, 1115,
	1306, 2450, 1753, 730, 1510, 1511, 1508, 1844, 2527, 2441,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 542, 2391, 1331, 1830, 2256, 173, 174, 175, 176,
	2390, 1340, 2579, 2254, 1201, 1342, 1214, 1414, 542, 542,
	2528, 542, 555, 542, 542, 87, 542, 542, 542, 542,
	542, 542, 1530, 1312, 1313, 1499, 1501, 1502, 2580, 1507,
	1086, 542, 1087, 1088, 721, 182, 1378, 2488, 1189, 1086,
	1826, 1087, 1088, 1201, 706, 2151, 1500, 1341, 1412, 1825,
	1555, 182, 2333, 922, 1556, 2225, 2501, 2154, 1635, 1636,
	1201, 1327, 542, 1086, 182, 1087, 1088, 2513, 1391, 2489,
	1413, 1213, 1373, 1374, 1086, 1432, 1087, 1088, 542, 2512,
	182, 1320, 2332, 1381, 1382, 1086, 1402, 1087, 1088, 1387,
	1388, 1086, 2180, 1087, 1088, 1086, 182, 1087, 1088, 2170,
	1951, 1375, 1339, 182, 1950, 1337, 1337, 1086, 1201, 1087,
	1088, 1411, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 542, 542, 542, 2262, 1347, 1714, 1348, 1229, 1350,
	1352, 1304, 1338, 1356, 1358, 1360, 1362, 1364, 1812, 1813,
	1814, 1318, 1317, 1086, 1316, 1087, 1088, 1330, 1415, 1401,
	2597, 921, 182, 1086, 1439, 1087, 1088, 915, 918, 919,
	1086, 882, 1087, 1088, 1447, 912, 916, 2439, 626, 627,
	628, 1451, 1400, 1453, 1454, 1455, 1456, 2352, 1445, 1446,
	1460, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1112,
	1114, 1115, 1450, 1824, 1474, 1505, 2039, 1528, 1399, 1457,
	1458, 1459, 1086, 1376, 1087, 1088, 1435, 1398, 1389, 1383,
	1541, 542, 1086, 2492, 1087, 1088, 2261, 1380, 1379, 119,
	1354, 1952, 899, 898, 2598, 1210, 542, 542, 2491, 1512,
	2490, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 2446, 1310, 1513, 1449, 2413, 2411,
	1586, 1503, 1086, 2387, 1087, 1088, 1086, 182, 1087, 1088,
	1058, 1552, 542, 184, 185, 186, 2330, 2323, 1470, 1471,
	1472, 2322, 1473, 1960, 1211, 1948, 1821, 2041, 1607, 1767,
	1613, 1766, 1614, 184, 185, 186, 182, 1935, 1247, 542,
	1086, 1506, 1087, 1088, 184, 185, 186, 1626, 1727, 182,
	1608, 1476, 542, 1534, 1534, 1588, 1440, 182, 1403, 182,
	1390, 182, 182, 542, 1386, 1385, 542, 1536, 1384, 1590,
	1591, 184, 185, 186, 1586, 1725, 1212, 542, 1045, 1537,
	1201, 95, 726, 1884, 2593, 726, 1543, 1544, 101, 2051,
	2050, 2049, 2043, 92, 2047, 2473, 2042, 2472, 2040, 100,
	95, 99, 2435, 2045, 93, 2434, 1589, 2374, 1619, 1592,
	1593, 1587, 2044, 1645, 1884, 2546, 1377, 1106, 1107, 1108,
	1109, 1110, 1111, 1113, 1112, 1114, 1115, 2046, 2048, 1588,
	1884, 2533, 542, 184, 185, 186, 1884, 2531, 1720, 1721,
	1722, 2523, 1201, 1724, 1726, 1418, 1618, 1671, 1685, 1686,
	1687, 1688, 1670, 1884, 2506, 2366, 2503, 542, 1201, 101,
	1884, 2442, 1984, 542, 1340, 2366, 1201, 1340, 1201, 1340,
	100, 1676, 99, 696, 94, 1750, 92, 1448, 1884, 2364,
	1621, 94, 1963, 94, 1452, 1640, 1740, 93, 1751, 1201,
	2295, 1201, 1895, 1653, 1701, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1674, 1638, 2100, 542, 1658, 1528, 1707, 1657,
	2162, 2161, 1528, 1528, 2290, 1673, 1675, 1672, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1090, 100, 1737, 2158, 2159,
	2158, 2157, 1201, 1487, 730, 1903, 1201, 730, 1902, 1201,
	1895, 1201, 1822, 1201, 1807, 2002, 1301, 1987, 182, 1980,
	1981, 1089, 2290, 1924, 1924, 182, 1884, 1883, 2131, 1880,
	182, 182, 924, 1903, 182, 1745, 182, 1807, 1748, 1712,
	1749, 1702, 1337, 182, 94, 1760, 1715, 1723, 1713, 1136,
	182, 1697, 1698, 1085, 1201, 1301, 1300, 1246, 1245, 2292,
	1085, 923, 1903, 2515, 1822, 1743, 1744, 1762, 1747, 1752,
	1884, 1761, 1764, 1765, 1702, 1903, 2160, 686, 182, 542,
	2335, 2290, 2075, 1659, 1822, 1841, 1925, 1925, 555, 1680,
	1840, 1681, 1682, 1683, 1684, 1927, 1807, 1751, 1734, 1633,
	1205, 1822, 1597, 1484, 1429, 1232, 906, 1691, 1692, 1693,
	1694, 905, 2565, 2536, 1104, 1798, 1799, 1100, 1369, 1101,
	1801, 87, 2462, 1208, 1505, 2183, 1751, 2432, 2425, 1802,
	2336, 2337, 2338, 1102, 1103, 1099, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1113, 1112, 1114, 1115, 2350, 2347, 1770,
	1637, 2328, 2265, 1104, 87, 2032, 2264, 1816, 1641, 1818,
	1644, 1791, 1303, 1487, 1700, 2223, 2185, 2181, 1370, 1371,
	1372, 1988, 1217, 1696, 1817, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1113, 1112, 1114, 1115, 1690, 1689, 1417, 1332,
	1328, 1299, 613, 1908, 1911, 1912, 1913, 1909, 182, 1910,
	1914, 113, 1957, 2302, 2303, 988, 182, 2227, 1104, 2463,
	1819, 1805, 542, 2339, 1855, 1872, 1956, 1711, 542, 2575,
	1506, 2302, 2303, 1866, 1611, 1366, 1815, 2573, 2554, 542,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1112, 1114,
	1115, 2305, 2177, 183, 2176, 2175, 183, 2100, 1967, 183,
	1792, 1477, 182, 182, 543, 1899, 183, 2122, 2308, 2307,
	2340, 2341, 2123, 1957, 183, 1104, 2119, 37, 1934, 1588,
	2120, 1832, 1367, 1368, 2118, 2121, 1919, 1834, 2124, 183,
	1912, 1913, 2395, 2571, 2394, 1885, 2547, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1113, 1112, 1114, 1115, 1625, 1209,
	1617, 543, 2296, 1881, 543, 183, 543, 2080, 1846, 1847,
	2079, 2487, 542, 2404, 2406, 1534, 2286, 182, 2283, 1175,
	2089, 1856, 2092, 2094, 182, 1587, 2282, 700, 1868, 2156,
	1428, 2095, 2393, 672, 1882, 701, 542, 1942, 1961, 1979,
	1945, 1946, 953, 542, 1892, 1547, 1938, 1340, 1340, 1487,
	952, 1959, 542, 2237, 1057, 92, 1779, 1956, 1877, 1548,
	1929, 1789, 1790, 1926, 1999, 1794, 93, 1918, 1936, 2027,
	1995, 1994, 120, 2288, 1797, 182, 182, 182, 182, 182,
	92, 1800, 94, 1707, 1922, 2173, 1795, 94, 2502, 1949,
	2458, 93, 182, 182, 2155, 1199, 1195, 1939, 1908, 1911,
	1912, 1913, 1909, 1958, 1910, 1914, 1635, 1636, 182, 1803,
	1196, 101, 1964, 1916, 1968, 1969, 1970, 1199, 1195, 1784,
	1622, 2268, 100, 2078, 99, 708, 709, 1528, 1997, 1320,
	101, 2077, 1196, 94, 1811, 1615, 1616, 1198, 99, 1197,
	2479, 100, 100, 99, 2478, 2412, 2410, 2409, 1989, 1990,
	542, 2402, 2348, 2287, 2056, 1998, 1996, 1192, 1193, 1198,
	2285, 1197, 2186, 682, 1735, 1315, 542, 101, 1441, 2069,
	707, 2401, 2276, 1895, 2577, 2576, 2577, 1880, 100, 1842,
	1609, 182, 1226, 1218, 2035, 542, 106, 107, 2576, 2025,
	2493, 2321, 2026, 698, 542, 103, 88, 1, 2556, 2034,
	511, 542, 542, 1598, 182, 182, 182, 182, 182, 2097,
	2052, 2082, 1173, 2069, 2106, 525, 182, 2053, 1404, 2112,
	1394, 182, 182, 2019, 182, 688, 2377, 182, 182, 182,
	2459, 2191, 2189, 2083, 1741, 2068, 2070, 2346, 1705, 914,
	145, 2103, 1668, 2036, 1669, 1188, 2103, 2542, 110, 875,
	1494, 1495, 1496, 1497, 109, 2196, 917, 1016, 1736, 2367,
	1943, 2130, 2171, 2081, 1677, 2084, 2193, 2192, 182, 2071,
	2072, 2073, 2190, 1252, 1250, 1251, 2132, 1249, 1254, 2133,
	1253, 542, 2074, 690, 1921, 1248, 1843, 1478, 539, 542,
	1539, 1540, 2207, 2113, 182, 2125, 2116, 1915, 1545, 2168,
	2169, 95, 180, 1439, 182, 1241, 2134, 1219, 2114, 2115,
	954, 2117, 501, 1581, 2140, 2163, 689, 1768, 2111, 182,
	507, 1128, 182, 2076, 1930, 727, 2166, 2188, 720, 2167,
	1610, 1870, 2238, 2108, 2280, 2088, 2129, 2090, 1887, 2093,
	2086, 2486, 555, 2403, 2215, 2214, 2534, 1940, 1965, 1215,
	1833, 2187, 1135, 1549, 1650, 1606, 2206, 1498, 564, 563,
	561, 1873, 1896, 2218, 1091, 1707, 616, 1860, 1227, 1907,
	1905, 1904, 1793, 1654, 2304, 2300, 542, 182, 1631, 1632,
	1648, 1879, 2233, 572, 565, 2232, 183, 557, 183, 614,
	2318, 183, 2213, 2005, 2224, 2235, 2236, 2240, 2007, 1941,
	2220, 1070, 1191, 551, 887, 1665, 2010, 2011, 2012, 2013,
	2014, 2246, 2239, 1546, 2274, 2464, 2508, 1810, 2258, 543,
	543, 543, 1190, 1487, 2020, 1559, 1560, 2178, 1985, 1728,
	63, 41, 182, 2269, 2270, 546, 2567, 543, 543, 2028,
	1061, 714, 32, 31, 2284, 2299, 2277, 30, 29, 28,
	2324, 23, 22, 21, 20, 182, 19, 2289, 2309, 25,
	18, 17, 2306, 16, 1703, 2313, 2314, 2199, 115, 50,
	47, 45, 2311, 182, 122, 121, 182, 182, 182, 48,
	44, 991, 42, 27, 2312, 26, 542, 542, 15, 2353,
	2354, 2319, 14, 2215, 2214, 2320, 13, 12, 11, 10,
	9, 5, 4, 35, 34, 33, 1064, 24, 2, 2195,
	2194, 1972, 1730, 0, 0, 0, 2329, 0, 2331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 542,
	542, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2357, 0, 0, 0, 2361, 2362, 2363, 0, 0,
	0, 2373, 0, 0, 0, 0, 0, 2371, 2372, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	543, 543, 182, 2386, 0, 2243, 2244, 0, 2245, 0,
	0, 2247, 0, 2249, 0, 2251, 183, 0, 0, 2382,
	0, 0, 0, 0, 0, 0, 542, 0, 542, 2174,
	0, 0, 0, 2383, 0, 543, 2421, 2419, 2106, 183,
	0, 2398, 2106, 2399, 543, 0, 0, 0, 2408, 37,
	543, 2423, 0, 596, 2407, 2210, 0, 2415, 2417, 0,
	682, 0, 0, 0, 2103, 2219, 0, 0, 0, 0,
	0, 0, 0, 0, 2427, 2428, 0, 0, 0, 0,
	2231, 542, 0, 2234, 2440, 2430, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 2444, 0, 2436, 0, 2437, 542, 2438, 0,
	0, 2452, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 542, 2454, 0, 2461, 542, 542, 2453,
	0, 2447, 2448, 2449, 0, 0, 0, 0, 2273, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	2480, 2481, 2483, 2485, 0, 2482, 542, 0, 2494, 2497,
	0, 0, 728, 542, 2106, 879, 2500, 886, 2496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 2498,
	0, 0, 0, 0, 0, 0, 0, 0, 682, 2507,
	0, 0, 0, 542, 182, 2511, 2517, 0, 0, 183,
	0, 2514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 37, 0, 0, 2327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 1217, 0,
	0, 0, 0, 543, 2342, 0, 0, 2343, 2344, 2345,
	2529, 0, 0, 2532, 0, 2535, 542, 542, 0, 2537,
	543, 543, 0, 543, 542, 543, 543, 37, 543, 543,
	543, 543, 543, 543, 2541, 2461, 2543, 2103, 0, 0,
	0, 0, 1200, 543, 2563, 2555, 2560, 183, 0, 0,
	0, 0, 0, 2570, 0, 0, 0, 0, 0, 2574,
	2572, 0, 0, 183, 0, 0, 542, 0, 0, 2581,
	0, 0, 178, 0, 543, 2583, 183, 0, 0, 0,
	2590, 0, 0, 1978, 0, 0, 0, 0, 0, 0,
	543, 0, 183, 0, 0, 2600, 120, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 162,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 543, 543, 543, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 159, 0, 160, 0,
	0, 0, 0, 0, 1323, 1324, 151, 150, 177, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 2055, 0, 0, 0,
	2058, 0, 0, 0, 0, 2060, 2061, 2062, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 146, 1325, 153, 543, 1322, 0, 147, 148, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 2518, 0, 515, 183, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 513,
	0, 183, 0, 0, 543, 0, 0, 0, 0, 183,
	0, 183, 0, 183, 183, 543, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 2184, 0, 0, 0, 0, 0, 0, 0, 510,
	728, 728, 728, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1060, 1062,
	0, 0, 0, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 2260, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 502, 517,
	0, 532, 0, 531, 506, 1167, 504, 508, 518, 509,
	0, 503, 0, 514, 0, 0, 505, 519, 520, 522,
	536, 535, 523, 0, 512, 533, 0, 543, 0, 0,
	0, 0, 555, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 144, 0, 0, 0, 0,
	0, 1179, 1180, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 183, 183, 0, 0, 183, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 1222, 0, 0, 0,
	0, 0, 183, 0, 0, 728, 2349, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 543, 0, 0, 0, 0, 0, 2370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	534, 0, 173, 174, 175, 176, 0, 0, 0, 2384,
	0, 2385, 0, 0, 0, 0, 2388, 2389, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 39, 40, 80, 2416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2424, 0, 0,
	2426, 0, 84, 0, 0, 0, 43, 69, 70, 0,
	67, 71, 2429, 0, 0, 0, 0, 0, 0, 68,
	183, 0, 0, 2433, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 56, 0,
	0, 543, 0, 0, 0, 0, 0, 597, 0, 87,
	0, 0, 1202, 1204, 879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 183, 0, 1167, 0, 0,
	0, 1346, 1346, 0, 1346, 0, 1346, 1346, 0, 1355,
	1346, 1346, 1346, 1346, 1346, 0, 2484, 555, 0, 0,
	0, 0, 1167, 1167, 879, 0, 0, 0, 181, 0,
	0, 497, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 543, 1416, 0, 0, 0, 183,
	555, 0, 0, 0, 695, 0, 183, 0, 0, 0,
	0, 1436, 0, 0, 0, 0, 0, 0, 543, 0,
	713, 0, 713, 0, 0, 543, 0, 0, 0, 0,
	497, 0, 0, 0, 543, 0, 0, 0, 0, 46,
	49, 52, 51, 54, 0, 66, 0, 0, 75, 72,
	0, 0, 0, 0, 728, 728, 728, 183, 183, 183,
	183, 183, 0, 0, 555, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 183, 183, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 0, 0, 0,
	183, 2564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 0, 543, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 1557,
	1558, 0, 0, 183, 728, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 543, 543, 0, 183, 183, 183, 183,
	183, 0, 0, 0, 0, 1612, 0, 0, 183, 0,
	0, 0, 0, 183, 183, 0, 183, 0, 0, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 728, 81, 0, 728,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	879, 86, 0, 543, 0, 0, 0, 0, 0, 0,
	1269, 543, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 879, 0,
	0, 0, 0, 0, 0, 0, 0, 1257, 0, 0,
	0, 0, 0, 1202, 1596, 0, 0, 0, 0, 0,
	0, 497, 0, 497, 183, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 543, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 543, 543, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1168,
	1292, 1293, 1294, 1295, 1296, 1271, 1272, 1273, 1274, 1255,
	1256, 1284, 0, 1258, 183, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 0, 0, 0, 0, 0, 543, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	0, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 1874, 0, 543, 497, 0, 0, 0, 0, 0,
	0, 0, 1889, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 543,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 183, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	1823, 0, 0, 0, 1827, 0, 1828, 1829, 543, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 1838, 1839,
	0, 0, 0, 0, 497, 0, 0, 0, 543, 543,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 1850, 1851, 1852, 1853, 1854, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 1168, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 1168, 1168, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 497, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 1167, 0, 0, 2110, 1346, 1167, 1438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 1461,
	1462, 497, 497, 497, 497, 497, 497, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 879, 0, 0, 1167, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 0,
	142, 0, 713, 0, 0, 0, 0, 0, 0, 713,
	713, 162, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 713, 1438, 713,
	713, 713, 713, 713, 0, 0, 2063, 623, 79, 2066,
	2067, 0, 152, 0, 0, 0, 0, 141, 0, 2085,
	0, 0, 0, 0, 1392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 713,
	160, 0, 0, 0, 0, 0, 129, 130, 151, 150,
	177, 0, 0, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2109, 0, 0, 497, 0, 0, 0,
	0, 0, 1438, 0, 497, 0, 497, 0, 497, 1656,
	2127, 2128, 0, 0, 0, 685, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 127, 153, 134, 126, 0, 147,
	148, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 135, 0, 0, 0, 0,
	0, 2378, 2379, 2380, 2381, 0, 0, 0, 0, 138,
	136, 131, 132, 133, 137, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 2242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2252, 2253, 2255, 2257, 0,
	0, 0, 0, 0, 0, 2263, 0, 0, 0, 0,
	0, 2266, 0, 0, 1167, 0, 0, 2271, 0, 2420,
	0, 2422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	2293, 2294, 497, 0, 2298, 155, 0, 497, 497, 0,
	0, 497, 0, 1796, 0, 0, 0, 0, 0, 0,
	497, 0, 2310, 0, 1624, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2476, 0, 0, 0,
	2476, 2476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 144, 0, 1624,
	0, 2365, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 713, 0, 0, 0, 0, 1167, 0, 2530,
	0, 0, 1438, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 1392, 0, 0, 0, 0, 0, 728,
	728, 0, 0, 0, 0, 0, 0, 2550, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 0, 0, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2457, 1052, 1052, 1052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2467, 2468, 2469,
	0, 2470, 2471, 0, 79, 2475, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 1124, 1125, 1126, 0, 1129, 0, 1131, 1132,
	1133, 1134, 2499, 1137, 1139, 1139, 0, 1139, 1143, 1143,
	1145, 1146, 1147, 1148, 1149, 0, 1151, 1152, 1153, 1154,
	1155, 0, 0, 0, 0, 1143, 1143, 1143, 1143, 1143,
	0, 0, 497, 497, 497, 497, 497, 2519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2524, 0, 497,
	497, 0, 0, 2525, 2526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 1319, 0, 685,
	0, 0, 0, 685, 0, 0, 713, 0, 0, 685,
	120, 2566, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 1168, 0, 0, 0, 141,
	1168, 497, 497, 497, 497, 497, 0, 0, 0, 0,
	0, 0, 0, 2126, 0, 0, 0, 0, 497, 1392,
	159, 497, 160, 0, 497, 2135, 1438, 0, 1323, 1324,
	151, 150, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 497, 0, 0, 0, 0, 617, 624, 625, 626,
	627, 628, 618, 620, 0, 0, 497, 619, 0, 497,
	622, 629, 630, 0, 0, 146, 1325, 153, 0, 1322,
	0, 147, 148, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2216, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 0, 0, 497, 497, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 1052,
	1052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 611, 0, 608, 609, 0, 0, 0, 610, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	617, 624, 625, 626, 627, 628, 618, 620, 0, 0,
	0, 619, 0, 0, 622, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1392, 0, 0, 0, 0, 173, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 2216, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	1869, 0, 0, 1532, 1533, 0, 0, 0, 0, 1535,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 1533, 0, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1900, 1901, 0, 0, 0, 0, 0, 0, 0, 1920,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 79, 0,
	0, 1651, 1651, 1651, 1651, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1920, 0,
	0, 1651, 0, 0, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2392, 0, 2396, 2397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2107, 0, 79, 0, 2107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 857, 843, 419, 0, 790, 860,
	760, 778, 870, 781, 784, 825, 739, 803, 341, 775,
	79, 764, 735, 770, 736, 762, 792, 244, 759, 845,
	807, 859, 297, 241, 741, 765, 355, 780, 193, 827,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 866, 301, 813, 0, 404, 326,
	0, 0, 0, 794, 849, 801, 839, 789, 826, 749,
	812, 861, 776, 822, 862, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 2544,
	0, 2545, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 772, 819, 856, 773, 821, 239, 285, 246, 238,
	423, 867, 848, 0, 0, 209, 858, 796, 0, 824,
	0, 873, 734, 815, 0, 737, 740, 869, 852, 768,
	249, 0, 0, 0, 0, 0, 0, 0, 793, 802,
	836, 787, 0, 0, 0, 0, 0, 0, 0, 766,
	0, 811, 0, 0, 0, 745, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 748, 0, 767, 837, 0, 732, 268, 742,
	327, 231, 0, 841, 851, 788, 456, 855, 786, 785,
	831, 746, 847, 779, 296, 744, 293, 188, 205, 0,
	777, 337, 378, 384, 846, 763, 771, 229, 769, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 810,
	829, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 1054, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 758, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 842, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 834, 872, 350, 383, 219, 442, 403,
	753, 757, 751, 816, 752, 805, 806, 754, 863, 864,
	865, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	838, 747, 0, 755, 756, 0, 844, 853, 854, 492,
	809, 187, 202, 299, 868, 372, 261, 470, 450, 446,
	733, 750, 236, 761, 0, 0, 774, 782, 783, 795,
	797, 798, 799, 800, 323, 817, 818, 820, 828, 830,
	833, 835, 840, 850, 871, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 808, 814, 310, 254,
	273, 284, 823, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 804, 832, 306, 420, 421, 280, 857, 843,
	419, 0, 790, 860, 760, 778, 870, 781, 784, 825,
	739, 803, 341, 775, 0, 764, 735, 770, 736, 762,
	792, 244, 759, 845, 807, 859, 297, 241, 741, 765,
	355, 780, 193, 827, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 866, 301,
	813, 0, 404, 326, 0, 0, 0, 794, 849, 801,
	839, 789, 826, 749, 812, 861, 776, 822, 862, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 772, 819, 856, 773, 821,
	239, 285, 246, 238, 423, 867, 848, 0, 0, 209,
	858, 796, 0, 824, 0, 873, 734, 815, 0, 737,
	740, 869, 852, 768, 249, 0, 0, 0, 0, 0,
	0, 0, 793, 802, 836, 787, 0, 0, 0, 0,
	0, 2136, 0, 766, 0, 811, 0, 0, 0, 745,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 791, 0, 0, 0, 748, 0, 767, 837,
	0, 732, 268, 742, 327, 231, 0, 841, 851, 788,
	456, 855, 786, 785, 831, 746, 847, 779, 296, 744,
	293, 188, 205, 0, 777, 337, 378, 384, 846, 763,
	771, 229, 769, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 810, 829, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 1054, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 758, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	842, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 834, 872, 350,
	383, 219, 442, 403, 753, 757, 751, 816, 752, 805,
	806, 754, 863, 864, 865, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 838, 747, 0, 755, 756, 0,
	844, 853, 854, 492, 809, 187, 202, 299, 868, 372,
	261, 470, 450, 446, 733, 750, 236, 761, 0, 0,
	774, 782, 783, 795, 797, 798, 799, 800, 323, 817,
	818, 820, 828, 830, 833, 835, 840, 850, 871, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	808, 814, 310, 254, 273, 284, 823, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 804, 832, 306, 420,
	421, 280, 857, 843, 419, 0, 790, 860, 760, 778,
	870, 781, 784, 825, 739, 803, 341, 775, 0, 764,
	735, 770, 736, 762, 792, 244, 759, 845, 807, 859,
	297, 241, 741, 765, 355, 780, 193, 827, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 866, 301, 813, 0, 404, 326, 0, 0,
	0, 794, 849, 801, 839, 789, 826, 749, 812, 861,
	776, 822, 862, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 772,
	819, 856, 773, 821, 239, 285, 246, 238, 423, 867,
	848, 0, 0, 209, 858, 796, 0, 824, 0, 873,
	734, 815, 0, 737, 740, 869, 852, 768, 249, 0,
	0, 0, 0, 0, 0, 0, 793, 802, 836, 787,
	0, 0, 0, 0, 0, 2096, 0, 766, 0, 811,
	0, 0, 0, 745, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 0, 0, 0,
	748, 0, 767, 837, 0, 732, 268, 742, 327, 231,
	0, 841, 851, 788, 456, 855, 786, 785, 831, 746,
	847, 779, 296, 744, 293, 188, 205, 0, 777, 337,
	378, 384, 846, 763, 771, 229, 769, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 810, 829, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 1054,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 758, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 842, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 834, 872, 350, 383, 219, 442, 403, 753, 757,
	751, 816, 752, 805, 806, 754, 863, 864, 865, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 838, 747,
	0, 755, 756, 0, 844, 853, 854, 492, 809, 187,
	202, 299, 868, 372, 261, 470, 450, 446, 733, 750,
	236, 761, 0, 0, 774, 782, 783, 795, 797, 798,
	799, 800, 323, 817, 818, 820, 828, 830, 833, 835,
	840, 850, 871, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 808, 814, 310, 254, 273, 284,
	823, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	804, 832, 306, 420, 421, 280, 857, 843, 419, 0,
	790, 860, 760, 778, 870, 781, 784, 825, 739, 803,
	341, 775, 0, 764, 735, 770, 736, 762, 792, 244,
	759, 845, 807, 859, 297, 241, 741, 765, 355, 780,
	193, 827, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 866, 301, 813, 0,
	404, 326, 0, 0, 0, 794, 849, 801, 839, 789,
	826, 749, 812, 861, 776, 822, 862, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 772, 819, 856, 773, 821, 239, 285,
	246, 238, 423, 867, 848, 0, 0, 209, 858, 796,
	0, 824, 0, 873, 734, 815, 0, 737, 740, 869,
	852, 768, 249, 0, 0, 0, 0, 0, 0, 0,
	793, 802, 836, 787, 0, 0, 0, 0, 0, 1639,
	0, 766, 0, 811, 0, 0, 0, 745, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 748, 0, 767, 837, 0, 732,
	268, 742, 327, 231, 0, 841, 851, 788, 456, 855,
	786, 785, 831, 746, 847, 779, 296, 744, 293, 188,
	205, 0, 777, 337, 378, 384, 846, 763, 771, 229,
	769, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 810, 829, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 1054, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 758, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 842, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 834, 872, 350, 383, 219,
	442, 403, 753, 757, 751, 816, 752, 805, 806, 754,
	863, 864, 865, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 838, 747, 0, 755, 756, 0, 844, 853,
	854, 492, 809, 187, 202, 299, 868, 372, 261, 470,
	450, 446, 733, 750, 236, 761, 0, 0, 774, 782,
	783, 795, 797, 798, 799, 800, 323, 817, 818, 820,
	828, 830, 833, 835, 840, 850, 871, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 808, 814,
	310, 254, 273, 284, 823, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 804, 832, 306, 420, 421, 280,
	857, 843, 419, 0, 790, 860, 760, 778, 870, 781,
	784, 825, 739, 803, 341, 775, 0, 764, 735, 770,
	736, 762, 792, 244, 759, 845, 807, 859, 297, 241,
	741, 765, 355, 780, 193, 827, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	866, 301, 813, 0, 404, 326, 0, 0, 0, 794,
	849, 801, 839, 789, 826, 749, 812, 861, 776, 822,
	862, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 772, 819, 856,
	773, 821, 239, 285, 246, 238, 423, 867, 848, 0,
	0, 209, 858, 796, 0, 824, 0, 873, 734, 815,
	0, 737, 740, 869, 852, 768, 249, 0, 0, 0,
	0, 0, 0, 0, 793, 802, 836, 787, 0, 0,
	0, 0, 0, 0, 0, 766, 0, 811, 0, 0,
	0, 745, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 0, 0, 748, 0,
	767, 837, 0, 732, 268, 742, 327, 231, 0, 841,
	851, 788, 456, 855, 786, 785, 831, 746, 847, 779,
	296, 744, 293, 188, 205, 0, 777, 337, 378, 384,
	846, 763, 771, 229, 769, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 810, 829, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 1054, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 758,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 842, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 834,
	872, 350, 383, 219, 442, 403, 753, 757, 751, 816,
	752, 805, 806, 754, 863, 864, 865, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 838, 747, 0, 755,
	756, 0, 844, 853, 854, 492, 809, 187, 202, 299,
	868, 372, 261, 470, 450, 446, 733, 750, 236, 761,
	0, 0, 774, 782, 783, 795, 797, 798, 799, 800,
	323, 817, 818, 820, 828, 830, 833, 835, 840, 850,
	871, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 808, 814, 310, 254, 273, 284, 823, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 804, 832,
	306, 420, 421, 280, 857, 843, 419, 0, 790, 860,
	760, 778, 870, 781, 784, 825, 739, 803, 341, 775,
	0, 764, 735, 770, 736, 762, 792, 244, 759, 845,
	807, 859, 297, 241, 741, 765, 355, 780, 193, 827,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 866, 301, 813, 0, 404, 326,
	0, 0, 0, 794, 849, 801, 839, 789, 826, 749,
	812, 861, 776, 822, 862, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 772, 819, 856, 773, 821, 239, 285, 246, 238,
	423, 867, 848, 0, 0, 209, 858, 796, 0, 824,
	0, 873, 734, 815, 0, 737, 740, 869, 852, 768,
	249, 0, 0, 0, 0, 0, 0, 0, 793, 802,
	836, 787, 0, 0, 0, 0, 0, 0, 0, 766,
	0, 811, 0, 0, 0, 745, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 748, 0, 767, 837, 0, 732, 268, 742,
	327, 231, 0, 841, 851, 788, 456, 855, 786, 785,
	831, 746, 847, 779, 296, 744, 293, 188, 205, 0,
	777, 337, 378, 384, 846, 763, 771, 229, 769, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 810,
	829, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 1054, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 758, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 842, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 834, 872, 350, 383, 219, 442, 403,
	753, 757, 751, 816, 752, 805, 806, 754, 863, 864,
	865, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	838, 747, 0, 755, 756, 0, 844, 853, 854, 492,
	809, 187, 202, 299, 868, 372, 261, 470, 450, 446,
	733, 750, 236, 761, 0, 0, 774, 782, 783, 795,
	797, 798, 799, 800, 323, 817, 818, 820, 828, 830,
	833, 835, 840, 850, 871, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 808, 814, 310, 254,
	273, 284, 823, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 804, 832, 306, 420, 421, 280, 857, 843,
	419, 0, 790, 860, 760, 778, 870, 781, 784, 825,
	739, 803, 341, 775, 0, 764, 735, 770, 736, 762,
	792, 244, 759, 845, 807, 859, 297, 241, 741, 765,
	355, 780, 193, 827, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 866, 301,
	813, 0, 404, 326, 0, 0, 0, 794, 849, 801,
	839, 789, 826, 749, 812, 861, 776, 822, 862, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 772, 819, 856, 773, 821,
	239, 285, 246, 238, 423, 867, 848, 0, 0, 874,
	858, 796, 0, 824, 0, 873, 734, 815, 0, 737,
	740, 869, 852, 768, 249, 0, 0, 0, 0, 0,
	0, 0, 793, 802, 836, 787, 0, 0, 0, 0,
	0, 0, 0, 766, 0, 811, 0, 0, 0, 745,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 791, 0, 0, 0, 748, 0, 767, 837,
	0, 732, 268, 742, 327, 231, 0, 841, 851, 788,
	456, 855, 786, 785, 831, 746, 847, 779, 296, 744,
	293, 188, 205, 0, 777, 337, 378, 384, 846, 763,
	771, 229, 769, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 810, 829, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 743, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 758, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	842, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 731, 725, 724, 294, 303, 834, 872, 350,
	383, 219, 442, 403, 753, 757, 751, 816, 752, 805,
	806, 754, 863, 864, 865, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 838, 747, 0, 755, 756, 0,
	844, 853, 854, 492, 809, 187, 202, 299, 868, 372,
	261, 470, 450, 446, 733, 750, 236, 761, 0, 0,
	774, 782, 783, 795, 797, 798, 799, 800, 323, 817,
	818, 820, 828, 830, 833, 835, 840, 850, 871, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	808, 814, 310, 254, 273, 284, 823, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 804, 832, 306, 420,
	421, 280, 857, 843, 419, 0, 790, 860, 760, 778,
	870, 781, 784, 825, 739, 803, 341, 775, 0, 764,
	735, 770, 736, 762, 792, 244, 759, 845, 807, 859,
	297, 241, 741, 765, 355, 780, 193, 827, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 866, 301, 813, 0, 404, 326, 0, 0,
	0, 794, 849, 801, 839, 789, 826, 749, 812, 861,
	776, 822, 862, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 772,
	819, 856, 773, 821, 239, 285, 246, 238, 423, 867,
	848, 0, 0, 874, 858, 796, 0, 824, 0, 873,
	734, 815, 0, 737, 740, 869, 852, 768, 249, 0,
	0, 0, 0, 0, 0, 0, 793, 802, 836, 787,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 811,
	0, 0, 0, 745, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 0, 0, 0,
	748, 0, 767, 837, 0, 732, 268, 742, 327, 231,
	0, 841, 851, 788, 456, 855, 786, 785, 831, 746,
	847, 779, 296, 744, 293, 188, 205, 0, 777, 337,
	378, 384, 846, 763, 771, 229, 769, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 810, 829, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 1233, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 743,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 758, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 842, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 731, 725, 724, 294,
	303, 834, 872, 350, 383, 219, 442, 403, 753, 757,
	751, 816, 752, 805, 806, 754, 863, 864, 865, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 838, 747,
	0, 755, 756, 0, 844, 853, 854, 492, 809, 187,
	202, 299, 868, 372, 261, 470, 450, 446, 733, 750,
	236, 761, 0, 0, 774, 782, 783, 795, 797, 798,
	799, 800, 323, 817, 818, 820, 828, 830, 833, 835,
	840, 850, 871, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 808, 814, 310, 254, 273, 284,
	823, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	804, 832, 306, 420, 421, 280, 857, 843, 419, 0,
	790, 860, 760, 778, 870, 781, 784, 825, 739, 803,
	341, 775, 0, 764, 735, 770, 736, 762, 792, 244,
	759, 845, 807, 859, 297, 241, 741, 765, 355, 780,
	193, 827, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 866, 301, 813, 0,
	404, 326, 0, 0, 0, 794, 849, 801, 839, 789,
	826, 749, 812, 861, 776, 822, 862, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 772, 819, 856, 773, 821, 239, 285,
	246, 238, 423, 867, 848, 0, 0, 874, 858, 796,
	0, 824, 0, 873, 734, 815, 0, 737, 740, 869,
	852, 768, 249, 0, 0, 0, 0, 0, 0, 0,
	793, 802, 836, 787, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 811, 0, 0, 0, 745, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 748, 0, 767, 837, 0, 732,
	268, 742, 327, 231, 0, 841, 851, 788, 456, 855,
	786, 785, 831, 746, 847, 779, 296, 744, 293, 188,
	205, 0, 777, 337, 378, 384, 846, 763, 771, 229,
	769, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 810, 829, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 722, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 743, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 758, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 842, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	731, 725, 724, 294, 303, 834, 872, 350, 383, 219,
	442, 403, 753, 757, 751, 816, 752, 805, 806, 754,
	863, 864, 865, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 838, 747, 0, 755, 756, 0, 844, 853,
	854, 492, 809, 187, 202, 299, 868, 372, 261, 470,
	450, 446, 733, 750, 236, 761, 0, 0, 774, 782,
	783, 795, 797, 798, 799, 800, 323, 817, 818, 820,
	828, 830, 833, 835, 840, 850, 871, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 808, 814,
	310, 254, 273, 284, 823, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 804, 832, 306, 420, 421, 280,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 1583, 0, 573, 0, 0,
	0, 244, 578, 0, 0, 0, 297, 241, 0, 1584,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 585, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 87, 0, 0, 184,
	185, 186, 617, 624, 625, 626, 627, 628, 618, 620,
	0, 0, 217, 619, 224, 594, 622, 629, 630, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 556, 570, 0,
	584, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 711, 0, 0, 0, 601, 0, 569, 0, 0,
	577, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 600, 0, 0,
	456, 0, 0, 598, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 607, 599, 589, 611, 591, 608,
	609, 586, 587, 590, 610, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 602, 576, 575, 0, 582, 583,
	0, 592, 593, 595, 574, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 573, 0, 0, 0, 244, 578, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 585, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 580, 581, 0, 0, 0,
	0, 0, 0, 1663, 0, 287, 226, 192, 338, 405,
	259, 0, 87, 0, 0, 184, 185, 186, 617, 624,
	625, 626, 627, 628, 618, 620, 0, 0, 217, 619,
	224, 594, 622, 629, 630, 1664, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 556, 570, 0, 584, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 601, 0, 569, 0, 0, 577, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 600, 0, 0, 456, 0, 0, 598,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	607, 599, 589, 611, 591, 608, 609, 586, 587, 590,
	610, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	602, 576, 575, 0, 582, 583, 0, 592, 593, 595,
	574, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 78, 419, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	573, 0, 0, 0, 244, 578, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 585, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 87,
	0, 0, 184, 185, 186, 617, 624, 625, 626, 627,
	628, 618, 620, 0, 0, 217, 619, 224, 594, 622,
	629, 630, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	556, 570, 0, 584, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 601, 0,
	569, 0, 0, 577, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	600, 0, 0, 456, 0, 0, 598, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 607, 599, 589,
	611, 591, 608, 609, 586, 587, 590, 610, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 602, 576, 575,
	0, 582, 583, 0, 592, 593, 595, 574, 187, 202,
	299, 86, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 573, 0, 0, 0,
	244, 578, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 585, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 87, 0, 0, 184, 185,
	186, 617, 624, 625, 626, 627, 628, 618, 620, 0,
	0, 217, 619, 224, 594, 622, 629, 630, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 556, 570, 0, 584,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	0, 0, 0, 0, 601, 0, 569, 0, 0, 577,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 600, 0, 0, 456,
	0, 0, 598, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 2538, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 607, 599, 589, 611, 591, 608, 609,
	586, 587, 590, 610, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 602, 576, 575, 0, 582, 583, 0,
	592, 593, 595, 574, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 573, 0, 0, 0, 244, 578, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 585, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 87, 0, 1201, 184, 185, 186, 617, 624, 625,
	626, 627, 628, 618, 620, 0, 0, 217, 619, 224,
	594, 622, 629, 630, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 556, 570, 0, 584, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 0, 0, 0, 0,
	601, 0, 569, 0, 0, 577, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 600, 0, 0, 456, 0, 0, 598, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 607,
	599, 589, 611, 591, 608, 609, 586, 587, 590, 610,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 602,
	576, 575, 0, 582, 583, 0, 592, 593, 595, 574,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 573, 0,
	0, 0, 244, 578, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 585,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 87, 0, 0,
	184, 185, 186, 617, 624, 625, 626, 627, 628, 618,
	620, 0, 0, 217, 619, 224, 594, 622, 629, 630,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 556, 570,
	0, 584, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 711, 0, 0, 0, 601, 0, 569, 0,
	0, 577, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 600, 0,
	0, 456, 0, 0, 598, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 607, 599, 589, 611, 591,
	608, 609, 586, 587, 590, 610, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 602, 576, 575, 0, 582,
	583, 0, 592, 593, 595, 574, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 573, 0, 0, 0, 244, 578,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 585, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 87, 0, 0, 184, 185, 186, 617,
	624, 625, 626, 627, 628, 618, 620, 0, 0, 217,
	619, 224, 594, 622, 629, 630, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 556, 570, 0, 584, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 0, 0,
	0, 0, 601, 0, 569, 0, 0, 577, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 600, 0, 0, 456, 0, 0,
	598, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 607, 599, 589, 611, 591, 608, 609, 586, 587,
	590, 610, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 602, 576, 575, 0, 582, 583, 0, 592, 593,
	595, 574, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	573, 0, 0, 0, 244, 578, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 585, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 87,
	0, 0, 184, 185, 186, 617, 624, 625, 626, 627,
	628, 618, 620, 0, 0, 217, 619, 224, 594, 622,
	629, 630, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 0, 584, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 601, 0,
	569, 0, 0, 577, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	600, 0, 0, 456, 0, 0, 598, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 607, 599, 589,
	611, 591, 608, 609, 586, 587, 590, 610, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 602, 576, 575,
	0, 582, 583, 0, 592, 593, 595, 574, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 921, 456,
	0, 0, 0, 0, 0, 918, 919, 296, 882, 293,
	188, 205, 912, 916, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 1221, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 1086, 0,
	1087, 1088, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 1163, 1166, 0, 0, 0, 0, 1162,
	1165, 0, 0, 217, 1161, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 78, 419, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 87, 0, 1201, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 86, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 78, 419, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 86, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 1605, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1393, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 1603, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 882, 293, 188, 205,
	880, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 1201, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 2477, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 1605, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1393, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1890, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 1875, 0, 0, 0,
	1876, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 1244,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1243, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 2551, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1393, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 2477,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 0, 419, 306,
	420, 421, 280, 1652, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 1485, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 1365, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 1363, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 1361, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1359, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	1357, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 1353, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 1351, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 1349, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 1326, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 1228, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1063, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 693, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 548, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 547,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 495, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 2272, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 1871, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 0, 0, 306, 420, 421, 280,
}

var yyPact = [...]int{
	3146, -1000, -386, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1760, 1806, -1000, -1000,
	-1000, -1000, 1876, -1000, 589, 1518, -1000, 1743, 4319, -1000,
	34789, 367, -1000, 34243, 366, 2594, 34789, -1000, 123, -1000,
	114, 34789, 119, 33697, -1000, -1000, -265, 15130, 1691, 17,
	10, 34789, -1000, -1000, -1000, -1000, 1862, 1471, -1000, 283,
	-1000, -1000, -1000, -1000, -1000, -1000, 33151, -1000, -1000, -1000,
	1755, 1735, 1883, 518, 1687, -1000, 1820, 1471, -1000, 15130,
	1853, 1804, 14584, -1000, 14584, 314, -1000, -1000, 11301, -1000,
	-1000, 19500, 34789, 34789, 208, -1000, 1743, -1000, -1000, 299,
	-1000, 242, 1427, -1000, 1422, -1000, 541, 615, 265, 379,
	375, 264, 263, 262, 260, 259, 258, 253, 247, 273,
	-1000, 552, 552, -151, -154, 371, 313, 313, 313, 342,
	1717, 1709, -1000, 634, -1000, 552, 552, 295, 552, 552,
	552, 552, 205, 204, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 286,
	1743, 191, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34789, 121, 34789, -1000, 450, 34789, 684,
	684, 40, 684, 684, 684, 684, 135, 528, 7, -1000,
	132, 186, 127, 184, 651, 125, 161, -1000, -1000, 176,
	651, 1158, 526, 103, -1000, 684, 9085, 9085, 9085, -1000,
	1724, -1000, -1000, -1000, -1000, -1000, -1000, 1093, -1000, 330,
	-1000, -1000, -1000, -1000, 34789, 32605, 301, 579, -1000, -1000,
	-1000, 79, -1000, -1000, 1376, 612, 15130, 1256, -1000, 1393,
	496, -1000, -1000, -1000, -1000, -1000, 437, 15676, 15676, 15676,
	15676, -1000, -1000, 1438, 1438, 1438, 1438, 15676, 1438, 15676,
	1438, 1438, 1438, 1438, 15130, 1438, 1438, 1438, -1000, 1438,
	1438, 1438, 1438, 1438, 1438, 1438, 1438, 449, 1438, 1438,
	1438, 1438, 1438, -1000, -1000, -1000, -1000, 1438, 1438, 1438,
	1438, 1438, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17314, -1000, 12946, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34789, -1000, 1438, 137, 34789, 34789, 254,
	1820, 1471, -1000, 1862, 1825, 283, -1000, 1796, 1324, 1326,
	1165, 1471, 1416, 34789, -1000, 1440, -1000, -1000, -1000, 1640,
	1104, 1156, -1000, -1000, -1000, -1000, 907, 15130, -1000, -1000,
	1871, -1000, 16768, 442, 760, 1870, 32059, -1000, 314, 314,
	1421, 10747, 0, -1000, -1000, -1000, 577, 22230, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1724, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1373, 34789, -1000, -1000, 3550,
	1217, -1000, 1508, -1000, 1371, -1000, 1479, 1527, 365, 1217,
	360, 353, 351, -1000, -89, -1000, -1000, -1000, -1000, -1000,
	552, 552, -1000, 272, 1848, 4319, 5051, -1000, -1000, -1000,
	31513, 1507, 1217, -1000, 1506, -1000, 704, 415, 445, 445,
	1217, -1000, -1000, 34789, 1217, 678, 655, 34789, 34789, -1000,
	30967, -1000, 30421, 29875, 1048, 34789, 29329, 28783, 28237, 27691,
	27145, -1000, 1596, -1000, 1489, -1000, -1000, -1000, 34789, 34789,
	34789, 312, -1000, -1000, 34789, 1217, -1000, -1000, 1046, 1045,
	552, 552, 1037, 1148, 1145, 1144, 552, 552, 1036, 1140,
	23322, 178, 1035, 1026, 1000, 977, 1138, 158, 939, 898,
	976, 34789, 1505, 34789, -1000, 160, 618, 348, 571, 1743,
	1688, 1420, 325, 364, 1217, 305, 305, 34789, -1000, 9639,
	-1000, -1000, 1136, 15130, -1000, 652, 651, 651, -1000, -1000,
	-1000, -1000, -1000, -1000, 684, 34789, 652, -1000, -1000, -1000,
	651, 684, 34789, 684, 684, 684, 684, 651, 651, 651,
	684, 34789, 34789, 34789, 34789, 34789, 34789, 34789, 34789, 34789,
	9085, 9085, 9085, 526, 684, -276, -1000, 1131, -1000, 1577,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 118,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -73,
	1419, 26599, -1000, -277, -279, -281, -286, -1000, -1000, -1000,
	-293, -295, -1000, -1000, -1000, 15130, 15130, 15130, 15130, -1000,
	842, 15676, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 852,
	754, 15676, 15676, 15676, 15676, 15676, 15676, 15676, 15676, 15676,
	15676, 15676, 15676, 15676, 15676, 15676, 785, 5614, 5614, 496,
	496, 496, 496, -1000, 14584, 15130, 15130, 496, -1000, 1217,
	26053, 14584, 14584, 15130, 1723, 599, 612, 34789, -1000, 1165,
	-1000, -1000, -1000, 878, -1000, 34789, 34789, 410, 15130, 11853,
	9639, 14584, 14584, 14584, 14584, 14584, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 440, 1253,
	1243, 1369, -1000, 1418, -1000, -146, 18954, 15130, 1130, 1868,
	1549, 34789, -1000, -1000, -1000, 1820, -1000, 1820, 1253, 1774,
	1643, 14584, -1000, -1000, 1774, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1317, -1000, 34789, 1416, 1797, 34789, 1638,
	1127, 311, -1000, 15130, 15130, 1415, -1000, 953, 34789, -1000,
	-1000, 25507, -1000, -1000, 8531, -1000, 34789, 228, 34789, -1000,
	24414, 24961, 10193, 0, -1000, 10193, 1399, -1000, -13, -17,
	12399, 497, -1000, -1000, -1000, 371, 16222, 1301, 497, 53,
	-1000, -1000, -1000, 1479, -1000, 1479, 1479, 1479, 1479, 311,
	311, 311, 311, -1000, -1000, -1000, -1000, -1000, 1504, 1503,
	-1000, 1479, 1479, 1479, 1479, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1490, 1490, 1490, 1481, 1481, 298, -1000, 15130,
	233, 34789, 1781, 954, 160, 317, 1542, 1217, 1217, 1217,
	317, -1000, 1155, 1128, -1000, -375, 1414, -1000, -1000, 1847,
	-1000, -1000, 855, 730, 729, 613, 34789, 136, 223, -1000,
	300, -1000, 34789, 1217, 641, 445, 1217, -1000, 1217, -1000,
	-1000, -1000, -1000, -1000, 1217, 1413, -1000, 1442, 781, 728,
	749, 658, 1413, -1000, -1000, -111, 1413, -1000, 1413, -1000,
	1413, -1000, 1413, -1000, 1413, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 563, 34789, 136, 785, -1000, 324, -1000,
	-1000, 785, 785, -1000, -1000, -1000, -1000, 1111, 1109, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -365, 34789, -1000, 162,
	559, 212, 251, 214, 34789, 138, 1798, 174, 201, 34789,
	34789, 305, 1576, 34789, 1762, 34789, -1000, -1000, -1000, -1000,
	-1000, 612, 34789, -1000, -1000, 684, 684, -1000, -1000, 34789,
	684, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 684,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34789, 34789, -1000,
	-1000, -1000, -1000, -1000, 95, -26, 268, -1000, -1000, -1000,
	-1000, -1000, 1814, -1000, 612, 657, 614, -1000, -1000, -1000,
	955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 852, 15676,
	15676, 15676, 1487, 408, 1544, 958, 1143, 736, 736, 597,
	597, 502, 502, 502, 502, 502, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1106, -1000, -1000, 1328, -1000, 1090,
	885, 1165, -1000, 1328, 1328, 830, 14584, -1000, -1000, 591,
	-1000, 15130, 1165, -1000, -1000, 1165, 1165, 1406, 1401, 1867,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 874, 1165, 14584, 14584, 1400, 1438, 435, -1000, 1328,
	1165, 1165, 1328, 1328, 9639, 1165, -1000, 34789, -1000, -271,
	-1000, -42, 468, 1438, -1000, 23322, 1165, 1376, -1000, 5573,
	-1000, 35881, -1000, -1000, -1000, -1000, -1000, 21684, 1417, 1774,
	-1000, -1000, 1438, 1342, -1000, -1000, 311, 34, 21138, -1000,
	-1000, 612, 612, 15130, -1000, -1000, -1000, -1000, -1000, -1000,
	427, 1860, 279, 1438, -1000, 1378, 1734, -1000, -1000, -1000,
	1790, 18408, 34789, 1412, 1411, -1000, 397, -1000, 1399, 0,
	-7, -1000, -1000, -1000, -1000, 612, -1000, 1117, 241, 252,
	-1000, 304, -1000, -1000, -1000, -1000, 1699, 47, -1000, -1000,
	-1000, 311, 311, -1000, -1000, -1000, -1000, -1000, -1000, 1105,
	1105, -1000, -1000, -1000, -1000, -1000, 932, -1000, -1000, -1000,
	928, -1000, -1000, 1056, 1585, 233, -1000, -1000, 552, 1103,
	1701, 34789, -1000, -1000, 1267, 162, 34789, 606, 1574, -1000,
	1542, 1542, 1542, 34789, -1000, -1000, -1000, -1000, -366, 52,
	303, -1000, -1000, -1000, 2567, 34789, 1335, -1000, 146, -1000,
	1247, -1000, 34789, -1000, 1332, 1488, 1217, 1217, -1000, -1000,
	-1000, 34789, 1438, -1000, -1000, -1000, -1000, 362, 1742, 1741,
	136, 146, 497, 1217, -1000, -1000, -1000, -1000, -1000, -368,
	1330, 349, 139, 237, 34789, 34789, 34789, 34789, 34789, 384,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 193, 321,
	-1000, 34789, 34789, 454, -1000, -1000, -1000, 651, -1000, -1000,
	651, -1000, -1000, -1000, -1000, -1000, 1738, 34789, -31, -334,
	-1000, -326, -1000, -1000, -1000, -1000, 1432, 398, 1544, 15676,
	15676, -1000, 14584, -105, 959, 959, 785, -1000, -1000, -1000,
	15130, 15130, 1380, 542, -1000, 15130, 747, -1000, -1000, -1000,
	15130, 15130, 15130, 1165, 249, -1000, 1328, 1328, 14584, 9639,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	468, -1000, 445, 445, 445, 34789, -1000, -1000, -1000, -1000,
	-1000, -1000, 1398, 1811, -1000, 1655, 1652, 1865, 1860, -1000,
	24414, 1774, -1000, -1000, 34789, -258, -1000, 1676, 1677, -1000,
	-1000, -1000, -1000, 7977, 1820, 15130, 1573, 34789, 1438, -1000,
	17861, 34789, 34789, 24414, 24414, 24414, 24414, 24414, -1000, 1610,
	1602, -1000, 1606, 1593, 1614, 34789, -1000, 1321, 1165, 1825,
	18408, 20592, 1353, 24414, -1000, -1000, 24414, 34789, 7423, -1000,
	-1000, -35, -23, -1000, -1000, -1000, -1000, 371, -1000, -1000,
	388, 1771, 1690, -1000, -1000, -1000, -1000, 1316, -1000, 1314,
	1392, 1296, 143, -1000, 1524, 1726, 552, 552, -1000, 927,
	-1000, 1217, -1000, -1000, 345, -1000, 1761, 34789, 1571, 1570,
	1568, -1000, -380, 920, 1484, 1447, 15130, 1483, 1845, 1386,
	34789, -1000, -1000, 34789, -1000, 133, -1000, 233, 34789, -1000,
	-1000, -1000, 223, 34789, -1000, 5461, 146, -1000, -1000, -1000,
	-1000, -1000, -1000, 34789, 159, -1000, 1482, 888, -1000, -1000,
	1532, -1000, -1000, -1000, -1000, 145, 210, -1000, 34789, 452,
	1585, 34789, -1000, -1000, -1000, 684, 684, -1000, -1000, 1722,
	-1000, 1217, 15676, 15676, -1000, 496, -1000, 1438, 1165, 1479,
	1479, -1000, 1479, 1481, -1000, 1479, 107, 1479, 102, 1479,
	-1000, -1000, 1165, 1165, 839, 895, -97, -1000, 612, 15130,
	1052, 960, 943, -1000, 1473, 1469, -1000, -1000, 1165, -1000,
	-1000, 1801, 1801, 1801, 1274, 35335, 34789, -1000, -1000, -1000,
	-1000, 1860, 1858, 1391, -1000, -1000, 34, 352, -1000, 1673,
	1677, -1000, 1843, 1669, 1836, -1000, -1000, -1000, 612, -1000,
	1745, 1300, -1000, 558, 1375, -1000, -1000, 14038, 1276, 1647,
	391, 1274, 1397, 1734, 1547, 1567, 1529, -1000, -1000, -1000,
	-1000, 1595, -1000, 1594, -1000, -1000, 1440, -1000, -1000, 1243,
	228, 24414, 1349, 1349, -1000, 383, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 752, 5147, 1881, -1000, 1101, -1000, 1097,
	-1000, 638, 636, -1000, 34789, 1468, -1000, 311, 1096, 311,
	910, -1000, 880, -1000, -1000, -200, -1000, -1000, 1451, 1584,
	-1000, -1000, 34789, -1000, -1000, 34789, 34789, 34789, 1465, 1835,
	-1000, 15130, 1464, 557, 1012, 34789, 34789, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 341, 552, -342,
	200, 198, 552, 552, 552, -1000, -1000, 1264, 1251, -1000,
	-152, -1000, 15130, -1000, -1000, -1000, 996, 996, -1000, 1440,
	-1000, -1000, -1000, 1192, -1000, -1000, -132, 34789, 34789, 34789,
	34789, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	496, 15676, -1000, -1000, 311, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15130, -1000, 15130, -1000, 1820, 1083,
	612, 15130, 15130, -1000, 828, 820, -1000, 1438, 1668, 1438,
	1438, 20592, -1000, -1000, 1858, 1856, 1834, 1662, 1664, 1664,
	1673, -1000, 1830, 1829, -1000, 1079, 1828, 1078, 624, -1000,
	34789, 15130, 1438, -1000, 271, 34789, 1438, 34789, -1000, 1826,
	-1000, -1000, 15130, 1445, -1000, 15130, -1000, -1000, -1000, -1000,
	-1000, 1860, 1349, -1000, -1000, 508, -1000, 15130, -1000, -1000,
	-1000, 166, -1000, -1000, -1000, -1000, -1000, 1444, 15130, -1000,
	-1000, -1000, 1190, 1187, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1440, -1000, -1000, -1000, -1000, 223, -372, 1002,
	34789, 807, -1000, 1246, 1386, 211, 1438, 1074, 552, 552,
	552, 799, 782, 23322, 287, -1000, 223, -1000, -157, -165,
	943, -1000, -1000, 1767, -1000, -1000, 9639, -1000, -1000, 1439,
	1534, -1000, 153, -1000, 943, 943, 1165, -1000, 943, 943,
	1182, 1180, 20046, -1000, 1827, 1823, 23868, 23868, 468, 1856,
	-1000, 15130, 15130, 1659, 883, -1000, -1000, -1000, -1000, 1060,
	1058, -1000, 1043, -1000, 1880, -1000, 612, -1000, 1438, -1000,
	368, 1375, -1000, 1820, 612, 34789, 612, 1826, -1000, 943,
	-1000, 1438, 34789, 891, -1000, -1000, 1765, 1241, 50, -1000,
	1239, -1000, -1000, 412, -1000, 15130, -1000, 23322, 909, 897,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 283, 1379,
	-1000, 545, 34789, 34789, 1165, 248, -136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1227, -1000, -1000, -1000, -1000, -1000,
	1227, 1227, -1000, -1000, 612, 1376, -1000, 824, -1000, -1000,
	-1000, -1000, -1000, 34789, 1375, 34789, -1000, 1222, 1820, -1000,
	1216, -1000, 283, -1000, 1430, 1447, -1000, -1000, -1000, 13492,
	-1000, -1000, -1000, -1000, -114, 9639, 6869, 1200, -1000, -1000,
	1626, -108, -141, 22776, -1000, -1000, -1000, -1000, -1000, 1338,
	-1000, -1000, -1000, 1554, 744, -114, 15130, 1429, 1165, -1000,
	-19, -1000, -1000, -1000, -1000, -1000, 1532, -1000, 1623, -1000,
	-1000, -1000, 1553, 1545, 1864, -1000, -1000, -1000, 748, 832,
	-1000, -1000, -1000, -1000, 863, 34789, -1000, 297, -1000, -1000,
	-132, -133, -1000, 1866, -1000, 1877, 491, 491, -1000, -1000,
	-383, 1169, 168, -1000, -139, -1000, -1000, -1000, 294, 1041,
	-1000, -1000, 771, -383, -1000, -148, -1000, -1000, -1000, -1000,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 2212, 2211, 13, 1, 2210, 2209, 2208, 24, 115,
	161, 12, 167, 82, 2207, 2206, 2205, 2204, 2203, 2202,
	2201, 196, 193, 191, 2200, 2199, 2198, 2197, 2196, 2192,
	2188, 2185, 2183, 2182, 189, 144, 160, 2181, 2180, 2179,
	94, 156, 73, 71, 158, 2175, 2174, 61, 2171, 2170,
	2169, 153, 152, 651, 2168, 149, 95, 29, 2167, 2163,
	2161, 2160, 2159, 2156, 2154, 2153, 2152, 2151, 2149, 2148,
	2147, 2143, 2142, 271, 2141, 2140, 8, 2136, 65, 2135,
	2131, 2130, 99, 2129, 2128, 2127, 2126, 2125, 2122, 2118,
	126, 2117, 2116, 2115, 2113, 164, 2104, 2103, 124, 86,
	120, 2102, 2101, 83, 163, 2100, 96, 2099, 2098, 2094,
	141, 2093, 864, 2092, 50, 49, 2090, 47, 63, 48,
	40, 2089, 118, 2087, 2084, 46, 79, 2083, 85, 52,
	2081, 89, 103, 2080, 45, 2075, 2074, 131, 2073, 2072,
	2071, 80, 2070, 2069, 331, 2068, 78, 121, 75, 60,
	2067, 26, 32, 2066, 2064, 2062, 2061, 2060, 33, 2059,
	2058, 2057, 117, 20, 2055, 9, 15, 35, 111, 2054,
	43, 66, 2053, 127, 2052, 2050, 38, 22, 21, 2049,
	30, 110, 145, 14, 81, 139, 2047, 2046, 44, 59,
	2043, 2041, 2040, 2039, 2038, 2037, 53, 2035, 37, 2034,
	169, 2033, 3, 2031, 31, 23, 2030, 41, 116, 55,
	16, 2028, 171, 2025, 36, 146, 100, 142, 2024, 2023,
	2021, 159, 259, 2020, 2017, 69, 148, 129, 136, 2015,
	258, 2012, 2010, 74, 1592, 2323, 19, 151, 2007, 2005,
	3227, 130, 17, 39, 2002, 91, 1997, 1988, 1987, 165,
	147, 90, 845, 84, 1986, 1985, 1980, 1978, 1977, 1975,
	1974, 1973, 235, 1972, 1967, 1966, 166, 58, 92, 157,
	67, 1964, 1960, 1959, 98, 70, 1958, 140, 138, 125,
	106, 1957, 150, 132, 101, 1956, 42, 1955, 1954, 1949,
	1948, 1947, 76, 1944, 1942, 1940, 1939, 137, 133, 97,
	77, 1938, 68, 93, 134, 143, 28, 1937, 27, 1934,
	1932, 1931, 155, 18, 1930, 4, 0, 1926, 6, 154,
	256, 135, 1920, 1918, 2, 5, 7, 1915, 1912, 123,
	1903, 1900, 1898, 11, 34, 10, 105, 1897, 1896, 4387,
	2542, 108, 1895, 172,
}

//line sql.y:6346
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 337, 338, 338, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 316, 316,
	316, 319, 319, 32, 68, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 80, 80, 22, 23, 23, 23, 23,
	341, 341, 139, 139, 137, 137, 138, 138, 207, 207,
	24, 25, 25, 217, 217, 216, 216, 216, 218, 218,
	218, 218, 252, 252, 26, 26, 26, 26, 26, 96,
	96, 318, 318, 317, 315, 315, 314, 314, 313, 38,
	39, 48, 48, 48, 48, 49, 50, 320, 320, 288,
	54, 54, 53, 53, 53, 53, 55, 55, 52, 52,
	51, 51, 290, 290, 276, 276, 289, 289, 289, 289,
	289, 289, 289, 275, 275, 107, 107, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 332, 332,
	187, 187, 187, 187, 187, 187, 116, 116, 125, 125,
	125, 125, 125, 114, 114, 115, 113, 113, 113, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 124, 124, 120, 120, 120, 121, 121, 121,
	122, 122, 122, 122, 333, 333, 333, 333, 255, 255,
	255, 255, 258, 258, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 257, 257, 257, 257, 257, 259, 259,
	259, 259, 259, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 261, 261,
	261, 261, 261, 261, 261, 261, 274, 274, 262, 262,
	269, 269, 270, 270, 270, 271, 271, 271, 272, 272,
	267, 267, 267, 267, 267, 267, 268, 268, 268, 277,
	302, 302, 301, 301, 299, 299, 299, 299, 286, 286,
	296, 296, 296, 296, 296, 285, 285, 281, 281, 281,
	282, 282, 283, 283, 280, 280, 284, 284, 298, 298,
	297, 278, 278, 279, 279, 304, 334, 334, 334, 334,
	334, 335, 335, 305, 325, 326, 324, 324, 324, 324,
	324, 78, 78, 78, 229, 229, 229, 294, 294, 293,
	293, 293, 295, 295, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 224, 224, 224, 323, 323, 323, 323, 323,
	323, 322, 322, 322, 291, 291, 291, 321, 321, 56,
	56, 171, 171, 45, 45, 45, 45, 45, 45, 44,
	44, 44, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 46, 46, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 82, 82, 83, 83,
	83, 83, 85, 85, 85, 307, 307, 57, 57, 3,
	3, 1, 1, 2, 2, 4, 4, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 273,
	273, 273, 306, 306, 308, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 310, 310, 310, 58, 58, 311,
	263, 264, 265, 5, 6, 287, 309, 92, 92, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 59, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 327, 327, 223,
	223, 231, 231, 222, 222, 245, 245, 245, 225, 225,
	225, 226, 226, 331, 331, 331, 61, 61, 61, 63,
	63, 64, 65, 65, 247, 247, 248, 248, 66, 67,
	79, 79, 79, 79, 79, 79, 81, 81, 81, 15,
	15, 15, 15, 75, 75, 75, 14, 14, 62, 62,
	69, 328, 328, 329, 330, 330, 330, 330, 70, 72,
	31, 31, 31, 31, 31, 31, 102, 102, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	97, 97, 97, 91, 91, 342, 73, 74, 74, 95,
	95, 95, 88, 88, 88, 94, 94, 94, 16, 16,
	17, 206, 206, 18, 18, 99, 99, 101, 101, 101,
	101, 101, 103, 103, 103, 103, 103, 103, 103, 98,
	98, 100, 100, 100, 100, 238, 238, 238, 237, 237,
	128, 128, 130, 129, 129, 131, 131, 132, 132, 132,
	169, 147, 147, 204, 204, 202, 202, 203, 203, 205,
	205, 205, 205, 208, 208, 133, 133, 133, 133, 134,
	134, 135, 135, 136, 136, 246, 246, 243, 243, 243,
	242, 242, 140, 140, 140, 142, 141, 141, 141, 141,
	143, 143, 145, 145, 144, 144, 146, 151, 151, 150,
	150, 148, 148, 148, 148, 149, 149, 149, 149, 152,
	152, 112, 112, 112, 112, 112, 112, 123, 123, 123,
	123, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 220, 220,
	153, 153, 161, 161, 161, 161, 154, 154, 154, 154,
	154, 154, 154, 162, 162, 162, 168, 163, 163, 159,
	159, 159, 159, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 343, 343, 266, 266, 266, 266, 160,
	160, 160, 160, 160, 93, 93, 93, 93, 93, 251,
	251, 251, 254, 254, 254, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	174, 174, 89, 89, 172, 172, 173, 175, 175, 170,
	170, 170, 156, 156, 156, 176, 176, 177, 177, 178,
	178, 180, 179, 179, 181, 182, 182, 182, 183, 183,
	184, 184, 184, 47, 47, 47, 47, 47, 42, 42,
	42, 42, 43, 43, 43, 104, 104, 104, 104, 106,
	106, 105, 105, 76, 76, 77, 77, 77, 110, 110,
	111, 111, 111, 108, 108, 109, 109, 200, 200, 185,
	185, 185, 192, 192, 192, 188, 188, 190, 190, 190,
	191, 191, 191, 189, 197, 197, 199, 199, 198, 198,
	194, 194, 195, 195, 196, 196, 196, 193, 193, 155,
	155, 155, 155, 155, 201, 201, 201, 201, 209, 209,
	165, 165, 167, 167, 166, 127, 210, 210, 214, 211,
	211, 215, 215, 215, 215, 215, 212, 212, 213, 213,
	239, 239, 239, 219, 219, 230, 230, 227, 227, 228,
	228, 221, 221, 232, 232, 232, 71, 164, 164, 303,
	303, 300, 235, 235, 236, 236, 240, 240, 244, 244,
	241, 241, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	339, 340, 249, 250, 250, 250,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 1, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	7, 0, 1, 5, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 0, 1, 2, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 3, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 9,
	6, 6, 6, 2, 2, 3, 3, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 2, 2, 0, 3, 0, 2, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -337, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -59, -60, -61, -63,
	-64, -65, -66, -67, -14, -62, -31, -32, -68, -69,
	-70, -71, -72, -16, -17, -18, -9, -8, -13, 7,
	8, -80, -33, 30, -38, -48, 203, -49, -39, 204,
	-50, 206, 205, 242, 207, 235, 72, 284, 285, 287,
	288, 289, 290, -81, 240, 241, 209, 34, 43, 31,
	32, 35, 213, 248, 249, 212, -10, -34, 6, -339,
	9, 411, 237, 236, 26, -12, 425, 83, -338, 559,
	-200, -185, 20, 31, 27, -184, -180, -95, -185, 18,
	16, 5, -73, -342, -73, -73, 10, 11, -73, -288,
	-290, 83, 140, 83, -73, -54, -53, -52, -51, -55,
	29, -45, -46, -312, -44, -41, 208, 205, 252, 107,
	108, 242, 243, 244, 207, 226, 241, 245, 240, 261,
	-40, 78, 31, 425, 428, -295, 204, 210, 211, 412,
	110, 109, 73, 206, -292, 336, 529, -55, 531, 99,
	101, 530, 42, 216, 532, 533, 534, 535, 225, 536,
	537, 538, 539, 545, 546, 547, 548, 111, 5, -73,
	-244, -240, -316, -234, 86, 87, 88, 422, 228, 456,
	457, 277, 78, 39, 333, 336, 529, 284, 298, 292,
	319, 311, 423, 458, 280, 229, 265, 526, 309, 116,
	531, 283, 459, 243, 341, 342, 343, 99, 287, 378,
	544, 282, 460, 542, 101, 530, 77, 49, 42, 238,
	307, 212, 303, 532, 266, 461, 433, 259, 110, 107,
	551, 34, 301, 48, 28, 541, 109, 47, 533, 131,
	462, 534, 345, 324, 520, 46, 346, 244, 463, 81,
	249, 427, 528, 347, 302, 348, 276, 540, 209, 464,
	512, 349, 350, 521, 465, 325, 329, 466, 370, 351,
	558, 50, 467, 468, 522, 108, 469, 76, 535, 296,
	297, 470, 274, 227, 372, 323, 225, 33, 352, 424,
	278, 56, 253, 373, 44, 327, 555, 43, 516, 471,
	519, 322, 318, 51, 472, 473, 474, 475, 536, 321,
	295, 317, 550, 445, 271, 537, 60, 211, 331, 330,
	332, 260, 369, 314, 476, 477, 478, 232, 79, 479,
	304, 19, 480, 481, 353, 267, 482, 54, 483, 484,
	376, 241, 485, 52, 538, 37, 246, 552, 539, 486,
	487, 488, 489, 248, 490, 355, 491, 354, 326, 328,
	255, 356, 426, 492, 300, 245, 543, 493, 233, 527,
	247, 252, 240, 377, 234, 494, 495, 496, 497, 498,
	281, 499, 500, 288, 545, 41, 501, 502, 503, 504,
	275, 270, 371, 380, 59, 80, 338, 505, 525, 294,
	268, 506, 285, 53, 546, 547, 548, 262, 549, 7,
	556, 557, 358, 111, 272, 273, 45, 315, 254, 507,
	508, 305, 306, 320, 293, 316, 286, 513, 256, 359,
	242, 509, 379, 269, 334, 339, 430, 261, 360, 524,
	429, 313, 310, 263, 510, 361, 217, 257, 258, 511,
	514, 362, 363, 279, 364, 365, 366, 367, 368, 264,
	428, 291, 308, 340, 392, 393, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 420, 215, -73, 215, -144, -240, 215, -212,
	342, -231, 344, 357, 352, 362, 350, -223, 353, 355,
	255, -331, 370, 215, 359, 203, 157, 345, 354, 363,
	364, 279, 365, 368, 264, -327, -316, 534, 549, 116,
	312, 349, 347, 371, 516, 367, 366, -240, 286, -247,
	291, -235, -316, -234, 289, -144, -79, 512, 207, -249,
	-249, -97, 516, 518, -163, -112, 124, -123, -126, -117,
	-118, -157, -158, -159, -160, -124, -170, 146, 147, 154,
	125, -168, -127, 24, 421, 413, 412, 157, 29, 199,
	66, 67, 415, 416, 127, 55, 388, 389, -125, 383,
	390, 385, 418, 419, 102, 420, -235, -240, 220, 382,
	214, 152, 411, -119, -115, -8, -166, 381, 386, 387,
	391, 384, -316, -234, -121, -120, -153, 89, 95, 100,
	96, -336, 103, -339, 90, 91, 92, 93, 94, 104,
	105, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 42, 358, 358, -144, -73, -73, -73, -73,
	-178, -95, -180, -10, -8, -339, 6, -73, -8, -9,
	-13, -34, -36, 452, -35, -240, -185, -200, 10, 142,
	40, 48, -183, -184, -12, -8, -112, 17, 21, 22,
	-100, 148, -112, -240, -74, -100, -221, 219, -73, -73,
	-211, -252, 286, -215, 371, 370, -236, -213, -235, -233,
	-212, 369, 208, 431, 123, 23, 25, 126, 157, 17,
	127, 35, 210, 312, 226, 156, 222, 412, 203, 70,
	432, 383, 385, 381, 388, 414, 415, 382, 344, 29,
	11, 434, 26, 236, 22, 36, 150, 205, 130, 239,
	24, 237, 102, 105, 437, 20, 73, 231, 12, 224,
	38, 14, 438, 439, 15, 220, 219, 142, 216, 68,
	9, 199, 27, 139, 64, 440, 118, 441, 442, 443,
	444, 66, 140, 18, 553, 386, 387, 31, 517, 421,
	250, 152, 71, 57, 518, 124, 384, 446, 447, 103,
	448, 106, 74, 523, 120, 16, 69, 40, 449, 251,
	450, 221, 554, 451, 374, 452, 141, 206, 411, 67,
	453, 214, 357, 6, 417, 30, 235, 223, 113, 65,
	454, 215, 129, 418, 419, 218, 104, 5, 117, 32,
	10, 72, 75, 389, 390, 391, 55, 112, 425, 128,
	13, 455, 375, 122, 116, -289, 140, -275, -279, -235,
	230, -305, 226, -144, -298, -297, -235, -96, -230, 216,
	224, 223, 117, -320, 120, 272, 382, 214, -51, -52,
	-212, 156, -82, 247, 251, 84, 84, -279, -278, -277,
	-321, 251, 230, -304, -296, 222, 231, -285, 223, 224,
	-280, 216, 118, -321, -280, 221, 231, 251, 251, 111,
	251, 111, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 246, -286, 132, -286, 429, 429, -292, -321, -321,
	-321, 218, 33, 33, -232, -280, 218, 23, -286, -286,
	-212, 156, -286, -286, -286, -286, 259, 259, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, 215, -320, -104, 368, 279, 78, -53,
	261, -37, -144, -230, 216, 217, -320, 248, -144, 200,
	-144, -225, 140, 13, -225, -222, 358, 356, 343, 348,
	-225, -225, -225, -225, 262, 341, -281, 216, 33, 227,
	358, 262, 341, 262, 263, 262, 263, 351, 361, 262,
	-245, 12, 142, 382, 346, 350, 255, 215, 256, 217,
	360, -316, 519, 263, -245, 90, -226, 140, 358, 258,
	-225, -250, -339, -236, 312, -250, -250, 30, 87, 218,
	-235, -75, -235, 90, -15, -11, -22, -21, -23, 132,
	-102, 358, -90, 157, 534, 520, 521, 522, 519, 355,
	527, 525, 523, 262, 524, 84, 120, 122, 123, -112,
	139, -154, 132, 133, 134, 135, 136, 137, 138, 142,
	124, 126, 140, 141, 121, 143, 144, 145, 146, 147,
	148, 149, 151, 150, 152, 153, 156, 201, 202, -118,
	-118, -118, -118, -168, -339, -339, -339, -118, -220, -339,
	-118, -339, -339, -339, -339, -174, -112, -339, -343, -339,
	-343, -343, -266, -339, -266, -339, -339, -339, -339, -339,
	200, -339, -339, -339, -339, -339, -266, -266, -266, -266,
	-266, 100, 95, 89, -170, 96, 90, -235, -240, -8,
	-9, -163, -249, -328, -329, -147, -144, -339, 279, -235,
	-235, 248, -183, -12, -8, -178, -184, -180, -8, -73,
	-88, -101, 61, 62, -103, 22, 36, 65, 63, 21,
	-340, 85, -340, -200, -340, 84, -36, -204, 83, 59,
	41, 90, 90, 84, 19, -179, -181, -112, 12, -238,
	-237, 23, -235, 90, 200, 98, 12, -145, 27, -144,
	-221, -221, 84, 286, -215, -252, -217, -216, 372, 374,
	132, -239, -235, 90, 29, 85, 84, -144, -255, -258,
	-260, -259, -261, -256, -257, 309, 310, 157, 313, 315,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 30,
	238, 305, 306, 307, 308, 325, 326, 327, 328, 329,
	330, 331, 332, 292, 311, 423, 293, 294, 295, 296,
	297, 298, 300, 301, 302, 303, 304, -319, -316, 83,
	85, 84, -262, 83, -104, 215, -316, 216, 216, 216,
	-73, 411, -286, -286, 246, 17, -44, -41, -312, 16,
	-40, -41, 208, 107, 108, 205, 83, -275, 83, -284,
	-319, -316, 83, 118, 221, 117, -283, -280, -283, -284,
	-316, -170, -316, 118, 118, -208, -235, -208, -208, 21,
	-208, 21, -208, 21, 92, -235, -208, 21, -208, 21,
	-208, 21, -208, 21, -208, 21, 29, 76, 77, 29,
	79, 80, 81, -170, -170, -275, -212, -144, -316, 92,
	92, -286, -286, 92, 90, 90, 90, -286, -286, 92,
	90, -242, -240, 90, -322, 232, 276, 278, 92, 92,
	92, 92, 29, 90, -323, 29, 541, 540, 542, 543,
	544, 92, 29, 92, 29, 92, -235, 83, -144, -110,
	266, 203, 205, 208, 74, 90, 280, 132, 42, 84,
	218, 215, -316, -227, 220, -227, -235, -241, -240, -233,
	90, -112, -282, 12, 142, -245, -245, -225, -144, -282,
	-245, -225, -144, -225, -225, -225, -225, -245, -245, -245,
	-225, -240, -240, -144, -144, -144, -144, -144, -144, -144,
	-250, -250, -250, -226, -225, 519, 90, 74, -248, 289,
	323, 513, 514, 515, 84, 425, -137, -144, 519, 519,
	519, 519, 519, 519, -112, -112, -112, -112, -161, 103,
	124, 104, 105, -126, -162, -166, -168, 97, 142, 126,
	140, 141, -117, -118, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -117, -251, -316, 90,
	157, -122, 90, 91, -336, 96, -122, -98, -100, -112,
	-112, -316, -235, -98, -98, -112, -94, 22, 36, -172,
	-173, 128, -170, -340, -340, 92, 96, -235, -235, -87,
	-86, 393, 394, 395, 396, 398, 399, 400, 403, 404,
	408, 409, 392, 410, 397, 402, 405, 406, 407, 401,
	308, -112, -99, 22, 36, -98, -236, -241, -233, -98,
	-99, -99, -98, -98, 200, -200, -340, 84, -330, 374,
	375, 517, -243, 251, -242, 23, -164, -163, 90, 12,
	-206, 75, -235, -183, -183, 61, 62, 57, -98, -103,
	-340, -35, 23, -202, -235, 60, 90, -267, -212, 333,
	334, -112, -112, 84, -182, 25, 26, -144, -237, 148,
	-241, -144, -207, 251, -144, -129, -131, -132, -133, -147,
	-169, -339, 12, -137, -138, -146, -240, -215, -217, 84,
	373, 375, 376, 74, 106, -112, -268, 156, -294, -293,
	-292, -275, -277, -278, -279, 85, -268, -271, 339, 338,
	-262, -262, -262, -262, -262, -267, -267, -267, -267, 83,
	83, -262, -262, -262, -262, -269, 83, -269, -269, -270,
	83, -270, -305, -112, -302, -301, -299, -300, 225, 99,
	425, 75, -297, -182, 92, -110, -228, 220, -303, -300,
	-316, -316, -316, -228, -316, 90, -316, 90, -83, -57,
	-1, 553, 554, 555, 84, 17, -276, -275, -56, 276,
	-308, -309, 251, -304, -298, -284, 118, -283, -284, -284,
	-316, 84, 27, 111, 111, 111, 111, 425, 205, 30,
	-275, -56, -251, 218, -251, -251, 90, 90, -224, 549,
	-137, -106, 268, 132, 257, 257, 215, 215, 270, -144,
	281, 283, 282, 280, 21, 269, 271, 273, 259, -144,
	-144, -227, 74, -139, -144, 24, -240, -144, -225, -225,
	-144, -225, -225, -144, -235, -90, 374, 84, 425, 20,
	-91, 20, 103, 104, 105, -162, -117, -118, -117, 123,
	239, 90, 84, -340, 23, 84, 75, -340, -340, -340,
	84, 12, -98, -175, -173, 130, -112, -340, -340, -340,
	84, 84, 12, -254, 23, -340, -98, -98, -339, 200,
	-340, -340, -340, -340, -340, -236, -329, 516, 375, -151,
	-150, -148, 72, 219, 73, -339, -242, -340, -122, 87,
	-203, 87, -202, -156, -235, 92, 96, -185, -128, -130,
	12, -103, -168, 85, 84, -267, -189, -194, -222, -235,
	90, 157, -181, 200, -152, 13, -155, 30, 55, -11,
	-339, -339, 30, 84, -140, -142, -141, -143, 64, 68,
	70, 65, 66, 67, 71, -246, 23, -129, -9, -8,
	-339, -144, -137, -341, 12, 75, -341, 84, 200, -216,
	-218, 377, 374, 380, -316, 90, -82, 84, -292, -279,
	-186, -107, 38, -272, 340, -267, -267, -274, 90, -274,
	92, 92, 85, -47, -42, -43, 31, 78, -299, -286,
	90, 37, -235, 85, -106, -144, 124, 74, -303, -303,
	-303, -240, -2, 552, 558, 118, 83, 343, 16, -202,
	84, 85, -171, 277, 85, -84, -235, 85, 83, -284,
	-284, -235, -339, 215, 29, 29, -56, -171, -268, -316,
	551, 550, 85, 217, 275, -111, 388, -108, 90, 86,
	-144, -144, -144, -144, -144, 208, 205, 260, 218, -137,
	-144, 84, -78, 234, 229, -245, -245, 31, -144, 374,
	528, 526, 123, 239, -126, -118, -100, 422, -253, 157,
	309, 238, 307, 303, 323, 314, 338, 305, 339, 302,
	301, 300, -253, -251, -112, -112, -178, 131, -112, 129,
	-112, -112, -112, -340, 157, 309, -340, -340, -99, -236,
	-148, -280, -280, -280, -208, 84, -219, 20, 12, 55,
	55, -128, -152, -129, -103, -235, -192, 512, -197, 44,
	-195, -196, 45, -193, 46, 54, 148, -183, -112, -209,
	74, -210, -214, -170, -165, -167, -166, -339, -201, -340,
	-235, -208, -210, -131, -132, -132, -131, -132, 64, 64,
	64, 69, 64, 69, 64, -141, -240, -340, -340, -9,
	-243, 75, -129, -129, -146, -240, 148, 374, 378, 379,
	-292, -335, 103, 124, 29, 74, 336, 99, -333, 156,
	-334, 221, 117, 118, 233, 23, 39, 85, 84, 85,
	84, 85, 84, -229, 462, 124, -43, -42, -286, -286,
	92, -316, 217, 24, -144, 74, 74, 74, -85, 556,
	92, 83, -3, 78, -112, 83, 17, -275, -170, -310,
	-263, -311, -264, -265, -5, -6, -287, 55, 99, -58,
	42, 216, 536, 537, 111, 549, -302, -202, -306, -308,
	-144, -114, -339, -113, -115, -119, 146, 147, -171, -144,
	-105, 266, 274, 83, -109, 87, -318, 75, 257, 336,
	257, -144, -78, -47, -144, -225, -225, 31, -316, -126,
	-118, -339, -340, -262, -262, -262, -270, -262, 297, -262,
	297, -262, -340, -340, 84, -340, 20, -340, -89, 417,
	-112, 84, 84, -340, 83, 83, -340, -149, 20, -149,
	-149, -340, 87, -144, -152, -176, 14, -189, 49, 315,
	-199, -198, 53, 45, -196, 17, 47, 17, 28, -209,
	84, 132, 84, -340, -340, 84, 55, 200, -340, -152,
	-135, -134, 74, 75, -136, 74, -134, 64, 64, -204,
	-340, -207, -129, -152, -152, 200, 103, -339, -116, -125,
	-114, 10, 90, 90, -316, 118, 118, -144, 83, -267,
	90, -267, 92, 92, 462, 29, 79, 80, 81, 29,
	76, 77, -144, -144, -144, -144, -307, 83, 17, -112,
	83, 132, 85, -202, -202, 253, 142, -286, 534, 259,
	259, -286, -286, -286, 85, -340, 84, -273, 425, 428,
	-112, -120, -120, -204, 85, -315, 425, -317, -235, -235,
	-235, -235, -117, -267, -112, -112, -183, 90, -112, -112,
	92, 92, -339, 64, 16, 14, -339, -339, -243, -176,
	-177, 15, 17, -190, 51, -188, 50, -188, -198, 17,
	17, 90, 17, 90, 118, -214, -112, -167, 55, -11,
	-235, -165, -235, -178, -112, 83, -112, -152, -152, -112,
	-158, 420, 83, -112, 85, 85, -204, -306, -57, 85,
	-202, 92, 85, 254, -166, -339, 90, -286, -286, -286,
	92, 92, -242, -334, -308, 429, 429, -340, 23, -314,
	-313, -236, 83, 75, -93, 142, 425, -340, -340, -340,
	-340, -340, 85, 85, -205, -340, -235, 221, 17, 17,
	-205, -205, -151, -177, -112, -163, -191, 52, 74, 106,
	90, 90, 90, 10, -165, 200, -183, -202, -178, -340,
	-202, 85, 23, 85, 558, 118, 85, -166, -92, -339,
	250, -242, 90, 90, -11, 84, 132, -202, -144, -340,
	423, 71, 426, 84, -340, -340, -340, 74, 106, -210,
	-235, 85, -183, 85, -187, -11, 83, -3, 250, -76,
	425, -313, -291, -236, 90, 92, 85, 60, 424, 427,
	-235, 221, -325, -326, 74, -335, -332, 103, 124, 99,
	-333, 112, 113, -76, -112, 83, -340, -77, 265, 516,
	-318, 60, -326, 74, -325, 74, 11, 10, 103, 90,
	85, -202, 226, -315, 425, -324, 234, 229, 232, 30,
	-324, -4, 557, 85, 267, 426, 228, 29, 103, 92,
	-4, 427,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 735,
	735, 735, 0, 735, 0, 0, 735, -2, -2, 735,
	1168, 0, 735, 0, 0, -2, 667, 669, 0, 671,
	-2, 0, 0, 680, 1622, 1622, 730, 0, 0, 0,
	0, 0, 735, 735, 735, 735, 1029, 48, 735, 0,
	83, 84, 686, 687, 688, 63, 0, 1620, 1, 3,
	69, 73, 0, 0, 0, 56, 1038, 0, 76, 0,
	0, 739, 0, 737, 0, 1151, 735, 735, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 516, 456, 499, 454, 485, -2, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 348, 348, 0, 0, -2, 447, 447, 447, 0,
	0, 0, 482, 1153, 402, 348, 348, 0, 348, 348,
	348, 348, 0, 0, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 1055,
	146, 1169, 1166, 1167, 38, 39, 40, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 0, 1145, 0, 597, 834, 0, 658,
	658, 0, 658, 658, 658, 658, 0, 0, 0, 609,
	0, 0, 0, 0, 655, 0, 0, 628, 630, 0,
	655, 0, 661, 0, 642, 658, 1623, 1623, 1623, 1136,
	0, 652, 650, 664, 665, 647, 648, 666, 670, 0,
	675, 678, 1162, 1163, 0, 693, 47, 1397, 685, 698,
	699, 0, 731, 732, 43, 927, 0, 856, 860, 871,
	884, 885, 886, 887, 888, 890, 891, 0, 0, 0,
	0, 896, 897, 0, 0, 0, 0, 0, 908, 0,
	0, 0, 0, 0, 1010, 0, 973, 973, 944, 973,
	975, 975, 0, 0, 0, 1619, 1019, 0, 0, 0,
	0, 0, 0, 252, 253, 926, 1125, 975, 975, 975,
	975, 975, -2, -2, 199, 200, 201, 202, 203, 204,
	205, 0, 195, 0, 257, 258, 254, 255, 256, 910,
	911, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 1622, 0, 708, 0, 0, 0, 0, 0,
	1038, 0, 1030, 1029, 61, 0, 735, -2, 0, 0,
	0, 0, 45, 0, 50, 793, 75, 74, 1077, 0,
	0, 0, 57, 1039, 65, 67, 1040, 0, 740, 741,
	0, 771, 775, 0, 736, 0, 0, 1152, 1151, 1151,
	100, 0, 1563, 1129, -2, -2, 0, 0, 1164, 1165,
	1138, -2, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, -2, 0, 0, 156, 157, 0,
	41, 374, 0, 152, 0, 368, 318, 1055, 0, 0,
	0, 0, 0, 735, 0, 1146, 137, 138, 144, 145,
	348, 348, 496, 0, 0, 146, 146, 463, 464, 465,
	0, 0, -2, 372, 0, 448, 0, 0, 362, 362,
	366, 364, 365, 0, 0, 0, 0, 0, 0, 476,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 349, 0, 494, 495, 403, 0, 0,
	0, 0, 474, 475, 0, 0, 1154, 1155, 0, 0,
	348, 348, 0, 0, 0, 0, 348, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 1068, 0, 0, 0, -2,
	0, 589, 0, 0, 0, 1147, 1147, 0, 596, 0,
	598, 599, 0, 0, 600, 0, 655, 655, 653, 654,
	602, 603, 604, 605, 658, 0, 0, 357, 358, 359,
	655, 658, 0, 658, 658, 658, 658, 655, 655, 655,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 1623, 1623, 661, 658, 0, 638, 0, 639, 640,
	643, 644, 1624, 1625, 1183, 645, 646, 1137, 668, 676,
	679, 696, 694, 695, 697, 689, 690, 691, 692, 0,
	710, 711, 716, 0, 0, 0, 0, 722, 723, 724,
	0, 0, 727, 728, 729, 0, 0, 0, 0, 854,
	0, 0, 916, 917, 918, 919, 920, 921, 922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 892,
	893, 894, 895, 898, 0, 0, 0, 903, 904, 0,
	0, 0, 0, 0, 745, 0, 1011, 0, 942, 0,
	943, 945, 946, 0, 947, 0, 0, 0, 0, 755,
	0, 0, 755, 755, 0, 0, 188, 189, 190, 191,
	192, 206, 207, 208, 209, 210, 259, 1019, 0, 926,
	0, 0, 44, 700, 701, 0, 817, 1157, 0, 0,
	751, 0, 55, 64, 66, 1038, 59, 1038, 0, 757,
	0, 0, -2, -2, 758, 764, 765, 766, 767, 768,
	52, 1621, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 330, 1080, 0, 0, 1031, 1032, 1035, 0, 772,
	776, 0, 778, 779, 0, 738, 0, 98, 0, 833,
	0, 0, 0, 1563, 1135, 0, 102, 103, 0, 0,
	0, 336, 1140, 1141, 1142, -2, 355, 0, 336, 325,
	269, 270, 271, 318, 273, 318, 318, 318, 318, 330,
	330, 330, 330, 301, 302, 303, 304, 305, 0, 0,
	288, 318, 318, 318, 318, 308, 309, 310, 311, 312,
	313, 314, 315, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 320, 320, 320, 322, 322, 0, 42, 0,
	340, 0, 1035, 0, 1068, 1149, 1159, 0, 0, 0,
	1149, 120, 0, 0, 497, 527, 457, 486, 498, 0,
	460, 461, -2, 0, 0, 447, 0, 449, 0, 356,
	0, -2, 0, 366, 0, 362, 366, 363, 366, 354,
	367, 478, 479, 480, 0, 538, 803, 0, 0, 0,
	0, 0, 544, 545, 546, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 487, 488, 489, 490,
	491, 492, 493, 0, 0, 449, 0, 483, 0, 404,
	405, 0, 0, 408, 409, 410, 411, 0, 0, 414,
	415, 416, 820, 821, 417, 441, 442, 443, 418, 419,
	420, 421, 422, 423, 424, 435, 436, 437, 438, 439,
	440, 425, 426, 427, 428, 429, 432, 0, 130, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 754, 835, 1170, 1171,
	659, 660, 0, 360, 361, 658, 658, 606, 629, 0,
	658, 610, 631, 611, 613, 612, 614, 633, 634, 658,
	617, 656, 657, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 635, 636, 637, 662, 0, 0, 677,
	681, 682, 683, 684, 0, 0, 713, 94, 718, 719,
	720, 721, 733, 726, 928, 851, 852, 853, 855, 857,
	0, 912, 914, 859, 861, 923, 924, 925, 0, 0,
	0, 0, 0, 865, 869, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 889, 989, 990,
	991, 906, 260, 261, 0, 263, 907, 0, 769, 0,
	0, 0, 905, 0, 0, 0, 0, 746, 747, 1017,
	1014, 0, 0, 974, 976, 0, 0, 0, 0, 0,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 992, 0, 0, 0, 756, 1020, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1124, 0, 703, 704,
	706, 0, 837, 0, 818, 0, 0, 1158, 709, 0,
	750, 0, 753, 58, 60, 762, 763, 0, 780, 759,
	54, 49, 0, 0, 795, 1078, 330, 1100, 0, 334,
	335, 1041, 1042, 0, 1034, 1036, 1037, 77, 777, 773,
	0, 849, 0, 0, 832, 0, 783, 785, 786, 787,
	815, 0, 0, 0, 0, 96, 834, 1130, 101, 0,
	0, 106, 107, 1131, 1132, 1133, 1134, 0, 516, -2,
	399, 158, 160, 161, 162, 153, -2, 328, 326, 327,
	272, 330, 330, 295, 296, 297, 298, 299, 300, 0,
	0, 289, 290, 291, 292, 283, 0, 284, 285, 286,
	0, 287, 373, 0, 1043, 341, 342, 344, 348, 0,
	0, 0, 369, 370, 0, 1059, 0, 0, 0, 1160,
	1159, 1159, 1159, 0, 148, 149, 150, 151, 533, 0,
	0, 528, 531, 532, 146, 0, 0, 154, 451, 450,
	0, 565, 0, 371, 0, 0, 366, 366, 351, 352,
	481, 0, 0, 540, 541, 542, 543, 0, 0, 0,
	449, 451, 336, 0, 406, 407, 412, 413, 430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 1056, 1057, 1058, 0, 0,
	590, 0, 0, 391, 92, 1148, 595, 655, 616, 632,
	655, 608, 615, 641, 673, 717, 0, 0, 0, 0,
	725, 0, 858, 913, 915, 862, 0, 866, 870, 0,
	0, 262, 0, 0, 0, 0, 0, 909, 933, 934,
	0, 0, 1029, 0, 1015, 0, 0, 941, 977, 978,
	0, 0, 0, 0, 0, 929, 0, 0, 755, 0,
	979, 980, 981, 982, 983, 1020, 702, 705, 707, 791,
	838, 839, 0, 0, 0, 0, 819, 1156, 748, 749,
	752, -2, 0, 0, 1022, 0, 0, 780, 849, 781,
	0, 760, 51, 794, 0, 1082, 1081, 1094, 1107, 331,
	332, 333, 1033, 0, 1038, 0, 1118, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 822, 0,
	0, 825, 0, 0, 0, 0, 816, 0, 0, 0,
	0, -2, 0, 0, 90, 91, 0, 0, 0, 104,
	105, 0, 0, 111, 337, 338, 139, 146, 401, 159,
	381, 0, 0, 268, 329, 293, 294, 0, 316, 0,
	0, 0, 394, 116, 1047, 1046, 348, 348, 343, 0,
	346, 0, 1161, 319, 0, 129, 0, 0, 0, 0,
	0, 135, 522, 0, 0, 529, 0, 0, 0, 455,
	0, 466, 467, 0, 537, -2, 586, 340, 0, 350,
	353, 804, 0, 0, 468, 0, 451, 472, 473, 484,
	433, 434, 431, 0, 0, 1069, 1070, 1075, 1073, 1074,
	121, 504, 506, 505, 509, 0, 0, 502, 0, 391,
	1043, 0, 594, 392, 393, 658, 658, 712, 95, 0,
	715, 0, 0, 0, 863, 867, 770, 0, 0, 318,
	318, 997, 318, 322, 1000, 318, 1002, 318, 1005, 318,
	1008, 1009, 0, 0, 0, 0, 1012, 940, 1018, 0,
	0, 0, 0, 951, 0, 0, 930, 931, 0, 1021,
	840, 845, 845, 845, 0, 0, 0, 1143, 1144, 1023,
	1024, 849, 1025, 782, 761, 796, 1100, 0, 1093, 0,
	-2, 1102, 0, 0, 0, 1108, 774, 78, 850, 81,
	0, 1118, 1126, 0, 1109, 1120, 1122, 0, 0, 0,
	1114, 0, 849, 784, 811, 813, 0, 808, 823, 824,
	826, 0, 828, 0, 830, 831, 793, 789, 790, 0,
	98, 0, 849, 849, 97, 0, 836, 108, 109, 110,
	400, 163, 168, 0, 0, 0, 173, 0, 175, 0,
	382, 0, 265, 267, 0, 0, 166, 330, 0, 330,
	0, 323, 0, 383, 395, 0, 1044, 1045, 0, 0,
	345, 347, 0, 1150, 131, 0, 0, 0, 525, 0,
	534, 0, 0, 0, 0, 0, 0, 155, 452, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 348, 0,
	0, 0, 348, 348, 348, 578, 339, 0, 0, 562,
	559, 469, 0, 193, 194, 196, 0, 0, 471, 793,
	1060, 1061, 1062, 0, 1072, 1076, 124, 0, 0, 0,
	0, 591, 592, 593, 93, 601, 607, 714, 734, 864,
	868, 0, 900, 995, 330, 998, 999, 1001, 1003, 1004,
	1006, 1007, 901, 902, 0, 936, 0, 938, 1038, 0,
	1016, 0, 0, 950, 0, 0, 932, 0, 0, 0,
	0, 817, -2, 62, 1025, 1027, 0, 1087, 1085, 1085,
	1095, 1096, 0, 0, 1103, 0, 0, 0, 0, 82,
	0, 0, 0, 1123, 0, 0, 0, 0, 99, 1029,
	805, 812, 0, 0, 806, 0, 807, 827, 829, 788,
	-2, 849, 849, 88, 89, 0, 169, 0, 171, 186,
	187, 0, 174, 176, 177, 264, 266, 0, 0, 306,
	317, 307, 0, 0, 396, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 793, 132, 133, 134, 517, 0, 527, 0,
	0, 0, 520, 0, 458, 0, 0, 0, 348, 348,
	348, 0, 0, 0, 0, 539, 0, 547, 0, 0,
	0, 197, 198, 0, 1071, 503, 0, 122, 123, 0,
	0, 508, 984, 996, 0, 0, 0, 1013, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 0, 837, 1027,
	80, 0, 0, 1090, 0, 1083, 1086, 1084, 1097, 0,
	0, 1104, 0, 1106, 0, 1127, 1128, 1121, 0, 1113,
	1116, 1112, 1115, 1038, 809, 0, 814, 1029, 87, 0,
	172, 0, 0, 0, 321, 324, 0, 0, 0, 518,
	0, 530, 521, 0, 576, 0, 580, 0, 0, 0,
	583, 584, 585, 375, 563, 560, 561, 470, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 935, 937, 939,
	948, 949, 993, 994, 0, 842, 799, 800, 847, 848,
	0, 0, 792, 79, 1028, 1026, 1079, 0, 1088, 1089,
	1098, 1099, 1105, 0, 1111, 0, 85, 0, 1038, 170,
	0, 180, 0, 526, 0, 529, 519, 574, 575, 0,
	587, 579, 581, 582, 1063, 0, 0, 0, 510, 899,
	0, 0, 0, 0, 841, 843, 844, 1091, 1092, 1119,
	1117, 810, 86, 376, 381, 1063, 0, 0, 0, 500,
	1065, 127, 128, 444, 445, 446, 121, 985, 0, 988,
	801, 802, 377, 378, 0, 164, 181, 182, 0, 0,
	185, 178, 179, 117, 0, 0, 588, 0, 1066, 1067,
	124, 986, 379, 0, 380, 0, 0, 0, 183, 184,
	535, 0, 0, 507, 0, 384, 386, 387, 0, 0,
	385, 523, 0, 535, 1064, 0, 388, 389, 390, 536,
	524, 987,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 559,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:485
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:490
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:545
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:555
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:561
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:567
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:580
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:590
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:596
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:799
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:803
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:837
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:847
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:857
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:870
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:892
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:896
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:902
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:910
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:916
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:928
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:934
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:938
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:977
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:981
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:986
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1001
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1006
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1012
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1029
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1036
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1043
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1048
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1053
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1058
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1065
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1072
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1083
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1100
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1104
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1142
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1149
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1153
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1159
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1169
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1174
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1183
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1207
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1216
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1264
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1288
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1295
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1299
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1371
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = Armscii8Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = ASCIIStr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = Big5Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = UBinaryStr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1250Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1251Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp1256Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp1257Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp850Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp852Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Cp866Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = Cp932Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = Dec8Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = EucjpmsStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = EuckrStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = Gb18030Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Gb2312Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = GbkStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Geostd8Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = GreekStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = HebrewStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Hp8Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Keybcs2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Koi8rStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Koi8uStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin1Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Latin5Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Latin7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = MacceStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = MacromanStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = SjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Swe7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Tis620Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Ucs2Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = UjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf16Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf16leStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf32Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Utf8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Utf8mb4Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1658
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1662
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1666
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1670
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1892
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1901
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1906
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1918
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1928
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1944
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2000
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2009
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2015
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2025
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2029
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2034
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2038
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2054
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2058
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2062
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2066
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2070
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = "key"
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = yyDollar[1].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2138
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2148
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2154
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2158
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2164
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2168
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2174
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2180
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2184
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2188
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2192
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2196
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2205
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2211
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2217
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2223
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2229
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2233
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2237
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2241
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2245
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2263
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2271
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2280
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2286
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2300
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2310
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2390
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2394
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2398
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2402
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2406
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2410
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2414
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2418
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = ""
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = ""
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2469
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2473
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2482
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2491
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2495
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2499
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2503
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2507
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2513
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2527
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2587
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2591
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2595
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2621
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2631
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2635
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2639
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2643
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2647
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2651
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2655
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2659
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2663
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2669
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2676
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2683
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2690
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2696
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2714
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2782
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2803
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2810
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2821
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2830
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2838
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2847
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2854
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2866
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2875
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2890
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2904
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2908
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2914
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2918
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2923
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2927
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2932
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2936
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2942
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2978
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2982
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2986
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2990
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2994
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2998
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3002
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3006
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3010
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3014
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3018
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3022
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3026
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3046
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3056
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3061
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3065
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3070
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3075
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3080
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3085
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3090
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3096
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3102
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3109
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3116
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3123
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3131
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3135
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3141
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3147
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3153
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3159
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3165
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3171
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3183
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3205
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3209
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3232
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3277
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3470
		{
			yyVAL.str = ""
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = "extended "
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3500
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3504
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3508
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3518
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3522
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3532
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3538
		{
			yyVAL.empty = struct{}{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.empty = struct{}{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.empty = struct{}{}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3591
		{
			yyVAL.empty = struct{}{}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.empty = struct{}{}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3596
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3603
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3614
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3618
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3622
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3626
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3630
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3634
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = yyDollar[1].str
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = yyDollar[1].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3689
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3699
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3705
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3711
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3721
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3727
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3731
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3735
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3739
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3842
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3846
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3850
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3864
		{
			setAllowComments(yylex, true)
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3874
		{
			yyVAL.strs = nil
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3884
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3897
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = SQLCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3910
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3918
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3949
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3968
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.strs = nil
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3981
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3989
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = SQLCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = DistinctStr
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = DistinctStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = StraightJoinHint
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4025
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4035
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4039
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4043
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4047
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4072
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4076
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4082
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4088
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4102
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4106
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4110
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4116
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4122
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4126
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4135
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4141
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4145
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4151
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4155
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4161
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4165
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4179
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4196
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4200
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4204
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4208
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4216
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4226
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4231
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4236
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4244
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4257
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4261
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4265
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4271
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4277
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4281
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4285
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4289
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4295
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4299
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4338
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4344
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4354
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4358
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4362
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4366
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4371
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4375
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4379
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4383
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4393
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4412
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4416
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4427
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4435
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4527
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4531
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4545
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = ""
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4658
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4662
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4669
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4673
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4677
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4681
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4687
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4691
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4695
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4699
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4703
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4707
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4711
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4717
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4721
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4725
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4732
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4738
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4774
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4778
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4782
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4786
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4790
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4840
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4844
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4848
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4852
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4864
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4868
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4872
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4876
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4880
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4884
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4888
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4892
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4896
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4900
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4904
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4910
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4914
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4918
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4922
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4926
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4930
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4934
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4938
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4942
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4997
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5001
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5005
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5009
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5013
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5037
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5041
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5047
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5051
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5055
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5059
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5063
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5069
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5073
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5077
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5081
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5085
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5093
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5097
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5101
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5105
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5120
		{
			yyVAL.str = string("")
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5124
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5130
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5134
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5140
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5155
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5159
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5163
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5192
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5210
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5216
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5222
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5226
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5232
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5237
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5241
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5245
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5254
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5260
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5264
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5268
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5277
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5281
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5285
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5289
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5296
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5300
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5304
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5308
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5314
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5318
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5322
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5344
		{
			yyVAL.str = ""
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5348
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = ""
		}
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5372
		{
			yyVAL.str = "cascaded"
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5389
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5395
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5401
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5407
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5435
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5439
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5445
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5449
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5453
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = ""
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = ""
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = " header"
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5480
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5484
		{
			yyVAL.str = " manifest on"
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5488
		{
			yyVAL.str = " manifest off"
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = ""
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = " overwrite on"
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = " overwrite off"
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5512
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5516
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5541
		{
			yyVAL.str = ""
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5551
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5555
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5561
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = ""
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = " optionally"
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5591
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5595
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5599
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5603
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5607
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5613
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5617
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5621
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5625
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5634
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5640
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5644
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5650
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5654
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5660
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5675
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5679
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5685
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5691
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5701
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5705
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5709
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5713
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5717
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = "charset"
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5757
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5762
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5764
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5769
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5772
		{
			yyVAL.empty = struct{}{}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.empty = struct{}{}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5776
		{
			yyVAL.empty = struct{}{}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5780
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5789
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5796
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5800
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5806
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5823
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5827
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5833
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5844
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6317
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6326
		{
			decNesting(yylex)
		}
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6331
		{
			skipToEnd(yylex)
		}
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6336
		{
			skipToEnd(yylex)
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6340
		{
			skipToEnd(yylex)
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6344
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
