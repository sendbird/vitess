// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const DEALLOCATE = 57537
const REVERT = 57538
const SCHEMA = 57539
const TABLE = 57540
const INDEX = 57541
const VIEW = 57542
const TO = 57543
const IGNORE = 57544
const IF = 57545
const PRIMARY = 57546
const COLUMN = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const KEY_BLOCK_SIZE = 57550
const CHECK = 57551
const INDEXES = 57552
const ACTION = 57553
const CASCADE = 57554
const CONSTRAINT = 57555
const FOREIGN = 57556
const NO = 57557
const REFERENCES = 57558
const RESTRICT = 57559
const SHOW = 57560
const DESCRIBE = 57561
const EXPLAIN = 57562
const DATE = 57563
const ESCAPE = 57564
const REPAIR = 57565
const OPTIMIZE = 57566
const TRUNCATE = 57567
const COALESCE = 57568
const EXCHANGE = 57569
const REBUILD = 57570
const PARTITIONING = 57571
const REMOVE = 57572
const PREPARE = 57573
const EXECUTE = 57574
const MAXVALUE = 57575
const PARTITION = 57576
const REORGANIZE = 57577
const LESS = 57578
const THAN = 57579
const PROCEDURE = 57580
const TRIGGER = 57581
const VINDEX = 57582
const VINDEXES = 57583
const DIRECTORY = 57584
const NAME = 57585
const UPGRADE = 57586
const STATUS = 57587
const VARIABLES = 57588
const WARNINGS = 57589
const CASCADED = 57590
const DEFINER = 57591
const OPTION = 57592
const SQL = 57593
const UNDEFINED = 57594
const SEQUENCE = 57595
const MERGE = 57596
const TEMPORARY = 57597
const TEMPTABLE = 57598
const INVOKER = 57599
const SECURITY = 57600
const FIRST = 57601
const AFTER = 57602
const LAST = 57603
const VITESS_MIGRATION = 57604
const CANCEL = 57605
const RETRY = 57606
const COMPLETE = 57607
const CLEANUP = 57608
const BEGIN = 57609
const START = 57610
const TRANSACTION = 57611
const COMMIT = 57612
const ROLLBACK = 57613
const SAVEPOINT = 57614
const RELEASE = 57615
const WORK = 57616
const BIT = 57617
const TINYINT = 57618
const SMALLINT = 57619
const MEDIUMINT = 57620
const INT = 57621
const INTEGER = 57622
const BIGINT = 57623
const INTNUM = 57624
const REAL = 57625
const DOUBLE = 57626
const FLOAT_TYPE = 57627
const DECIMAL_TYPE = 57628
const NUMERIC = 57629
const TIME = 57630
const TIMESTAMP = 57631
const DATETIME = 57632
const YEAR = 57633
const CHAR = 57634
const VARCHAR = 57635
const BOOL = 57636
const CHARACTER = 57637
const VARBINARY = 57638
const NCHAR = 57639
const TEXT = 57640
const TINYTEXT = 57641
const MEDIUMTEXT = 57642
const LONGTEXT = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const ASCII = 57658
const UNICODE = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const CODE = 57666
const COLLATION = 57667
const COLUMNS = 57668
const DATABASES = 57669
const ENGINES = 57670
const EVENT = 57671
const EXTENDED = 57672
const FIELDS = 57673
const FULL = 57674
const FUNCTION = 57675
const GTID_EXECUTED = 57676
const KEYSPACES = 57677
const OPEN = 57678
const PLUGINS = 57679
const PRIVILEGES = 57680
const PROCESSLIST = 57681
const SCHEMAS = 57682
const TABLES = 57683
const TRIGGERS = 57684
const USER = 57685
const VGTID_EXECUTED = 57686
const VITESS_KEYSPACES = 57687
const VITESS_METADATA = 57688
const VITESS_MIGRATIONS = 57689
const VITESS_REPLICATION_STATUS = 57690
const VITESS_SHARDS = 57691
const VITESS_TABLETS = 57692
const VSCHEMA = 57693
const NAMES = 57694
const GLOBAL = 57695
const SESSION = 57696
const ISOLATION = 57697
const LEVEL = 57698
const READ = 57699
const WRITE = 57700
const ONLY = 57701
const REPEATABLE = 57702
const COMMITTED = 57703
const UNCOMMITTED = 57704
const SERIALIZABLE = 57705
const CURRENT_TIMESTAMP = 57706
const DATABASE = 57707
const CURRENT_DATE = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const CURRENT_USER = 57712
const UTC_DATE = 57713
const UTC_TIME = 57714
const UTC_TIMESTAMP = 57715
const DAY = 57716
const DAY_HOUR = 57717
const DAY_MICROSECOND = 57718
const DAY_MINUTE = 57719
const DAY_SECOND = 57720
const HOUR = 57721
const HOUR_MICROSECOND = 57722
const HOUR_MINUTE = 57723
const HOUR_SECOND = 57724
const MICROSECOND = 57725
const MINUTE = 57726
const MINUTE_MICROSECOND = 57727
const MINUTE_SECOND = 57728
const MONTH = 57729
const QUARTER = 57730
const SECOND = 57731
const SECOND_MICROSECOND = 57732
const YEAR_MONTH = 57733
const WEEK = 57734
const REPLACE = 57735
const CONVERT = 57736
const CAST = 57737
const SUBSTR = 57738
const SUBSTRING = 57739
const GROUP_CONCAT = 57740
const SEPARATOR = 57741
const TIMESTAMPADD = 57742
const TIMESTAMPDIFF = 57743
const WEIGHT_STRING = 57744
const MATCH = 57745
const AGAINST = 57746
const BOOLEAN = 57747
const LANGUAGE = 57748
const WITH = 57749
const QUERY = 57750
const EXPANSION = 57751
const WITHOUT = 57752
const VALIDATION = 57753
const UNUSED = 57754
const ARRAY = 57755
const CUME_DIST = 57756
const DESCRIPTION = 57757
const DENSE_RANK = 57758
const EMPTY = 57759
const EXCEPT = 57760
const FIRST_VALUE = 57761
const GROUPING = 57762
const GROUPS = 57763
const JSON_TABLE = 57764
const LAG = 57765
const LAST_VALUE = 57766
const LATERAL = 57767
const LEAD = 57768
const MEMBER = 57769
const NTH_VALUE = 57770
const NTILE = 57771
const OF = 57772
const OVER = 57773
const PERCENT_RANK = 57774
const RANK = 57775
const RECURSIVE = 57776
const ROW_NUMBER = 57777
const SYSTEM = 57778
const WINDOW = 57779
const ACTIVE = 57780
const ADMIN = 57781
const BUCKETS = 57782
const CLONE = 57783
const COMPONENT = 57784
const DEFINITION = 57785
const ENFORCED = 57786
const EXCLUDE = 57787
const FOLLOWING = 57788
const GEOMCOLLECTION = 57789
const GET_MASTER_PUBLIC_KEY = 57790
const HISTOGRAM = 57791
const HISTORY = 57792
const INACTIVE = 57793
const INVISIBLE = 57794
const LOCKED = 57795
const MASTER_COMPRESSION_ALGORITHMS = 57796
const MASTER_PUBLIC_KEY_PATH = 57797
const MASTER_TLS_CIPHERSUITES = 57798
const MASTER_ZSTD_COMPRESSION_LEVEL = 57799
const NESTED = 57800
const NETWORK_NAMESPACE = 57801
const NOWAIT = 57802
const NULLS = 57803
const OJ = 57804
const OLD = 57805
const OPTIONAL = 57806
const ORDINALITY = 57807
const ORGANIZATION = 57808
const OTHERS = 57809
const PATH = 57810
const PERSIST = 57811
const PERSIST_ONLY = 57812
const PRECEDING = 57813
const PRIVILEGE_CHECKS_USER = 57814
const PROCESS = 57815
const RANDOM = 57816
const REFERENCE = 57817
const REQUIRE_ROW_FORMAT = 57818
const RESOURCE = 57819
const RESPECT = 57820
const RESTART = 57821
const RETAIN = 57822
const REUSE = 57823
const ROLE = 57824
const SECONDARY = 57825
const SECONDARY_ENGINE = 57826
const SECONDARY_LOAD = 57827
const SECONDARY_UNLOAD = 57828
const SKIP = 57829
const SRID = 57830
const THREAD_PRIORITY = 57831
const TIES = 57832
const UNBOUNDED = 57833
const VCPU = 57834
const VISIBLE = 57835
const FORMAT = 57836
const TREE = 57837
const VITESS = 57838
const TRADITIONAL = 57839
const LOCAL = 57840
const LOW_PRIORITY = 57841
const NO_WRITE_TO_BINLOG = 57842
const LOGS = 57843
const ERROR = 57844
const GENERAL = 57845
const HOSTS = 57846
const OPTIMIZER_COSTS = 57847
const USER_RESOURCES = 57848
const SLOW = 57849
const CHANNEL = 57850
const RELAY = 57851
const EXPORT = 57852
const AVG_ROW_LENGTH = 57853
const CONNECTION = 57854
const CHECKSUM = 57855
const DELAY_KEY_WRITE = 57856
const ENCRYPTION = 57857
const ENGINE = 57858
const INSERT_METHOD = 57859
const MAX_ROWS = 57860
const MIN_ROWS = 57861
const PACK_KEYS = 57862
const PASSWORD = 57863
const FIXED = 57864
const DYNAMIC = 57865
const COMPRESSED = 57866
const REDUNDANT = 57867
const COMPACT = 57868
const ROW_FORMAT = 57869
const STATS_AUTO_RECALC = 57870
const STATS_PERSISTENT = 57871
const STATS_SAMPLE_PAGES = 57872
const STORAGE = 57873
const MEMORY = 57874
const DISK = 57875
const PARTITIONS = 57876
const LINEAR = 57877
const RANGE = 57878
const LIST = 57879
const SUBPARTITION = 57880
const SUBPARTITIONS = 57881
const HASH = 57882

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	558, 140,
	-2, 146,
	-1, 48,
	116, 146,
	156, 146,
	312, 146,
	-2, 451,
	-1, 55,
	33, 630,
	216, 630,
	227, 630,
	262, 644,
	263, 644,
	-2, 632,
	-1, 60,
	218, 655,
	-2, 653,
	-1, 114,
	215, 1126,
	-2, 119,
	-1, 116,
	1, 141,
	558, 141,
	-2, 146,
	-1, 126,
	117, 354,
	221, 354,
	-2, 445,
	-1, 145,
	116, 146,
	156, 146,
	312, 146,
	-2, 460,
	-1, 611,
	200, 1147,
	-2, 1143,
	-1, 612,
	200, 1148,
	-2, 1144,
	-1, 686,
	57, 723,
	-2, 738,
	-1, 723,
	132, 1509,
	-2, 112,
	-1, 724,
	132, 1385,
	-2, 113,
	-1, 730,
	132, 1439,
	-2, 1120,
	-1, 872,
	132, 1316,
	-2, 1117,
	-1, 910,
	226, 41,
	231, 41,
	-2, 365,
	-1, 987,
	1, 499,
	558, 499,
	-2, 146,
	-1, 1189,
	57, 724,
	-2, 743,
	-1, 1190,
	57, 725,
	-2, 744,
	-1, 1242,
	116, 146,
	156, 146,
	312, 146,
	-2, 395,
	-1, 1319,
	117, 354,
	221, 354,
	-2, 445,
	-1, 1328,
	226, 42,
	231, 42,
	-2, 366,
	-1, 1585,
	200, 1152,
	-2, 1146,
	-1, 1666,
	116, 146,
	156, 146,
	312, 146,
	-2, 396,
	-1, 1673,
	23, 165,
	-2, 167,
	-1, 1868,
	84, 39,
	-2, 778,
	-1, 1918,
	75, 94,
	84, 94,
	-2, 798,
	-1, 2088,
	47, 1088,
	-2, 1082,
	-1, 2255,
	84, 39,
	-2, 779,
	-1, 2293,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 771,
}

const yyPrivate = 57344

const yyLast = 35296

var yyAct = [...]int{
	611, 2553, 2547, 2352, 2209, 2518, 2504, 2431, 2180, 2139,
	2146, 1168, 2099, 605, 37, 2102, 701, 2377, 1051, 2192,
	679, 2445, 1856, 1726, 96, 2148, 606, 3, 2191, 2264,
	562, 1204, 2103, 2382, 1891, 2100, 2258, 566, 614, 603,
	604, 1639, 1599, 588, 1624, 1620, 559, 2194, 1883, 1914,
	2097, 182, 2284, 2250, 182, 1696, 526, 182, 2089, 1950,
	1979, 2020, 542, 560, 182, 1716, 1701, 1952, 1951, 154,
	875, 728, 182, 558, 999, 1652, 36, 1644, 1903, 554,
	1643, 1191, 1875, 918, 1858, 38, 702, 182, 1483, 1663,
	1579, 683, 940, 687, 2036, 1535, 1715, 1735, 1326, 1028,
	140, 681, 905, 1703, 1524, 1768, 1944, 1234, 1920, 542,
	1213, 704, 542, 182, 542, 900, 1601, 571, 1646, 91,
	620, 1528, 1171, 1547, 95, 1501, 1434, 725, 1430, 1070,
	1333, 882, 911, 1713, 1582, 1416, 1342, 883, 1631, 906,
	879, 907, 1233, 1217, 693, 1044, 908, 1231, 1294, 123,
	1439, 1049, 1692, 715, 76, 1592, 688, 98, 124, 157,
	1318, 983, 691, 1625, 1136, 689, 2476, 1140, 97, 1972,
	89, 2554, 2177, 117, 118, 85, 1728, 1729, 1730, 1728,
	549, 1999, 1998, 1766, 1970, 2028, 2029, 1071, 1490, 184,
	185, 186, 90, 690, 77, 8, 7, 1489, 709, 1488,
	714, 6, 1299, 1596, 1597, 178, 1487, 119, 1486, 125,
	695, 922, 1402, 1485, 876, 945, 1472, 1477, 2532, 499,
	1071, 552, 1854, 553, 2085, 891, 2317, 594, 2163, 120,
	2427, 2426, 682, 2345, 944, 942, 2346, 953, 78, 622,
	79, 80, 162, 943, 2563, 680, 550, 696, 956, 957,
	2514, 960, 961, 962, 963, 1885, 722, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 729, 703, 921, 2557, 119, 886, 1806, 78,
	2487, 2546, 2353, 898, 1934, 102, 2505, 1754, 2513, 2486,
	897, 896, 1081, 946, 947, 948, 1708, 2035, 2242, 159,
	78, 160, 1308, 1894, 1929, 2007, 1855, 1928, 1657, 2006,
	1930, 177, 2136, 2137, 1035, 87, 1037, 684, 2135, 79,
	1706, 958, 2027, 78, 986, 1081, 104, 105, 1895, 108,
	1658, 1659, 114, 1803, 1235, 179, 1236, 684, 494, 1018,
	119, 673, 1804, 1577, 1102, 1598, 672, 1047, 1006, 2395,
	1973, 1941, 2261, 1007, 1034, 1036, 87, 2233, 675, 676,
	677, 678, 1676, 1675, 686, 2436, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1111, 1110, 1112, 1113, 87, 2231, 890,
	1023, 1024, 892, 1019, 1006, 1077, 1012, 2211, 1069, 1007,
	1476, 540, 717, 718, 529, 529, 544, 1005, 538, 1004,
	87, 1175, 1422, 2142, 1980, 982, 1478, 1479, 1480, 2062,
	1736, 2002, 1774, 529, 1769, 2556, 163, 1417, 1077, 1780,
	1777, 1779, 1778, 529, 1041, 168, 1569, 1558, 1559, 1560,
	1561, 1571, 1562, 1563, 1564, 1576, 1572, 1565, 1566, 1573,
	1574, 1575, 1567, 1568, 1570, 1032, 1705, 1046, 2143, 1033,
	1021, 1022, 1027, 959, 895, 988, 992, 993, 1392, 1038,
	895, 981, 1020, 899, 2204, 1013, 2212, 1775, 2533, 1025,
	2015, 1785, 2205, 2145, 965, 964, 895, 2140, 887, 1026,
	1782, 1031, 1783, 2338, 1784, 889, 888, 2213, 995, 1773,
	1771, 2150, 2151, 2188, 182, 929, 182, 927, 2141, 182,
	1739, 901, 1393, 87, 1394, 902, 607, 1640, 589, 591,
	608, 609, 893, 587, 590, 610, 902, 1039, 1114, 938,
	937, 936, 935, 934, 1178, 985, 933, 542, 542, 542,
	2147, 1772, 932, 931, 893, 926, 155, 1311, 939, 1804,
	2019, 1114, 592, 593, 2408, 542, 542, 2152, 1076, 1073,
	1074, 1075, 1080, 1082, 1079, 920, 1078, 880, 2558, 2544,
	37, 2063, 914, 1072, 880, 2162, 880, 913, 920, 955,
	878, 1332, 1859, 1861, 1063, 1002, 1431, 1008, 1009, 1010,
	1011, 1076, 1073, 1074, 1075, 1080, 1082, 1079, 1714, 1078,
	530, 530, 1423, 2551, 716, 2149, 1072, 2016, 1760, 1427,
	1048, 2031, 920, 1306, 2187, 2475, 2004, 2152, 1971, 530,
	1974, 1626, 1627, 1057, 984, 949, 1016, 2170, 2262, 530,
	1042, 1040, 894, 2001, 1817, 1305, 1304, 1991, 894, 1428,
	1302, 1117, 1118, 1119, 1120, 930, 1166, 928, 498, 493,
	2485, 1125, 81, 1128, 894, 1707, 2014, 2437, 2466, 2013,
	1421, 920, 2298, 919, 1115, 1116, 86, 2280, 1161, 913,
	916, 917, 1756, 880, 920, 1925, 919, 910, 914, 1890,
	2423, 923, 913, 182, 1846, 1331, 1591, 542, 542, 1053,
	1054, 924, 1805, 1221, 2022, 2022, 1148, 997, 909, 2021,
	2021, 1121, 116, 182, 1181, 1114, 1179, 86, 1185, 1167,
	919, 925, 1113, 1182, 683, 923, 913, 681, 1184, 1664,
	2144, 698, 542, 2134, 111, 924, 182, 2037, 86, 1860,
	994, 542, 1404, 1403, 1405, 1406, 1407, 542, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 725,
	77, 86, 1066, 1064, 173, 174, 175, 176, 1065, 919,
	1045, 1029, 1138, 2481, 1139, 1440, 2334, 1003, 2274, 1142,
	941, 1167, 919, 1001, 954, 1770, 1050, 1050, 1050, 2524,
	1183, 112, 991, 2522, 95, 1154, 1155, 1156, 1157, 1418,
	1424, 1419, 2526, 2527, 1420, 1237, 79, 2150, 2151, 920,
	1067, 1172, 2549, 2055, 2523, 2550, 1548, 2548, 2039, 1015,
	1108, 1109, 1111, 1110, 1112, 1113, 1548, 98, 1832, 1084,
	1017, 1085, 1086, 684, 1122, 1123, 1124, 1963, 1127, 1086,
	1129, 1130, 1131, 1132, 2391, 1135, 1137, 1137, 2309, 1137,
	1141, 1141, 1143, 1144, 1145, 1146, 1147, 1755, 1149, 1150,
	1151, 1152, 1153, 1506, 1200, 682, 2308, 1141, 1141, 1141,
	1141, 680, 1169, 1085, 1086, 1203, 1180, 1507, 1508, 1505,
	2049, 2048, 2047, 2041, 1743, 2045, 1341, 2040, 1753, 2038,
	1340, 1227, 1228, 987, 2043, 182, 184, 185, 186, 1295,
	1526, 1030, 1330, 2042, 729, 1441, 2239, 919, 1303, 1748,
	1000, 2149, 1751, 913, 916, 917, 1823, 880, 2044, 2046,
	929, 910, 914, 2152, 1084, 1822, 1085, 1086, 927, 542,
	2492, 1328, 2540, 2057, 1174, 1828, 1752, 1222, 1748, 1337,
	684, 2299, 2561, 1339, 684, 2559, 542, 542, 2541, 542,
	684, 542, 542, 2418, 542, 542, 542, 542, 542, 542,
	2542, 1084, 2493, 1085, 1086, 1750, 1232, 1527, 2368, 542,
	2367, 1198, 1411, 182, 1375, 1496, 1498, 1499, 2459, 1338,
	1106, 1107, 1108, 1109, 1111, 1110, 1112, 1113, 2316, 182,
	2315, 1186, 1809, 1810, 1811, 1084, 1497, 1085, 1086, 1324,
	542, 1409, 182, 87, 1370, 1371, 1084, 1827, 1085, 1086,
	2460, 1309, 1310, 1429, 1632, 1633, 542, 1504, 182, 2560,
	1334, 1334, 625, 626, 627, 1317, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1088, 182, 1410, 1399, 1336, 1211, 1372,
	2178, 182, 2168, 1084, 1948, 1085, 1086, 1947, 1711, 1412,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 542,
	542, 542, 2237, 1198, 1408, 1397, 1396, 1301, 1335, 1198,
	2463, 1378, 1379, 1315, 1395, 720, 1552, 1384, 1385, 1327,
	1553, 2462, 1313, 1344, 1314, 1345, 1386, 1347, 1349, 1436,
	182, 1353, 1355, 1357, 1359, 1361, 1380, 1377, 1084, 1398,
	1085, 1086, 2461, 1210, 1841, 1388, 1376, 1444, 1351, 1084,
	2390, 1085, 1086, 2388, 1448, 2364, 1450, 1451, 1452, 1453,
	2313, 2305, 1957, 1457, 1442, 1443, 184, 185, 186, 1945,
	2306, 1102, 1818, 1373, 1098, 1525, 1099, 1471, 1447, 1084,
	1207, 1085, 1086, 1432, 1502, 1454, 1455, 1456, 1538, 542,
	1100, 1101, 1097, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1111, 1110, 1112, 1113, 542, 542, 1509, 119, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 897, 896, 1500, 1510, 1446, 1764, 1583, 1763, 1208,
	2472, 1623, 1605, 1549, 182, 1198, 1473, 1307, 1437, 542,
	2208, 1084, 1400, 1085, 1086, 1387, 1604, 1470, 1383, 1382,
	1467, 1468, 1469, 1381, 1209, 1821, 1043, 2416, 1056, 1610,
	1198, 1611, 2444, 182, 94, 1084, 542, 1085, 1086, 2443,
	1084, 2245, 1085, 1086, 2412, 1503, 182, 2335, 2411, 542,
	1585, 2351, 2244, 2273, 182, 1981, 182, 1960, 182, 182,
	542, 1949, 1084, 542, 1085, 1086, 1531, 1531, 1533, 1672,
	1583, 1587, 1588, 2275, 542, 1881, 2555, 1084, 725, 1085,
	1086, 725, 1084, 95, 1085, 1086, 92, 1534, 1084, 1083,
	1085, 1086, 1198, 101, 1540, 1541, 1084, 93, 1085, 1086,
	1881, 2511, 95, 1616, 100, 1584, 99, 1642, 1050, 1050,
	1050, 184, 185, 186, 1586, 1932, 2480, 1589, 1590, 184,
	185, 186, 1084, 1585, 1085, 1086, 184, 185, 186, 542,
	1724, 1682, 1683, 1684, 1685, 1717, 1718, 1719, 1881, 2498,
	1721, 1723, 1667, 1892, 1668, 1881, 2496, 1650, 2488, 1198,
	695, 1198, 2098, 1615, 542, 184, 185, 186, 1102, 1722,
	542, 1337, 2273, 92, 1337, 1673, 1337, 1881, 2477, 1881,
	94, 1900, 1747, 1198, 93, 1737, 1671, 1618, 1637, 1698,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1110, 1112,
	1113, 2158, 1635, 1704, 1749, 101, 2343, 2474, 1881, 2419,
	2343, 1198, 542, 1655, 1525, 1892, 100, 1654, 99, 1525,
	1525, 1881, 2341, 1670, 1900, 1669, 2129, 94, 1748, 1198,
	2278, 1198, 2073, 729, 1734, 1804, 729, 100, 1198, 2160,
	2159, 2156, 2157, 2156, 2155, 1899, 922, 1900, 1198, 1819,
	1198, 1804, 2000, 1298, 1985, 182, 1334, 1977, 1978, 1881,
	1880, 1748, 182, 1083, 1198, 1298, 1297, 182, 182, 1742,
	1656, 182, 1745, 182, 1746, 1699, 1709, 1712, 1710, 1819,
	182, 1720, 1757, 1694, 1695, 1198, 2273, 182, 2318, 1921,
	1838, 1921, 1837, 1677, 1748, 1678, 1679, 1680, 1681, 1900,
	1740, 1741, 1731, 1744, 1102, 1819, 2030, 1648, 1699, 921,
	1758, 1688, 1689, 1690, 1691, 182, 542, 1630, 1759, 1243,
	1242, 1202, 1877, 1761, 1762, 1594, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1111, 1110, 1112, 1113, 94, 2319, 2320,
	2321, 1481, 1426, 1767, 1229, 685, 904, 903, 1366, 2530,
	2501, 1102, 1922, 1816, 1922, 612, 87, 1795, 1796, 2433,
	2291, 1924, 1798, 1804, 1205, 2409, 2402, 2333, 2330, 2311,
	2248, 1799, 1502, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1111, 1110, 1112, 1113, 2247, 1300, 1697, 2206, 2183, 2179,
	1986, 1693, 1687, 1813, 1819, 1815, 1686, 1788, 1367, 1368,
	1369, 1414, 2210, 1329, 1325, 1296, 183, 113, 2181, 183,
	2322, 1814, 183, 1953, 1363, 1954, 986, 543, 2434, 183,
	2285, 2286, 87, 1708, 1608, 2537, 2519, 183, 2288, 2175,
	1905, 1908, 1909, 1910, 1906, 182, 1907, 1911, 2174, 2173,
	2285, 2286, 183, 182, 2098, 1964, 1789, 1474, 2120, 542,
	1852, 1802, 2290, 2121, 2118, 542, 2117, 2323, 2324, 2119,
	1954, 1364, 1365, 1503, 543, 2116, 542, 543, 183, 543,
	2535, 1812, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111,
	1110, 1112, 1113, 2122, 2512, 1909, 1910, 1622, 1206, 182,
	182, 1614, 2279, 37, 1869, 2372, 2078, 2371, 2077, 1196,
	1192, 1983, 1916, 1585, 2266, 1931, 2458, 1896, 1882, 2381,
	1831, 2383, 2265, 2269, 1193, 2087, 1425, 671, 1829, 1104,
	1105, 1106, 1107, 1108, 1109, 1111, 1110, 1112, 1113, 1905,
	1908, 1909, 1910, 1906, 699, 1907, 1911, 2154, 1878, 1612,
	1613, 1195, 700, 1194, 1939, 2370, 1958, 951, 1544, 542,
	950, 1196, 1192, 1172, 182, 1843, 1844, 1853, 1584, 1863,
	2220, 182, 1545, 1942, 1943, 1915, 1193, 1531, 1865, 1953,
	2090, 2092, 2025, 542, 1055, 1874, 1935, 1879, 1919, 2093,
	542, 1889, 1993, 92, 1337, 1337, 92, 1992, 120, 542,
	94, 1189, 1190, 1195, 93, 1194, 2271, 93, 1632, 1633,
	1923, 1997, 94, 2171, 1926, 1792, 101, 2473, 1704, 2429,
	2153, 1936, 182, 182, 182, 182, 182, 100, 1976, 99,
	1913, 1933, 1619, 707, 708, 2076, 1781, 2251, 94, 182,
	182, 101, 1808, 2075, 1946, 99, 2450, 2449, 1956, 2389,
	2387, 2386, 100, 100, 99, 182, 1955, 2379, 2331, 2270,
	2268, 2184, 1732, 1312, 1965, 1966, 1967, 101, 1961, 1995,
	706, 2378, 2259, 1845, 1525, 103, 1892, 1877, 100, 2539,
	2538, 88, 1317, 1839, 1606, 1223, 1215, 106, 107, 2539,
	1862, 2464, 1987, 1988, 2304, 697, 1, 542, 2521, 1996,
	2054, 511, 1595, 1170, 681, 1994, 525, 2517, 1401, 684,
	1391, 2354, 2430, 542, 1982, 2067, 1738, 2329, 1702, 912,
	145, 1665, 1666, 2507, 110, 873, 109, 2017, 182, 1897,
	1898, 2033, 542, 915, 1014, 1733, 2344, 1940, 1917, 1674,
	2032, 542, 1249, 1247, 2023, 1248, 1246, 2024, 542, 542,
	1251, 182, 182, 182, 182, 182, 1250, 1245, 2095, 2067,
	2080, 687, 2110, 182, 1840, 2034, 1475, 2050, 182, 182,
	539, 182, 2104, 1912, 182, 182, 182, 2081, 2051, 180,
	1238, 1185, 2101, 1216, 952, 501, 2066, 2101, 2161, 1765,
	507, 1126, 2068, 2069, 2070, 2071, 2074, 1927, 726, 719,
	1607, 1867, 2106, 2263, 2086, 2088, 1884, 2079, 2091, 2169,
	2082, 2128, 2084, 2457, 2380, 182, 2499, 1937, 1212, 1830,
	2130, 1133, 1546, 2131, 688, 1647, 596, 1603, 542, 2112,
	2113, 2111, 2115, 689, 2114, 1495, 564, 542, 563, 1990,
	2123, 561, 182, 1870, 2127, 1893, 1089, 1436, 615, 2072,
	2132, 1857, 182, 95, 2138, 1224, 1904, 1902, 1901, 183,
	1790, 183, 1651, 2287, 183, 2283, 1645, 182, 2186, 2164,
	182, 2165, 1876, 572, 565, 557, 613, 2301, 2196, 2003,
	2221, 2207, 2190, 2198, 2197, 2109, 2005, 1938, 541, 2203,
	1068, 1188, 543, 543, 543, 551, 2166, 2167, 2185, 885,
	1543, 1704, 2189, 2435, 2421, 2201, 1807, 2241, 1187, 1556,
	543, 543, 1557, 2176, 1725, 63, 41, 546, 2531, 1059,
	713, 32, 31, 30, 542, 182, 29, 28, 2216, 2215,
	23, 22, 21, 20, 19, 727, 25, 18, 877, 17,
	884, 16, 115, 50, 47, 2223, 45, 2229, 2218, 2219,
	122, 121, 48, 44, 2222, 989, 42, 27, 26, 15,
	14, 13, 12, 11, 2257, 10, 9, 1648, 5, 4,
	35, 34, 33, 1062, 2252, 2253, 24, 2, 1969, 1727,
	182, 0, 0, 2260, 0, 2105, 0, 79, 0, 0,
	1648, 1648, 1648, 1648, 1648, 2282, 0, 2267, 2307, 0,
	2272, 0, 0, 182, 0, 0, 2292, 1917, 0, 0,
	1648, 0, 0, 1648, 0, 2296, 2297, 2289, 0, 0,
	2294, 182, 0, 0, 182, 182, 182, 0, 0, 2295,
	0, 0, 2198, 2197, 542, 542, 2302, 0, 183, 0,
	2303, 0, 543, 543, 0, 0, 0, 0, 0, 0,
	2312, 0, 2314, 0, 0, 0, 0, 0, 183, 0,
	0, 542, 542, 542, 542, 2339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 2336,
	2337, 183, 0, 2195, 2350, 0, 543, 0, 2348, 2349,
	2226, 2227, 543, 2228, 0, 0, 2230, 0, 2232, 0,
	2234, 0, 178, 0, 0, 182, 0, 0, 2363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2359, 2360, 0, 0, 2224, 120, 0, 0, 542,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 37, 0, 2385, 2376, 2398, 2384, 2375, 0, 0,
	0, 0, 2104, 2400, 0, 2396, 2104, 681, 2394, 2392,
	0, 2101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2404,
	2405, 0, 0, 0, 542, 2407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 160, 0,
	0, 0, 0, 0, 542, 2415, 0, 2413, 177, 2414,
	0, 0, 0, 2425, 0, 2420, 0, 2424, 0, 1648,
	542, 0, 2432, 0, 542, 542, 0, 0, 0, 2417,
	0, 0, 2300, 0, 0, 0, 0, 0, 0, 0,
	183, 2456, 0, 0, 2454, 2451, 2452, 0, 2453, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	542, 2465, 0, 0, 0, 0, 0, 2467, 0, 0,
	0, 0, 2104, 0, 543, 2469, 0, 0, 2340, 681,
	0, 0, 0, 0, 542, 182, 0, 0, 0, 0,
	711, 543, 543, 37, 543, 0, 543, 543, 2468, 543,
	543, 543, 543, 543, 543, 2471, 0, 2479, 0, 0,
	0, 0, 0, 163, 543, 0, 0, 542, 183, 0,
	0, 0, 168, 0, 0, 0, 0, 2494, 0, 2482,
	0, 542, 542, 0, 183, 2502, 2497, 37, 2506, 542,
	2369, 0, 2373, 2374, 0, 543, 0, 183, 0, 2432,
	2508, 2500, 2101, 727, 727, 727, 0, 2528, 555, 2520,
	2525, 543, 0, 183, 0, 2105, 2534, 79, 0, 2105,
	0, 1058, 1060, 2536, 0, 0, 0, 0, 0, 183,
	0, 542, 0, 0, 0, 0, 183, 0, 2545, 0,
	705, 0, 2552, 0, 0, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 543, 543, 543, 2562, 0, 0,
	0, 0, 0, 0, 1197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2543, 0, 2422, 0,
	0, 0, 0, 155, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 185, 186, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 1146, 0,
	0, 0, 0, 1176, 1177, 0, 0, 0, 0, 543,
	543, 0, 0, 0, 0, 516, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1219, 183,
	0, 0, 0, 0, 543, 0, 0, 727, 0, 0,
	0, 0, 0, 1239, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 79, 0, 0, 0, 0, 183, 0,
	0, 543, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 543, 0, 0, 0, 0, 183,
	0, 183, 0, 183, 183, 543, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 521, 0, 0,
	0, 173, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	500, 0, 502, 517, 0, 532, 0, 531, 506, 0,
	504, 508, 518, 509, 0, 503, 0, 514, 0, 0,
	505, 519, 520, 522, 536, 535, 523, 0, 512, 533,
	0, 0, 0, 0, 0, 877, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 1343, 1343, 0, 1343, 0, 1343, 1343, 0,
	1352, 1343, 1343, 1343, 1343, 1343, 0, 0, 0, 0,
	0, 0, 0, 1164, 1164, 877, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 183, 183, 0, 0, 183, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 1413, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	183, 543, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 727, 727, 0, 0,
	0, 0, 0, 534, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 527, 0, 497, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 528, 0, 0, 0,
	0, 497, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 1539, 0, 0, 0, 0,
	183, 0, 1164, 0, 0, 0, 0, 0, 183, 0,
	1554, 1555, 0, 0, 543, 727, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 727, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	877, 0, 0, 0, 543, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 1199, 1201, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 183, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	877, 0, 0, 0, 183, 183, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 543, 543, 0, 183, 183, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 183, 183, 0, 183, 0, 0, 183,
	183, 183, 1438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 497, 0, 497, 0, 0, 497, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 1266, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 1491, 1492, 1493, 1494, 0, 0,
	0, 0, 183, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 1537, 0, 0, 727, 0,
	0, 0, 1542, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 1578, 0, 543,
	183, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 1254,
	0, 0, 0, 0, 0, 183, 674, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 694, 0, 0, 1959, 183, 881, 0, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 543,
	543, 0, 1550, 0, 0, 497, 1551, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	1267, 0, 0, 0, 0, 1989, 543, 543, 543, 543,
	0, 0, 1199, 1593, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	183, 0, 0, 0, 1280, 1283, 1284, 1285, 1286, 1287,
	1288, 0, 1289, 1290, 1291, 1292, 1293, 1268, 1269, 1270,
	1271, 1252, 1253, 1281, 543, 1255, 543, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 497, 0, 0, 727, 0, 543,
	0, 1164, 0, 0, 2108, 1343, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 543,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 1165, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 543,
	183, 0, 0, 0, 877, 0, 0, 1164, 1389, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 1435, 0, 1833,
	0, 0, 0, 0, 0, 0, 543, 543, 0, 0,
	0, 0, 0, 497, 543, 0, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 1458,
	1459, 497, 497, 497, 497, 497, 497, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 990, 0,
	996, 1214, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 1824, 0, 1825, 1826, 0, 0, 0,
	0, 0, 712, 0, 1834, 0, 0, 1835, 1836, 712,
	712, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 1435, 712,
	712, 712, 712, 712, 1842, 0, 0, 0, 0, 0,
	0, 1847, 1848, 1849, 1850, 1851, 0, 1617, 0, 0,
	1621, 1621, 0, 1389, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 2355, 2356, 2357,
	2358, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 1435, 0, 497, 0, 497, 0, 497, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 2397, 0, 2399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	0, 0, 0, 2056, 0, 0, 0, 0, 2058, 2059,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	727, 0, 0, 2096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2447, 0, 0, 0,
	2447, 2447, 0, 120, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 141, 0, 497, 2061, 0, 0, 2064, 2065,
	1621, 497, 0, 0, 2182, 0, 497, 497, 0, 0,
	497, 0, 1793, 159, 0, 160, 0, 0, 0, 497,
	0, 129, 130, 151, 150, 177, 497, 0, 0, 0,
	0, 1164, 0, 2495, 0, 0, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 727, 727, 0,
	0, 0, 2107, 0, 497, 2515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2125,
	2126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1374, 146, 127,
	153, 134, 126, 712, 147, 148, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 555, 0, 0, 168,
	135, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 138, 136, 131, 132, 133, 137,
	712, 712, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 1435, 0, 0, 497, 139, 0, 0, 1445, 0,
	0, 0, 1389, 0, 0, 1449, 0, 0, 0, 0,
	0, 2225, 0, 0, 0, 0, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 0, 0, 2235, 2236, 2238, 2240, 0,
	2332, 0, 0, 0, 0, 2246, 0, 0, 0, 0,
	0, 2249, 0, 0, 0, 0, 2347, 2254, 497, 497,
	0, 0, 0, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 2277, 0, 0, 2281, 0, 0, 0, 2361, 0,
	2362, 0, 0, 0, 0, 2365, 2366, 0, 0, 0,
	0, 0, 2293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 0, 0, 2393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2401, 0, 0, 2403,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 2406, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 144, 2410, 0, 0, 0, 2342, 0, 0, 0,
	0, 497, 497, 497, 497, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 497,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 497, 0, 0, 0, 1638, 0,
	1641, 0, 0, 1484, 0, 0, 0, 0, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2455,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 555, 0, 0, 0, 497, 173, 174,
	175, 176, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1165, 0, 0, 0, 0, 1165,
	497, 497, 497, 497, 497, 0, 120, 0, 142, 0,
	0, 0, 2124, 0, 0, 0, 0, 497, 1389, 162,
	497, 0, 2428, 497, 2133, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2438, 2439, 2440, 0,
	2441, 2442, 0, 0, 2446, 178, 0, 0, 0, 0,
	152, 0, 2529, 0, 0, 141, 1316, 0, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 120,
	0, 142, 0, 0, 0, 0, 159, 0, 160, 0,
	1165, 2470, 162, 0, 1320, 1321, 151, 150, 177, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 497, 0, 0, 0, 0, 1776, 0, 0, 0,
	2484, 1786, 1787, 152, 0, 1791, 497, 0, 141, 497,
	2489, 0, 0, 0, 1794, 0, 2490, 2491, 0, 0,
	0, 1797, 78, 39, 40, 80, 0, 0, 0, 159,
	0, 160, 0, 0, 0, 0, 0, 1320, 1321, 151,
	150, 177, 84, 2503, 0, 0, 43, 69, 70, 1800,
	67, 71, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 146, 1322, 153, 0, 1319, 0, 147, 148, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 56, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 1322, 153, 0, 1319, 0,
	147, 148, 497, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	497, 0, 0, 497, 497, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	49, 52, 51, 54, 1918, 66, 0, 0, 75, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 0, 0, 1165, 73, 74, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 143, 0, 0, 144, 0, 0, 0, 0, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 2008, 2009, 2010, 2011,
	2012, 0, 0, 0, 143, 0, 0, 144, 0, 0,
	0, 0, 0, 1484, 2018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 0, 0, 0,
	0, 173, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 497, 0, 81, 616, 623, 624,
	625, 626, 627, 617, 619, 0, 0, 0, 618, 0,
	86, 621, 628, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 0, 0, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 2199, 2200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 0, 0, 2172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2193, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 2202, 0, 0, 0,
	0, 616, 623, 624, 625, 626, 627, 617, 619, 0,
	0, 2214, 618, 0, 2217, 621, 628, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2199, 2200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2256,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 0, 608, 609, 0, 0, 2310, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2325, 0, 0, 2326, 2327,
	2328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 841, 419, 0, 789, 858,
	759, 777, 868, 780, 783, 823, 738, 802, 341, 774,
	0, 763, 734, 769, 735, 761, 791, 244, 758, 843,
	806, 857, 297, 241, 740, 764, 355, 779, 193, 825,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 864, 301, 812, 0, 404, 326,
	0, 0, 0, 793, 847, 800, 837, 788, 824, 748,
	811, 859, 775, 820, 860, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 2509,
	0, 2510, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 771, 817, 854, 772, 819, 239, 285, 246, 238,
	423, 865, 846, 0, 0, 209, 856, 795, 0, 822,
	0, 871, 733, 814, 0, 736, 739, 867, 850, 767,
	249, 0, 0, 0, 0, 0, 0, 0, 792, 801,
	834, 786, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 810, 0, 0, 0, 744, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 747, 0, 766, 835, 0, 731, 268, 741,
	327, 231, 0, 839, 849, 787, 456, 853, 785, 784,
	829, 745, 845, 778, 296, 743, 293, 188, 205, 2483,
	776, 337, 378, 384, 844, 762, 770, 229, 768, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 809,
	827, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 1052, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 757, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 840, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 832, 870, 350, 383, 219, 442, 403,
	752, 756, 750, 751, 804, 805, 753, 861, 862, 863,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 836,
	746, 0, 754, 755, 0, 842, 851, 852, 492, 808,
	187, 202, 299, 866, 372, 261, 470, 450, 446, 732,
	749, 236, 760, 0, 0, 773, 781, 782, 794, 796,
	797, 798, 799, 323, 815, 816, 818, 826, 828, 831,
	833, 838, 848, 869, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 807, 813, 310, 254, 273,
	284, 821, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 803, 830, 306, 420, 421, 280, 855, 841, 419,
	0, 789, 858, 759, 777, 868, 780, 783, 823, 738,
	802, 341, 774, 0, 763, 734, 769, 735, 761, 791,
	244, 758, 843, 806, 857, 297, 241, 740, 764, 355,
	779, 193, 825, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 864, 301, 812,
	0, 404, 326, 0, 0, 0, 793, 847, 800, 837,
	788, 824, 748, 811, 859, 775, 820, 860, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 771, 817, 854, 772, 819, 239,
	285, 246, 238, 423, 865, 846, 0, 0, 209, 856,
	795, 0, 822, 0, 871, 733, 814, 0, 736, 739,
	867, 850, 767, 249, 0, 0, 0, 0, 0, 0,
	0, 792, 801, 834, 786, 0, 0, 0, 0, 0,
	2134, 0, 765, 0, 810, 0, 0, 0, 744, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 790, 0, 0, 0, 747, 0, 766, 835, 0,
	731, 268, 741, 327, 231, 0, 839, 849, 787, 456,
	853, 785, 784, 829, 745, 845, 778, 296, 743, 293,
	188, 205, 0, 776, 337, 378, 384, 844, 762, 770,
	229, 768, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 809, 827, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 1052, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 757, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 840,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 832, 870, 350, 383,
	219, 442, 403, 752, 756, 750, 751, 804, 805, 753,
	861, 862, 863, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 836, 746, 0, 754, 755, 0, 842, 851,
	852, 492, 808, 187, 202, 299, 866, 372, 261, 470,
	450, 446, 732, 749, 236, 760, 0, 0, 773, 781,
	782, 794, 796, 797, 798, 799, 323, 815, 816, 818,
	826, 828, 831, 833, 838, 848, 869, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 807, 813,
	310, 254, 273, 284, 821, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 803, 830, 306, 420, 421, 280,
	855, 841, 419, 0, 789, 858, 759, 777, 868, 780,
	783, 823, 738, 802, 341, 774, 0, 763, 734, 769,
	735, 761, 791, 244, 758, 843, 806, 857, 297, 241,
	740, 764, 355, 779, 193, 825, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	864, 301, 812, 0, 404, 326, 0, 0, 0, 793,
	847, 800, 837, 788, 824, 748, 811, 859, 775, 820,
	860, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 771, 817, 854,
	772, 819, 239, 285, 246, 238, 423, 865, 846, 0,
	0, 209, 856, 795, 0, 822, 0, 871, 733, 814,
	0, 736, 739, 867, 850, 767, 249, 0, 0, 0,
	0, 0, 0, 0, 792, 801, 834, 786, 0, 0,
	0, 0, 0, 2094, 0, 765, 0, 810, 0, 0,
	0, 744, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 790, 0, 0, 0, 747, 0,
	766, 835, 0, 731, 268, 741, 327, 231, 0, 839,
	849, 787, 456, 853, 785, 784, 829, 745, 845, 778,
	296, 743, 293, 188, 205, 0, 776, 337, 378, 384,
	844, 762, 770, 229, 768, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 809, 827, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 1052, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 757,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 840, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 832,
	870, 350, 383, 219, 442, 403, 752, 756, 750, 751,
	804, 805, 753, 861, 862, 863, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 836, 746, 0, 754, 755,
	0, 842, 851, 852, 492, 808, 187, 202, 299, 866,
	372, 261, 470, 450, 446, 732, 749, 236, 760, 0,
	0, 773, 781, 782, 794, 796, 797, 798, 799, 323,
	815, 816, 818, 826, 828, 831, 833, 838, 848, 869,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 807, 813, 310, 254, 273, 284, 821, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 803, 830, 306,
	420, 421, 280, 855, 841, 419, 0, 789, 858, 759,
	777, 868, 780, 783, 823, 738, 802, 341, 774, 0,
	763, 734, 769, 735, 761, 791, 244, 758, 843, 806,
	857, 297, 241, 740, 764, 355, 779, 193, 825, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 864, 301, 812, 0, 404, 326, 0,
	0, 0, 793, 847, 800, 837, 788, 824, 748, 811,
	859, 775, 820, 860, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	771, 817, 854, 772, 819, 239, 285, 246, 238, 423,
	865, 846, 0, 0, 209, 856, 795, 0, 822, 0,
	871, 733, 814, 0, 736, 739, 867, 850, 767, 249,
	0, 0, 0, 0, 0, 0, 0, 792, 801, 834,
	786, 0, 0, 0, 0, 0, 1636, 0, 765, 0,
	810, 0, 0, 0, 744, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 790, 0, 0,
	0, 747, 0, 766, 835, 0, 731, 268, 741, 327,
	231, 0, 839, 849, 787, 456, 853, 785, 784, 829,
	745, 845, 778, 296, 743, 293, 188, 205, 0, 776,
	337, 378, 384, 844, 762, 770, 229, 768, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 809, 827,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	1052, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 757, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 840, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 832, 870, 350, 383, 219, 442, 403, 752,
	756, 750, 751, 804, 805, 753, 861, 862, 863, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 836, 746,
	0, 754, 755, 0, 842, 851, 852, 492, 808, 187,
	202, 299, 866, 372, 261, 470, 450, 446, 732, 749,
	236, 760, 0, 0, 773, 781, 782, 794, 796, 797,
	798, 799, 323, 815, 816, 818, 826, 828, 831, 833,
	838, 848, 869, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 807, 813, 310, 254, 273, 284,
	821, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	803, 830, 306, 420, 421, 280, 855, 841, 419, 0,
	789, 858, 759, 777, 868, 780, 783, 823, 738, 802,
	341, 774, 0, 763, 734, 769, 735, 761, 791, 244,
	758, 843, 806, 857, 297, 241, 740, 764, 355, 779,
	193, 825, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 864, 301, 812, 0,
	404, 326, 0, 0, 0, 793, 847, 800, 837, 788,
	824, 748, 811, 859, 775, 820, 860, 287, 226, 192,
	338, 405, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 771, 817, 854, 772, 819, 239, 285,
	246, 238, 423, 865, 846, 0, 0, 209, 856, 795,
	0, 822, 0, 871, 733, 814, 0, 736, 739, 867,
	850, 767, 249, 0, 0, 0, 0, 0, 0, 0,
	792, 801, 834, 786, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 810, 0, 0, 0, 744, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 0, 0, 747, 0, 766, 835, 0, 731,
	268, 741, 327, 231, 0, 839, 849, 787, 456, 853,
	785, 784, 829, 745, 845, 778, 296, 743, 293, 188,
	205, 0, 776, 337, 378, 384, 844, 762, 770, 229,
	768, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 809, 827, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 1052, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 757, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 840, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 832, 870, 350, 383, 219,
	442, 403, 752, 756, 750, 751, 804, 805, 753, 861,
	862, 863, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 836, 746, 0, 754, 755, 0, 842, 851, 852,
	492, 808, 187, 202, 299, 866, 372, 261, 470, 450,
	446, 732, 749, 236, 760, 0, 0, 773, 781, 782,
	794, 796, 797, 798, 799, 323, 815, 816, 818, 826,
	828, 831, 833, 838, 848, 869, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 807, 813, 310,
	254, 273, 284, 821, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 803, 830, 306, 420, 421, 280, 855,
	841, 419, 0, 789, 858, 759, 777, 868, 780, 783,
	823, 738, 802, 341, 774, 0, 763, 734, 769, 735,
	761, 791, 244, 758, 843, 806, 857, 297, 241, 740,
	764, 355, 779, 193, 825, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 864,
	301, 812, 0, 404, 326, 0, 0, 0, 793, 847,
	800, 837, 788, 824, 748, 811, 859, 775, 820, 860,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 771, 817, 854, 772,
	819, 239, 285, 246, 238, 423, 865, 846, 0, 0,
	209, 856, 795, 0, 822, 0, 871, 733, 814, 0,
	736, 739, 867, 850, 767, 249, 0, 0, 0, 0,
	0, 0, 0, 792, 801, 834, 786, 0, 0, 0,
	0, 0, 0, 0, 765, 0, 810, 0, 0, 0,
	744, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 747, 0, 766,
	835, 0, 731, 268, 741, 327, 231, 0, 839, 849,
	787, 456, 853, 785, 784, 829, 745, 845, 778, 296,
	743, 293, 188, 205, 0, 776, 337, 378, 384, 844,
	762, 770, 229, 768, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 809, 827, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 1052, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 757, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 840, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 832, 870,
	350, 383, 219, 442, 403, 752, 756, 750, 751, 804,
	805, 753, 861, 862, 863, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 836, 746, 0, 754, 755, 0,
	842, 851, 852, 492, 808, 187, 202, 299, 866, 372,
	261, 470, 450, 446, 732, 749, 236, 760, 0, 0,
	773, 781, 782, 794, 796, 797, 798, 799, 323, 815,
	816, 818, 826, 828, 831, 833, 838, 848, 869, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	807, 813, 310, 254, 273, 284, 821, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 803, 830, 306, 420,
	421, 280, 855, 841, 419, 0, 789, 858, 759, 777,
	868, 780, 783, 823, 738, 802, 341, 774, 0, 763,
	734, 769, 735, 761, 791, 244, 758, 843, 806, 857,
	297, 241, 740, 764, 355, 779, 193, 825, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 864, 301, 812, 0, 404, 326, 0, 0,
	0, 793, 847, 800, 837, 788, 824, 748, 811, 859,
	775, 820, 860, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 771,
	817, 854, 772, 819, 239, 285, 246, 238, 423, 865,
	846, 0, 0, 872, 856, 795, 0, 822, 0, 871,
	733, 814, 0, 736, 739, 867, 850, 767, 249, 0,
	0, 0, 0, 0, 0, 0, 792, 801, 834, 786,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 810,
	0, 0, 0, 744, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 0, 0, 0,
	747, 0, 766, 835, 0, 731, 268, 741, 327, 231,
	0, 839, 849, 787, 456, 853, 785, 784, 829, 745,
	845, 778, 296, 743, 293, 188, 205, 0, 776, 337,
	378, 384, 844, 762, 770, 229, 768, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 809, 827, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 742,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 757, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 840, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 730, 724, 723, 294,
	303, 832, 870, 350, 383, 219, 442, 403, 752, 756,
	750, 751, 804, 805, 753, 861, 862, 863, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 836, 746, 0,
	754, 755, 0, 842, 851, 852, 492, 808, 187, 202,
	299, 866, 372, 261, 470, 450, 446, 732, 749, 236,
	760, 0, 0, 773, 781, 782, 794, 796, 797, 798,
	799, 323, 815, 816, 818, 826, 828, 831, 833, 838,
	848, 869, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 807, 813, 310, 254, 273, 284, 821,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 803,
	830, 306, 420, 421, 280, 855, 841, 419, 0, 789,
	858, 759, 777, 868, 780, 783, 823, 738, 802, 341,
	774, 0, 763, 734, 769, 735, 761, 791, 244, 758,
	843, 806, 857, 297, 241, 740, 764, 355, 779, 193,
	825, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 864, 301, 812, 0, 404,
	326, 0, 0, 0, 793, 847, 800, 837, 788, 824,
	748, 811, 859, 775, 820, 860, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 771, 817, 854, 772, 819, 239, 285, 246,
	238, 423, 865, 846, 0, 0, 872, 856, 795, 0,
	822, 0, 871, 733, 814, 0, 736, 739, 867, 850,
	767, 249, 0, 0, 0, 0, 0, 0, 0, 792,
	801, 834, 786, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 810, 0, 0, 0, 744, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 0, 747, 0, 766, 835, 0, 731, 268,
	741, 327, 231, 0, 839, 849, 787, 456, 853, 785,
	784, 829, 745, 845, 778, 296, 743, 293, 188, 205,
	0, 776, 337, 378, 384, 844, 762, 770, 229, 768,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	809, 827, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 1230, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 742, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 757, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 840, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 730,
	724, 723, 294, 303, 832, 870, 350, 383, 219, 442,
	403, 752, 756, 750, 751, 804, 805, 753, 861, 862,
	863, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	836, 746, 0, 754, 755, 0, 842, 851, 852, 492,
	808, 187, 202, 299, 866, 372, 261, 470, 450, 446,
	732, 749, 236, 760, 0, 0, 773, 781, 782, 794,
	796, 797, 798, 799, 323, 815, 816, 818, 826, 828,
	831, 833, 838, 848, 869, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 807, 813, 310, 254,
	273, 284, 821, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 803, 830, 306, 420, 421, 280, 855, 841,
	419, 0, 789, 858, 759, 777, 868, 780, 783, 823,
	738, 802, 341, 774, 0, 763, 734, 769, 735, 761,
	791, 244, 758, 843, 806, 857, 297, 241, 740, 764,
	355, 779, 193, 825, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 864, 301,
	812, 0, 404, 326, 0, 0, 0, 793, 847, 800,
	837, 788, 824, 748, 811, 859, 775, 820, 860, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 771, 817, 854, 772, 819,
	239, 285, 246, 238, 423, 865, 846, 0, 0, 872,
	856, 795, 0, 822, 0, 871, 733, 814, 0, 736,
	739, 867, 850, 767, 249, 0, 0, 0, 0, 0,
	0, 0, 792, 801, 834, 786, 0, 0, 0, 0,
	0, 0, 0, 765, 0, 810, 0, 0, 0, 744,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 747, 0, 766, 835,
	0, 731, 268, 741, 327, 231, 0, 839, 849, 787,
	456, 853, 785, 784, 829, 745, 845, 778, 296, 743,
	293, 188, 205, 0, 776, 337, 378, 384, 844, 762,
	770, 229, 768, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 809, 827, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 721,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 742, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 757, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	840, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 730, 724, 723, 294, 303, 832, 870, 350,
	383, 219, 442, 403, 752, 756, 750, 751, 804, 805,
	753, 861, 862, 863, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 836, 746, 0, 754, 755, 0, 842,
	851, 852, 492, 808, 187, 202, 299, 866, 372, 261,
	470, 450, 446, 732, 749, 236, 760, 0, 0, 773,
	781, 782, 794, 796, 797, 798, 799, 323, 815, 816,
	818, 826, 828, 831, 833, 838, 848, 869, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 807,
	813, 310, 254, 273, 284, 821, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 803, 830, 306, 420, 421,
	280, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 1580, 0, 573, 0,
	0, 0, 244, 578, 0, 0, 0, 297, 241, 0,
	1581, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 585,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 87, 0, 0,
	184, 185, 186, 616, 623, 624, 625, 626, 627, 617,
	619, 0, 0, 217, 618, 224, 594, 621, 628, 629,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 556, 570,
	0, 584, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 710, 0, 0, 0, 601, 0, 569, 0,
	0, 577, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 600, 0,
	0, 456, 0, 0, 598, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 607, 599, 589, 591, 608,
	609, 586, 587, 590, 610, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 602, 576, 575, 0, 582, 583,
	0, 592, 593, 595, 574, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 573, 0, 0, 0, 244, 578, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 585, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 580, 581, 0, 0, 0,
	0, 0, 0, 1660, 0, 287, 226, 192, 338, 405,
	259, 0, 87, 0, 0, 184, 185, 186, 616, 623,
	624, 625, 626, 627, 617, 619, 0, 0, 217, 618,
	224, 594, 621, 628, 629, 1661, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 556, 570, 0, 584, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 601, 0, 569, 0, 0, 577, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 600, 0, 0, 456, 0, 0, 598,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	607, 599, 589, 591, 608, 609, 586, 587, 590, 610,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 602,
	576, 575, 0, 582, 583, 0, 592, 593, 595, 574,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 78, 419, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 573,
	0, 0, 0, 244, 578, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	585, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	0, 184, 185, 186, 616, 623, 624, 625, 626, 627,
	617, 619, 0, 0, 217, 618, 224, 594, 621, 628,
	629, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 556,
	570, 0, 584, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 601, 0, 569,
	0, 0, 577, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 600,
	0, 0, 456, 0, 0, 598, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 607, 599, 589, 591,
	608, 609, 586, 587, 590, 610, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 602, 576, 575, 0, 582,
	583, 0, 592, 593, 595, 574, 187, 202, 299, 86,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 573, 0, 0, 0, 244, 578,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 585, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 87, 0, 0, 184, 185, 186, 616,
	623, 624, 625, 626, 627, 617, 619, 0, 0, 217,
	618, 224, 594, 621, 628, 629, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 556, 570, 0, 584, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 0, 0,
	0, 0, 601, 0, 569, 0, 0, 577, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 600, 0, 0, 456, 0, 0,
	598, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	2478, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 607, 599, 589, 591, 608, 609, 586, 587, 590,
	610, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	602, 576, 575, 0, 582, 583, 0, 592, 593, 595,
	574, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 573,
	0, 0, 0, 244, 578, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	585, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	1198, 184, 185, 186, 616, 623, 624, 625, 626, 627,
	617, 619, 0, 0, 217, 618, 224, 594, 621, 628,
	629, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 556,
	570, 0, 584, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 601, 0, 569,
	0, 0, 577, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 600,
	0, 0, 456, 0, 0, 598, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 607, 599, 589, 591,
	608, 609, 586, 587, 590, 610, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 602, 576, 575, 0, 582,
	583, 0, 592, 593, 595, 574, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 573, 0, 0, 0, 244, 578,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 585, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 87, 0, 0, 184, 185, 186, 616,
	623, 624, 625, 626, 627, 617, 619, 0, 0, 217,
	618, 224, 594, 621, 628, 629, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 556, 570, 0, 584, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 710, 0,
	0, 0, 601, 0, 569, 0, 0, 577, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 600, 0, 0, 456, 0, 0,
	598, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 607, 599, 589, 591, 608, 609, 586, 587, 590,
	610, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	602, 576, 575, 0, 582, 583, 0, 592, 593, 595,
	574, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 573,
	0, 0, 0, 244, 578, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	585, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	0, 184, 185, 186, 616, 623, 624, 625, 626, 627,
	617, 619, 0, 0, 217, 618, 224, 594, 621, 628,
	629, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 556,
	570, 0, 584, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 601, 0, 569,
	0, 0, 577, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 600,
	0, 0, 456, 0, 0, 598, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 607, 599, 589, 591,
	608, 609, 586, 587, 590, 610, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 602, 576, 575, 0, 582,
	583, 0, 592, 593, 595, 574, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 573, 0, 0, 0, 244, 578,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 585, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 87, 0, 0, 184, 185, 186, 616,
	623, 624, 625, 626, 627, 617, 619, 0, 0, 217,
	618, 224, 594, 621, 628, 629, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 0, 584, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 0, 0,
	0, 0, 601, 0, 569, 0, 0, 577, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 600, 0, 0, 456, 0, 0,
	598, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 607, 599, 589, 591, 608, 609, 586, 587, 590,
	610, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	602, 576, 575, 0, 582, 583, 0, 592, 593, 595,
	574, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 1866, 0, 0, 1529,
	1530, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 919, 456, 0, 0, 0, 0, 0, 916, 917,
	296, 880, 293, 188, 205, 910, 914, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 1218, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 1529, 1530, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	1084, 0, 1085, 1086, 0, 0, 0, 0, 0, 0,
	0, 249, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 1160, 1163, 0, 0, 0, 0,
	1159, 1162, 0, 0, 217, 1158, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 78, 419, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 87, 0, 1198, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 86, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 78, 419, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 86, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 1602, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 1600, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 880, 293, 188, 205, 878, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 1198, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 2448, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	1602, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1390, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1887, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 1872,
	0, 0, 0, 1873, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 1241, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 2516, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 2448, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 0, 419, 306, 420, 421, 280,
	1649, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 1482, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 1362,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1360, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 1358,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1356, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 1354,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1350, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 1348,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 1346, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 1323, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	1225, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1061, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 692, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 547,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 495, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	2255, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 1868, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	0, 0, 306, 420, 421, 280,
}

var yyPact = [...]int{
	5016, -1000, -388, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1723, 1761, -1000, -1000,
	-1000, -1000, 1827, -1000, 631, 1484, -1000, 1719, 4324, -1000,
	33648, 424, -1000, 33103, 423, 2508, 33648, -1000, 112, -1000,
	100, 33648, 107, 32558, -1000, -1000, -294, 14025, 1635, -12,
	-17, 33648, -1000, -1000, -1000, -1000, 1812, 1499, -1000, 317,
	-1000, -1000, -1000, -1000, -1000, -1000, 32013, -1000, -1000, -1000,
	1735, 1726, 1835, 569, 1654, -1000, 1777, 1499, -1000, 14025,
	1803, 1762, 13480, -1000, 13480, 375, -1000, -1000, 10203, -1000,
	-1000, 18387, 33648, 33648, 262, -1000, 1719, -1000, -1000, 307,
	-1000, 254, 1423, -1000, 1422, -1000, 437, 450, 284, 386,
	384, 282, 281, 275, 272, 271, 270, 269, 268, 292,
	-1000, 628, 628, -185, -194, 2247, 345, 345, 345, 397,
	1677, 1674, -1000, 546, -1000, 628, 628, 297, 628, 628,
	628, 628, 216, 215, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 246,
	1719, 194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 33648, 240, 33648, -1000, 487, 33648, 750,
	750, 41, 750, 750, 750, 750, 124, 583, -19, -1000,
	121, 188, 118, 190, 739, 99, 103, -1000, -1000, 161,
	739, 1106, 610, 89, -1000, 750, 7991, 7991, 7991, -1000,
	1704, -1000, -1000, -1000, -1000, -1000, -1000, 1111, -1000, 395,
	-1000, -1000, -1000, -1000, 33648, 31468, 232, 658, -1000, -1000,
	-1000, 30, -1000, -1000, 1175, 689, 14025, 874, -1000, 990,
	539, -1000, -1000, -1000, -1000, -1000, 453, 14570, 14570, 14570,
	14570, -1000, -1000, 1433, 1433, 1433, 1433, 14570, 1433, 14570,
	1433, 1433, 1433, 1433, 14025, 1433, 1433, 1433, -1000, 1433,
	1433, 1433, 1433, 1433, 1433, 1433, 1433, 486, 1433, 1433,
	1433, 1433, 1433, -1000, -1000, -1000, -1000, 1433, 1433, 1433,
	1433, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16205, -1000, 11845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 33648, -1000, 1433, 122, 33648, 33648, 276, 1777,
	1499, -1000, 1812, 1786, 317, -1000, 1690, 1360, 1313, 1115,
	1499, 1397, 33648, -1000, 1441, -1000, -1000, -1000, 1589, 1079,
	1104, -1000, -1000, -1000, -1000, 999, 14025, -1000, -1000, 1824,
	-1000, 15660, 483, 819, 1823, 30923, -1000, 375, 375, 1420,
	9650, -38, -1000, -1000, -1000, 653, 21112, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1704, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1395, 33648, -1000, -1000, 3482, 1203, -1000,
	1482, -1000, 1341, -1000, 1462, 1498, 415, 1203, 410, 409,
	387, -1000, -108, -1000, -1000, -1000, -1000, -1000, 628, 628,
	-1000, 291, 1796, 4324, 4930, -1000, -1000, -1000, 30378, 1481,
	1203, -1000, 1480, -1000, 764, 454, 533, 533, 1203, -1000,
	-1000, 33648, 1203, 752, 748, 33648, 33648, -1000, 29833, -1000,
	29288, 28743, 996, 33648, 28198, 27653, 27108, 26563, 26018, -1000,
	1545, -1000, 1479, -1000, -1000, -1000, 33648, 33648, 33648, 279,
	-1000, -1000, 33648, 1203, -1000, -1000, 994, 985, 628, 628,
	984, 1103, 1099, 1098, 628, 628, 974, 1095, 23292, 226,
	962, 954, 953, 987, 1092, 183, 952, 923, 937, 33648,
	1478, 33648, -1000, 151, 576, 312, 648, 1719, 1634, 1418,
	381, 414, 1203, 356, 356, 33648, -1000, 8544, -1000, -1000,
	1088, 14025, -1000, 743, 739, 739, -1000, -1000, -1000, -1000,
	-1000, -1000, 750, 33648, 743, -1000, -1000, -1000, 739, 750,
	33648, 750, 750, 750, 750, 739, 739, 739, 750, 33648,
	33648, 33648, 33648, 33648, 33648, 33648, 33648, 33648, 7991, 7991,
	7991, 610, 750, -302, -1000, 1086, -1000, 1533, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -106, 1417, 25473,
	-1000, -305, -310, -312, -319, -1000, -1000, -1000, -321, -330,
	-1000, -1000, -1000, 14025, 14025, 14025, 14025, -1000, 852, 14570,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 900, 717, 14570,
	14570, 14570, 14570, 14570, 14570, 14570, 14570, 14570, 14570, 14570,
	14570, 14570, 14570, 14570, 790, 15634, 15634, 539, 539, 539,
	539, -1000, 13480, 14025, 14025, 539, -1000, 1203, 24928, 13480,
	13480, 14025, 1686, 668, 689, 33648, -1000, 1115, -1000, -1000,
	-1000, 964, -1000, 33648, 33648, 35, 14025, 10754, 8544, 13480,
	13480, 13480, 13480, 13480, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 476, 1258, 1236, 1339, -1000,
	1401, -1000, -171, 17842, 14025, 1082, 1822, 1509, 33648, -1000,
	-1000, -1000, 1777, -1000, 1777, 1258, 1638, 1594, 13480, -1000,
	-1000, 1638, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1177, -1000, 33648, 1397, 1759, 33648, 1587, 1081, 278, -1000,
	14025, 14025, 1393, -1000, 969, 33648, -1000, -1000, 24383, -1000,
	-1000, 7438, -1000, 33648, 256, 33648, -1000, 22747, 23838, 9097,
	-38, -1000, 9097, 1346, -1000, -65, -45, 11299, 553, -1000,
	-1000, -1000, 2247, 15115, 1154, 553, 24, -1000, -1000, -1000,
	1462, -1000, 1462, 1462, 1462, 1462, 278, 278, 278, 278,
	-1000, -1000, -1000, -1000, -1000, 1473, 1469, -1000, 1462, 1462,
	1462, 1462, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1468,
	1468, 1468, 1463, 1463, 338, -1000, 14025, 221, 33648, 1733,
	936, 151, 368, 1508, 1203, 1203, 1203, 368, -1000, 1239,
	1210, -1000, -376, 1378, -1000, -1000, 1795, -1000, -1000, 671,
	797, 789, 484, 33648, 134, 249, -1000, 331, -1000, 33648,
	1203, 746, 533, 1203, -1000, 1203, -1000, -1000, -1000, -1000,
	-1000, 1203, 1370, -1000, 1337, 834, 781, 805, 757, 1370,
	-1000, -1000, -137, 1370, -1000, 1370, -1000, 1370, -1000, 1370,
	-1000, 1370, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	632, 33648, 134, 790, -1000, 380, -1000, -1000, 790, 790,
	-1000, -1000, -1000, -1000, 1078, 1076, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -365, 33648, -1000, 146, 633, 233, 274,
	197, 33648, 139, 1765, 211, 212, 33648, 33648, 356, 1532,
	33648, 1741, 33648, -1000, -1000, -1000, -1000, -1000, 689, 33648,
	-1000, -1000, 750, 750, -1000, -1000, 33648, 750, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 750, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 33648, 33648, -1000, -1000, -1000, -1000,
	-1000, 63, -41, 258, -1000, -1000, -1000, -1000, -1000, 1772,
	-1000, 689, 731, 696, -1000, -1000, -1000, 869, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 900, 14570, 14570, 14570, 1390,
	385, 1207, 1489, 1535, 814, 814, 652, 652, 549, 549,
	549, 549, 549, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1022, -1000, -1000, 1325, -1000, 1172, 821, 1115, -1000,
	1325, 1325, 903, 13480, -1000, -1000, 678, -1000, 14025, 1115,
	-1000, -1000, 1115, 1115, 1368, 1366, 1821, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1061, 1115,
	13480, 13480, 1355, 1433, 474, -1000, 1325, 1115, 1115, 1325,
	1325, 8544, 1115, -1000, 33648, -1000, -293, -1000, -69, 500,
	1433, -1000, 23292, 1115, 1175, -1000, 15089, -1000, 34738, -1000,
	-1000, -1000, -1000, -1000, 20567, 1470, 1638, -1000, -1000, 1433,
	1335, -1000, -1000, 278, 5, 20022, -1000, -1000, 689, 689,
	14025, -1000, -1000, -1000, -1000, -1000, -1000, 469, 1813, 273,
	1433, -1000, 1375, 1625, -1000, -1000, -1000, 1757, 17297, 33648,
	1439, 1437, -1000, 465, -1000, 1346, -38, -70, -1000, -1000,
	-1000, -1000, 689, -1000, 1195, 265, 200, -1000, 340, -1000,
	-1000, -1000, -1000, 1666, 11, -1000, -1000, -1000, 278, 278,
	-1000, -1000, -1000, -1000, -1000, -1000, 1019, 1019, -1000, -1000,
	-1000, -1000, -1000, 935, -1000, -1000, -1000, 932, -1000, -1000,
	1146, 1542, 221, -1000, -1000, 628, 1012, 1669, 33648, -1000,
	-1000, 1142, 146, 33648, 693, 1531, -1000, 1508, 1508, 1508,
	33648, -1000, -1000, -1000, -1000, -367, 51, 267, -1000, -1000,
	-1000, 4867, 33648, 1333, -1000, 127, -1000, 1140, 1606, 33648,
	-1000, 1329, 1467, 1203, 1203, -1000, -1000, -1000, 33648, 1433,
	-1000, -1000, -1000, -1000, 412, 1718, 1713, 134, 127, 553,
	1203, -1000, -1000, -1000, -1000, -1000, -368, 1327, 406, 136,
	219, 33648, 33648, 33648, 33648, 33648, 441, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 210, 379, -1000, 33648, 33648,
	456, -1000, -1000, -1000, 739, -1000, -1000, 739, -1000, -1000,
	-1000, -1000, -1000, 1701, 33648, -52, -342, -1000, -339, -1000,
	-1000, -1000, -1000, 1343, 362, 1207, 14570, 14570, -1000, 13480,
	-124, 560, 560, 790, -1000, -1000, -1000, 14025, 14025, 1381,
	662, -1000, 14025, 784, -1000, -1000, -1000, 14025, 14025, 14025,
	1115, 252, -1000, 1325, 1325, 13480, 8544, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 500, -1000, 533,
	533, 533, 33648, -1000, -1000, -1000, -1000, -1000, -1000, 1308,
	1773, -1000, 1603, 1601, 1815, 1813, -1000, 22747, 1638, -1000,
	-1000, 33648, -287, -1000, 1631, 1685, -1000, -1000, -1000, -1000,
	6885, 1777, 14025, 1530, 33648, 1433, -1000, 16751, 33648, 33648,
	22747, 22747, 22747, 22747, 22747, -1000, 1561, 1552, -1000, 1550,
	1544, 1579, 33648, -1000, 1323, 1115, 1786, 17297, 19477, 1311,
	22747, -1000, -1000, 22747, 33648, 6332, -1000, -1000, -56, -66,
	-1000, -1000, -1000, -1000, 2247, -1000, -1000, 374, 1747, 1658,
	-1000, -1000, -1000, -1000, 1319, -1000, 1317, 1277, 1315, 104,
	-1000, 1497, 1698, 628, 628, -1000, 930, -1000, 1203, -1000,
	-1000, 400, -1000, 1739, 33648, 1525, 1524, 1515, -1000, -383,
	928, 1466, 1490, 14025, 1465, 1794, 1255, 33648, -1000, -1000,
	33648, -1000, -1000, 351, -1000, 221, 33648, -1000, -1000, -1000,
	249, 33648, -1000, 5492, 127, -1000, -1000, -1000, -1000, -1000,
	-1000, 33648, 198, -1000, 1464, 1093, -1000, -1000, 1487, -1000,
	-1000, -1000, -1000, 130, 230, -1000, 33648, 455, 1542, 33648,
	-1000, -1000, -1000, 750, 750, -1000, -1000, 1689, -1000, 1203,
	14570, 14570, -1000, 539, -1000, 1433, 1115, 1462, 1462, -1000,
	1462, 1463, -1000, 1462, 81, 1462, 60, 1462, -1000, -1000,
	1115, 1115, 958, 866, -118, -1000, 689, 14025, 1138, 1127,
	1090, -1000, 1461, 1447, -1000, -1000, 1115, -1000, -1000, 1767,
	1767, 1767, 1304, 34193, 33648, -1000, -1000, -1000, -1000, 1813,
	1808, 1257, -1000, -1000, 5, 303, -1000, 1619, 1685, -1000,
	1793, 1626, 1792, -1000, -1000, -1000, 689, -1000, 1728, 1248,
	-1000, 626, 1159, -1000, -1000, 12935, 1306, 1597, 457, 1304,
	1362, 1625, 1506, 1514, 1526, -1000, -1000, -1000, -1000, 1548,
	-1000, 1456, -1000, -1000, 1441, -1000, -1000, 1236, 256, 22747,
	1300, 1300, -1000, 452, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 818, 5338, 1834, -1000, 1011, -1000, 1020, -1000, 728,
	710, -1000, 33648, 1446, -1000, 278, 1010, 278, 878, -1000,
	876, -1000, -1000, -235, -1000, -1000, 1419, 1541, -1000, -1000,
	33648, -1000, -1000, 33648, 33648, 33648, 1445, 1791, -1000, 14025,
	1444, 624, 1132, 33648, 33648, -1000, -1000, 229, 1433, -1000,
	1297, 1286, -1000, -191, -1000, 14025, -1000, -1000, -1000, 910,
	910, -1000, 1441, -1000, -1000, -1000, 1136, -1000, -1000, -142,
	33648, 33648, 33648, 33648, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 539, 14570, -1000, -1000, 278, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14025, -1000, 14025,
	-1000, 1777, 1005, 689, 14025, 14025, -1000, 858, 856, -1000,
	1433, 1641, 1433, 1433, 19477, -1000, -1000, 1808, 1806, 1790,
	1618, 1621, 1621, 1619, -1000, 1784, 1783, -1000, 1003, 1782,
	1000, 706, -1000, 33648, 14025, 1433, -1000, 294, 33648, 1433,
	33648, -1000, 1787, -1000, -1000, 14025, 1443, -1000, 14025, -1000,
	-1000, -1000, -1000, -1000, 1813, 1300, -1000, -1000, 565, -1000,
	14025, -1000, -1000, -1000, 125, -1000, -1000, -1000, -1000, -1000,
	1442, 14025, -1000, -1000, -1000, 1133, 1129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1441, -1000, -1000, -1000, -1000,
	249, -373, 1112, 33648, 841, -1000, 1284, 1255, 420, -1000,
	14025, 314, -1000, 249, -1000, -197, -198, 1090, -1000, -1000,
	1746, -1000, -1000, 8544, -1000, -1000, 1436, 1503, -1000, 223,
	-1000, 1090, 1090, 1115, -1000, 1090, 1090, 1124, 1117, 18932,
	-1000, 1780, 1779, 22202, 22202, 500, 1806, -1000, 14025, 14025,
	1614, 884, -1000, -1000, -1000, -1000, 992, 971, -1000, 960,
	-1000, 1831, -1000, 689, -1000, 1433, -1000, 448, 1159, -1000,
	1777, 689, 33648, 689, 1787, -1000, 1090, -1000, 1433, 33648,
	1085, -1000, -1000, 1744, 1282, 48, -1000, 1253, -1000, -1000,
	-1000, -1000, 12390, -1000, -1000, -1000, -1000, -1000, -1000, 317,
	1202, -1000, 621, 33648, 33648, 1115, 218, -145, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1234, -1000, -1000, -1000, -1000,
	-1000, 1234, 1234, -1000, -1000, 689, 1175, -1000, 836, -1000,
	-1000, -1000, -1000, -1000, 33648, 1159, 33648, -1000, 1231, 1777,
	-1000, 1224, -1000, 317, -1000, 1427, 1490, -1000, 1115, -138,
	8544, 5779, 1186, -1000, -1000, 1584, -135, -176, 21657, -1000,
	-1000, -1000, -1000, -1000, 1139, -1000, -1000, -1000, 1512, 670,
	-138, 14025, 1426, -1000, -1000, -47, -1000, -1000, -1000, -1000,
	-1000, 1487, -1000, 1570, -1000, -1000, -1000, 1511, -1000, 1819,
	-1000, -1000, -1000, 809, 838, -1000, -1000, -1000, -1000, 855,
	33648, 333, -1000, -1000, -142, -143, -1000, 1829, 563, 563,
	-1000, -1000, -385, 1161, 148, -1000, -150, -1000, -1000, -1000,
	330, 896, -1000, -1000, 830, -385, -1000, -182, -1000, -1000,
	-1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2129, 2128, 8, 1, 2127, 13, 76, 154, 27,
	175, 85, 2126, 2123, 2122, 2121, 2120, 2119, 2118, 201,
	196, 195, 2116, 2115, 2113, 2112, 2111, 2110, 2109, 2108,
	2107, 2106, 193, 144, 162, 2105, 2103, 2102, 100, 160,
	68, 67, 158, 2101, 2100, 59, 2096, 2094, 2093, 174,
	173, 692, 2092, 159, 97, 23, 2091, 2089, 2087, 2086,
	2084, 2083, 2082, 2081, 2080, 2077, 2076, 2073, 2072, 2071,
	285, 2070, 2069, 6, 2068, 61, 2067, 2066, 2065, 115,
	2064, 2063, 2062, 2059, 2058, 2057, 129, 2056, 2054, 2053,
	2050, 168, 2049, 2045, 134, 90, 95, 2041, 2040, 81,
	161, 2039, 105, 2037, 2036, 2031, 135, 2029, 2440, 2028,
	47, 40, 2027, 46, 63, 39, 38, 2026, 121, 2025,
	2024, 43, 73, 2023, 82, 49, 2022, 80, 77, 2016,
	52, 2015, 2013, 88, 2012, 2010, 2008, 78, 2007, 2006,
	3574, 2005, 75, 118, 84, 53, 2001, 22, 34, 1998,
	1996, 1995, 1993, 1991, 30, 1988, 1986, 1985, 125, 11,
	1977, 15, 26, 32, 117, 1975, 37, 60, 1972, 123,
	1971, 1969, 36, 17, 20, 1968, 24, 110, 138, 16,
	86, 119, 1967, 1966, 33, 48, 1964, 1963, 1962, 1958,
	1956, 1955, 58, 1954, 29, 1953, 155, 1952, 45, 1951,
	31, 21, 1950, 41, 136, 50, 12, 1949, 163, 1948,
	35, 147, 107, 142, 1947, 1946, 1941, 153, 255, 1940,
	1939, 74, 145, 128, 133, 1938, 277, 1935, 1934, 71,
	1515, 1976, 18, 143, 1933, 1930, 2989, 126, 116, 42,
	1929, 99, 1923, 1920, 1916, 180, 151, 104, 946, 94,
	1914, 1907, 1906, 1900, 1896, 1895, 1893, 1892, 202, 167,
	44, 89, 152, 55, 1889, 1887, 1886, 106, 70, 1885,
	141, 139, 102, 83, 1884, 150, 130, 98, 1883, 92,
	1876, 1875, 1874, 1873, 69, 1872, 1871, 1870, 1869, 137,
	131, 103, 65, 1868, 66, 96, 132, 140, 28, 1867,
	19, 1866, 1864, 149, 7, 1862, 3, 0, 1861, 4,
	148, 225, 146, 1860, 1858, 2, 1857, 5, 1856, 1853,
	122, 1852, 1851, 1848, 10, 25, 9, 120, 1846, 1831,
	239, 2564, 108, 1825, 164,
}

//line sql.y:6238
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 328, 329, 329, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 307, 307,
	307, 310, 310, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 77, 77, 20, 21, 21, 21, 21,
	332, 332, 135, 135, 133, 133, 134, 134, 203, 203,
	22, 23, 23, 213, 213, 212, 212, 212, 214, 214,
	214, 214, 248, 248, 24, 24, 24, 24, 24, 92,
	92, 309, 309, 308, 306, 306, 305, 305, 304, 36,
	37, 46, 46, 46, 46, 47, 48, 311, 311, 280,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 282, 282, 269, 269, 281, 281, 281, 281,
	281, 281, 281, 268, 268, 103, 103, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 323, 323,
	183, 183, 183, 183, 183, 183, 112, 112, 121, 121,
	121, 121, 110, 110, 111, 109, 109, 109, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 120, 120, 116, 116, 116, 117, 117, 117, 118,
	118, 118, 118, 324, 324, 324, 324, 251, 251, 251,
	251, 254, 254, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 253, 253, 253, 253, 253, 255, 255, 255,
	255, 255, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 257, 257, 257,
	257, 257, 257, 257, 257, 267, 267, 258, 258, 262,
	262, 263, 263, 263, 264, 264, 264, 265, 265, 260,
	260, 260, 260, 260, 260, 261, 261, 261, 270, 294,
	294, 293, 293, 291, 291, 291, 291, 279, 279, 288,
	288, 288, 288, 288, 278, 278, 274, 274, 274, 275,
	275, 276, 276, 273, 273, 277, 277, 290, 290, 289,
	271, 271, 272, 272, 296, 325, 325, 325, 325, 326,
	326, 297, 316, 317, 315, 315, 315, 315, 315, 75,
	75, 75, 225, 225, 225, 286, 286, 285, 285, 285,
	287, 287, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	220, 220, 220, 314, 314, 314, 314, 314, 314, 313,
	313, 313, 283, 283, 283, 312, 312, 54, 54, 167,
	167, 43, 43, 43, 43, 43, 43, 42, 42, 42,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 44, 44, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 79, 79, 80, 80, 80, 80,
	81, 81, 81, 299, 299, 55, 55, 3, 3, 1,
	1, 2, 2, 4, 4, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 266, 266, 266,
	298, 298, 300, 302, 302, 302, 302, 301, 88, 88,
	26, 35, 35, 27, 27, 27, 27, 28, 28, 56,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 318, 318,
	219, 219, 227, 227, 218, 218, 241, 241, 241, 221,
	221, 221, 222, 222, 322, 322, 322, 58, 58, 58,
	60, 60, 61, 62, 62, 243, 243, 244, 244, 63,
	64, 76, 76, 76, 76, 76, 76, 78, 78, 78,
	13, 13, 13, 13, 72, 72, 72, 12, 12, 59,
	59, 66, 319, 319, 320, 321, 321, 321, 321, 67,
	69, 29, 29, 29, 29, 29, 29, 98, 98, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 93, 93, 93, 87, 87, 333, 70, 71, 71,
	91, 91, 91, 84, 84, 84, 90, 90, 90, 14,
	14, 15, 202, 202, 16, 16, 95, 95, 97, 97,
	97, 97, 97, 99, 99, 99, 99, 99, 99, 99,
	94, 94, 96, 96, 96, 96, 234, 234, 234, 233,
	233, 124, 124, 126, 125, 125, 127, 127, 128, 128,
	128, 165, 143, 143, 200, 200, 198, 198, 199, 199,
	201, 201, 201, 201, 204, 204, 129, 129, 129, 129,
	130, 130, 131, 131, 132, 132, 242, 242, 239, 239,
	239, 238, 238, 136, 136, 136, 138, 137, 137, 137,
	137, 139, 139, 141, 141, 140, 140, 142, 147, 147,
	146, 146, 144, 144, 144, 144, 145, 145, 145, 145,
	148, 148, 108, 108, 108, 108, 108, 108, 119, 119,
	119, 119, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 216,
	216, 149, 149, 157, 157, 157, 157, 150, 150, 150,
	150, 150, 150, 150, 158, 158, 158, 164, 159, 159,
	155, 155, 155, 155, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 334, 334, 259, 259, 259, 259,
	156, 156, 156, 156, 156, 89, 89, 89, 89, 89,
	247, 247, 247, 250, 250, 250, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 170, 170, 85, 85, 168, 168, 169, 171, 171,
	166, 166, 166, 152, 152, 152, 172, 172, 173, 173,
	174, 174, 176, 175, 175, 177, 178, 178, 178, 179,
	179, 180, 180, 180, 45, 45, 45, 45, 45, 40,
	40, 40, 40, 41, 41, 41, 100, 100, 100, 100,
	102, 102, 101, 101, 73, 73, 74, 74, 74, 106,
	106, 107, 107, 107, 104, 104, 105, 105, 196, 196,
	181, 181, 181, 188, 188, 188, 184, 184, 186, 186,
	186, 187, 187, 187, 185, 193, 193, 195, 195, 194,
	194, 190, 190, 191, 191, 192, 192, 192, 189, 189,
	151, 151, 151, 151, 151, 197, 197, 197, 197, 205,
	205, 161, 161, 163, 163, 162, 123, 206, 206, 210,
	207, 207, 211, 211, 211, 211, 211, 208, 208, 209,
	209, 235, 235, 235, 215, 215, 226, 226, 223, 223,
	224, 224, 217, 217, 228, 228, 228, 68, 160, 160,
	295, 295, 292, 231, 231, 232, 232, 236, 236, 240,
	240, 237, 237, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	330, 331, 245, 246, 246, 246,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 7, 5, 6, 6, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 8, 6,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 4, 4, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 2, 4, 5, 4, 4, 4, 4, 4, 3,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	9, 6, 6, 6, 2, 2, 3, 3, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -328, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -77, -31, 30, -36, -46, 203, -47, -37, 204,
	-48, 206, 205, 242, 207, 235, 72, 284, 285, 287,
	288, 289, 290, -78, 240, 241, 209, 34, 43, 31,
	32, 35, 213, 248, 249, 212, -8, -32, 6, -330,
	9, 410, 237, 236, 26, -10, 424, 83, -329, 558,
	-196, -181, 20, 31, 27, -180, -176, -91, -181, 18,
	16, 5, -70, -333, -70, -70, 10, 11, -70, -280,
	-282, 83, 140, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -303, -42, -39, 208, 205, 252, 107,
	108, 242, 243, 244, 207, 226, 241, 245, 240, 261,
	-38, 78, 31, 424, 427, -287, 204, 210, 211, 411,
	110, 109, 73, 206, -284, 336, 528, -53, 530, 99,
	101, 529, 42, 216, 531, 532, 533, 534, 225, 535,
	536, 537, 538, 544, 545, 546, 547, 111, 5, -70,
	-240, -236, -307, -230, 86, 87, 88, 421, 228, 455,
	456, 277, 78, 39, 333, 336, 528, 284, 298, 292,
	319, 311, 422, 457, 280, 229, 265, 525, 309, 116,
	530, 283, 458, 243, 341, 342, 343, 99, 287, 378,
	543, 282, 459, 541, 101, 529, 77, 49, 42, 238,
	307, 212, 303, 531, 266, 460, 432, 259, 110, 107,
	550, 34, 301, 48, 28, 540, 109, 47, 532, 131,
	461, 533, 345, 324, 519, 46, 346, 244, 462, 81,
	249, 426, 527, 347, 302, 348, 276, 539, 209, 463,
	511, 349, 350, 520, 464, 325, 329, 465, 370, 351,
	557, 50, 466, 467, 521, 108, 468, 76, 534, 296,
	297, 469, 274, 227, 372, 323, 225, 33, 352, 423,
	278, 56, 253, 373, 44, 327, 554, 43, 515, 470,
	518, 322, 318, 51, 471, 472, 473, 474, 535, 321,
	295, 317, 549, 444, 271, 536, 60, 211, 331, 330,
	332, 260, 369, 314, 475, 476, 477, 232, 79, 478,
	304, 19, 479, 480, 353, 267, 481, 54, 482, 483,
	376, 241, 484, 52, 537, 37, 246, 551, 538, 485,
	486, 487, 488, 248, 489, 355, 490, 354, 326, 328,
	255, 356, 425, 491, 300, 245, 542, 492, 233, 526,
	247, 252, 240, 377, 234, 493, 494, 495, 496, 497,
	281, 498, 499, 288, 544, 41, 500, 501, 502, 503,
	275, 270, 371, 380, 59, 80, 338, 504, 524, 294,
	268, 505, 285, 53, 545, 546, 547, 262, 548, 7,
	555, 556, 358, 111, 272, 273, 45, 315, 254, 506,
	507, 305, 306, 320, 293, 316, 286, 512, 256, 359,
	242, 508, 379, 269, 334, 339, 429, 261, 360, 523,
	428, 313, 310, 263, 509, 361, 217, 257, 258, 510,
	513, 362, 363, 279, 364, 365, 366, 367, 368, 264,
	427, 291, 308, 340, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 419, 215, -70, 215, -140, -236, 215, -208,
	342, -227, 344, 357, 352, 362, 350, -219, 353, 355,
	255, -322, 370, 215, 359, 203, 157, 345, 354, 363,
	364, 279, 365, 368, 264, -318, -307, 533, 548, 116,
	312, 349, 347, 371, 515, 367, 366, -236, 286, -243,
	291, -231, -307, -230, 289, -140, -76, 511, 207, -245,
	-245, -93, 515, 517, -159, -108, 124, -119, -122, -113,
	-114, -153, -154, -155, -156, -120, -166, 146, 147, 154,
	125, -164, -123, 24, 420, 412, 411, 157, 29, 199,
	66, 67, 414, 415, 127, 55, 387, 388, -121, 383,
	389, 384, 417, 418, 102, 419, -231, -236, 220, 382,
	214, 152, 410, -115, -111, -6, -162, 381, 385, 386,
	390, -307, -230, -117, -116, -149, 89, 95, 100, 96,
	-327, 103, -330, 90, 91, 92, 93, 94, 104, 105,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 42, 358, 358, -140, -70, -70, -70, -70, -174,
	-91, -176, -8, -6, -330, 6, -70, -6, -7, -11,
	-32, -34, 451, -33, -236, -181, -196, 10, 142, 40,
	48, -179, -180, -10, -6, -108, 17, 21, 22, -96,
	148, -108, -236, -71, -96, -217, 219, -70, -70, -207,
	-248, 286, -211, 371, 370, -232, -209, -231, -229, -208,
	369, 208, 430, 123, 23, 25, 126, 157, 17, 127,
	35, 210, 312, 226, 156, 222, 411, 203, 70, 431,
	383, 384, 381, 387, 413, 414, 382, 344, 29, 11,
	433, 26, 236, 22, 36, 150, 205, 130, 239, 24,
	237, 102, 105, 436, 20, 73, 231, 12, 224, 38,
	14, 437, 438, 15, 220, 219, 142, 216, 68, 9,
	199, 27, 139, 64, 439, 118, 440, 441, 442, 443,
	66, 140, 18, 552, 385, 386, 31, 516, 420, 250,
	152, 71, 57, 517, 124, 445, 446, 103, 447, 106,
	74, 522, 120, 16, 69, 40, 448, 251, 449, 221,
	553, 450, 374, 451, 141, 206, 410, 67, 452, 214,
	357, 6, 416, 30, 235, 223, 113, 65, 453, 215,
	129, 417, 418, 218, 104, 5, 117, 32, 10, 72,
	75, 388, 389, 390, 55, 112, 424, 128, 13, 454,
	375, 122, 116, -281, 140, -268, -272, -231, 230, -297,
	226, -140, -290, -289, -231, -92, -226, 216, 224, 223,
	117, -311, 120, 272, 382, 214, -49, -50, -208, 156,
	-79, 247, 251, 84, 84, -272, -271, -270, -312, 251,
	230, -296, -288, 222, 231, -278, 223, 224, -273, 216,
	118, -312, -273, 221, 231, 251, 251, 111, 251, 111,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 246,
	-279, 132, -279, 428, 428, -284, -312, -312, -312, 218,
	33, 33, -228, -273, 218, 23, -279, -279, -208, 156,
	-279, -279, -279, -279, 259, 259, -279, -279, -279, -279,
	-279, -279, -279, -279, -279, -279, -279, -279, -279, -279,
	-279, 215, -311, -100, 368, 279, 78, -51, 261, -35,
	-140, -226, 216, 217, -311, 248, -140, 200, -140, -221,
	140, 13, -221, -218, 358, 356, 343, 348, -221, -221,
	-221, -221, 262, 341, -274, 216, 33, 227, 358, 262,
	341, 262, 263, 262, 263, 351, 361, 262, -241, 12,
	142, 382, 346, 350, 255, 215, 256, 217, 360, -307,
	518, 263, -241, 90, -222, 140, 358, 258, -221, -246,
	-330, -232, 312, -246, -246, 30, 87, 218, -231, -72,
	-231, 90, -13, -9, -20, -19, -21, 132, -98, 358,
	-86, 157, 533, 519, 520, 521, 518, 355, 526, 524,
	522, 262, 523, 84, 120, 122, 123, -108, 139, -150,
	132, 133, 134, 135, 136, 137, 138, 142, 124, 126,
	140, 141, 121, 143, 144, 145, 146, 147, 148, 149,
	151, 150, 152, 153, 156, 201, 202, -114, -114, -114,
	-114, -164, -330, -330, -330, -114, -216, -330, -114, -330,
	-330, -330, -330, -170, -108, -330, -334, -330, -334, -334,
	-259, -330, -259, -330, -330, -330, -330, -330, 200, -330,
	-330, -330, -330, -330, -259, -259, -259, -259, 100, 95,
	89, -166, 96, 90, -231, -236, -6, -7, -159, -245,
	-319, -320, -143, -140, -330, 279, -231, -231, 248, -179,
	-10, -6, -174, -180, -176, -6, -70, -84, -97, 61,
	62, -99, 22, 36, 65, 63, 21, -331, 85, -331,
	-196, -331, 84, -34, -200, 83, 59, 41, 90, 90,
	84, 19, -175, -177, -108, 12, -234, -233, 23, -231,
	90, 200, 98, 12, -141, 27, -140, -217, -217, 84,
	286, -211, -248, -213, -212, 372, 374, 132, -235, -231,
	90, 29, 85, 84, -140, -251, -254, -256, -255, -257,
	-252, -253, 309, 310, 157, 313, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 30, 238, 305, 306,
	307, 308, 325, 326, 327, 328, 329, 330, 331, 332,
	292, 311, 422, 293, 294, 295, 296, 297, 298, 300,
	301, 302, 303, 304, -310, -307, 83, 85, 84, -258,
	83, -100, 215, -307, 216, 216, 216, -70, 410, -279,
	-279, 246, 17, -42, -39, -303, 16, -38, -39, 208,
	107, 108, 205, 83, -268, 83, -277, -310, -307, 83,
	118, 221, 117, -276, -273, -276, -277, -307, -166, -307,
	118, 118, -204, -231, -204, -204, 21, -204, 21, -204,
	21, 92, -231, -204, 21, -204, 21, -204, 21, -204,
	21, -204, 21, 29, 76, 77, 29, 79, 80, 81,
	-166, -166, -268, -208, -140, -307, 92, 92, -279, -279,
	92, 90, 90, 90, -279, -279, 92, 90, -238, -236,
	90, -313, 232, 276, 278, 92, 92, 92, 92, 29,
	90, -314, 29, 540, 539, 541, 542, 543, 92, 29,
	92, 29, 92, -231, 83, -140, -106, 266, 203, 205,
	208, 74, 90, 280, 132, 42, 84, 218, 215, -307,
	-223, 220, -223, -231, -237, -236, -229, 90, -108, -275,
	12, 142, -241, -241, -221, -140, -275, -241, -221, -140,
	-221, -221, -221, -221, -241, -241, -241, -221, -236, -236,
	-140, -140, -140, -140, -140, -140, -140, -246, -246, -246,
	-222, -221, 518, 90, 74, -244, 289, 323, 512, 513,
	514, 84, 424, -133, -140, 518, 518, 518, 518, 518,
	518, -108, -108, -108, -108, -157, 103, 124, 104, 105,
	-122, -158, -162, -164, 97, 142, 126, 140, 141, -113,
	-114, -113, -113, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -247, -307, 90, 157, -118, 90,
	91, -327, 96, -118, -94, -96, -108, -108, -307, -231,
	-94, -94, -108, -90, 22, 36, -168, -169, 128, -166,
	-331, -331, 92, 96, -231, -231, -83, -82, 392, 393,
	394, 395, 397, 398, 399, 402, 403, 407, 408, 391,
	409, 396, 401, 404, 405, 406, 400, 308, -108, -95,
	22, 36, -94, -232, -237, -229, -94, -95, -95, -94,
	-94, 200, -196, -331, 84, -321, 374, 375, 516, -239,
	251, -238, 23, -160, -159, 90, 12, -202, 75, -231,
	-179, -179, 61, 62, 57, -94, -99, -331, -33, 23,
	-198, -231, 60, 90, -260, -208, 333, 334, -108, -108,
	84, -178, 25, 26, -140, -233, 148, -237, -140, -203,
	251, -140, -125, -127, -128, -129, -143, -165, -330, 12,
	-133, -134, -142, -236, -211, -213, 84, 373, 375, 376,
	74, 106, -108, -261, 156, -286, -285, -284, -268, -270,
	-271, -272, 85, -261, -264, 339, 338, -258, -258, -258,
	-258, -258, -260, -260, -260, -260, 83, 83, -258, -258,
	-258, -258, -262, 83, -262, -262, -263, 83, -263, -297,
	-108, -294, -293, -291, -292, 225, 99, 424, 75, -289,
	-178, 92, -106, -224, 220, -295, -292, -307, -307, -307,
	-224, -307, 90, -307, 90, -80, -55, -1, 552, 553,
	554, 84, 17, -269, -268, -54, 276, -300, -301, 251,
	-296, -290, -277, 118, -276, -277, -277, -307, 84, 27,
	111, 111, 111, 111, 424, 205, 30, -268, -54, -247,
	218, -247, -247, 90, 90, -220, 548, -133, -102, 268,
	132, 257, 257, 215, 215, 270, -140, 281, 283, 282,
	280, 21, 269, 271, 273, 259, -140, -140, -223, 74,
	-135, -140, 24, -236, -140, -221, -221, -140, -221, -221,
	-140, -231, -86, 374, 84, 424, 20, -87, 20, 103,
	104, 105, -158, -113, -114, -113, 123, 239, 90, 84,
	-331, 23, 84, 75, -331, -331, -331, 84, 12, -94,
	-171, -169, 130, -108, -331, -331, -331, 84, 84, 12,
	-250, 23, -331, -94, -94, -330, 200, -331, -331, -331,
	-331, -331, -232, -320, 515, 375, -147, -146, -144, 72,
	219, 73, -330, -238, -331, -118, 87, -199, 87, -198,
	-152, -231, 92, 96, -181, -124, -126, 12, -99, -164,
	85, 84, -260, -185, -190, -218, -231, 90, 157, -177,
	200, -148, 13, -151, 30, 55, -9, -330, -330, 30,
	84, -136, -138, -137, -139, 64, 68, 70, 65, 66,
	67, 71, -242, 23, -125, -7, -6, -330, -140, -133,
	-332, 12, 75, -332, 84, 200, -212, -214, 377, 374,
	380, -307, 90, -79, 84, -284, -272, -182, -103, 38,
	-265, 340, -260, -260, -267, 90, -267, 92, 92, 85,
	-45, -40, -41, 31, 78, -291, -279, 90, 37, -231,
	85, -102, -140, 124, 74, -295, -295, -295, -236, -2,
	551, 557, 118, 83, 343, 16, -198, 84, 85, -167,
	277, 85, -302, 55, -231, 85, 83, -277, -277, -231,
	-330, 215, 29, 29, -54, -167, -261, -307, 550, 549,
	85, 217, 275, -107, 387, -104, 90, 86, -140, -140,
	-140, -140, -140, 208, 205, 260, 218, -133, -140, 84,
	-75, 234, 229, -241, -241, 31, -140, 374, 527, 525,
	123, 239, -122, -114, -96, 421, -249, 157, 309, 238,
	307, 303, 323, 314, 338, 305, 339, 302, 301, 300,
	-249, -247, -108, -108, -174, 131, -108, 129, -108, -108,
	-108, -331, 157, 309, -331, -331, -95, -232, -144, -273,
	-273, -273, -204, 84, -215, 20, 12, 55, 55, -124,
	-148, -125, -99, -231, -188, 511, -193, 44, -191, -192,
	45, -189, 46, 54, 148, -179, -108, -205, 74, -206,
	-210, -166, -161, -163, -162, -330, -197, -331, -231, -204,
	-206, -127, -128, -128, -127, -128, 64, 64, 64, 69,
	64, 69, 64, -137, -236, -331, -331, -7, -239, 75,
	-125, -125, -142, -236, 148, 374, 378, 379, -284, -326,
	103, 124, 29, 74, 336, 99, -324, 156, -325, 221,
	117, 118, 233, 23, 39, 85, 84, 85, 84, 85,
	84, -225, 461, 124, -41, -40, -279, -279, 92, -307,
	217, 24, -140, 74, 74, 74, -81, 555, 92, 83,
	-3, 78, -108, 83, 17, -268, -166, 253, 142, -294,
	-198, -298, -300, -140, -110, -330, -109, -111, -115, 146,
	147, -167, -140, -101, 266, 274, 83, -105, 87, -309,
	75, 257, 336, 257, -140, -75, -45, -140, -221, -221,
	31, -307, -122, -114, -330, -331, -258, -258, -258, -263,
	-258, 297, -258, 297, -258, -331, -331, 84, -331, 20,
	-331, -85, 416, -108, 84, 84, -331, 83, 83, -331,
	-145, 20, -145, -145, -331, 87, -140, -148, -172, 14,
	-185, 49, 315, -195, -194, 53, 45, -192, 17, 47,
	17, 28, -205, 84, 132, 84, -331, -331, 84, 55,
	200, -331, -148, -131, -130, 74, 75, -132, 74, -130,
	64, 64, -200, -331, -203, -125, -148, -148, 200, 103,
	-330, -112, -121, -110, 10, 90, 90, -307, 118, 118,
	-140, 83, -260, 90, -260, 92, 92, 461, 29, 79,
	80, 81, 29, 76, 77, -140, -140, -140, -140, -299,
	83, 17, -108, 83, 132, 85, -198, -198, 254, -162,
	-330, 85, -331, 84, -266, 424, 427, -108, -116, -116,
	-200, 85, -306, 424, -308, -231, -231, -231, -231, -113,
	-260, -108, -108, -179, 90, -108, -108, 92, 92, -330,
	64, 16, 14, -330, -330, -239, -172, -173, 15, 17,
	-186, 51, -184, 50, -184, -194, 17, 17, 90, 17,
	90, 118, -210, -108, -163, 55, -9, -231, -161, -231,
	-174, -108, 83, -108, -148, -148, -108, -154, 419, 83,
	-108, 85, 85, -200, -298, -55, 85, -198, 92, 85,
	-162, -88, -330, 250, -325, -300, 428, 428, -331, 23,
	-305, -304, -232, 83, 75, -89, 142, 424, -331, -331,
	-331, -331, -331, 85, 85, -201, -331, -231, 221, 17,
	17, -201, -201, -147, -173, -108, -159, -187, 52, 74,
	106, 90, 90, 90, 10, -161, 200, -179, -198, -174,
	-331, -198, 85, 23, 85, 557, 118, 85, 250, -9,
	84, 132, -198, -140, -331, 422, 71, 425, 84, -331,
	-331, -331, 74, 106, -206, -231, 85, -179, 85, -183,
	-9, 83, -3, -331, -73, 424, -304, -283, -232, 90,
	92, 85, 60, 423, 426, -231, 221, -316, -317, 74,
	-326, -323, 103, 124, 99, -324, 112, 113, -73, -108,
	83, -74, 265, 515, -309, 60, -317, 74, 11, 10,
	103, 90, 85, -198, 226, -306, 424, -315, 234, 229,
	232, 30, -315, -4, 556, 85, 267, 425, 228, 29,
	103, 92, -4, 426,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 716,
	716, 716, 0, 716, 0, 0, 716, -2, -2, 716,
	1149, 0, 716, 0, 0, -2, 648, 650, 0, 652,
	-2, 0, 0, 661, 1602, 1602, 711, 0, 0, 0,
	0, 0, 716, 716, 716, 716, 1010, 48, 716, 0,
	83, 84, 667, 668, 669, 63, 0, 1600, 1, 3,
	69, 73, 0, 0, 0, 56, 1019, 0, 76, 0,
	0, 720, 0, 718, 0, 1132, 716, 716, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 514, 454, 497, 452, 483, -2, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 347, 347, 0, 0, -2, 445, 445, 445, 0,
	0, 0, 480, 1134, 400, 347, 347, 0, 347, 347,
	347, 347, 0, 0, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 1036,
	146, 1150, 1147, 1148, 38, 39, 40, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 0, 1126, 0, 578, 815, 0, 639,
	639, 0, 639, 639, 639, 639, 0, 0, 0, 590,
	0, 0, 0, 0, 636, 0, 0, 609, 611, 0,
	636, 0, 642, 0, 623, 639, 1603, 1603, 1603, 1117,
	0, 633, 631, 645, 646, 628, 629, 647, 651, 0,
	656, 659, 1143, 1144, 0, 674, 47, 1377, 666, 679,
	680, 0, 712, 713, 43, 908, 0, 837, 841, 852,
	865, 866, 867, 868, 869, 871, 872, 0, 0, 0,
	0, 877, 878, 0, 0, 0, 0, 0, 889, 0,
	0, 0, 0, 0, 991, 0, 954, 954, 925, 954,
	956, 956, 0, 0, 0, 1599, 1000, 0, 0, 0,
	0, 0, 0, 251, 252, 907, 1106, 956, 956, 956,
	956, -2, -2, 198, 199, 200, 201, 202, 203, 204,
	0, 194, 0, 256, 257, 253, 254, 255, 891, 892,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 1602, 0, 689, 0, 0, 0, 0, 0, 1019,
	0, 1011, 1010, 61, 0, 716, -2, 0, 0, 0,
	0, 45, 0, 50, 774, 75, 74, 1058, 0, 0,
	0, 57, 1020, 65, 67, 1021, 0, 721, 722, 0,
	752, 756, 0, 717, 0, 0, 1133, 1132, 1132, 100,
	0, 1543, 1110, -2, -2, 0, 0, 1145, 1146, 1119,
	-2, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, -2, 0, 0, 156, 157, 0, 41, 373,
	0, 152, 0, 367, 317, 1036, 0, 0, 0, 0,
	0, 716, 0, 1127, 137, 138, 144, 145, 347, 347,
	494, 0, 0, 146, 146, 461, 462, 463, 0, 0,
	-2, 371, 0, 446, 0, 0, 361, 361, 365, 363,
	364, 0, 0, 0, 0, 0, 0, 474, 0, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 348, 0, 492, 493, 401, 0, 0, 0, 0,
	472, 473, 0, 0, 1135, 1136, 0, 0, 347, 347,
	0, 0, 0, 0, 347, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 1049, 0, 0, 0, -2, 0, 570,
	0, 0, 0, 1128, 1128, 0, 577, 0, 579, 580,
	0, 0, 581, 0, 636, 636, 634, 635, 583, 584,
	585, 586, 639, 0, 0, 356, 357, 358, 636, 639,
	0, 639, 639, 639, 639, 636, 636, 636, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 1603,
	1603, 642, 639, 0, 619, 0, 620, 621, 624, 625,
	1604, 1605, 1164, 626, 627, 1118, 649, 657, 660, 677,
	675, 676, 678, 670, 671, 672, 673, 0, 691, 692,
	697, 0, 0, 0, 0, 703, 704, 705, 0, 0,
	708, 709, 710, 0, 0, 0, 0, 835, 0, 0,
	897, 898, 899, 900, 901, 902, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 873, 874, 875,
	876, 879, 0, 0, 0, 884, 885, 0, 0, 0,
	0, 0, 726, 0, 992, 0, 923, 0, 924, 926,
	927, 0, 928, 0, 0, 0, 0, 736, 0, 0,
	736, 736, 0, 0, 188, 189, 190, 191, 205, 206,
	207, 208, 209, 258, 1000, 0, 907, 0, 0, 44,
	681, 682, 0, 798, 1138, 0, 0, 732, 0, 55,
	64, 66, 1019, 59, 1019, 0, 738, 0, 0, -2,
	-2, 739, 745, 746, 747, 748, 749, 52, 1601, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 329, 1061,
	0, 0, 1012, 1013, 1016, 0, 753, 757, 0, 759,
	760, 0, 719, 0, 98, 0, 814, 0, 0, 0,
	1543, 1116, 0, 102, 103, 0, 0, 0, 335, 1121,
	1122, 1123, -2, 354, 0, 335, 324, 268, 269, 270,
	317, 272, 317, 317, 317, 317, 329, 329, 329, 329,
	300, 301, 302, 303, 304, 0, 0, 287, 317, 317,
	317, 317, 307, 308, 309, 310, 311, 312, 313, 314,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 319,
	319, 319, 321, 321, 0, 42, 0, 339, 0, 1016,
	0, 1049, 1130, 1140, 0, 0, 0, 1130, 120, 0,
	0, 495, 525, 455, 484, 496, 0, 458, 459, -2,
	0, 0, 445, 0, 447, 0, 355, 0, -2, 0,
	365, 0, 361, 365, 362, 365, 353, 366, 476, 477,
	478, 0, 536, 784, 0, 0, 0, 0, 0, 542,
	543, 544, 0, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 447, 0, 481, 0, 402, 403, 0, 0,
	406, 407, 408, 409, 0, 0, 412, 413, 414, 801,
	802, 415, 439, 440, 441, 416, 417, 418, 419, 420,
	421, 422, 433, 434, 435, 436, 437, 438, 423, 424,
	425, 426, 427, 430, 0, 130, 1040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1128, 0,
	0, 0, 0, 735, 816, 1151, 1152, 640, 641, 0,
	359, 360, 639, 639, 587, 610, 0, 639, 591, 612,
	592, 594, 593, 595, 614, 615, 639, 598, 637, 638,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	616, 617, 618, 643, 0, 0, 658, 662, 663, 664,
	665, 0, 0, 694, 94, 699, 700, 701, 702, 714,
	707, 909, 832, 833, 834, 836, 838, 0, 893, 895,
	840, 842, 904, 905, 906, 0, 0, 0, 0, 0,
	846, 850, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 870, 970, 971, 972, 887, 259,
	260, 0, 262, 888, 0, 750, 0, 0, 0, 886,
	0, 0, 0, 0, 727, 728, 998, 995, 0, 0,
	955, 957, 0, 0, 0, 0, 0, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 973, 0,
	0, 0, 737, 1001, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1105, 0, 684, 685, 687, 0, 818,
	0, 799, 0, 0, 1139, 690, 0, 731, 0, 734,
	58, 60, 743, 744, 0, 761, 740, 54, 49, 0,
	0, 776, 1059, 329, 1081, 0, 333, 334, 1022, 1023,
	0, 1015, 1017, 1018, 77, 758, 754, 0, 830, 0,
	0, 813, 0, 764, 766, 767, 768, 796, 0, 0,
	0, 0, 96, 815, 1111, 101, 0, 0, 106, 107,
	1112, 1113, 1114, 1115, 0, 514, -2, 397, 158, 160,
	161, 162, 153, -2, 327, 325, 326, 271, 329, 329,
	294, 295, 296, 297, 298, 299, 0, 0, 288, 289,
	290, 291, 282, 0, 283, 284, 285, 0, 286, 372,
	0, 1024, 340, 341, 343, 347, 0, 0, 0, 368,
	369, 0, 1040, 0, 0, 0, 1141, 1140, 1140, 1140,
	0, 148, 149, 150, 151, 531, 0, 0, 526, 529,
	530, 146, 0, 0, 154, 449, 448, 0, 563, 0,
	370, 0, 0, 365, 365, 350, 351, 479, 0, 0,
	538, 539, 540, 541, 0, 0, 0, 447, 449, 335,
	0, 404, 405, 410, 411, 428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 511,
	512, 513, 1037, 1038, 1039, 0, 0, 571, 0, 0,
	389, 92, 1129, 576, 636, 597, 613, 636, 589, 596,
	622, 654, 698, 0, 0, 0, 0, 706, 0, 839,
	894, 896, 843, 0, 847, 851, 0, 0, 261, 0,
	0, 0, 0, 0, 890, 914, 915, 0, 0, 1010,
	0, 996, 0, 0, 922, 958, 959, 0, 0, 0,
	0, 0, 910, 0, 0, 736, 0, 960, 961, 962,
	963, 964, 1001, 683, 686, 688, 772, 819, 820, 0,
	0, 0, 0, 800, 1137, 729, 730, 733, -2, 0,
	0, 1003, 0, 0, 761, 830, 762, 0, 741, 51,
	775, 0, 1063, 1062, 1075, 1088, 330, 331, 332, 1014,
	0, 1019, 0, 1099, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 0, 0, 806, 0,
	0, 0, 0, 797, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 336, 337, 139, 146, 399, 159, 379, 0, 0,
	267, 328, 292, 293, 0, 315, 0, 0, 0, 392,
	116, 1028, 1027, 347, 347, 342, 0, 345, 0, 1142,
	318, 0, 129, 0, 0, 0, 0, 0, 135, 520,
	0, 0, 527, 0, 0, 0, 453, 0, 464, 465,
	0, 535, 562, 0, 567, 339, 0, 349, 352, 785,
	0, 0, 466, 0, 449, 470, 471, 482, 431, 432,
	429, 0, 0, 1050, 1051, 1056, 1054, 1055, 121, 502,
	504, 503, 507, 0, 0, 500, 0, 389, 1024, 0,
	575, 390, 391, 639, 639, 693, 95, 0, 696, 0,
	0, 0, 844, 848, 751, 0, 0, 317, 317, 978,
	317, 321, 981, 317, 983, 317, 986, 317, 989, 990,
	0, 0, 0, 0, 993, 921, 999, 0, 0, 0,
	0, 932, 0, 0, 911, 912, 0, 1002, 821, 826,
	826, 826, 0, 0, 0, 1124, 1125, 1004, 1005, 830,
	1006, 763, 742, 777, 1081, 0, 1074, 0, -2, 1083,
	0, 0, 0, 1089, 755, 78, 831, 81, 0, 1099,
	1107, 0, 1090, 1101, 1103, 0, 0, 0, 1095, 0,
	830, 765, 792, 794, 0, 789, 804, 805, 807, 0,
	809, 0, 811, 812, 774, 770, 771, 0, 98, 0,
	830, 830, 97, 0, 817, 108, 109, 110, 398, 163,
	168, 0, 0, 0, 173, 0, 175, 0, 380, 0,
	264, 266, 0, 0, 166, 329, 0, 329, 0, 322,
	0, 381, 393, 0, 1025, 1026, 0, 0, 344, 346,
	0, 1131, 131, 0, 0, 0, 523, 0, 532, 0,
	0, 0, 0, 0, 0, 155, 450, 0, 0, 338,
	0, 0, 560, 557, 467, 0, 192, 193, 195, 0,
	0, 469, 774, 1041, 1042, 1043, 0, 1053, 1057, 124,
	0, 0, 0, 0, 572, 573, 574, 93, 582, 588,
	695, 715, 845, 849, 0, 881, 976, 329, 979, 980,
	982, 984, 985, 987, 988, 882, 883, 0, 917, 0,
	919, 1019, 0, 997, 0, 0, 931, 0, 0, 913,
	0, 0, 0, 0, 798, -2, 62, 1006, 1008, 0,
	1068, 1066, 1066, 1076, 1077, 0, 0, 1084, 0, 0,
	0, 0, 82, 0, 0, 0, 1104, 0, 0, 0,
	0, 99, 1010, 786, 793, 0, 0, 787, 0, 788,
	808, 810, 769, -2, 830, 830, 88, 89, 0, 169,
	0, 171, 186, 187, 0, 174, 176, 177, 263, 265,
	0, 0, 305, 316, 306, 0, 0, 394, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 774, 132, 133, 134, 515,
	0, 525, 0, 0, 0, 518, 0, 456, 0, 566,
	0, 0, 537, 0, 545, 0, 0, 0, 196, 197,
	0, 1052, 501, 0, 122, 123, 0, 0, 506, 965,
	977, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	827, 0, 0, 0, 0, 818, 1008, 80, 0, 0,
	1071, 0, 1064, 1067, 1065, 1078, 0, 0, 1085, 0,
	1087, 0, 1108, 1109, 1102, 0, 1094, 1097, 1093, 1096,
	1019, 790, 0, 795, 1010, 87, 0, 172, 0, 0,
	0, 320, 323, 0, 0, 0, 516, 0, 528, 519,
	564, 565, 0, 568, 374, 561, 558, 559, 468, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 916, 918,
	920, 929, 930, 974, 975, 0, 823, 780, 781, 828,
	829, 0, 0, 773, 79, 1009, 1007, 1060, 0, 1069,
	1070, 1079, 1080, 1086, 0, 1092, 0, 85, 0, 1019,
	170, 0, 180, 0, 524, 0, 527, 517, 0, 1044,
	0, 0, 0, 508, 880, 0, 0, 0, 0, 822,
	824, 825, 1072, 1073, 1100, 1098, 791, 86, 375, 379,
	1044, 0, 0, 569, 498, 1046, 127, 128, 442, 443,
	444, 121, 966, 0, 969, 782, 783, 376, 377, 0,
	164, 181, 182, 0, 0, 185, 178, 179, 117, 0,
	0, 0, 1047, 1048, 124, 967, 378, 0, 0, 0,
	183, 184, 533, 0, 0, 505, 0, 382, 384, 385,
	0, 0, 383, 521, 0, 533, 1045, 0, 386, 387,
	388, 534, 522, 968,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 558,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:476
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:481
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:486
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:541
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:551
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:557
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:563
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:567
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:576
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:582
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:586
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:592
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:666
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:745
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:751
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:771
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:795
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:799
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:811
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:828
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:829
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:833
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:843
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:853
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:857
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:866
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:878
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:888
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:898
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:902
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:912
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:916
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:930
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:934
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:973
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:977
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:982
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:997
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1002
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1008
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1025
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1032
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1039
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1044
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1049
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1054
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1061
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1068
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1079
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1096
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1100
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1124
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1134
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1145
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1149
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1155
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1165
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1170
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1179
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1203
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1212
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1234
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1244
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1255
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1265
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1270
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1275
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1291
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1295
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1309
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1315
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1333
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1363
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1370
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1409
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1650
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1654
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1658
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1662
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1893
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1898
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1910
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1914
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1920
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1945
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1992
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2001
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2007
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2017
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2021
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2026
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2030
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2046
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2050
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2054
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2058
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2062
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2067
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = yyDollar[2].str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = "key"
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = yyDollar[1].str
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = ""
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2130
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2140
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2146
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2150
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2156
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2160
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2166
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2172
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2176
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2180
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2184
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2193
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2199
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2205
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2211
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2217
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2221
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2225
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2229
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2233
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2251
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2255
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2259
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2268
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2274
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2288
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2298
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2302
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2306
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2310
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2390
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2394
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2398
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2402
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2406
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = ""
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = ""
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2457
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2461
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2470
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2479
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2483
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2487
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2495
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2501
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2509
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2515
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2519
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2523
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2527
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2587
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2591
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2595
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2609
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2623
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2627
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2631
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2635
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2639
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2643
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2647
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2651
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2664
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2678
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2702
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2714
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2728
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2732
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2759
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2791
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2809
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2818
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2826
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2835
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2842
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2854
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2863
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2878
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2883
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2887
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2892
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2896
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2902
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2906
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2911
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2915
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2920
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2924
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2930
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2934
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2938
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2942
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2978
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2982
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2986
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2990
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2994
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2998
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3002
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3006
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3010
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3014
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3027
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3034
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3038
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3053
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3060
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3067
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3076
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.str = ""
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3098
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3102
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3140
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = ""
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = "extended "
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3373
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3377
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3411
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3415
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3421
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3425
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3431
		{
			yyVAL.empty = struct{}{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3449
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3469
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3484
		{
			yyVAL.empty = struct{}{}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.empty = struct{}{}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3489
		{
			yyVAL.empty = struct{}{}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.empty = struct{}{}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3507
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3511
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3515
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3519
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3523
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3527
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = yyDollar[1].str
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.str = yyDollar[1].str
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3604
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3614
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3620
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3624
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3628
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3632
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3644
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3670
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3735
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3757
		{
			setAllowComments(yylex, true)
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3767
		{
			yyVAL.strs = nil
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3781
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3785
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3790
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = SQLCacheStr
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3803
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3811
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3842
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3861
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3866
		{
			yyVAL.strs = nil
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3874
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3882
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = SQLCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = DistinctStr
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = DistinctStr
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = StraightJoinHint
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3918
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3922
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3928
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3932
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3936
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3940
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3965
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3969
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3975
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3981
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3995
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3999
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4003
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4009
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4015
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4019
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4028
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4034
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4038
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4044
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4054
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4058
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4066
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4072
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4076
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4089
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4093
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4097
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4101
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4107
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4109
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4113
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4121
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4124
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4150
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4154
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4158
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4164
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4170
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4174
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4178
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4182
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4188
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4192
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4216
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4222
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4231
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4237
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4247
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4251
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4255
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4259
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4264
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4268
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4272
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4276
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4293
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4297
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4301
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4305
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4309
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4338
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4342
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4346
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4358
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4388
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4392
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4412
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4416
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4420
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4424
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4428
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4432
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4474
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4478
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4482
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4486
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4490
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4498
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4502
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4506
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4510
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4518
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4530
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4534
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4551
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4555
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4562
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4566
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4570
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4574
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4580
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4584
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4588
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4592
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4596
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4600
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4604
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4610
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4614
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4618
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4625
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4631
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4718
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4757
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4761
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4765
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4769
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4773
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4777
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4781
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4785
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4789
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4793
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4797
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4803
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4807
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4811
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4815
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4819
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4823
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4827
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4831
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4835
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4853
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4868
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4872
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4876
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4880
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4884
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4890
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4894
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4898
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4902
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4906
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4930
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4934
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4940
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4944
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4948
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4952
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4956
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4962
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4966
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4994
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4998
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = string("")
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5017
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5023
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5027
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5033
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5048
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5052
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5056
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5085
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5103
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5109
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5115
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5119
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5125
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5130
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5134
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5138
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5147
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5153
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5157
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5161
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5170
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5174
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5178
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5182
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5189
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5193
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5197
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5201
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5207
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5211
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5215
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = ""
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5224
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5228
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5237
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5247
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5256
		{
			yyVAL.str = ""
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5260
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = "cascaded"
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5282
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5288
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5294
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5300
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = ""
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5328
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5332
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5338
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5342
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5346
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = ""
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5364
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = " header"
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5373
		{
			yyVAL.str = ""
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = " manifest on"
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = " manifest off"
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = ""
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = " overwrite on"
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = " overwrite off"
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5400
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = ""
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5448
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = ""
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = " optionally"
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5484
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5488
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5492
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5496
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5500
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5506
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5510
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5514
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5518
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5523
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5527
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5533
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5537
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5543
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5547
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5553
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5568
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5578
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5584
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5594
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5598
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5602
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5606
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5610
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.str = "charset"
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5636
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5645
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5650
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5657
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5660
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5662
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5665
		{
			yyVAL.empty = struct{}{}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5667
		{
			yyVAL.empty = struct{}{}
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5669
		{
			yyVAL.empty = struct{}{}
		}
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5673
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5682
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5689
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5693
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5699
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5703
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5710
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5716
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5720
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5726
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6209
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			decNesting(yylex)
		}
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6223
		{
			skipToEnd(yylex)
		}
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6228
		{
			skipToEnd(yylex)
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6232
		{
			skipToEnd(yylex)
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6236
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
