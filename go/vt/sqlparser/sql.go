// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const MATCH = 57819
const AGAINST = 57820
const BOOLEAN = 57821
const LANGUAGE = 57822
const WITH = 57823
const QUERY = 57824
const EXPANSION = 57825
const WITHOUT = 57826
const VALIDATION = 57827
const UNUSED = 57828
const ARRAY = 57829
const BYTE = 57830
const CUME_DIST = 57831
const DESCRIPTION = 57832
const DENSE_RANK = 57833
const EMPTY = 57834
const EXCEPT = 57835
const FIRST_VALUE = 57836
const GROUPING = 57837
const GROUPS = 57838
const JSON_TABLE = 57839
const LAG = 57840
const LAST_VALUE = 57841
const LATERAL = 57842
const LEAD = 57843
const NTH_VALUE = 57844
const NTILE = 57845
const OF = 57846
const OVER = 57847
const PERCENT_RANK = 57848
const RANK = 57849
const RECURSIVE = 57850
const ROW_NUMBER = 57851
const SYSTEM = 57852
const WINDOW = 57853
const ACTIVE = 57854
const ADMIN = 57855
const AUTOEXTEND_SIZE = 57856
const BUCKETS = 57857
const CLONE = 57858
const COLUMN_FORMAT = 57859
const COMPONENT = 57860
const DEFINITION = 57861
const ENFORCED = 57862
const ENGINE_ATTRIBUTE = 57863
const EXCLUDE = 57864
const FOLLOWING = 57865
const GEOMCOLLECTION = 57866
const GET_MASTER_PUBLIC_KEY = 57867
const HISTOGRAM = 57868
const HISTORY = 57869
const INACTIVE = 57870
const INVISIBLE = 57871
const LOCKED = 57872
const MASTER_COMPRESSION_ALGORITHMS = 57873
const MASTER_PUBLIC_KEY_PATH = 57874
const MASTER_TLS_CIPHERSUITES = 57875
const MASTER_ZSTD_COMPRESSION_LEVEL = 57876
const NESTED = 57877
const NETWORK_NAMESPACE = 57878
const NOWAIT = 57879
const NULLS = 57880
const OJ = 57881
const OLD = 57882
const OPTIONAL = 57883
const ORDINALITY = 57884
const ORGANIZATION = 57885
const OTHERS = 57886
const PARTIAL = 57887
const PATH = 57888
const PERSIST = 57889
const PERSIST_ONLY = 57890
const PRECEDING = 57891
const PRIVILEGE_CHECKS_USER = 57892
const PROCESS = 57893
const RANDOM = 57894
const REFERENCE = 57895
const REQUIRE_ROW_FORMAT = 57896
const RESOURCE = 57897
const RESPECT = 57898
const RESTART = 57899
const RETAIN = 57900
const REUSE = 57901
const ROLE = 57902
const SECONDARY = 57903
const SECONDARY_ENGINE = 57904
const SECONDARY_ENGINE_ATTRIBUTE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SIMPLE = 57908
const SKIP = 57909
const SRID = 57910
const THREAD_PRIORITY = 57911
const TIES = 57912
const UNBOUNDED = 57913
const VCPU = 57914
const VISIBLE = 57915
const RETURNING = 57916
const FORMAT_BYTES = 57917
const FORMAT_PICO_TIME = 57918
const PS_CURRENT_THREAD_ID = 57919
const PS_THREAD_ID = 57920
const FORMAT = 57921
const TREE = 57922
const VITESS = 57923
const TRADITIONAL = 57924
const LOCAL = 57925
const LOW_PRIORITY = 57926
const NO_WRITE_TO_BINLOG = 57927
const LOGS = 57928
const ERROR = 57929
const GENERAL = 57930
const HOSTS = 57931
const OPTIMIZER_COSTS = 57932
const USER_RESOURCES = 57933
const SLOW = 57934
const CHANNEL = 57935
const RELAY = 57936
const EXPORT = 57937
const CURRENT = 57938
const ROW = 57939
const ROWS = 57940
const AVG_ROW_LENGTH = 57941
const CONNECTION = 57942
const CHECKSUM = 57943
const DELAY_KEY_WRITE = 57944
const ENCRYPTION = 57945
const ENGINE = 57946
const INSERT_METHOD = 57947
const MAX_ROWS = 57948
const MIN_ROWS = 57949
const PACK_KEYS = 57950
const PASSWORD = 57951
const FIXED = 57952
const DYNAMIC = 57953
const COMPRESSED = 57954
const REDUNDANT = 57955
const COMPACT = 57956
const ROW_FORMAT = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const MEMORY = 57962
const DISK = 57963
const PARTITIONS = 57964
const LINEAR = 57965
const RANGE = 57966
const LIST = 57967
const SUBPARTITION = 57968
const SUBPARTITIONS = 57969
const HASH = 57970

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 51,
	13, 51,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 149,
	646, 149,
	-2, 157,
	-1, 48,
	132, 157,
	173, 157,
	335, 157,
	-2, 502,
	-1, 55,
	35, 744,
	235, 744,
	246, 744,
	281, 758,
	282, 758,
	-2, 746,
	-1, 60,
	237, 775,
	-2, 773,
	-1, 114,
	234, 1409,
	-2, 123,
	-1, 116,
	1, 150,
	646, 150,
	-2, 157,
	-1, 127,
	133, 388,
	240, 388,
	-2, 491,
	-1, 146,
	132, 157,
	173, 157,
	335, 157,
	-2, 511,
	-1, 756,
	86, 1427,
	218, 1431,
	-2, 1274,
	-1, 757,
	86, 43,
	-2, 45,
	-1, 758,
	86, 44,
	-2, 46,
	-1, 786,
	86, 42,
	218, 1430,
	-2, 39,
	-1, 862,
	59, 843,
	-2, 858,
	-1, 949,
	245, 40,
	250, 40,
	-2, 399,
	-1, 1034,
	1, 559,
	646, 559,
	-2, 157,
	-1, 1433,
	218, 1431,
	-2, 1274,
	-1, 1435,
	218, 1430,
	-2, 39,
	-1, 1460,
	59, 844,
	-2, 863,
	-1, 1461,
	59, 845,
	-2, 864,
	-1, 1514,
	132, 157,
	173, 157,
	335, 157,
	-2, 438,
	-1, 1593,
	133, 388,
	240, 388,
	-2, 491,
	-1, 1602,
	245, 41,
	250, 41,
	-2, 400,
	-1, 1942,
	218, 1435,
	-2, 1429,
	-1, 1943,
	218, 1431,
	-2, 1427,
	-1, 1944,
	218, 1430,
	-2, 42,
	-1, 2040,
	132, 157,
	173, 157,
	335, 157,
	-2, 439,
	-1, 2047,
	25, 178,
	-2, 180,
	-1, 2390,
	77, 98,
	87, 98,
	-2, 920,
	-1, 2458,
	621, 671,
	-2, 645,
	-1, 2617,
	49, 1368,
	-2, 1362,
	-1, 2898,
	7, 57,
	18, 57,
	20, 57,
	88, 57,
	-2, 892,
	-1, 3240,
	621, 671,
	-2, 659,
	-1, 3330,
	22, 1783,
	32, 1783,
	174, 1783,
	257, 1783,
	315, 1783,
	316, 1783,
	317, 1783,
	318, 1783,
	319, 1783,
	320, 1783,
	321, 1783,
	323, 1783,
	324, 1783,
	325, 1783,
	326, 1783,
	327, 1783,
	328, 1783,
	329, 1783,
	330, 1783,
	331, 1783,
	332, 1783,
	333, 1783,
	334, 1783,
	336, 1783,
	338, 1783,
	339, 1783,
	340, 1783,
	341, 1783,
	342, 1783,
	343, 1783,
	344, 1783,
	345, 1783,
	346, 1783,
	349, 1783,
	350, 1783,
	351, 1783,
	352, 1783,
	353, 1783,
	354, 1783,
	355, 1783,
	356, 1783,
	357, 1783,
	496, 1783,
	-2, 603,
}

const yyPrivate = 57344

const yyLast = 44806

var yyAct = [...]int{
	756, 3000, 3001, 794, 2999, 3401, 3413, 3221, 788, 3308,
	787, 669, 1816, 3370, 3328, 3371, 2037, 3273, 2835, 2975,
	2766, 2672, 1990, 1517, 3296, 3205, 2679, 1970, 3203, 3156,
	2720, 3, 2729, 1097, 2734, 1438, 2630, 2731, 1972, 2730,
	655, 877, 2728, 759, 37, 2291, 2733, 2732, 2962, 2633,
	760, 187, 3028, 855, 187, 2578, 1475, 623, 2687, 2107,
	2322, 2748, 629, 3193, 187, 2749, 651, 2631, 2634, 2869,
	2863, 3033, 187, 753, 2519, 648, 677, 2751, 1994, 2384,
	754, 2010, 2628, 2889, 2618, 1468, 2361, 187, 1931, 2348,
	649, 2070, 2502, 2855, 1444, 2455, 2423, 2771, 2095, 2075,
	647, 911, 2424, 643, 2425, 36, 1571, 2138, 155, 1099,
	2373, 2026, 629, 187, 629, 2015, 2324, 38, 2340, 1928,
	1462, 859, 1936, 863, 2014, 878, 2354, 1812, 1822, 1902,
	2494, 1618, 2116, 1600, 2002, 2155, 857, 2077, 2417, 944,
	1506, 880, 1075, 939, 2094, 1484, 2392, 1442, 576, 661,
	141, 1332, 1770, 2017, 91, 1789, 918, 1268, 634, 981,
	1901, 1830, 1715, 95, 1719, 1607, 850, 915, 950, 2092,
	1699, 919, 2066, 945, 96, 946, 656, 1505, 1489, 1095,
	1503, 1898, 1300, 1089, 1724, 864, 1566, 159, 869, 1592,
	1995, 119, 98, 117, 124, 1838, 947, 865, 118, 125,
	867, 1030, 1962, 76, 1335, 97, 638, 917, 85, 3230,
	2448, 891, 89, 1046, 1939, 618, 3402, 2109, 2110, 2111,
	2109, 2963, 2717, 3258, 957, 2478, 2477, 2153, 2446, 866,
	77, 885, 1684, 890, 8, 120, 612, 2918, 126, 90,
	7, 6, 2955, 1339, 2739, 871, 579, 87, 87, 3259,
	3354, 912, 2510, 87, 1269, 986, 2511, 2736, 612, 3254,
	800, 801, 802, 1269, 800, 801, 802, 1792, 3253, 3004,
	618, 1777, 639, 1967, 1968, 1776, 1775, 937, 1774, 1773,
	1772, 858, 856, 1755, 1764, 904, 87, 3349, 641, 898,
	642, 2320, 2614, 2739, 872, 3004, 2468, 1285, 2350, 905,
	609, 2582, 2737, 983, 120, 3424, 879, 3309, 935, 755,
	934, 936, 2142, 3369, 923, 933, 1000, 1001, 1002, 3374,
	1005, 1006, 1007, 1008, 2743, 960, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 102, 987, 990, 991, 3392, 595, 2840,
	1003, 2737, 1469, 961, 3003, 928, 2141, 2839, 2140, 3206,
	593, 1279, 3358, 3254, 2471, 608, 3356, 2292, 1782, 2788,
	1279, 3152, 120, 2743, 2968, 994, 3151, 2969, 3421, 612,
	3003, 985, 761, 2675, 104, 105, 761, 108, 3357, 78,
	114, 984, 3355, 183, 3306, 3405, 574, 3249, 3383, 2197,
	590, 78, 2976, 78, 3297, 2135, 3305, 2518, 3333, 604,
	2806, 78, 1581, 2364, 80, 3248, 851, 852, 853, 854,
	2401, 1998, 862, 2400, 600, 1507, 2402, 1508, 2676, 1282,
	3235, 1283, 1284, 2486, 3338, 2740, 2321, 2485, 2365, 613,
	2668, 1033, 2669, 2670, 2032, 2033, 2086, 2509, 3336, 2194,
	893, 894, 3046, 2031, 2678, 1092, 1065, 3342, 3343, 2449,
	1275, 613, 849, 1267, 2195, 2689, 2690, 87, 2673, 1275,
	848, 2080, 3337, 1969, 3222, 932, 2413, 1039, 1040, 87,
	2550, 87, 626, 1053, 2740, 2689, 2690, 927, 1054, 87,
	929, 2796, 2674, 580, 2794, 582, 596, 1763, 615, 2866,
	614, 586, 633, 584, 588, 597, 589, 3375, 583, 1042,
	594, 2050, 2049, 585, 598, 599, 602, 605, 606, 607,
	603, 601, 1066, 592, 616, 2680, 1301, 1879, 3376, 1059,
	2357, 2358, 612, 930, 624, 1765, 1766, 1767, 2772, 1029,
	612, 612, 1070, 1071, 2495, 3182, 2117, 3183, 3161, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1310, 1309, 1311, 1312,
	1053, 1091, 2456, 2768, 1674, 1054, 2167, 2164, 2166, 2165,
	2168, 2169, 2688, 1052, 187, 1051, 187, 1705, 1446, 187,
	2761, 1004, 613, 1998, 2691, 2481, 2156, 932, 2762, 924,
	3404, 2161, 2688, 932, 1028, 1035, 926, 925, 2173, 1700,
	2174, 1086, 2175, 3350, 2691, 1996, 1997, 1067, 1675, 629,
	1676, 629, 629, 2079, 1060, 1871, 1860, 1861, 1862, 1863,
	1873, 1864, 1865, 1866, 1878, 1874, 1867, 1868, 1875, 1876,
	1877, 1869, 1870, 1872, 629, 629, 2581, 1072, 2551, 1068,
	1069, 2497, 1074, 2957, 2956, 930, 2162, 1073, 2769, 2176,
	1010, 931, 1009, 3136, 2770, 2158, 970, 2160, 1032, 2953,
	968, 2120, 3008, 1449, 1082, 940, 1084, 1261, 1037, 941,
	1043, 2011, 941, 1045, 903, 907, 908, 979, 1585, 37,
	978, 977, 976, 1274, 1271, 1272, 1273, 1278, 1280, 1277,
	975, 1276, 1274, 1271, 1272, 1273, 1278, 1280, 1277, 2159,
	1276, 1270, 974, 973, 1081, 1083, 972, 967, 980, 2691,
	1270, 959, 3417, 2677, 916, 1315, 1063, 612, 1315, 953,
	3229, 2447, 3425, 916, 938, 3381, 617, 914, 903, 907,
	908, 916, 952, 1716, 2093, 613, 1606, 892, 2498, 2146,
	2145, 2450, 1087, 613, 613, 2325, 2327, 610, 1318, 1319,
	1320, 1321, 2415, 3311, 1031, 2139, 1712, 3311, 1326, 2483,
	2195, 1255, 611, 931, 989, 997, 2710, 1996, 1997, 931,
	952, 612, 2952, 2501, 988, 797, 797, 2480, 3310, 1579,
	2466, 797, 3310, 1706, 1250, 1578, 2867, 1707, 1708, 1577,
	1251, 1252, 1713, 1575, 1049, 1433, 1055, 1056, 1057, 1058,
	2514, 1079, 971, 2209, 959, 1080, 969, 578, 573, 996,
	3218, 2470, 958, 1322, 1704, 1085, 2905, 962, 952, 1093,
	1094, 2355, 964, 2741, 2742, 2885, 965, 963, 1686, 1685,
	1687, 1688, 1689, 2916, 2917, 1430, 2745, 2397, 3247, 1078,
	1436, 81, 3002, 1605, 2360, 2493, 2137, 966, 2492, 187,
	1316, 1317, 1411, 629, 629, 2469, 2302, 116, 1961, 1493,
	1405, 1044, 2038, 1315, 1312, 77, 2667, 2083, 3002, 187,
	1264, 874, 2741, 2742, 111, 2196, 1262, 1263, 3341, 86,
	1050, 1337, 1839, 1338, 2824, 2745, 2681, 3162, 629, 1038,
	2685, 86, 187, 86, 1502, 1076, 1840, 1450, 2684, 1725,
	1452, 86, 1437, 629, 1456, 958, 1048, 2084, 1090, 2326,
	859, 187, 1453, 3243, 982, 2082, 1062, 2948, 959, 1249,
	613, 2504, 3340, 2879, 1341, 1285, 2503, 1064, 3415, 2157,
	1041, 3416, 2686, 3414, 2504, 1831, 3384, 2682, 1709, 2503,
	1509, 1265, 2683, 2537, 112, 1831, 2439, 2222, 629, 2085,
	1470, 1472, 1307, 1308, 1310, 1309, 1311, 1312, 1284, 2081,
	1701, 1433, 1702, 2520, 3042, 1703, 1437, 629, 629, 2923,
	629, 2922, 629, 629, 613, 629, 629, 629, 629, 629,
	629, 906, 900, 899, 2124, 1454, 1498, 1615, 1433, 95,
	1614, 1433, 629, 1433, 187, 1604, 1455, 1283, 1284, 2134,
	96, 1612, 1443, 2132, 2129, 1516, 1412, 1413, 1414, 1415,
	1416, 2129, 970, 968, 187, 903, 907, 908, 98, 958,
	3275, 995, 3377, 1837, 2906, 992, 1494, 629, 1647, 187,
	3419, 1650, 959, 1652, 3144, 906, 900, 899, 2136, 3378,
	1077, 2133, 1034, 629, 1726, 187, 2522, 1047, 2131, 1598,
	959, 1504, 1669, 3143, 1440, 1285, 3238, 1282, 612, 1283,
	1284, 187, 3134, 3276, 856, 1451, 2539, 1471, 187, 1474,
	858, 3426, 1482, 904, 2982, 3211, 2983, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 629, 905, 1653, 2994,
	2993, 1610, 2930, 1651, 1591, 959, 1582, 1583, 1584, 1620,
	2929, 1621, 2919, 1623, 1625, 1499, 1500, 1629, 1631, 1633,
	1635, 1637, 2532, 2531, 2530, 2524, 2718, 2528, 3212, 2523,
	1285, 2521, 1609, 1698, 1574, 2706, 2526, 2421, 1285, 2420,
	2219, 2089, 1588, 958, 1695, 2525, 1601, 1589, 1481, 952,
	955, 956, 1587, 916, 1285, 1694, 2802, 949, 953, 1692,
	1679, 958, 2527, 2529, 1721, 1730, 3427, 952, 955, 956,
	896, 916, 1734, 1659, 1660, 949, 953, 1678, 948, 1665,
	1666, 1677, 1667, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1608, 1608, 1661, 1794, 2201, 2202, 2203, 1282, 1655, 1283,
	1284, 800, 801, 802, 1727, 1728, 958, 1795, 1313, 1314,
	1793, 962, 952, 2218, 1717, 1457, 964, 1469, 1732, 1693,
	965, 963, 1469, 1691, 1835, 1739, 1740, 1741, 1836, 1285,
	1658, 1657, 120, 1681, 1567, 1656, 935, 2900, 934, 1784,
	1786, 1787, 1627, 933, 1576, 897, 1303, 1304, 1305, 1306,
	1307, 1308, 1310, 1309, 1311, 1312, 1731, 3237, 3215, 3214,
	629, 629, 1282, 1785, 1283, 1284, 3213, 3139, 3124, 1602,
	1282, 613, 1283, 1284, 3123, 1752, 3041, 1611, 187, 1933,
	1753, 1613, 1580, 1729, 1616, 1617, 1282, 3039, 1283, 1284,
	1733, 1285, 1735, 1736, 1737, 1738, 1285, 1680, 2990, 1742,
	1305, 1306, 1307, 1308, 1310, 1309, 1311, 1312, 1648, 1649,
	1478, 1754, 3388, 1469, 1654, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1287, 1301, 618, 2513, 629, 2927, 2913, 1285,
	1819, 1819, 906, 900, 899, 618, 2912, 1817, 1817, 2404,
	1820, 2773, 2709, 2708, 2430, 1433, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1310, 1309, 1311, 1312, 1790, 2104, 1714,
	1479, 1282, 2105, 1283, 1284, 2418, 1432, 2102, 1285, 629,
	629, 2103, 1771, 2100, 3386, 1469, 2151, 2101, 1301, 2854,
	2208, 2150, 1285, 1993, 1797, 1832, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1788,
	1798, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1309,
	1311, 1312, 3320, 1469, 1975, 1756, 1943, 1722, 2765, 1690,
	1682, 1899, 629, 1282, 1285, 1283, 1284, 1672, 1282, 1668,
	1283, 1284, 1833, 1933, 1285, 1664, 1834, 1663, 1930, 1760,
	1761, 1662, 1932, 1480, 1285, 1301, 1088, 2003, 2004, 1940,
	1254, 3318, 1469, 1285, 618, 187, 1791, 2346, 3403, 795,
	629, 1282, 1285, 1283, 1284, 3316, 1469, 1894, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1310, 1309, 1311, 1312, 3365,
	1469, 1281, 1469, 101, 187, 1964, 1469, 629, 94, 1285,
	1796, 1899, 1929, 3169, 100, 1926, 99, 187, 3168, 2256,
	1282, 629, 1283, 1284, 1943, 1980, 187, 1981, 187, 3128,
	187, 187, 2346, 3303, 1282, 1285, 1283, 1284, 1469, 3127,
	1285, 1959, 2346, 3283, 92, 1942, 629, 3191, 1469, 2346,
	3279, 94, 2974, 1470, 1963, 93, 2850, 1940, 3266, 1469,
	1946, 1947, 1285, 2662, 2047, 3189, 1469, 1469, 1821, 1841,
	1842, 1843, 1844, 2195, 1826, 1827, 1282, 2457, 1283, 1284,
	2346, 3231, 1285, 1855, 1469, 2393, 1282, 1987, 1283, 1284,
	2966, 3228, 95, 1469, 3147, 1469, 1282, 2435, 1283, 1284,
	1941, 629, 2046, 96, 2362, 1282, 2878, 1283, 1284, 2013,
	1469, 2005, 95, 1986, 1282, 1285, 1283, 1284, 3186, 1469,
	2009, 1281, 2012, 96, 3379, 1771, 1285, 2880, 629, 2346,
	3135, 2966, 1469, 1942, 629, 1285, 2248, 2056, 2057, 2058,
	2059, 1282, 3271, 1283, 1284, 3172, 1469, 2042, 2394, 1285,
	3242, 1945, 2346, 2041, 1948, 1949, 871, 1974, 2396, 2051,
	1285, 2052, 2053, 2054, 2055, 2852, 1469, 1282, 1825, 1283,
	1284, 92, 1282, 1285, 1283, 1284, 2370, 2062, 2063, 2064,
	2065, 629, 93, 2024, 2370, 2045, 629, 2072, 2008, 2090,
	629, 629, 1988, 1285, 1282, 2118, 1283, 1284, 2078, 2006,
	1285, 2346, 2964, 2844, 1985, 2129, 1469, 1285, 904, 2822,
	2029, 904, 2028, 1285, 1282, 2697, 1283, 1284, 2818, 2044,
	1285, 2043, 905, 2883, 1469, 905, 2265, 1469, 187, 2115,
	2699, 2698, 2849, 1469, 2362, 187, 2088, 1469, 1285, 2695,
	2696, 2602, 187, 187, 3226, 2030, 187, 1282, 187, 1283,
	1284, 2695, 2694, 2370, 1469, 187, 2847, 1469, 1282, 2210,
	1283, 1284, 187, 2629, 2073, 2068, 2069, 1282, 2123, 1283,
	1284, 2126, 2087, 2127, 2878, 2091, 2800, 1469, 2369, 1285,
	2099, 1282, 2143, 1283, 1284, 2210, 1469, 2393, 187, 2265,
	2122, 3132, 1282, 629, 1283, 1284, 2297, 1469, 2245, 2073,
	2121, 2130, 2125, 2280, 1469, 1282, 2878, 1283, 1284, 2195,
	2479, 2214, 2244, 2147, 2144, 1570, 2460, 2148, 2149, 2453,
	2454, 2213, 1771, 960, 2931, 1282, 2129, 1283, 1284, 2163,
	2346, 2345, 1282, 2370, 1283, 1284, 2177, 2178, 100, 1282,
	2182, 1283, 1284, 1570, 1569, 1282, 2112, 1283, 1284, 2185,
	2394, 961, 1282, 2001, 1283, 1284, 2188, 1515, 1514, 2129,
	2195, 1608, 2272, 1469, 1301, 1473, 2342, 1297, 1965, 1298,
	1282, 1768, 1283, 1284, 1790, 2932, 2933, 2934, 1711, 1501,
	2154, 94, 2191, 1299, 1313, 1314, 1296, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1310, 1309, 1311, 1312, 943, 861,
	2205, 942, 2207, 1285, 2228, 87, 2179, 1281, 3346, 3286,
	3158, 1282, 1476, 1283, 1284, 3125, 2206, 2096, 2097, 2098,
	3053, 2243, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310,
	1309, 1311, 1312, 2947, 2944, 1285, 2925, 2211, 1643, 2210,
	2811, 2215, 2216, 2217, 1611, 2810, 1572, 1611, 2224, 1611,
	2071, 2225, 2226, 2227, 2763, 2128, 2193, 1285, 2723, 2719,
	2461, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2186, 2187, 1791, 1285, 2067, 2189, 87, 2061, 2204,
	2060, 1697, 1603, 1599, 1568, 2190, 1285, 2949, 113, 1644,
	1645, 1646, 1943, 2721, 1285, 2427, 187, 2249, 2250, 2251,
	2252, 2253, 1033, 2255, 187, 2890, 2891, 2212, 2258, 2259,
	1819, 2260, 2426, 2767, 2263, 629, 2264, 1817, 2808, 2331,
	2267, 2221, 3159, 101, 2271, 2317, 629, 2086, 2276, 2277,
	2278, 2279, 1978, 1285, 100, 1282, 99, 1283, 1284, 1285,
	2807, 2290, 2329, 2293, 2294, 94, 3352, 3398, 3396, 3372,
	187, 2296, 2298, 1285, 187, 2896, 3252, 1758, 2422, 3177,
	2427, 2303, 2304, 2305, 2306, 2307, 2895, 1282, 2254, 1283,
	1284, 2893, 2366, 2314, 2315, 2715, 2316, 2313, 1987, 2714,
	2318, 2713, 2629, 2440, 37, 2935, 2180, 2648, 2647, 1282,
	2330, 1283, 1284, 2386, 3304, 2332, 1984, 2334, 1467, 1463,
	2651, 1942, 2347, 1285, 1469, 2652, 1282, 2649, 1283, 1284,
	1639, 1477, 2650, 1464, 1285, 1992, 2312, 629, 1282, 1759,
	1283, 1284, 2311, 187, 1285, 3023, 1282, 3022, 1283, 1284,
	187, 2884, 2936, 2937, 2938, 2607, 2310, 2343, 1982, 1983,
	1466, 3210, 1465, 2319, 629, 1285, 2606, 3032, 2390, 1443,
	2653, 629, 2379, 2380, 2356, 2385, 1941, 1640, 1641, 1642,
	629, 2414, 2416, 644, 1285, 1282, 2452, 1283, 1284, 2344,
	2339, 1282, 2871, 1283, 1284, 3021, 1433, 2359, 1285, 2407,
	2870, 3034, 2299, 2300, 2874, 1282, 2309, 1283, 1284, 187,
	187, 187, 187, 187, 2476, 2619, 2621, 2308, 1710, 1467,
	1463, 2398, 2395, 2616, 2622, 2078, 2391, 2295, 1285, 847,
	187, 187, 2408, 2405, 1464, 875, 2474, 2438, 2375, 2378,
	2379, 2380, 2376, 876, 2377, 2381, 187, 2693, 2289, 2411,
	2419, 2431, 999, 1285, 998, 1282, 1839, 1283, 1284, 1460,
	1461, 1466, 2781, 1465, 2428, 629, 1282, 2288, 1283, 1284,
	1840, 2426, 1285, 92, 92, 2436, 1282, 2437, 1283, 1284,
	94, 2287, 1253, 881, 93, 93, 887, 2507, 887, 2429,
	2473, 2441, 2442, 2443, 2432, 2433, 2467, 1282, 121, 1283,
	1284, 101, 2876, 2487, 2488, 2489, 2490, 2491, 2462, 2463,
	94, 2286, 100, 1591, 99, 3411, 1282, 1285, 1283, 1284,
	2003, 2004, 2711, 94, 1771, 2500, 2472, 2183, 3325, 3227,
	1282, 3154, 1283, 1284, 2692, 2383, 2285, 1989, 2533, 2172,
	2508, 883, 884, 629, 1285, 2171, 2170, 2545, 2856, 2605,
	2516, 2199, 2496, 629, 2559, 2284, 2561, 2604, 101, 2515,
	1282, 99, 1283, 1284, 2540, 2541, 2542, 2543, 2544, 100,
	100, 99, 2572, 2573, 2574, 2575, 3198, 3197, 2505, 629,
	3180, 2506, 2499, 2549, 3040, 1282, 2590, 1283, 1284, 2517,
	2583, 3038, 2534, 187, 3037, 3030, 2945, 629, 2403, 2875,
	2283, 2873, 2585, 2724, 1282, 2113, 1283, 1284, 1586, 882,
	3029, 629, 2864, 2362, 3012, 1433, 3400, 3399, 629, 629,
	1433, 187, 187, 187, 187, 187, 1929, 2282, 1929, 101,
	2342, 2552, 1285, 187, 2246, 2587, 2588, 1976, 187, 1495,
	100, 187, 3399, 187, 2590, 2557, 187, 187, 187, 1282,
	1486, 1283, 1284, 2626, 3400, 2632, 2641, 106, 107, 3216,
	2632, 863, 2911, 1285, 873, 2584, 2635, 2586, 2661, 103,
	88, 1, 2610, 2915, 2589, 3335, 1282, 2609, 1283, 1284,
	1285, 1456, 2386, 591, 1611, 1611, 1966, 1285, 1441, 3373,
	2597, 187, 2567, 2568, 2569, 2570, 2571, 3331, 1285, 3332,
	1683, 1673, 2977, 2638, 629, 628, 2475, 1433, 2608, 1900,
	2601, 3155, 629, 2727, 2611, 2281, 2119, 187, 2943, 2076,
	2656, 2657, 2663, 864, 1285, 2664, 951, 146, 2623, 2624,
	2039, 187, 2040, 1285, 2747, 865, 3299, 2643, 2644, 110,
	2646, 1285, 2654, 2658, 2659, 2642, 2275, 2726, 2645, 187,
	2640, 909, 187, 109, 954, 1061, 2114, 1721, 2665, 2967,
	2412, 2048, 95, 2274, 1282, 2671, 1283, 1284, 1521, 1519,
	2273, 1520, 1518, 96, 1523, 1522, 2787, 2247, 2703, 2702,
	2701, 2270, 2823, 1762, 625, 2712, 2382, 619, 184, 1510,
	1487, 2836, 2755, 993, 581, 1282, 2700, 1283, 1284, 2754,
	2598, 2599, 2600, 2152, 587, 2725, 1327, 2269, 1757, 2078,
	2746, 2750, 1282, 2603, 1283, 1284, 2268, 2399, 2758, 1282,
	902, 1283, 1284, 895, 2266, 2759, 1977, 629, 2333, 901,
	1282, 2637, 1283, 1284, 2868, 2615, 2704, 2705, 2617, 2349,
	2620, 2613, 2776, 2775, 2774, 3209, 2778, 2777, 2783, 1285,
	3031, 3284, 2409, 1285, 187, 2785, 1282, 1483, 1283, 1284,
	2843, 2220, 1829, 2018, 2784, 1282, 2792, 1283, 1284, 2798,
	2799, 2801, 2803, 1282, 2838, 1283, 1284, 2789, 2790, 3007,
	2791, 2842, 1783, 2793, 2809, 2795, 653, 2797, 652, 2813,
	2814, 2815, 2816, 650, 2335, 2817, 2363, 2819, 2820, 2821,
	1288, 789, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2323, 187, 1496, 1285, 2374, 2372, 2371, 2181,
	2841, 2025, 2892, 2888, 3327, 2845, 2020, 2846, 2848, 2016,
	2851, 2853, 2262, 2341, 745, 662, 2261, 2859, 654, 646,
	744, 2860, 187, 2857, 2858, 2862, 743, 2908, 2861, 2753,
	3312, 2482, 2872, 2865, 2764, 2484, 2410, 2760, 1266, 1459,
	640, 187, 2897, 2877, 187, 187, 187, 922, 3160, 2779,
	2780, 3233, 2881, 2882, 629, 629, 2886, 2198, 2887, 2894,
	2805, 1282, 1458, 1283, 1284, 1282, 1858, 1283, 1284, 1859,
	3240, 2707, 2902, 2901, 2898, 2899, 2950, 2951, 2257, 2755,
	2903, 2904, 2909, 2910, 2735, 2961, 2754, 2716, 2458, 2106,
	63, 41, 3204, 3272, 742, 2971, 2972, 739, 629, 629,
	629, 629, 3009, 2926, 3010, 2928, 3011, 2579, 2580, 1286,
	3255, 2375, 2378, 2379, 2380, 2376, 2924, 2377, 2381, 3256,
	738, 2890, 2891, 3257, 1886, 635, 3348, 1282, 1257, 1283,
	1284, 889, 32, 31, 30, 2939, 29, 1333, 2940, 2941,
	2942, 28, 23, 22, 21, 20, 2973, 19, 25, 18,
	17, 2782, 16, 2738, 3368, 3410, 115, 50, 47, 45,
	123, 122, 48, 44, 2965, 1036, 42, 27, 26, 15,
	14, 13, 12, 11, 10, 2920, 2921, 2989, 9, 5,
	4, 35, 34, 33, 2996, 1260, 24, 2, 2445, 2108,
	187, 0, 2984, 0, 0, 0, 0, 0, 0, 2986,
	0, 0, 0, 2985, 0, 0, 0, 0, 0, 1433,
	0, 0, 0, 0, 629, 0, 629, 3026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2954, 2995, 3005,
	0, 2958, 2959, 2960, 1819, 0, 0, 0, 0, 2998,
	0, 1817, 0, 3055, 3047, 0, 0, 0, 0, 2632,
	0, 3006, 0, 0, 0, 0, 37, 0, 0, 3013,
	0, 2635, 0, 3027, 3049, 2635, 0, 0, 3036, 3035,
	0, 3051, 0, 0, 0, 0, 3043, 0, 629, 3045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 629, 0, 0, 0, 0, 0,
	3133, 0, 0, 0, 0, 0, 0, 629, 3059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3056, 3057,
	2914, 0, 0, 0, 0, 0, 3129, 0, 0, 3145,
	0, 3174, 3175, 0, 3137, 3131, 3130, 0, 1819, 0,
	3157, 0, 0, 0, 0, 1817, 1485, 3178, 0, 0,
	0, 629, 0, 3149, 0, 629, 629, 0, 0, 0,
	0, 0, 3150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 79, 0, 3146, 0, 0,
	0, 0, 0, 0, 629, 1573, 3153, 0, 0, 0,
	0, 3179, 0, 0, 0, 3181, 3208, 0, 0, 3184,
	0, 0, 0, 3163, 3164, 3165, 3220, 3166, 3167, 0,
	3202, 0, 3170, 3171, 0, 3173, 3176, 3201, 3199, 3200,
	0, 0, 0, 3219, 0, 0, 3217, 2635, 0, 0,
	0, 3185, 3187, 3188, 3190, 3192, 3194, 0, 0, 0,
	3223, 0, 0, 0, 0, 3140, 3141, 3142, 0, 0,
	0, 0, 860, 0, 79, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 860, 0, 3224, 0, 0, 0, 3225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 921, 629,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3236,
	0, 3244, 1723, 0, 0, 0, 3241, 3232, 0, 0,
	0, 0, 0, 0, 0, 0, 3239, 0, 37, 0,
	0, 0, 0, 0, 0, 0, 0, 629, 3250, 0,
	0, 0, 0, 0, 0, 0, 3260, 1433, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 3261, 0, 0,
	3262, 3270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 629, 0, 3246, 0, 0, 0,
	0, 0, 0, 3277, 3245, 0, 0, 2632, 0, 3285,
	3251, 3287, 0, 0, 0, 3282, 3313, 629, 0, 3314,
	0, 37, 3298, 3290, 0, 3295, 3157, 3300, 3292, 3267,
	3291, 187, 629, 3289, 0, 3268, 3269, 3294, 3293, 0,
	0, 0, 0, 0, 0, 0, 0, 3323, 0, 0,
	0, 0, 0, 0, 0, 0, 3334, 3280, 3326, 0,
	3344, 3339, 0, 0, 0, 0, 0, 0, 3313, 3353,
	0, 3314, 0, 0, 3351, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3307, 0, 0, 0,
	0, 0, 3362, 0, 0, 0, 0, 629, 0, 3315,
	3317, 3319, 0, 3367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 629, 0, 0, 3380,
	0, 3382, 1819, 0, 3347, 0, 0, 0, 0, 1817,
	3391, 3394, 3390, 0, 3393, 3397, 3395, 0, 0, 0,
	0, 0, 0, 3313, 3406, 0, 3314, 0, 0, 0,
	0, 0, 3412, 0, 0, 0, 0, 3418, 0, 3420,
	0, 0, 0, 3364, 0, 1778, 1779, 1780, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	3430, 3431, 3175, 3429, 0, 1817, 0, 3428, 0, 0,
	0, 0, 0, 0, 0, 3385, 3387, 3389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 1823, 1824,
	0, 0, 0, 887, 887, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3409, 0, 0, 0,
	0, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 0, 0, 3422, 3423, 1880, 1881, 1882, 1883, 1884,
	1885, 1887, 1891, 1892, 1893, 0, 1895, 1896, 1897, 0,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 0, 1927, 0, 1934, 1935, 887, 0,
	887, 887, 887, 887, 887, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 1096, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 860, 1323,
	1324, 1325, 0, 1328, 0, 1329, 1330, 1331, 0, 1334,
	1336, 1336, 0, 1336, 1340, 1340, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 0, 0,
	0, 1404, 0, 1406, 1407, 1408, 1409, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1340, 1340, 1340,
	1340, 1340, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 0, 0, 0, 0, 0, 121, 0, 143, 0,
	0, 0, 1439, 0, 0, 0, 0, 0, 0, 164,
	3077, 3079, 3078, 3093, 3094, 3095, 3096, 3097, 3098, 3099,
	699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 746, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 0, 0,
	0, 860, 0, 0, 0, 860, 0, 161, 0, 162,
	0, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 153, 152, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2229, 2230, 2231, 2232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 913, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 147, 128,
	150, 135, 127, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 137, 132, 133, 134, 138,
	0, 887, 887, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 3088, 3089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 678, 766, 680, 763, 764,
	0, 676, 679, 765, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 697,
	698, 3076, 3080, 3081, 3082, 3090, 3091, 3092, 3100, 3102,
	727, 3101, 3103, 3104, 3105, 3108, 3109, 3110, 3111, 3106,
	3107, 3112, 3060, 3064, 3061, 3062, 3063, 3075, 3065, 3066,
	3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3113, 3114,
	3115, 3116, 3117, 3118, 3083, 3087, 3086, 3084, 3085, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 767, 0, 768, 0, 0, 772, 0, 0, 0,
	774, 773, 0, 775, 741, 740, 0, 0, 769, 770,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 1096, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2512, 0, 157, 3119, 3120, 3121,
	3122, 0, 0, 169, 887, 0, 0, 0, 0, 0,
	0, 0, 2535, 2536, 0, 0, 2538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2546, 2547,
	2548, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	2553, 2554, 0, 0, 0, 2555, 2556, 0, 0, 1903,
	2558, 0, 0, 2560, 0, 0, 2562, 2563, 2564, 2565,
	0, 0, 0, 0, 2566, 1903, 1903, 1903, 1903, 1903,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 887, 0, 176, 178, 179,
	180, 0, 2591, 2592, 2593, 2594, 2595, 2596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 3366, 0, 0, 0, 2451,
	0, 1098, 0, 1098, 1098, 1538, 2627, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 1256, 1258, 0, 0,
	0, 0, 0, 2660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2019, 0, 154, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 162, 0, 0, 0, 0,
	747, 0, 0, 2722, 0, 0, 0, 0, 0, 0,
	0, 1594, 1595, 153, 152, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 577, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 0, 921, 0,
	182, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 2804, 121, 0, 143, 0, 0, 0,
	0, 0, 0, 888, 0, 888, 2812, 164, 0, 0,
	0, 0, 0, 577, 147, 1596, 150, 0, 1593, 0,
	148, 149, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 154, 0,
	1539, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1447, 1448, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1594, 1595, 153, 152, 181, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 1552, 1555,
	1556, 1557, 1558, 1559, 1560, 1511, 1561, 1562, 1563, 1564,
	1565, 1540, 1541, 1542, 1543, 1524, 1525, 1553, 0, 1527,
	0, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	0, 0, 1537, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 0, 0, 0, 0, 0, 0, 2200, 0, 0,
	913, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	1619, 0, 1619, 2946, 1619, 1619, 0, 1628, 1619, 1619,
	1619, 1619, 1619, 0, 0, 0, 147, 1596, 150, 0,
	1593, 0, 148, 149, 913, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 2970, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 2987, 0, 2988, 0, 0, 0,
	0, 2991, 2992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2997, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 144,
	0, 0, 145, 0, 0, 0, 0, 0, 3014, 0,
	0, 3015, 0, 3016, 3017, 2301, 3018, 0, 3019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 156, 0, 0, 0, 0, 169,
	0, 0, 0, 3044, 0, 0, 2328, 0, 0, 0,
	0, 0, 0, 0, 3052, 0, 0, 3054, 0, 0,
	0, 0, 0, 0, 860, 0, 0, 0, 0, 0,
	0, 3058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 2367, 2368, 0, 0, 3126,
	0, 0, 0, 0, 2387, 0, 2388, 2389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 1098, 0, 0, 121, 0, 0, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 577, 0, 577, 0, 0, 577,
	0, 0, 0, 3207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 2465, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2406, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 162,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 1856, 1857, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3263, 0, 0, 3264, 0, 3265, 0, 181, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 2576, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 39,
	40, 80, 0, 1491, 0, 1434, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 913, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	2636, 0, 79, 0, 0, 2019, 2019, 2019, 2019, 2019,
	3345, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 2387, 860, 56, 0, 0, 2019, 165, 0,
	2019, 0, 0, 0, 0, 0, 87, 171, 0, 870,
	3359, 0, 3360, 920, 3361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 1538, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	913, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2752, 0, 0, 0, 0, 0, 0,
	3407, 0, 3408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 913, 0, 0, 0, 0, 1813, 0,
	0, 1434, 1813, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2786, 156, 0, 0, 0, 1434, 0,
	0, 1434, 0, 1434, 577, 0, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	1526, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 1720, 0, 73, 74, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 577, 0, 169, 0, 2192, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 1744, 577,
	577, 577, 577, 577, 577, 577, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 1539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2907, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 157, 0, 0, 176, 178, 179,
	180, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1552, 1555, 1556, 1557, 1558, 1559, 1560, 0, 1561,
	1562, 1563, 1564, 1565, 1540, 1541, 1542, 1543, 1524, 1525,
	1553, 0, 1527, 0, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 177, 0, 1537, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 1098, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 2336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3020, 0, 3024, 3025, 888, 0, 0, 0, 0, 0,
	888, 888, 0, 0, 0, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2636, 0, 79, 0, 2636,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 1720, 888, 888, 888,
	888, 888, 0, 0, 0, 0, 1991, 0, 3138, 0,
	0, 0, 0, 2459, 0, 0, 0, 0, 0, 0,
	0, 0, 2464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 1720, 0, 577, 0, 577, 0,
	577, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2636, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 0, 0,
	0, 0, 0, 0, 0, 2577, 0, 0, 0, 0,
	0, 3234, 0, 0, 0, 1098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1098, 0, 0, 0, 0, 0, 0,
	2639, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3281, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 0, 0,
	0, 0, 577, 577, 0, 0, 577, 0, 2184, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 0, 87,
	0, 0, 577, 0, 0, 790, 798, 799, 800, 801,
	802, 791, 793, 0, 0, 0, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 913, 0, 577, 795,
	803, 804, 0, 0, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2756, 2757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2837,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 790, 798, 799, 800, 801, 802, 791, 793,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 888, 888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 2756, 2757, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 1670, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 0, 0, 1933,
	577, 0, 798, 799, 577, 0, 1991, 1991, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 766, 0, 763, 764, 0, 0,
	0, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	2978, 2979, 2980, 2981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	2444, 0, 0, 0, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	577, 577, 577, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 577, 0, 0, 0, 0, 3048, 0, 3050, 0,
	0, 0, 0, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3195, 0, 0, 0, 3195, 3195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 1434, 0, 0, 0, 0,
	1434, 577, 577, 577, 577, 577, 0, 0, 0, 0,
	0, 0, 0, 2655, 0, 0, 0, 0, 577, 0,
	0, 1670, 0, 577, 0, 0, 577, 2666, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1434, 0, 0,
	0, 1991, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 3274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3274, 0, 0,
	0, 0, 0, 0, 0, 798, 799, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 2837, 0, 3329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 577, 577, 577, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1434, 0, 0,
	374, 0, 0, 1232, 1217, 489, 0, 1160, 1235, 1129,
	1148, 1245, 1151, 1154, 1196, 1108, 1174, 393, 1145, 1101,
	1133, 1103, 1140, 1104, 1131, 1162, 255, 1128, 1219, 1178,
	1234, 346, 252, 1110, 1134, 407, 1150, 194, 1198, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 1241, 350, 1184, 0, 469, 378, 0,
	0, 1670, 1164, 1223, 1172, 1210, 1159, 1197, 1118, 1183,
	1236, 1146, 1193, 1237, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 630, 631, 632, 0, 3301,
	0, 3302, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 1142, 1190, 1231, 1143, 1192, 250, 303, 257, 249,
	494, 1242, 1222, 1107, 1171, 1230, 0, 0, 217, 1233,
	1166, 0, 1195, 0, 1248, 1102, 1186, 0, 1105, 1109,
	1244, 1226, 1137, 260, 0, 0, 0, 0, 0, 0,
	0, 1163, 1173, 1207, 1211, 1157, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 1182, 0, 0, 0, 1114,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 1117, 0,
	1136, 1208, 0, 1100, 282, 1111, 379, 242, 0, 1215,
	1225, 1158, 534, 1229, 1156, 1155, 1202, 1115, 1221, 1149,
	345, 1113, 312, 189, 213, 0, 1147, 389, 434, 446,
	1220, 1132, 1141, 240, 1139, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 1181, 1200, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 1112, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 1127, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 1216, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 1205, 1247, 402,
	445, 228, 515, 468, 1122, 1126, 1120, 1187, 1121, 1176,
	1177, 1123, 1238, 1239, 1240, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 1209, 1116, 0, 1124, 1125, 1218,
	1227, 1228, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	1180, 188, 209, 348, 1243, 427, 273, 550, 525, 520,
	195, 211, 1119, 247, 1130, 1138, 0, 1144, 1152, 1153,
	1165, 1167, 1168, 1169, 1170, 1188, 1189, 1191, 1199, 1201,
	1204, 1206, 1213, 1224, 1246, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 1179, 1185, 359,
	266, 289, 302, 1194, 524, 474, 215, 439, 275, 238,
	1212, 1214, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 1175, 1203, 355, 490,
	491, 298, 374, 0, 0, 1232, 1217, 489, 0, 1160,
	1235, 1129, 1148, 1245, 1151, 1154, 1196, 1108, 1174, 393,
	1145, 1101, 1133, 1103, 1140, 1104, 1131, 1162, 255, 1128,
	1219, 1178, 1234, 346, 252, 1110, 1134, 407, 1150, 194,
	1198, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 1241, 350, 1184, 0, 469,
	378, 0, 0, 0, 1164, 1223, 1172, 1210, 1159, 1197,
	1118, 1183, 1236, 1146, 1193, 1237, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 1142, 1190, 1231, 1143, 1192, 250, 303,
	257, 249, 494, 1242, 1222, 1107, 1171, 1230, 0, 0,
	217, 1233, 1166, 0, 1195, 0, 1248, 1102, 1186, 0,
	1105, 1109, 1244, 1226, 1137, 260, 0, 0, 0, 0,
	0, 0, 0, 1163, 1173, 1207, 1211, 1157, 0, 0,
	0, 0, 0, 2625, 0, 1135, 0, 1182, 0, 0,
	0, 1114, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1161, 0, 0, 0, 0,
	1117, 0, 1136, 1208, 0, 1100, 282, 1111, 379, 242,
	0, 1215, 1225, 1158, 534, 1229, 1156, 1155, 1202, 1115,
	1221, 1149, 345, 1113, 312, 189, 213, 0, 1147, 389,
	434, 446, 1220, 1132, 1141, 240, 1139, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 1181, 1200, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 1112, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 1127, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	1216, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 1205,
	1247, 402, 445, 228, 515, 468, 1122, 1126, 1120, 1187,
	1121, 1176, 1177, 1123, 1238, 1239, 1240, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 1209, 1116, 0, 1124,
	1125, 1218, 1227, 1228, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 1180, 188, 209, 348, 1243, 427, 273, 550,
	525, 520, 195, 211, 1119, 247, 1130, 1138, 0, 1144,
	1152, 1153, 1165, 1167, 1168, 1169, 1170, 1188, 1189, 1191,
	1199, 1201, 1204, 1206, 1213, 1224, 1246, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 1179,
	1185, 359, 266, 289, 302, 1194, 524, 474, 215, 439,
	275, 238, 1212, 1214, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 1175, 1203,
	355, 490, 491, 298, 374, 0, 0, 1232, 1217, 489,
	0, 1160, 1235, 1129, 1148, 1245, 1151, 1154, 1196, 1108,
	1174, 393, 1145, 1101, 1133, 1103, 1140, 1104, 1131, 1162,
	255, 1128, 1219, 1178, 1234, 346, 252, 1110, 1134, 407,
	1150, 194, 1198, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 1241, 350, 1184,
	0, 469, 378, 0, 0, 0, 1164, 1223, 1172, 1210,
	1159, 1197, 1118, 1183, 1236, 1146, 1193, 1237, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 1944,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 1142, 1190, 1231, 1143, 1192,
	250, 303, 257, 249, 494, 1242, 1222, 1107, 1171, 1230,
	0, 0, 217, 1233, 1166, 0, 1195, 0, 1248, 1102,
	1186, 0, 1105, 1109, 1244, 1226, 1137, 260, 0, 0,
	0, 0, 0, 0, 0, 1163, 1173, 1207, 1211, 1157,
	0, 0, 0, 0, 0, 2007, 0, 1135, 0, 1182,
	0, 0, 0, 1114, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 1117, 0, 1136, 1208, 0, 1100, 282, 1111,
	379, 242, 0, 1215, 1225, 1158, 534, 1229, 1156, 1155,
	1202, 1115, 1221, 1149, 345, 1113, 312, 189, 213, 0,
	1147, 389, 434, 446, 1220, 1132, 1141, 240, 1139, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 1181,
	1200, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 1112, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 1127,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 1216, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 1205, 1247, 402, 445, 228, 515, 468, 1122, 1126,
	1120, 1187, 1121, 1176, 1177, 1123, 1238, 1239, 1240, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 1209, 1116,
	0, 1124, 1125, 1218, 1227, 1228, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 1180, 188, 209, 348, 1243, 427,
	273, 550, 525, 520, 195, 211, 1119, 247, 1130, 1138,
	0, 1144, 1152, 1153, 1165, 1167, 1168, 1169, 1170, 1188,
	1189, 1191, 1199, 1201, 1204, 1206, 1213, 1224, 1246, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 1179, 1185, 359, 266, 289, 302, 1194, 524, 474,
	215, 439, 275, 238, 1212, 1214, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	1175, 1203, 355, 490, 491, 298, 374, 0, 0, 1232,
	1217, 489, 0, 1160, 1235, 1129, 1148, 1245, 1151, 1154,
	1196, 1108, 1174, 393, 1145, 1101, 1133, 1103, 1140, 1104,
	1131, 1162, 255, 1128, 1219, 1178, 1234, 346, 252, 1110,
	1134, 407, 1150, 194, 1198, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 1241,
	350, 1184, 0, 469, 378, 0, 0, 0, 1164, 1223,
	1172, 1210, 1159, 1197, 1118, 1183, 1236, 1146, 1193, 1237,
	305, 235, 307, 193, 390, 470, 271, 0, 87, 0,
	0, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 1142, 1190, 1231,
	1143, 1192, 250, 303, 257, 249, 494, 1242, 1222, 1107,
	1171, 1230, 0, 0, 217, 1233, 1166, 0, 1195, 0,
	1248, 1102, 1186, 0, 1105, 1109, 1244, 1226, 1137, 260,
	0, 0, 0, 0, 0, 0, 0, 1163, 1173, 1207,
	1211, 1157, 0, 0, 0, 0, 0, 0, 0, 1135,
	0, 1182, 0, 0, 0, 1114, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 1117, 0, 1136, 1208, 0, 1100,
	282, 1111, 379, 242, 0, 1215, 1225, 1158, 534, 1229,
	1156, 1155, 1202, 1115, 1221, 1149, 345, 1113, 312, 189,
	213, 0, 1147, 389, 434, 446, 1220, 1132, 1141, 240,
	1139, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 1181, 1200, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 1112, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 1127, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 1216, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 1205, 1247, 402, 445, 228, 515, 468,
	1122, 1126, 1120, 1187, 1121, 1176, 1177, 1123, 1238, 1239,
	1240, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	1209, 1116, 0, 1124, 1125, 1218, 1227, 1228, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 1180, 188, 209, 348,
	1243, 427, 273, 550, 525, 520, 195, 211, 1119, 247,
	1130, 1138, 0, 1144, 1152, 1153, 1165, 1167, 1168, 1169,
	1170, 1188, 1189, 1191, 1199, 1201, 1204, 1206, 1213, 1224,
	1246, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 1179, 1185, 359, 266, 289, 302, 1194,
	524, 474, 215, 439, 275, 238, 1212, 1214, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 1175, 1203, 355, 490, 491, 298, 374, 0,
	0, 1232, 1217, 489, 0, 1160, 1235, 1129, 1148, 1245,
	1151, 1154, 1196, 1108, 1174, 393, 1145, 1101, 1133, 1103,
	1140, 1104, 1131, 1162, 255, 1128, 1219, 1178, 1234, 346,
	252, 1110, 1134, 407, 1150, 194, 1198, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 1241, 350, 1184, 0, 469, 378, 0, 0, 0,
	1164, 1223, 1172, 1210, 1159, 1197, 1118, 1183, 1236, 1146,
	1193, 1237, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 1142,
	1190, 1231, 1143, 1192, 250, 303, 257, 249, 494, 1242,
	1222, 1107, 1171, 1230, 0, 0, 217, 1233, 1166, 0,
	1195, 0, 1248, 1102, 1186, 0, 1105, 1109, 1244, 1226,
	1137, 260, 0, 0, 0, 0, 0, 0, 0, 1163,
	1173, 1207, 1211, 1157, 0, 0, 0, 0, 0, 0,
	0, 1135, 0, 1182, 0, 0, 0, 1114, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 0, 0, 0, 0, 1117, 0, 1136, 1208,
	0, 1100, 282, 1111, 379, 242, 0, 1215, 1225, 1158,
	534, 1229, 1156, 1155, 1202, 1115, 1221, 1149, 345, 1113,
	312, 189, 213, 0, 1147, 389, 434, 446, 1220, 1132,
	1141, 240, 1139, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 1181, 1200, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 1112,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 1127, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 1216, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 1205, 1247, 402, 445, 228,
	515, 468, 1122, 1126, 1120, 1187, 1121, 1176, 1177, 1123,
	1238, 1239, 1240, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 1209, 1116, 0, 1124, 1125, 1218, 1227, 1228,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 1180, 188,
	209, 348, 1243, 427, 273, 550, 525, 520, 195, 211,
	1119, 247, 1130, 1138, 0, 1144, 1152, 1153, 1165, 1167,
	1168, 1169, 1170, 1188, 1189, 1191, 1199, 1201, 1204, 1206,
	1213, 1224, 1246, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 1179, 1185, 359, 266, 289,
	302, 1194, 524, 474, 215, 439, 275, 238, 1212, 1214,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 1175, 1203, 355, 490, 491, 298,
	374, 0, 0, 1232, 1217, 489, 0, 1160, 1235, 1129,
	1148, 1245, 1151, 1154, 1196, 1108, 1174, 393, 1145, 1101,
	1133, 1103, 1140, 1104, 1131, 1162, 255, 1128, 1219, 1178,
	1234, 346, 252, 1110, 1134, 407, 1150, 194, 1198, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 1241, 350, 1184, 0, 469, 378, 0,
	0, 0, 1164, 1223, 1172, 1210, 1159, 1197, 1118, 1183,
	1236, 1146, 1193, 1237, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 1944, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 1142, 1190, 1231, 1143, 1192, 250, 303, 257, 249,
	494, 1242, 1222, 1107, 1171, 1230, 0, 0, 217, 1233,
	1166, 0, 1195, 0, 1248, 1102, 1186, 0, 1105, 1109,
	1244, 1226, 1137, 260, 0, 0, 0, 0, 0, 0,
	0, 1163, 1173, 1207, 1211, 1157, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 1182, 0, 0, 0, 1114,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 1117, 0,
	1136, 1208, 0, 1100, 282, 1111, 379, 242, 0, 1215,
	1225, 1158, 534, 1229, 1156, 1155, 1202, 1115, 1221, 1149,
	345, 1113, 312, 189, 213, 0, 1147, 389, 434, 446,
	1220, 1132, 1141, 240, 1139, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 1181, 1200, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 1112, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 1127, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 1216, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 1205, 1247, 402,
	445, 228, 515, 468, 1122, 1126, 1120, 1187, 1121, 1176,
	1177, 1123, 1238, 1239, 1240, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 1209, 1116, 0, 1124, 1125, 1218,
	1227, 1228, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	1180, 188, 209, 348, 1243, 427, 273, 550, 525, 520,
	195, 211, 1119, 247, 1130, 1138, 0, 1144, 1152, 1153,
	1165, 1167, 1168, 1169, 1170, 1188, 1189, 1191, 1199, 1201,
	1204, 1206, 1213, 1224, 1246, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 1179, 1185, 359,
	266, 289, 302, 1194, 524, 474, 215, 439, 275, 238,
	1212, 1214, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 1175, 1203, 355, 490,
	491, 298, 374, 0, 0, 1232, 1217, 489, 0, 1160,
	1235, 1129, 1148, 1245, 1151, 1154, 1196, 1108, 1174, 393,
	1145, 1101, 1133, 1103, 1140, 1104, 1131, 1162, 255, 1128,
	1219, 1178, 1234, 346, 252, 1110, 1134, 407, 1150, 194,
	1198, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 1241, 350, 1184, 0, 469,
	378, 0, 0, 0, 1164, 1223, 1172, 1210, 1159, 1197,
	1118, 1183, 1236, 1146, 1193, 1237, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 1142, 1190, 1231, 1143, 1192, 250, 303,
	257, 249, 494, 1242, 1222, 1107, 1171, 1230, 0, 0,
	217, 1233, 1166, 0, 1195, 0, 1248, 1102, 1186, 0,
	1105, 1109, 1244, 1226, 1137, 260, 0, 0, 0, 0,
	0, 0, 0, 1163, 1173, 1207, 1211, 1157, 0, 0,
	0, 0, 0, 2667, 0, 1135, 0, 1182, 0, 0,
	0, 1114, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1161, 0, 0, 0, 0,
	1117, 0, 1136, 1208, 0, 1100, 282, 1111, 379, 242,
	0, 1215, 1225, 1158, 534, 1229, 1156, 1155, 1202, 1115,
	1221, 1149, 345, 1113, 312, 189, 213, 0, 1147, 389,
	434, 446, 1220, 1132, 1141, 240, 1139, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 1181, 1200, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 1112, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 1127, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	1216, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 1205,
	1247, 402, 445, 228, 515, 468, 1122, 1126, 1120, 1187,
	1121, 1176, 1177, 1123, 1238, 1239, 1240, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 1209, 1116, 0, 1124,
	1125, 1218, 1227, 1228, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 1180, 188, 209, 348, 1243, 427, 273, 550,
	525, 520, 195, 211, 1119, 247, 1130, 1138, 0, 1144,
	1152, 1153, 1165, 1167, 1168, 1169, 1170, 1188, 1189, 1191,
	1199, 1201, 1204, 1206, 1213, 1224, 1246, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 1179,
	1185, 359, 266, 289, 302, 1194, 524, 474, 215, 439,
	275, 238, 1212, 1214, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 1175, 1203,
	355, 490, 491, 298, 374, 0, 0, 1232, 1217, 489,
	0, 1160, 1235, 1129, 1148, 1245, 1151, 1154, 1196, 1108,
	1174, 393, 1145, 1101, 1133, 1103, 1140, 1104, 1131, 1162,
	255, 1128, 1219, 1178, 1234, 346, 252, 1110, 1134, 407,
	1150, 194, 1198, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 1241, 350, 1184,
	0, 469, 378, 0, 0, 0, 1164, 1223, 1172, 1210,
	1159, 1197, 1118, 1183, 1236, 1146, 1193, 1237, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 1142, 1190, 1231, 1143, 1192,
	250, 303, 257, 249, 494, 1242, 1222, 1107, 1171, 1230,
	0, 0, 217, 1233, 1166, 0, 1195, 0, 1248, 1102,
	1186, 0, 1105, 1109, 1244, 1226, 1137, 260, 0, 0,
	0, 0, 0, 0, 0, 1163, 1173, 1207, 1211, 1157,
	0, 0, 0, 0, 0, 0, 0, 1135, 0, 1182,
	0, 0, 0, 1114, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 1117, 0, 1136, 1208, 0, 1100, 282, 1111,
	379, 242, 0, 1215, 1225, 1158, 534, 1229, 1156, 1155,
	1202, 1115, 1221, 1149, 345, 1113, 312, 189, 213, 0,
	1147, 389, 434, 446, 1220, 1132, 1141, 240, 1139, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 1181,
	1200, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 1112, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 1127,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 1216, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 1205, 1247, 402, 445, 228, 515, 468, 1122, 1126,
	1120, 1187, 1121, 1176, 1177, 1123, 1238, 1239, 1240, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 1209, 1116,
	0, 1124, 1125, 1218, 1227, 1228, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 1180, 188, 209, 348, 1243, 427,
	273, 550, 525, 520, 195, 211, 1119, 247, 1130, 1138,
	0, 1144, 1152, 1153, 1165, 1167, 1168, 1169, 1170, 1188,
	1189, 1191, 1199, 1201, 1204, 1206, 1213, 1224, 1246, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 1179, 1185, 359, 266, 289, 302, 1194, 524, 474,
	215, 439, 275, 238, 1212, 1214, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	1175, 1203, 355, 490, 491, 298, 374, 0, 0, 0,
	0, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 1937, 0, 663, 0,
	0, 0, 255, 668, 0, 0, 0, 346, 252, 0,
	1938, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 674,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 87, 0,
	0, 786, 757, 758, 790, 798, 799, 800, 801, 802,
	791, 793, 0, 0, 226, 792, 233, 701, 703, 702,
	717, 718, 719, 720, 721, 722, 723, 699, 795, 803,
	804, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 645, 660, 0, 673, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 886, 0, 0,
	0, 751, 0, 659, 0, 0, 667, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 750, 0, 0, 534, 0,
	0, 748, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 712,
	713, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	762, 749, 678, 766, 680, 763, 764, 675, 676, 679,
	765, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	752, 666, 665, 0, 672, 0, 697, 698, 700, 704,
	705, 706, 714, 715, 716, 724, 726, 727, 725, 728,
	729, 730, 733, 734, 735, 736, 731, 732, 737, 681,
	685, 682, 683, 684, 696, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 776, 777, 778, 779, 780,
	781, 707, 711, 710, 708, 709, 664, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 767, 247,
	768, 0, 0, 772, 0, 0, 0, 774, 773, 0,
	775, 741, 740, 0, 0, 769, 770, 0, 771, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 782, 783, 784, 785, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 797, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 663, 0, 0, 0, 255,
	668, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 674, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 87, 0, 0, 786, 757,
	758, 790, 798, 799, 800, 801, 802, 791, 793, 0,
	0, 226, 792, 233, 701, 703, 702, 717, 718, 719,
	720, 721, 722, 723, 699, 795, 803, 804, 0, 250,
	303, 257, 249, 494, 0, 0, 1888, 1889, 1890, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 645,
	660, 0, 673, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 0, 0, 0, 0, 751, 0,
	659, 0, 0, 667, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 750, 0, 0, 534, 0, 0, 748, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 712, 713, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 762, 749, 678,
	766, 680, 763, 764, 675, 676, 679, 765, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 752, 666, 665,
	0, 672, 0, 697, 698, 700, 704, 705, 706, 714,
	715, 716, 724, 726, 727, 725, 728, 729, 730, 733,
	734, 735, 736, 731, 732, 737, 681, 685, 682, 683,
	684, 696, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 776, 777, 778, 779, 780, 781, 707, 711,
	710, 708, 709, 664, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 767, 247, 768, 0, 0,
	772, 0, 0, 0, 774, 773, 0, 775, 741, 740,
	0, 0, 769, 770, 0, 771, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 782, 783, 784, 785, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 797, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 663, 0, 0, 0, 255, 668, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 674, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 670, 671, 0, 0, 0, 0,
	0, 0, 2034, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 87, 0, 0, 786, 757, 758, 790, 798,
	799, 800, 801, 802, 791, 793, 0, 0, 226, 792,
	233, 701, 703, 702, 717, 718, 719, 720, 721, 722,
	723, 699, 795, 803, 804, 2035, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 645, 660, 0, 673,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 0, 0, 0, 0, 751, 0, 659, 0, 0,
	667, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 750,
	0, 0, 534, 0, 0, 748, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 712, 713, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 762, 749, 678, 766, 680, 763,
	764, 675, 676, 679, 765, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 752, 666, 665, 0, 672, 0,
	697, 698, 700, 704, 705, 706, 714, 715, 716, 724,
	726, 727, 725, 728, 729, 730, 733, 734, 735, 736,
	731, 732, 737, 681, 685, 682, 683, 684, 696, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 776,
	777, 778, 779, 780, 781, 707, 711, 710, 708, 709,
	664, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 767, 247, 768, 0, 0, 772, 0, 0,
	0, 774, 773, 0, 775, 741, 740, 0, 0, 769,
	770, 0, 771, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 782, 783,
	784, 785, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	797, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 0, 355, 490,
	491, 298, 374, 0, 0, 0, 78, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 663, 0, 0, 0, 255, 668,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 674, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 87, 0, 0, 786, 757, 758,
	790, 798, 799, 800, 801, 802, 791, 793, 0, 0,
	226, 792, 233, 701, 703, 702, 717, 718, 719, 720,
	721, 722, 723, 699, 795, 803, 804, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 645, 660,
	0, 673, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 0, 0, 0, 0, 751, 0, 659,
	0, 0, 667, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 750, 0, 0, 534, 0, 0, 748, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 712, 713, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 762, 749, 678, 766,
	680, 763, 764, 675, 676, 679, 765, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 752, 666, 665, 0,
	672, 0, 697, 698, 700, 704, 705, 706, 714, 715,
	716, 724, 726, 727, 725, 728, 729, 730, 733, 734,
	735, 736, 731, 732, 737, 681, 685, 682, 683, 684,
	696, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 776, 777, 778, 779, 780, 781, 707, 711, 710,
	708, 709, 664, 188, 209, 348, 86, 427, 273, 550,
	525, 520, 195, 211, 767, 247, 768, 0, 0, 772,
	0, 0, 0, 774, 773, 0, 775, 741, 740, 0,
	0, 769, 770, 0, 771, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	782, 783, 784, 785, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 797, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 663, 0, 0, 0, 255, 668, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 674, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 87, 0, 0, 786, 757, 758, 790, 798, 799,
	800, 801, 802, 791, 793, 0, 0, 226, 792, 233,
	701, 703, 702, 717, 718, 719, 720, 721, 722, 723,
	699, 795, 803, 804, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 645, 660, 0, 673, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	0, 0, 0, 0, 751, 0, 659, 0, 0, 667,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 750, 0,
	0, 534, 0, 0, 748, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 3288, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 712, 713, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 762, 749, 678, 766, 680, 763, 764,
	675, 676, 679, 765, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 752, 666, 665, 0, 672, 0, 697,
	698, 700, 704, 705, 706, 714, 715, 716, 724, 726,
	727, 725, 728, 729, 730, 733, 734, 735, 736, 731,
	732, 737, 681, 685, 682, 683, 684, 696, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 776, 777,
	778, 779, 780, 781, 707, 711, 710, 708, 709, 664,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 767, 247, 768, 0, 0, 772, 0, 0, 0,
	774, 773, 0, 775, 741, 740, 0, 0, 769, 770,
	0, 771, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 782, 783, 784,
	785, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 797,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 663, 0,
	0, 0, 255, 668, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 674,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 87, 0,
	1469, 786, 757, 758, 790, 798, 799, 800, 801, 802,
	791, 793, 0, 0, 226, 792, 233, 701, 703, 702,
	717, 718, 719, 720, 721, 722, 723, 699, 795, 803,
	804, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 645, 660, 0, 673, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 0, 0, 0,
	0, 751, 0, 659, 0, 0, 667, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 750, 0, 0, 534, 0,
	0, 748, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 712,
	713, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	762, 749, 678, 766, 680, 763, 764, 675, 676, 679,
	765, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	752, 666, 665, 0, 672, 0, 697, 698, 700, 704,
	705, 706, 714, 715, 716, 724, 726, 727, 725, 728,
	729, 730, 733, 734, 735, 736, 731, 732, 737, 681,
	685, 682, 683, 684, 696, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 776, 777, 778, 779, 780,
	781, 707, 711, 710, 708, 709, 664, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 767, 247,
	768, 0, 0, 772, 0, 0, 0, 774, 773, 0,
	775, 741, 740, 0, 0, 769, 770, 0, 771, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 782, 783, 784, 785, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 797, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 663, 0, 0, 0, 255,
	668, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 674, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 87, 0, 0, 786, 757,
	758, 790, 798, 799, 800, 801, 802, 791, 793, 0,
	0, 226, 792, 233, 701, 703, 702, 717, 718, 719,
	720, 721, 722, 723, 699, 795, 803, 804, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 645,
	660, 0, 673, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 886, 0, 0, 0, 751, 0,
	659, 0, 0, 667, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 750, 0, 0, 534, 0, 0, 748, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 712, 713, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 762, 749, 678,
	766, 680, 763, 764, 675, 676, 679, 765, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 752, 666, 665,
	0, 672, 0, 697, 698, 700, 704, 705, 706, 714,
	715, 716, 724, 726, 727, 725, 728, 729, 730, 733,
	734, 735, 736, 731, 732, 737, 681, 685, 682, 683,
	684, 696, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 776, 777, 778, 779, 780, 781, 707, 711,
	710, 708, 709, 664, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 767, 247, 768, 0, 0,
	772, 0, 0, 0, 774, 773, 0, 775, 741, 740,
	0, 0, 769, 770, 0, 771, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 782, 783, 784, 785, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 797, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 663, 0, 0, 0, 255, 668, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 674, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 87, 0, 0, 786, 757, 758, 790, 798,
	799, 800, 801, 802, 791, 793, 0, 0, 226, 792,
	233, 701, 703, 702, 717, 718, 719, 720, 721, 722,
	723, 699, 795, 803, 804, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 645, 660, 0, 673,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 0, 0, 0, 0, 751, 0, 659, 0, 0,
	667, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 750,
	0, 0, 534, 0, 0, 748, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 712, 713, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 762, 749, 678, 766, 680, 763,
	764, 675, 676, 679, 765, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 752, 666, 665, 0, 672, 0,
	697, 698, 700, 704, 705, 706, 714, 715, 716, 724,
	726, 727, 725, 728, 729, 730, 733, 734, 735, 736,
	731, 732, 737, 681, 685, 682, 683, 684, 696, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 776,
	777, 778, 779, 780, 781, 707, 711, 710, 708, 709,
	664, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 767, 247, 768, 0, 0, 772, 0, 0,
	0, 774, 773, 0, 775, 741, 740, 0, 0, 769,
	770, 0, 771, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 782, 783,
	784, 785, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	797, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 663,
	0, 0, 0, 255, 668, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	674, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 87,
	0, 0, 786, 757, 758, 790, 798, 799, 800, 801,
	802, 791, 793, 0, 0, 226, 792, 233, 701, 703,
	702, 717, 718, 719, 720, 721, 722, 723, 699, 795,
	803, 804, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 673, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 0, 0,
	0, 0, 751, 0, 659, 0, 0, 667, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 750, 0, 0, 534,
	0, 0, 748, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	712, 713, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 762, 749, 678, 766, 680, 763, 764, 675, 676,
	679, 765, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 752, 666, 665, 0, 672, 0, 697, 698, 700,
	704, 705, 706, 714, 715, 716, 724, 726, 727, 725,
	728, 729, 730, 733, 734, 735, 736, 731, 732, 737,
	681, 685, 682, 683, 684, 696, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 776, 777, 778, 779,
	780, 781, 707, 711, 710, 708, 709, 664, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 767,
	247, 768, 0, 0, 772, 0, 0, 0, 774, 773,
	0, 775, 741, 740, 0, 0, 769, 770, 0, 771,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 782, 783, 784, 785, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 797, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 958, 534, 0, 0, 0,
	0, 0, 955, 956, 345, 916, 312, 189, 213, 949,
	953, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 1488, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 1490, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 630, 631, 632, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 1282, 0, 1283, 1284, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 0, 355,
	490, 491, 298, 374, 0, 0, 0, 78, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 87, 0, 1469, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 86, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	0, 355, 490, 491, 298, 374, 0, 0, 0, 78,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 87, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 86,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 1435, 0, 0,
	1429, 1432, 0, 0, 0, 0, 1428, 1431, 0, 0,
	226, 1427, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	916, 312, 189, 213, 914, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	1469, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 3196, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 630, 631,
	632, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 630, 631, 632, 0, 2352,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 630, 631, 632, 0, 0, 0, 2337, 0,
	0, 0, 2338, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 1513, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 630,
	631, 632, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 374, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 630, 631, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 3322, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 374, 355,
	490, 491, 298, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 3196, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 0, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 87, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 87, 0, 0, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 630, 631, 632, 0, 1492, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 1973, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 1971, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 1638,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 630, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 1636, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 1634, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 374, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	1632, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 630, 631, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 374, 355,
	490, 491, 298, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 1630, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 0, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 1626, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	630, 631, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 1624, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 1622, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 1597, 0,
	0, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 630, 631,
	632, 0, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 630, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 3330, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 1973, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 186,
	0, 0, 0, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 374, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 374, 355,
	490, 491, 298, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 186, 0, 0, 0, 1671, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 0, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 1769, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 1497, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 868, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 636, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	575, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 1435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 0, 355, 490, 491, 298,
}

var yyPact = [...]int{
	5360, -1000, -434, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2201, 2244, -1000, -1000,
	-1000, -1000, 2395, -1000, 788, 1872, -1000, 2217, 3805, -1000,
	44160, 574, -1000, 42886, 573, 126, 38427, -1000, 225, -1000,
	168, 37153, 190, 42249, -1000, -1000, -312, 17396, 2135, 87,
	79, 44160, -1000, -1000, -1000, -1000, 2372, 1861, -1000, 393,
	-1000, -1000, -1000, -1000, -1000, -1000, 41612, -1000, -1000, -1000,
	2231, 2202, 2402, 712, 2143, -1000, 2291, 1861, -1000, 17396,
	2340, 2268, 16759, -1000, 16759, 499, -1000, -1000, 926, -1000,
	-1000, 21865, 44160, 27598, 354, -1000, 2217, -1000, -1000, -1000,
	104, -1000, 399, 1784, -1000, 1781, -1000, 898, 577, 437,
	536, 532, 436, 433, 432, 420, 412, 411, 410, 407,
	443, -1000, 766, 766, -111, -121, 5203, 529, 491, 491,
	784, 528, 2169, 2167, -1000, -1000, 766, 766, 766, 408,
	766, 766, 766, 766, 374, 372, 766, 766, 766, 766,
	766, 766, 766, 766, 766, 766, 766, 766, 766, 766,
	766, 766, 766, 360, 2217, 315, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 44160, 242, 44160, -1000, 643, 44160, 891,
	891, 192, 891, 891, 891, 891, 248, 681, 73, -1000,
	241, 358, 261, 361, 881, 430, -1000, -1000, 319, 881,
	1343, -1000, 752, 178, -1000, 891, 891, -1000, 9722, 181,
	9722, 9722, -1000, 2200, -1000, -1000, -1000, -1000, -1000, 1350,
	-1000, -1000, -1000, -1000, -1000, 524, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 37153, 35879, 403, 793, -1000, -1000, -1000,
	80, -1000, -1000, 1504, 1666, 17396, 1157, -1000, 1697, 690,
	-1000, -1000, -1000, -1000, -1000, 630, -1000, 18033, 18033, 18033,
	18033, -1000, -1000, 1789, 1789, 1789, 1789, 18033, 1789, -1000,
	1789, 1789, 1789, 17396, 1789, 1789, 1789, -1000, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, -1000, -1000, -1000, 1789, 642, 1789, 1789,
	1789, 1789, 1789, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18033, 1789, 1789, 1789, 1789, 1789, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21228, -1000, 14848, 1789, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 44160, -1000,
	1789, 280, 37153, 37153, 396, 2291, 1861, -1000, 2372, 2301,
	393, -1000, 2146, 1986, 1492, 1388, 1861, 1748, 44160, -1000,
	1796, -1000, -1000, -1000, 2020, 1257, 1340, -1000, -1000, -1000,
	-1000, 1051, 17396, -1000, -1000, 2386, -1000, 19307, 641, 925,
	2375, 40975, -1000, 499, 499, 1762, 585, 26, -1000, -1000,
	-1000, 792, 25050, -1000, -1000, -1000, -1000, -1000, -1000, 1740,
	44160, -1000, -1000, 5436, 1355, -1000, 1868, -1000, 1726, -1000,
	1830, 17396, 1891, 559, 1355, 554, 550, 544, -1000, -26,
	-1000, -1000, -1000, -1000, -1000, -1000, 766, 766, 766, -1000,
	413, 2339, 3805, 4643, -1000, -1000, -1000, 35242, 1867, 1355,
	-1000, 1866, -1000, 861, 603, 670, 670, 1355, -1000, -1000,
	43523, 1355, 856, 853, 1355, 1355, 37153, 37153, -1000, 34605,
	-1000, 33968, 33331, 1137, 37153, 32694, 32057, 31420, 30783, 30146,
	-1000, 2049, -1000, 1877, -1000, -1000, -1000, 43523, 1355, 1355,
	43523, 37153, 43523, 44160, 1355, -1000, -1000, 400, -1000, -1000,
	1130, 1126, 1125, 766, 766, 1087, 1338, 1334, 1332, 766,
	766, 1077, 1326, 39064, 1324, 313, 1076, 1072, 1055, 1192,
	1317, 201, 1316, 1118, 1114, 1039, 37153, 1865, 44160, -1000,
	314, 738, 484, 790, 2217, 2124, 1761, 519, 558, 1355,
	494, 494, 37153, -1000, 12290, -1000, -1000, 1314, 17396, -1000,
	885, 881, 881, -1000, -1000, -1000, -1000, -1000, -1000, 891,
	44160, 885, -1000, -1000, -1000, 881, 891, 44160, 891, 891,
	891, 891, 881, 881, 881, 891, 44160, 44160, 44160, 44160,
	44160, 44160, 44160, 44160, 44160, 9722, 752, 891, -320, -1000,
	1312, -1000, 2013, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9722,
	9722, -1000, -1000, -1000, -1000, 185, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -62, 1754, 40338, -1000, -323,
	-324, -325, -327, -1000, -1000, -1000, -328, -332, -1000, -1000,
	-1000, 17396, 17396, 17396, 17396, -153, -1000, 1113, 18033, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 167, 1041, 18033, 18033,
	18033, 18033, 18033, 18033, 18033, 18033, 18033, 18033, 18033, 18033,
	18033, 18033, 18033, -1000, -1000, 23139, 7122, 7122, 690, 690,
	690, 690, -1000, 16759, 17396, 17396, 690, -1000, 1355, 16759,
	16759, 17396, 791, 1666, 43523, -1000, 1388, -1000, -1000, -1000,
	1119, -1000, 858, 2182, 2182, 2182, 2182, 17396, 17396, 17396,
	17396, 17396, 17396, 17396, 17396, 17396, 17396, 2182, 37153, 37153,
	196, 17396, 17396, 17396, 17396, 17396, 17396, 13569, 17396, 17396,
	17396, 1388, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396,
	17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396,
	17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 1388,
	17396, 1333, 17396, 17396, 12932, 11006, 16759, 16759, 16759, 16759,
	16759, 29509, -1000, -1000, -1000, -1000, -1000, 17396, 17396, 17396,
	17396, 17396, 17396, 17396, 17396, 1388, 17396, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 640, -1000, 1466, 1619, 1384, 17396,
	-1000, 1751, -1000, -128, 28872, 17396, 1311, 2373, 1925, 37153,
	-1000, -1000, -1000, 2291, -1000, 2291, 1466, 2045, 2007, 16759,
	-1000, -1000, 2045, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1449, -1000, 44160, 1748, 2262, 37153, 2023, 1280, 409,
	-1000, 17396, 17396, 1736, -1000, 1410, 44160, -1000, -153, -1000,
	28235, -1000, -1000, 9080, -1000, 44160, 401, 44160, -1000, 26961,
	39701, 639, 26, -1000, 639, 1628, -1000, 53, 42, 14206,
	689, -1000, -1000, -1000, 5203, 18670, 1484, 689, 148, -1000,
	-1000, -1000, 1830, -1000, 1830, 1830, 1830, 1830, 409, 409,
	409, 409, -1000, -1000, -1000, -1000, -1000, 1864, 1862, -1000,
	1830, 1830, 1830, 1830, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1859, 1859, 1859, 1834, 1834, 486, -1000, 17396, 369,
	27598, 2243, 1036, 1420, 314, 495, 1920, 1355, 1355, 1355,
	495, -1000, 1274, 1268, 1259, -1000, -423, 1729, -1000, -1000,
	2336, -1000, -1000, 916, 889, 888, 961, 37153, 251, 391,
	-1000, 469, -1000, 27598, 1355, 850, 670, 1355, -1000, 1355,
	-1000, -1000, -1000, -1000, -1000, 1355, -1000, -1000, 1709, -1000,
	1742, 924, 879, 917, 875, 1709, -1000, -1000, -93, 1709,
	-1000, 1709, -1000, 1709, -1000, 1709, -1000, 1709, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 814, 218, -234,
	37153, 251, 503, -1000, 502, 23139, -1000, -1000, -1000, 23139,
	23139, -1000, -1000, -1000, -1000, 1278, 1273, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -409, 44160, -1000, 299,
	781, 379, 423, 357, 44160, 267, 2273, 2272, 2266, 310,
	371, 44160, 44160, 494, 1980, 44160, 2251, 44160, -1000, -1000,
	-1000, -1000, -1000, 1666, 44160, -1000, -1000, 891, 891, -1000,
	-1000, 44160, 891, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 891, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 44160, -1000, -1000,
	-1000, -1000, 37153, -1000, -1000, -1000, -1000, -1000, 89, 48,
	377, -1000, -1000, -1000, -1000, -1000, 2279, -1000, 1666, 859,
	819, -1000, 1789, -1000, -1000, 1068, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 167, 18033, 18033, 18033, 1231, 545, 1298,
	1732, 1075, 1127, 1127, 787, 787, 694, 694, 694, 694,
	694, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1263,
	-1000, 1668, -1000, 1952, 1704, 1388, 1668, 1668, 1116, 801,
	-1000, 17396, 1388, -1000, -1000, 1388, 1388, 1388, 17396, -1000,
	-1000, 17396, 17396, 17396, 17396, 1420, 1420, 1420, 1420, 1420,
	1420, 1420, 1420, 1420, 1420, 17396, 1695, 1681, 2370, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1581, 1420, 1420, 1420, 1420, 1420, 17396, 1475, -1000, -1000,
	-1000, 2661, 1420, 1420, -1000, 1420, 2599, 2595, 1388, 1504,
	1388, 1672, -1000, 2487, 1420, 2479, 2470, 2444, 1745, 2433,
	2426, 2409, 1420, 1420, 1420, 1686, 2378, 2290, 2263, 2218,
	2199, 2174, 2144, 2130, 2111, 1420, -155, 1420, 1388, -1000,
	-1000, -1000, -1000, -1000, 2090, 1679, 1388, 16759, 16759, 1642,
	1789, 638, -1000, -1000, -1000, 1668, 1388, 1388, 1668, 1668,
	-1000, 2080, 2069, 2019, 2005, 1999, 1960, 1420, 1420, -1000,
	1420, 11006, 1388, -1000, 1384, 44160, -1000, -309, -1000, 34,
	671, 1789, -1000, 39064, 1388, -1000, 6509, -1000, 1179, -1000,
	-1000, -1000, -1000, -1000, 24413, 1822, 2045, -1000, -1000, 1789,
	1713, -1000, -1000, 409, 115, 23776, 647, 647, 172, 1666,
	1666, 17396, -1000, -1000, -1000, -1000, -1000, -1000, 626, 2348,
	381, 1789, -1000, 1716, 2122, -1000, -1000, -1000, 2260, 20591,
	-1000, 1789, 1789, 44160, 1743, 1541, -1000, 619, -1000, 1628,
	26, 19, -1000, -1000, -1000, -1000, 1666, -1000, 1236, 402,
	5105, -1000, 478, -1000, -1000, -1000, -1000, 2159, 111, -1000,
	-1000, -1000, 247, 409, -1000, -1000, -1000, -1000, -1000, -1000,
	1262, 1262, -1000, -1000, -1000, -1000, -1000, 1034, -1000, -1000,
	-1000, 1032, -1000, -1000, 1940, 1949, 369, -1000, -1000, 766,
	1241, -1000, -1000, 2162, 766, 766, 37153, -1000, -1000, 1479,
	2243, 299, 44160, 806, 1977, -1000, 1920, 1920, 1920, 44160,
	-1000, -1000, -1000, -1000, -1000, -1000, -411, 76, 373, -1000,
	-1000, -1000, 4471, 37153, 1702, -1000, 266, -1000, 1459, -1000,
	37153, -1000, 1698, 1844, 1355, 1355, -1000, -1000, -1000, 37153,
	1789, -1000, -1000, -1000, -1000, 546, 2215, 265, -1000, -1000,
	-173, -1000, -1000, 251, 266, 43523, 1355, 689, -1000, -1000,
	-1000, -1000, -1000, -412, 1692, 541, 291, 344, 44160, 44160,
	44160, 44160, 44160, 621, -1000, -1000, -1000, -1000, 239, -1000,
	-1000, 239, -1000, -1000, -1000, -1000, 362, 501, -1000, 44160,
	44160, 686, -1000, -1000, -1000, 881, -1000, -1000, 881, -1000,
	-1000, -1000, -1000, -1000, 2204, 44160, 46, -360, -1000, -354,
	17396, -1000, -1000, -1000, -1000, 1176, 542, 1298, 18033, 18033,
	16759, -88, 789, 789, 23139, -1000, -1000, -1000, 17396, 17396,
	796, -1000, 17396, 921, -1000, -1000, -1000, -1000, 1384, 1420,
	1420, 1420, 1420, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1790, 17396, 17396, 17396, 1388, 306, -1000,
	-1000, -1000, -1000, -1000, 2367, -1000, 17396, 17396, -1000, -1000,
	-1000, 17396, 17396, -1000, -1000, 17396, 17396, -1000, 17396, 17396,
	17396, -1000, 17396, 17396, 17396, 17396, -1000, -1000, -1000, -1000,
	17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396, 17396,
	-1000, -1000, 27598, 63, -155, 1333, 63, 1333, -1000, 1668,
	1668, 16759, 10364, -1000, -1000, -1000, -1000, -1000, 17396, 17396,
	17396, 17396, 17396, 17396, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 671, -1000, 670, 670, 670, 37153, -1000,
	-1000, -1000, -1000, 1624, -1000, 2285, -1000, 2059, 2048, 2366,
	2348, -1000, 26961, 2045, -1000, -1000, 37153, -304, -1000, 2127,
	2118, 647, 647, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8438, 2291, 17396, 1976, 43523, 162, -1000, 19949, 37153, 43523,
	26961, 26961, 26961, 26961, 26961, -1000, 1992, 1991, -1000, 2011,
	2004, 2054, 44160, -1000, 1636, 1388, 2301, 20591, 393, 17396,
	37790, 1456, 26961, -1000, -1000, 26961, 44160, 11648, -1000, -1000,
	39, 37, -1000, -1000, -1000, -1000, 5203, -1000, -1000, 352,
	2259, 2156, -1000, -1000, -1000, -1000, -1000, 1634, -1000, 1622,
	1598, 1613, 218, -1000, 1884, 2188, 766, 766, -1000, 1030,
	-1000, 1355, 1240, 1239, -1000, -1000, -1000, 530, -1000, 2246,
	44160, 1975, 1973, 1969, -1000, -421, 1021, 1843, 1882, 17396,
	1842, 2334, 1535, 37153, -1000, -1000, 43523, -1000, 200, -1000,
	369, 37153, -1000, -1000, -1000, 391, 44160, -1000, 6380, -1000,
	-1000, -1000, 266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44160, 295, -1000, 1838, 1318, -1000, -1000, 1906, -1000, -1000,
	-1000, -1000, 287, 378, 232, 1238, 232, -1000, 44160, 673,
	1949, 44160, -1000, -1000, -1000, 891, 891, -1000, -1000, 2179,
	-1000, 1355, 1420, 18033, 18033, -1000, 690, -1000, 1789, -135,
	1830, 1830, -1000, 1830, 1834, -1000, 1830, 174, 1830, 171,
	1830, -1000, -1000, 1388, 1388, 1659, 1124, -1000, 1666, 17396,
	-1000, -1000, -1000, -1000, -1000, -33, 1923, 1901, 1420, -1000,
	1829, 1824, 17396, 1420, 1420, 1420, 1420, -1000, 1666, 1384,
	1601, 1384, 1420, 1420, 1592, 293, 1420, 1609, 1609, 1609,
	1609, 1609, 1384, 1384, 1384, 1384, 37153, -1000, -155, -1000,
	-1000, -198, -206, -1000, 1388, -155, 1586, -1000, -1000, 1388,
	-1000, 1639, 1615, 1439, 1548, 1420, 1282, -1000, 2276, 2276,
	2276, 1588, 1179, 44160, -1000, -1000, -1000, -1000, 2348, 2346,
	1567, -1000, -1000, 115, 448, -1000, 2095, 2118, -1000, 2332,
	2105, 2330, -1000, -1000, -1000, -1000, -1000, 1666, -1000, 2222,
	1657, -1000, 775, 1510, -1000, -1000, 16122, 1606, 2044, 607,
	1588, 1689, 2122, 1899, 1965, 2715, -1000, -1000, -1000, -1000,
	1970, -1000, 1959, -1000, -1000, 1796, -1000, -1000, 1619, 1388,
	1140, 401, 26961, 1559, 1559, -1000, 598, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 908, 6223, 2400, -1000, 1233, -1000,
	1225, 206, 1007, -1000, -1000, 766, 766, -1000, 837, 835,
	-1000, 44160, 1820, -1000, 409, 1224, 409, 1005, -1000, 997,
	-1000, -1000, -1000, -1000, 1763, 2024, -1000, -1000, -1000, -1000,
	44160, -1000, -1000, 44160, 44160, 44160, 1818, 2327, -1000, 17396,
	1817, 769, 1869, 37153, 37153, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 500, 766, -379, 366,
	365, 766, 766, 766, -422, -1000, -1000, 1584, 1514, -1000,
	-124, -1000, 17396, -1000, -1000, -1000, 1096, 1096, -1000, 1796,
	-1000, -1000, -1000, 1434, -1000, -1000, -96, 37153, 37153, 37153,
	37153, -1000, 979, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 690, 18033, 1388, -1000, -1000,
	409, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17396, -1000, 17396, -1000, 1666, 2291, 1195, 17396, 17396, -1000,
	995, 994, 1420, -1000, -1000, -1000, -1000, -1000, 17396, -1000,
	-1000, -1000, 17396, 264, 789, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1388, 392, -1000, -1000, -1000,
	-1000, 2350, -1000, 1388, 17396, -1000, -1000, 17396, -1000, 17396,
	17396, -1000, 17396, -1000, 17396, 1789, 2079, 1789, 1789, 37790,
	-1000, -1000, 2346, 2343, 2326, 2064, 2099, 2099, 2095, -1000,
	2325, 2322, -1000, 1184, 2315, 1173, 830, -1000, 43523, 17396,
	162, -1000, 395, 37153, 162, 37153, -1000, 2302, -1000, -1000,
	17396, 1804, -1000, 17396, -1000, -1000, -1000, -1000, -1000, -1000,
	7122, 2348, 1559, -1000, -1000, 701, -1000, 17396, -1000, -1000,
	-1000, 3745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1171, 1165, -1000, -1000, 1799, 17396, -1000, -1000, -1000, 1421,
	1411, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1796,
	-1000, -1000, -1000, -1000, 391, -420, 1673, 37153, 967, -1000,
	1512, 1535, 380, 162, 1164, 766, 766, 766, 958, 939,
	39064, 1477, -1000, 37153, 457, -1000, 391, -1000, -126, -131,
	1420, -1000, -1000, 2256, -1000, -1000, 10364, -1000, -1000, 1794,
	1915, -1000, -1000, -1000, 389, -1000, -1000, 1420, 1420, 1388,
	-1000, 1420, 1420, 1400, 1395, -1000, 1384, 1528, -1000, 264,
	1388, 1953, -1000, -1000, 7122, -1000, -1000, 2302, 2311, 63,
	-1000, -1000, 250, 63, 1666, 1501, 1420, 1448, 1430, 1420,
	22502, -1000, 2308, 2307, 26324, 26324, 671, 2343, -169, 17396,
	17396, 2057, 999, -1000, -1000, -1000, -1000, 1163, 1156, -1000,
	1155, -1000, 2397, -1000, 1666, -1000, 162, -1000, 592, 1510,
	-1000, 2291, 1666, 37153, 1666, 106, 2302, -1000, 1420, -1000,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
	1789, 1789, 1789, -1000, -1000, 37153, 1626, -1000, -1000, 2254,
	1473, 75, -1000, 1463, -1000, -1000, 161, -1000, 17396, -1000,
	39064, 1154, 963, -1000, -1000, -1000, -1000, -422, -1000, -1000,
	-1000, -1000, -1000, -1000, 393, 1533, -1000, 765, 37153, 44160,
	1388, 342, -102, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17396, -1000, 1388, 1950, -1000, -241, -1000, -392,
	17396, -155, -1000, -1000, -155, -1000, 17396, -1000, -1000, 17396,
	-1000, 17396, -1000, 1441, -1000, -1000, -1000, -1000, -1000, 1441,
	1441, -1000, -169, -1000, 1525, -1000, 37153, 1666, 1504, -1000,
	944, -1000, -1000, -1000, -1000, -1000, 43523, 1510, 37153, -1000,
	1432, 1388, 1789, 2291, -1000, 1425, -1000, 393, -1000, 1793,
	1882, -1000, -1000, -1000, 15485, -1000, -1000, -1000, -1000, -1000,
	249, -94, 10364, 7796, 1415, -1000, -1000, 2002, -91, -106,
	1384, -1000, -345, -1000, -1000, -1000, -1000, 165, -1000, -1000,
	1504, -1000, -1000, 1368, 1354, 1315, 25687, -1000, -1000, -1000,
	-1000, -169, -1000, -1000, 2253, -1000, -1000, 1489, -1000, -1000,
	37790, 36516, -1000, -86, 332, -94, 17396, 1792, 1388, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3, -1000, -1000,
	-1000, -1000, -1000, 1906, -1000, 1954, -1000, -1000, -1000, 169,
	-364, -174, -178, -1000, -1000, -1000, 17396, -1000, 17396, -1000,
	17396, -1000, -1000, -1000, 37153, 1789, -1000, 1382, -1000, 4463,
	-250, 1943, -1000, -55, -1000, -1000, -1000, 906, 946, -1000,
	-1000, -1000, -1000, -1000, -1000, 1506, 37153, -1000, 480, -1000,
	-1000, -96, -100, 797, -1000, -1000, -1000, -1000, -1000, 1277,
	1215, 1420, -1000, 37153, -1000, 36516, -212, 689, 7122, -1000,
	1942, 1941, 2354, -1000, -1000, -1000, -1000, -1000, -1000, -428,
	1360, 304, -1000, -104, 169, -1000, 17396, -1000, 17396, -1000,
	1388, -1000, -1000, 2239, 106, -1000, 2392, -1000, 2379, 680,
	680, -1000, 935, -428, -1000, -122, -1000, 1420, 1420, -1000,
	-258, -1000, -1000, -1000, -1000, -1000, 475, 1040, -1000, -1000,
	-1000, -1000, -1000, -1000, 7122, -1000, -1000, -1000, 238, 238,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 2859, 2858, 30, 5, 47, 46, 2857, 43, 105,
	203, 31, 208, 117, 2856, 2855, 2853, 2852, 2851, 2850,
	2849, 241, 240, 234, 2848, 2844, 2843, 2842, 2841, 2840,
	2839, 2838, 2837, 2836, 229, 188, 200, 2835, 2833, 2832,
	150, 189, 102, 104, 199, 2831, 2830, 96, 2829, 2828,
	2827, 198, 193, 191, 857, 2826, 187, 132, 59, 2825,
	2824, 2823, 2822, 2820, 2819, 2818, 2817, 2815, 2814, 2813,
	2812, 2811, 2806, 2804, 2803, 2802, 343, 2801, 2798, 24,
	2796, 92, 2795, 2794, 2793, 2790, 9, 2789, 2780, 18,
	45, 2778, 2777, 55, 2776, 2774, 2772, 2767, 2764, 17,
	2763, 25, 2762, 28, 2761, 2760, 143, 2759, 2758, 2757,
	48, 2755, 2754, 2740, 2739, 2736, 2732, 2730, 157, 2727,
	2721, 2718, 195, 205, 2717, 2710, 214, 122, 128, 2709,
	2708, 120, 201, 2707, 135, 2706, 2705, 2704, 170, 2701,
	2133, 2700, 2699, 77, 80, 2697, 75, 2696, 2690, 11,
	90, 73, 8, 10, 12, 2689, 2688, 76, 100, 2685,
	119, 2684, 118, 79, 2683, 124, 115, 2679, 2676, 14,
	7, 2674, 1, 4, 2, 83, 2673, 2672, 152, 2671,
	2669, 2668, 110, 2667, 2666, 94, 2664, 111, 153, 116,
	93, 2662, 60, 86, 2651, 2650, 2646, 2644, 2643, 66,
	2638, 2636, 2632, 155, 35, 181, 2629, 49, 50, 68,
	149, 2613, 40, 95, 2612, 161, 151, 2611, 2610, 70,
	52, 53, 2607, 136, 145, 134, 41, 125, 154, 2602,
	2601, 71, 89, 2600, 2595, 2591, 2590, 182, 2589, 2588,
	84, 2585, 69, 2584, 202, 2581, 22, 56, 63, 176,
	2579, 88, 2578, 2576, 81, 131, 82, 36, 2573, 190,
	2570, 67, 180, 140, 177, 2567, 2563, 2558, 2556, 211,
	298, 2554, 2553, 213, 183, 162, 169, 107, 2546, 314,
	2544, 2543, 109, 0, 3882, 2541, 33, 178, 2540, 2539,
	4580, 164, 38, 27, 2538, 142, 2537, 2536, 2534, 2533,
	206, 179, 127, 1051, 74, 2532, 2527, 2526, 23, 2525,
	2524, 2522, 2521, 2519, 2518, 106, 42, 39, 37, 243,
	78, 16, 126, 172, 91, 2511, 2510, 2509, 138, 101,
	2506, 175, 173, 139, 224, 2505, 184, 165, 133, 2504,
	159, 34, 2503, 2501, 2489, 2486, 108, 2482, 2480, 2477,
	2476, 171, 156, 137, 98, 2469, 99, 144, 168, 167,
	61, 2468, 65, 2466, 2463, 32, 194, 29, 2461, 19,
	129, 160, 2459, 309, 186, 2455, 2452, 20, 355, 196,
	2451, 2450, 6, 13, 15, 2449, 2447, 2439, 2438, 147,
	2436, 2433, 2425, 2423, 26, 58, 21, 3, 130, 97,
	2421, 2420, 3044, 85, 146, 2419, 204,
}

//line sql.y:7724
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 400, 401, 401, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 251, 373,
	374, 374, 375, 375, 375, 249, 249, 32, 71, 34,
	34, 33, 33, 36, 36, 35, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 19, 20, 12, 12, 21, 21, 104, 104, 22,
	23, 23, 23, 23, 404, 404, 180, 180, 178, 178,
	179, 179, 254, 254, 24, 25, 25, 264, 264, 263,
	263, 263, 265, 265, 265, 265, 303, 303, 26, 26,
	26, 26, 26, 124, 124, 377, 377, 376, 369, 369,
	368, 368, 367, 372, 372, 371, 371, 370, 38, 39,
	48, 48, 48, 48, 49, 50, 378, 378, 342, 55,
	55, 54, 54, 54, 54, 54, 54, 56, 56, 52,
	52, 51, 51, 53, 53, 344, 344, 330, 330, 343,
	343, 343, 343, 343, 343, 343, 329, 329, 135, 135,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 393, 393, 393,
	392, 392, 230, 230, 230, 230, 230, 230, 230, 230,
	145, 145, 157, 157, 157, 157, 157, 143, 143, 144,
	142, 142, 142, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 156, 156, 152,
	152, 152, 153, 153, 153, 154, 154, 394, 394, 394,
	394, 308, 308, 308, 308, 311, 311, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 310, 310, 310, 310,
	310, 312, 312, 312, 312, 312, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 314, 314, 314, 314, 314, 314, 314, 314,
	328, 328, 315, 315, 323, 323, 324, 324, 324, 325,
	325, 325, 326, 326, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 322, 322, 321, 321, 321, 331, 356,
	356, 355, 355, 353, 353, 353, 353, 353, 353, 353,
	353, 340, 340, 350, 350, 350, 350, 350, 339, 339,
	335, 335, 335, 336, 336, 337, 337, 334, 334, 338,
	338, 352, 352, 351, 351, 332, 332, 333, 333, 358,
	395, 395, 395, 395, 395, 396, 396, 359, 385, 387,
	387, 387, 386, 386, 383, 384, 382, 382, 382, 382,
	382, 81, 81, 81, 277, 277, 278, 278, 348, 348,
	347, 347, 347, 349, 349, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 272, 272, 272, 381,
	381, 381, 381, 381, 381, 380, 380, 380, 345, 345,
	345, 379, 379, 57, 57, 213, 213, 398, 398, 399,
	399, 399, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 46, 46, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 106, 106,
	107, 107, 107, 107, 109, 109, 109, 361, 361, 58,
	58, 3, 3, 168, 170, 171, 171, 169, 169, 169,
	169, 169, 169, 60, 60, 59, 59, 173, 172, 174,
	174, 174, 1, 1, 2, 2, 4, 4, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	327, 327, 327, 360, 360, 362, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 112, 111, 111, 110,
	113, 113, 113, 113, 113, 113, 113, 113, 364, 364,
	364, 61, 61, 365, 316, 317, 318, 5, 6, 341,
	363, 120, 120, 28, 37, 37, 29, 29, 29, 29,
	30, 30, 62, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 271, 271, 280, 280, 270, 270,
	295, 295, 295, 273, 273, 273, 274, 274, 391, 391,
	391, 267, 267, 64, 64, 64, 296, 296, 296, 296,
	66, 66, 67, 68, 68, 298, 298, 299, 299, 69,
	70, 82, 82, 82, 82, 82, 82, 105, 105, 105,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 388, 388, 389, 390, 390, 390, 390, 73,
	75, 31, 31, 31, 31, 31, 31, 130, 130, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 125, 125, 125, 119, 119, 405, 76, 77, 77,
	123, 123, 123, 116, 116, 116, 122, 122, 122, 16,
	16, 17, 253, 253, 18, 18, 127, 127, 129, 129,
	129, 129, 129, 131, 131, 131, 131, 131, 131, 131,
	126, 126, 128, 128, 128, 128, 288, 288, 288, 287,
	287, 162, 162, 164, 163, 163, 165, 165, 166, 166,
	166, 166, 211, 211, 188, 188, 247, 247, 246, 246,
	252, 252, 248, 248, 248, 248, 255, 255, 167, 167,
	167, 167, 175, 175, 176, 176, 177, 177, 297, 297,
	293, 293, 293, 292, 292, 181, 181, 181, 183, 182,
	182, 182, 182, 184, 184, 186, 186, 185, 185, 187,
	192, 192, 191, 191, 189, 189, 189, 189, 190, 190,
	190, 190, 193, 193, 140, 140, 140, 140, 140, 140,
	140, 155, 155, 155, 155, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 237, 237, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 149, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 206, 206, 285,
	285, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 268, 268, 194, 194, 202, 202, 202, 202, 195,
	195, 195, 195, 195, 195, 195, 203, 203, 203, 210,
	204, 204, 200, 200, 200, 200, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 160, 160, 160, 160, 218,
	218, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 148, 148, 161, 161,
	161, 161, 305, 305, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 406, 406, 319, 319, 319,
	319, 201, 201, 201, 201, 201, 121, 121, 121, 121,
	121, 302, 302, 302, 306, 306, 306, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 307, 307, 216, 216, 117, 117, 214, 214,
	215, 217, 217, 212, 212, 212, 212, 197, 197, 197,
	219, 219, 220, 220, 101, 102, 102, 103, 103, 221,
	221, 223, 222, 222, 224, 225, 225, 225, 226, 226,
	227, 227, 227, 47, 47, 47, 47, 47, 42, 42,
	42, 42, 43, 43, 43, 43, 132, 132, 132, 132,
	134, 134, 133, 133, 79, 79, 80, 80, 80, 138,
	138, 139, 139, 139, 136, 136, 137, 137, 244, 244,
	228, 228, 228, 235, 235, 235, 231, 231, 233, 233,
	233, 234, 234, 234, 232, 241, 241, 243, 243, 242,
	242, 238, 238, 239, 239, 240, 240, 240, 236, 236,
	196, 196, 196, 196, 196, 245, 245, 245, 245, 256,
	256, 207, 207, 209, 209, 208, 208, 159, 257, 257,
	261, 258, 258, 262, 262, 262, 262, 262, 250, 250,
	259, 259, 260, 260, 289, 289, 289, 266, 266, 279,
	279, 275, 275, 276, 276, 269, 269, 281, 281, 281,
	74, 205, 205, 357, 357, 354, 284, 284, 286, 286,
	290, 290, 294, 294, 291, 291, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	402, 403, 300, 301, 301, 301,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	2, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	5, 2, 3, 3, 2, 3, 4, 4, 4, 3,
	4, 4, 5, 3, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 1, 1, 2, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 6, 6,
	2, 2, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 2, 2, 1, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 6, 5, 9,
	6, 9, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 4, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -400, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -402,
	11, 438, 256, 255, 28, -12, 498, 86, -401, 646,
	-244, -228, 22, 33, 29, -227, -223, -123, -228, 20,
	18, 7, -76, -405, -76, -76, 12, 13, -76, -342,
	-344, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -366, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 498, 501, -349, 223, 229, 230,
	225, 439, 123, 122, 75, -346, 361, 531, 616, -56,
	618, 102, 104, 617, 44, 235, 619, 620, 621, 538,
	622, 244, 623, 624, 625, 626, 632, 580, 633, 634,
	635, 124, 7, -76, -294, -290, 89, -283, 495, 247,
	529, 530, 296, 81, 41, 504, 358, 361, 531, 468,
	616, 307, 321, 315, 473, 474, 475, 342, 334, 496,
	532, 505, 299, 248, 284, 610, 332, 132, 618, 302,
	533, 262, 366, 367, 534, 368, 102, 310, 405, 631,
	301, 535, 629, 104, 617, 79, 467, 51, 613, 44,
	257, 330, 231, 326, 619, 285, 536, 507, 278, 123,
	120, 638, 36, 324, 50, 30, 628, 122, 49, 620,
	147, 537, 621, 538, 370, 349, 604, 48, 371, 263,
	539, 84, 268, 500, 305, 612, 372, 487, 325, 373,
	295, 627, 228, 540, 596, 592, 593, 374, 375, 605,
	541, 350, 354, 489, 542, 397, 472, 376, 645, 52,
	543, 544, 606, 121, 545, 78, 622, 80, 319, 320,
	546, 293, 246, 492, 493, 399, 346, 450, 457, 458,
	108, 109, 453, 110, 459, 111, 460, 461, 462, 451,
	112, 105, 452, 463, 464, 347, 348, 113, 465, 107,
	106, 454, 456, 114, 466, 244, 35, 377, 497, 297,
	58, 272, 400, 46, 352, 642, 45, 600, 547, 603,
	345, 341, 447, 53, 548, 549, 550, 551, 469, 623,
	344, 318, 340, 637, 4, 290, 470, 624, 62, 230,
	356, 355, 357, 279, 396, 337, 552, 553, 554, 251,
	82, 555, 327, 21, 556, 557, 378, 286, 558, 56,
	559, 560, 403, 260, 561, 54, 625, 39, 562, 265,
	639, 626, 563, 564, 565, 566, 267, 567, 380, 568,
	594, 595, 379, 351, 353, 274, 381, 499, 569, 306,
	323, 264, 630, 570, 252, 483, 484, 485, 486, 611,
	491, 490, 266, 271, 259, 404, 253, 571, 572, 573,
	574, 575, 300, 591, 576, 577, 311, 632, 448, 43,
	578, 579, 580, 581, 582, 294, 289, 398, 407, 61,
	83, 363, 583, 584, 609, 317, 287, 585, 308, 55,
	633, 634, 635, 281, 636, 476, 477, 478, 479, 9,
	643, 644, 471, 383, 124, 291, 292, 47, 338, 273,
	586, 303, 587, 328, 329, 343, 316, 339, 309, 597,
	275, 384, 449, 261, 588, 406, 288, 359, 364, 304,
	503, 488, 280, 385, 608, 502, 480, 481, 336, 333,
	282, 482, 589, 386, 236, 276, 277, 590, 598, 387,
	388, 298, 389, 390, 391, 392, 393, 395, 394, 283,
	501, 314, 331, 365, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 446, 234, -76, 234, -185, -290, 234, -259,
	367, -280, 369, 382, 377, 387, 375, -271, 378, 380,
	274, -391, 397, 234, 384, 222, 370, 379, 388, 389,
	298, 395, 390, 394, 283, 391, 392, 393, -373, 174,
	621, 636, 132, 335, 374, 372, 398, 600, 89, -296,
	89, 90, 91, -283, 309, -298, 314, -284, -375, -283,
	89, 90, 91, 312, -185, -82, 596, 226, -300, -300,
	-125, 600, 602, -204, -140, 140, -155, -158, -146, -150,
	-198, -199, -200, -201, -156, -212, -249, 163, 164, 171,
	141, -210, -159, 26, 494, 440, 439, 174, 31, -149,
	68, 69, 442, 143, 57, 415, 416, -157, 410, 417,
	412, 467, 469, 470, 471, 468, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 472, 444, 445, 115,
	446, 105, 107, 106, 447, 448, 449, 489, 492, 493,
	491, 490, 347, 348, 450, 451, 452, 108, 109, 110,
	111, 112, 113, 114, 453, 456, 454, 455, 457, 458,
	459, 464, 465, 460, 461, 462, 463, 466, -85, -97,
	520, 519, -98, -147, -148, -161, -284, -290, 239, 409,
	233, 169, 438, -151, -144, -373, -283, 90, 91, -8,
	-208, 217, 408, 413, 414, 418, 411, 506, 508, 523,
	524, 526, 511, 516, 515, 518, 483, 484, 485, 486,
	487, 488, 592, 593, 594, 595, 89, -153, -152, -194,
	92, 98, 103, 99, -397, 116, -402, 614, 93, 94,
	95, 96, 97, 117, 118, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 44, 383, 383,
	-185, -76, -76, -76, -76, -221, -123, -223, -10, -8,
	-402, 8, -76, -8, -9, -13, -34, -36, 525, -35,
	-290, -228, -244, 12, 159, 42, 50, -226, -227, -12,
	-8, -140, 19, 23, 24, -128, 165, -140, -290, -77,
	-128, -269, 238, -76, -76, -258, -303, 309, -262, 398,
	397, -250, -260, 89, -249, -259, 396, 90, 91, -343,
	156, -329, -333, -284, 249, -359, 245, -185, -352, -351,
	-284, -402, -124, -279, 235, 243, 242, 133, -378, 136,
	291, 409, 233, -51, -52, -53, -259, 173, 620, -106,
	266, 270, 87, 87, -333, -332, -331, -379, 270, 249,
	-358, -350, 241, 250, -339, 242, 243, -334, 235, 134,
	-379, -334, 240, 250, 245, 249, 270, 270, 124, 270,
	124, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	265, -340, 148, -340, 502, 502, -346, -379, 245, 235,
	-379, -379, 241, -281, -334, 237, 25, 237, 35, 35,
	-340, -340, -340, -259, 173, -340, -340, -340, -340, 278,
	278, -340, -340, -340, -340, -340, -340, -340, -340, -340,
	-340, -340, -340, -340, -340, -340, -340, -340, 234, -378,
	-132, 394, 298, 81, -54, 280, -37, -185, -279, 235,
	236, -378, 267, -185, 218, -185, -273, 156, 15, -273,
	-270, 383, 381, 368, 373, -273, -273, -273, -273, 281,
	366, -335, 235, 35, 246, 383, 281, 366, 281, 282,
	281, 282, 376, 386, 281, -295, 14, 159, 409, 371,
	375, 274, 234, 275, 236, 385, 282, -295, 93, -274,
	156, 383, 277, -273, -273, -301, -402, -286, -284, -282,
	227, 23, 139, 25, 27, 142, 174, 127, 19, 143,
	37, 229, 335, 245, 173, 241, 439, 222, 72, 506,
	410, 412, 408, 415, 441, 442, 409, 369, 31, 13,
	508, 28, 255, 24, 38, 167, 224, 146, 509, 258,
	26, 256, 115, 118, 511, 22, 75, 250, 14, 243,
	40, 16, 512, 513, 17, 239, 238, 159, 235, 70,
	11, 217, 29, 155, 66, 514, 134, 515, 516, 517,
	518, 128, 68, 156, 20, 640, 413, 414, 33, 601,
	494, 269, 169, 73, 59, 602, 140, 411, 519, 520,
	116, 521, 119, 76, 607, 136, 18, 71, 42, 522,
	270, 523, 240, 641, 524, 401, 525, 157, 225, 438,
	69, 158, 614, 526, 615, 233, 382, 8, 443, 32,
	254, 242, 126, 67, 527, 234, 145, 444, 445, 237,
	129, 117, 7, 133, 34, 12, 74, 77, 416, 417,
	418, 57, 125, 498, 144, 15, 528, 402, 138, -373,
	603, -301, -301, 32, 90, 237, -284, -78, -284, 93,
	-15, -11, -22, -21, -23, 148, -130, 383, -118, 174,
	621, 604, 605, 606, 603, 380, 611, 609, 607, 281,
	608, 87, 136, 138, 139, 4, -140, 155, -195, 148,
	149, 150, 151, 152, 153, 154, 159, 140, 142, 156,
	-237, 137, 160, 161, 162, 163, 164, 165, 166, 168,
	167, 169, 170, 157, 158, 173, 220, 221, -150, -150,
	-150, -150, -210, -402, -402, -402, -150, -268, -402, -402,
	-402, -402, -216, -140, -402, -406, -402, -406, -406, -319,
	-402, -319, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, 218, -402, -402, -402, -402,
	-402, -150, -319, -319, -319, -319, -319, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, 103, 98, 92,
	-212, 99, 93, -283, -290, 89, -8, -9, -204, -402,
	-300, -388, -389, -188, -185, -402, 298, -284, -284, 267,
	-226, -12, -8, -221, -227, -223, -8, -76, -116, -129,
	63, 64, -131, 24, 38, 67, 65, 23, -403, 88,
	-403, -244, -403, 87, -36, -247, 86, 61, 43, 93,
	93, 87, 21, -222, -224, -140, 14, -288, 4, -287,
	25, -284, 93, 218, 101, 14, -186, 29, -185, -269,
	-269, 87, 309, -262, -303, -264, -263, 399, 401, 148,
	-289, -284, 93, 31, 88, 87, -185, -308, -311, -313,
	-312, -314, -309, -310, 332, 333, 174, 336, 338, 339,
	340, 341, 342, 343, 344, 345, 346, 349, 32, 257,
	328, 329, 330, 331, 350, 351, 352, 353, 354, 355,
	356, 357, 315, 334, 496, 316, 317, 318, 319, 320,
	321, 323, 324, 325, 326, 327, -374, -373, 86, 88,
	87, -315, 86, -140, -132, 234, -373, 235, 235, 235,
	-76, 438, -340, -340, -340, 265, 19, -44, -41, -366,
	18, -40, -41, 227, 120, 121, 224, 86, -329, 86,
	-338, -374, -373, 86, 134, 240, 133, -337, -334, -337,
	-338, -373, -212, -373, 134, 134, -373, -373, -255, -284,
	-255, -255, 23, -255, 23, -255, 23, 95, -284, -255,
	23, -255, 23, -255, 23, -255, 23, -255, 23, 31,
	78, 79, 80, 31, 82, 83, 84, -212, -373, -373,
	-212, -329, -212, -185, -373, -259, 95, 95, 95, -340,
	-340, 95, 93, 93, 93, -340, -340, 95, 93, -292,
	-290, 93, 93, -380, 251, 295, 297, 95, 95, 95,
	95, 31, 93, -381, 31, 628, 627, 629, 630, 631,
	93, 95, 31, 95, 31, 95, -284, 86, -185, -138,
	285, 222, 224, 227, 76, 93, 299, 303, 304, 148,
	44, 87, 237, 234, -373, -275, 239, -275, -284, -291,
	-290, -282, 93, -140, -336, 14, 159, -295, -295, -273,
	-185, -336, -295, -273, -185, -273, -273, -273, -273, -295,
	-295, -295, -273, -290, -290, -185, -185, -185, -185, -185,
	-185, -185, -301, -274, -273, 603, 93, -267, 14, 76,
	-301, -301, -299, 312, 346, 597, 598, 599, 87, 498,
	-178, -185, 603, 603, 603, 603, 603, 603, -140, -140,
	-140, -140, 521, -202, 116, 140, 117, 118, -158, -203,
	-208, -210, 100, 159, 142, 156, -237, -146, -150, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -302, -284, 93, 174, -154, -153, 99, -397,
	-154, -126, -128, -140, -140, -373, -126, -126, -140, -214,
	-215, 144, -212, -403, -403, 95, 99, 165, -122, 24,
	38, -122, -122, -122, -122, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -122, -284, -284, -115, -114,
	420, 421, 422, 423, 425, 426, 427, 430, 431, 435,
	436, 419, 437, 424, 429, 432, 433, 434, 428, 331,
	-140, -140, -140, -140, -140, -140, -83, -140, 127, 128,
	129, -140, -140, -140, -403, -140, -140, -140, -205, -204,
	-372, -371, -370, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -403, -140, -160, -144,
	95, -251, 99, 90, -140, -140, -127, 24, 38, -126,
	-286, -291, -282, -283, 89, -126, -127, -127, -126, -126,
	-284, -140, -140, -140, -140, -140, -140, -140, -140, -403,
	-140, 218, -244, -403, -204, 87, -390, 401, 402, 601,
	-293, 270, -292, 25, -205, 93, 14, -253, 77, -284,
	-226, -226, 63, 64, 59, -126, -131, -403, -35, 25,
	-246, -284, 62, 93, -320, -259, 358, 359, 174, -140,
	-140, 87, -225, 27, 28, -185, -287, 165, -291, -185,
	-254, 270, -185, -163, -165, -166, -167, -188, -211, -402,
	-168, 517, 514, 14, -178, -179, -187, -290, -262, -264,
	87, 400, 402, 403, 76, 119, -140, -321, 173, -348,
	-347, -346, -329, -331, -332, -333, 88, -321, -325, 364,
	363, -315, -315, -315, -315, -315, -320, -320, -320, -320,
	86, 86, -315, -315, -315, -315, -323, 86, -323, -323,
	-324, 86, -324, -359, -140, -356, -355, -353, -354, 244,
	102, 590, 546, 498, 538, 580, 77, -351, -225, 95,
	-403, -138, -276, 239, -357, -354, -373, -373, -373, -276,
	89, 93, 89, 93, 89, 93, -107, -58, -1, 640,
	641, 642, 87, 19, -330, -329, -57, 295, -362, -363,
	270, -358, -352, -338, 134, -337, -338, -338, -373, 87,
	29, 124, 124, 124, 124, 498, 224, 32, -277, 537,
	140, 590, 546, -329, -57, 237, 237, -302, -302, -302,
	93, 93, -272, 636, -178, -134, 287, 148, 276, 276,
	234, 234, 289, -185, 300, 302, 301, 299, 303, 304,
	23, 23, 23, 288, 290, 292, 278, -185, -185, -275,
	76, -180, -185, 26, -290, -185, -273, -273, -185, -273,
	-273, -185, -284, -118, 401, 87, 498, 22, -119, 22,
	-402, 116, 117, 118, -203, -146, -150, -146, 139, 258,
	87, -403, 25, 87, 77, -403, -403, -403, 87, 14,
	-217, -215, 146, -140, -403, -403, -403, -403, -204, -140,
	-140, -140, -140, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -204, 87, 87, 14, -306, 25, -403,
	-403, -403, -403, -403, -216, -403, 14, 87, -403, -403,
	-403, 87, 87, -403, -403, 87, 87, -403, 87, 87,
	87, -403, 87, 87, 87, 87, -403, -403, -403, -403,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	-403, -90, 522, -403, -403, 87, -403, 87, -403, -126,
	-126, -402, 218, -403, -403, -403, -403, -403, 87, 87,
	87, 87, 87, 87, -403, -403, -403, -286, -403, -389,
	600, 402, -192, -191, -189, 74, 238, 75, -402, -292,
	-403, -154, -251, -252, -251, -197, -284, 95, 99, -228,
	-162, -164, 14, -131, -210, 88, 87, -320, -232, -238,
	-270, -284, 93, 174, -322, 174, -322, 358, 359, -224,
	218, -193, 15, -196, 32, 57, -11, -402, -402, 32,
	87, -181, -183, -182, -184, 66, 70, 72, 67, 68,
	69, 73, -297, 25, -163, -9, -8, -402, -402, -402,
	-185, -178, -404, 14, 77, -404, 87, 218, -263, -265,
	404, 401, 407, -373, 93, -106, 87, -346, -333, -229,
	-135, 40, -326, 365, -320, 505, -320, -328, 93, -328,
	95, 95, 88, -47, -42, -43, 33, 81, -353, -340,
	93, 39, -340, -340, -284, 88, -225, -134, -185, 140,
	76, -357, -357, -357, -290, -2, 639, 645, 134, 86,
	368, 18, -246, 87, 88, -213, 296, 88, -108, -284,
	88, 86, -338, -338, -284, -402, 234, 31, 31, 590,
	546, 537, -57, -213, -212, -373, -321, 638, 637, 88,
	236, 294, -139, 415, -136, 93, 89, -185, -185, -185,
	-185, -185, 227, 224, -398, 305, -398, 279, 237, -178,
	-185, 87, -81, 253, 248, -295, -295, 33, -185, 401,
	612, 610, -140, 139, 258, -158, -150, -128, 495, -304,
	174, 332, 257, 330, 326, 346, 337, 363, 328, 364,
	325, 324, 323, -304, -302, -140, -140, 147, -140, 145,
	-403, -403, -403, -403, -403, -221, -140, -140, -140, -403,
	174, 332, 14, -140, -140, -140, -140, -370, -140, -204,
	-140, -204, -140, -140, -140, -140, -140, -371, -371, -371,
	-371, -371, -204, -204, -204, -204, -402, -284, -93, -92,
	-91, 573, 238, -90, -160, -93, -160, -403, -403, -127,
	-286, -140, -140, -140, -140, -140, -140, -189, -334, -334,
	-334, -255, 87, -266, 22, 14, 57, 57, -162, -193,
	-163, -131, -284, -235, 596, -241, 46, -239, -240, 47,
	-236, 48, 56, -322, -322, 165, -226, -140, -256, 76,
	-257, -261, -212, -207, -209, -208, -402, -245, -403, -284,
	-255, -257, -165, -166, -166, -165, -166, 66, 66, 66,
	71, 66, 71, 66, -182, -290, -403, -403, -9, -9,
	-140, -293, 77, -163, -163, -187, -290, 165, 401, 405,
	406, -346, -396, 116, 140, 31, 76, 361, 102, -394,
	173, 534, 585, 590, 546, 538, 580, -395, 240, 133,
	134, 252, 25, 41, 88, 87, 88, 87, 88, 87,
	-278, -277, -43, -42, -340, -340, 95, -373, 93, 93,
	236, 26, -185, 76, 76, 76, -109, 643, 95, 86,
	-3, 81, -140, 86, 19, -329, -212, -364, -316, -365,
	-317, -318, -5, -6, -341, -112, 57, 102, -61, 44,
	235, 623, 624, 124, -402, 636, -356, -246, -360, -362,
	-185, -143, -402, -142, -144, -151, 163, 164, -213, -185,
	-133, 285, 293, 86, -137, 90, -377, 77, 276, 361,
	276, -399, 306, 93, -399, -185, -81, -47, -185, -273,
	-273, 33, -373, -403, -158, -150, -402, -307, 504, -315,
	-315, -315, -324, -315, 320, -315, 320, -315, -403, -403,
	87, -403, 22, -403, -140, -117, 443, 87, 87, -403,
	86, 86, -140, -403, -403, -403, -403, -403, 87, -403,
	-403, -403, 87, -305, 591, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -89, -285, -284, -90, 555,
	555, -403, -90, -218, 87, -403, -403, 87, -403, 87,
	87, -403, 87, -403, 87, -190, 22, -190, -190, -403,
	-251, -185, -193, -219, 16, -232, 51, 338, -243, -242,
	55, 47, -240, 19, 49, 19, 30, -256, 87, 148,
	87, -403, -403, 87, 57, 218, -403, -193, -176, -175,
	76, 77, -177, 76, -175, 66, 66, -247, -403, -403,
	87, -254, -163, -193, -193, 218, 116, -402, -145, -157,
	-143, 12, 93, 93, -373, -393, 627, 628, 31, 95,
	-340, -340, 134, 134, -185, 86, -320, 93, -320, 95,
	95, 31, 82, 83, 84, 31, 78, 79, 80, -185,
	-185, -185, -185, -361, 86, 19, -140, 86, 148, 88,
	-246, -246, 272, 159, -340, 621, 278, 278, -340, -340,
	-340, -111, -110, 643, 88, -403, 87, -327, 498, 501,
	-140, -152, -152, -247, 88, -369, 498, -376, -284, -284,
	-284, -284, 95, 97, -146, -403, -320, -140, -140, -226,
	93, -140, -140, 95, 95, -403, -204, -140, -403, -173,
	-172, -174, 604, 116, 31, -304, -403, -206, 270, -96,
	-95, -94, 14, -403, -140, -140, -140, -140, -140, -140,
	-402, 66, 18, 16, -402, -402, -293, -219, -220, 17,
	19, -233, 53, -231, 52, -231, -242, 19, 19, 93,
	19, 93, 134, -261, -140, -209, 57, -11, -284, -207,
	-284, -221, -140, 86, -140, -154, -193, -193, -140, -199,
	467, 469, 470, 471, 468, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 472, 446, 105, 107, 106,
	447, 448, 449, 489, 492, 493, 491, 490, 347, 348,
	450, 451, 452, 108, 109, 110, 111, 112, 113, 114,
	453, 456, 454, 457, 458, 459, 464, 465, 460, 461,
	462, 463, 466, 483, 484, 485, 486, 487, 488, 592,
	593, 594, 595, 93, 93, 86, -140, 88, 88, -247,
	-360, -58, 88, -246, 95, 88, 273, -208, -402, 93,
	-340, -340, -340, 95, 95, -292, -403, 87, -284, -395,
	-362, 502, 502, -403, 25, -368, -367, -286, 86, 77,
	-121, 159, 498, -403, -403, -403, -403, -403, 88, 88,
	-403, -403, 87, -403, -172, -174, -403, 76, -154, -221,
	19, -93, 295, 297, -93, -403, 87, -403, -403, 87,
	-403, 87, -403, -248, -403, -284, 240, 19, 19, -248,
	-248, -192, -220, -103, -102, -101, 528, -140, -204, -234,
	54, 76, 119, 93, 93, 93, 12, -207, 218, -226,
	-246, -170, 368, -221, -403, -246, 88, 25, 88, 645,
	134, 88, -208, -120, -402, 269, -292, 93, 93, -110,
	-113, -11, 87, 148, -246, -185, -403, 496, 73, 499,
	-204, -403, 76, 509, 604, -88, -87, -84, 615, 641,
	-204, -90, -90, -140, -140, -140, 87, -403, -403, -403,
	-103, 87, -100, -99, -284, 76, 119, -257, -284, 88,
	-403, -402, -226, 88, -230, -11, 86, -3, 269, -316,
	-365, -317, -318, -5, -6, -341, -79, 498, -367, -345,
	-286, 93, 95, 88, 62, 497, 500, -403, -86, 142,
	613, 588, -141, -152, -149, -403, 87, -403, 87, -403,
	87, -284, 240, -101, 87, 25, -293, -171, -169, -284,
	552, -386, -385, 494, -396, -392, 116, 140, 102, -394,
	590, 546, 125, 126, -79, -140, 86, -403, -80, 284,
	600, -377, 62, -86, 614, 566, 540, 566, 540, -140,
	-140, -140, -99, -402, -403, 87, 22, -308, -60, 563,
	-383, -384, 76, -387, 374, 562, 583, 116, 93, 88,
	-246, 245, -369, 498, 139, -403, 87, -403, 87, -403,
	-89, -169, 559, -321, -154, -384, 76, -383, 76, 13,
	12, -4, 644, 88, 286, 499, -86, -140, -140, -403,
	-59, 26, -170, -382, 253, 248, 251, 32, -382, 95,
	-4, 500, -403, -403, 563, 247, 31, 116, -154, -173,
	-172, -172,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 72, 74, 75, 836,
	836, 836, 0, 836, 0, 0, 836, -2, -2, 836,
	1432, 0, 836, 0, 0, -2, 764, 770, 0, 772,
	-2, 0, 0, 781, 1972, 1972, 831, 0, 0, 0,
	0, 0, 836, 836, 836, 836, 1289, 52, 836, 0,
	87, 88, 787, 788, 789, 67, 0, 1970, 1, 3,
	73, 77, 0, 0, 0, 60, 1298, 0, 80, 0,
	0, 840, 0, 838, 0, 1415, 836, 836, 0, 118,
	119, 0, 0, 0, -2, 122, -2, 151, 152, 153,
	0, 158, 578, 505, 557, 503, 542, -2, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 381, 381, 0, 0, -2, 491, 491, 491,
	1417, 0, 0, 0, 539, 443, 381, 381, 381, 0,
	381, 381, 381, 381, 0, 0, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 1316, 157, 1433, 1430, 1431, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 0, 1409, 0, 691, 937, 0, 753,
	753, 0, 753, 753, 753, 753, 0, 0, 0, 703,
	0, 0, 0, 0, 750, 0, 719, 720, 0, 750,
	0, 726, 756, 0, 731, 753, 753, 734, 1973, 0,
	1973, 1973, 1400, 0, 747, 745, 759, 760, 39, 763,
	766, 767, 768, 769, 771, 0, 776, 779, 1426, 1427,
	42, 43, 44, 0, 794, 51, 1681, 786, 799, 800,
	0, 832, 833, 47, 1080, 0, 959, 964, 975, 990,
	991, 992, 993, 994, 996, 997, 998, 0, 0, 0,
	0, 1003, 1004, 0, 0, 0, 0, 0, 1061, 1012,
	0, 0, 0, 1264, 0, 1225, 1225, 1096, 1225, 1227,
	1227, 1633, 1765, 1773, 1889, 1596, 1601, 1602, 1603, 1882,
	1883, 1884, 1885, 1923, 1924, 1928, 1693, 0, 0, 0,
	1969, 1728, 1736, 1737, 1759, 1855, 1909, 1690, 1710, 1711,
	1837, 1838, 1732, 1733, 1714, 1726, 1729, 1717, 1718, 1720,
	1722, 1727, 1734, 1740, 1719, 1739, 1738, 0, 1715, 1716,
	1721, 1731, 1735, 1723, 1724, 1725, 1730, 1741, 0, 0,
	0, 0, 0, 1172, 1173, 1174, 0, 0, 0, 0,
	0, 0, 0, 277, 278, 1273, -2, -2, -2, 1079,
	1387, 0, 1227, 1227, 1227, 1227, 1227, 1021, 1022, 1023,
	1024, 1025, 1049, 1050, 1056, 1057, 1832, 1833, 1834, 1835,
	1674, 1918, 1682, 1683, 1817, 1818, -2, 223, 224, 225,
	226, 227, 228, 229, 0, 219, 0, 0, 282, 283,
	279, 280, 281, 1063, 1064, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275, 276, 1972, 0, 809,
	0, 0, 0, 0, 0, 1298, 0, 1290, 1289, 65,
	0, 836, -2, 0, 0, 0, 0, 49, 0, 54,
	896, 79, 78, 1338, 0, 0, 0, 61, 1299, 69,
	71, 1300, 0, 841, 842, 0, 872, 876, 0, 837,
	0, 0, 1416, 1415, 1415, 104, 0, 0, 1391, 116,
	117, 0, 0, 1398, 1399, 1402, 1403, 45, 46, 0,
	0, 169, 170, 0, 40, 408, 0, 165, 0, 401,
	342, 0, 1316, 0, 0, 0, 0, 0, 836, 0,
	1410, 146, 147, 154, 155, 156, 381, 381, 381, 554,
	0, 0, 157, 157, 512, 513, 514, 0, 0, -2,
	406, 0, 492, 0, 0, 395, 395, 399, 397, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 0,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 382, 0, 552, 553, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1419, 0, 529, 530,
	0, 0, 0, 381, 381, 0, 0, 0, 0, 381,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	1329, 0, 0, 0, -2, 0, 683, 0, 0, 0,
	1411, 1411, 0, 690, 0, 692, 693, 0, 0, 694,
	0, 750, 750, 748, 749, 696, 697, 698, 699, 753,
	0, 0, 390, 391, 392, 750, 753, 0, 753, 753,
	753, 753, 750, 750, 750, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 756, 753, 0, 727,
	0, 728, 729, 732, 733, 735, 1974, 1975, 1428, 1429,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1973,
	1973, 739, 743, 1401, 765, 777, 780, 797, 795, 796,
	798, 790, 791, 792, 793, 0, 811, 812, 817, 0,
	0, 0, 0, 823, 824, 825, 0, 0, 828, 829,
	830, 0, 0, 0, 0, 0, 957, 0, 0, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 977, 0, 0, 0, 999, 1000,
	1001, 1002, 1005, 0, 0, 0, 1010, 1011, 0, 0,
	0, 0, 0, 1265, 0, 1094, 0, 1095, 1097, 1098,
	0, 1099, 846, 846, 846, 846, 846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1421, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 856, 0, 0, 856, 856, 0,
	0, 0, 212, 213, 214, 215, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 231, 232,
	233, 234, 284, -2, 0, -2, 1079, 0, 0, 0,
	48, 801, 802, 0, 920, 1421, 0, 0, 852, 0,
	59, 68, 70, 1298, 63, 1298, 0, 858, 0, 0,
	-2, -2, 859, 865, 866, 867, 868, 869, 56, 1971,
	57, 0, 76, 0, 50, 0, 0, 0, 0, 354,
	1341, 0, 0, 1291, 1292, 1295, 0, 873, 1771, 877,
	0, 879, 880, 0, 839, 0, 102, 0, 936, 0,
	0, 0, 0, 1397, 0, 106, 107, 0, 0, 0,
	365, 1404, 1405, 1406, -2, 388, 0, 365, 349, 292,
	293, 294, 342, 296, 342, 342, 342, 342, 354, 354,
	354, 354, 325, 326, 327, 328, 329, 0, 0, 311,
	342, 342, 342, 342, 332, 333, 334, 335, 336, 337,
	338, 339, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 344, 344, 344, 346, 346, 0, 41, 0, 369,
	0, 1295, 0, 0, 1329, 1413, 1423, 0, 0, 0,
	1413, 124, 0, 0, 0, 555, 589, 506, 543, 556,
	0, 509, 510, -2, 0, 0, 491, 0, 493, 0,
	389, 0, -2, 0, 399, 0, 395, 399, 396, 399,
	387, 400, 533, 534, 535, 0, 537, 538, 619, 906,
	0, 0, 0, 0, 0, 625, 626, 627, 0, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 493, 0, 540, 0, 0, 445, 446, 447, 0,
	0, 450, 451, 452, 453, 0, 0, 456, 457, 458,
	923, 924, 459, 460, 485, 486, 487, 461, 462, 463,
	464, 465, 466, 467, 479, 480, 481, 482, 483, 484,
	468, 469, 470, 471, 472, 473, 476, 0, 139, 1320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 855, 938,
	1434, 1435, 754, 755, 0, 393, 394, 753, 753, 700,
	740, 0, 753, 704, 741, 705, 707, 706, 708, 721,
	722, 753, 711, 751, 752, 712, 713, 714, 715, 716,
	717, 718, 736, 723, 724, 725, 757, 0, 761, 762,
	737, 738, 0, 778, 782, 783, 784, 785, 0, 0,
	814, 98, 819, 820, 821, 822, 834, 827, 1081, 954,
	955, 956, 0, 958, 961, 0, 1065, 1067, 963, 965,
	1076, 1077, 1078, 0, 0, 0, 0, 0, 969, 973,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 995, 1241, 1242, 1243, 1013, 285, 286, 0,
	1014, 0, 870, 0, 0, 0, 0, 0, 0, 1271,
	1268, 0, 0, 1226, 1228, 0, 0, 0, 0, 847,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1244, 0, 0, 0, 0, 0, 1264, 0, 1016, 1017,
	1018, 0, 0, 0, 1132, 0, 0, 0, 0, 1422,
	0, 134, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1175,
	1176, 1177, 1178, 38, 0, 0, 0, 0, 0, 857,
	1275, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 1385, 0, 0, 804, 805, 807, 0,
	940, 0, 921, 0, 0, 810, 0, 851, 0, 854,
	62, 64, 863, 864, 0, 881, 860, 58, 53, 0,
	0, 898, 1339, 354, 1361, 0, 363, 363, 360, 1301,
	1302, 0, 1294, 1296, 1297, 81, 878, 874, 0, 952,
	0, 0, 935, 0, 884, 886, 887, 888, 918, 0,
	891, 0, 0, 0, 0, 0, 100, 937, 1392, 105,
	0, 0, 110, 111, 1393, 1394, 1395, 1396, 0, 578,
	-2, 440, 171, 173, 174, 175, 166, -2, 352, 350,
	351, 295, 354, 354, 319, 320, 321, 322, 323, 324,
	0, 0, 312, 313, 314, 315, 306, 0, 307, 308,
	309, 0, 310, 407, 0, 1303, 370, 371, 373, 381,
	0, 376, 377, 0, 381, 381, 0, 402, 403, 0,
	1295, 1320, 0, 0, 0, 1424, 1423, 1423, 1423, 0,
	159, 160, 161, 162, 163, 164, 614, 0, 0, 590,
	612, 613, 157, 0, 0, 167, 495, 494, 0, 646,
	0, 405, 0, 0, 399, 399, 384, 385, 536, 0,
	0, 621, 622, 623, 624, 0, 0, 0, 522, 434,
	0, 523, 524, 493, 495, 0, 0, 365, 448, 449,
	454, 455, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 569, 570, 571, 572, 497, 576,
	573, 497, 577, 1317, 1318, 1319, 0, 0, 684, 0,
	0, 431, 96, 1412, 689, 750, 710, 742, 750, 702,
	709, 730, 774, 818, 0, 0, 0, 0, 826, 0,
	0, 962, 1066, 1068, 966, 0, 970, 974, 0, 0,
	0, 0, 0, 0, 0, 1062, 1086, 1087, 0, 0,
	0, 1269, 0, 0, 1093, 1229, 1230, 1100, 0, 0,
	0, 0, 0, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1289, 0, 0, 0, 0, 0, 1121,
	1122, 1123, 1124, 1125, 0, 1127, 0, 0, 1130, 1131,
	1133, 0, 0, 1136, 1137, 0, 0, 1138, 0, 0,
	0, 1142, 0, 0, 0, 0, 1151, 1152, 1153, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 1166, 0, 1044, 0, 0, 1044, 0, 1082, 0,
	0, 856, 0, 1231, 1232, 1233, 1234, 1235, 0, 0,
	0, 0, 0, 0, 1198, 1199, 1201, 1275, 1386, 803,
	806, 808, 894, 941, 942, 0, 0, 0, 0, 922,
	1420, 849, 850, 853, 900, 0, 1277, 0, 0, 881,
	952, 882, 0, 861, 55, 897, 0, 1343, 1342, 1355,
	1368, 363, 363, 357, 358, 364, 359, 361, 362, 1293,
	0, 1298, 0, 1379, 0, 0, 1371, 0, 0, 0,
	0, 0, 0, 0, 0, 925, 0, 0, 928, 0,
	0, 0, 0, 919, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 94, 95, 0, 0, 0, 108, 109,
	0, 0, 115, 366, 367, 148, 157, 442, 172, 415,
	0, 0, 291, 353, 316, 317, 318, 0, 340, 0,
	0, 0, 436, 120, 1307, 1306, 381, 381, 372, 0,
	375, 0, 0, 0, 1425, 343, 404, 0, 138, 0,
	0, 0, 0, 0, 144, 584, 0, 0, 591, 0,
	0, 0, 504, 0, 515, 516, 0, 618, -2, 680,
	369, 0, 383, 386, 907, 0, 0, 517, 0, 520,
	521, 435, 495, 526, 527, 541, 528, 477, 478, 475,
	0, 0, 1330, 1331, 1336, 1334, 1335, 125, 562, 564,
	563, 567, 0, 0, 499, 0, 499, 560, 0, 431,
	1303, 0, 688, 432, 433, 753, 753, 813, 99, 0,
	816, 0, 0, 0, 0, 967, 971, 871, 0, 1262,
	342, 342, 1249, 342, 346, 1252, 342, 1254, 342, 1257,
	342, 1260, 1261, 0, 0, 0, 0, 1092, 1272, 0,
	1101, 1102, 1103, 1104, 1105, 1266, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 0, 136, 137, 0,
	0, 0, 0, 0, 0, 1202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1039, 1043, 0, 1045,
	1046, 0, 0, 1168, 0, 0, 1179, 1083, 1084, 0,
	1276, 0, 0, 0, 0, 0, 0, 943, 948, 948,
	948, 0, 0, 0, 1407, 1408, 1278, 1279, 952, 1280,
	883, 862, 899, 1361, 0, 1354, 0, -2, 1363, 0,
	0, 0, 1369, 355, 356, 875, 82, 953, 85, 0,
	1379, 1388, 0, 1370, 1381, 1383, 0, 0, 0, 1375,
	0, 952, 885, 914, 916, 0, 911, 926, 927, 929,
	0, 931, 0, 933, 934, 896, 890, 892, 0, 0,
	0, 102, 0, 952, 952, 101, 0, 939, 112, 113,
	114, 441, 176, 181, 0, 0, 0, 186, 0, 188,
	0, 0, 0, 193, 194, 381, 381, 416, 0, 288,
	290, 0, 0, 179, 354, 0, 354, 0, 347, 0,
	417, 437, 1304, 1305, 0, 0, 374, 378, 379, 380,
	0, 1414, 140, 0, 0, 0, 587, 0, 615, 0,
	0, 0, 0, 0, 0, 168, 496, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 0, 381, 0, 0,
	0, 381, 381, 381, 0, 672, 368, 0, 0, 643,
	640, 518, 0, 217, 218, 220, 0, 0, 525, 896,
	1321, 1322, 1323, 0, 1333, 1337, 128, 0, 0, 0,
	0, 574, 0, 498, 575, 685, 686, 687, 97, 695,
	701, 815, 835, 960, 968, 972, 0, 0, 1263, 1247,
	354, 1250, 1251, 1253, 1255, 1256, 1258, 1259, 1008, 1009,
	0, 1089, 0, 1091, 1270, 1298, 0, 0, 0, 1119,
	0, 0, 0, 1128, 1129, 1134, 1135, 1139, 0, 1141,
	1143, 1144, 0, 0, 0, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 0, 1037, 1040, 1167, 1047,
	1048, 1053, 1170, 0, 0, 1085, 1181, 0, 1186, 0,
	0, 1192, 0, 1196, 0, 0, 0, 0, 0, 920,
	901, 66, 1280, 1282, 0, 1348, 1346, 1346, 1356, 1357,
	0, 0, 1364, 0, 0, 0, 0, 86, 0, 0,
	0, 1384, 0, 0, 0, 0, 103, 1289, 908, 915,
	0, 0, 909, 0, 910, 930, 932, 889, -2, 893,
	0, 952, 952, 92, 93, 0, 182, 0, 184, 210,
	211, 0, 187, 189, 190, 191, 197, 198, 199, 192,
	0, 0, 287, 289, 0, 0, 330, 341, 331, 0,
	0, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 896,
	141, 142, 143, 579, 0, 589, 0, 0, 0, 582,
	0, 507, 0, 0, 0, 381, 381, 381, 0, 0,
	0, 0, 657, 0, 0, 620, 0, 628, 0, 0,
	0, 221, 222, 0, 1332, 561, 0, 126, 127, 0,
	0, 566, 500, 501, 1236, 1007, 1248, 0, 0, 0,
	1267, 0, 0, 0, 0, 1126, 0, 0, 1147, 0,
	0, 0, 609, 610, 0, 1203, 1042, 1289, 0, 1044,
	1054, 1055, 0, 1044, 1180, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 940, 1282, 1287, 0,
	0, 1351, 0, 1344, 1347, 1345, 1358, 0, 0, 1365,
	0, 1367, 0, 1389, 1390, 1382, 0, 1374, 1377, 1373,
	1376, 1298, 912, 0, 917, 0, 1289, 91, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 0, 0, 345, 348, 0,
	0, 0, 580, 0, 592, 583, 0, 670, 0, 674,
	0, 0, 0, 677, 678, 679, 656, 0, 660, 409,
	644, 641, 642, 519, 0, 129, 130, 0, 0, 0,
	0, 0, 0, 1088, 1090, 1116, 1117, 1118, 1245, 1246,
	1140, 1145, 0, 1148, 0, 0, 1149, 0, 611, 1033,
	0, 0, 1051, 1052, 0, 1182, 0, 1187, 1188, 0,
	1193, 0, 1197, 0, 945, 902, 903, 950, 951, 0,
	0, 895, 1287, 84, 1288, 1285, 0, 1283, 1281, 1340,
	0, 1349, 1350, 1359, 1360, 1366, 0, 1372, 0, 89,
	0, 0, 0, 1298, 183, 0, 202, 0, 588, 0,
	591, 581, 668, 669, 0, 681, 673, 675, 676, 658,
	-2, 1324, 0, 0, 0, 568, 1006, 0, 0, 0,
	0, 1150, 0, 607, 608, 1041, 1034, 0, 1019, 1020,
	1038, 1169, 1171, 0, 0, 0, 0, 944, 946, 947,
	83, 0, 1284, 1059, 0, 1352, 1353, 1380, 1378, 913,
	920, 0, 90, 422, 415, 1324, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 558, 1326, 131, 132,
	488, 489, 490, 125, 1237, 0, 1240, 1146, 1035, 0,
	0, 0, 0, 1031, 1032, 1183, 0, 1189, 0, 1194,
	0, 904, 905, 1286, 0, 0, 593, 0, 595, 0,
	-2, 410, 423, 0, 177, 203, 204, 0, 0, 207,
	208, 209, 200, 201, 121, 0, 0, 682, 0, 1327,
	1328, 128, 1238, 0, 1026, 1027, 1028, 1029, 1030, 0,
	0, 0, 1060, 1039, 594, 0, 0, 365, 0, 604,
	411, 412, 0, 418, 419, 420, 421, 205, 206, 616,
	0, 0, 565, 0, 0, 1184, 0, 1190, 0, 1195,
	0, 596, 597, 605, 0, 413, 0, 414, 0, 0,
	0, 585, 0, 616, 1325, 0, 1036, 0, 0, 1058,
	0, 606, 602, 424, 426, 427, 0, 0, 425, 617,
	586, 1239, 1185, 1191, 0, 428, 429, 430, 598, 599,
	600, 601,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 646,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:579
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:625
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:631
		{
			yyLOCAL = NewVariable(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:642
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:656
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:666
		{
			yyLOCAL = NewVariable(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:670
		{
			yyLOCAL = NewVariable(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:676
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:682
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:688
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:692
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:701
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:711
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:717
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:918
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:922
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:951
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:952
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:956
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:966
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:970
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:976
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:989
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:995
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1011
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1021
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1025
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1029
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1035
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1039
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1043
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1047
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1053
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1057
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1069
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1076
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1085
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1089
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1100
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1105
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1120
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1125
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1131
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1151
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1157
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1173
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1180
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1187
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1192
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1197
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1202
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1209
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1216
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1227
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1238
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1244
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1248
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1252
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1256
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1280
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1284
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1294
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1300
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1304
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1310
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1314
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1320
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1330
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1335
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1368
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1377
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = ""
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = ""
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1440
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1449
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1458
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1475
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1485
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1489
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1493
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1499
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1503
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1553
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1586
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Armscii8Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = ASCIIStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Big5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = UBinaryStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Cp1250Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Cp1251Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Cp1256Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Cp1257Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Cp850Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Cp852Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Cp866Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Cp932Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = Dec8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = EucjpmsStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = EuckrStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Gb18030Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Gb2312Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = GbkStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Geostd8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = GreekStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = HebrewStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Hp8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Keybcs2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Koi8rStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Koi8uStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Latin1Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Latin2Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Latin5Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Latin7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = MacceStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = MacromanStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = SjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Swe7Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Tis620Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Ucs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = UjisStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Utf16Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Utf16leStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Utf32Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Utf8mb4Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Utf8Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1829
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1837
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1843
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1847
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1851
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1857
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1861
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1868
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1872
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1876
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1880
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2117
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2122
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2126
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2134
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2144
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2165
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2169
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2205
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2216
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2220
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2225
		{
			yyVAL.str = ""
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2239
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2248
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2254
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2264
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2268
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2273
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2277
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2281
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2285
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2289
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2293
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = ""
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2309
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2313
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2317
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2321
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2325
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2330
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = yyDollar[2].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = "key"
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2392
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2402
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2406
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2412
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2416
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2422
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2426
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2432
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2438
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2442
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2446
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2450
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2454
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2463
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2469
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2475
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2481
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2485
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2489
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2494
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2498
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2504
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2510
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2516
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2520
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2524
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2528
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2532
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2551
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2564
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2573
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2579
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2593
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2627
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2631
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2635
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2639
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2787
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2796
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2805
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2809
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2818
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2822
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2826
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2834
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2840
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2862
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2900
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2904
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2908
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2928
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2932
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2952
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2956
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2960
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2982
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3222
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3231
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3239
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3248
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3255
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3267
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3276
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3291
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3296
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3300
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3305
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3309
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3315
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3321
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3327
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3341
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3347
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3353
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3359
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3365
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3379
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3383
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3389
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3395
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3401
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3405
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3409
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3415
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3419
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3424
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3428
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3433
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3437
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3443
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3447
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3451
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3455
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3459
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3463
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3467
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3471
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3475
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3479
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3483
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3487
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3491
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3495
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3499
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3503
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3507
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3511
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3515
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3519
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3523
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3527
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3546
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3556
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3561
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3565
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3570
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3575
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3580
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3585
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3590
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3596
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3602
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3607
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3613
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3619
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3629
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3634
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3638
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3643
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3648
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3653
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3658
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3664
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3670
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3677
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3684
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3691
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3699
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3709
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3715
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3721
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3727
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3733
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3739
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3751
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3773
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3777
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = "extended "
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4041
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4045
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4069
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4079
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4083
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4093
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4099
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.tableIdent = NewTableIdent("@" + string(yyDollar[1].str))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.tableIdent = NewTableIdent("@@" + string(yyDollar[1].str))
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4182
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4204
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4208
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4212
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4216
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4220
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4224
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.str = yyDollar[1].str
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = yyDollar[1].str
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = yyDollar[1].str
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4295
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4301
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4311
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4317
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4321
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4325
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4329
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4347
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4351
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4359
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4367
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4427
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			setAllowComments(yylex, true)
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4464
		{
			yyVAL.strs = nil
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = SQLCacheStr
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4508
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].colIdent,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4528
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4537
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4556
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4561
		{
			yyVAL.strs = nil
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4569
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4577
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = SQLCacheStr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = DistinctStr
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = DistinctStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = StraightJoinHint
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4613
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4617
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4623
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4627
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4631
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4635
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4640
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4660
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4664
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4670
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4676
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4680
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4690
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4694
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4698
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4702
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4708
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4712
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4718
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4722
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4731
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4737
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4747
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4757
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4761
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4775
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4792
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4796
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4800
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4804
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4812
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4816
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4822
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4827
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.empty = struct{}{}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4832
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4840
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4853
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4857
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4861
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4867
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4873
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4877
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4881
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4885
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4891
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4895
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4905
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4909
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4925
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4934
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4940
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4944
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4950
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4954
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4958
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4962
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4967
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4971
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4975
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4979
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5265
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5269
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5273
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5279
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5283
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5290
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5294
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5298
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5302
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5306
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5312
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5316
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5320
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5324
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5328
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5347
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5353
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5357
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5366
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5371
		{
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5380
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5386
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5390
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5402
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5408
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5412
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5418
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5422
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5428
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5432
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5444
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5450
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5454
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5460
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5466
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5470
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5476
		{
			yyVAL.str = ""
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5486
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5490
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5497
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5501
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5505
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5509
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5515
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5519
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5523
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5527
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5531
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5535
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5539
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5545
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5549
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5553
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5560
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5566
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5570
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &CountStar{Name: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &Count{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &Max{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &Min{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &Sum{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &Avg{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &BitAnd{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &BitOr{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &BitXor{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &Std{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &StdDev{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &StdPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &StdSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &VarPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &VarSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &Variance{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &GroupConcatExpr{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6085
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6091
		{
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6093
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6097
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6101
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6105
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6109
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6113
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6117
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6121
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6125
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6129
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6133
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6139
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6143
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6147
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6151
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6155
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6159
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6163
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6167
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6171
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6226
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6230
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6234
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6238
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6242
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6248
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6252
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6298
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6302
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6306
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6310
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6314
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6318
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6322
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6326
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6330
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6334
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6340
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6344
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6358
		{
			yyVAL.str = string("")
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6362
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6368
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6372
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6378
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6393
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6397
		{
			yyLOCAL = &ColName{Name: NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6401
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6405
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6430
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6434
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6449
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6455
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6459
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6468
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6477
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6483
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6489
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6493
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6499
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6504
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6508
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6512
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6521
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6527
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6531
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6535
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6544
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6548
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6552
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6556
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6563
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6567
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6571
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6575
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6581
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6585
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6589
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6593
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6598
		{
			yyVAL.str = ""
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6602
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6606
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6610
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6615
		{
			yyVAL.str = ""
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6619
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6625
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6629
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6634
		{
			yyVAL.str = ""
		}
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6638
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6643
		{
			yyVAL.str = "cascaded"
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6647
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6660
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6666
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6672
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6678
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6687
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6696
		{
			yyVAL.str = ""
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6700
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6706
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6710
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6716
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6720
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6724
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6729
		{
			yyVAL.str = ""
		}
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6733
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6737
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = ""
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6746
		{
			yyVAL.str = " header"
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6751
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6755
		{
			yyVAL.str = " manifest on"
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6759
		{
			yyVAL.str = " manifest off"
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6764
		{
			yyVAL.str = ""
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6768
		{
			yyVAL.str = " overwrite on"
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6772
		{
			yyVAL.str = " overwrite off"
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6778
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6783
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6787
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6793
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6797
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6803
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6807
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6812
		{
			yyVAL.str = ""
		}
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6816
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6822
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6832
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6836
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6840
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6845
		{
			yyVAL.str = ""
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6849
		{
			yyVAL.str = " optionally"
		}
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6862
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6866
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6870
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6874
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6878
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6884
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6888
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6892
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6896
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6905
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6911
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6915
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6921
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6925
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6931
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6935
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6950
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6954
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6960
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6966
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6970
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6976
		{
			yyDollar[1].variableUnion().Scope = ImplicitScope
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6981
		{
			yyDollar[1].variableUnion().Scope = ImplicitScope
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6986
		{
			yyDollar[1].variableUnion().Scope = ImplicitScope
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6991
		{
			variable := &Variable{VarName: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope}
			yyLOCAL = &SetExpr{Var: variable, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6996
		{
			yyDollar[2].setExprUnion().Var.Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7003
		{
			yyLOCAL = NewVariable(string(yyDollar[1].str), NoAt)
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7007
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7014
		{
			yyVAL.str = "charset"
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7024
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7028
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7032
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7041
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7043
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7046
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7051
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7053
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7056
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7058
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7061
		{
			yyVAL.empty = struct{}{}
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7063
		{
			yyVAL.empty = struct{}{}
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7065
		{
			yyVAL.empty = struct{}{}
		}
	case 1420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7069
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7078
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7085
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7089
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7095
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7099
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7106
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7112
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7116
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7122
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7126
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7133
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7694
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7703
		{
			decNesting(yylex)
		}
	case 1972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7708
		{
			skipToEnd(yylex)
		}
	case 1973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7713
		{
			skipToEnd(yylex)
		}
	case 1974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7717
		{
			skipToEnd(yylex)
		}
	case 1975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7721
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
