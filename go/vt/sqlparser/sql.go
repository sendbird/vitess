// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const INTERVAL = 57537
const JSON_EXTRACT_OP = 57538
const JSON_UNQUOTE_EXTRACT_OP = 57539
const CREATE = 57540
const ALTER = 57541
const DROP = 57542
const RENAME = 57543
const ANALYZE = 57544
const ADD = 57545
const FLUSH = 57546
const CHANGE = 57547
const MODIFY = 57548
const DEALLOCATE = 57549
const REVERT = 57550
const SCHEMA = 57551
const TABLE = 57552
const INDEX = 57553
const VIEW = 57554
const TO = 57555
const IGNORE = 57556
const IF = 57557
const PRIMARY = 57558
const COLUMN = 57559
const SPATIAL = 57560
const FULLTEXT = 57561
const KEY_BLOCK_SIZE = 57562
const CHECK = 57563
const INDEXES = 57564
const ACTION = 57565
const CASCADE = 57566
const CONSTRAINT = 57567
const FOREIGN = 57568
const NO = 57569
const REFERENCES = 57570
const RESTRICT = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const COALESCE = 57580
const EXCHANGE = 57581
const REBUILD = 57582
const PARTITIONING = 57583
const REMOVE = 57584
const PREPARE = 57585
const EXECUTE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const VINDEX = 57594
const VINDEXES = 57595
const DIRECTORY = 57596
const NAME = 57597
const UPGRADE = 57598
const STATUS = 57599
const VARIABLES = 57600
const WARNINGS = 57601
const CASCADED = 57602
const DEFINER = 57603
const OPTION = 57604
const SQL = 57605
const UNDEFINED = 57606
const SEQUENCE = 57607
const MERGE = 57608
const TEMPORARY = 57609
const TEMPTABLE = 57610
const INVOKER = 57611
const SECURITY = 57612
const FIRST = 57613
const AFTER = 57614
const LAST = 57615
const VITESS_MIGRATION = 57616
const CANCEL = 57617
const RETRY = 57618
const COMPLETE = 57619
const CLEANUP = 57620
const BEGIN = 57621
const START = 57622
const TRANSACTION = 57623
const COMMIT = 57624
const ROLLBACK = 57625
const SAVEPOINT = 57626
const RELEASE = 57627
const WORK = 57628
const BIT = 57629
const TINYINT = 57630
const SMALLINT = 57631
const MEDIUMINT = 57632
const INT = 57633
const INTEGER = 57634
const BIGINT = 57635
const INTNUM = 57636
const REAL = 57637
const DOUBLE = 57638
const FLOAT_TYPE = 57639
const DECIMAL_TYPE = 57640
const NUMERIC = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const TEXT = 57652
const TINYTEXT = 57653
const MEDIUMTEXT = 57654
const LONGTEXT = 57655
const BLOB = 57656
const TINYBLOB = 57657
const MEDIUMBLOB = 57658
const LONGBLOB = 57659
const JSON = 57660
const JSON_SCHEMA_VALID = 57661
const JSON_SCHEMA_VALIDATION_REPORT = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const NOW = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const JSON_ARRAY = 57760
const JSON_OBJECT = 57761
const JSON_QUOTE = 57762
const JSON_DEPTH = 57763
const JSON_TYPE = 57764
const JSON_LENGTH = 57765
const JSON_VALID = 57766
const JSON_ARRAY_APPEND = 57767
const JSON_ARRAY_INSERT = 57768
const JSON_INSERT = 57769
const JSON_MERGE = 57770
const JSON_MERGE_PATCH = 57771
const JSON_MERGE_PRESERVE = 57772
const JSON_REMOVE = 57773
const JSON_REPLACE = 57774
const JSON_SET = 57775
const JSON_UNQUOTE = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const WITHOUT = 57784
const VALIDATION = 57785
const UNUSED = 57786
const ARRAY = 57787
const CUME_DIST = 57788
const DESCRIPTION = 57789
const DENSE_RANK = 57790
const EMPTY = 57791
const EXCEPT = 57792
const FIRST_VALUE = 57793
const GROUPING = 57794
const GROUPS = 57795
const JSON_TABLE = 57796
const LAG = 57797
const LAST_VALUE = 57798
const LATERAL = 57799
const LEAD = 57800
const NTH_VALUE = 57801
const NTILE = 57802
const OF = 57803
const OVER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const RECURSIVE = 57807
const ROW_NUMBER = 57808
const SYSTEM = 57809
const WINDOW = 57810
const ACTIVE = 57811
const ADMIN = 57812
const AUTOEXTEND_SIZE = 57813
const BUCKETS = 57814
const CLONE = 57815
const COLUMN_FORMAT = 57816
const COMPONENT = 57817
const DEFINITION = 57818
const ENFORCED = 57819
const ENGINE_ATTRIBUTE = 57820
const EXCLUDE = 57821
const FOLLOWING = 57822
const GEOMCOLLECTION = 57823
const GET_MASTER_PUBLIC_KEY = 57824
const HISTOGRAM = 57825
const HISTORY = 57826
const INACTIVE = 57827
const INVISIBLE = 57828
const LOCKED = 57829
const MASTER_COMPRESSION_ALGORITHMS = 57830
const MASTER_PUBLIC_KEY_PATH = 57831
const MASTER_TLS_CIPHERSUITES = 57832
const MASTER_ZSTD_COMPRESSION_LEVEL = 57833
const NESTED = 57834
const NETWORK_NAMESPACE = 57835
const NOWAIT = 57836
const NULLS = 57837
const OJ = 57838
const OLD = 57839
const OPTIONAL = 57840
const ORDINALITY = 57841
const ORGANIZATION = 57842
const OTHERS = 57843
const PARTIAL = 57844
const PATH = 57845
const PERSIST = 57846
const PERSIST_ONLY = 57847
const PRECEDING = 57848
const PRIVILEGE_CHECKS_USER = 57849
const PROCESS = 57850
const RANDOM = 57851
const REFERENCE = 57852
const REQUIRE_ROW_FORMAT = 57853
const RESOURCE = 57854
const RESPECT = 57855
const RESTART = 57856
const RETAIN = 57857
const REUSE = 57858
const ROLE = 57859
const SECONDARY = 57860
const SECONDARY_ENGINE = 57861
const SECONDARY_ENGINE_ATTRIBUTE = 57862
const SECONDARY_LOAD = 57863
const SECONDARY_UNLOAD = 57864
const SIMPLE = 57865
const SKIP = 57866
const SRID = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const UNBOUNDED = 57870
const VCPU = 57871
const VISIBLE = 57872
const RETURNING = 57873
const FORMAT = 57874
const TREE = 57875
const VITESS = 57876
const TRADITIONAL = 57877
const LOCAL = 57878
const LOW_PRIORITY = 57879
const NO_WRITE_TO_BINLOG = 57880
const LOGS = 57881
const ERROR = 57882
const GENERAL = 57883
const HOSTS = 57884
const OPTIMIZER_COSTS = 57885
const USER_RESOURCES = 57886
const SLOW = 57887
const CHANNEL = 57888
const RELAY = 57889
const EXPORT = 57890
const AVG_ROW_LENGTH = 57891
const CONNECTION = 57892
const CHECKSUM = 57893
const DELAY_KEY_WRITE = 57894
const ENCRYPTION = 57895
const ENGINE = 57896
const INSERT_METHOD = 57897
const MAX_ROWS = 57898
const MIN_ROWS = 57899
const PACK_KEYS = 57900
const PASSWORD = 57901
const FIXED = 57902
const DYNAMIC = 57903
const COMPRESSED = 57904
const REDUNDANT = 57905
const COMPACT = 57906
const ROW_FORMAT = 57907
const STATS_AUTO_RECALC = 57908
const STATS_PERSISTENT = 57909
const STATS_SAMPLE_PAGES = 57910
const STORAGE = 57911
const MEMORY = 57912
const DISK = 57913
const PARTITIONS = 57914
const LINEAR = 57915
const RANGE = 57916
const LIST = 57917
const SUBPARTITION = 57918
const SUBPARTITIONS = 57919
const HASH = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	596, 145,
	-2, 153,
	-1, 48,
	128, 153,
	168, 153,
	324, 153,
	-2, 484,
	-1, 55,
	35, 699,
	228, 699,
	239, 699,
	274, 713,
	275, 713,
	-2, 701,
	-1, 60,
	230, 724,
	-2, 722,
	-1, 114,
	227, 1239,
	-2, 119,
	-1, 116,
	1, 146,
	596, 146,
	-2, 153,
	-1, 127,
	129, 376,
	233, 376,
	-2, 478,
	-1, 146,
	128, 153,
	168, 153,
	324, 153,
	-2, 493,
	-1, 680,
	212, 1260,
	-2, 1256,
	-1, 681,
	212, 1261,
	-2, 1257,
	-1, 755,
	59, 792,
	-2, 807,
	-1, 792,
	144, 1659,
	-2, 112,
	-1, 793,
	144, 1504,
	-2, 113,
	-1, 799,
	144, 1586,
	-2, 1233,
	-1, 944,
	144, 1433,
	-2, 1230,
	-1, 985,
	238, 41,
	243, 41,
	-2, 387,
	-1, 1065,
	1, 532,
	596, 532,
	-2, 153,
	-1, 1298,
	59, 793,
	-2, 812,
	-1, 1299,
	59, 794,
	-2, 813,
	-1, 1352,
	128, 153,
	168, 153,
	324, 153,
	-2, 425,
	-1, 1431,
	129, 376,
	233, 376,
	-2, 478,
	-1, 1440,
	238, 42,
	243, 42,
	-2, 388,
	-1, 1733,
	212, 1265,
	-2, 1259,
	-1, 1815,
	128, 153,
	168, 153,
	324, 153,
	-2, 426,
	-1, 1822,
	25, 174,
	-2, 176,
	-1, 2057,
	86, 39,
	-2, 848,
	-1, 2108,
	77, 94,
	86, 94,
	-2, 868,
	-1, 2175,
	571, 627,
	-2, 614,
	-1, 2306,
	49, 1201,
	-2, 1195,
	-1, 2517,
	86, 39,
	-2, 849,
	-1, 2555,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 841,
	-1, 2870,
	22, 1588,
	32, 1588,
	169, 1588,
	250, 1588,
	304, 1588,
	305, 1588,
	306, 1588,
	307, 1588,
	308, 1588,
	309, 1588,
	310, 1588,
	312, 1588,
	313, 1588,
	314, 1588,
	315, 1588,
	316, 1588,
	317, 1588,
	318, 1588,
	319, 1588,
	320, 1588,
	321, 1588,
	322, 1588,
	323, 1588,
	325, 1588,
	327, 1588,
	328, 1588,
	329, 1588,
	330, 1588,
	331, 1588,
	332, 1588,
	333, 1588,
	334, 1588,
	335, 1588,
	338, 1588,
	339, 1588,
	340, 1588,
	341, 1588,
	342, 1588,
	343, 1588,
	344, 1588,
	345, 1588,
	346, 1588,
	454, 1588,
	-2, 572,
}

const yyPrivate = 57344

const yyLast = 41649

var yyAct = [...]int{
	680, 2650, 2651, 2924, 2265, 2932, 2649, 2802, 2900, 689,
	2901, 2868, 1355, 2450, 1767, 2852, 1747, 1812, 2358, 2365,
	2627, 2011, 2406, 673, 37, 1129, 2045, 1749, 2755, 2317,
	1277, 3, 682, 605, 2664, 1882, 2433, 2432, 770, 2778,
	96, 601, 748, 2372, 2320, 2520, 1313, 2264, 2318, 2669,
	2321, 186, 2229, 2263, 186, 2080, 565, 186, 683, 671,
	672, 627, 581, 674, 186, 2526, 2435, 1786, 2315, 2103,
	2546, 2307, 186, 2072, 2512, 1845, 597, 2140, 2172, 2212,
	599, 1850, 598, 1870, 2141, 1077, 1409, 186, 2142, 1801,
	1771, 155, 797, 771, 36, 2092, 1791, 2064, 593, 1790,
	1300, 752, 947, 756, 38, 993, 2047, 1727, 1015, 581,
	1650, 1438, 581, 186, 581, 1702, 1640, 750, 1454, 1891,
	1703, 773, 141, 1869, 1598, 1778, 1852, 1924, 2134, 980,
	1344, 95, 1322, 975, 794, 91, 2110, 1793, 1280, 610,
	1662, 1148, 1617, 1549, 1545, 954, 1106, 1445, 951, 986,
	1867, 1531, 955, 981, 982, 1343, 1327, 762, 1430, 1341,
	1127, 1122, 1554, 124, 1061, 983, 1841, 1404, 125, 1699,
	784, 760, 76, 98, 757, 159, 119, 97, 588, 1219,
	117, 118, 1740, 2811, 758, 1215, 1772, 2165, 89, 2925,
	1884, 1885, 1886, 1884, 2403, 2191, 2190, 1922, 85, 2163,
	2610, 2220, 2574, 759, 77, 568, 2221, 126, 188, 189,
	190, 8, 7, 778, 6, 783, 2833, 1516, 2654, 90,
	1605, 1604, 1603, 120, 1602, 2832, 764, 1744, 1745, 1601,
	1600, 1149, 1587, 591, 997, 592, 2043, 2889, 1020, 2303,
	2500, 948, 538, 2654, 589, 973, 1592, 2941, 2899, 1149,
	751, 2915, 1017, 2387, 749, 2904, 2586, 1610, 2074, 2751,
	1028, 2750, 1019, 1018, 2940, 1031, 1032, 1033, 791, 1036,
	1037, 1038, 1039, 964, 765, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 120, 971, 996, 798, 772, 970, 969, 1307,
	1861, 959, 2653, 2620, 2862, 78, 2621, 972, 80, 2424,
	2928, 102, 1730, 1021, 1022, 1023, 2833, 1962, 2828, 2913,
	78, 2628, 2421, 2853, 1855, 1910, 2861, 2653, 78, 2827,
	2228, 2873, 2484, 1419, 2355, 2356, 1159, 1807, 1808, 182,
	968, 2199, 1070, 1071, 2083, 2198, 1034, 1345, 2044, 1346,
	2168, 2354, 104, 105, 1159, 108, 2219, 1959, 114, 1806,
	120, 183, 1064, 121, 533, 143, 2422, 1096, 742, 2084,
	741, 2166, 2803, 78, 1073, 1097, 164, 2682, 1692, 2131,
	2878, 1960, 87, 1125, 744, 745, 746, 747, 2428, 1113,
	755, 1115, 963, 1746, 2876, 965, 2119, 87, 966, 2118,
	568, 569, 2120, 2882, 2883, 87, 2475, 153, 2374, 2375,
	2523, 2905, 142, 1101, 1102, 2877, 1181, 1084, 786, 787,
	1090, 2473, 1085, 1825, 1824, 2452, 2255, 579, 1591, 1112,
	1114, 1155, 2906, 161, 1147, 162, 583, 2760, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1190, 1189, 1191, 1192, 1155,
	87, 1432, 1433, 152, 151, 181, 1098, 1060, 577, 1284,
	1854, 1593, 1594, 1595, 1684, 1673, 1674, 1675, 1676, 1686,
	1677, 1678, 1679, 1691, 1687, 1680, 1681, 1688, 1689, 1690,
	1682, 1683, 1685, 1506, 568, 1124, 2173, 1084, 568, 968,
	2194, 960, 1085, 2425, 1936, 1933, 1935, 1934, 962, 961,
	1083, 1091, 1082, 1892, 1103, 1537, 2453, 2445, 968, 1059,
	967, 1925, 2373, 2890, 1104, 2446, 1938, 2230, 1939, 1930,
	1940, 2927, 1110, 1532, 2376, 1119, 1111, 1507, 1035, 1508,
	1929, 2207, 1105, 186, 1066, 186, 1116, 1004, 186, 2612,
	1099, 1100, 2611, 2738, 1941, 1041, 1040, 966, 147, 1434,
	154, 1002, 1431, 2454, 148, 149, 1117, 1927, 1109, 2608,
	165, 976, 1895, 87, 1787, 977, 581, 581, 581, 171,
	977, 1013, 1928, 1063, 1931, 1287, 1012, 1011, 2256, 1010,
	1009, 1008, 1007, 1423, 581, 581, 1006, 1001, 1014, 1193,
	2376, 2942, 188, 189, 190, 1960, 569, 2936, 2232, 2211,
	952, 2911, 1193, 1546, 995, 989, 952, 952, 1444, 37,
	950, 2386, 1094, 988, 1868, 2048, 2050, 1141, 1154, 1151,
	1152, 1153, 1158, 1160, 1157, 1080, 1156, 1086, 1087, 1088,
	1089, 785, 568, 1150, 2208, 2396, 1154, 1151, 1152, 1153,
	1158, 1160, 1157, 2167, 1156, 1916, 1542, 974, 2810, 1135,
	1126, 1150, 2164, 1024, 2193, 2196, 1912, 1417, 995, 967,
	2242, 2241, 2240, 2234, 1062, 2238, 1416, 2233, 1415, 2231,
	2607, 2183, 2224, 555, 2236, 1543, 1118, 1005, 967, 1858,
	569, 1413, 156, 2235, 569, 1974, 2524, 1196, 1197, 1198,
	1199, 1003, 537, 532, 1194, 1195, 2799, 1204, 2561, 1207,
	2237, 2239, 994, 1773, 1774, 1538, 1120, 998, 988, 2542,
	2826, 2206, 1443, 2115, 2205, 1275, 1813, 999, 1859, 554,
	2079, 995, 81, 1270, 2035, 116, 1857, 1131, 1132, 1739,
	1331, 552, 1256, 1075, 1193, 1192, 2353, 1000, 1107, 2761,
	2816, 767, 186, 2822, 2652, 1123, 581, 581, 2572, 2573,
	2214, 1961, 1200, 86, 2214, 2213, 994, 1079, 150, 2213,
	1860, 1030, 186, 1518, 1517, 1519, 1520, 1521, 86, 2652,
	1856, 549, 2049, 1290, 1016, 111, 86, 1294, 1555, 2603,
	563, 581, 2881, 752, 2536, 186, 1276, 1288, 144, 77,
	581, 145, 750, 1293, 1291, 560, 581, 1144, 1142, 1081,
	1143, 1926, 1539, 1347, 1145, 1093, 2934, 1072, 2248, 2935,
	1221, 2933, 1217, 1663, 1218, 794, 1095, 2156, 1164, 994,
	157, 86, 995, 2678, 998, 988, 2880, 169, 569, 1536,
	1163, 1164, 1165, 995, 999, 1069, 2578, 2577, 2426, 2427,
	1899, 1911, 112, 188, 189, 190, 1292, 1642, 1276, 1453,
	95, 2429, 1663, 1452, 1988, 1262, 1263, 1264, 1265, 1266,
	539, 1442, 541, 556, 1909, 571, 995, 570, 545, 177,
	543, 547, 557, 548, 1907, 542, 2907, 553, 1108, 1281,
	544, 558, 559, 561, 575, 574, 562, 2943, 551, 572,
	1004, 1002, 98, 2562, 1078, 87, 1342, 1622, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 1620,
	1065, 1623, 1624, 1621, 176, 178, 179, 180, 1556, 1278,
	994, 1612, 1614, 1615, 1643, 2838, 988, 991, 992, 749,
	952, 994, 751, 1312, 985, 989, 1332, 988, 991, 992,
	1309, 952, 1613, 2908, 2938, 985, 989, 186, 1289, 1165,
	1904, 1405, 2746, 1904, 2792, 984, 2745, 1337, 1338, 2736,
	1162, 1414, 1163, 1164, 994, 1165, 1029, 2839, 1533, 2250,
	1534, 2944, 2449, 1535, 2643, 2642, 798, 1187, 1188, 1190,
	1189, 1191, 1192, 2585, 581, 2584, 1440, 1908, 1779, 1780,
	1906, 1526, 1307, 2404, 1449, 2392, 2793, 2138, 1451, 1667,
	2137, 581, 581, 1668, 581, 789, 581, 581, 1165, 581,
	581, 581, 581, 581, 581, 1185, 1186, 1187, 1188, 1190,
	1189, 1191, 1192, 1864, 581, 1527, 2481, 1511, 186, 1487,
	1450, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1189,
	1191, 1192, 1966, 1967, 1968, 186, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1167, 1525, 1482, 1483, 573, 581, 1510,
	186, 694, 695, 696, 1524, 1509, 1295, 1499, 1493, 1490,
	1489, 1544, 1501, 1488, 581, 566, 186, 1162, 1513, 1163,
	1164, 1420, 1421, 1422, 1165, 1463, 1436, 2819, 1165, 2818,
	567, 1307, 186, 1162, 2796, 1163, 1164, 1446, 1446, 186,
	2795, 2794, 1429, 1316, 2741, 1448, 2726, 1165, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 581, 581, 581,
	1456, 2725, 1457, 1412, 1459, 1461, 1484, 1523, 1465, 1467,
	1469, 1471, 1473, 1181, 2677, 2223, 1162, 1426, 1163, 1164,
	1447, 1512, 1427, 1491, 1492, 2675, 2639, 1425, 186, 1497,
	1498, 2582, 1317, 1439, 2568, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1190, 1189, 1191, 1192, 2771, 1307, 1551, 2395,
	2479, 1307, 1165, 188, 189, 190, 1559, 2569, 2394, 2147,
	1165, 2135, 1984, 1563, 1272, 1565, 1566, 1567, 1568, 2020,
	1307, 1920, 1572, 1919, 1641, 188, 189, 190, 1770, 1644,
	1648, 1997, 1752, 1588, 1647, 1647, 1586, 1653, 581, 1552,
	1522, 1485, 1162, 1514, 1163, 1164, 1162, 1547, 1163, 1164,
	1504, 1500, 1165, 581, 581, 1134, 1496, 1645, 1645, 1557,
	1558, 1165, 188, 189, 190, 1162, 2122, 1163, 1164, 1495,
	1618, 120, 971, 1562, 1494, 1616, 970, 969, 1664, 1318,
	1569, 1570, 1571, 1121, 1983, 1561, 2070, 2926, 2895, 1307,
	1626, 1625, 1700, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1418, 1582, 1583, 1584,
	1165, 1585, 1731, 186, 2070, 2859, 2070, 2846, 581, 1183,
	1184, 1185, 1186, 1187, 1188, 1190, 1189, 1191, 1192, 1307,
	1162, 2768, 1163, 1164, 1979, 2909, 2070, 2842, 1162, 1165,
	1163, 1164, 186, 1978, 1700, 581, 1619, 188, 189, 190,
	2767, 1880, 101, 2834, 1307, 186, 1320, 2070, 2812, 581,
	1757, 2730, 1758, 100, 186, 99, 186, 94, 186, 186,
	581, 2618, 2809, 581, 188, 189, 190, 2729, 1878, 1733,
	1162, 2626, 1163, 1164, 581, 1181, 2174, 1731, 1177, 1162,
	1178, 1163, 1164, 2807, 2152, 794, 1735, 1736, 794, 95,
	2496, 1307, 1165, 1822, 1179, 1180, 1176, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1190, 1189, 1191, 1192, 95, 1165,
	1821, 1319, 188, 189, 190, 1307, 1876, 1165, 2070, 2737,
	1732, 1763, 1307, 1181, 2535, 1973, 2537, 1789, 1162, 581,
	1163, 1164, 2618, 1307, 2070, 2616, 1871, 1872, 1873, 1904,
	1307, 1875, 1877, 1879, 1733, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1190, 1189, 1191, 1192, 581, 1162, 1161, 1163,
	1164, 2821, 581, 1449, 1816, 764, 1449, 1826, 1449, 1827,
	1828, 1829, 1830, 1751, 1903, 1307, 1817, 1831, 1832, 1833,
	1834, 2540, 1307, 1799, 2088, 1837, 1838, 1839, 1840, 1765,
	2081, 2012, 1161, 1307, 1893, 1784, 101, 2005, 1307, 1847,
	2734, 2384, 2383, 1820, 581, 1782, 1641, 100, 1165, 99,
	100, 1853, 1641, 1641, 1165, 92, 1804, 2070, 94, 1803,
	1162, 1165, 1163, 1164, 2380, 2381, 93, 1819, 1818, 2380,
	2379, 1165, 2089, 1307, 1649, 1975, 1307, 1162, 2089, 1163,
	1164, 1655, 1656, 1960, 2192, 1162, 798, 1163, 1164, 798,
	186, 1408, 2177, 2170, 2171, 1863, 2081, 186, 1890, 1905,
	997, 2089, 186, 186, 2070, 2069, 186, 2089, 186, 2111,
	1446, 1408, 1407, 1848, 1898, 186, 1307, 1901, 1975, 1902,
	1307, 1862, 186, 1165, 1866, 2066, 681, 1843, 1844, 1874,
	1734, 2604, 1165, 1737, 1738, 2316, 2556, 2111, 1353, 1352,
	94, 2496, 2382, 2498, 2291, 2535, 1913, 1897, 1848, 1896,
	186, 581, 1900, 2494, 1165, 1805, 1904, 2348, 1975, 1165,
	996, 2005, 1915, 1994, 1914, 1165, 1960, 2535, 1917, 1918,
	1762, 1993, 2112, 1904, 1165, 1887, 1162, 187, 1163, 1164,
	187, 2114, 1162, 187, 1163, 1164, 1777, 1311, 582, 1162,
	187, 1163, 1164, 1742, 1596, 1541, 1181, 1975, 187, 1162,
	2112, 1163, 1164, 1951, 1952, 2487, 1165, 1339, 1954, 1960,
	979, 978, 1165, 187, 1923, 2139, 2886, 1955, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1190, 1189, 1191, 1192, 754,
	1165, 2849, 87, 2757, 1314, 582, 2486, 2727, 582, 187,
	582, 2029, 2689, 2602, 2599, 1618, 2407, 2028, 1944, 2580,
	2490, 1162, 2489, 1163, 1164, 2144, 2027, 1165, 2587, 1410,
	1162, 92, 1163, 1164, 1971, 1970, 1165, 1972, 94, 1846,
	1165, 2447, 93, 2409, 2405, 1165, 2178, 1478, 1842, 1836,
	1835, 1165, 1162, 1529, 1163, 1164, 1165, 1162, 2026, 1163,
	1164, 1441, 1437, 1162, 2025, 1163, 1164, 1406, 1958, 1165,
	113, 2451, 1162, 186, 1163, 1164, 87, 2758, 2588, 2589,
	2590, 186, 2024, 1064, 2547, 2548, 581, 1165, 2054, 1861,
	2361, 1619, 581, 1647, 1969, 2041, 1307, 1479, 1480, 1481,
	2058, 1755, 2921, 581, 1162, 2919, 1163, 1164, 2052, 2023,
	1162, 1165, 1163, 1164, 2143, 1165, 1645, 2553, 2022, 2902,
	2831, 2776, 2021, 2552, 1165, 2550, 186, 2015, 1162, 186,
	1163, 1164, 1987, 2014, 2401, 2362, 1977, 2400, 2013, 2399,
	37, 1165, 2316, 2157, 2121, 1945, 1589, 2892, 2085, 2105,
	2335, 2010, 1165, 2334, 2591, 1162, 1475, 1163, 1164, 2860,
	2364, 2144, 1733, 1769, 1162, 1315, 1163, 1164, 1162, 2009,
	1163, 1164, 2338, 1162, 2359, 1163, 1164, 2339, 2336, 1162,
	1761, 1163, 1164, 2337, 1162, 2541, 1163, 1164, 2374, 2375,
	2296, 2071, 581, 2008, 2067, 2360, 2295, 1162, 186, 1163,
	1164, 2592, 2593, 1476, 1477, 186, 2006, 2659, 2528, 2658,
	1281, 2042, 2791, 1732, 2670, 1162, 2527, 1163, 1164, 581,
	2104, 2668, 2340, 2002, 2098, 2099, 581, 2366, 2063, 2531,
	1449, 1449, 2305, 2169, 2001, 581, 2068, 2125, 1540, 1162,
	2078, 1163, 1164, 1162, 740, 1163, 1164, 2189, 2132, 2133,
	2378, 2129, 1162, 2109, 1163, 1164, 768, 2657, 186, 186,
	186, 186, 186, 2188, 769, 1853, 2116, 2113, 2148, 1162,
	1659, 1163, 1164, 2461, 1026, 186, 186, 2126, 2123, 1025,
	1162, 2143, 1163, 1164, 1660, 2308, 2310, 2217, 1133, 92,
	2185, 186, 2373, 2146, 2311, 2136, 94, 2184, 2149, 2150,
	93, 1985, 121, 2533, 2376, 92, 1779, 1780, 2145, 94,
	1641, 2094, 2097, 2098, 2099, 2095, 93, 2096, 2100, 2930,
	2397, 2153, 1948, 2187, 2154, 2158, 2159, 2160, 2094, 2097,
	2098, 2099, 2095, 2808, 2096, 2100, 2753, 2377, 2547, 2548,
	1429, 2179, 2180, 2102, 1766, 664, 101, 776, 777, 1937,
	1647, 2513, 1647, 1964, 2294, 1647, 750, 100, 2247, 99,
	1647, 2243, 2293, 2186, 99, 2783, 581, 2782, 94, 2676,
	2674, 2032, 2033, 1645, 2266, 1645, 2266, 2673, 1645, 2266,
	2225, 101, 581, 1645, 2266, 2226, 2666, 2278, 2279, 2280,
	2281, 2285, 100, 2271, 99, 2600, 2268, 186, 2272, 2209,
	2532, 581, 2530, 2410, 1888, 1424, 775, 580, 101, 2363,
	581, 100, 2665, 2521, 2081, 2922, 2227, 581, 581, 100,
	186, 186, 186, 186, 186, 2066, 2244, 2215, 1995, 187,
	2216, 187, 186, 1753, 187, 2285, 1333, 186, 1324, 186,
	756, 186, 2923, 2922, 186, 186, 186, 2319, 2328, 2313,
	2298, 2923, 2319, 2797, 796, 2347, 2259, 949, 2567, 956,
	1294, 766, 582, 582, 582, 103, 2299, 2273, 2274, 2275,
	2276, 2277, 2284, 106, 107, 88, 1, 2571, 2322, 2393,
	582, 582, 2875, 2286, 2287, 2288, 2289, 550, 186, 1743,
	1279, 2297, 564, 2903, 2871, 2872, 1515, 1505, 2300, 2629,
	2290, 581, 1701, 2754, 2415, 2413, 1894, 2598, 1851, 581,
	2349, 757, 987, 2350, 186, 146, 1814, 2330, 2331, 2329,
	2333, 758, 2332, 2431, 186, 1815, 2341, 2855, 110, 95,
	945, 2345, 109, 2420, 2351, 990, 2327, 2412, 1551, 186,
	1092, 1889, 186, 2619, 1305, 1301, 2357, 2130, 1823, 2417,
	2367, 2416, 2462, 2414, 2370, 1359, 1357, 2389, 1358, 1302,
	2388, 1356, 2369, 1361, 1360, 1996, 2499, 1590, 578, 2101,
	184, 1348, 1325, 1027, 540, 2439, 2438, 2385, 1921, 546,
	1205, 2292, 2390, 2391, 1759, 1760, 1304, 2117, 1303, 2430,
	795, 1853, 788, 1754, 2056, 2442, 2371, 2324, 2525, 2304,
	2306, 2073, 2309, 2411, 2302, 2790, 2368, 2667, 2847, 2127,
	1321, 1986, 1212, 2493, 1661, 1794, 1611, 603, 2457, 2456,
	602, 600, 581, 186, 1305, 1301, 2059, 2082, 1168, 684,
	2464, 2459, 2460, 2046, 1334, 2465, 2093, 2091, 187, 1302,
	2471, 2090, 582, 582, 1946, 1800, 2549, 2468, 2469, 2545,
	2470, 2867, 1796, 2472, 1792, 2474, 2065, 2476, 187, 611,
	604, 596, 2564, 2437, 1298, 1299, 1304, 2195, 1303, 2448,
	2197, 2128, 2444, 1146, 1297, 590, 958, 582, 1658, 186,
	2759, 187, 2814, 2519, 1963, 2483, 582, 1296, 1671, 1672,
	2402, 2175, 582, 2514, 2515, 1881, 63, 2570, 41, 585,
	2888, 1137, 782, 32, 31, 30, 2522, 186, 2529, 29,
	28, 23, 22, 21, 2544, 20, 2534, 19, 25, 2554,
	18, 17, 16, 2423, 2898, 2929, 115, 186, 50, 47,
	186, 186, 186, 2551, 45, 2559, 2560, 123, 122, 48,
	581, 581, 44, 1067, 42, 2557, 27, 26, 2558, 15,
	14, 2439, 2438, 2565, 2605, 2606, 13, 12, 2566, 11,
	10, 9, 5, 4, 35, 34, 33, 1140, 24, 2,
	2419, 2418, 2162, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 581, 581, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2581, 0, 2583, 0, 0, 0, 0, 0, 0, 2575,
	2576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2625, 0, 0, 0, 0, 0, 0, 0, 0, 2623,
	2624, 0, 0, 0, 1647, 0, 1647, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 186, 0, 0,
	0, 0, 2638, 0, 0, 0, 0, 1645, 2266, 1645,
	2266, 2609, 0, 2662, 0, 2613, 2614, 2615, 0, 0,
	0, 581, 0, 581, 2646, 0, 0, 0, 2645, 2634,
	582, 0, 0, 2655, 0, 0, 0, 0, 0, 0,
	2635, 2691, 0, 37, 0, 2663, 1647, 582, 582, 2319,
	582, 2683, 582, 582, 2671, 582, 582, 582, 582, 582,
	582, 796, 796, 796, 2679, 750, 2685, 2687, 2681, 1645,
	582, 2672, 0, 0, 187, 0, 0, 0, 0, 1136,
	1138, 2322, 0, 581, 0, 2322, 0, 0, 0, 2695,
	0, 187, 0, 2692, 2693, 0, 186, 2735, 0, 0,
	0, 0, 0, 0, 582, 0, 187, 0, 0, 581,
	0, 0, 0, 0, 0, 0, 2733, 2732, 0, 0,
	582, 2731, 187, 2747, 0, 0, 0, 0, 0, 0,
	0, 2773, 2774, 0, 2756, 2749, 0, 581, 187, 2777,
	2748, 581, 581, 0, 1647, 187, 0, 0, 0, 0,
	0, 0, 2739, 0, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 582, 582, 582, 0, 1645, 0, 2786,
	581, 0, 182, 0, 0, 0, 0, 2789, 2787, 0,
	2784, 2785, 0, 0, 2801, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 121, 0, 0, 2742,
	2743, 2744, 0, 0, 0, 0, 2800, 2798, 581, 164,
	0, 0, 0, 750, 0, 2804, 0, 0, 0, 0,
	0, 0, 2806, 186, 0, 0, 2322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 186,
	0, 1285, 1286, 0, 0, 0, 0, 0, 0, 0,
	2817, 2124, 2823, 0, 582, 0, 0, 37, 0, 0,
	0, 0, 0, 0, 0, 2820, 161, 0, 162, 582,
	582, 0, 0, 0, 0, 0, 1329, 0, 0, 0,
	581, 0, 2813, 0, 0, 796, 0, 0, 181, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 581, 0, 0, 0, 2840, 0, 0,
	0, 2319, 37, 0, 2850, 581, 0, 0, 182, 0,
	2848, 0, 0, 2845, 186, 581, 0, 2756, 2856, 187,
	2854, 2863, 0, 0, 582, 0, 0, 0, 0, 0,
	2866, 0, 121, 0, 2884, 0, 2874, 2879, 0, 0,
	0, 0, 0, 2891, 0, 164, 0, 0, 187, 0,
	0, 582, 2897, 0, 0, 0, 0, 581, 0, 0,
	0, 187, 0, 0, 0, 582, 581, 0, 0, 0,
	187, 2910, 187, 2917, 187, 187, 582, 2914, 1647, 582,
	2920, 2918, 2912, 165, 0, 2916, 0, 0, 0, 0,
	582, 0, 171, 0, 0, 2931, 0, 0, 0, 2937,
	2939, 1645, 161, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2945, 2947, 2948, 2774,
	0, 1647, 2946, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 582, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 1273, 0, 0, 0, 1455, 1455, 0, 1455,
	0, 1455, 1455, 0, 1464, 1455, 1455, 1455, 1455, 1455,
	0, 0, 0, 0, 0, 156, 0, 1273, 1273, 949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 187, 187,
	0, 0, 187, 0, 187, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 796, 796, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	169, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 1654, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 0, 0, 1669, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 0, 796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 157,
	0, 0, 582, 0, 0, 0, 169, 0, 582, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 1329, 0, 0, 796, 0, 0,
	0, 0, 0, 0, 0, 796, 0, 0, 796, 0,
	0, 0, 187, 0, 0, 187, 0, 0, 177, 949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 582, 1306,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 582, 0, 956, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 0, 0, 665,
	0, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 187, 187, 187, 187, 949,
	0, 0, 0, 0, 0, 121, 0, 143, 0, 0,
	0, 187, 187, 0, 0, 0, 0, 0, 164, 0,
	185, 0, 0, 536, 0, 0, 576, 187, 0, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 142, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 781, 161, 0, 162, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 152, 151, 181, 0, 0,
	0, 0, 582, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 0, 0, 582, 582, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 187, 0, 187, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	147, 128, 154, 135, 127, 0, 148, 149, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 139, 137, 132, 133,
	134, 138, 0, 0, 0, 0, 0, 582, 129, 0,
	0, 0, 0, 0, 0, 582, 0, 140, 0, 0,
	187, 0, 0, 0, 0, 796, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 187, 0, 2060, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 2896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 2176, 0, 0, 0, 187, 0, 0, 0, 0,
	2181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 2697, 2699, 2698, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 633, 0, 0, 0, 0, 0,
	0, 0, 157, 187, 0, 0, 187, 187, 187, 169,
	0, 0, 0, 0, 0, 0, 582, 582, 0, 1364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 536, 0, 0, 536, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 582, 582,
	582, 582, 0, 0, 0, 0, 1273, 0, 1273, 0,
	0, 1273, 0, 0, 0, 0, 1273, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 796, 0, 0, 0, 0, 176, 178, 179, 180,
	1377, 0, 0, 0, 0, 0, 0, 1455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 2301, 0, 0, 0,
	0, 0, 0, 0, 0, 796, 0, 0, 0, 1273,
	0, 0, 2326, 1455, 1273, 0, 0, 582, 0, 582,
	0, 0, 0, 0, 1390, 1393, 1394, 1395, 1396, 1397,
	1398, 0, 1399, 1400, 1401, 1402, 1403, 1378, 1379, 1380,
	1381, 1362, 1363, 1391, 0, 1365, 0, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 0, 0, 1375, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 0, 0, 2700, 2701, 0, 0,
	0, 0, 187, 0, 0, 0, 949, 1308, 1310, 1273,
	0, 0, 0, 0, 1768, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 582, 582, 0,
	0, 763, 0, 0, 0, 675, 0, 628, 679, 630,
	676, 677, 0, 626, 629, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 582, 0, 0, 0,
	0, 0, 0, 0, 1392, 0, 0, 0, 0, 0,
	0, 0, 631, 632, 2696, 2702, 2703, 2704, 2712, 2714,
	653, 2713, 2715, 2716, 2717, 2720, 2721, 2722, 2723, 2718,
	2719, 2724, 1282, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2301, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 582, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 1428, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 121, 0, 143,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	164, 0, 0, 0, 743, 0, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 582,
	0, 153, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 582, 0, 0, 0, 953, 0, 0, 0, 0,
	187, 582, 0, 0, 0, 0, 536, 161, 0, 162,
	0, 0, 0, 0, 0, 1768, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 1433, 152, 151, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 1274, 2630, 2631, 2632,
	2633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1274, 1274, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 1273, 0, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	0, 0, 147, 1434, 154, 0, 1431, 0, 148, 149,
	0, 0, 0, 0, 165, 1550, 0, 0, 0, 0,
	0, 1273, 0, 171, 0, 0, 2684, 0, 2686, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 1573, 1574, 536,
	536, 536, 536, 536, 536, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1376, 0, 0, 0, 796, 0, 1665, 0, 0, 0,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 781, 2780, 0, 0, 0, 2780, 2780, 781, 781,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 1308, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 1550, 781, 781, 781,
	781, 781, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 150, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 781, 0, 0,
	0, 0, 144, 1768, 0, 145, 0, 1364, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 1550, 0, 536, 157, 536, 0, 536, 1802, 0,
	0, 169, 0, 1273, 0, 2841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 1074, 0, 0,
	1076, 0, 0, 0, 0, 0, 0, 796, 796, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	2864, 0, 0, 177, 0, 0, 0, 0, 1377, 0,
	2869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 2869, 1390, 1393, 1394, 1395, 1396, 1397, 1398, 0,
	1399, 1400, 1401, 1402, 1403, 1378, 1379, 1380, 1381, 1362,
	1363, 1391, 0, 1365, 0, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 0, 0, 1375, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 536, 536, 0, 0, 536, 0, 1949, 78, 39,
	40, 80, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 536,
	0, 0, 1392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 1976,
	0, 0, 0, 1980, 56, 1981, 1982, 0, 0, 0,
	0, 0, 0, 0, 1990, 87, 0, 1991, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 1999, 2000, 0, 781, 2003,
	0, 2004, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 2016, 2017, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 2031, 0, 0,
	0, 0, 0, 0, 2036, 2037, 2038, 2039, 2040, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2053, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 0, 75, 72, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	594, 0, 0, 0, 0, 0, 0, 55, 83, 82,
	0, 0, 64, 65, 53, 536, 0, 0, 536, 0,
	73, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 59,
	60, 61, 62, 0, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 2161, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 691, 79, 0,
	0, 0, 0, 0, 1560, 0, 0, 0, 0, 0,
	0, 1564, 0, 0, 0, 0, 0, 536, 536, 536,
	536, 536, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 0,
	0, 0, 0, 0, 536, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2254, 0, 0, 0,
	536, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	1599, 2267, 0, 0, 0, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 0, 79, 0, 0,
	0, 0, 2282, 2283, 0, 0, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 0, 0, 0, 0,
	1274, 0, 1274, 0, 0, 1274, 0, 0, 0, 0,
	1274, 957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2343, 2344, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 1274, 536,
	536, 536, 536, 536, 0, 0, 0, 0, 0, 0,
	0, 2342, 0, 0, 0, 0, 536, 0, 1502, 0,
	536, 0, 0, 536, 2352, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 536, 1788, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 2463, 536, 0, 0, 0, 0, 0, 2467,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2477, 2478, 2480, 2482, 0, 536, 0,
	0, 536, 0, 2488, 0, 0, 0, 2491, 2492, 0,
	0, 0, 0, 2495, 0, 0, 0, 0, 0, 2497,
	0, 0, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 0, 0, 2511, 0, 0, 0, 0, 0,
	2516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2538, 2539, 0, 0, 2543, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2555, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 1942, 1943, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 536, 1950, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 2617, 0, 0, 0, 536, 0, 0, 536,
	536, 536, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2644, 0, 0, 0, 0, 0, 2648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1128, 1128, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 79, 1274, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	753, 1201, 1202, 1203, 0, 1206, 0, 1208, 1209, 1210,
	1211, 0, 1214, 1216, 1216, 1274, 1216, 1220, 1220, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 0, 1257, 1258, 1259, 1260, 1261, 0,
	0, 0, 2752, 1220, 1220, 1220, 1220, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 2762, 2763, 2764, 0,
	2765, 2766, 0, 0, 0, 2769, 0, 2770, 0, 2772,
	2775, 0, 0, 0, 0, 1502, 2779, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1283, 0, 0, 2805, 0, 0, 753, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 753, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2830, 0, 0, 0, 0, 2835, 0,
	0, 0, 1502, 0, 2836, 2837, 0, 0, 0, 0,
	2200, 2201, 2202, 2203, 2204, 0, 0, 0, 536, 0,
	0, 0, 2843, 0, 0, 0, 0, 1599, 2210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2218, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2893, 0, 0, 0, 2894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 1607, 1608, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 1652, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1693, 1694,
	1695, 1696, 1697, 1698, 594, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	2398, 0, 0, 685, 692, 693, 694, 695, 696, 686,
	688, 0, 0, 0, 687, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2434, 690, 697, 698,
	0, 0, 0, 0, 0, 0, 2443, 0, 0, 0,
	0, 0, 0, 0, 1128, 1128, 1128, 0, 0, 0,
	0, 2455, 1775, 1776, 2458, 0, 0, 0, 0, 2055,
	0, 0, 692, 693, 0, 0, 0, 0, 1646, 0,
	2440, 2441, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2518, 0, 0, 0, 1849,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 87, 0, 0, 0, 0, 0, 685, 692, 693,
	694, 695, 696, 686, 688, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 697, 698, 0, 0, 0, 0, 0, 2579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2594,
	0, 0, 2595, 2596, 2597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2440, 2441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 675, 0, 0,
	679, 0, 676, 677, 0, 0, 0, 678, 0, 692,
	693, 0, 0, 0, 0, 1646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 0, 0, 0, 2222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 2087, 2245, 2246, 0, 0,
	0, 2249, 0, 2106, 0, 2107, 2251, 2252, 2253, 0,
	0, 0, 0, 0, 2257, 2258, 0, 0, 1704, 2260,
	0, 2261, 2262, 0, 0, 0, 2269, 2270, 0, 0,
	0, 0, 0, 0, 1704, 1704, 1704, 1704, 1704, 594,
	594, 594, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2182, 0, 0, 0, 0, 0, 0,
	2346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2323, 0, 79, 0, 0, 1795, 1795, 1795,
	1795, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 0, 0, 0, 1795, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2636, 0, 2637, 0, 0, 0, 0, 2640,
	2641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2680,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	2688, 0, 0, 2690, 0, 0, 0, 0, 0, 2563,
	0, 0, 0, 0, 0, 0, 2694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2788, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2656, 0, 2660, 2661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2323, 0, 79, 0, 2323,
	0, 0, 0, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2815, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 927, 913,
	458, 79, 860, 930, 829, 848, 940, 851, 854, 895,
	808, 873, 376, 845, 801, 833, 804, 840, 805, 831,
	862, 250, 828, 915, 877, 929, 332, 247, 810, 834,
	390, 850, 197, 897, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 936, 336,
	883, 2844, 442, 361, 0, 0, 79, 864, 919, 871,
	909, 859, 896, 818, 882, 931, 846, 892, 932, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 2857, 0, 2858, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 842, 889, 926, 843, 891,
	245, 292, 252, 244, 462, 937, 918, 0, 0, 214,
	928, 866, 0, 894, 0, 943, 803, 885, 0, 806,
	809, 939, 922, 837, 255, 0, 0, 0, 0, 0,
	0, 0, 863, 872, 906, 857, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 881, 0, 0, 0, 814,
	807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 817, 0, 836, 907,
	0, 800, 275, 811, 362, 237, 0, 911, 921, 858,
	495, 925, 856, 855, 901, 815, 917, 849, 331, 813,
	300, 192, 210, 0, 847, 372, 414, 420, 916, 832,
	841, 235, 839, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 880, 899, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 1130, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 827,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 912, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 904,
	942, 385, 419, 225, 481, 441, 822, 826, 820, 886,
	821, 875, 876, 823, 933, 934, 935, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 908, 816, 0, 824,
	825, 0, 914, 923, 924, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 879, 191, 207, 334, 938, 408, 268,
	509, 489, 485, 802, 819, 242, 830, 838, 0, 844,
	852, 853, 865, 867, 868, 869, 870, 887, 888, 890,
	898, 900, 903, 905, 910, 920, 941, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 878, 884, 345, 261, 280,
	291, 893, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 874, 902, 341, 459, 460, 287, 358, 0, 0,
	927, 913, 458, 0, 860, 930, 829, 848, 940, 851,
	854, 895, 808, 873, 376, 845, 801, 833, 804, 840,
	805, 831, 862, 250, 828, 915, 877, 929, 332, 247,
	810, 834, 390, 850, 197, 897, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	936, 336, 883, 0, 442, 361, 0, 0, 0, 864,
	919, 871, 909, 859, 896, 818, 882, 931, 846, 892,
	932, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 842, 889, 926,
	843, 891, 245, 292, 252, 244, 462, 937, 918, 0,
	0, 214, 928, 866, 0, 894, 0, 943, 803, 885,
	0, 806, 809, 939, 922, 837, 255, 0, 0, 0,
	0, 0, 0, 0, 863, 872, 906, 857, 0, 0,
	0, 0, 0, 2353, 0, 835, 0, 881, 0, 0,
	0, 814, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 861, 0, 0, 0, 817, 0,
	836, 907, 0, 800, 275, 811, 362, 237, 0, 911,
	921, 858, 495, 925, 856, 855, 901, 815, 917, 849,
	331, 813, 300, 192, 210, 0, 847, 372, 414, 420,
	916, 832, 841, 235, 839, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 880, 899, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 1130, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 827, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 912, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 904, 942, 385, 419, 225, 481, 441, 822, 826,
	820, 886, 821, 875, 876, 823, 933, 934, 935, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 908, 816,
	0, 824, 825, 0, 914, 923, 924, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 879, 191, 207, 334, 938,
	408, 268, 509, 489, 485, 802, 819, 242, 830, 838,
	0, 844, 852, 853, 865, 867, 868, 869, 870, 887,
	888, 890, 898, 900, 903, 905, 910, 920, 941, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 878, 884, 345,
	261, 280, 291, 893, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 874, 902, 341, 459, 460, 287, 358,
	0, 0, 927, 913, 458, 0, 860, 930, 829, 848,
	940, 851, 854, 895, 808, 873, 376, 845, 801, 833,
	804, 840, 805, 831, 862, 250, 828, 915, 877, 929,
	332, 247, 810, 834, 390, 850, 197, 897, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 936, 336, 883, 0, 442, 361, 0, 0,
	0, 864, 919, 871, 909, 859, 896, 818, 882, 931,
	846, 892, 932, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 842,
	889, 926, 843, 891, 245, 292, 252, 244, 462, 937,
	918, 0, 0, 214, 928, 866, 0, 894, 0, 943,
	803, 885, 0, 806, 809, 939, 922, 837, 255, 0,
	0, 0, 0, 0, 0, 0, 863, 872, 906, 857,
	0, 0, 0, 0, 0, 2312, 0, 835, 0, 881,
	0, 0, 0, 814, 807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 861, 0, 0, 0,
	817, 0, 836, 907, 0, 800, 275, 811, 362, 237,
	0, 911, 921, 858, 495, 925, 856, 855, 901, 815,
	917, 849, 331, 813, 300, 192, 210, 0, 847, 372,
	414, 420, 916, 832, 841, 235, 839, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 880, 899, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 1130,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 827, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 912, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 904, 942, 385, 419, 225, 481, 441,
	822, 826, 820, 886, 821, 875, 876, 823, 933, 934,
	935, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	908, 816, 0, 824, 825, 0, 914, 923, 924, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 879, 191, 207,
	334, 938, 408, 268, 509, 489, 485, 802, 819, 242,
	830, 838, 0, 844, 852, 853, 865, 867, 868, 869,
	870, 887, 888, 890, 898, 900, 903, 905, 910, 920,
	941, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 878,
	884, 345, 261, 280, 291, 893, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 874, 902, 341, 459, 460,
	287, 358, 0, 0, 927, 913, 458, 0, 860, 930,
	829, 848, 940, 851, 854, 895, 808, 873, 376, 845,
	801, 833, 804, 840, 805, 831, 862, 250, 828, 915,
	877, 929, 332, 247, 810, 834, 390, 850, 197, 897,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 936, 336, 883, 0, 442, 361,
	0, 0, 0, 864, 919, 871, 909, 859, 896, 818,
	882, 931, 846, 892, 932, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 842, 889, 926, 843, 891, 245, 292, 252, 244,
	462, 937, 918, 0, 0, 214, 928, 866, 0, 894,
	0, 943, 803, 885, 0, 806, 809, 939, 922, 837,
	255, 0, 0, 0, 0, 0, 0, 0, 863, 872,
	906, 857, 0, 0, 0, 0, 0, 1783, 0, 835,
	0, 881, 0, 0, 0, 814, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 817, 0, 836, 907, 0, 800, 275, 811,
	362, 237, 0, 911, 921, 858, 495, 925, 856, 855,
	901, 815, 917, 849, 331, 813, 300, 192, 210, 0,
	847, 372, 414, 420, 916, 832, 841, 235, 839, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 880,
	899, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 1130, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 827, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 912, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 904, 942, 385, 419, 225,
	481, 441, 822, 826, 820, 886, 821, 875, 876, 823,
	933, 934, 935, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 908, 816, 0, 824, 825, 0, 914, 923,
	924, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 879,
	191, 207, 334, 938, 408, 268, 509, 489, 485, 802,
	819, 242, 830, 838, 0, 844, 852, 853, 865, 867,
	868, 869, 870, 887, 888, 890, 898, 900, 903, 905,
	910, 920, 941, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 878, 884, 345, 261, 280, 291, 893, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 874, 902, 341,
	459, 460, 287, 358, 0, 0, 927, 913, 458, 0,
	860, 930, 829, 848, 940, 851, 854, 895, 808, 873,
	376, 845, 801, 833, 804, 840, 805, 831, 862, 250,
	828, 915, 877, 929, 332, 247, 810, 834, 390, 850,
	197, 897, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 936, 336, 883, 0,
	442, 361, 0, 0, 0, 864, 919, 871, 909, 859,
	896, 818, 882, 931, 846, 892, 932, 294, 232, 196,
	373, 443, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 842, 889, 926, 843, 891, 245, 292,
	252, 244, 462, 937, 918, 0, 0, 214, 928, 866,
	0, 894, 0, 943, 803, 885, 0, 806, 809, 939,
	922, 837, 255, 0, 0, 0, 0, 0, 0, 0,
	863, 872, 906, 857, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 881, 0, 0, 0, 814, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 0, 0, 817, 0, 836, 907, 0, 800,
	275, 811, 362, 237, 0, 911, 921, 858, 495, 925,
	856, 855, 901, 815, 917, 849, 331, 813, 300, 192,
	210, 0, 847, 372, 414, 420, 916, 832, 841, 235,
	839, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 880, 899, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 1130, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 827, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	912, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 904, 942, 385,
	419, 225, 481, 441, 822, 826, 820, 886, 821, 875,
	876, 823, 933, 934, 935, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 908, 816, 0, 824, 825, 0,
	914, 923, 924, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 879, 191, 207, 334, 938, 408, 268, 509, 489,
	485, 802, 819, 242, 830, 838, 0, 844, 852, 853,
	865, 867, 868, 869, 870, 887, 888, 890, 898, 900,
	903, 905, 910, 920, 941, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 878, 884, 345, 261, 280, 291, 893,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 874,
	902, 341, 459, 460, 287, 358, 0, 0, 927, 913,
	458, 0, 860, 930, 829, 848, 940, 851, 854, 895,
	808, 873, 376, 845, 801, 833, 804, 840, 805, 831,
	862, 250, 828, 915, 877, 929, 332, 247, 810, 834,
	390, 850, 197, 897, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 936, 336,
	883, 0, 442, 361, 0, 0, 0, 864, 919, 871,
	909, 859, 896, 818, 882, 931, 846, 892, 932, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 842, 889, 926, 843, 891,
	245, 292, 252, 244, 462, 937, 918, 0, 0, 214,
	928, 866, 0, 894, 0, 943, 803, 885, 0, 806,
	809, 939, 922, 837, 255, 0, 0, 0, 0, 0,
	0, 0, 863, 872, 906, 857, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 881, 0, 0, 0, 814,
	807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 817, 0, 836, 907,
	0, 800, 275, 811, 362, 237, 0, 911, 921, 858,
	495, 925, 856, 855, 901, 815, 917, 849, 331, 813,
	300, 192, 210, 0, 847, 372, 414, 420, 916, 832,
	841, 235, 839, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 880, 899, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 1130, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 827,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 912, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 904,
	942, 385, 419, 225, 481, 441, 822, 826, 820, 886,
	821, 875, 876, 823, 933, 934, 935, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 908, 816, 0, 824,
	825, 0, 914, 923, 924, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 879, 191, 207, 334, 938, 408, 268,
	509, 489, 485, 802, 819, 242, 830, 838, 0, 844,
	852, 853, 865, 867, 868, 869, 870, 887, 888, 890,
	898, 900, 903, 905, 910, 920, 941, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 878, 884, 345, 261, 280,
	291, 893, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 874, 902, 341, 459, 460, 287, 358, 0, 0,
	927, 913, 458, 0, 860, 930, 829, 848, 940, 851,
	854, 895, 808, 873, 376, 845, 801, 833, 804, 840,
	805, 831, 862, 250, 828, 915, 877, 929, 332, 247,
	810, 834, 390, 850, 197, 897, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	936, 336, 883, 0, 442, 361, 0, 0, 0, 864,
	919, 871, 909, 859, 896, 818, 882, 931, 846, 892,
	932, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 842, 889, 926,
	843, 891, 245, 292, 252, 244, 462, 937, 918, 0,
	0, 944, 928, 866, 0, 894, 0, 943, 803, 885,
	0, 806, 809, 939, 922, 837, 255, 0, 0, 0,
	0, 0, 0, 0, 863, 872, 906, 857, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 881, 0, 0,
	0, 814, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 861, 0, 0, 0, 817, 0,
	836, 907, 0, 800, 275, 811, 362, 237, 0, 911,
	921, 858, 495, 925, 856, 855, 901, 815, 917, 849,
	331, 813, 300, 192, 210, 0, 847, 372, 414, 420,
	916, 832, 841, 235, 839, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 880, 899, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 812, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 827, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 912, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 799, 793, 792, 301,
	338, 904, 942, 385, 419, 225, 481, 441, 822, 826,
	820, 886, 821, 875, 876, 823, 933, 934, 935, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 908, 816,
	0, 824, 825, 0, 914, 923, 924, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 879, 191, 207, 334, 938,
	408, 268, 509, 489, 485, 802, 819, 242, 830, 838,
	0, 844, 852, 853, 865, 867, 868, 869, 870, 887,
	888, 890, 898, 900, 903, 905, 910, 920, 941, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 878, 884, 345,
	261, 280, 291, 893, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 874, 902, 341, 459, 460, 287, 358,
	0, 0, 927, 913, 458, 0, 860, 930, 829, 848,
	940, 851, 854, 895, 808, 873, 376, 845, 801, 833,
	804, 840, 805, 831, 862, 250, 828, 915, 877, 929,
	332, 247, 810, 834, 390, 850, 197, 897, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 936, 336, 883, 0, 442, 361, 0, 0,
	0, 864, 919, 871, 909, 859, 896, 818, 882, 931,
	846, 892, 932, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 842,
	889, 926, 843, 891, 245, 292, 252, 244, 462, 937,
	918, 0, 0, 944, 928, 866, 0, 894, 0, 943,
	803, 885, 0, 806, 809, 939, 922, 837, 255, 0,
	0, 0, 0, 0, 0, 0, 863, 872, 906, 857,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 881,
	0, 0, 0, 814, 807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 861, 0, 0, 0,
	817, 0, 836, 907, 0, 800, 275, 811, 362, 237,
	0, 911, 921, 858, 495, 925, 856, 855, 901, 815,
	917, 849, 331, 813, 300, 192, 210, 0, 847, 372,
	414, 420, 916, 832, 841, 235, 839, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 880, 899, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 1340, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 812,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 827, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 912, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 799, 793,
	792, 301, 338, 904, 942, 385, 419, 225, 481, 441,
	822, 826, 820, 886, 821, 875, 876, 823, 933, 934,
	935, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	908, 816, 0, 824, 825, 0, 914, 923, 924, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 879, 191, 207,
	334, 938, 408, 268, 509, 489, 485, 802, 819, 242,
	830, 838, 0, 844, 852, 853, 865, 867, 868, 869,
	870, 887, 888, 890, 898, 900, 903, 905, 910, 920,
	941, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 878,
	884, 345, 261, 280, 291, 893, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 874, 902, 341, 459, 460,
	287, 358, 0, 0, 927, 913, 458, 0, 860, 930,
	829, 848, 940, 851, 854, 895, 808, 873, 376, 845,
	801, 833, 804, 840, 805, 831, 862, 250, 828, 915,
	877, 929, 332, 247, 810, 834, 390, 850, 197, 897,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 936, 336, 883, 0, 442, 361,
	0, 0, 0, 864, 919, 871, 909, 859, 896, 818,
	882, 931, 846, 892, 932, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 842, 889, 926, 843, 891, 245, 292, 252, 244,
	462, 937, 918, 0, 0, 944, 928, 866, 0, 894,
	0, 943, 803, 885, 0, 806, 809, 939, 922, 837,
	255, 0, 0, 0, 0, 0, 0, 0, 863, 872,
	906, 857, 0, 0, 0, 0, 0, 0, 0, 835,
	0, 881, 0, 0, 0, 814, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 817, 0, 836, 907, 0, 800, 275, 811,
	362, 237, 0, 911, 921, 858, 495, 925, 856, 855,
	901, 815, 917, 849, 331, 813, 300, 192, 210, 0,
	847, 372, 414, 420, 916, 832, 841, 235, 839, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 880,
	899, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 790, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 812, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 827, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 912, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	799, 793, 792, 301, 338, 904, 942, 385, 419, 225,
	481, 441, 822, 826, 820, 886, 821, 875, 876, 823,
	933, 934, 935, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 908, 816, 0, 824, 825, 0, 914, 923,
	924, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 879,
	191, 207, 334, 938, 408, 268, 509, 489, 485, 802,
	819, 242, 830, 838, 0, 844, 852, 853, 865, 867,
	868, 869, 870, 887, 888, 890, 898, 900, 903, 905,
	910, 920, 941, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 878, 884, 345, 261, 280, 291, 893, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 874, 902, 341,
	459, 460, 287, 358, 0, 0, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 1728, 0, 612, 0, 0, 0, 250,
	617, 0, 0, 0, 332, 247, 0, 1729, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 624, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 619, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 87, 0, 0, 188, 189, 190,
	685, 692, 693, 694, 695, 696, 686, 688, 0, 0,
	223, 687, 230, 635, 637, 636, 643, 644, 645, 646,
	647, 648, 649, 633, 690, 697, 698, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 595, 609, 0, 623, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 607, 779,
	0, 0, 0, 669, 0, 608, 0, 0, 616, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 668, 0, 0, 495, 0,
	0, 666, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 638, 639, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 675, 667, 628, 679, 630, 676,
	677, 625, 626, 629, 678, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 670, 615, 614, 0, 621, 622,
	0, 631, 632, 634, 640, 641, 642, 650, 652, 653,
	651, 654, 655, 656, 659, 660, 661, 662, 657, 658,
	663, 613, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 612, 0, 0, 0, 250, 617, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 624, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 619, 620, 0, 0, 0, 0,
	0, 0, 1809, 0, 294, 232, 196, 373, 443, 266,
	0, 87, 0, 0, 188, 189, 190, 685, 692, 693,
	694, 695, 696, 686, 688, 0, 0, 223, 687, 230,
	635, 637, 636, 643, 644, 645, 646, 647, 648, 649,
	633, 690, 697, 698, 1810, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 595, 609, 0, 623, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 607, 0, 0, 0, 0,
	669, 0, 608, 0, 0, 616, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 668, 0, 0, 495, 0, 0, 666, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 638, 639, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 675, 667, 628, 679, 630, 676, 677, 625, 626,
	629, 678, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 670, 615, 614, 0, 621, 622, 0, 631, 632,
	634, 640, 641, 642, 650, 652, 653, 651, 654, 655,
	656, 659, 660, 661, 662, 657, 658, 663, 613, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 0, 341, 459,
	460, 287, 358, 0, 0, 0, 78, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 612, 0, 0, 0, 250, 617,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 624, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 619, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 87, 0, 0, 188, 189, 190, 685,
	692, 693, 694, 695, 696, 686, 688, 0, 0, 223,
	687, 230, 635, 637, 636, 643, 644, 645, 646, 647,
	648, 649, 633, 690, 697, 698, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 595, 609, 0, 623, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 607, 0, 0,
	0, 0, 669, 0, 608, 0, 0, 616, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 668, 0, 0, 495, 0, 0,
	666, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 638, 639, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 675, 667, 628, 679, 630, 676, 677,
	625, 626, 629, 678, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 670, 615, 614, 0, 621, 622, 0,
	631, 632, 634, 640, 641, 642, 650, 652, 653, 651,
	654, 655, 656, 659, 660, 661, 662, 657, 658, 663,
	613, 191, 207, 334, 86, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 612, 0, 0, 0, 250, 617, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 624, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	87, 0, 0, 188, 189, 190, 685, 692, 693, 694,
	695, 696, 686, 688, 0, 0, 223, 687, 230, 635,
	637, 636, 643, 644, 645, 646, 647, 648, 649, 633,
	690, 697, 698, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 595, 609, 0, 623, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 607, 0, 0, 0, 0, 669,
	0, 608, 0, 0, 616, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 668, 0, 0, 495, 0, 0, 666, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 2851, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 638, 639, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	675, 667, 628, 679, 630, 676, 677, 625, 626, 629,
	678, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	670, 615, 614, 0, 621, 622, 0, 631, 632, 634,
	640, 641, 642, 650, 652, 653, 651, 654, 655, 656,
	659, 660, 661, 662, 657, 658, 663, 613, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 612, 0,
	0, 0, 250, 617, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 624,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	619, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 87, 0, 1307,
	188, 189, 190, 685, 692, 693, 694, 695, 696, 686,
	688, 0, 0, 223, 687, 230, 635, 637, 636, 643,
	644, 645, 646, 647, 648, 649, 633, 690, 697, 698,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 595, 609,
	0, 623, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 607, 0, 0, 0, 0, 669, 0, 608, 0,
	0, 616, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 668, 0,
	0, 495, 0, 0, 666, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 638, 639,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 675, 667, 628,
	679, 630, 676, 677, 625, 626, 629, 678, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 670, 615, 614,
	0, 621, 622, 0, 631, 632, 634, 640, 641, 642,
	650, 652, 653, 651, 654, 655, 656, 659, 660, 661,
	662, 657, 658, 663, 613, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 612, 0, 0, 0, 250,
	617, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 624, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 619, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 87, 0, 0, 188, 189, 190,
	685, 692, 693, 694, 695, 696, 686, 688, 0, 0,
	223, 687, 230, 635, 637, 636, 643, 644, 645, 646,
	647, 648, 649, 633, 690, 697, 698, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 595, 609, 0, 623, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 607, 779,
	0, 0, 0, 669, 0, 608, 0, 0, 616, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 668, 0, 0, 495, 0,
	0, 666, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 638, 639, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 675, 667, 628, 679, 630, 676,
	677, 625, 626, 629, 678, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 670, 615, 614, 0, 621, 622,
	0, 631, 632, 634, 640, 641, 642, 650, 652, 653,
	651, 654, 655, 656, 659, 660, 661, 662, 657, 658,
	663, 613, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 612, 0, 0, 0, 250, 617, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 624, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 619, 620, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 87, 0, 0, 188, 189, 190, 685, 692, 693,
	694, 695, 696, 686, 688, 0, 0, 223, 687, 230,
	635, 637, 636, 643, 644, 645, 646, 647, 648, 649,
	633, 690, 697, 698, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 595, 609, 0, 623, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 607, 0, 0, 0, 0,
	669, 0, 608, 0, 0, 616, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 668, 0, 0, 495, 0, 0, 666, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 638, 639, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 675, 667, 628, 679, 630, 676, 677, 625, 626,
	629, 678, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 670, 615, 614, 0, 621, 622, 0, 631, 632,
	634, 640, 641, 642, 650, 652, 653, 651, 654, 655,
	656, 659, 660, 661, 662, 657, 658, 663, 613, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 612,
	0, 0, 0, 250, 617, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	624, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 619, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 87, 0,
	0, 188, 189, 190, 685, 692, 693, 694, 695, 696,
	686, 688, 0, 0, 223, 687, 230, 635, 637, 636,
	643, 644, 645, 646, 647, 648, 649, 633, 690, 697,
	698, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	609, 0, 623, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 607, 0, 0, 0, 0, 669, 0, 608,
	0, 0, 616, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 668,
	0, 0, 495, 0, 0, 666, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 638,
	639, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 675, 667,
	628, 679, 630, 676, 677, 625, 626, 629, 678, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 670, 615,
	614, 0, 621, 622, 0, 631, 632, 634, 640, 641,
	642, 650, 652, 653, 651, 654, 655, 656, 659, 660,
	661, 662, 657, 658, 663, 613, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 692, 693, 0, 0, 0, 0, 1646, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 0, 0, 994, 495, 0, 0, 0,
	0, 0, 991, 992, 331, 952, 300, 192, 210, 985,
	989, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 1326, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 1328,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 1162, 0, 1163, 1164,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 1269, 1272, 0, 0, 0, 0, 1268, 1271,
	0, 0, 223, 1267, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 0, 341, 459, 460, 287, 358, 0, 0,
	0, 78, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 86,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 0, 341, 459, 460, 287, 358,
	0, 0, 0, 78, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	87, 0, 1307, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 86, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 1750, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 1748, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 952, 300, 192,
	210, 950, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 1750, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	1307, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 2781, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 2061, 0,
	0, 0, 2062, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 1351, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 2865, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 2781, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 1597, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 1474, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 1472, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 1470, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 1468, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 1466, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 1462, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 1460,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 1458, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 1435, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 1335, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1139, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 587, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 586, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 534, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 2870, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 2517, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 2057, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 0, 341, 459, 460, 287,
}

var yyPact = [...]int{
	5010, -1000, -408, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1937, 2009, -1000, -1000,
	-1000, -1000, 2131, -1000, 690, 1655, -1000, 1941, 3474, -1000,
	39879, 466, -1000, 38705, 465, 504, 39879, -1000, 160, -1000,
	124, 39879, 135, 38118, -1000, -1000, -320, 16976, 1870, -2,
	-4, 39879, -1000, -1000, -1000, -1000, 2071, 1661, -1000, 365,
	-1000, -1000, -1000, -1000, -1000, -1000, 37531, -1000, -1000, -1000,
	1950, 1953, 2119, 587, 1884, -1000, 2014, 1661, -1000, 16976,
	2057, 1994, 16389, -1000, 16389, 400, -1000, -1000, 12857, -1000,
	-1000, 22269, 39879, 28139, 263, -1000, 1941, -1000, -1000, -1000,
	77, -1000, 302, 1565, -1000, 1564, -1000, 692, 474, 324,
	428, 414, 323, 319, 318, 317, 316, 314, 313, 308,
	330, -1000, 630, 630, -197, -198, 2831, 379, 379, 379,
	423, 1914, 1909, -1000, 736, -1000, 630, 630, 630, 360,
	630, 630, 630, 630, 275, 274, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 282, 1941, 261, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 39879, 114, 39879, -1000, 521, 39879, 742, 742,
	130, 742, 742, 742, 742, 146, 577, -5, -1000, 101,
	266, 139, 258, 724, 162, 120, -1000, -1000, 250, 724,
	1161, 593, 113, -1000, 742, 10489, 10489, 10489, -1000, 1926,
	-1000, -1000, -1000, -1000, -1000, -1000, 1136, -1000, 419, -1000,
	-1000, -1000, -1000, 39879, 36944, 297, 660, -1000, -1000, -1000,
	62, -1000, -1000, 1352, 945, 16976, 902, -1000, 1222, 566,
	-1000, -1000, -1000, -1000, -1000, 481, 17563, 17563, 17563, 17563,
	-1000, -1000, 1587, 1587, 1587, 1587, 17563, 1587, 17563, 1587,
	1587, 1587, 1587, 16976, 1587, 1587, 1587, -1000, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, 520, 1587, 1587, 1587, 1587,
	1587, -1000, -1000, -1000, -1000, 1587, 1587, 1587, 1587, 1587,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19911,
	-1000, 14628, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 39879, -1000, 1587, 168, 39879, 39879, 315, 2014, 1661,
	-1000, 2071, 2044, 365, -1000, 2271, 1469, 1679, 1212, 1661,
	1541, 39879, -1000, 1589, -1000, -1000, -1000, 1774, 1060, 1157,
	-1000, -1000, -1000, -1000, 1305, 16976, -1000, -1000, 2094, -1000,
	19324, 518, 836, 2092, 36357, -1000, 400, 400, 1561, 12265,
	-39, -1000, -1000, -1000, 659, 25791, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1926, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1492, 39879, -1000, -1000, 4608,
	1107, -1000, 1652, -1000, 1465, -1000, 1614, 16976, 1673, 454,
	1107, 440, 438, 429, -1000, -92, -1000, -1000, -1000, -1000,
	-1000, -1000, 630, 630, 630, -1000, 325, 2056, 3474, 4316,
	-1000, -1000, -1000, 35770, 1647, 1107, -1000, 1646, -1000, 731,
	479, 528, 528, 1107, -1000, -1000, 39879, 1107, 723, 719,
	39879, 39879, -1000, 35183, -1000, 34596, 34009, 991, 39879, 33422,
	32835, 32248, 31661, 31074, -1000, 1795, -1000, 1686, -1000, -1000,
	-1000, 39879, 39879, 39879, 272, -1000, -1000, 39879, 1107, -1000,
	-1000, 979, 976, 975, 630, 630, 974, 1152, 1147, 1134,
	630, 630, 973, 1129, 26965, 1128, 239, 971, 965, 933,
	1047, 1121, 186, 1118, 1033, 960, 931, 39879, 1638, 39879,
	-1000, 245, 753, 413, 658, 1941, 1864, 1549, 416, 448,
	1107, 371, 371, 39879, -1000, 11081, -1000, -1000, 1117, 16976,
	-1000, 764, 724, 724, -1000, -1000, -1000, -1000, -1000, -1000,
	742, 39879, 764, -1000, -1000, -1000, 724, 742, 39879, 742,
	742, 742, 742, 724, 724, 724, 742, 39879, 39879, 39879,
	39879, 39879, 39879, 39879, 39879, 39879, 10489, 10489, 10489, 593,
	742, -324, -1000, 1111, -1000, 1740, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 127, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -89, 1548, 30487, -1000, -326,
	-327, -332, -334, -1000, -1000, -1000, -335, -336, -1000, -1000,
	-1000, 16976, 16976, 16976, 16976, -221, -1000, 806, 17563, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 810, 759, 17563, 17563,
	17563, 17563, 17563, 17563, 17563, 17563, 17563, 17563, 17563, 17563,
	17563, 17563, 17563, 755, 6677, 6677, 566, 566, 566, 566,
	-1000, 16389, 16976, 16976, 566, -1000, 1107, 29900, 16389, 16389,
	16976, 1916, 673, 945, 39879, -1000, 1212, -1000, -1000, -1000,
	905, -1000, 39879, 39879, 58, 16976, 16976, 16976, 16976, 16976,
	16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976,
	16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976,
	16976, 16976, 16976, 16976, 16976, 13449, 11081, 16389, 16389, 16389,
	16389, 16389, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 517, 1315, 1473, 1386, -1000, 1547,
	-1000, -161, 21682, 16976, 1110, 2089, 1694, 39879, -1000, -1000,
	-1000, 2014, -1000, 2014, 1315, 2191, 1791, 16389, -1000, -1000,
	2191, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1308,
	-1000, 39879, 1541, 1989, 39879, 1771, 1106, 356, -1000, 16976,
	16976, 1540, -1000, 961, 39879, -1000, -221, -1000, 29313, -1000,
	-1000, 9897, -1000, 39879, 301, 39879, -1000, 24030, 28726, 11673,
	-39, -1000, 11673, 1509, -1000, -28, -52, 14036, 548, -1000,
	-1000, -1000, 2831, 18737, 1303, 548, 71, -1000, -1000, -1000,
	1614, -1000, 1614, 1614, 1614, 1614, 356, 356, 356, 356,
	-1000, -1000, -1000, -1000, -1000, 1635, 1634, -1000, 1614, 1614,
	1614, 1614, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1633,
	1633, 1633, 1624, 1624, 369, -1000, 16976, 223, 28139, 1949,
	929, 1368, 245, 382, 1682, 1107, 1107, 1107, 382, -1000,
	1304, 1256, 1229, -1000, -400, 1529, -1000, -1000, 2055, -1000,
	-1000, 703, 768, 767, 591, 39879, 215, 299, -1000, 362,
	-1000, 28139, 1107, 710, 528, 1107, -1000, 1107, -1000, -1000,
	-1000, -1000, -1000, 1107, 1527, -1000, 1510, 867, 751, 864,
	741, 1527, -1000, -1000, -131, 1527, -1000, 1527, -1000, 1527,
	-1000, 1527, -1000, 1527, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 624, 39879, 215, 755, -1000, 415, -1000, -1000,
	-1000, 755, 755, -1000, -1000, -1000, -1000, 1101, 1099, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -389, 39879,
	-1000, 231, 657, 288, 303, 292, 39879, 202, 1996, 235,
	273, 39879, 39879, 371, 1739, 39879, 1966, 39879, -1000, -1000,
	-1000, -1000, -1000, 945, 39879, -1000, -1000, 742, 742, -1000,
	-1000, 39879, 742, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 742, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39879,
	39879, -1000, -1000, -1000, -1000, -1000, 80, -31, 295, -1000,
	-1000, -1000, -1000, -1000, 2001, -1000, 945, 696, 683, -1000,
	1587, -1000, -1000, 927, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 810, 17563, 17563, 17563, 1270, 434, 1503, 876, 1133,
	857, 857, 817, 817, 570, 570, 570, 570, 570, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1092, -1000, 1429,
	-1000, 1781, 1227, 1212, -1000, 1429, 1429, 1168, 16389, -1000,
	-1000, 712, -1000, 16976, 1212, -1000, -1000, 1212, 1212, 1525,
	1517, 2084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1176, 1368, 1368, 1368, 1818, 1807, 1212,
	1352, 1212, 1515, -1000, 1790, 1368, 1777, 1753, 1735, 1385,
	1722, 1717, 1711, 1368, 1368, 1368, 1103, 1706, 1702, 1693,
	1666, 1648, 1642, 1610, 1601, 1595, 1368, 1212, 16389, 16389,
	1512, 1587, 512, -1000, 1429, 1212, 1212, 1429, 1429, 11081,
	1212, -1000, 39879, -1000, -317, -1000, -41, 541, 1587, -1000,
	26965, 1212, -1000, 6420, -1000, 41053, -1000, -1000, -1000, -1000,
	-1000, 25204, 1551, 2191, -1000, -1000, 1587, 1458, -1000, -1000,
	356, 60, 24617, -1000, -1000, 945, 945, 16976, -1000, -1000,
	-1000, -1000, -1000, -1000, 508, 2069, 312, 1587, -1000, 1432,
	1915, -1000, -1000, -1000, 1988, 20503, -1000, 1587, 39879, 1563,
	1535, -1000, 501, -1000, 1509, -39, 8, -1000, -1000, -1000,
	-1000, 945, -1000, 1144, 307, 2685, -1000, 368, -1000, -1000,
	-1000, -1000, 1881, 25, -1000, -1000, -1000, 356, 356, -1000,
	-1000, -1000, -1000, -1000, -1000, 1089, 1089, -1000, -1000, -1000,
	-1000, -1000, 906, -1000, -1000, -1000, 903, -1000, -1000, 1568,
	1751, 223, -1000, -1000, 630, 1087, -1000, -1000, 1899, 630,
	630, 39879, -1000, -1000, 1277, 1949, 231, 39879, 681, 1737,
	-1000, 1682, 1682, 1682, 39879, -1000, -1000, -1000, -1000, -1000,
	-1000, -390, 57, 286, -1000, -1000, -1000, 332, 39879, 1447,
	-1000, 197, -1000, 1269, -1000, 39879, -1000, 1445, 1631, 1107,
	1107, -1000, -1000, -1000, 39879, 1587, -1000, -1000, -1000, -1000,
	444, 1936, 1929, 215, 197, 548, 1107, -1000, -1000, -1000,
	-1000, -1000, -392, 1437, 425, 203, 253, 39879, 39879, 39879,
	39879, 39879, 494, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 259, 404, -1000, 39879, 39879, 513, -1000, -1000, -1000,
	724, -1000, -1000, 724, -1000, -1000, -1000, -1000, -1000, 1924,
	39879, -32, -364, -1000, -357, 16976, -1000, -1000, -1000, -1000,
	1000, 421, 1503, 17563, 17563, 16389, -123, 348, 348, 755,
	-1000, -1000, -1000, 16976, 16976, 1472, 665, -1000, 16976, 828,
	-1000, -1000, -1000, 16976, 16976, 16976, 1212, 257, -1000, -1000,
	-1000, 16976, 16976, -1000, -1000, 16976, 16976, -1000, 16976, 16976,
	18150, 1212, 18150, 16976, 16976, 18150, -1000, -1000, -1000, -1000,
	18150, 16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976, 16976,
	-1000, -1000, 1429, 1429, 16389, 11081, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 541, -1000, 528, 528,
	528, 39879, -1000, -1000, -1000, -1000, -1000, -1000, 1498, 2010,
	-1000, 1809, 1803, 2081, 2069, -1000, 24030, 2191, -1000, -1000,
	39879, -310, -1000, 1856, 1908, -1000, -1000, -1000, -1000, 9305,
	2014, 16976, 1736, 39879, 1587, -1000, 21095, 39879, 39879, 24030,
	24030, 24030, 24030, 24030, -1000, 1757, 1754, -1000, 1782, 1776,
	1826, 39879, -1000, 1426, 1212, 2044, 20503, 16976, 22856, 1520,
	24030, -1000, -1000, 24030, 39879, 8713, -1000, -1000, -37, -58,
	-1000, -1000, -1000, -1000, 2831, -1000, -1000, 1729, 1982, 1879,
	-1000, -1000, -1000, -1000, 1423, -1000, 1418, 1496, 1395, 117,
	-1000, 1615, 1918, 630, 630, -1000, 901, -1000, 1107, 1086,
	1077, -1000, -1000, -1000, 406, -1000, 1964, 39879, 1733, 1731,
	1728, -1000, -399, 899, 1629, 1606, 16976, 1628, 2054, 1411,
	39879, -1000, -1000, 39879, -1000, 265, -1000, 223, 39879, -1000,
	-1000, -1000, 299, 39879, -1000, 6546, 197, -1000, -1000, -1000,
	-1000, -1000, -1000, 39879, 229, -1000, 1626, 883, -1000, -1000,
	1664, -1000, -1000, -1000, -1000, 156, 284, -1000, 39879, 509,
	1751, 39879, -1000, -1000, -1000, 742, 742, -1000, -1000, 1910,
	-1000, 1107, 1368, 17563, 17563, -1000, 566, -1000, 1587, 1212,
	1614, 1614, -1000, 1614, 1624, -1000, 1614, 112, 1614, 97,
	1614, -1000, -1000, 1212, 1212, 1084, 1004, -99, -1000, 945,
	16976, 1590, 1559, 1368, -1000, 1607, 1605, 1368, 1368, -1000,
	945, 1385, 1507, 1284, -1000, -1000, -1000, -1000, 1495, 1368,
	1497, -308, 1212, 1391, 1391, 1391, 1391, 1391, 1386, 1386,
	1386, 1386, -1000, -1000, 1212, -1000, -1000, 1999, 1999, 1999,
	1333, 40466, 39879, -1000, -1000, -1000, -1000, 2069, 2067, 1461,
	-1000, -1000, 60, 359, -1000, 1831, 1908, -1000, 2053, 1850,
	2051, -1000, -1000, -1000, 945, -1000, 1943, 1499, -1000, 640,
	1320, -1000, -1000, 15802, 1375, 1798, 497, 1333, 1521, 1915,
	1678, 1719, 1932, -1000, -1000, -1000, -1000, 1727, -1000, 1721,
	-1000, -1000, 1589, -1000, -1000, 1473, 1490, 301, 24030, 1455,
	1455, -1000, 486, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	778, 6362, 2116, -1000, 1062, -1000, 1085, 171, -1000, -1000,
	630, 630, -1000, 707, 706, -1000, 39879, 1604, -1000, 356,
	1059, 356, 891, -1000, 889, -1000, -1000, -238, -1000, -1000,
	1667, 1793, -1000, -1000, -1000, -1000, 39879, -1000, -1000, 39879,
	39879, 39879, 1599, 2046, -1000, 16976, 1598, 635, 1484, 39879,
	39879, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 405, 630, -371, 271, 268, 630, 630, 630, -1000,
	-1000, 1328, 1326, -1000, -153, -1000, 16976, -1000, -1000, -1000,
	967, 967, -1000, 1589, -1000, -1000, -1000, 1264, -1000, -1000,
	-135, 39879, 39879, 39879, 39879, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 566, 17563, -1000, -1000, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16976,
	-1000, 16976, -1000, 2014, 1054, 945, 16976, 16976, -1000, 881,
	880, -1000, -1000, 1212, 18150, -1000, 18150, -1000, 16976, 212,
	348, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1587, 1861, 1587, 1587, 22856, -1000, -1000, 2067,
	2065, 2037, 1838, 1832, 1832, 1831, -1000, 2028, 2021, -1000,
	1053, 2020, 1042, 693, -1000, 39879, 16976, 1587, -1000, 320,
	39879, 1587, 39879, -1000, 2063, -1000, -1000, 16976, 1597, -1000,
	16976, -1000, -1000, -1000, -1000, -1000, 6677, 2069, 1455, -1000,
	-1000, 576, -1000, 16976, -1000, -1000, -1000, 3840, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1029, 1014, -1000, -1000, 1592,
	16976, -1000, -1000, -1000, 1260, 1244, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1589, -1000, -1000, -1000, -1000, 299,
	-397, 1393, 39879, 865, -1000, 1312, 1411, 277, 1587, 1012,
	630, 630, 630, 862, 858, 26965, 345, -1000, 299, -1000,
	-199, -201, 1368, -1000, -1000, 1981, -1000, -1000, 11081, -1000,
	-1000, 1588, 1670, -1000, 283, -1000, 1368, 1368, 1212, -1000,
	1368, 1368, 1233, 1214, -1000, 1284, -1000, 1080, -1000, 212,
	1212, 1715, -1000, -1000, 6677, -1000, 23443, -1000, 2018, 2016,
	27552, 27552, 541, 2065, -1000, 16976, 16976, 1828, 878, -1000,
	-1000, -1000, -1000, 1009, 1008, -1000, 1002, -1000, 2111, -1000,
	945, -1000, 1587, -1000, 484, 1320, -1000, 2014, 945, 39879,
	945, 15, 2063, -1000, 1368, -1000, 1587, 1587, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587, 1587,
	1587, 1587, 1587, 1587, 1587, -1000, -1000, 39879, 1276, -1000,
	-1000, 1978, 1255, 53, -1000, 1241, -1000, -1000, 478, -1000,
	16976, -1000, 26965, 997, 995, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 365, 1355, -1000, 599, 39879, 39879, 1212,
	256, -139, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16976, -1000, 1212, 1714, -1000, -241, -1000, 1237, -1000,
	-1000, -1000, -1000, -1000, 1237, 1237, -1000, -1000, 945, 1352,
	-1000, 849, -1000, -1000, -1000, -1000, -1000, 39879, 1320, 39879,
	-1000, 1220, 1212, 1587, 2014, -1000, 1200, -1000, 365, -1000,
	1586, 1606, -1000, -1000, -1000, 15215, -1000, -1000, -1000, -1000,
	-133, 11081, 8121, 1198, -1000, -1000, 1767, -129, -154, 1385,
	-1000, -341, -1000, -1000, 26378, -1000, -1000, -1000, -1000, -1000,
	1318, -1000, -1000, 22856, 39292, -1000, -121, 279, -133, 16976,
	1571, 1212, -1000, -40, -1000, -1000, -1000, -1000, -1000, 1664,
	-1000, 1755, -1000, 1212, -1000, -1000, -1000, 1172, -1000, 3810,
	-272, 1713, -1000, -108, -1000, -1000, -1000, 761, 851, -1000,
	-1000, -1000, -1000, -1000, -1000, 1218, 39879, -1000, 363, -1000,
	-1000, -135, -137, -1000, -1000, 39292, -265, 548, 6677, -1000,
	1699, 1696, 2100, -1000, -1000, -1000, -1000, -1000, -1000, -405,
	1170, 242, -1000, -147, -1000, -1000, 1963, 15, -1000, 2109,
	-1000, 2072, 565, 565, -1000, 850, -405, -1000, -194, -273,
	-1000, -1000, -1000, -1000, -1000, 351, 856, -1000, -1000, -1000,
	-1000, 6677, -1000, -1000, -1000, 187, 187, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2443, 2442, 22, 3, 2441, 2440, 2439, 23, 94,
	172, 31, 198, 104, 2438, 2437, 2436, 2435, 2434, 2433,
	2432, 214, 212, 211, 2431, 2430, 2429, 2427, 2426, 2420,
	2419, 2417, 2416, 2414, 203, 157, 171, 2413, 2412, 2409,
	122, 158, 84, 88, 168, 2408, 2407, 77, 2404, 2399,
	2398, 181, 180, 176, 725, 2396, 175, 119, 35, 2395,
	2394, 2393, 2392, 2391, 2390, 2388, 2387, 2385, 2383, 2382,
	2381, 2380, 2379, 2375, 2374, 2373, 311, 2372, 2371, 15,
	2370, 79, 2369, 2368, 2366, 133, 2365, 2361, 2360, 2359,
	2358, 2357, 2355, 141, 2354, 2352, 2350, 2348, 177, 2346,
	2345, 312, 107, 110, 2344, 2343, 100, 164, 2342, 127,
	2341, 2340, 2339, 151, 2337, 5182, 2333, 66, 60, 2332,
	82, 80, 59, 58, 32, 4, 2331, 2330, 61, 76,
	2329, 97, 69, 2326, 99, 96, 2324, 2322, 11, 7,
	2321, 1, 6, 2, 70, 2319, 2316, 124, 2315, 2314,
	2311, 95, 2307, 2306, 4292, 2304, 89, 137, 106, 74,
	2303, 26, 55, 2299, 2298, 2297, 2296, 2291, 41, 2290,
	2287, 2286, 142, 30, 169, 44, 63, 50, 139, 2285,
	33, 78, 2284, 140, 2282, 2281, 45, 34, 42, 2280,
	40, 132, 125, 38, 93, 135, 2279, 2278, 49, 73,
	2277, 2275, 2274, 2272, 2271, 2270, 71, 2269, 65, 2268,
	182, 2267, 14, 2264, 46, 39, 2263, 67, 118, 68,
	29, 2262, 186, 2260, 48, 159, 130, 155, 2257, 2251,
	2250, 170, 258, 2249, 2248, 85, 161, 144, 150, 2247,
	301, 2244, 2243, 92, 1566, 2015, 25, 156, 2242, 2241,
	3469, 143, 27, 16, 2240, 146, 2239, 2238, 2237, 178,
	160, 116, 896, 52, 2236, 2235, 12, 2234, 2233, 2231,
	2228, 2226, 2225, 86, 2223, 2221, 2219, 179, 90, 17,
	166, 75, 2218, 2217, 2213, 128, 102, 2211, 154, 153,
	129, 105, 2210, 162, 147, 111, 2205, 108, 2203, 2202,
	2200, 2198, 2197, 91, 2195, 2186, 2185, 2182, 152, 145,
	126, 83, 2178, 81, 123, 149, 148, 37, 2177, 36,
	2176, 2175, 2174, 163, 28, 2173, 20, 47, 53, 21,
	120, 115, 2172, 0, 2169, 13, 167, 273, 165, 2167,
	2166, 5, 8, 10, 2165, 2164, 2163, 2162, 2160, 138,
	2159, 2157, 2152, 2147, 19, 43, 18, 9, 2146, 2145,
	5377, 3429, 136, 2135, 185,
}

//line sql.y:6854
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 358, 359, 359, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 333, 333,
	333, 336, 336, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	362, 362, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 262, 262, 26, 26, 26, 26, 26, 99,
	99, 335, 335, 334, 326, 326, 325, 325, 324, 332,
	332, 331, 331, 330, 38, 39, 48, 48, 48, 48,
	49, 50, 337, 337, 299, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 301, 301, 287, 287, 300, 300, 300, 300, 300,
	300, 300, 286, 286, 110, 110, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 353, 353, 353, 352, 352, 197, 197, 197,
	197, 197, 197, 197, 197, 119, 119, 128, 128, 128,
	128, 128, 117, 117, 118, 116, 116, 116, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 127, 127, 123, 123, 123, 124, 124, 124, 125,
	125, 354, 354, 354, 354, 266, 266, 266, 266, 269,
	269, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 270, 270, 270, 270, 270,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 272, 272, 272, 272, 272,
	272, 272, 272, 285, 285, 273, 273, 280, 280, 281,
	281, 281, 282, 282, 282, 283, 283, 278, 278, 278,
	278, 278, 278, 279, 279, 279, 288, 313, 313, 312,
	312, 310, 310, 310, 310, 310, 310, 310, 310, 297,
	297, 307, 307, 307, 307, 307, 296, 296, 292, 292,
	292, 293, 293, 294, 294, 291, 291, 295, 295, 309,
	309, 308, 308, 289, 289, 290, 290, 315, 355, 355,
	355, 355, 355, 356, 356, 316, 344, 346, 346, 346,
	345, 345, 342, 343, 341, 341, 341, 341, 341, 81,
	81, 81, 239, 239, 239, 305, 305, 304, 304, 304,
	306, 306, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 234, 234, 234, 340, 340, 340, 340,
	340, 340, 339, 339, 339, 302, 302, 302, 338, 338,
	57, 57, 181, 181, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 85, 85, 86,
	86, 86, 86, 88, 88, 88, 318, 318, 58, 58,
	3, 3, 137, 139, 140, 140, 138, 138, 138, 138,
	138, 138, 60, 60, 59, 59, 142, 141, 143, 143,
	143, 1, 1, 2, 2, 4, 4, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 284,
	284, 284, 317, 317, 319, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 321, 321, 321, 61, 61, 322,
	274, 275, 276, 5, 6, 298, 320, 95, 95, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 347, 347, 233,
	233, 241, 241, 232, 232, 255, 255, 255, 235, 235,
	235, 236, 236, 351, 351, 351, 64, 64, 64, 66,
	66, 67, 68, 68, 257, 257, 258, 258, 69, 70,
	82, 82, 82, 82, 82, 82, 84, 84, 84, 15,
	15, 15, 15, 78, 78, 78, 14, 14, 65, 65,
	72, 348, 348, 349, 350, 350, 350, 350, 73, 75,
	31, 31, 31, 31, 31, 31, 105, 105, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	100, 100, 100, 94, 94, 363, 76, 77, 77, 98,
	98, 98, 91, 91, 91, 97, 97, 97, 16, 16,
	17, 216, 216, 18, 18, 102, 102, 104, 104, 104,
	104, 104, 106, 106, 106, 106, 106, 106, 106, 101,
	101, 103, 103, 103, 103, 248, 248, 248, 247, 247,
	131, 131, 133, 132, 132, 134, 134, 135, 135, 135,
	135, 179, 157, 157, 214, 214, 212, 212, 213, 213,
	215, 215, 215, 215, 218, 218, 136, 136, 136, 136,
	144, 144, 145, 145, 146, 146, 256, 256, 253, 253,
	253, 252, 252, 150, 150, 150, 152, 151, 151, 151,
	151, 153, 153, 155, 155, 154, 154, 156, 161, 161,
	160, 160, 158, 158, 158, 158, 159, 159, 159, 159,
	162, 162, 115, 115, 115, 115, 115, 115, 115, 126,
	126, 126, 126, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	230, 230, 163, 163, 171, 171, 171, 171, 164, 164,
	164, 164, 164, 164, 164, 172, 172, 172, 178, 173,
	173, 169, 169, 169, 169, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 264, 264,
	329, 329, 328, 328, 327, 327, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 364, 364, 277,
	277, 277, 277, 170, 170, 170, 170, 170, 96, 96,
	96, 96, 96, 261, 261, 261, 265, 265, 265, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 184, 184, 92, 92, 182, 182,
	183, 185, 185, 180, 180, 180, 166, 166, 166, 186,
	186, 187, 187, 188, 188, 190, 189, 189, 191, 192,
	192, 192, 193, 193, 194, 194, 194, 47, 47, 47,
	47, 47, 42, 42, 42, 42, 43, 43, 43, 107,
	107, 107, 107, 109, 109, 108, 108, 79, 79, 80,
	80, 80, 113, 113, 114, 114, 114, 111, 111, 112,
	112, 210, 210, 195, 195, 195, 202, 202, 202, 198,
	198, 200, 200, 200, 201, 201, 201, 199, 207, 207,
	209, 209, 208, 208, 204, 204, 205, 205, 206, 206,
	206, 203, 203, 165, 165, 165, 165, 165, 211, 211,
	211, 211, 219, 219, 175, 175, 177, 177, 176, 130,
	220, 220, 224, 221, 221, 225, 225, 225, 225, 225,
	222, 222, 223, 223, 249, 249, 249, 229, 229, 240,
	240, 237, 237, 238, 238, 231, 231, 242, 242, 242,
	74, 174, 174, 314, 314, 311, 245, 245, 246, 246,
	250, 250, 254, 254, 251, 251, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 360, 361, 259, 260, 260, 260,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 2, 2,
	4, 4, 1, 1, 1, 1, 1, 0, 2, 2,
	3, 3, 2, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 1, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 3, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 9, 6, 6, 6, 2, 2, 3, 3, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -358, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 215, -49, -39, 216,
	-50, 218, 217, 254, 219, 247, 74, 296, 297, 299,
	300, 301, 302, -84, 252, 253, 221, 36, 45, 33,
	34, 37, 225, 260, 261, 224, -10, -34, 8, -360,
	11, 425, 249, 248, 28, -12, 456, 85, -359, 596,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -76, -363, -76, -76, 12, 13, -76, -299,
	-301, 85, 152, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -323, -44, -41, 220, 217, 264,
	119, 120, 254, 255, 256, 219, 238, 253, 257, 252,
	273, -40, 80, 33, 456, 459, -306, 216, 222, 223,
	426, 122, 121, 75, 218, -303, 350, 488, 566, -56,
	568, 101, 103, 567, 44, 228, 569, 570, 571, 495,
	572, 237, 573, 574, 575, 576, 582, 537, 583, 584,
	585, 123, 7, -76, -254, -250, -333, -244, 88, 89,
	90, 453, 240, 486, 487, 289, 80, 41, 347, 350,
	488, 566, 296, 310, 304, 331, 323, 454, 489, 292,
	241, 277, 563, 321, 128, 568, 295, 490, 255, 355,
	356, 491, 357, 101, 299, 392, 581, 294, 492, 579,
	103, 567, 79, 51, 44, 250, 319, 224, 315, 569,
	278, 493, 464, 271, 122, 119, 588, 36, 313, 50,
	30, 578, 121, 49, 570, 143, 494, 571, 495, 359,
	338, 557, 48, 360, 256, 496, 83, 261, 458, 565,
	361, 314, 362, 288, 577, 221, 497, 549, 363, 364,
	558, 498, 339, 343, 499, 384, 365, 595, 52, 500,
	501, 559, 120, 502, 78, 572, 308, 309, 503, 286,
	239, 386, 335, 435, 442, 443, 107, 108, 438, 109,
	444, 110, 445, 446, 447, 436, 111, 104, 437, 448,
	449, 336, 337, 112, 450, 106, 105, 439, 441, 113,
	451, 237, 35, 366, 455, 290, 58, 265, 387, 46,
	341, 592, 45, 553, 504, 556, 334, 330, 53, 505,
	506, 507, 508, 573, 333, 307, 329, 587, 4, 283,
	574, 62, 223, 345, 344, 346, 272, 383, 326, 509,
	510, 511, 244, 81, 512, 316, 21, 513, 514, 367,
	279, 515, 56, 516, 517, 390, 253, 518, 54, 575,
	39, 519, 258, 589, 576, 520, 521, 522, 523, 260,
	524, 369, 525, 368, 340, 342, 267, 370, 457, 526,
	312, 257, 580, 527, 245, 564, 259, 264, 252, 391,
	246, 528, 529, 530, 531, 532, 293, 548, 533, 534,
	300, 582, 43, 535, 536, 537, 538, 539, 287, 282,
	385, 394, 61, 82, 352, 540, 541, 562, 306, 280,
	542, 297, 55, 583, 584, 585, 274, 586, 9, 593,
	594, 372, 123, 284, 285, 47, 327, 266, 543, 544,
	317, 318, 332, 305, 328, 298, 550, 268, 373, 254,
	545, 393, 281, 348, 353, 461, 273, 374, 561, 460,
	325, 322, 275, 546, 375, 229, 269, 270, 547, 551,
	376, 377, 291, 378, 379, 380, 381, 382, 276, 459,
	303, 320, 354, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 434, 227, -76, 227, -154, -250, 227, -222, 356,
	-241, 358, 371, 366, 376, 364, -233, 367, 369, 267,
	-351, 384, 227, 373, 215, 169, 359, 368, 377, 378,
	291, 379, 382, 276, -347, -333, 571, 586, 128, 324,
	363, 361, 385, 553, 381, 380, -250, 298, -257, 303,
	-245, -333, -244, 301, -154, -82, 549, 219, -259, -259,
	-100, 553, 555, -173, -115, 136, -126, -129, -120, -121,
	-167, -168, -169, -170, -127, -180, 158, 159, 166, 137,
	-178, -130, 26, 452, 427, 426, 169, 31, 211, 68,
	69, 429, 430, 139, 57, 402, 403, -128, 397, 404,
	399, 432, 433, 114, 434, 104, 106, 105, 336, 337,
	435, 436, 437, 107, 108, 109, 110, 111, 112, 113,
	438, 441, 439, 440, 442, 443, 444, 449, 450, 445,
	446, 447, 448, 451, -245, -250, 232, 396, 226, 164,
	425, -122, -118, -8, -176, 395, 400, 401, 405, 398,
	-333, -244, -124, -123, -163, 91, 97, 102, 98, -357,
	115, -360, 92, 93, 94, 95, 96, 116, 117, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	44, 372, 372, -154, -76, -76, -76, -76, -188, -98,
	-190, -10, -8, -360, 8, -76, -8, -9, -13, -34,
	-36, 482, -35, -250, -195, -210, 12, 154, 42, 50,
	-193, -194, -12, -8, -115, 19, 23, 24, -103, 160,
	-115, -250, -77, -103, -231, 231, -76, -76, -221, -262,
	298, -225, 385, 384, -246, -223, -245, -243, -222, 383,
	220, 23, 462, 135, 25, 27, 138, 169, 19, 139,
	37, 222, 324, 238, 168, 234, 426, 215, 72, 463,
	397, 399, 395, 402, 428, 429, 396, 358, 31, 13,
	465, 28, 248, 24, 38, 162, 217, 142, 466, 251,
	26, 249, 114, 117, 468, 22, 75, 243, 14, 236,
	40, 16, 469, 470, 17, 232, 231, 154, 228, 70,
	11, 211, 29, 151, 66, 471, 130, 472, 473, 474,
	475, 68, 152, 20, 590, 400, 401, 33, 554, 452,
	262, 164, 73, 59, 555, 136, 398, 476, 477, 115,
	478, 118, 76, 560, 132, 18, 71, 42, 479, 263,
	480, 233, 591, 481, 388, 482, 153, 218, 425, 69,
	483, 226, 371, 8, 431, 32, 247, 235, 125, 67,
	484, 227, 141, 432, 433, 230, 116, 7, 129, 34,
	12, 74, 77, 403, 404, 405, 57, 124, 456, 140,
	15, 485, 389, 134, 128, -300, 152, -286, -290, -245,
	242, -316, 238, -154, -309, -308, -245, -360, -99, -240,
	228, 236, 235, 129, -337, 132, 284, 396, 226, -51,
	-52, -53, -222, 168, 570, -85, 259, 263, 86, 86,
	-290, -289, -288, -338, 263, 242, -315, -307, 234, 243,
	-296, 235, 236, -291, 228, 130, -338, -291, 233, 243,
	263, 263, 123, 263, 123, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 258, -297, 144, -297, 460, 460,
	-303, -338, -338, -338, 230, 35, 35, -242, -291, 230,
	25, -297, -297, -297, -222, 168, -297, -297, -297, -297,
	271, 271, -297, -297, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, -297, -297, -297, -297, -297, -297, 227,
	-337, -107, 382, 291, 80, -54, 273, -37, -154, -240,
	228, 229, -337, 260, -154, 212, -154, -235, 152, 15,
	-235, -232, 372, 370, 357, 362, -235, -235, -235, -235,
	274, 355, -292, 228, 35, 239, 372, 274, 355, 274,
	275, 274, 275, 365, 375, 274, -255, 14, 154, 396,
	360, 364, 267, 227, 268, 229, 374, -333, 556, 275,
	-255, 92, -236, 152, 372, 270, -235, -260, -360, -246,
	324, -260, -260, 32, 89, 230, -245, -78, -245, 92,
	-15, -11, -22, -21, -23, 144, -105, 372, -93, 169,
	571, 557, 558, 559, 556, 369, 564, 562, 560, 274,
	561, 86, 132, 134, 135, 4, -115, 151, -164, 144,
	145, 146, 147, 148, 149, 150, 154, 136, 138, 152,
	153, 133, 155, 156, 157, 158, 159, 160, 161, 163,
	162, 164, 165, 168, 213, 214, -121, -121, -121, -121,
	-178, -360, -360, -360, -121, -230, -360, -121, -360, -360,
	-360, -360, -184, -115, -360, -364, -360, -364, -364, -277,
	-360, -277, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, 212, -360, -360, -360,
	-360, -360, -277, -277, -277, -277, -277, 102, 97, 91,
	-180, 98, 92, -245, -250, -8, -9, -173, -259, -348,
	-349, -157, -154, -360, 291, -245, -245, 260, -193, -12,
	-8, -188, -194, -190, -8, -76, -91, -104, 63, 64,
	-106, 24, 38, 67, 65, 23, -361, 87, -361, -210,
	-361, 86, -36, -214, 85, 61, 43, 92, 92, 86,
	21, -189, -191, -115, 14, -248, 4, -247, 25, -245,
	92, 212, 100, 14, -155, 29, -154, -231, -231, 86,
	298, -225, -262, -227, -226, 386, 388, 144, -249, -245,
	92, 31, 87, 86, -154, -266, -269, -271, -270, -272,
	-267, -268, 321, 322, 169, 325, 327, 328, 329, 330,
	331, 332, 333, 334, 335, 338, 32, 250, 317, 318,
	319, 320, 339, 340, 341, 342, 343, 344, 345, 346,
	304, 323, 454, 305, 306, 307, 308, 309, 310, 312,
	313, 314, 315, 316, -336, -333, 85, 87, 86, -273,
	85, -115, -107, 227, -333, 228, 228, 228, -76, 425,
	-297, -297, -297, 258, 19, -44, -41, -323, 18, -40,
	-41, 220, 119, 120, 217, 85, -286, 85, -295, -336,
	-333, 85, 130, 233, 129, -294, -291, -294, -295, -333,
	-180, -333, 130, 130, -218, -245, -218, -218, 23, -218,
	23, -218, 23, 94, -245, -218, 23, -218, 23, -218,
	23, -218, 23, -218, 23, 31, 78, 79, 31, 81,
	82, 83, -180, -180, -286, -222, -154, -333, 94, 94,
	94, -297, -297, 94, 92, 92, 92, -297, -297, 94,
	92, -252, -250, 92, 92, -339, 244, 288, 290, 94,
	94, 94, 94, 31, 92, -340, 31, 578, 577, 579,
	580, 581, 92, 94, 31, 94, 31, 94, -245, 85,
	-154, -113, 278, 215, 217, 220, 76, 92, 292, 144,
	44, 86, 230, 227, -333, -237, 232, -237, -245, -251,
	-250, -243, 92, -115, -293, 14, 154, -255, -255, -235,
	-154, -293, -255, -235, -154, -235, -235, -235, -235, -255,
	-255, -255, -235, -250, -250, -154, -154, -154, -154, -154,
	-154, -154, -260, -260, -260, -236, -235, 556, 92, 76,
	-258, 301, 335, 550, 551, 552, 86, 456, -147, -154,
	556, 556, 556, 556, 556, 556, -115, -115, -115, -115,
	478, -171, 115, 136, 116, 117, -129, -172, -176, -178,
	99, 154, 138, 152, 153, -120, -121, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-261, -333, 92, 169, -125, -124, 98, -357, -125, -101,
	-103, -115, -115, -333, -245, -101, -101, -115, -97, 24,
	38, -182, -183, 140, -180, -361, -361, 94, 98, -245,
	-245, -90, -89, 407, 408, 409, 410, 412, 413, 414,
	417, 418, 422, 423, 406, 424, 411, 416, 419, 420,
	421, 415, 320, -115, -115, -115, -115, -115, -115, -174,
	-173, -332, -331, -330, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -102, 24, 38,
	-101, -246, -251, -243, -101, -102, -102, -101, -101, 212,
	-210, -361, 86, -350, 388, 389, 554, -253, 263, -252,
	25, -174, 92, 14, -216, 77, -245, -193, -193, 63,
	64, 59, -101, -106, -361, -35, 25, -212, -245, 62,
	92, -278, -222, 347, 348, -115, -115, 86, -192, 27,
	28, -154, -247, 160, -251, -154, -217, 263, -154, -132,
	-134, -135, -136, -157, -179, -360, -137, 471, 14, -147,
	-148, -156, -250, -225, -227, 86, 387, 389, 390, 76,
	118, -115, -279, 168, -305, -304, -303, -286, -288, -289,
	-290, 87, -279, -282, 353, 352, -273, -273, -273, -273,
	-273, -278, -278, -278, -278, 85, 85, -273, -273, -273,
	-273, -280, 85, -280, -280, -281, 85, -281, -316, -115,
	-313, -312, -310, -311, 237, 101, 547, 503, 456, 495,
	537, 77, -308, -192, 94, -361, -113, -238, 232, -314,
	-311, -333, -333, -333, -238, -333, 92, -333, 92, -333,
	92, -86, -58, -1, 590, 591, 592, 86, 19, -287,
	-286, -57, 288, -319, -320, 263, -315, -309, -295, 130,
	-294, -295, -295, -333, 86, 29, 123, 123, 123, 123,
	456, 217, 32, -286, -57, -261, 230, -261, -261, 92,
	92, -234, 586, -147, -109, 280, 144, 269, 269, 227,
	227, 282, -154, 293, 295, 294, 292, 23, 281, 283,
	285, 271, -154, -154, -237, 76, -149, -154, 26, -250,
	-154, -235, -235, -154, -235, -235, -154, -245, -93, 388,
	86, 456, 22, -94, 22, -360, 115, 116, 117, -172,
	-120, -121, -120, 135, 251, 86, -361, 25, 86, 77,
	-361, -361, -361, 86, 14, -101, -185, -183, 142, -115,
	-361, -361, -361, 86, 86, 14, -265, 25, -361, -361,
	-361, 86, 86, -361, -361, 86, 86, -361, 86, 86,
	86, -329, 86, 86, 86, 86, -361, -361, -361, -361,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	-361, -361, -101, -101, -360, 212, -361, -361, -361, -361,
	-361, -246, -349, 553, 389, -161, -160, -158, 74, 231,
	75, -360, -252, -361, -125, 89, -213, 89, -212, -166,
	-245, 94, 98, -195, -131, -133, 14, -106, -178, 87,
	86, -278, -199, -204, -232, -245, 92, 169, -191, 212,
	-162, 15, -165, 32, 57, -11, -360, -360, 32, 86,
	-150, -152, -151, -153, 66, 70, 72, 67, 68, 69,
	73, -256, 25, -132, -9, -8, -360, -360, -154, -147,
	-362, 14, 77, -362, 86, 212, -226, -228, 391, 388,
	394, -333, 92, -85, 86, -303, -290, -196, -110, 40,
	-283, 354, -278, -278, -285, 92, -285, 94, 94, 87,
	-47, -42, -43, 33, 80, -310, -297, 92, 39, -297,
	-297, -245, 87, -192, -109, -154, 136, 76, -314, -314,
	-314, -250, -2, 589, 595, 130, 85, 357, 18, -212,
	86, 87, -181, 289, 87, -87, -245, 87, 85, -295,
	-295, -245, -360, 227, 31, 31, -57, -181, -279, -333,
	588, 587, 87, 229, 287, -114, 402, -111, 92, 88,
	-154, -154, -154, -154, -154, 220, 217, 272, 230, -147,
	-154, 86, -81, 246, 241, -255, -255, 33, -154, 388,
	565, 563, -115, 135, 251, -129, -121, -103, 453, -263,
	169, 321, 250, 319, 315, 335, 326, 352, 317, 353,
	314, 313, 312, -263, -261, -115, -115, -188, 143, -115,
	141, -115, -115, -115, -361, 169, 321, -115, -115, -330,
	-115, -115, -115, -328, -327, -125, -180, -361, -328, -115,
	-115, -327, -327, -331, -331, -331, -331, -331, -173, -173,
	-173, -173, -361, -361, -102, -246, -158, -291, -291, -291,
	-218, 86, -229, 22, 14, 57, 57, -131, -162, -132,
	-106, -245, -202, 549, -207, 46, -205, -206, 47, -203,
	48, 56, 160, -193, -115, -219, 76, -220, -224, -180,
	-175, -177, -176, -360, -211, -361, -245, -218, -220, -134,
	-135, -135, -134, -135, 66, 66, 66, 71, 66, 71,
	66, -151, -250, -361, -361, -9, -115, -253, 77, -132,
	-132, -156, -250, 160, 388, 392, 393, -303, -356, 115,
	136, 31, 76, 350, 101, -354, 168, 491, 547, 503,
	495, 537, -355, 233, 129, 130, 245, 25, 41, 87,
	86, 87, 86, 87, 86, -239, 494, 136, -43, -42,
	-297, -297, 94, -333, 92, 92, 229, 26, -154, 76,
	76, 76, -88, 593, 94, 85, -3, 80, -115, 85,
	19, -286, -180, -321, -274, -322, -275, -276, -5, -6,
	-298, 57, 101, -61, 44, 228, 573, 574, 123, 586,
	-313, -212, -317, -319, -154, -117, -360, -116, -118, -122,
	158, 159, -181, -154, -108, 278, 286, 85, -112, 89,
	-335, 77, 269, 350, 269, -154, -81, -47, -154, -235,
	-235, 33, -333, -361, -129, -121, -360, -361, -273, -273,
	-273, -281, -273, 309, -273, 309, -273, -361, -361, 86,
	-361, 22, -361, -92, 431, -115, 86, 86, -361, 85,
	85, -361, -361, -329, 86, -361, 86, -361, 86, -264,
	548, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -159, 22, -159, -159, -361, 89, -154, -162,
	-186, 16, -199, 51, 327, -209, -208, 55, 47, -206,
	19, 49, 19, 30, -219, 86, 144, 86, -361, -361,
	86, 57, 212, -361, -162, -145, -144, 76, 77, -146,
	76, -144, 66, 66, -214, -361, 86, -217, -132, -162,
	-162, 212, 115, -360, -119, -128, -117, 12, 92, 92,
	-333, -353, 577, 578, 31, -297, -297, 130, 130, -154,
	85, -278, 92, -278, 94, 94, 494, 31, 81, 82,
	83, 31, 78, 79, -154, -154, -154, -154, -318, 85,
	19, -115, 85, 144, 87, -212, -212, 265, 154, -297,
	571, 271, 271, -297, -297, -297, 87, -361, 86, -284,
	456, 459, -115, -123, -123, -214, 87, -326, 456, -334,
	-245, -245, -245, -245, -120, -278, -115, -115, -193, 92,
	-115, -115, 94, 94, -361, -328, -327, -115, -361, -142,
	-141, -143, 557, 115, 31, -263, -360, 66, 18, 16,
	-360, -360, -253, -186, -187, 17, 19, -200, 53, -198,
	52, -198, -208, 19, 19, 92, 19, 92, 130, -224,
	-115, -177, 57, -11, -245, -175, -245, -188, -115, 85,
	-115, -125, -162, -162, -115, -168, 434, 104, 106, 105,
	336, 337, 435, 436, 437, 107, 108, 109, 110, 111,
	112, 113, 438, 441, 439, 442, 443, 444, 449, 450,
	445, 446, 447, 448, 451, 92, 92, 85, -115, 87,
	87, -214, -317, -58, 87, -212, 94, 87, 266, -176,
	-360, 92, -297, -297, -297, 94, 94, -252, -355, -319,
	460, 460, -361, 25, -325, -324, -246, 85, 77, -96,
	154, 456, -361, -361, -361, -361, -361, 87, 87, -361,
	-361, 86, -361, -141, -143, -361, 76, -125, -215, -361,
	-245, 233, 19, 19, -215, -215, -161, -187, -115, -173,
	-201, 54, 76, 118, 92, 92, 92, 12, -175, 212,
	-193, -212, -139, 357, -188, -361, -212, 87, 25, 87,
	595, 130, 87, -176, -95, -360, 262, -252, 92, 92,
	-11, 86, 144, -212, -154, -361, 454, 73, 457, -115,
	-361, 76, 466, 557, 86, -361, -361, -361, 76, 118,
	-220, -245, 87, -361, -360, -193, 87, -197, -11, 85,
	-3, 262, -79, 456, -324, -302, -246, 92, 94, 87,
	62, 455, 458, -329, -245, 233, -253, -140, -138, -245,
	509, -345, -344, 452, -356, -352, 115, 136, 101, -354,
	547, 503, 124, 125, -79, -115, 85, -361, -80, 277,
	553, -335, 62, -361, -361, 86, 22, -266, -60, 520,
	-342, -343, 76, -346, 363, 519, 540, 115, 92, 87,
	-212, 238, -326, 456, -138, 516, -279, -125, -343, 76,
	-342, 76, 13, 12, -4, 594, 87, 279, 457, -59,
	26, -139, -341, 246, 241, 244, 32, -341, 94, -4,
	458, 520, 240, 31, 115, -125, -142, -141, -141,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 785,
	785, 785, 0, 785, 0, 0, 785, -2, -2, 785,
	1262, 0, 785, 0, 0, -2, 717, 719, 0, 721,
	-2, 0, 0, 730, 1753, 1753, 780, 0, 0, 0,
	0, 0, 785, 785, 785, 785, 1123, 48, 785, 0,
	83, 84, 736, 737, 738, 63, 0, 1751, 1, 3,
	69, 73, 0, 0, 0, 56, 1132, 0, 76, 0,
	0, 789, 0, 787, 0, 1245, 785, 785, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 547, 487, 530, 485, 516, -2, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 369, 369, 0, 0, -2, 478, 478, 478,
	0, 0, 0, 513, 1247, 430, 369, 369, 369, 0,
	369, 369, 369, 369, 0, 0, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 1149, 153, 1263, 1260, 1261, 38, 39,
	40, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 0, 1239, 0, 647, 885, 0, 708, 708,
	0, 708, 708, 708, 708, 0, 0, 0, 659, 0,
	0, 0, 0, 705, 0, 0, 678, 680, 0, 705,
	0, 711, 0, 692, 708, 1754, 1754, 1754, 1230, 0,
	702, 700, 714, 715, 697, 698, 716, 720, 0, 725,
	728, 1256, 1257, 0, 743, 47, 1496, 735, 748, 749,
	0, 781, 782, 43, 979, 0, 907, 912, 923, 936,
	937, 938, 939, 940, 942, 943, 0, 0, 0, 0,
	948, 949, 0, 0, 0, 0, 0, 960, 0, 0,
	0, 0, 0, 1104, 0, 1067, 1067, 996, 1067, 1069,
	1069, 0, 0, 0, 1750, 1536, 1544, 1545, 1540, 1541,
	1522, 1534, 1537, 1525, 1526, 1528, 1530, 1535, 1542, 1548,
	1527, 1547, 1546, 0, 1523, 1524, 1529, 1539, 1543, 1531,
	1532, 1533, 1538, 1549, 1113, 0, 0, 0, 0, 0,
	0, 271, 272, 978, 1219, 1069, 1069, 1069, 1069, 1069,
	-2, -2, 218, 219, 220, 221, 222, 223, 224, 0,
	214, 0, 276, 277, 273, 274, 275, 962, 963, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	1753, 0, 758, 0, 0, 0, 0, 0, 1132, 0,
	1124, 1123, 61, 0, 785, -2, 0, 0, 0, 0,
	45, 0, 50, 844, 75, 74, 1171, 0, 0, 0,
	57, 1133, 65, 67, 1134, 0, 790, 791, 0, 821,
	825, 0, 786, 0, 0, 1246, 1245, 1245, 100, 0,
	1694, 1223, -2, -2, 0, 0, 1258, 1259, 1232, -2,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, -2, 0, 0, 165, 166, 0,
	41, 396, 0, 161, 0, 389, 335, 0, 1149, 0,
	0, 0, 0, 0, 785, 0, 1240, 142, 143, 150,
	151, 152, 369, 369, 369, 527, 0, 0, 153, 153,
	494, 495, 496, 0, 0, -2, 394, 0, 479, 0,
	0, 383, 383, 387, 385, 386, 0, 0, 0, 0,
	0, 0, 507, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 370, 0, 525, 526,
	431, 0, 0, 0, 0, 505, 506, 0, 0, 1248,
	1249, 0, 0, 0, 369, 369, 0, 0, 0, 0,
	369, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1162, 0, 0, 0, -2, 0, 639, 0, 0,
	0, 1241, 1241, 0, 646, 0, 648, 649, 0, 0,
	650, 0, 705, 705, 703, 704, 652, 653, 654, 655,
	708, 0, 0, 378, 379, 380, 705, 708, 0, 708,
	708, 708, 708, 705, 705, 705, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 1754, 1754, 711,
	708, 0, 688, 0, 689, 690, 693, 694, 1755, 1756,
	1278, 695, 696, 1231, 718, 726, 729, 746, 744, 745,
	747, 739, 740, 741, 742, 0, 760, 761, 766, 0,
	0, 0, 0, 772, 773, 774, 0, 0, 777, 778,
	779, 0, 0, 0, 0, 0, 905, 0, 0, 968,
	969, 970, 971, 972, 973, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 944, 945, 946, 947,
	950, 0, 0, 0, 955, 956, 0, 0, 0, 0,
	0, 795, 0, 1105, 0, 994, 0, 995, 997, 998,
	0, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 805, 0, 0, 805, 805,
	0, 0, 207, 208, 209, 210, 211, 225, 226, 227,
	228, 229, 278, 1113, 0, 978, 0, 0, 44, 750,
	751, 0, 868, 1251, 0, 0, 801, 0, 55, 64,
	66, 1132, 59, 1132, 0, 807, 0, 0, -2, -2,
	808, 814, 815, 816, 817, 818, 52, 1752, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 347, 1174, 0,
	0, 1125, 1126, 1129, 0, 822, 1577, 826, 0, 828,
	829, 0, 788, 0, 98, 0, 884, 0, 0, 0,
	1694, 1229, 0, 102, 103, 0, 0, 0, 353, 1234,
	1235, 1236, -2, 376, 0, 353, 342, 286, 287, 288,
	335, 290, 335, 335, 335, 335, 347, 347, 347, 347,
	318, 319, 320, 321, 322, 0, 0, 305, 335, 335,
	335, 335, 325, 326, 327, 328, 329, 330, 331, 332,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 337,
	337, 337, 339, 339, 0, 42, 0, 357, 0, 1129,
	0, 0, 1162, 1243, 1253, 0, 0, 0, 1243, 120,
	0, 0, 0, 528, 558, 488, 517, 529, 0, 491,
	492, -2, 0, 0, 478, 0, 480, 0, 377, 0,
	-2, 0, 387, 0, 383, 387, 384, 387, 375, 388,
	509, 510, 511, 0, 588, 854, 0, 0, 0, 0,
	0, 594, 595, 596, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 480, 0, 514, 0, 432, 433,
	434, 0, 0, 437, 438, 439, 440, 0, 0, 443,
	444, 445, 871, 872, 446, 447, 472, 473, 474, 448,
	449, 450, 451, 452, 453, 454, 466, 467, 468, 469,
	470, 471, 455, 456, 457, 458, 459, 460, 463, 0,
	135, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 804, 886,
	1264, 1265, 709, 710, 0, 381, 382, 708, 708, 656,
	679, 0, 708, 660, 681, 661, 663, 662, 664, 683,
	684, 708, 667, 706, 707, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 685, 686, 687, 712, 0,
	0, 727, 731, 732, 733, 734, 0, 0, 763, 94,
	768, 769, 770, 771, 783, 776, 980, 902, 903, 904,
	0, 906, 909, 0, 964, 966, 911, 913, 975, 976,
	977, 0, 0, 0, 0, 0, 917, 921, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	941, 1083, 1084, 1085, 958, 279, 280, 0, 959, 0,
	819, 0, 0, 0, 957, 0, 0, 0, 0, 796,
	797, 1111, 1108, 0, 0, 1068, 1070, 0, 0, 0,
	0, 0, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1086, 0, 0, 0, 0, 0, 0,
	1252, 0, 130, 131, 0, 0, 0, 0, 0, 1040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	806, 1114, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1218, 0, 753, 754, 756, 0, 888, 0, 869,
	0, 0, 759, 0, 800, 0, 803, 58, 60, 812,
	813, 0, 830, 809, 54, 49, 0, 0, 846, 1172,
	347, 1194, 0, 351, 352, 1135, 1136, 0, 1128, 1130,
	1131, 77, 827, 823, 0, 900, 0, 0, 883, 0,
	833, 835, 836, 837, 866, 0, 840, 0, 0, 0,
	0, 96, 885, 1224, 101, 0, 0, 106, 107, 1225,
	1226, 1227, 1228, 0, 547, -2, 427, 167, 169, 170,
	171, 162, -2, 345, 343, 344, 289, 347, 347, 312,
	313, 314, 315, 316, 317, 0, 0, 306, 307, 308,
	309, 300, 0, 301, 302, 303, 0, 304, 395, 0,
	1137, 358, 359, 361, 369, 0, 364, 365, 0, 369,
	369, 0, 390, 391, 0, 1129, 1153, 0, 0, 0,
	1254, 1253, 1253, 1253, 0, 155, 156, 157, 158, 159,
	160, 583, 0, 0, 559, 581, 582, 153, 0, 0,
	163, 482, 481, 0, 615, 0, 393, 0, 0, 387,
	387, 372, 373, 512, 0, 0, 590, 591, 592, 593,
	0, 0, 0, 480, 482, 353, 0, 435, 436, 441,
	442, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 543, 544, 545, 546, 1150, 1151,
	1152, 0, 0, 640, 0, 0, 419, 92, 1242, 645,
	705, 666, 682, 705, 658, 665, 691, 723, 767, 0,
	0, 0, 0, 775, 0, 0, 910, 965, 967, 914,
	0, 918, 922, 0, 0, 0, 0, 0, 0, 0,
	961, 985, 986, 0, 0, 1123, 0, 1109, 0, 0,
	993, 1071, 1072, 0, 0, 0, 0, 0, 1004, 1005,
	1006, 0, 0, 1009, 1010, 0, 0, 1011, 0, 0,
	0, 0, 0, 0, 0, 0, 1023, 1024, 1025, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1037, 981, 0, 0, 805, 0, 1073, 1074, 1075, 1076,
	1077, 1114, 752, 755, 757, 842, 889, 890, 0, 0,
	0, 0, 870, 1250, 798, 799, 802, -2, 0, 0,
	1116, 0, 0, 830, 900, 831, 0, 810, 51, 845,
	0, 1176, 1175, 1188, 1201, 348, 349, 350, 1127, 0,
	1132, 0, 1212, 0, 0, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 873, 0, 0, 876, 0, 0,
	0, 0, 867, 0, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 354, 355, 144, 153, 429, 168, 403, 0, 0,
	285, 346, 310, 311, 0, 333, 0, 0, 0, 422,
	116, 1141, 1140, 369, 369, 360, 0, 363, 0, 0,
	0, 1255, 336, 392, 0, 134, 0, 0, 0, 0,
	0, 140, 553, 0, 0, 560, 0, 0, 0, 486,
	0, 497, 498, 0, 587, -2, 636, 357, 0, 371,
	374, 855, 0, 0, 499, 0, 482, 503, 504, 515,
	464, 465, 462, 0, 0, 1163, 1164, 1169, 1167, 1168,
	121, 535, 537, 536, 540, 0, 0, 533, 0, 419,
	1137, 0, 644, 420, 421, 708, 708, 762, 95, 0,
	765, 0, 0, 0, 0, 915, 919, 820, 0, 0,
	335, 335, 1091, 335, 339, 1094, 335, 1096, 335, 1099,
	335, 1102, 1103, 0, 0, 0, 0, 1106, 992, 1112,
	0, 0, 0, 0, 1003, 0, 0, 0, 0, 132,
	133, 1040, 0, 0, 1042, 1044, 1045, 1015, 1041, 0,
	0, 1038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 982, 983, 0, 1115, 891, 896, 896, 896,
	0, 0, 0, 1237, 1238, 1117, 1118, 900, 1119, 832,
	811, 847, 1194, 0, 1187, 0, -2, 1196, 0, 0,
	0, 1202, 824, 78, 901, 81, 0, 1212, 1220, 0,
	1203, 1214, 1216, 0, 0, 0, 1208, 0, 900, 834,
	862, 864, 0, 859, 874, 875, 877, 0, 879, 0,
	881, 882, 844, 839, 841, 0, 0, 98, 0, 900,
	900, 97, 0, 887, 108, 109, 110, 428, 172, 177,
	0, 0, 0, 182, 0, 184, 0, 0, 188, 189,
	369, 369, 404, 0, 282, 284, 0, 0, 175, 347,
	0, 347, 0, 340, 0, 405, 423, 0, 1138, 1139,
	0, 0, 362, 366, 367, 368, 0, 1244, 136, 0,
	0, 0, 556, 0, 584, 0, 0, 0, 0, 0,
	0, 164, 483, 616, 617, 618, 619, 620, 621, 622,
	623, 0, 369, 0, 0, 0, 369, 369, 369, 628,
	356, 0, 0, 612, 609, 500, 0, 212, 213, 215,
	0, 0, 502, 844, 1154, 1155, 1156, 0, 1166, 1170,
	124, 0, 0, 0, 0, 641, 642, 643, 93, 651,
	657, 764, 784, 908, 916, 920, 0, 952, 1089, 347,
	1092, 1093, 1095, 1097, 1098, 1100, 1101, 953, 954, 0,
	988, 0, 990, 1132, 0, 1110, 0, 0, 1002, 0,
	0, 1007, 1008, 0, 0, 1014, 0, 1016, 0, 0,
	0, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 984, 0, 0, 0, 0, 868, -2, 62, 1119,
	1121, 0, 1181, 1179, 1179, 1189, 1190, 0, 0, 1197,
	0, 0, 0, 0, 82, 0, 0, 0, 1217, 0,
	0, 0, 0, 99, 1123, 856, 863, 0, 0, 857,
	0, 858, 878, 880, 838, -2, 0, 900, 900, 88,
	89, 0, 178, 0, 180, 205, 206, 0, 183, 185,
	186, 187, 192, 193, 194, 0, 0, 281, 283, 0,
	0, 323, 334, 324, 0, 0, 424, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 844, 137, 138, 139, 548, 0,
	558, 0, 0, 0, 551, 0, 489, 0, 0, 0,
	369, 369, 369, 0, 0, 0, 0, 589, 0, 597,
	0, 0, 0, 216, 217, 0, 1165, 534, 0, 122,
	123, 0, 0, 539, 1078, 1090, 0, 0, 0, 1107,
	0, 0, 0, 0, 1012, 0, 1043, 0, 1019, 0,
	0, 0, 578, 579, 0, 1039, 0, 897, 0, 0,
	0, 0, 888, 1121, 80, 0, 0, 1184, 0, 1177,
	1180, 1178, 1191, 0, 0, 1198, 0, 1200, 0, 1221,
	1222, 1215, 0, 1207, 1210, 1206, 1209, 1132, 860, 0,
	865, 0, 1123, 87, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 0, 0, 338,
	341, 0, 0, 0, 549, 0, 561, 552, 0, 626,
	0, 630, 0, 0, 0, 633, 634, 635, 397, 613,
	610, 611, 501, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 987, 989, 991, 1000, 1001, 1087, 1088, 1013,
	1017, 0, 1020, 0, 0, 1021, 0, 580, 0, 893,
	850, 851, 898, 899, 0, 0, 843, 79, 1122, 1120,
	1173, 0, 1182, 1183, 1192, 1193, 1199, 0, 1205, 0,
	85, 0, 0, 0, 1132, 179, 0, 197, 0, 557,
	0, 560, 550, 624, 625, 0, 637, 629, 631, 632,
	1157, 0, 0, 0, 541, 951, 0, 0, 0, 1040,
	1022, 0, 576, 577, 0, 892, 894, 895, 1185, 1186,
	1213, 1211, 861, 868, 0, 86, 410, 403, 1157, 0,
	0, 0, 531, 1159, 127, 128, 475, 476, 477, 121,
	1079, 0, 1082, 0, 852, 853, 562, 0, 564, 0,
	-2, 398, 411, 0, 173, 198, 199, 0, 0, 202,
	203, 204, 195, 196, 117, 0, 0, 638, 0, 1160,
	1161, 124, 1080, 1018, 563, 0, 0, 353, 0, 573,
	399, 400, 0, 406, 407, 408, 409, 200, 201, 585,
	0, 0, 538, 0, 565, 566, 574, 0, 401, 0,
	402, 0, 0, 0, 554, 0, 585, 1158, 0, 0,
	575, 571, 412, 414, 415, 0, 0, 413, 586, 555,
	1081, 0, 416, 417, 418, 567, 568, 569, 570,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 212, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 596,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:518
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:523
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:524
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:528
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:564
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:593
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:599
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:605
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:609
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:618
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:628
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:634
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:712
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:825
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:837
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:841
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:847
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:857
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:875
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:885
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:889
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:895
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:908
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:930
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:940
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:944
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:948
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:954
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:958
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:966
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:972
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:976
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:982
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:995
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1008
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1015
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1019
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1024
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1039
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1044
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1050
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1055
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1070
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1076
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1092
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1099
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1106
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1116
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1128
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1135
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1146
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1157
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1163
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1167
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1171
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1189
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1199
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1203
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1209
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1213
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1223
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1229
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1233
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1239
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1249
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1254
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1287
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1296
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1305
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1349
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1399
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1403
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1407
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1413
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1417
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1422
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1426
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1437
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1474
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1478
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1482
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1486
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1501
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1508
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1512
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1518
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1522
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1530
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = Armscii8Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = ASCIIStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Big5Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = UBinaryStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Cp1250Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Cp1251Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Cp1256Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Cp1257Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp850Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp852Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp866Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp932Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Dec8Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = EucjpmsStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = EuckrStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Gb18030Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Gb2312Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = GbkStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Geostd8Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = GreekStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = HebrewStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Hp8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Keybcs2Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Koi8rStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Koi8uStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Latin1Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Latin2Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Latin5Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Latin7Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = MacceStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = MacromanStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = SjisStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Swe7Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Tis620Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = Ucs2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = UjisStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Utf16Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Utf16leStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Utf32Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Utf8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf8mb4Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1754
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1758
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1779
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1783
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1787
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1791
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2022
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2027
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2031
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2039
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2049
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2057
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2061
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2070
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2074
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2121
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2130
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2136
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2146
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2150
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2155
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2159
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2163
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2171
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2175
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2191
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2195
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2199
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2203
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2207
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2212
		{
			yyVAL.str = ""
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.str = yyDollar[2].str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = "key"
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = yyDollar[1].str
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2275
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2285
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2289
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2295
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2299
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2305
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2309
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2315
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2321
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2325
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2329
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2333
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2337
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2346
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2352
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2358
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2364
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2368
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2372
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2377
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2381
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2387
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2393
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2399
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2403
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2407
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2411
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2415
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2437
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2441
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2450
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2456
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2470
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2480
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2484
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2488
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2492
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2496
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2500
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2504
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2508
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2512
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2516
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2520
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2524
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2528
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2532
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2536
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2605
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2632
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2664
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2673
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2677
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2681
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2685
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2689
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2695
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2709
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2713
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2729
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2745
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2749
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2753
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2769
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2773
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2777
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2781
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2785
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2797
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2803
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2813
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2817
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2821
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2825
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2829
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2851
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2858
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2878
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2895
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2902
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2924
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2928
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2945
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2955
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2959
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2970
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2977
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2984
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2991
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2998
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3009
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3018
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3026
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3035
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3042
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3054
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3063
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3078
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3092
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3096
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3102
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3108
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3114
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3118
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3124
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3128
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3134
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3140
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3146
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3152
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3176
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3182
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3188
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3192
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3196
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3202
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3206
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3211
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3215
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3220
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3224
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3230
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3234
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3238
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3242
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3246
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3250
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3254
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3258
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3262
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3266
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3270
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3274
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3278
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3282
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3286
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3290
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3294
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3298
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3302
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3306
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3310
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3314
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3319
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3323
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3327
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3334
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3338
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3349
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3353
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3358
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3363
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3368
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3373
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3378
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3384
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3390
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3397
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3404
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3411
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3419
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3423
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3429
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3435
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3441
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3447
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3453
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3459
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3471
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = ""
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = ""
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3493
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3497
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3503
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3541
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3545
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3653
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3657
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3665
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3669
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3673
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3677
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3681
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = "extended "
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3768
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3772
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3788
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3806
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3810
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3820
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3826
		{
			yyVAL.empty = struct{}{}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.empty = struct{}{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.empty = struct{}{}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3879
		{
			yyVAL.empty = struct{}{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.empty = struct{}{}
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.empty = struct{}{}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.empty = struct{}{}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3902
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3906
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3910
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3914
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3918
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3922
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.str = yyDollar[1].str
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = yyDollar[1].str
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = yyDollar[1].str
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3999
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4009
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4015
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4019
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4023
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4027
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4081
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4085
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4130
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4134
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4143
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4147
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			setAllowComments(yylex, true)
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4156
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4162
		{
			yyVAL.strs = nil
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4172
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = SQLCacheStr
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4237
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4256
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.strs = nil
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4273
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4277
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = SQLCacheStr
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = DistinctStr
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = DistinctStr
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = StraightJoinHint
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4313
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4317
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4323
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4327
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4331
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4335
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4360
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4364
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4370
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4376
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4390
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4394
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4398
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4402
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4408
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4414
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4418
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4427
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4433
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4443
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4453
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4457
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4461
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4471
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4488
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4492
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4496
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4500
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4508
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4512
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4518
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4523
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4536
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4549
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4553
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4557
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4563
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4569
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4573
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4577
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4581
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4587
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4591
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4630
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4636
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4646
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4650
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4654
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4658
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4663
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4667
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4671
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4675
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4692
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4696
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4700
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4704
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4708
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4727
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4731
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4769
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4773
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4781
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4853
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4869
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4954
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4958
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4965
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4969
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4973
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4977
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4983
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4987
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4991
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4995
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4999
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5003
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5007
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5013
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5017
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5021
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5028
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5034
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5038
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5297
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5306
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5312
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5332
		{
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5334
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5338
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5342
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5346
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5350
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5354
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5358
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5362
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5366
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5370
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5374
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5380
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5384
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5388
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5392
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5396
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5400
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5404
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5408
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5412
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5467
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5471
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5475
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5479
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5483
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5507
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5511
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5517
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5521
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5525
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5529
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5533
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5539
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5543
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5547
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5551
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5555
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5559
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5563
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5567
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5571
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5575
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = string("")
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5600
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5610
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5625
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5629
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5633
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5652
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5662
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5680
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5686
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5692
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5696
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5702
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5707
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5711
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5715
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5724
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5730
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5734
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5738
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5747
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5751
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5755
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5759
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5766
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5770
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5774
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5778
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5784
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5788
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5792
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5797
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5801
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5809
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = ""
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5824
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = ""
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5842
		{
			yyVAL.str = "cascaded"
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5846
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5859
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5865
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5871
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5877
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5886
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5890
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = ""
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5905
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5909
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5915
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5919
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5923
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5928
		{
			yyVAL.str = ""
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5932
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5936
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5941
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5945
		{
			yyVAL.str = " header"
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5950
		{
			yyVAL.str = ""
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5954
		{
			yyVAL.str = " manifest on"
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5958
		{
			yyVAL.str = " manifest off"
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = ""
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = " overwrite on"
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5971
		{
			yyVAL.str = " overwrite off"
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5977
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = ""
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5996
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = ""
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6035
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6044
		{
			yyVAL.str = ""
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6048
		{
			yyVAL.str = " optionally"
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6061
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6065
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6069
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6073
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6077
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6083
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6087
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6095
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6104
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6110
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6120
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6124
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6130
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6145
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6149
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6155
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6161
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6165
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6171
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6175
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6179
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6183
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6187
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6195
		{
			yyVAL.str = "charset"
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6224
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6232
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6237
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6239
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6242
		{
			yyVAL.empty = struct{}{}
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6244
		{
			yyVAL.empty = struct{}{}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.empty = struct{}{}
		}
	case 1250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6250
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6259
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6266
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6270
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6276
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6280
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6287
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6303
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6307
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6824
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6833
		{
			decNesting(yylex)
		}
	case 1753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6838
		{
			skipToEnd(yylex)
		}
	case 1754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6843
		{
			skipToEnd(yylex)
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6847
		{
			skipToEnd(yylex)
		}
	case 1756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6851
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
