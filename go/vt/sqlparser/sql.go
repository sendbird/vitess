// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const UNIQUE = 57469
const KEY = 57470
const EXPRESSION_PREC_SETTER = 57471
const OR = 57472
const XOR = 57473
const AND = 57474
const NOT = 57475
const BETWEEN = 57476
const CASE = 57477
const WHEN = 57478
const THEN = 57479
const ELSE = 57480
const END = 57481
const LE = 57482
const GE = 57483
const NE = 57484
const NULL_SAFE_EQUAL = 57485
const IS = 57486
const LIKE = 57487
const REGEXP = 57488
const IN = 57489
const SHIFT_LEFT = 57490
const SHIFT_RIGHT = 57491
const DIV = 57492
const MOD = 57493
const UNARY = 57494
const COLLATE = 57495
const BINARY = 57496
const UNDERSCORE_ARMSCII8 = 57497
const UNDERSCORE_ASCII = 57498
const UNDERSCORE_BIG5 = 57499
const UNDERSCORE_BINARY = 57500
const UNDERSCORE_CP1250 = 57501
const UNDERSCORE_CP1251 = 57502
const UNDERSCORE_CP1256 = 57503
const UNDERSCORE_CP1257 = 57504
const UNDERSCORE_CP850 = 57505
const UNDERSCORE_CP852 = 57506
const UNDERSCORE_CP866 = 57507
const UNDERSCORE_CP932 = 57508
const UNDERSCORE_DEC8 = 57509
const UNDERSCORE_EUCJPMS = 57510
const UNDERSCORE_EUCKR = 57511
const UNDERSCORE_GB18030 = 57512
const UNDERSCORE_GB2312 = 57513
const UNDERSCORE_GBK = 57514
const UNDERSCORE_GEOSTD8 = 57515
const UNDERSCORE_GREEK = 57516
const UNDERSCORE_HEBREW = 57517
const UNDERSCORE_HP8 = 57518
const UNDERSCORE_KEYBCS2 = 57519
const UNDERSCORE_KOI8R = 57520
const UNDERSCORE_KOI8U = 57521
const UNDERSCORE_LATIN1 = 57522
const UNDERSCORE_LATIN2 = 57523
const UNDERSCORE_LATIN5 = 57524
const UNDERSCORE_LATIN7 = 57525
const UNDERSCORE_MACCE = 57526
const UNDERSCORE_MACROMAN = 57527
const UNDERSCORE_SJIS = 57528
const UNDERSCORE_SWE7 = 57529
const UNDERSCORE_TIS620 = 57530
const UNDERSCORE_UCS2 = 57531
const UNDERSCORE_UJIS = 57532
const UNDERSCORE_UTF16 = 57533
const UNDERSCORE_UTF16LE = 57534
const UNDERSCORE_UTF32 = 57535
const UNDERSCORE_UTF8 = 57536
const UNDERSCORE_UTF8MB4 = 57537
const UNDERSCORE_UTF8MB3 = 57538
const INTERVAL = 57539
const JSON_EXTRACT_OP = 57540
const JSON_UNQUOTE_EXTRACT_OP = 57541
const CREATE = 57542
const ALTER = 57543
const DROP = 57544
const RENAME = 57545
const ANALYZE = 57546
const ADD = 57547
const FLUSH = 57548
const CHANGE = 57549
const MODIFY = 57550
const DEALLOCATE = 57551
const REVERT = 57552
const SCHEMA = 57553
const TABLE = 57554
const INDEX = 57555
const VIEW = 57556
const TO = 57557
const IGNORE = 57558
const IF = 57559
const PRIMARY = 57560
const COLUMN = 57561
const SPATIAL = 57562
const FULLTEXT = 57563
const KEY_BLOCK_SIZE = 57564
const CHECK = 57565
const INDEXES = 57566
const ACTION = 57567
const CASCADE = 57568
const CONSTRAINT = 57569
const FOREIGN = 57570
const NO = 57571
const REFERENCES = 57572
const RESTRICT = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const COALESCE = 57582
const EXCHANGE = 57583
const REBUILD = 57584
const PARTITIONING = 57585
const REMOVE = 57586
const PREPARE = 57587
const EXECUTE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const VINDEX = 57596
const VINDEXES = 57597
const DIRECTORY = 57598
const NAME = 57599
const UPGRADE = 57600
const STATUS = 57601
const VARIABLES = 57602
const WARNINGS = 57603
const CASCADED = 57604
const DEFINER = 57605
const OPTION = 57606
const SQL = 57607
const UNDEFINED = 57608
const SEQUENCE = 57609
const MERGE = 57610
const TEMPORARY = 57611
const TEMPTABLE = 57612
const INVOKER = 57613
const SECURITY = 57614
const FIRST = 57615
const AFTER = 57616
const LAST = 57617
const VITESS_MIGRATION = 57618
const CANCEL = 57619
const RETRY = 57620
const COMPLETE = 57621
const CLEANUP = 57622
const THROTTLE = 57623
const UNTHROTTLE = 57624
const EXPIRE = 57625
const RATIO = 57626
const BEGIN = 57627
const START = 57628
const TRANSACTION = 57629
const COMMIT = 57630
const ROLLBACK = 57631
const SAVEPOINT = 57632
const RELEASE = 57633
const WORK = 57634
const BIT = 57635
const TINYINT = 57636
const SMALLINT = 57637
const MEDIUMINT = 57638
const INT = 57639
const INTEGER = 57640
const BIGINT = 57641
const INTNUM = 57642
const REAL = 57643
const DOUBLE = 57644
const FLOAT_TYPE = 57645
const DECIMAL_TYPE = 57646
const NUMERIC = 57647
const TIME = 57648
const TIMESTAMP = 57649
const DATETIME = 57650
const YEAR = 57651
const CHAR = 57652
const VARCHAR = 57653
const BOOL = 57654
const CHARACTER = 57655
const VARBINARY = 57656
const NCHAR = 57657
const TEXT = 57658
const TINYTEXT = 57659
const MEDIUMTEXT = 57660
const LONGTEXT = 57661
const BLOB = 57662
const TINYBLOB = 57663
const MEDIUMBLOB = 57664
const LONGBLOB = 57665
const JSON = 57666
const JSON_SCHEMA_VALID = 57667
const JSON_SCHEMA_VALIDATION_REPORT = 57668
const ENUM = 57669
const GEOMETRY = 57670
const POINT = 57671
const LINESTRING = 57672
const POLYGON = 57673
const GEOMETRYCOLLECTION = 57674
const MULTIPOINT = 57675
const MULTILINESTRING = 57676
const MULTIPOLYGON = 57677
const ASCII = 57678
const UNICODE = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const CODE = 57686
const COLLATION = 57687
const COLUMNS = 57688
const DATABASES = 57689
const ENGINES = 57690
const EVENT = 57691
const EXTENDED = 57692
const FIELDS = 57693
const FULL = 57694
const FUNCTION = 57695
const GTID_EXECUTED = 57696
const KEYSPACES = 57697
const OPEN = 57698
const PLUGINS = 57699
const PRIVILEGES = 57700
const PROCESSLIST = 57701
const SCHEMAS = 57702
const TABLES = 57703
const TRIGGERS = 57704
const USER = 57705
const VGTID_EXECUTED = 57706
const VITESS_KEYSPACES = 57707
const VITESS_METADATA = 57708
const VITESS_MIGRATIONS = 57709
const VITESS_REPLICATION_STATUS = 57710
const VITESS_SHARDS = 57711
const VITESS_TABLETS = 57712
const VSCHEMA = 57713
const VITESS_THROTTLED_APPS = 57714
const NAMES = 57715
const GLOBAL = 57716
const SESSION = 57717
const ISOLATION = 57718
const LEVEL = 57719
const READ = 57720
const WRITE = 57721
const ONLY = 57722
const REPEATABLE = 57723
const COMMITTED = 57724
const UNCOMMITTED = 57725
const SERIALIZABLE = 57726
const CURRENT_TIMESTAMP = 57727
const DATABASE = 57728
const CURRENT_DATE = 57729
const NOW = 57730
const CURRENT_TIME = 57731
const LOCALTIME = 57732
const LOCALTIMESTAMP = 57733
const CURRENT_USER = 57734
const UTC_DATE = 57735
const UTC_TIME = 57736
const UTC_TIMESTAMP = 57737
const DAY = 57738
const DAY_HOUR = 57739
const DAY_MICROSECOND = 57740
const DAY_MINUTE = 57741
const DAY_SECOND = 57742
const HOUR = 57743
const HOUR_MICROSECOND = 57744
const HOUR_MINUTE = 57745
const HOUR_SECOND = 57746
const MICROSECOND = 57747
const MINUTE = 57748
const MINUTE_MICROSECOND = 57749
const MINUTE_SECOND = 57750
const MONTH = 57751
const QUARTER = 57752
const SECOND = 57753
const SECOND_MICROSECOND = 57754
const YEAR_MONTH = 57755
const WEEK = 57756
const REPLACE = 57757
const CONVERT = 57758
const CAST = 57759
const SUBSTR = 57760
const SUBSTRING = 57761
const GROUP_CONCAT = 57762
const SEPARATOR = 57763
const TIMESTAMPADD = 57764
const TIMESTAMPDIFF = 57765
const WEIGHT_STRING = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const BYTE = 57795
const CUME_DIST = 57796
const DESCRIPTION = 57797
const DENSE_RANK = 57798
const EMPTY = 57799
const EXCEPT = 57800
const FIRST_VALUE = 57801
const GROUPING = 57802
const GROUPS = 57803
const JSON_TABLE = 57804
const LAG = 57805
const LAST_VALUE = 57806
const LATERAL = 57807
const LEAD = 57808
const NTH_VALUE = 57809
const NTILE = 57810
const OF = 57811
const OVER = 57812
const PERCENT_RANK = 57813
const RANK = 57814
const RECURSIVE = 57815
const ROW_NUMBER = 57816
const SYSTEM = 57817
const WINDOW = 57818
const ACTIVE = 57819
const ADMIN = 57820
const AUTOEXTEND_SIZE = 57821
const BUCKETS = 57822
const CLONE = 57823
const COLUMN_FORMAT = 57824
const COMPONENT = 57825
const DEFINITION = 57826
const ENFORCED = 57827
const ENGINE_ATTRIBUTE = 57828
const EXCLUDE = 57829
const FOLLOWING = 57830
const GEOMCOLLECTION = 57831
const GET_MASTER_PUBLIC_KEY = 57832
const HISTOGRAM = 57833
const HISTORY = 57834
const INACTIVE = 57835
const INVISIBLE = 57836
const LOCKED = 57837
const MASTER_COMPRESSION_ALGORITHMS = 57838
const MASTER_PUBLIC_KEY_PATH = 57839
const MASTER_TLS_CIPHERSUITES = 57840
const MASTER_ZSTD_COMPRESSION_LEVEL = 57841
const NESTED = 57842
const NETWORK_NAMESPACE = 57843
const NOWAIT = 57844
const NULLS = 57845
const OJ = 57846
const OLD = 57847
const OPTIONAL = 57848
const ORDINALITY = 57849
const ORGANIZATION = 57850
const OTHERS = 57851
const PARTIAL = 57852
const PATH = 57853
const PERSIST = 57854
const PERSIST_ONLY = 57855
const PRECEDING = 57856
const PRIVILEGE_CHECKS_USER = 57857
const PROCESS = 57858
const RANDOM = 57859
const REFERENCE = 57860
const REQUIRE_ROW_FORMAT = 57861
const RESOURCE = 57862
const RESPECT = 57863
const RESTART = 57864
const RETAIN = 57865
const REUSE = 57866
const ROLE = 57867
const SECONDARY = 57868
const SECONDARY_ENGINE = 57869
const SECONDARY_ENGINE_ATTRIBUTE = 57870
const SECONDARY_LOAD = 57871
const SECONDARY_UNLOAD = 57872
const SIMPLE = 57873
const SKIP = 57874
const SRID = 57875
const THREAD_PRIORITY = 57876
const TIES = 57877
const UNBOUNDED = 57878
const VCPU = 57879
const VISIBLE = 57880
const RETURNING = 57881
const FORMAT = 57882
const TREE = 57883
const VITESS = 57884
const TRADITIONAL = 57885
const LOCAL = 57886
const LOW_PRIORITY = 57887
const NO_WRITE_TO_BINLOG = 57888
const LOGS = 57889
const ERROR = 57890
const GENERAL = 57891
const HOSTS = 57892
const OPTIMIZER_COSTS = 57893
const USER_RESOURCES = 57894
const SLOW = 57895
const CHANNEL = 57896
const RELAY = 57897
const EXPORT = 57898
const AVG_ROW_LENGTH = 57899
const CONNECTION = 57900
const CHECKSUM = 57901
const DELAY_KEY_WRITE = 57902
const ENCRYPTION = 57903
const ENGINE = 57904
const INSERT_METHOD = 57905
const MAX_ROWS = 57906
const MIN_ROWS = 57907
const PACK_KEYS = 57908
const PASSWORD = 57909
const FIXED = 57910
const DYNAMIC = 57911
const COMPRESSED = 57912
const REDUNDANT = 57913
const COMPACT = 57914
const ROW_FORMAT = 57915
const STATS_AUTO_RECALC = 57916
const STATS_PERSISTENT = 57917
const STATS_SAMPLE_PAGES = 57918
const STORAGE = 57919
const MEMORY = 57920
const DISK = 57921
const PARTITIONS = 57922
const LINEAR = 57923
const RANGE = 57924
const LIST = 57925
const SUBPARTITION = 57926
const SUBPARTITIONS = 57927
const HASH = 57928

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	604, 145,
	-2, 153,
	-1, 48,
	129, 153,
	169, 153,
	330, 153,
	-2, 498,
	-1, 55,
	35, 739,
	230, 739,
	241, 739,
	276, 753,
	277, 753,
	-2, 741,
	-1, 60,
	232, 764,
	-2, 762,
	-1, 114,
	229, 1280,
	-2, 119,
	-1, 116,
	1, 146,
	604, 146,
	-2, 153,
	-1, 127,
	130, 384,
	235, 384,
	-2, 487,
	-1, 146,
	129, 153,
	169, 153,
	330, 153,
	-2, 507,
	-1, 688,
	214, 1301,
	-2, 1297,
	-1, 689,
	214, 1302,
	-2, 1298,
	-1, 764,
	59, 832,
	-2, 847,
	-1, 801,
	145, 1704,
	-2, 112,
	-1, 802,
	145, 1547,
	-2, 113,
	-1, 808,
	145, 1630,
	-2, 1274,
	-1, 953,
	145, 1475,
	-2, 1271,
	-1, 994,
	240, 41,
	245, 41,
	-2, 395,
	-1, 1078,
	1, 554,
	604, 554,
	-2, 153,
	-1, 1311,
	59, 833,
	-2, 852,
	-1, 1312,
	59, 834,
	-2, 853,
	-1, 1365,
	129, 153,
	169, 153,
	330, 153,
	-2, 434,
	-1, 1444,
	130, 384,
	235, 384,
	-2, 487,
	-1, 1453,
	240, 42,
	245, 42,
	-2, 396,
	-1, 1753,
	214, 1306,
	-2, 1300,
	-1, 1836,
	129, 153,
	169, 153,
	330, 153,
	-2, 435,
	-1, 1843,
	25, 174,
	-2, 176,
	-1, 2087,
	87, 39,
	-2, 888,
	-1, 2143,
	77, 94,
	87, 94,
	-2, 908,
	-1, 2211,
	579, 666,
	-2, 640,
	-1, 2348,
	49, 1242,
	-2, 1236,
	-1, 2567,
	87, 39,
	-2, 889,
	-1, 2605,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 881,
	-1, 2880,
	579, 666,
	-2, 654,
	-1, 2938,
	22, 1632,
	32, 1632,
	170, 1632,
	252, 1632,
	310, 1632,
	311, 1632,
	312, 1632,
	313, 1632,
	314, 1632,
	315, 1632,
	316, 1632,
	318, 1632,
	319, 1632,
	320, 1632,
	321, 1632,
	322, 1632,
	323, 1632,
	324, 1632,
	325, 1632,
	326, 1632,
	327, 1632,
	328, 1632,
	329, 1632,
	331, 1632,
	333, 1632,
	334, 1632,
	335, 1632,
	336, 1632,
	337, 1632,
	338, 1632,
	339, 1632,
	340, 1632,
	341, 1632,
	344, 1632,
	345, 1632,
	346, 1632,
	347, 1632,
	348, 1632,
	349, 1632,
	350, 1632,
	351, 1632,
	352, 1632,
	461, 1632,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 42471

var yyAct = [...]int{
	688, 2706, 2707, 2992, 2307, 3000, 2861, 2705, 2968, 697,
	2969, 1833, 2681, 1368, 1787, 2496, 2936, 2920, 2041, 2402,
	2409, 1767, 2459, 2464, 690, 2814, 2461, 2668, 1142, 2460,
	3, 2361, 757, 2458, 2463, 2462, 1769, 2364, 2720, 2837,
	1903, 96, 613, 2075, 2478, 681, 37, 2450, 1290, 682,
	2479, 186, 1326, 2417, 186, 609, 573, 186, 779, 2365,
	2362, 691, 589, 2115, 186, 2725, 2576, 2271, 2570, 2305,
	2306, 679, 186, 680, 635, 2481, 2596, 606, 1807, 2349,
	2359, 2138, 1791, 2562, 2102, 605, 1866, 186, 2176, 2501,
	2254, 607, 1422, 2208, 1891, 1090, 1871, 2177, 806, 2127,
	780, 36, 38, 1822, 2108, 956, 2178, 1934, 155, 589,
	1812, 1313, 589, 186, 589, 2077, 601, 1811, 759, 1747,
	1723, 1912, 2094, 761, 1660, 765, 1670, 1722, 1618, 141,
	1890, 2246, 1469, 1799, 1950, 2170, 1873, 803, 95, 989,
	2145, 984, 1357, 782, 1814, 1335, 1293, 618, 1569, 1637,
	91, 1161, 1682, 963, 1565, 992, 1458, 1451, 1888, 960,
	1549, 964, 990, 991, 995, 1862, 1792, 1002, 1354, 1356,
	1340, 771, 1140, 1135, 119, 159, 117, 118, 1719, 1574,
	1417, 766, 767, 1443, 124, 125, 793, 769, 98, 97,
	1760, 1074, 76, 596, 1232, 1228, 89, 2870, 2201, 2993,
	85, 1905, 1906, 1907, 1905, 2669, 2447, 2230, 2229, 1948,
	2199, 2661, 768, 77, 576, 2469, 1119, 8, 1534, 2262,
	2263, 7, 545, 120, 6, 2893, 2710, 90, 2466, 787,
	2894, 792, 126, 2624, 1162, 188, 189, 190, 1625, 1764,
	1765, 773, 1624, 1623, 2710, 1622, 1621, 1620, 2469, 1607,
	599, 957, 600, 2957, 982, 1031, 1162, 87, 1612, 597,
	2073, 2345, 2550, 1938, 2104, 2972, 758, 1750, 102, 3009,
	760, 2967, 2983, 2467, 2224, 807, 973, 800, 968, 1630,
	2810, 2809, 774, 1320, 1005, 2674, 1030, 981, 2675, 3008,
	1029, 980, 120, 979, 978, 2473, 1006, 2221, 781, 1936,
	182, 2930, 1992, 1032, 1035, 1036, 2467, 1937, 78, 104,
	105, 2709, 108, 2996, 78, 114, 2894, 80, 183, 2889,
	2981, 540, 1041, 2682, 121, 576, 1047, 2921, 2473, 2709,
	1931, 2929, 2118, 2888, 2270, 2941, 78, 164, 2534, 1432,
	1172, 753, 754, 755, 756, 972, 2074, 764, 974, 2398,
	2154, 2238, 78, 2153, 182, 2237, 2155, 2119, 1882, 1358,
	120, 1359, 1172, 1126, 1827, 1128, 1795, 1990, 2399, 2400,
	2946, 1828, 1829, 2261, 1989, 795, 796, 1138, 121, 2405,
	143, 1109, 751, 1876, 2944, 2738, 87, 750, 2862, 1110,
	2202, 164, 87, 2950, 2951, 161, 1103, 162, 2419, 2420,
	2166, 2470, 2297, 1125, 1127, 2945, 1766, 977, 1077, 1083,
	1084, 2111, 2112, 1097, 87, 577, 1097, 181, 1098, 1846,
	1845, 1098, 153, 2973, 2406, 576, 1114, 1115, 142, 1096,
	87, 1095, 2525, 2523, 2470, 2573, 587, 2498, 1611, 1168,
	576, 1086, 1160, 977, 2974, 969, 591, 585, 2502, 161,
	2408, 162, 971, 970, 1962, 1959, 1961, 1960, 1963, 1964,
	1073, 1168, 1524, 2247, 2403, 975, 1194, 130, 131, 152,
	151, 181, 2209, 1297, 1111, 1613, 1614, 1615, 2419, 2420,
	1048, 1104, 1913, 1137, 1956, 2404, 2233, 2819, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1203, 1202, 1204, 1205, 2491,
	1123, 975, 1951, 2418, 1124, 2995, 1525, 2492, 1526, 1968,
	576, 1969, 1132, 1970, 1129, 2421, 1026, 2410, 1555, 1550,
	1875, 1116, 2499, 165, 1112, 1113, 577, 1118, 1079, 2500,
	2249, 1117, 171, 1206, 2663, 2958, 2662, 1122, 1971, 1957,
	186, 2794, 186, 1054, 1053, 186, 1955, 1953, 985, 1793,
	1794, 1795, 986, 87, 1916, 977, 1072, 1808, 1436, 2298,
	2659, 1015, 986, 1130, 1013, 147, 128, 154, 135, 127,
	1024, 148, 149, 1023, 589, 589, 589, 165, 1022, 1021,
	1020, 1019, 976, 2418, 1018, 1017, 171, 136, 1954, 1012,
	1025, 1300, 589, 589, 961, 2421, 2421, 1206, 1990, 998,
	3010, 139, 137, 132, 133, 134, 138, 961, 2979, 1034,
	961, 959, 997, 129, 1107, 997, 1566, 2266, 976, 1033,
	1076, 1457, 140, 1004, 1154, 1889, 577, 794, 1167, 1164,
	1165, 1166, 1171, 1173, 1170, 2250, 1169, 2440, 3004, 37,
	1942, 577, 1093, 1163, 1099, 1100, 1101, 1102, 1562, 156,
	1167, 1164, 1165, 1166, 1171, 1173, 1170, 2232, 1169, 1148,
	1028, 1037, 1004, 983, 1935, 1163, 2168, 2203, 1139, 2869,
	2200, 2235, 2658, 1044, 1045, 1046, 1430, 1049, 1050, 1051,
	1052, 2004, 1429, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	2253, 1428, 1016, 156, 2407, 1014, 1209, 1210, 1211, 1212,
	1131, 577, 2219, 1563, 1426, 1075, 1217, 2574, 1220, 1556,
	2858, 2887, 1003, 1557, 1558, 544, 1456, 1007, 997, 539,
	976, 2875, 1009, 1933, 1793, 1794, 1010, 1008, 81, 1043,
	1283, 2078, 2080, 1991, 1879, 1288, 2245, 1144, 1145, 2244,
	2611, 186, 2471, 2472, 2256, 589, 589, 1011, 2592, 2255,
	2708, 1003, 2150, 86, 2114, 2475, 1207, 1208, 1213, 86,
	2065, 186, 1536, 1535, 1537, 1538, 1539, 2223, 2708, 2949,
	150, 1759, 1344, 1133, 1880, 2471, 2472, 2622, 2623, 157,
	589, 86, 1878, 1304, 186, 2820, 169, 1269, 2475, 589,
	1004, 1289, 759, 1306, 1303, 589, 77, 86, 1307, 1106,
	144, 1157, 1094, 145, 761, 1155, 1301, 1085, 1156, 1082,
	1108, 2222, 1088, 2948, 116, 2109, 1881, 803, 1554, 1834,
	1230, 1206, 1231, 1234, 1205, 2397, 1877, 776, 177, 1120,
	1575, 111, 1136, 157, 2883, 1004, 2290, 2411, 1027, 3002,
	169, 2415, 3003, 1092, 3001, 2654, 2256, 2586, 1952, 2414,
	1559, 2255, 1305, 1004, 1289, 1360, 95, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 1275, 1276,
	1277, 1278, 1279, 176, 178, 179, 180, 1683, 1158, 2018,
	1683, 1004, 177, 2416, 2192, 1294, 2734, 1178, 2412, 1003,
	2079, 1176, 1177, 2413, 1177, 997, 1000, 1001, 112, 961,
	2629, 2628, 2272, 994, 998, 1178, 98, 1920, 2027, 1466,
	1932, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 1465, 1642, 993, 1455, 1930, 176, 178, 179,
	180, 1928, 1925, 1291, 1003, 1015, 1042, 1643, 1644, 1641,
	758, 1013, 1632, 1634, 1635, 1925, 186, 1322, 1325, 1302,
	1418, 760, 1003, 2899, 1178, 807, 2975, 1007, 997, 1551,
	1427, 1552, 1009, 1633, 1553, 2612, 1010, 1008, 1178, 1929,
	1121, 1576, 1350, 1351, 1200, 1201, 1203, 1202, 1204, 1205,
	1003, 1091, 1927, 589, 2274, 1453, 997, 1000, 1001, 2977,
	961, 1800, 1801, 1462, 994, 998, 2900, 1464, 1345, 1078,
	1467, 1468, 589, 589, 2851, 589, 3006, 589, 589, 2802,
	589, 589, 589, 589, 589, 589, 1175, 1544, 1176, 1177,
	3011, 87, 1308, 1178, 1499, 1500, 2801, 589, 1996, 1997,
	1998, 186, 1505, 1355, 1175, 1640, 1176, 1177, 1463, 1198,
	1199, 1200, 1201, 1203, 1202, 1204, 1205, 2852, 186, 1320,
	2284, 2283, 2282, 2276, 2792, 2280, 1687, 2275, 2699, 2273,
	1688, 589, 2698, 186, 2278, 1498, 2636, 1542, 1501, 702,
	703, 704, 1531, 2277, 1564, 2635, 2688, 589, 2689, 186,
	2625, 1543, 2448, 1175, 1519, 1176, 1177, 2436, 1449, 1178,
	2279, 2281, 2292, 2174, 2173, 186, 1885, 1175, 1545, 1176,
	1177, 1529, 186, 1528, 1527, 3012, 2830, 1320, 1442, 1517,
	2007, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	589, 589, 589, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1180, 1541, 1502, 1511, 1508, 1471, 1530, 1472, 1507, 1474,
	1476, 1506, 798, 1480, 1482, 1484, 1486, 1488, 1460, 1425,
	1461, 186, 1175, 1478, 1176, 1177, 1194, 2976, 1459, 1459,
	2878, 1439, 1440, 1438, 2877, 1452, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1203, 1202, 1204, 1205, 1571, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1203, 1202, 1204, 1205, 1579,
	2855, 188, 189, 190, 1503, 2619, 1583, 589, 1585, 1586,
	1587, 1588, 1664, 1668, 2854, 1592, 2853, 1667, 1667, 2797,
	1673, 589, 2782, 188, 189, 190, 1178, 2157, 1175, 1606,
	1176, 1177, 1665, 1665, 2781, 2733, 589, 589, 2731, 1638,
	1567, 1329, 1431, 1196, 1197, 1198, 1199, 1200, 1201, 1203,
	1202, 1204, 1205, 980, 120, 979, 978, 689, 188, 189,
	190, 2695, 1901, 2633, 188, 189, 190, 1636, 1899, 1645,
	1684, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1646, 1581, 2618, 2503, 1178, 2439,
	2438, 1330, 1178, 1720, 2183, 2171, 186, 1285, 1751, 2009,
	1946, 589, 1602, 1603, 1604, 1945, 1605, 1790, 187, 2008,
	2531, 187, 1577, 1578, 187, 1178, 188, 189, 190, 590,
	1897, 187, 188, 189, 190, 186, 1582, 1772, 589, 187,
	1608, 1572, 1540, 1589, 1590, 1591, 1532, 1639, 186, 1522,
	1518, 1514, 589, 1513, 187, 1720, 1512, 186, 1331, 186,
	1134, 186, 186, 589, 2495, 1175, 589, 1176, 1177, 1147,
	2100, 2994, 1320, 1777, 2827, 1778, 590, 589, 1753, 590,
	187, 590, 2866, 1751, 1194, 92, 1320, 1190, 2826, 1191,
	1843, 803, 94, 94, 803, 2786, 93, 2963, 1320, 95,
	2785, 1755, 1756, 1192, 1193, 1189, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1203, 1202, 1204, 1205, 2680, 95, 2100,
	2927, 2100, 2907, 2100, 2903, 2895, 1320, 1175, 1752, 1176,
	1177, 1175, 589, 1176, 1177, 1783, 101, 101, 2210, 1892,
	1893, 1894, 1810, 2116, 1896, 1898, 1900, 100, 100, 99,
	99, 1320, 1320, 1753, 1175, 2188, 1176, 1177, 94, 589,
	2100, 2871, 2672, 2868, 1842, 589, 1462, 2546, 1320, 1462,
	1178, 1462, 1852, 1853, 1854, 1855, 1847, 1924, 1848, 1849,
	1850, 1851, 1838, 773, 1837, 1771, 2805, 1320, 2100, 2793,
	1820, 92, 1669, 2585, 1858, 1859, 1860, 1861, 2587, 1675,
	1676, 1174, 93, 1805, 2672, 1320, 1785, 2116, 1433, 1434,
	1435, 1914, 589, 1868, 589, 2124, 1841, 1320, 1320, 2360,
	589, 589, 1803, 2100, 2670, 1874, 1925, 1320, 2882, 807,
	2585, 1824, 807, 1825, 2590, 1320, 1178, 1174, 1320, 1840,
	1839, 2035, 1320, 2429, 2428, 2100, 1178, 100, 1754, 2425,
	2426, 1757, 1758, 2529, 1320, 2425, 2424, 1320, 186, 1712,
	2124, 1320, 2005, 1320, 1911, 186, 1884, 1990, 2231, 1421,
	2213, 2124, 186, 186, 1509, 1510, 186, 2546, 186, 2585,
	1515, 1516, 2206, 2207, 2392, 186, 2123, 1869, 1782, 1864,
	1865, 2427, 186, 1883, 1990, 1178, 1887, 2100, 2099, 1175,
	1895, 1176, 1177, 2146, 1178, 1421, 1420, 2333, 1178, 1366,
	1365, 1926, 1826, 1005, 2014, 1178, 2005, 1939, 1918, 2042,
	186, 589, 1869, 1919, 1921, 1006, 1922, 1917, 1923, 2050,
	1320, 2005, 1333, 2954, 1940, 1459, 2035, 2024, 1941, 2023,
	1925, 2124, 1908, 1798, 1943, 1944, 1704, 1693, 1694, 1695,
	1696, 1706, 1697, 1698, 1699, 1711, 1707, 1700, 1701, 1708,
	1709, 1710, 1702, 1703, 1705, 1175, 2147, 1176, 1177, 1925,
	1324, 1762, 1616, 1178, 1561, 1175, 2149, 1176, 1177, 1320,
	1194, 2096, 2265, 1981, 1982, 2146, 1949, 2013, 1984, 1178,
	2637, 1194, 2790, 2003, 1178, 1352, 94, 1985, 1332, 988,
	1178, 1638, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203,
	1202, 1204, 1205, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1203, 1202, 1204, 1205, 1175, 987, 1176, 1177, 1974, 2910,
	2000, 87, 2002, 1175, 2816, 1176, 1177, 1175, 1178, 1176,
	1177, 2638, 2639, 2640, 1175, 2001, 1176, 1177, 2147, 1327,
	1178, 2783, 2745, 2451, 2005, 1178, 763, 2655, 1990, 2653,
	2650, 2631, 1494, 1178, 2540, 2539, 1423, 1867, 2493, 1178,
	2453, 2989, 2606, 186, 2449, 2214, 2179, 2548, 1988, 1178,
	1863, 186, 2987, 2544, 1857, 1856, 589, 1547, 2084, 1454,
	1450, 1419, 589, 1667, 1178, 113, 2180, 1077, 2071, 1639,
	2088, 1999, 1175, 589, 1176, 1177, 1178, 187, 1665, 187,
	2497, 2970, 187, 1495, 1496, 1497, 2817, 2082, 1175, 1178,
	1176, 1177, 2175, 1175, 2180, 1176, 1177, 186, 2892, 1175,
	186, 1176, 1177, 2537, 87, 1882, 2597, 2598, 2536, 1775,
	2835, 590, 590, 590, 2017, 2156, 2059, 2600, 2120, 2445,
	2444, 2603, 2058, 2443, 2360, 2193, 1975, 1609, 2602, 590,
	590, 2382, 2057, 37, 1178, 2379, 2383, 1175, 1753, 1176,
	1177, 2378, 2140, 2380, 2960, 2928, 1178, 2056, 2381, 1175,
	1789, 1176, 1177, 2101, 1175, 1328, 1176, 1177, 2384, 2055,
	2133, 2134, 1175, 589, 1176, 1177, 1781, 2591, 1175, 186,
	1176, 1177, 2054, 2350, 2352, 2097, 186, 2338, 1175, 2110,
	1176, 1177, 2353, 2641, 1178, 2337, 2578, 1294, 1752, 2072,
	589, 1178, 1490, 1175, 2577, 1176, 1177, 589, 2139, 2850,
	2724, 1462, 1462, 2726, 2205, 1175, 589, 1176, 1177, 2581,
	2347, 2167, 2169, 2093, 2098, 1560, 749, 2053, 1175, 777,
	1176, 1177, 2423, 2228, 2113, 2160, 2015, 778, 2144, 2052,
	2642, 2643, 2644, 2227, 186, 186, 186, 186, 186, 1491,
	1492, 1493, 2148, 2164, 2715, 2184, 2714, 1874, 1679, 2151,
	1039, 1038, 2511, 92, 2179, 186, 186, 2158, 2161, 92,
	94, 1146, 1680, 1175, 93, 1176, 1177, 2051, 1178, 2259,
	93, 186, 2220, 2172, 2045, 1175, 121, 1176, 1177, 2129,
	2132, 2133, 2134, 2130, 1178, 2131, 2135, 2583, 187, 2181,
	589, 94, 590, 590, 2713, 2998, 2062, 2063, 1800, 1801,
	2189, 2441, 2190, 2194, 2195, 2196, 1967, 1978, 187, 2867,
	2812, 1178, 2422, 1175, 2226, 1176, 1177, 2137, 1442, 1786,
	1175, 1178, 1176, 1177, 785, 786, 2336, 590, 2289, 1966,
	1667, 187, 1667, 1965, 2335, 1667, 590, 759, 2563, 99,
	1667, 2225, 590, 1994, 1178, 1665, 589, 1665, 2842, 2841,
	1665, 2044, 2732, 101, 1178, 1665, 2285, 2730, 2215, 2216,
	2729, 2722, 589, 2308, 100, 2308, 99, 2043, 2308, 2267,
	2651, 101, 2582, 2308, 2327, 94, 2268, 186, 2248, 2580,
	2454, 589, 100, 2251, 99, 2320, 2321, 2322, 2323, 1909,
	1437, 784, 2310, 100, 2040, 589, 2313, 1175, 2721, 1176,
	1177, 2314, 589, 589, 2039, 186, 186, 186, 186, 186,
	101, 2571, 2269, 1175, 2286, 1176, 1177, 186, 2990, 2116,
	2096, 100, 186, 2327, 186, 2025, 186, 2038, 1773, 186,
	186, 186, 2991, 2990, 2991, 2372, 2301, 2036, 2340, 1346,
	1175, 2363, 1176, 1177, 1337, 2391, 2363, 765, 2856, 2366,
	1175, 2617, 1176, 1177, 2357, 1178, 106, 107, 2341, 2315,
	2316, 2317, 2318, 2319, 2326, 2437, 775, 1307, 103, 88,
	1, 2621, 2328, 1175, 186, 1176, 1177, 2257, 2943, 557,
	2258, 1763, 1292, 1175, 672, 1176, 1177, 589, 1178, 2342,
	2354, 2355, 572, 187, 2332, 589, 2339, 2971, 2939, 2940,
	186, 1533, 1523, 766, 767, 2683, 1721, 2393, 2813, 2477,
	2394, 2457, 1915, 186, 2649, 2385, 2374, 2375, 1872, 2377,
	996, 95, 2373, 2389, 146, 2376, 2329, 2330, 2331, 1571,
	590, 186, 2456, 2395, 186, 2371, 1835, 1836, 2032, 2923,
	110, 954, 109, 999, 2512, 1105, 588, 1910, 2401, 590,
	590, 2673, 590, 2165, 590, 590, 2433, 590, 590, 590,
	590, 590, 590, 2431, 2432, 1318, 1314, 1844, 1372, 1370,
	1371, 2031, 1369, 2485, 590, 2484, 1374, 1373, 187, 2026,
	1315, 2549, 1610, 586, 1175, 2136, 1176, 1177, 1874, 184,
	2476, 1361, 2455, 805, 1338, 187, 958, 1040, 965, 2488,
	547, 2430, 2543, 1947, 553, 1779, 1780, 1317, 590, 1316,
	187, 1218, 2334, 2152, 589, 186, 804, 1175, 2504, 1176,
	1177, 2507, 2506, 797, 590, 1774, 187, 2086, 2368, 2575,
	2346, 2514, 2348, 2509, 2510, 2103, 2351, 2344, 2515, 2849,
	2723, 2908, 187, 2521, 2162, 2518, 2519, 1334, 2520, 187,
	2016, 2522, 1225, 2524, 1681, 2526, 1815, 1631, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 590, 590, 590,
	1318, 1314, 2182, 186, 611, 610, 608, 2185, 2186, 2089,
	2117, 1181, 692, 2569, 2076, 1315, 2129, 2132, 2133, 2134,
	2130, 2620, 2131, 2135, 2564, 2565, 2597, 2598, 187, 1347,
	2128, 2126, 186, 2125, 1976, 1821, 2599, 2595, 2579, 2572,
	1311, 1312, 1317, 2935, 1316, 1817, 2594, 1813, 2095, 2604,
	619, 186, 2584, 612, 186, 186, 186, 604, 2614, 2483,
	2234, 2494, 2236, 2601, 589, 589, 2163, 2609, 2610, 2490,
	1159, 1310, 598, 967, 590, 1678, 2818, 2873, 2656, 2657,
	2607, 1993, 2533, 1309, 2608, 1691, 1692, 2485, 590, 2484,
	2615, 2616, 2880, 2465, 2667, 2446, 2211, 1902, 63, 41,
	593, 2956, 1150, 590, 590, 791, 32, 31, 589, 589,
	589, 589, 30, 29, 28, 23, 22, 2632, 21, 2634,
	20, 19, 25, 18, 17, 16, 2468, 2966, 2997, 115,
	50, 47, 45, 123, 122, 48, 44, 1080, 42, 27,
	26, 15, 14, 13, 12, 11, 10, 9, 5, 4,
	35, 34, 2679, 33, 1153, 24, 2, 2198, 2677, 2678,
	1904, 0, 0, 187, 1667, 0, 1667, 0, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 1665,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 590, 0, 2308, 2718, 2308,
	0, 589, 2694, 589, 2690, 187, 0, 0, 0, 590,
	0, 0, 2691, 0, 187, 0, 187, 0, 187, 187,
	590, 2747, 0, 590, 2701, 0, 1667, 2702, 2711, 0,
	2739, 0, 0, 0, 590, 0, 0, 2743, 2363, 2741,
	0, 1665, 0, 0, 0, 37, 759, 2366, 2719, 0,
	2727, 2366, 2728, 0, 0, 0, 2735, 2737, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 2791, 0,
	589, 2748, 2749, 2751, 0, 0, 0, 0, 0, 590,
	0, 0, 0, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 2789, 0, 0, 2788, 2434, 2435, 2787, 0,
	0, 0, 0, 2803, 0, 0, 590, 2832, 2833, 2795,
	0, 2815, 590, 589, 0, 2836, 0, 589, 589, 0,
	1667, 0, 0, 2808, 2807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2843, 2844, 2846, 590,
	2860, 590, 2845, 0, 0, 0, 0, 590, 590, 0,
	0, 2848, 0, 0, 0, 0, 2857, 0, 805, 805,
	805, 2863, 0, 0, 589, 0, 0, 0, 2366, 0,
	759, 0, 0, 0, 0, 0, 1149, 1151, 2865, 186,
	0, 0, 2859, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 589, 186, 187,
	187, 0, 0, 187, 0, 187, 0, 0, 0, 0,
	0, 2884, 187, 2879, 0, 2876, 0, 0, 0, 187,
	0, 0, 0, 2881, 2872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 37, 589,
	0, 0, 0, 0, 0, 0, 0, 187, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 589, 0, 0, 0, 2901, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 2909, 2363,
	0, 0, 1286, 2914, 2919, 186, 589, 2916, 2922, 2931,
	2915, 2815, 2924, 37, 2913, 2918, 2917, 0, 2911, 0,
	0, 0, 2906, 0, 0, 0, 2934, 2952, 2942, 2947,
	0, 0, 2626, 2627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2959, 0, 0, 0, 0, 0, 0,
	0, 2965, 0, 0, 0, 589, 0, 0, 0, 1298,
	1299, 0, 0, 0, 589, 0, 0, 0, 0, 2978,
	0, 2985, 2980, 0, 0, 0, 1667, 2984, 2988, 2986,
	2982, 0, 0, 0, 2660, 0, 0, 0, 2664, 2665,
	2666, 1665, 2999, 0, 1342, 0, 0, 3005, 3007, 0,
	0, 0, 0, 805, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 3013, 3015, 3016, 2833, 0, 1667,
	187, 3014, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 590, 1665, 0, 0, 0, 0, 590,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	590, 0, 0, 0, 0, 0, 0, 0, 2204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 143, 187, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	590, 0, 161, 0, 162, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	1445, 1446, 152, 151, 181, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 0, 2798, 2799,
	2800, 2159, 0, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 958, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 187, 187, 187, 187, 187, 1470, 1470, 181, 1470,
	0, 1470, 1470, 0, 1479, 1470, 1470, 1470, 1470, 1470,
	0, 0, 187, 187, 0, 0, 0, 1286, 0, 0,
	1286, 958, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 673, 147, 1447,
	154, 0, 1444, 0, 148, 149, 0, 590, 0, 0,
	165, 0, 0, 0, 0, 1546, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 1319,
	0, 543, 0, 0, 584, 0, 0, 0, 0, 0,
	0, 543, 0, 590, 165, 0, 0, 0, 0, 543,
	0, 0, 0, 171, 805, 805, 805, 0, 0, 590,
	0, 0, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 590, 0,
	790, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 590, 0, 0, 0, 0, 0, 0, 590,
	590, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 156, 0, 0, 187,
	0, 187, 0, 187, 0, 0, 187, 187, 187, 0,
	0, 1661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 0, 0, 0,
	0, 0, 590, 150, 805, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 1776, 145, 0, 187, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 1342, 0, 0, 805,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	157, 590, 187, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 965, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 958, 0, 0, 182, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 0, 1441, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 187,
	121, 0, 143, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 958, 0, 1661, 0,
	0, 590, 590, 0, 1661, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 590, 590, 590, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	1446, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 543,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 0,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 1447, 154,
	0, 1444, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 0, 0,
	590, 0, 0, 0, 590, 590, 0, 0, 0, 0,
	1788, 0, 0, 0, 562, 0, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 590, 0, 156, 0, 0, 543, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 590, 187, 1321, 1323, 0, 0,
	0, 752, 150, 556, 0, 0, 0, 2187, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	0, 0, 144, 0, 1788, 145, 590, 0, 0, 0,
	0, 2212, 962, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 2964, 0, 0, 0, 0, 0, 0,
	590, 590, 0, 1389, 577, 157, 0, 0, 0, 0,
	0, 0, 169, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 548, 563,
	0, 579, 0, 578, 552, 0, 550, 554, 564, 555,
	0, 549, 0, 560, 177, 0, 551, 565, 566, 569,
	583, 582, 570, 568, 0, 558, 580, 0, 0, 0,
	0, 0, 590, 543, 1661, 0, 0, 0, 0, 0,
	0, 590, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 0, 1286, 0, 1286, 0, 0,
	1286, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 1287, 0, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 0, 0, 0, 0, 1470, 0, 0, 0,
	1287, 0, 0, 1287, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 2343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 805,
	0, 0, 0, 1286, 0, 0, 2370, 1470, 1286, 0,
	543, 0, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 1390, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 581, 0, 0, 1593, 1594,
	543, 543, 543, 543, 543, 543, 543, 0, 0, 0,
	0, 0, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 958, 0, 0, 1286, 0, 0, 0, 543, 1788,
	0, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 0, 1412,
	1413, 1414, 1415, 1416, 1391, 1392, 1393, 1394, 1375, 1376,
	1404, 0, 1378, 0, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 0, 0, 1388, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 0, 0, 0, 0, 0, 0,
	1377, 0, 790, 0, 0, 0, 0, 0, 0, 790,
	790, 0, 0, 0, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 1570, 790, 790,
	790, 790, 790, 0, 0, 0, 0, 0, 2343, 1685,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 1081,
	0, 1087, 1390, 1520, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 1321,
	1761, 0, 1570, 0, 543, 0, 543, 0, 543, 1823,
	1403, 1406, 1407, 1408, 1409, 1410, 1411, 0, 1412, 1413,
	1414, 1415, 1416, 1391, 1392, 1393, 1394, 1375, 1376, 1404,
	0, 1378, 1784, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 0, 0, 1388, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 0, 0, 0, 0, 0, 1788, 1788,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 43, 69, 70, 0, 67, 71,
	0, 789, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 2684, 2685, 2686, 2687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 1286, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 783, 0, 0, 0, 2740, 0, 2742, 0, 0,
	0, 0, 0, 1349, 0, 543, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 543,
	543, 0, 0, 543, 0, 1979, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 46,
	49, 52, 51, 54, 2806, 66, 0, 0, 75, 72,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 2839, 0, 0,
	0, 2839, 2839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 2753, 2755, 2754,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 641, 0, 0,
	1788, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 2010, 0, 2011, 2012, 0, 1788, 0,
	0, 0, 0, 0, 2020, 0, 0, 2021, 2022, 0,
	0, 0, 0, 0, 0, 0, 790, 790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 0, 0,
	543, 1788, 0, 0, 2028, 2029, 2030, 0, 1520, 2033,
	0, 2034, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 2046, 2047, 2048, 2049, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 2060, 2061, 0, 0,
	0, 1286, 0, 2902, 2066, 2067, 2068, 2069, 2070, 0,
	1784, 0, 0, 0, 543, 0, 0, 543, 0, 0,
	0, 2083, 1548, 0, 81, 0, 0, 805, 805, 699,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2937, 0, 0, 0, 1580, 86, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 2197, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 0, 762, 2937, 79,
	1619, 0, 0, 0, 2756, 2757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 0, 0,
	0, 543, 543, 543, 543, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 543, 683, 0, 636, 687, 638, 684,
	685, 0, 634, 637, 686, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 2752, 2758, 2759, 2760, 2768, 2770, 661,
	2769, 2771, 2772, 2773, 2776, 2777, 2778, 2779, 2774, 2775,
	2780, 0, 0, 0, 0, 1179, 0, 0, 1287, 0,
	1287, 0, 0, 1287, 0, 0, 0, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 2309, 0, 0, 543, 0, 1806, 0, 1809, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2324, 2325, 0, 0, 1287, 0, 0, 0,
	0, 1287, 543, 543, 543, 543, 543, 0, 0, 0,
	0, 602, 0, 0, 2386, 0, 0, 0, 0, 543,
	0, 1520, 0, 543, 0, 0, 543, 2396, 1570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 2369, 0, 693, 700, 701, 702, 703, 704, 694,
	696, 0, 0, 0, 695, 0, 0, 0, 2387, 2388,
	0, 543, 0, 0, 0, 0, 0, 698, 705, 706,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2486, 2487, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 543, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 1972, 1973, 0, 2513, 1977, 0, 0, 0, 0,
	0, 2517, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 1983, 543, 0, 0, 2527, 2528, 2530, 2532, 0,
	0, 0, 0, 0, 0, 2538, 0, 0, 0, 2541,
	2542, 0, 0, 0, 0, 2545, 0, 0, 0, 1986,
	0, 2547, 0, 0, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 0, 0, 2561, 0, 0, 0,
	0, 0, 2566, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 1424, 0,
	0, 0, 0, 1141, 1141, 1141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2588, 2589, 543,
	0, 2593, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 2605,
	0, 543, 543, 543, 0, 0, 0, 0, 0, 0,
	762, 1214, 1215, 1216, 0, 1219, 0, 1221, 1222, 1223,
	1224, 0, 1227, 1229, 1229, 0, 1229, 1233, 1233, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 0, 1270, 1271, 1272, 1273, 1274, 0,
	0, 0, 0, 1233, 1233, 1233, 1233, 1233, 0, 0,
	0, 0, 0, 0, 1573, 0, 0, 0, 2671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 0, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 2143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1287, 0, 0, 0, 0, 762, 0,
	0, 0, 762, 2700, 0, 0, 0, 0, 762, 2704,
	0, 0, 0, 0, 0, 0, 1626, 1627, 1628, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2191, 0,
	0, 0, 0, 0, 0, 0, 0, 1671, 1672, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	1713, 1714, 1715, 1716, 1717, 1718, 602, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	0, 0, 0, 2239, 2240, 2241, 2242, 2243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2804, 0, 0,
	0, 0, 0, 0, 1619, 2252, 2811, 0, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2260, 0, 2821, 2822, 2823, 0, 2824, 2825, 0, 0,
	0, 2828, 0, 2829, 0, 2831, 2834, 0, 0, 0,
	0, 0, 2838, 0, 1796, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1520, 0, 0, 0,
	2864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2891, 0, 0, 0, 0, 2896, 0, 0,
	0, 0, 0, 2897, 2898, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 2904, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 693, 700, 701, 702, 703,
	704, 694, 696, 0, 0, 0, 695, 0, 0, 0,
	0, 0, 0, 2442, 0, 0, 0, 0, 0, 698,
	705, 706, 0, 0, 0, 0, 0, 0, 0, 1141,
	1141, 1141, 2955, 0, 0, 0, 0, 0, 0, 2480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2961, 2489, 0, 0, 2962, 0, 0, 0, 0,
	0, 0, 2486, 2487, 0, 0, 0, 0, 0, 0,
	2505, 0, 0, 2508, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 2085, 0, 0, 700,
	701, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 0,
	0, 2630, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2645, 0, 0, 2646, 2647, 2648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 701, 0,
	0, 0, 0, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 683, 0, 0, 687, 0,
	684, 685, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 966, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2287, 2288, 0, 0, 0,
	2291, 0, 0, 0, 0, 2293, 2294, 2295, 0, 0,
	1995, 0, 0, 2299, 2300, 0, 0, 1724, 2302, 0,
	2303, 2304, 0, 0, 0, 2311, 2312, 0, 0, 0,
	0, 0, 0, 1724, 1724, 1724, 1724, 1724, 602, 602,
	602, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2885, 0, 0,
	0, 0, 0, 0, 2390, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2452, 0, 0, 2121, 2122, 0,
	0, 0, 0, 0, 0, 0, 2141, 0, 2142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2367,
	0, 79, 0, 0, 1816, 1816, 1816, 1816, 1816, 0,
	0, 2692, 0, 2693, 0, 0, 0, 0, 2696, 2697,
	0, 2141, 0, 0, 0, 1816, 0, 0, 1816, 0,
	2703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2744,
	0, 0, 2746, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 0, 0, 0, 2750, 0, 0, 0, 0,
	0, 2482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2847, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 0, 0, 2613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2712, 0, 2716, 2717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2367, 0, 79,
	0, 2367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 936,
	922, 462, 79, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 2905, 446, 364, 0, 0, 79, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 2925, 0, 2926, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 215, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 1143, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 215, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 2397, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 1143, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 215, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 2356, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 1143, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 215, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 1804, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 1143, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 215, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 1143, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 215, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 1143, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 953, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 821, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 808, 802, 801, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 953, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 1353, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 821, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 808, 802, 801, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 936,
	922, 462, 0, 869, 939, 838, 857, 949, 860, 863,
	904, 817, 882, 379, 854, 810, 842, 813, 849, 814,
	840, 871, 251, 837, 924, 886, 938, 335, 248, 819,
	843, 393, 859, 197, 906, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 945,
	339, 892, 0, 446, 364, 0, 0, 0, 873, 928,
	880, 918, 868, 905, 827, 891, 940, 855, 901, 941,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 851, 898, 935,
	852, 900, 246, 294, 253, 245, 466, 946, 927, 0,
	0, 953, 937, 875, 0, 903, 0, 952, 812, 894,
	0, 815, 818, 948, 931, 846, 256, 0, 0, 0,
	0, 0, 0, 0, 872, 881, 915, 866, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 890, 0, 0,
	0, 823, 816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 826,
	0, 845, 916, 0, 809, 277, 820, 365, 238, 0,
	920, 930, 867, 501, 934, 865, 864, 910, 824, 926,
	858, 334, 822, 303, 192, 211, 0, 856, 375, 418,
	424, 925, 841, 850, 236, 848, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 889, 908, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 799, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 821, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 836, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 921,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 808, 802, 801, 304, 341, 913, 951, 388,
	423, 226, 486, 445, 831, 835, 829, 895, 830, 884,
	885, 832, 942, 943, 944, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 917, 825, 0, 833, 834, 0,
	923, 932, 933, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 888, 191, 207, 337, 947, 411, 269, 516, 495,
	491, 811, 209, 828, 243, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 950, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 887, 893, 348, 262, 282, 293,
	902, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	883, 911, 344, 463, 464, 289, 361, 0, 0, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 1748, 0, 620, 0,
	0, 0, 251, 625, 0, 0, 0, 335, 248, 0,
	1749, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 632,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	0, 188, 189, 190, 693, 700, 701, 702, 703, 704,
	694, 696, 0, 0, 224, 695, 231, 643, 645, 644,
	651, 652, 653, 654, 655, 656, 657, 641, 698, 705,
	706, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 603,
	617, 0, 631, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 615, 788, 0, 0, 0, 677, 0, 616,
	0, 0, 624, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	676, 0, 0, 501, 0, 0, 674, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 646, 647, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 683, 675, 636, 687, 638, 684,
	685, 633, 634, 637, 686, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 678, 623, 622, 0, 629, 630,
	0, 639, 640, 642, 648, 649, 650, 658, 660, 661,
	659, 662, 663, 664, 667, 668, 669, 670, 665, 666,
	671, 621, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 620, 0, 0, 0, 251, 625, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 632, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 627, 628, 0, 0, 0,
	0, 0, 0, 1830, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 87, 0, 0, 188, 189, 190, 693,
	700, 701, 702, 703, 704, 694, 696, 0, 0, 224,
	695, 231, 643, 645, 644, 651, 652, 653, 654, 655,
	656, 657, 641, 698, 705, 706, 1831, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 603, 617, 0, 631, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 615, 0, 0,
	0, 0, 677, 0, 616, 0, 0, 624, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 676, 0, 0, 501, 0,
	0, 674, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 646,
	647, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 683,
	675, 636, 687, 638, 684, 685, 633, 634, 637, 686,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 678,
	623, 622, 0, 629, 630, 0, 639, 640, 642, 648,
	649, 650, 658, 660, 661, 659, 662, 663, 664, 667,
	668, 669, 670, 665, 666, 671, 621, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 0, 344, 463, 464,
	289, 361, 0, 0, 0, 78, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 620, 0, 0, 0, 251, 625, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 632, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 87, 0, 0, 188, 189, 190, 693,
	700, 701, 702, 703, 704, 694, 696, 0, 0, 224,
	695, 231, 643, 645, 644, 651, 652, 653, 654, 655,
	656, 657, 641, 698, 705, 706, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 603, 617, 0, 631, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 615, 0, 0,
	0, 0, 677, 0, 616, 0, 0, 624, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 676, 0, 0, 501, 0,
	0, 674, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 646,
	647, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 683,
	675, 636, 687, 638, 684, 685, 633, 634, 637, 686,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 678,
	623, 622, 0, 629, 630, 0, 639, 640, 642, 648,
	649, 650, 658, 660, 661, 659, 662, 663, 664, 667,
	668, 669, 670, 665, 666, 671, 621, 191, 207, 337,
	86, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 620, 0,
	0, 0, 251, 625, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 632,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	0, 188, 189, 190, 693, 700, 701, 702, 703, 704,
	694, 696, 0, 0, 224, 695, 231, 643, 645, 644,
	651, 652, 653, 654, 655, 656, 657, 641, 698, 705,
	706, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 603,
	617, 0, 631, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 615, 0, 0, 0, 0, 677, 0, 616,
	0, 0, 624, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	676, 0, 0, 501, 0, 0, 674, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 2912, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 646, 647, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 683, 675, 636, 687, 638, 684,
	685, 633, 634, 637, 686, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 678, 623, 622, 0, 629, 630,
	0, 639, 640, 642, 648, 649, 650, 658, 660, 661,
	659, 662, 663, 664, 667, 668, 669, 670, 665, 666,
	671, 621, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 620, 0, 0, 0, 251, 625, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 632, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 87, 0, 1320, 188, 189, 190, 693,
	700, 701, 702, 703, 704, 694, 696, 0, 0, 224,
	695, 231, 643, 645, 644, 651, 652, 653, 654, 655,
	656, 657, 641, 698, 705, 706, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 603, 617, 0, 631, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 615, 0, 0,
	0, 0, 677, 0, 616, 0, 0, 624, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 676, 0, 0, 501, 0,
	0, 674, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 646,
	647, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 683,
	675, 636, 687, 638, 684, 685, 633, 634, 637, 686,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 678,
	623, 622, 0, 629, 630, 0, 639, 640, 642, 648,
	649, 650, 658, 660, 661, 659, 662, 663, 664, 667,
	668, 669, 670, 665, 666, 671, 621, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 620, 0,
	0, 0, 251, 625, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 632,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	0, 188, 189, 190, 693, 700, 701, 702, 703, 704,
	694, 696, 0, 0, 224, 695, 231, 643, 645, 644,
	651, 652, 653, 654, 655, 656, 657, 641, 698, 705,
	706, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 603,
	617, 0, 631, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 615, 788, 0, 0, 0, 677, 0, 616,
	0, 0, 624, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	676, 0, 0, 501, 0, 0, 674, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 646, 647, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 683, 675, 636, 687, 638, 684,
	685, 633, 634, 637, 686, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 678, 623, 622, 0, 629, 630,
	0, 639, 640, 642, 648, 649, 650, 658, 660, 661,
	659, 662, 663, 664, 667, 668, 669, 670, 665, 666,
	671, 621, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 620, 0, 0, 0, 251, 625, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 632, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 87, 0, 0, 188, 189, 190, 693,
	700, 701, 702, 703, 704, 694, 696, 0, 0, 224,
	695, 231, 643, 645, 644, 651, 652, 653, 654, 655,
	656, 657, 641, 698, 705, 706, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 603, 617, 0, 631, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 615, 0, 0,
	0, 0, 677, 0, 616, 0, 0, 624, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 676, 0, 0, 501, 0,
	0, 674, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 646,
	647, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 683,
	675, 636, 687, 638, 684, 685, 633, 634, 637, 686,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 678,
	623, 622, 0, 629, 630, 0, 639, 640, 642, 648,
	649, 650, 658, 660, 661, 659, 662, 663, 664, 667,
	668, 669, 670, 665, 666, 671, 621, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 620, 0,
	0, 0, 251, 625, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 632,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	0, 188, 189, 190, 693, 700, 701, 702, 703, 704,
	694, 696, 0, 0, 224, 695, 231, 643, 645, 644,
	651, 652, 653, 654, 655, 656, 657, 641, 698, 705,
	706, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	617, 0, 631, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 615, 0, 0, 0, 0, 677, 0, 616,
	0, 0, 624, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	676, 0, 0, 501, 0, 0, 674, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 646, 647, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 683, 675, 636, 687, 638, 684,
	685, 633, 634, 637, 686, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 678, 623, 622, 0, 629, 630,
	0, 639, 640, 642, 648, 649, 650, 658, 660, 661,
	659, 662, 663, 664, 667, 668, 669, 670, 665, 666,
	671, 621, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	700, 701, 0, 0, 0, 0, 1666, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 1004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 1003, 501, 0, 0, 0, 0, 0, 1000,
	1001, 334, 961, 303, 192, 211, 994, 998, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 1339, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 1341, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	1175, 0, 1176, 1177, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 1282, 1285, 0, 0, 0, 0,
	1281, 1284, 0, 0, 224, 1280, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 0, 344, 463, 464, 289, 361, 0, 0, 0,
	78, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 86, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 0, 344, 463, 464, 289, 361, 0, 0, 0,
	78, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 87, 0,
	1320, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 86, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 1770, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 1768, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 961, 303, 192, 211, 959, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 1770, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	1320, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 2840, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2091, 0, 0,
	0, 2092, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 1364, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	1363, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 2933, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 2840, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	1617, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 1489, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1487, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 1485, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1483, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 1481, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1477, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 1475, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1473, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 1448, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 1348, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 1152, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 594,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 541, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 2938,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 361, 344, 463, 464,
	289, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 393, 0, 197, 0, 436, 235, 345, 342, 469,
	263, 254, 250, 234, 290, 351, 391, 456, 385, 0,
	339, 0, 0, 446, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 376, 447, 267, 0, 0, 0,
	0, 188, 2567, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 466, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 484, 219,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 340,
	471, 409, 482, 502, 503, 244, 369, 492, 460, 498,
	515, 212, 241, 383, 453, 487, 443, 362, 467, 468,
	302, 442, 275, 195, 338, 508, 210, 430, 228, 217,
	473, 490, 270, 413, 202, 455, 480, 225, 434, 0,
	0, 517, 204, 478, 452, 358, 299, 300, 203, 0,
	414, 249, 273, 239, 378, 475, 476, 237, 518, 214,
	497, 206, 0, 496, 371, 470, 479, 359, 350, 205,
	477, 357, 349, 305, 324, 325, 261, 284, 407, 343,
	408, 285, 367, 366, 368, 198, 488, 0, 199, 0,
	448, 489, 519, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 382, 406, 404, 410, 0,
	465, 483, 493, 500, 506, 507, 509, 510, 511, 512,
	514, 513, 370, 287, 444, 304, 341, 0, 0, 388,
	423, 226, 486, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 0, 191, 207, 337, 0, 411, 269, 516, 495,
	491, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 485, 499, 504, 431, 279,
	481, 505, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 494, 451, 213, 419, 271, 201, 232, 216, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 230,
	416, 227, 435, 457, 458, 459, 461, 360, 247, 396,
	0, 361, 344, 463, 464, 289, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 393, 0, 197, 0,
	436, 235, 345, 342, 469, 263, 254, 250, 234, 290,
	351, 391, 456, 385, 0, 339, 0, 0, 446, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 376,
	447, 267, 0, 0, 0, 0, 188, 2087, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 466, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 484, 219, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 340, 471, 409, 482, 502, 503,
	244, 369, 492, 460, 498, 515, 212, 241, 383, 453,
	487, 443, 362, 467, 468, 302, 442, 275, 195, 338,
	508, 210, 430, 228, 217, 473, 490, 270, 413, 202,
	455, 480, 225, 434, 0, 0, 517, 204, 478, 452,
	358, 299, 300, 203, 0, 414, 249, 273, 239, 378,
	475, 476, 237, 518, 214, 497, 206, 0, 496, 371,
	470, 479, 359, 350, 205, 477, 357, 349, 305, 324,
	325, 261, 284, 407, 343, 408, 285, 367, 366, 368,
	198, 488, 0, 199, 0, 448, 489, 519, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	382, 406, 404, 410, 0, 465, 483, 493, 500, 506,
	507, 509, 510, 511, 512, 514, 513, 370, 287, 444,
	304, 341, 0, 0, 388, 423, 226, 486, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 0, 191, 207, 337,
	0, 411, 269, 516, 495, 491, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	485, 499, 504, 431, 279, 481, 505, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 494, 451, 213, 419,
	271, 201, 232, 216, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 230, 416, 227, 435, 457, 458,
	459, 461, 360, 247, 396, 0, 0, 344, 463, 464,
	289,
}

var yyPact = [...]int{
	4652, -1000, -408, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1951, 2066, -1000, -1000,
	-1000, -1000, 2164, -1000, 755, 1699, -1000, 1965, 347, -1000,
	40677, 500, -1000, 39487, 496, 3814, 40677, -1000, 143, -1000,
	127, 40677, 139, 38892, -1000, -1000, -311, 16867, 1892, 9,
	4, 40677, -1000, -1000, -1000, -1000, 2123, 1738, -1000, 344,
	-1000, -1000, -1000, -1000, -1000, -1000, 38297, -1000, -1000, -1000,
	1982, 1957, 2174, 682, 1897, -1000, 2039, 1738, -1000, 16867,
	2092, 2021, 16272, -1000, 16272, 394, -1000, -1000, 12692, -1000,
	-1000, 22232, 40677, 28777, 215, -1000, 1965, -1000, -1000, -1000,
	85, -1000, 287, 1628, -1000, 1602, -1000, 669, 492, 324,
	440, 437, 320, 319, 316, 315, 314, 313, 308, 305,
	330, -1000, 703, 703, -177, -181, 293, 379, 376, 376,
	429, 1936, 1935, -1000, 714, -1000, 703, 703, 703, 311,
	703, 703, 703, 703, 271, 270, 703, 703, 703, 703,
	703, 703, 703, 703, 703, 703, 703, 703, 703, 703,
	703, 703, 703, 327, 1965, 253, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40677,
	179, 40677, -1000, 608, 40677, 838, 838, 53, 838, 838,
	838, 838, 120, 579, 3, -1000, 113, 248, 150, 251,
	825, 134, 146, -1000, -1000, 235, 825, 1257, -1000, 689,
	105, -1000, 838, 10292, 10292, 10292, -1000, 1949, -1000, -1000,
	-1000, -1000, -1000, -1000, 1269, -1000, 427, -1000, -1000, -1000,
	-1000, 40677, 37702, 306, 743, -1000, -1000, -1000, 64, -1000,
	-1000, 1404, 1311, 16867, 988, -1000, 1240, 662, -1000, -1000,
	-1000, -1000, -1000, 551, 17462, 17462, 17462, 17462, -1000, -1000,
	1635, 1635, 1635, 1635, 17462, 1635, 17462, 1635, 1635, 1635,
	1635, 16867, 1635, 1635, 1635, -1000, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 583, 1635, 1635, 1635, 1635, 1635, -1000,
	-1000, -1000, -1000, 1635, 1635, 1635, 1635, 1635, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19842, -1000, 14487,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40677, -1000, 1635, 180, 40677, 40677, 329, 2039, 1738, -1000,
	2123, 2084, 344, -1000, 2367, 1419, 1353, 1274, 1738, 1573,
	40677, -1000, 1653, -1000, -1000, -1000, 1814, 1198, 1255, -1000,
	-1000, -1000, -1000, 1601, 16867, -1000, -1000, 2150, -1000, 19247,
	568, 907, 2145, 37107, -1000, 394, 394, 1598, 12092, -34,
	-1000, -1000, -1000, 720, 26397, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1949, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1512, 40677, -1000, -1000, 4300, 1233,
	-1000, 1695, -1000, 1508, -1000, 1670, 16867, 1706, 485, 1233,
	471, 452, 446, -1000, -93, -1000, -1000, -1000, -1000, -1000,
	-1000, 703, 703, 703, -1000, 298, 2091, 347, 3649, -1000,
	-1000, -1000, 36512, 1694, 1233, -1000, 1693, -1000, 804, 491,
	531, 531, 1233, -1000, -1000, 40677, 1233, 801, 788, 1233,
	1233, 40677, 40677, -1000, 35917, -1000, 35322, 34727, 1068, 40677,
	34132, 33537, 32942, 32347, 31752, -1000, 1881, -1000, 1721, -1000,
	-1000, -1000, 40677, 1233, 1233, 40677, 40677, 296, -1000, -1000,
	40677, 1233, -1000, -1000, 1056, 1053, 1049, 703, 703, 1048,
	1253, 1250, 1248, 703, 703, 1024, 1247, 27587, 1246, 216,
	1019, 1018, 1016, 1051, 1243, 187, 1239, 1046, 996, 1013,
	40677, 1691, 40677, -1000, 239, 752, 425, 715, 1965, 1891,
	1577, 416, 484, 1233, 382, 382, 40677, -1000, 10892, -1000,
	-1000, 1238, 16867, -1000, 826, 825, 825, -1000, -1000, -1000,
	-1000, -1000, -1000, 838, 40677, 826, -1000, -1000, -1000, 825,
	838, 40677, 838, 838, 838, 838, 825, 825, 825, 838,
	40677, 40677, 40677, 40677, 40677, 40677, 40677, 40677, 40677, 10292,
	10292, 10292, 689, 838, -315, -1000, 1237, -1000, 1771, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 131, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -83, 1575,
	31157, -1000, -317, -318, -319, -321, -1000, -1000, -1000, -322,
	-326, -1000, -1000, -1000, 16867, 16867, 16867, 16867, -207, -1000,
	836, 17462, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 945,
	794, 17462, 17462, 17462, 17462, 17462, 17462, 17462, 17462, 17462,
	17462, 17462, 17462, 17462, 17462, 17462, 24612, 6374, 6374, 662,
	662, 662, 662, -1000, 16272, 16867, 16867, 662, -1000, 1233,
	30562, 16272, 16272, 16867, 1944, 749, 1311, 40677, -1000, 1274,
	-1000, -1000, -1000, 971, -1000, 40677, 40677, 1223, 16867, 16867,
	16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867,
	16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867,
	16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 13292, 10892,
	16272, 16272, 16272, 16272, 16272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 567, 1420, 1459,
	1440, -1000, 1574, -1000, -156, 21637, 16867, 1234, 2134, 1752,
	40677, -1000, -1000, -1000, 2039, -1000, 2039, 1420, 2262, 1827,
	16272, -1000, -1000, 2262, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1354, -1000, 40677, 1573, 2014, 40677, 1808, 1214,
	381, -1000, 16867, 16867, 1546, -1000, 974, 40677, -1000, -207,
	-1000, 29967, -1000, -1000, 9692, -1000, 40677, 292, 40677, -1000,
	24017, 29372, 11492, -34, -1000, 11492, 1515, -1000, -30, -25,
	13887, 660, -1000, -1000, -1000, 293, 18652, 1366, 660, 61,
	-1000, -1000, -1000, 1670, -1000, 1670, 1670, 1670, 1670, 381,
	381, 381, 381, -1000, -1000, -1000, -1000, -1000, 1689, 1688,
	-1000, 1670, 1670, 1670, 1670, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1684, 1684, 1684, 1671, 1671, 370, -1000, 16867,
	281, 28777, 1991, 1011, 1581, 239, 391, 1748, 1233, 1233,
	1233, 391, -1000, 1227, 1175, 1169, -1000, -397, 1545, -1000,
	-1000, 2090, -1000, -1000, 760, 827, 821, 732, 40677, 192,
	289, -1000, 354, -1000, 28777, 1233, 786, 531, 1233, -1000,
	1233, -1000, -1000, -1000, -1000, -1000, 1233, -1000, -1000, 1543,
	-1000, 1572, 868, 817, 855, 812, 1543, -1000, -1000, -133,
	1543, -1000, 1543, -1000, 1543, -1000, 1543, -1000, 1543, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 701, 162,
	-248, 40677, 192, 24612, -1000, 408, -1000, -1000, -1000, 24612,
	24612, -1000, -1000, -1000, -1000, 1212, 1207, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -385, 40677, -1000, 220,
	713, 276, 317, 255, 40677, 160, 2030, 2026, 2003, 226,
	265, 40677, 40677, 382, 1770, 40677, 2001, 40677, -1000, -1000,
	-1000, -1000, -1000, 1311, 40677, -1000, -1000, 838, 838, -1000,
	-1000, 40677, 838, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40677,
	40677, -1000, -1000, -1000, -1000, -1000, 86, -21, 280, -1000,
	-1000, -1000, -1000, -1000, 2041, -1000, 1311, 766, 768, -1000,
	1635, -1000, -1000, 922, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 945, 17462, 17462, 17462, 1547, 428, 1032, 1020, 1086,
	890, 890, 823, 823, 668, 668, 668, 668, 668, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1204, -1000, 1465,
	-1000, 1095, 1222, 1274, -1000, 1465, 1465, 1590, 16272, -1000,
	-1000, 746, -1000, 16867, 1274, -1000, -1000, 1274, 1274, 1542,
	1540, 2131, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 893, 1581, 1581, 1581, 2204, 2171, 1274,
	1404, 1274, 1539, -1000, 2070, 1581, 2060, 2037, 2027, 1522,
	2000, 1984, 1907, 1581, 1581, 1581, 1532, 1900, 1862, 1850,
	1805, 1792, 1780, 1765, 1755, 1749, 1581, 1274, 16272, 16272,
	1534, 1635, 556, -1000, 1465, 1274, 1274, 1465, 1465, 10892,
	1274, -1000, 40677, -1000, -301, -1000, -50, 667, 1635, -1000,
	27587, 1274, -1000, 6216, -1000, 41867, -1000, -1000, -1000, -1000,
	-1000, 25802, 1657, 2262, -1000, -1000, 1635, 1500, -1000, -1000,
	381, 50, 25207, 655, 655, 58, 1311, 1311, 16867, -1000,
	-1000, -1000, -1000, -1000, -1000, 550, 2124, 300, 1635, -1000,
	1544, 1933, -1000, -1000, -1000, 2012, 20442, -1000, 1635, 40677,
	1661, 1579, -1000, 548, -1000, 1515, -34, -45, -1000, -1000,
	-1000, -1000, 1311, -1000, 1134, 297, 3094, -1000, 367, -1000,
	-1000, -1000, -1000, 1923, 40, -1000, -1000, -1000, 196, 381,
	-1000, -1000, -1000, -1000, -1000, -1000, 1202, 1202, -1000, -1000,
	-1000, -1000, -1000, 1009, -1000, -1000, -1000, 1008, -1000, -1000,
	1724, 1733, 281, -1000, -1000, 703, 1201, -1000, -1000, 1926,
	703, 703, 40677, -1000, -1000, 1357, 1991, 220, 40677, 757,
	1769, -1000, 1748, 1748, 1748, 40677, -1000, -1000, -1000, -1000,
	-1000, -1000, -387, 67, 304, -1000, -1000, -1000, 3040, 40677,
	1485, -1000, 181, -1000, 1340, -1000, 40677, -1000, 1472, 1679,
	1233, 1233, -1000, -1000, -1000, 40677, 1635, -1000, -1000, -1000,
	-1000, 483, 1961, 266, -1000, -1000, -228, -1000, -1000, 192,
	181, 660, 1233, -1000, -1000, -1000, -1000, -1000, -388, 1470,
	426, 197, 262, 40677, 40677, 40677, 40677, 40677, 527, -1000,
	-1000, -1000, -1000, 163, -1000, -1000, 163, -1000, -1000, -1000,
	-1000, 256, 403, -1000, 40677, 40677, 613, -1000, -1000, -1000,
	825, -1000, -1000, 825, -1000, -1000, -1000, -1000, -1000, 1956,
	40677, -22, -354, -1000, -351, 16867, -1000, -1000, -1000, -1000,
	1536, 364, 1032, 17462, 17462, 16272, -126, 742, 742, 24612,
	-1000, -1000, -1000, 16867, 16867, 1519, 702, -1000, 16867, 960,
	-1000, -1000, -1000, 16867, 16867, 16867, 1274, 232, -1000, -1000,
	-1000, 16867, 16867, -1000, -1000, 16867, 16867, -1000, 16867, 16867,
	18057, 1274, 18057, 16867, 16867, 18057, -1000, -1000, -1000, -1000,
	18057, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867,
	-1000, -1000, 1465, 1465, 16272, 10892, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 667, -1000, 531, 531,
	531, 40677, -1000, -1000, -1000, -1000, -1000, -1000, 1510, 2032,
	-1000, 1848, 1840, 2126, 2124, -1000, 24017, 2262, -1000, -1000,
	40677, -296, -1000, 1884, 1846, 655, 655, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9092, 2039, 16867, 1768, 40677, 1635,
	-1000, 21042, 40677, 40677, 24017, 24017, 24017, 24017, 24017, -1000,
	1795, 1789, -1000, 1797, 1785, 1812, 40677, -1000, 1463, 1274,
	2084, 20442, 16867, 22827, 1497, 24017, -1000, -1000, 24017, 40677,
	8492, -1000, -1000, -46, -31, -1000, -1000, -1000, -1000, 293,
	-1000, -1000, 348, 2007, 1901, -1000, -1000, -1000, -1000, -1000,
	1458, -1000, 1452, 1494, 1446, 162, -1000, 1705, 1941, 703,
	703, -1000, 1002, -1000, 1233, 1197, 1196, -1000, -1000, -1000,
	406, -1000, 1995, 40677, 1767, 1764, 1763, -1000, -395, 997,
	1678, 1662, 16867, 1674, 2081, 1448, 40677, -1000, -1000, 40677,
	-1000, 171, -1000, 281, 40677, -1000, -1000, -1000, 289, 40677,
	-1000, 5341, -1000, -1000, -1000, 181, -1000, -1000, -1000, -1000,
	-1000, -1000, 40677, 219, -1000, 1672, 1264, -1000, -1000, 1723,
	-1000, -1000, -1000, -1000, 166, 258, 147, 1194, 147, -1000,
	40677, 511, 1733, 40677, -1000, -1000, -1000, 838, 838, -1000,
	-1000, 1939, -1000, 1233, 1581, 17462, 17462, -1000, 662, -1000,
	1635, 1274, 1670, 1670, -1000, 1670, 1671, -1000, 1670, 118,
	1670, 117, 1670, -1000, -1000, 1274, 1274, 1456, 1288, -100,
	-1000, 1311, 16867, 1741, 1736, 1581, -1000, 1669, 1668, 1581,
	1581, -1000, 1311, 1522, 1686, 1370, -1000, -1000, -1000, -1000,
	1480, 1581, 1680, -294, 1274, 1444, 1444, 1444, 1444, 1444,
	1440, 1440, 1440, 1440, -1000, -1000, 1274, -1000, -1000, 2036,
	2036, 2036, 1429, 41272, 40677, -1000, -1000, -1000, -1000, 2124,
	2115, 1474, -1000, -1000, 50, 384, -1000, 1859, 1846, -1000,
	2080, 1880, 2073, -1000, -1000, -1000, -1000, -1000, 1311, -1000,
	1977, 1433, -1000, 712, 1401, -1000, -1000, 15677, 1437, 1830,
	544, 1429, 1482, 1933, 1750, 1761, 2340, -1000, -1000, -1000,
	-1000, 1782, -1000, 1775, -1000, -1000, 1653, -1000, -1000, 1459,
	1675, 292, 24017, 1418, 1418, -1000, 536, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 859, 6093, 2159, -1000, 1193, -1000,
	1112, 202, 995, -1000, -1000, 703, 703, -1000, 780, 779,
	-1000, 40677, 1665, -1000, 381, 1170, 381, 990, -1000, 981,
	-1000, -1000, -1000, -1000, 1649, 1872, -1000, -1000, -1000, -1000,
	40677, -1000, -1000, 40677, 40677, 40677, 1664, 2071, -1000, 16867,
	1663, 710, 1659, 40677, 40677, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 405, 703, -368, 263,
	261, 703, 703, 703, -396, -1000, -1000, 1426, 1407, -1000,
	-178, -1000, 16867, -1000, -1000, -1000, 984, 984, -1000, 1653,
	-1000, -1000, -1000, 1319, -1000, -1000, -140, 40677, 40677, 40677,
	40677, -1000, 991, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 662, 17462, -1000, -1000, 381,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16867,
	-1000, 16867, -1000, 2039, 1168, 1311, 16867, 16867, -1000, 977,
	973, -1000, -1000, 1274, 18057, -1000, 18057, -1000, 16867, 195,
	742, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1635, 1948, 1635, 1635, 22827, -1000, -1000, 2115,
	2101, 2062, 1867, 1871, 1871, 1859, -1000, 2061, 2058, -1000,
	1145, 2053, 1142, 765, -1000, 40677, 16867, 1635, -1000, 328,
	40677, 1635, 40677, -1000, 2095, -1000, -1000, 16867, 1656, -1000,
	16867, -1000, -1000, -1000, -1000, -1000, 6374, 2124, 1418, -1000,
	-1000, 674, -1000, 16867, -1000, -1000, -1000, 4832, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1141, 1129, -1000, -1000,
	1655, 16867, -1000, -1000, -1000, 1302, 1297, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1653, -1000, -1000, -1000, -1000,
	289, -394, 1594, 40677, 969, -1000, 1391, 1448, 273, 1635,
	1126, 703, 703, 703, 941, 924, 27587, 1389, -1000, 40677,
	349, -1000, 289, -1000, -186, -187, 1581, -1000, -1000, 2005,
	-1000, -1000, 10892, -1000, -1000, 1638, 1729, -1000, -1000, -1000,
	332, -1000, 1581, 1581, 1274, -1000, 1581, 1581, 1290, 1276,
	-1000, 1370, -1000, 1029, -1000, 195, 1274, 1754, -1000, -1000,
	6374, -1000, 23422, -1000, 2050, 2049, 28182, 28182, 667, 2101,
	-1000, 16867, 16867, 1865, 938, -1000, -1000, -1000, -1000, 1123,
	1121, -1000, 1107, -1000, 2156, -1000, 1311, -1000, 1635, -1000,
	506, 1401, -1000, 2039, 1311, 40677, 1311, 25, 2095, -1000,
	1581, -1000, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635,
	1635, -1000, -1000, 40677, 1284, -1000, -1000, 2004, 1365, 66,
	-1000, 1363, -1000, -1000, 467, -1000, 16867, -1000, 27587, 1081,
	1077, -1000, -1000, -1000, -1000, -396, -1000, -1000, -1000, -1000,
	-1000, -1000, 344, 1431, -1000, 699, 40677, 40677, 1274, 260,
	-145, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16867, -1000, 1274, 1742, -1000, -249, -1000, 1328, -1000, -1000,
	-1000, -1000, -1000, 1328, 1328, -1000, -1000, 1311, 1404, -1000,
	887, -1000, -1000, -1000, -1000, -1000, 40677, 1401, 40677, -1000,
	1326, 1274, 1635, 2039, -1000, 1324, -1000, 344, -1000, 1633,
	1662, -1000, -1000, -1000, 15082, -1000, -1000, -1000, -1000, -1000,
	204, -136, 10892, 7892, 1322, -1000, -1000, 1803, -131, -164,
	1522, -1000, -335, -1000, -1000, 26992, -1000, -1000, -1000, -1000,
	-1000, 1396, -1000, -1000, 22827, 40082, -1000, -124, 268, -136,
	16867, 1537, 1274, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -26, -1000, -1000, -1000, -1000, -1000, 1723, -1000, 1802,
	-1000, 1274, -1000, -1000, -1000, 1300, -1000, 4111, -257, 1725,
	-1000, -104, -1000, -1000, -1000, 850, 1074, -1000, -1000, -1000,
	-1000, -1000, -1000, 911, 40677, -1000, 368, -1000, -1000, -140,
	-143, -1000, -1000, 40082, -252, 660, 6374, -1000, 1696, 1685,
	2140, -1000, -1000, -1000, -1000, -1000, -1000, -403, 1273, 224,
	-1000, -151, -1000, -1000, 1989, 25, -1000, 2142, -1000, 2125,
	606, 606, -1000, 921, -403, -1000, -176, -259, -1000, -1000,
	-1000, -1000, -1000, 358, 999, -1000, -1000, -1000, -1000, 6374,
	-1000, -1000, -1000, 213, 213, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2550, 2547, 47, 3, 35, 34, 2546, 45, 101,
	192, 30, 200, 102, 2545, 2544, 2543, 2541, 2540, 2539,
	2538, 224, 221, 217, 2537, 2536, 2535, 2534, 2533, 2532,
	2531, 2530, 2529, 2528, 212, 171, 187, 2527, 2526, 2525,
	129, 183, 97, 106, 185, 2524, 2523, 88, 2522, 2521,
	2520, 177, 176, 174, 824, 2519, 175, 121, 40, 2518,
	2517, 2516, 2515, 2514, 2513, 2512, 2511, 2510, 2508, 2506,
	2505, 2504, 2503, 2502, 2497, 2496, 268, 2495, 2492, 17,
	2491, 90, 2490, 2489, 2488, 141, 2487, 2486, 2485, 27,
	2484, 2483, 2482, 2476, 2475, 2473, 2472, 151, 2471, 2467,
	2466, 2465, 189, 2463, 2462, 267, 119, 126, 2461, 2460,
	111, 191, 2459, 134, 2456, 2452, 2451, 160, 2450, 4691,
	2449, 75, 73, 2448, 77, 91, 71, 61, 24, 4,
	2447, 2443, 74, 85, 2440, 122, 81, 2438, 117, 110,
	2437, 2435, 16, 6, 2433, 1, 7, 2, 76, 2427,
	2426, 128, 2425, 2424, 2423, 99, 2421, 2420, 4009, 2419,
	103, 144, 115, 83, 2404, 43, 63, 2402, 2401, 2400,
	2399, 2396, 55, 2395, 2394, 2377, 149, 48, 178, 37,
	49, 59, 147, 2376, 42, 93, 2374, 152, 2372, 2370,
	68, 38, 32, 2367, 41, 145, 133, 58, 100, 150,
	2364, 2361, 65, 84, 2360, 2359, 2357, 2356, 2355, 2352,
	79, 2350, 66, 2349, 190, 2348, 14, 2347, 52, 39,
	2345, 78, 132, 80, 31, 2343, 166, 2336, 60, 168,
	142, 169, 2333, 2332, 2331, 186, 264, 2324, 2323, 95,
	173, 154, 158, 107, 2321, 278, 2320, 2317, 98, 1257,
	2204, 28, 170, 2314, 2311, 3257, 148, 36, 21, 2309,
	216, 2305, 2303, 2302, 193, 172, 124, 1043, 67, 2301,
	2299, 13, 2297, 2296, 2292, 2290, 2289, 2288, 92, 33,
	29, 26, 194, 82, 11, 104, 165, 86, 2287, 2273,
	2271, 135, 105, 2267, 163, 162, 139, 167, 2265, 179,
	156, 157, 2263, 516, 23, 2262, 2261, 2260, 2259, 108,
	2257, 2256, 2244, 2240, 161, 153, 136, 94, 2238, 96,
	130, 164, 159, 44, 2234, 50, 2232, 2231, 22, 184,
	25, 2228, 12, 70, 69, 18, 120, 127, 2226, 0,
	2225, 15, 180, 276, 155, 2222, 2221, 5, 8, 10,
	2219, 2218, 2217, 2212, 2202, 146, 2201, 2199, 2198, 2191,
	20, 53, 19, 9, 131, 89, 2190, 2189, 5089, 3309,
	140, 2188, 195,
}

//line sql.y:7079
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 366, 367, 367, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 339, 339,
	339, 342, 342, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	370, 370, 153, 153, 151, 151, 152, 152, 221, 221,
	24, 25, 25, 231, 231, 230, 230, 230, 232, 232,
	232, 232, 267, 267, 26, 26, 26, 26, 26, 103,
	103, 341, 341, 340, 332, 332, 331, 331, 330, 338,
	338, 337, 337, 336, 38, 39, 48, 48, 48, 48,
	49, 50, 343, 343, 305, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 307, 307, 293, 293, 306, 306, 306, 306, 306,
	306, 306, 292, 292, 114, 114, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 359, 359, 359, 358, 358, 201, 201,
	201, 201, 201, 201, 201, 201, 123, 123, 132, 132,
	132, 132, 132, 121, 121, 122, 120, 120, 120, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 131, 131, 127, 127, 127, 128, 128,
	128, 129, 129, 360, 360, 360, 360, 271, 271, 271,
	271, 274, 274, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 273, 273, 273, 273, 273, 275, 275, 275,
	275, 275, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 277, 277,
	277, 277, 277, 277, 277, 277, 291, 291, 278, 278,
	286, 286, 287, 287, 287, 288, 288, 288, 289, 289,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 285,
	285, 284, 284, 284, 294, 319, 319, 318, 318, 316,
	316, 316, 316, 316, 316, 316, 316, 303, 303, 313,
	313, 313, 313, 313, 302, 302, 298, 298, 298, 299,
	299, 300, 300, 297, 297, 301, 301, 315, 315, 314,
	314, 295, 295, 296, 296, 321, 361, 361, 361, 361,
	361, 362, 362, 322, 350, 352, 352, 352, 351, 351,
	348, 349, 347, 347, 347, 347, 347, 81, 81, 81,
	243, 243, 244, 244, 311, 311, 310, 310, 310, 312,
	312, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 238, 238, 238, 346, 346, 346, 346, 346,
	346, 345, 345, 345, 308, 308, 308, 344, 344, 57,
	57, 185, 185, 364, 364, 365, 365, 365, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 85, 85, 86, 86, 86, 86, 88,
	88, 88, 324, 324, 58, 58, 3, 3, 141, 143,
	144, 144, 142, 142, 142, 142, 142, 142, 60, 60,
	59, 59, 146, 145, 147, 147, 147, 1, 1, 2,
	2, 4, 4, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 290, 290, 290, 323, 323,
	325, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 91, 90, 90, 89, 92, 92, 92, 92, 92,
	92, 92, 92, 327, 327, 327, 61, 61, 328, 279,
	280, 281, 5, 6, 304, 326, 99, 99, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 353, 353, 237,
	237, 246, 246, 236, 236, 260, 260, 260, 239, 239,
	239, 240, 240, 357, 357, 357, 64, 64, 64, 66,
	66, 67, 68, 68, 262, 262, 263, 263, 69, 70,
	82, 82, 82, 82, 82, 82, 84, 84, 84, 15,
	15, 15, 15, 78, 78, 78, 14, 14, 65, 65,
	72, 354, 354, 355, 356, 356, 356, 356, 73, 75,
	31, 31, 31, 31, 31, 31, 109, 109, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	104, 104, 104, 98, 98, 371, 76, 77, 77, 102,
	102, 102, 95, 95, 95, 101, 101, 101, 16, 16,
	17, 220, 220, 18, 18, 106, 106, 108, 108, 108,
	108, 108, 110, 110, 110, 110, 110, 110, 110, 105,
	105, 107, 107, 107, 107, 253, 253, 253, 252, 252,
	135, 135, 137, 136, 136, 138, 138, 139, 139, 139,
	139, 183, 161, 161, 218, 218, 216, 216, 217, 217,
	219, 219, 219, 219, 222, 222, 140, 140, 140, 140,
	148, 148, 149, 149, 150, 150, 261, 261, 258, 258,
	258, 257, 257, 154, 154, 154, 156, 155, 155, 155,
	155, 157, 157, 159, 159, 158, 158, 160, 165, 165,
	164, 164, 162, 162, 162, 162, 163, 163, 163, 163,
	166, 166, 119, 119, 119, 119, 119, 119, 119, 130,
	130, 130, 130, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	234, 234, 167, 167, 175, 175, 175, 175, 168, 168,
	168, 168, 168, 168, 168, 176, 176, 176, 182, 177,
	177, 173, 173, 173, 173, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 269, 269,
	335, 335, 334, 334, 333, 333, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 372, 372, 282,
	282, 282, 282, 174, 174, 174, 174, 174, 100, 100,
	100, 100, 100, 266, 266, 266, 270, 270, 270, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 188, 188, 96, 96, 186, 186,
	187, 189, 189, 184, 184, 184, 170, 170, 170, 190,
	190, 191, 191, 192, 192, 194, 193, 193, 195, 196,
	196, 196, 197, 197, 198, 198, 198, 47, 47, 47,
	47, 47, 42, 42, 42, 42, 43, 43, 43, 43,
	111, 111, 111, 111, 113, 113, 112, 112, 79, 79,
	80, 80, 80, 117, 117, 118, 118, 118, 115, 115,
	116, 116, 214, 214, 199, 199, 199, 206, 206, 206,
	202, 202, 204, 204, 204, 205, 205, 205, 203, 211,
	211, 213, 213, 212, 212, 208, 208, 209, 209, 210,
	210, 210, 207, 207, 169, 169, 169, 169, 169, 215,
	215, 215, 215, 223, 223, 179, 179, 181, 181, 180,
	134, 224, 224, 228, 225, 225, 229, 229, 229, 229,
	229, 226, 226, 227, 227, 254, 254, 254, 233, 233,
	245, 245, 241, 241, 242, 242, 235, 235, 247, 247,
	247, 74, 178, 178, 320, 320, 317, 250, 250, 251,
	251, 255, 255, 259, 259, 256, 256, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 368,
	369, 264, 265, 265, 265,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 2,
	4, 5, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 3, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 9, 6, 6, 6, 2, 2, 3, 3, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -366, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 217, -49, -39, 218,
	-50, 220, 219, 256, 221, 249, 74, 302, 303, 305,
	306, 307, 308, -84, 254, 255, 223, 36, 45, 33,
	34, 37, 227, 262, 263, 226, -10, -34, 8, -368,
	11, 432, 251, 250, 28, -12, 463, 86, -367, 604,
	-214, -199, 22, 33, 29, -198, -194, -102, -199, 20,
	18, 7, -76, -371, -76, -76, 12, 13, -76, -305,
	-307, 86, 153, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -329, -44, -41, 222, 219, 266,
	120, 121, 256, 257, 258, 221, 240, 255, 259, 254,
	275, -40, 81, 33, 463, 466, -312, 218, 224, 225,
	433, 123, 122, 75, 220, -309, 356, 496, 574, -56,
	576, 102, 104, 575, 44, 230, 577, 578, 579, 503,
	580, 239, 581, 582, 583, 584, 590, 545, 591, 592,
	593, 124, 7, -76, -259, -255, -339, -249, 89, 90,
	91, 460, 242, 494, 495, 291, 81, 41, 353, 356,
	496, 574, 302, 316, 310, 337, 329, 461, 497, 470,
	294, 243, 279, 571, 327, 129, 576, 297, 498, 257,
	361, 362, 499, 363, 102, 305, 399, 589, 296, 500,
	587, 104, 575, 79, 51, 44, 252, 325, 226, 321,
	577, 280, 501, 472, 273, 123, 120, 596, 36, 319,
	50, 30, 586, 122, 49, 578, 144, 502, 579, 503,
	365, 344, 565, 48, 366, 258, 504, 84, 263, 465,
	300, 573, 367, 320, 368, 290, 585, 223, 505, 557,
	369, 370, 566, 506, 345, 349, 507, 391, 371, 603,
	52, 508, 509, 567, 121, 510, 78, 580, 80, 314,
	315, 511, 288, 241, 393, 341, 442, 449, 450, 108,
	109, 445, 110, 451, 111, 452, 453, 454, 443, 112,
	105, 444, 455, 456, 342, 343, 113, 457, 107, 106,
	446, 448, 114, 458, 239, 35, 372, 462, 292, 58,
	267, 394, 46, 347, 600, 45, 561, 512, 564, 340,
	336, 53, 513, 514, 515, 516, 581, 339, 313, 335,
	595, 4, 285, 582, 62, 225, 351, 350, 352, 274,
	390, 332, 517, 518, 519, 246, 82, 520, 322, 21,
	521, 522, 373, 281, 523, 56, 524, 525, 397, 255,
	526, 54, 583, 39, 527, 260, 597, 584, 528, 529,
	530, 531, 262, 532, 375, 533, 374, 346, 348, 269,
	376, 464, 534, 301, 318, 259, 588, 535, 247, 572,
	261, 266, 254, 398, 248, 536, 537, 538, 539, 540,
	295, 556, 541, 542, 306, 590, 43, 543, 544, 545,
	546, 547, 289, 284, 392, 401, 61, 83, 358, 548,
	549, 570, 312, 282, 550, 303, 55, 591, 592, 593,
	276, 594, 9, 601, 602, 378, 124, 286, 287, 47,
	333, 268, 551, 298, 552, 323, 324, 338, 311, 334,
	304, 558, 270, 379, 256, 553, 400, 283, 354, 359,
	299, 468, 275, 380, 569, 467, 331, 328, 277, 554,
	381, 231, 271, 272, 555, 559, 382, 383, 293, 384,
	385, 386, 387, 389, 388, 278, 466, 309, 326, 360,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 441, 229,
	-76, 229, -158, -255, 229, -226, 362, -246, 364, 377,
	372, 382, 370, -237, 373, 375, 269, -357, 391, 229,
	379, 217, 170, 365, 374, 383, 384, 293, 389, 385,
	388, 278, -353, -339, 579, 594, 129, 330, 369, 367,
	392, 561, 387, 386, -255, 304, -262, 309, -250, -339,
	-249, 307, -158, -82, 557, 221, -264, -264, -104, 561,
	563, -177, -119, 137, -130, -133, -124, -125, -171, -172,
	-173, -174, -131, -184, 159, 160, 167, 138, -182, -134,
	26, 459, 434, 433, 170, 31, 213, 68, 69, 436,
	437, 140, 57, 409, 410, -132, 404, 411, 406, 439,
	440, 115, 441, 105, 107, 106, 342, 343, 442, 443,
	444, 108, 109, 110, 111, 112, 113, 114, 445, 448,
	446, 447, 449, 450, 451, 456, 457, 452, 453, 454,
	455, 458, -250, -255, 234, 403, 228, 165, 432, -126,
	-122, -8, -180, 402, 407, 408, 412, 405, -339, -249,
	-128, -127, -167, 92, 98, 103, 99, -363, 116, -368,
	93, 94, 95, 96, 97, 117, 118, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 44,
	378, 378, -158, -76, -76, -76, -76, -192, -102, -194,
	-10, -8, -368, 8, -76, -8, -9, -13, -34, -36,
	490, -35, -255, -199, -214, 12, 155, 42, 50, -197,
	-198, -12, -8, -119, 19, 23, 24, -107, 161, -119,
	-255, -77, -107, -235, 233, -76, -76, -225, -267, 304,
	-229, 392, 391, -251, -227, -250, -248, -226, 390, 222,
	23, 469, 136, 25, 27, 139, 170, 19, 140, 37,
	224, 330, 240, 169, 236, 433, 217, 72, 471, 404,
	406, 402, 409, 435, 436, 403, 364, 31, 13, 473,
	28, 250, 24, 38, 163, 219, 143, 474, 253, 26,
	251, 115, 118, 476, 22, 75, 245, 14, 238, 40,
	16, 477, 478, 17, 234, 233, 155, 230, 70, 11,
	213, 29, 152, 66, 479, 131, 480, 481, 482, 483,
	68, 153, 20, 598, 407, 408, 33, 562, 459, 264,
	165, 73, 59, 563, 137, 405, 484, 485, 116, 486,
	119, 76, 568, 133, 18, 71, 42, 487, 265, 488,
	235, 599, 489, 395, 490, 154, 220, 432, 69, 491,
	228, 377, 8, 438, 32, 249, 237, 126, 67, 492,
	229, 142, 439, 440, 232, 117, 7, 130, 34, 12,
	74, 77, 410, 411, 412, 57, 125, 463, 141, 15,
	493, 396, 135, 129, -306, 153, -292, -296, -250, 244,
	-322, 240, -158, -315, -314, -250, -368, -103, -245, 230,
	238, 237, 130, -343, 133, 286, 403, 228, -51, -52,
	-53, -226, 169, 578, -85, 261, 265, 87, 87, -296,
	-295, -294, -344, 265, 244, -321, -313, 236, 245, -302,
	237, 238, -297, 230, 131, -344, -297, 235, 245, 240,
	244, 265, 265, 124, 265, 124, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 260, -303, 145, -303, 467,
	467, -309, -344, 240, 230, -344, -344, 232, 35, 35,
	-247, -297, 232, 25, -303, -303, -303, -226, 169, -303,
	-303, -303, -303, 273, 273, -303, -303, -303, -303, -303,
	-303, -303, -303, -303, -303, -303, -303, -303, -303, -303,
	-303, -303, 229, -343, -111, 388, 293, 81, -54, 275,
	-37, -158, -245, 230, 231, -343, 262, -158, 214, -158,
	-239, 153, 15, -239, -236, 378, 376, 363, 368, -239,
	-239, -239, -239, 276, 361, -298, 230, 35, 241, 378,
	276, 361, 276, 277, 276, 277, 371, 381, 276, -260,
	14, 155, 403, 366, 370, 269, 229, 270, 231, 380,
	-339, 564, 277, -260, 93, -240, 153, 378, 272, -239,
	-265, -368, -251, 330, -265, -265, 32, 90, 232, -250,
	-78, -250, 93, -15, -11, -22, -21, -23, 145, -109,
	378, -97, 170, 579, 565, 566, 567, 564, 375, 572,
	570, 568, 276, 569, 87, 133, 135, 136, 4, -119,
	152, -168, 145, 146, 147, 148, 149, 150, 151, 155,
	137, 139, 153, 154, 134, 156, 157, 158, 159, 160,
	161, 162, 164, 163, 165, 166, 169, 215, 216, -125,
	-125, -125, -125, -182, -368, -368, -368, -125, -234, -368,
	-125, -368, -368, -368, -368, -188, -119, -368, -372, -368,
	-372, -372, -282, -368, -282, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, 214,
	-368, -368, -368, -368, -368, -282, -282, -282, -282, -282,
	103, 98, 92, -184, 99, 93, -250, -255, -8, -9,
	-177, -264, -354, -355, -161, -158, -368, 293, -250, -250,
	262, -197, -12, -8, -192, -198, -194, -8, -76, -95,
	-108, 63, 64, -110, 24, 38, 67, 65, 23, -369,
	88, -369, -214, -369, 87, -36, -218, 86, 61, 43,
	93, 93, 87, 21, -193, -195, -119, 14, -253, 4,
	-252, 25, -250, 93, 214, 101, 14, -159, 29, -158,
	-235, -235, 87, 304, -229, -267, -231, -230, 393, 395,
	145, -254, -250, 93, 31, 88, 87, -158, -271, -274,
	-276, -275, -277, -272, -273, 327, 328, 170, 331, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 344, 32,
	252, 323, 324, 325, 326, 345, 346, 347, 348, 349,
	350, 351, 352, 310, 329, 461, 311, 312, 313, 314,
	315, 316, 318, 319, 320, 321, 322, -342, -339, 86,
	88, 87, -278, 86, -119, -111, 229, -339, 230, 230,
	230, -76, 432, -303, -303, -303, 260, 19, -44, -41,
	-329, 18, -40, -41, 222, 120, 121, 219, 86, -292,
	86, -301, -342, -339, 86, 131, 235, 130, -300, -297,
	-300, -301, -339, -184, -339, 131, 131, -339, -339, -222,
	-250, -222, -222, 23, -222, 23, -222, 23, 95, -250,
	-222, 23, -222, 23, -222, 23, -222, 23, -222, 23,
	31, 78, 79, 80, 31, 82, 83, 84, -184, -339,
	-339, -184, -292, -226, -158, -339, 95, 95, 95, -303,
	-303, 95, 93, 93, 93, -303, -303, 95, 93, -257,
	-255, 93, 93, -345, 246, 290, 292, 95, 95, 95,
	95, 31, 93, -346, 31, 586, 585, 587, 588, 589,
	93, 95, 31, 95, 31, 95, -250, 86, -158, -117,
	280, 217, 219, 222, 76, 93, 294, 298, 299, 145,
	44, 87, 232, 229, -339, -241, 234, -241, -250, -256,
	-255, -248, 93, -119, -299, 14, 155, -260, -260, -239,
	-158, -299, -260, -239, -158, -239, -239, -239, -239, -260,
	-260, -260, -239, -255, -255, -158, -158, -158, -158, -158,
	-158, -158, -265, -265, -265, -240, -239, 564, 93, 76,
	-263, 307, 341, 558, 559, 560, 87, 463, -151, -158,
	564, 564, 564, 564, 564, 564, -119, -119, -119, -119,
	486, -175, 116, 137, 117, 118, -133, -176, -180, -182,
	100, 155, 139, 153, 154, -124, -125, -124, -124, -124,
	-124, -124, -124, -124, -124, -124, -124, -124, -124, -124,
	-266, -250, 93, 170, -129, -128, 99, -363, -129, -105,
	-107, -119, -119, -339, -250, -105, -105, -119, -101, 24,
	38, -186, -187, 141, -184, -369, -369, 95, 99, -250,
	-250, -94, -93, 414, 415, 416, 417, 419, 420, 421,
	424, 425, 429, 430, 413, 431, 418, 423, 426, 427,
	428, 422, 326, -119, -119, -119, -119, -119, -119, -178,
	-177, -338, -337, -336, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -106, 24, 38,
	-105, -251, -256, -248, -105, -106, -106, -105, -105, 214,
	-214, -369, 87, -356, 395, 396, 562, -258, 265, -257,
	25, -178, 93, 14, -220, 77, -250, -197, -197, 63,
	64, 59, -105, -110, -369, -35, 25, -216, -250, 62,
	93, -283, -226, 353, 354, 170, -119, -119, 87, -196,
	27, 28, -158, -252, 161, -256, -158, -221, 265, -158,
	-136, -138, -139, -140, -161, -183, -368, -141, 479, 14,
	-151, -152, -160, -255, -229, -231, 87, 394, 396, 397,
	76, 119, -119, -284, 169, -311, -310, -309, -292, -294,
	-295, -296, 88, -284, -288, 359, 358, -278, -278, -278,
	-278, -278, -283, -283, -283, -283, 86, 86, -278, -278,
	-278, -278, -286, 86, -286, -286, -287, 86, -287, -322,
	-119, -319, -318, -316, -317, 239, 102, 555, 511, 463,
	503, 545, 77, -314, -196, 95, -369, -117, -242, 234,
	-320, -317, -339, -339, -339, -242, -339, 93, -339, 93,
	-339, 93, -86, -58, -1, 598, 599, 600, 87, 19,
	-293, -292, -57, 290, -325, -326, 265, -321, -315, -301,
	131, -300, -301, -301, -339, 87, 29, 124, 124, 124,
	124, 463, 219, 32, -243, 502, 137, 555, 511, -292,
	-57, -266, 232, -266, -266, 93, 93, -238, 594, -151,
	-113, 282, 145, 271, 271, 229, 229, 284, -158, 295,
	297, 296, 294, 298, 299, 23, 23, 23, 283, 285,
	287, 273, -158, -158, -241, 76, -153, -158, 26, -255,
	-158, -239, -239, -158, -239, -239, -158, -250, -97, 395,
	87, 463, 22, -98, 22, -368, 116, 117, 118, -176,
	-124, -125, -124, 136, 253, 87, -369, 25, 87, 77,
	-369, -369, -369, 87, 14, -105, -189, -187, 143, -119,
	-369, -369, -369, 87, 87, 14, -270, 25, -369, -369,
	-369, 87, 87, -369, -369, 87, 87, -369, 87, 87,
	87, -335, 87, 87, 87, 87, -369, -369, -369, -369,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	-369, -369, -105, -105, -368, 214, -369, -369, -369, -369,
	-369, -251, -355, 561, 396, -165, -164, -162, 74, 233,
	75, -368, -257, -369, -129, 90, -217, 90, -216, -170,
	-250, 95, 99, -199, -135, -137, 14, -110, -182, 88,
	87, -283, -203, -208, -236, -250, 93, 170, -285, 170,
	-285, 353, 354, -195, 214, -166, 15, -169, 32, 57,
	-11, -368, -368, 32, 87, -154, -156, -155, -157, 66,
	70, 72, 67, 68, 69, 73, -261, 25, -136, -9,
	-8, -368, -368, -158, -151, -370, 14, 77, -370, 87,
	214, -230, -232, 398, 395, 401, -339, 93, -85, 87,
	-309, -296, -200, -114, 40, -289, 360, -283, 470, -283,
	-291, 93, -291, 95, 95, 88, -47, -42, -43, 33,
	81, -316, -303, 93, 39, -303, -303, -250, 88, -196,
	-113, -158, 137, 76, -320, -320, -320, -255, -2, 597,
	603, 131, 86, 363, 18, -216, 87, 88, -185, 291,
	88, -87, -250, 88, 86, -301, -301, -250, -368, 229,
	31, 31, 555, 511, 502, -57, -185, -284, -339, 596,
	595, 88, 231, 289, -118, 409, -115, 93, 89, -158,
	-158, -158, -158, -158, 222, 219, -364, 300, -364, 274,
	232, -151, -158, 87, -81, 248, 243, -260, -260, 33,
	-158, 395, 573, 571, -119, 136, 253, -133, -125, -107,
	460, -268, 170, 327, 252, 325, 321, 341, 332, 358,
	323, 359, 320, 319, 318, -268, -266, -119, -119, -192,
	144, -119, 142, -119, -119, -119, -369, 170, 327, -119,
	-119, -336, -119, -119, -119, -334, -333, -129, -184, -369,
	-334, -119, -119, -333, -333, -337, -337, -337, -337, -337,
	-177, -177, -177, -177, -369, -369, -106, -251, -162, -297,
	-297, -297, -222, 87, -233, 22, 14, 57, 57, -135,
	-166, -136, -110, -250, -206, 557, -211, 46, -209, -210,
	47, -207, 48, 56, -285, -285, 161, -197, -119, -223,
	76, -224, -228, -184, -179, -181, -180, -368, -215, -369,
	-250, -222, -224, -138, -139, -139, -138, -139, 66, 66,
	66, 71, 66, 71, 66, -155, -255, -369, -369, -9,
	-119, -258, 77, -136, -136, -160, -255, 161, 395, 399,
	400, -309, -362, 116, 137, 31, 76, 356, 102, -360,
	169, 499, 550, 555, 511, 503, 545, -361, 235, 130,
	131, 247, 25, 41, 88, 87, 88, 87, 88, 87,
	-244, -243, -43, -42, -303, -303, 95, -339, 93, 93,
	231, 26, -158, 76, 76, 76, -88, 601, 95, 86,
	-3, 81, -119, 86, 19, -292, -184, -327, -279, -328,
	-280, -281, -5, -6, -304, -91, 57, 102, -61, 44,
	230, 581, 582, 124, -368, 594, -319, -216, -323, -325,
	-158, -121, -368, -120, -122, -126, 159, 160, -185, -158,
	-112, 280, 288, 86, -116, 90, -341, 77, 271, 356,
	271, -365, 301, 93, -365, -158, -81, -47, -158, -239,
	-239, 33, -339, -369, -133, -125, -368, -369, -278, -278,
	-278, -287, -278, 315, -278, 315, -278, -369, -369, 87,
	-369, 22, -369, -96, 438, -119, 87, 87, -369, 86,
	86, -369, -369, -335, 87, -369, 87, -369, 87, -269,
	556, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -163, 22, -163, -163, -369, 90, -158, -166,
	-190, 16, -203, 51, 333, -213, -212, 55, 47, -210,
	19, 49, 19, 30, -223, 87, 145, 87, -369, -369,
	87, 57, 214, -369, -166, -149, -148, 76, 77, -150,
	76, -148, 66, 66, -218, -369, 87, -221, -136, -166,
	-166, 214, 116, -368, -123, -132, -121, 12, 93, 93,
	-339, -359, 585, 586, 31, 95, -303, -303, 131, 131,
	-158, 86, -283, 93, -283, 95, 95, 31, 82, 83,
	84, 31, 78, 79, 80, -158, -158, -158, -158, -324,
	86, 19, -119, 86, 145, 88, -216, -216, 267, 155,
	-303, 579, 273, 273, -303, -303, -303, -90, -89, 601,
	88, -369, 87, -290, 463, 466, -119, -127, -127, -218,
	88, -332, 463, -340, -250, -250, -250, -250, 95, 97,
	-124, -283, -119, -119, -197, 93, -119, -119, 95, 95,
	-369, -334, -333, -119, -369, -146, -145, -147, 565, 116,
	31, -268, -368, 66, 18, 16, -368, -368, -258, -190,
	-191, 17, 19, -204, 53, -202, 52, -202, -212, 19,
	19, 93, 19, 93, 131, -228, -119, -181, 57, -11,
	-250, -179, -250, -192, -119, 86, -119, -129, -166, -166,
	-119, -172, 441, 105, 107, 106, 342, 343, 442, 443,
	444, 108, 109, 110, 111, 112, 113, 114, 445, 448,
	446, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, 93, 93, 86, -119, 88, 88, -218, -323, -58,
	88, -216, 95, 88, 268, -180, -368, 93, -303, -303,
	-303, 95, 95, -257, -369, 87, -250, -361, -325, 467,
	467, -369, 25, -331, -330, -251, 86, 77, -100, 155,
	463, -369, -369, -369, -369, -369, 88, 88, -369, -369,
	87, -369, -145, -147, -369, 76, -129, -219, -369, -250,
	235, 19, 19, -219, -219, -165, -191, -119, -177, -205,
	54, 76, 119, 93, 93, 93, 12, -179, 214, -197,
	-216, -143, 363, -192, -369, -216, 88, 25, 88, 603,
	131, 88, -180, -99, -368, 264, -257, 93, 93, -89,
	-92, -11, 87, 145, -216, -158, -369, 461, 73, 464,
	-119, -369, 76, 474, 565, 87, -369, -369, -369, 76,
	119, -224, -250, 88, -369, -368, -197, 88, -201, -11,
	86, -3, 264, -279, -328, -280, -281, -5, -6, -304,
	-79, 463, -330, -308, -251, 93, 95, 88, 62, 462,
	465, -335, -250, 235, -258, -144, -142, -250, 517, -351,
	-350, 459, -362, -358, 116, 137, 102, -360, 555, 511,
	125, 126, -79, -119, 86, -369, -80, 279, 561, -341,
	62, -369, -369, 87, 22, -271, -60, 528, -348, -349,
	76, -352, 369, 527, 548, 116, 93, 88, -216, 240,
	-332, 463, -142, 524, -284, -129, -349, 76, -348, 76,
	13, 12, -4, 602, 88, 281, 464, -59, 26, -143,
	-347, 248, 243, 246, 32, -347, 95, -4, 465, 528,
	242, 31, 116, -129, -146, -145, -145,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 825,
	825, 825, 0, 825, 0, 0, 825, -2, -2, 825,
	1303, 0, 825, 0, 0, -2, 757, 759, 0, 761,
	-2, 0, 0, 770, 1801, 1801, 820, 0, 0, 0,
	0, 0, 825, 825, 825, 825, 1163, 48, 825, 0,
	83, 84, 776, 777, 778, 63, 0, 1799, 1, 3,
	69, 73, 0, 0, 0, 56, 1172, 0, 76, 0,
	0, 829, 0, 827, 0, 1286, 825, 825, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1288, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1190, 153, 1304, 1301, 1302, 38, 39,
	40, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 0,
	1280, 0, 686, 925, 0, 748, 748, 0, 748, 748,
	748, 748, 0, 0, 0, 698, 0, 0, 0, 0,
	745, 0, 0, 717, 719, 0, 745, 0, 727, 751,
	0, 732, 748, 1802, 1802, 1802, 1271, 0, 742, 740,
	754, 755, 737, 738, 756, 760, 0, 765, 768, 1297,
	1298, 0, 783, 47, 1539, 775, 788, 789, 0, 821,
	822, 43, 1019, 0, 947, 952, 963, 976, 977, 978,
	979, 980, 982, 983, 0, 0, 0, 0, 988, 989,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	0, 1144, 0, 1107, 1107, 1036, 1107, 1109, 1109, 0,
	0, 0, 1798, 1580, 1588, 1589, 1584, 1585, 1566, 1578,
	1581, 1569, 1570, 1572, 1574, 1579, 1586, 1592, 1571, 1591,
	1590, 0, 1567, 1568, 1573, 1583, 1587, 1575, 1576, 1577,
	1582, 1593, 1153, 0, 0, 0, 0, 0, 0, 273,
	274, 1018, 1260, 1109, 1109, 1109, 1109, 1109, -2, -2,
	219, 220, 221, 222, 223, 224, 225, 0, 215, 0,
	278, 279, 275, 276, 277, 1002, 1003, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 1801,
	0, 798, 0, 0, 0, 0, 0, 1172, 0, 1164,
	1163, 61, 0, 825, -2, 0, 0, 0, 0, 45,
	0, 50, 884, 75, 74, 1212, 0, 0, 0, 57,
	1173, 65, 67, 1174, 0, 830, 831, 0, 861, 865,
	0, 826, 0, 0, 1287, 1286, 1286, 100, 0, 1740,
	1264, -2, -2, 0, 0, 1299, 1300, 1273, -2, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1190, 0, 0,
	0, 0, 0, 825, 0, 1281, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1289, 1290, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1203, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1282, 1282, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1802, 1802, 751, 748, 0, 728, 0, 729, 730, 733,
	734, 1803, 1804, 1319, 735, 736, 1272, 758, 766, 769,
	786, 784, 785, 787, 779, 780, 781, 782, 0, 800,
	801, 806, 0, 0, 0, 0, 812, 813, 814, 0,
	0, 817, 818, 819, 0, 0, 0, 0, 0, 945,
	0, 0, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	985, 986, 987, 990, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 835, 0, 1145, 0, 1034, 0,
	1035, 1037, 1038, 0, 1039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1292, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	0, 845, 845, 0, 0, 208, 209, 210, 211, 212,
	226, 227, 228, 229, 230, 280, 1153, 0, 1018, 0,
	0, 44, 790, 791, 0, 908, 1292, 0, 0, 841,
	0, 55, 64, 66, 1172, 59, 1172, 0, 847, 0,
	0, -2, -2, 848, 854, 855, 856, 857, 858, 52,
	1800, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	350, 1215, 0, 0, 1165, 1166, 1169, 0, 862, 1621,
	866, 0, 868, 869, 0, 828, 0, 98, 0, 924,
	0, 0, 0, 1740, 1270, 0, 102, 103, 0, 0,
	0, 361, 1275, 1276, 1277, -2, 384, 0, 361, 345,
	288, 289, 290, 338, 292, 338, 338, 338, 338, 350,
	350, 350, 350, 321, 322, 323, 324, 325, 0, 0,
	307, 338, 338, 338, 338, 328, 329, 330, 331, 332,
	333, 334, 335, 293, 294, 295, 296, 297, 298, 299,
	300, 301, 340, 340, 340, 342, 342, 0, 42, 0,
	365, 0, 1169, 0, 0, 1203, 1284, 1294, 0, 0,
	0, 1284, 120, 0, 0, 0, 550, 584, 502, 538,
	551, 0, 505, 506, -2, 0, 0, 487, 0, 489,
	0, 385, 0, -2, 0, 395, 0, 391, 395, 392,
	395, 383, 396, 528, 529, 530, 0, 532, 533, 614,
	894, 0, 0, 0, 0, 0, 620, 621, 622, 0,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 489, 0, 535, 0, 441, 442, 443, 0,
	0, 446, 447, 448, 449, 0, 0, 452, 453, 454,
	911, 912, 455, 456, 481, 482, 483, 457, 458, 459,
	460, 461, 462, 463, 475, 476, 477, 478, 479, 480,
	464, 465, 466, 467, 468, 469, 472, 0, 135, 1194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 0, 0, 0, 844, 926,
	1305, 1306, 749, 750, 0, 389, 390, 748, 748, 695,
	718, 0, 748, 699, 720, 700, 702, 701, 703, 722,
	723, 748, 706, 746, 747, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 724, 725, 726, 752, 0,
	0, 767, 771, 772, 773, 774, 0, 0, 803, 94,
	808, 809, 810, 811, 823, 816, 1020, 942, 943, 944,
	0, 946, 949, 0, 1004, 1006, 951, 953, 1015, 1016,
	1017, 0, 0, 0, 0, 0, 957, 961, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	981, 1123, 1124, 1125, 998, 281, 282, 0, 999, 0,
	859, 0, 0, 0, 997, 0, 0, 0, 0, 836,
	837, 1151, 1148, 0, 0, 1108, 1110, 0, 0, 0,
	0, 0, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1126, 0, 0, 0, 0, 0, 0,
	1293, 0, 130, 131, 0, 0, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	846, 1154, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1259, 0, 793, 794, 796, 0, 928, 0, 909,
	0, 0, 799, 0, 840, 0, 843, 58, 60, 852,
	853, 0, 870, 849, 54, 49, 0, 0, 886, 1213,
	350, 1235, 0, 359, 359, 356, 1175, 1176, 0, 1168,
	1170, 1171, 77, 867, 863, 0, 940, 0, 0, 923,
	0, 873, 875, 876, 877, 906, 0, 880, 0, 0,
	0, 0, 96, 925, 1265, 101, 0, 0, 106, 107,
	1266, 1267, 1268, 1269, 0, 573, -2, 436, 167, 169,
	170, 171, 162, -2, 348, 346, 347, 291, 350, 350,
	315, 316, 317, 318, 319, 320, 0, 0, 308, 309,
	310, 311, 302, 0, 303, 304, 305, 0, 306, 403,
	0, 1177, 366, 367, 369, 377, 0, 372, 373, 0,
	377, 377, 0, 398, 399, 0, 1169, 1194, 0, 0,
	0, 1295, 1294, 1294, 1294, 0, 155, 156, 157, 158,
	159, 160, 609, 0, 0, 585, 607, 608, 153, 0,
	0, 163, 491, 490, 0, 641, 0, 401, 0, 0,
	395, 395, 380, 381, 531, 0, 0, 616, 617, 618,
	619, 0, 0, 0, 518, 430, 0, 519, 520, 489,
	491, 361, 0, 444, 445, 450, 451, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 566, 567, 493, 571, 568, 493, 572, 1191, 1192,
	1193, 0, 0, 679, 0, 0, 427, 92, 1283, 684,
	745, 705, 721, 745, 697, 704, 731, 763, 807, 0,
	0, 0, 0, 815, 0, 0, 950, 1005, 1007, 954,
	0, 958, 962, 0, 0, 0, 0, 0, 0, 0,
	1001, 1025, 1026, 0, 0, 1163, 0, 1149, 0, 0,
	1033, 1111, 1112, 0, 0, 0, 0, 0, 1044, 1045,
	1046, 0, 0, 1049, 1050, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 0, 0, 1063, 1064, 1065, 1066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1077, 1021, 0, 0, 845, 0, 1113, 1114, 1115, 1116,
	1117, 1154, 792, 795, 797, 882, 929, 930, 0, 0,
	0, 0, 910, 1291, 838, 839, 842, -2, 0, 0,
	1156, 0, 0, 870, 940, 871, 0, 850, 51, 885,
	0, 1217, 1216, 1229, 1242, 359, 359, 353, 354, 360,
	355, 357, 358, 1167, 0, 1172, 0, 1253, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 913,
	0, 0, 916, 0, 0, 0, 0, 907, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 362, 363, 144, 153,
	438, 168, 411, 0, 0, 287, 349, 312, 313, 314,
	0, 336, 0, 0, 0, 432, 116, 1181, 1180, 377,
	377, 368, 0, 371, 0, 0, 0, 1296, 339, 400,
	0, 134, 0, 0, 0, 0, 0, 140, 579, 0,
	0, 586, 0, 0, 0, 500, 0, 511, 512, 0,
	613, -2, 675, 365, 0, 379, 382, 895, 0, 0,
	513, 0, 516, 517, 431, 491, 522, 523, 536, 473,
	474, 471, 0, 0, 1204, 1205, 1210, 1208, 1209, 121,
	557, 559, 558, 562, 0, 0, 495, 0, 495, 555,
	0, 427, 1177, 0, 683, 428, 429, 748, 748, 802,
	95, 0, 805, 0, 0, 0, 0, 955, 959, 860,
	0, 0, 338, 338, 1131, 338, 342, 1134, 338, 1136,
	338, 1139, 338, 1142, 1143, 0, 0, 0, 0, 1146,
	1032, 1152, 0, 0, 0, 0, 1043, 0, 0, 0,
	0, 132, 133, 1080, 0, 0, 1082, 1084, 1085, 1055,
	1081, 0, 0, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1022, 1023, 0, 1155, 931, 936,
	936, 936, 0, 0, 0, 1278, 1279, 1157, 1158, 940,
	1159, 872, 851, 887, 1235, 0, 1228, 0, -2, 1237,
	0, 0, 0, 1243, 351, 352, 864, 78, 941, 81,
	0, 1253, 1261, 0, 1244, 1255, 1257, 0, 0, 0,
	1249, 0, 940, 874, 902, 904, 0, 899, 914, 915,
	917, 0, 919, 0, 921, 922, 884, 879, 881, 0,
	0, 98, 0, 940, 940, 97, 0, 927, 108, 109,
	110, 437, 172, 177, 0, 0, 0, 182, 0, 184,
	0, 0, 0, 189, 190, 377, 377, 412, 0, 284,
	286, 0, 0, 175, 350, 0, 350, 0, 343, 0,
	413, 433, 1178, 1179, 0, 0, 370, 374, 375, 376,
	0, 1285, 136, 0, 0, 0, 582, 0, 610, 0,
	0, 0, 0, 0, 0, 164, 492, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 0, 377, 0, 0,
	0, 377, 377, 377, 0, 667, 364, 0, 0, 638,
	635, 514, 0, 213, 214, 216, 0, 0, 521, 884,
	1195, 1196, 1197, 0, 1207, 1211, 124, 0, 0, 0,
	0, 569, 0, 494, 570, 680, 681, 682, 93, 690,
	696, 804, 824, 948, 956, 960, 0, 992, 1129, 350,
	1132, 1133, 1135, 1137, 1138, 1140, 1141, 993, 994, 0,
	1028, 0, 1030, 1172, 0, 1150, 0, 0, 1042, 0,
	0, 1047, 1048, 0, 0, 1054, 0, 1056, 0, 0,
	0, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1024, 0, 0, 0, 0, 908, -2, 62, 1159,
	1161, 0, 1222, 1220, 1220, 1230, 1231, 0, 0, 1238,
	0, 0, 0, 0, 82, 0, 0, 0, 1258, 0,
	0, 0, 0, 99, 1163, 896, 903, 0, 0, 897,
	0, 898, 918, 920, 878, -2, 0, 940, 940, 88,
	89, 0, 178, 0, 180, 206, 207, 0, 183, 185,
	186, 187, 193, 194, 195, 188, 0, 0, 283, 285,
	0, 0, 326, 337, 327, 0, 0, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 884, 137, 138, 139, 574,
	0, 584, 0, 0, 0, 577, 0, 503, 0, 0,
	0, 377, 377, 377, 0, 0, 0, 0, 652, 0,
	0, 615, 0, 623, 0, 0, 0, 217, 218, 0,
	1206, 556, 0, 122, 123, 0, 0, 561, 496, 497,
	1118, 1130, 0, 0, 0, 1147, 0, 0, 0, 0,
	1052, 0, 1083, 0, 1059, 0, 0, 0, 604, 605,
	0, 1079, 0, 937, 0, 0, 0, 0, 928, 1161,
	80, 0, 0, 1225, 0, 1218, 1221, 1219, 1232, 0,
	0, 1239, 0, 1241, 0, 1262, 1263, 1256, 0, 1248,
	1251, 1247, 1250, 1172, 900, 0, 905, 0, 1163, 87,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 0, 0, 341, 344, 0, 0, 0,
	575, 0, 587, 578, 0, 665, 0, 669, 0, 0,
	0, 672, 673, 674, 651, 0, 655, 405, 639, 636,
	637, 515, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 1027, 1029, 1031, 1040, 1041, 1127, 1128, 1053, 1057,
	0, 1060, 0, 0, 1061, 0, 606, 0, 933, 890,
	891, 938, 939, 0, 0, 883, 79, 1162, 1160, 1214,
	0, 1223, 1224, 1233, 1234, 1240, 0, 1246, 0, 85,
	0, 0, 0, 1172, 179, 0, 198, 0, 583, 0,
	586, 576, 663, 664, 0, 676, 668, 670, 671, 653,
	-2, 1198, 0, 0, 0, 563, 991, 0, 0, 0,
	1080, 1062, 0, 602, 603, 0, 932, 934, 935, 1226,
	1227, 1254, 1252, 901, 908, 0, 86, 418, 411, 1198,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	553, 1200, 127, 128, 484, 485, 486, 121, 1119, 0,
	1122, 0, 892, 893, 588, 0, 590, 0, -2, 406,
	419, 0, 173, 199, 200, 0, 0, 203, 204, 205,
	196, 197, 117, 0, 0, 677, 0, 1201, 1202, 124,
	1120, 1058, 589, 0, 0, 361, 0, 599, 407, 408,
	0, 414, 415, 416, 417, 201, 202, 611, 0, 0,
	560, 0, 591, 592, 600, 0, 409, 0, 410, 0,
	0, 0, 580, 0, 611, 1199, 0, 0, 601, 597,
	420, 422, 423, 0, 0, 421, 612, 581, 1121, 0,
	424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 138, 3, 3, 3, 164, 156, 3,
	86, 88, 161, 159, 87, 160, 214, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 604,
	146, 145, 147, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 166, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 134, 3, 167,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
	136, 137, 139, 140, 141, 142, 143, 144, 148, 149,
	150, 151, 152, 153, 154, 155, 157, 158, 163, 165,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:529
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:534
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:539
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:575
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:594
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:604
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:610
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:616
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:620
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:629
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:635
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:639
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:645
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:712
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:848
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:852
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:906
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:919
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:941
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:951
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:955
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:959
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:973
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:977
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:983
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:987
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:999
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1006
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1015
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1045
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1050
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1061
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1081
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1087
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1103
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1139
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1146
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1157
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1174
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1178
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1182
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1220
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1230
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1240
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1244
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1250
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1260
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1298
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1307
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1415
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1419
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1423
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1429
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1433
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1517
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1524
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1760
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1774
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1788
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1799
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2039
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2048
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2053
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2065
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2075
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2100
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2171
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2180
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2186
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2196
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2200
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2205
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2209
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2213
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2217
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2221
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2225
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2241
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2245
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2249
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2253
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2257
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2325
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2329
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2335
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2339
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2345
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2349
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2355
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2359
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2365
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2371
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2375
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2379
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2383
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2387
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2396
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2402
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2408
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2414
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2418
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2422
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2427
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2431
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2437
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2443
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2449
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2453
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2457
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2461
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2465
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2488
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2493
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2497
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2506
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2512
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2526
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2536
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2707
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2711
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2720
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2725
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2738
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2742
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2751
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2755
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2759
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2763
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2767
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2773
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2777
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2787
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2791
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2911
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2915
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2921
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2963
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2970
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2977
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2984
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2990
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3036
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3057
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3140
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3151
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3160
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3168
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3177
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3184
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3196
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3205
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3220
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3225
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3234
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3238
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3244
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3250
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3256
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3266
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3270
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3276
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3282
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3288
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3294
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3308
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3312
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3318
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3324
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3330
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3334
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3338
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3344
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3348
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3353
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3357
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3362
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3366
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3372
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3376
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3380
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3384
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3388
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3392
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3396
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3400
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3404
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3408
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3412
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3461
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3469
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3476
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3491
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3495
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3500
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3505
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3510
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3515
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3520
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3526
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3532
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3537
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3543
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3549
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3559
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3564
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3568
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3573
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3578
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3583
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3588
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3594
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3600
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3607
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3614
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3621
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3629
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3633
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3639
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3645
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3651
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3657
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3663
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3669
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3681
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3697
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3703
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3707
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3713
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3982
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3986
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4020
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4024
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4034
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4116
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4120
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4124
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4128
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4132
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4136
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = yyDollar[1].str
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = yyDollar[1].str
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4213
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4223
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4229
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4233
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4237
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4241
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4289
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			setAllowComments(yylex, true)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4376
		{
			yyVAL.strs = nil
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4386
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4390
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = SQLCacheStr
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4412
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4420
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4430
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4451
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.strs = nil
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4483
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4491
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = SQLCacheStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = DistinctStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = DistinctStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.str = StraightJoinHint
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4527
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4537
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4541
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4545
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4549
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4554
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4574
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4578
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4584
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4590
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4604
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4608
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4612
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4616
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4622
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4628
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4632
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4641
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4647
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4651
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4657
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4661
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4667
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4671
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4675
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4679
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4685
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4689
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4702
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4706
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4710
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4714
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4720
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4722
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4726
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4742
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4750
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4757
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4763
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4767
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4771
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4777
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4783
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4787
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4791
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4795
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4801
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4805
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4815
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4844
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4850
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4854
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4860
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4864
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4868
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4872
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4877
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4881
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4885
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4889
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5158
		{
			yyVAL.str = ""
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5168
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5172
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5179
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5183
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5187
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5191
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5197
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5201
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5205
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5209
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5213
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5217
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5221
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5227
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5231
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5235
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5242
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5248
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5252
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5511
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5520
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5526
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5536
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5540
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5548
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5552
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5556
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5560
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5564
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5568
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5572
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5576
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5580
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5584
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5588
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5594
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5598
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5602
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5606
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5610
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5614
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5618
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5622
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5626
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5681
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5685
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5689
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5693
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5697
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5703
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5721
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5725
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5731
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5735
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5739
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5743
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5747
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5753
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5757
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5761
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5765
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5769
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5773
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5777
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5781
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5785
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5789
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5804
		{
			yyVAL.str = string("")
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5808
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5814
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5818
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5824
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5839
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5843
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5847
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5876
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5894
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5900
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5906
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5910
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5916
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5921
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5925
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5929
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5938
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5944
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5948
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5952
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5961
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5965
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5969
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5973
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5980
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5984
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5988
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5992
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5998
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6002
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6006
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6010
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6027
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6032
		{
			yyVAL.str = ""
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6036
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = ""
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6055
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6060
		{
			yyVAL.str = "cascaded"
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6068
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6077
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6083
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6089
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6095
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6108
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.str = ""
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6123
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6127
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6133
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6137
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6141
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6146
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6159
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.str = " header"
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6168
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = " manifest on"
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6176
		{
			yyVAL.str = " manifest off"
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6181
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6185
		{
			yyVAL.str = " overwrite on"
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6189
		{
			yyVAL.str = " overwrite off"
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6195
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6200
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6204
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6220
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6229
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6233
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6239
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6243
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6249
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6253
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6257
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6262
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.str = " optionally"
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6279
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6283
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6287
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6291
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6295
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6301
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6305
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6309
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6313
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6322
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6328
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6332
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6338
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6342
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6348
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6363
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6367
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6373
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6379
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6383
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6389
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6393
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6397
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6401
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6405
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6413
		{
			yyVAL.str = "charset"
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6447
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6452
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6460
		{
			yyVAL.empty = struct{}{}
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6462
		{
			yyVAL.empty = struct{}{}
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6464
		{
			yyVAL.empty = struct{}{}
		}
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6468
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6477
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6484
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6488
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6498
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6505
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6511
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6515
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6521
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6525
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7049
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7058
		{
			decNesting(yylex)
		}
	case 1801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7063
		{
			skipToEnd(yylex)
		}
	case 1802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7068
		{
			skipToEnd(yylex)
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7072
		{
			skipToEnd(yylex)
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7076
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
