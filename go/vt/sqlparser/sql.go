// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const INTERVAL = 57537
const JSON_EXTRACT_OP = 57538
const JSON_UNQUOTE_EXTRACT_OP = 57539
const CREATE = 57540
const ALTER = 57541
const DROP = 57542
const RENAME = 57543
const ANALYZE = 57544
const ADD = 57545
const FLUSH = 57546
const CHANGE = 57547
const MODIFY = 57548
const DEALLOCATE = 57549
const REVERT = 57550
const SCHEMA = 57551
const TABLE = 57552
const INDEX = 57553
const VIEW = 57554
const TO = 57555
const IGNORE = 57556
const IF = 57557
const PRIMARY = 57558
const COLUMN = 57559
const SPATIAL = 57560
const FULLTEXT = 57561
const KEY_BLOCK_SIZE = 57562
const CHECK = 57563
const INDEXES = 57564
const ACTION = 57565
const CASCADE = 57566
const CONSTRAINT = 57567
const FOREIGN = 57568
const NO = 57569
const REFERENCES = 57570
const RESTRICT = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const COALESCE = 57580
const EXCHANGE = 57581
const REBUILD = 57582
const PARTITIONING = 57583
const REMOVE = 57584
const PREPARE = 57585
const EXECUTE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const VINDEX = 57594
const VINDEXES = 57595
const DIRECTORY = 57596
const NAME = 57597
const UPGRADE = 57598
const STATUS = 57599
const VARIABLES = 57600
const WARNINGS = 57601
const CASCADED = 57602
const DEFINER = 57603
const OPTION = 57604
const SQL = 57605
const UNDEFINED = 57606
const SEQUENCE = 57607
const MERGE = 57608
const TEMPORARY = 57609
const TEMPTABLE = 57610
const INVOKER = 57611
const SECURITY = 57612
const FIRST = 57613
const AFTER = 57614
const LAST = 57615
const VITESS_MIGRATION = 57616
const CANCEL = 57617
const RETRY = 57618
const COMPLETE = 57619
const CLEANUP = 57620
const BEGIN = 57621
const START = 57622
const TRANSACTION = 57623
const COMMIT = 57624
const ROLLBACK = 57625
const SAVEPOINT = 57626
const RELEASE = 57627
const WORK = 57628
const BIT = 57629
const TINYINT = 57630
const SMALLINT = 57631
const MEDIUMINT = 57632
const INT = 57633
const INTEGER = 57634
const BIGINT = 57635
const INTNUM = 57636
const REAL = 57637
const DOUBLE = 57638
const FLOAT_TYPE = 57639
const DECIMAL_TYPE = 57640
const NUMERIC = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const TEXT = 57652
const TINYTEXT = 57653
const MEDIUMTEXT = 57654
const LONGTEXT = 57655
const BLOB = 57656
const TINYBLOB = 57657
const MEDIUMBLOB = 57658
const LONGBLOB = 57659
const JSON = 57660
const JSON_SCHEMA_VALID = 57661
const JSON_SCHEMA_VALIDATION_REPORT = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const NOW = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const JSON_ARRAY = 57760
const JSON_OBJECT = 57761
const JSON_QUOTE = 57762
const JSON_DEPTH = 57763
const JSON_TYPE = 57764
const JSON_LENGTH = 57765
const JSON_VALID = 57766
const JSON_ARRAY_APPEND = 57767
const JSON_ARRAY_INSERT = 57768
const JSON_INSERT = 57769
const JSON_MERGE = 57770
const JSON_MERGE_PATCH = 57771
const JSON_MERGE_PRESERVE = 57772
const JSON_REMOVE = 57773
const JSON_REPLACE = 57774
const JSON_SET = 57775
const JSON_UNQUOTE = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const WITHOUT = 57784
const VALIDATION = 57785
const UNUSED = 57786
const ARRAY = 57787
const CUME_DIST = 57788
const DESCRIPTION = 57789
const DENSE_RANK = 57790
const EMPTY = 57791
const EXCEPT = 57792
const FIRST_VALUE = 57793
const GROUPING = 57794
const GROUPS = 57795
const JSON_TABLE = 57796
const LAG = 57797
const LAST_VALUE = 57798
const LATERAL = 57799
const LEAD = 57800
const NTH_VALUE = 57801
const NTILE = 57802
const OF = 57803
const OVER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const RECURSIVE = 57807
const ROW_NUMBER = 57808
const SYSTEM = 57809
const WINDOW = 57810
const ACTIVE = 57811
const ADMIN = 57812
const AUTOEXTEND_SIZE = 57813
const BUCKETS = 57814
const CLONE = 57815
const COMPONENT = 57816
const DEFINITION = 57817
const ENFORCED = 57818
const ENGINE_ATTRIBUTE = 57819
const EXCLUDE = 57820
const FOLLOWING = 57821
const GEOMCOLLECTION = 57822
const GET_MASTER_PUBLIC_KEY = 57823
const HISTOGRAM = 57824
const HISTORY = 57825
const INACTIVE = 57826
const INVISIBLE = 57827
const LOCKED = 57828
const MASTER_COMPRESSION_ALGORITHMS = 57829
const MASTER_PUBLIC_KEY_PATH = 57830
const MASTER_TLS_CIPHERSUITES = 57831
const MASTER_ZSTD_COMPRESSION_LEVEL = 57832
const NESTED = 57833
const NETWORK_NAMESPACE = 57834
const NOWAIT = 57835
const NULLS = 57836
const OJ = 57837
const OLD = 57838
const OPTIONAL = 57839
const ORDINALITY = 57840
const ORGANIZATION = 57841
const OTHERS = 57842
const PATH = 57843
const PERSIST = 57844
const PERSIST_ONLY = 57845
const PRECEDING = 57846
const PRIVILEGE_CHECKS_USER = 57847
const PROCESS = 57848
const RANDOM = 57849
const REFERENCE = 57850
const REQUIRE_ROW_FORMAT = 57851
const RESOURCE = 57852
const RESPECT = 57853
const RESTART = 57854
const RETAIN = 57855
const REUSE = 57856
const ROLE = 57857
const SECONDARY = 57858
const SECONDARY_ENGINE = 57859
const SECONDARY_ENGINE_ATTRIBUTE = 57860
const SECONDARY_LOAD = 57861
const SECONDARY_UNLOAD = 57862
const SKIP = 57863
const SRID = 57864
const THREAD_PRIORITY = 57865
const TIES = 57866
const UNBOUNDED = 57867
const VCPU = 57868
const VISIBLE = 57869
const RETURNING = 57870
const FORMAT = 57871
const TREE = 57872
const VITESS = 57873
const TRADITIONAL = 57874
const LOCAL = 57875
const LOW_PRIORITY = 57876
const NO_WRITE_TO_BINLOG = 57877
const LOGS = 57878
const ERROR = 57879
const GENERAL = 57880
const HOSTS = 57881
const OPTIMIZER_COSTS = 57882
const USER_RESOURCES = 57883
const SLOW = 57884
const CHANNEL = 57885
const RELAY = 57886
const EXPORT = 57887
const AVG_ROW_LENGTH = 57888
const CONNECTION = 57889
const CHECKSUM = 57890
const DELAY_KEY_WRITE = 57891
const ENCRYPTION = 57892
const ENGINE = 57893
const INSERT_METHOD = 57894
const MAX_ROWS = 57895
const MIN_ROWS = 57896
const PACK_KEYS = 57897
const PASSWORD = 57898
const FIXED = 57899
const DYNAMIC = 57900
const COMPRESSED = 57901
const REDUNDANT = 57902
const COMPACT = 57903
const ROW_FORMAT = 57904
const STATS_AUTO_RECALC = 57905
const STATS_PERSISTENT = 57906
const STATS_SAMPLE_PAGES = 57907
const STORAGE = 57908
const MEMORY = 57909
const DISK = 57910
const PARTITIONS = 57911
const LINEAR = 57912
const RANGE = 57913
const LIST = 57914
const SUBPARTITION = 57915
const SUBPARTITIONS = 57916
const HASH = 57917

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	593, 145,
	-2, 153,
	-1, 48,
	128, 153,
	168, 153,
	324, 153,
	-2, 468,
	-1, 55,
	35, 683,
	228, 683,
	239, 683,
	274, 697,
	275, 697,
	-2, 685,
	-1, 60,
	230, 708,
	-2, 706,
	-1, 114,
	227, 1223,
	-2, 119,
	-1, 116,
	1, 146,
	593, 146,
	-2, 153,
	-1, 127,
	129, 366,
	233, 366,
	-2, 462,
	-1, 146,
	128, 153,
	168, 153,
	324, 153,
	-2, 477,
	-1, 677,
	212, 1244,
	-2, 1240,
	-1, 678,
	212, 1245,
	-2, 1241,
	-1, 752,
	59, 776,
	-2, 791,
	-1, 789,
	144, 1641,
	-2, 112,
	-1, 790,
	144, 1487,
	-2, 113,
	-1, 796,
	144, 1569,
	-2, 1217,
	-1, 941,
	144, 1417,
	-2, 1214,
	-1, 982,
	238, 41,
	243, 41,
	-2, 377,
	-1, 1062,
	1, 516,
	593, 516,
	-2, 153,
	-1, 1295,
	59, 777,
	-2, 796,
	-1, 1296,
	59, 778,
	-2, 797,
	-1, 1349,
	128, 153,
	168, 153,
	324, 153,
	-2, 409,
	-1, 1428,
	129, 366,
	233, 366,
	-2, 462,
	-1, 1437,
	238, 42,
	243, 42,
	-2, 378,
	-1, 1730,
	212, 1249,
	-2, 1243,
	-1, 1812,
	128, 153,
	168, 153,
	324, 153,
	-2, 410,
	-1, 1819,
	25, 174,
	-2, 176,
	-1, 2054,
	86, 39,
	-2, 832,
	-1, 2105,
	77, 94,
	86, 94,
	-2, 852,
	-1, 2172,
	568, 611,
	-2, 598,
	-1, 2303,
	49, 1185,
	-2, 1179,
	-1, 2509,
	86, 39,
	-2, 833,
	-1, 2547,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 825,
	-1, 2854,
	22, 1571,
	32, 1571,
	169, 1571,
	250, 1571,
	304, 1571,
	305, 1571,
	306, 1571,
	307, 1571,
	308, 1571,
	309, 1571,
	310, 1571,
	312, 1571,
	313, 1571,
	314, 1571,
	315, 1571,
	316, 1571,
	317, 1571,
	318, 1571,
	319, 1571,
	320, 1571,
	321, 1571,
	322, 1571,
	323, 1571,
	325, 1571,
	327, 1571,
	328, 1571,
	329, 1571,
	330, 1571,
	331, 1571,
	332, 1571,
	333, 1571,
	334, 1571,
	335, 1571,
	338, 1571,
	339, 1571,
	340, 1571,
	341, 1571,
	342, 1571,
	343, 1571,
	344, 1571,
	345, 1571,
	346, 1571,
	454, 1571,
	-2, 556,
}

const yyPrivate = 57344

const yyLast = 41245

var yyAct = [...]int{
	677, 2635, 2905, 686, 2637, 2262, 2636, 2786, 2899, 679,
	1764, 1809, 2856, 2613, 2852, 2855, 1352, 2442, 2355, 2836,
	1744, 2362, 2398, 1746, 2008, 2739, 96, 1274, 602, 3,
	1126, 2314, 2364, 2650, 2425, 1879, 598, 2762, 2042, 1310,
	2424, 2518, 2261, 767, 2317, 2655, 745, 670, 37, 2260,
	2318, 186, 2512, 2315, 186, 2226, 562, 186, 1768, 668,
	2077, 680, 578, 671, 186, 595, 669, 624, 2427, 2100,
	2538, 1783, 186, 2312, 2304, 2069, 2504, 1842, 2137, 2139,
	2209, 1074, 2169, 1867, 596, 1847, 1406, 186, 2138, 1798,
	768, 594, 1012, 1297, 36, 590, 2089, 2044, 794, 944,
	38, 2061, 1700, 747, 1724, 155, 1637, 1647, 1921, 578,
	1435, 1866, 578, 186, 578, 141, 1595, 1888, 1849, 1788,
	2131, 1775, 977, 972, 2107, 749, 1787, 753, 95, 1319,
	1103, 1341, 1659, 1790, 91, 1277, 607, 1145, 1614, 791,
	1451, 1546, 1727, 1542, 1699, 770, 951, 948, 1442, 983,
	980, 1864, 1528, 978, 952, 979, 1340, 759, 1838, 1324,
	1124, 1696, 1119, 159, 119, 1058, 117, 118, 1769, 1551,
	1401, 757, 98, 1338, 754, 990, 124, 781, 1427, 125,
	755, 585, 1216, 1212, 1737, 2795, 89, 2162, 2906, 85,
	1881, 1882, 1883, 1881, 2395, 2188, 2187, 1919, 2160, 565,
	76, 2596, 756, 77, 1513, 2217, 2218, 8, 2816, 7,
	775, 120, 780, 6, 2817, 97, 1602, 2640, 188, 189,
	190, 90, 1741, 1742, 535, 761, 1601, 126, 1600, 1599,
	1598, 1597, 1584, 588, 945, 589, 1014, 2871, 2040, 970,
	2300, 2492, 956, 2071, 102, 2416, 1589, 586, 961, 1028,
	1029, 1030, 1017, 1033, 1034, 1035, 1036, 2640, 2413, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 762, 795, 748, 993,
	120, 968, 788, 967, 966, 104, 105, 769, 108, 969,
	2919, 114, 746, 2881, 183, 2896, 2817, 530, 1018, 1019,
	1020, 2639, 2414, 2572, 994, 2379, 1607, 2735, 2734, 2606,
	1016, 1015, 2607, 1304, 2918, 78, 2846, 741, 742, 743,
	744, 1146, 78, 752, 2420, 2909, 1959, 2812, 1031, 78,
	1025, 2894, 2614, 2837, 1907, 2845, 2811, 2225, 2476, 182,
	1416, 2639, 2041, 1146, 1858, 1342, 2080, 1343, 120, 2351,
	2196, 783, 784, 1110, 2195, 1112, 2116, 78, 2216, 2115,
	80, 1956, 2117, 121, 2668, 143, 1803, 965, 1852, 1067,
	1068, 2081, 2352, 2353, 1804, 1805, 164, 1093, 1689, 739,
	188, 189, 190, 1122, 738, 1743, 1081, 2787, 2128, 2252,
	1957, 1082, 87, 1109, 1111, 566, 1098, 1099, 1081, 87,
	1061, 1070, 1094, 1082, 1822, 1821, 87, 153, 2163, 2515,
	1087, 1080, 142, 1079, 565, 1178, 2467, 2444, 2465, 960,
	565, 565, 962, 565, 576, 963, 1156, 1534, 1588, 2417,
	580, 574, 1057, 161, 87, 162, 2744, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1187, 1186, 1188, 1189, 1156, 1281,
	2170, 130, 131, 152, 151, 181, 1889, 1503, 1590, 1591,
	1592, 552, 2191, 1032, 1681, 1670, 1671, 1672, 1673, 1683,
	1674, 1675, 1676, 1688, 1684, 1677, 1678, 1685, 1686, 1687,
	1679, 1680, 1682, 1095, 1927, 1121, 1107, 1100, 2437, 1922,
	1108, 1088, 1933, 1930, 1932, 1931, 2438, 1101, 2445, 1529,
	1113, 1504, 2908, 1505, 1851, 1096, 1097, 551, 1116, 1935,
	2872, 1936, 1102, 1937, 1063, 2204, 965, 2598, 957, 549,
	2597, 1152, 1106, 1938, 1144, 959, 958, 1038, 2446, 1037,
	186, 2594, 186, 1926, 1924, 186, 2722, 964, 1001, 1928,
	1892, 2253, 87, 1152, 999, 1284, 965, 1056, 147, 128,
	154, 135, 127, 1114, 148, 149, 1190, 973, 1420, 546,
	165, 974, 1784, 578, 578, 578, 974, 2368, 560, 171,
	136, 1010, 1009, 1008, 963, 1925, 1007, 1011, 1006, 1005,
	1004, 578, 578, 557, 139, 137, 132, 133, 134, 138,
	1003, 998, 1190, 949, 2903, 949, 129, 1957, 986, 947,
	2913, 2892, 949, 985, 1543, 140, 1865, 2208, 1091, 782,
	566, 1060, 1138, 2205, 1913, 1539, 566, 566, 1077, 566,
	1083, 1084, 1085, 1086, 1132, 1021, 2388, 1535, 992, 2190,
	37, 1414, 1027, 1770, 1771, 1413, 1412, 1441, 971, 2221,
	2045, 2047, 2593, 1123, 2180, 1540, 1410, 2794, 536, 2161,
	538, 553, 534, 568, 529, 567, 542, 2783, 540, 544,
	554, 545, 2378, 539, 2193, 550, 1191, 1192, 541, 555,
	556, 558, 572, 571, 559, 1971, 548, 569, 1002, 1909,
	2164, 2553, 156, 1115, 1000, 2516, 964, 1117, 1193, 1194,
	1195, 1196, 2203, 2534, 2112, 2202, 2076, 1533, 1201, 2032,
	1204, 1736, 1059, 1328, 1253, 1151, 1148, 1149, 1150, 1155,
	1157, 1154, 1072, 1153, 1810, 1267, 964, 2810, 992, 2800,
	1147, 992, 116, 1855, 1128, 1129, 991, 1151, 1148, 1149,
	1150, 1155, 1157, 1154, 1189, 1153, 1272, 992, 2745, 186,
	2638, 1440, 1147, 578, 578, 1190, 1197, 1515, 1514, 1516,
	1517, 1518, 2211, 2350, 764, 1120, 1076, 2210, 150, 186,
	1958, 1856, 2211, 86, 2806, 992, 1104, 2210, 1552, 1854,
	86, 2418, 2419, 1066, 81, 747, 1290, 86, 578, 1069,
	2638, 1078, 186, 1273, 2421, 77, 111, 578, 144, 1285,
	1141, 145, 1139, 578, 1287, 1288, 1140, 2046, 1291, 1619,
	1013, 1090, 1857, 2901, 749, 86, 2902, 1214, 2900, 1215,
	1218, 1853, 1092, 1620, 1621, 1618, 991, 791, 2589, 991,
	157, 995, 985, 1162, 995, 985, 169, 2528, 188, 189,
	190, 996, 1639, 1923, 996, 991, 1530, 1026, 1531, 1536,
	1289, 1532, 570, 1344, 95, 1273, 1142, 2358, 2245, 1660,
	1660, 997, 1985, 112, 2153, 1259, 1260, 1261, 1262, 1263,
	563, 1160, 1161, 991, 1908, 1161, 2664, 177, 2564, 985,
	988, 989, 1278, 949, 2563, 564, 1896, 982, 986, 1450,
	1449, 992, 1906, 1439, 1904, 1001, 2227, 2888, 98, 1609,
	1611, 1612, 2359, 1075, 999, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1105, 1062, 1553, 1640,
	1610, 176, 178, 179, 180, 2554, 2914, 2361, 1339, 1275,
	1180, 1181, 1182, 1183, 1184, 1185, 1187, 1186, 1188, 1189,
	1309, 2356, 1901, 2822, 2776, 87, 1286, 1901, 1329, 1306,
	2889, 2916, 2862, 2730, 186, 2366, 2367, 1162, 1402, 1617,
	1523, 1159, 2357, 1160, 1161, 795, 2860, 748, 1411, 2729,
	2247, 1334, 1335, 1162, 746, 2864, 2865, 2229, 1994, 1905,
	2366, 2367, 1162, 2720, 1903, 2823, 2777, 2861, 2629, 991,
	2628, 578, 1981, 1437, 2363, 985, 988, 989, 1521, 949,
	2571, 1446, 2570, 982, 986, 1448, 1292, 1510, 578, 578,
	2915, 578, 2396, 578, 578, 1162, 578, 578, 578, 578,
	578, 578, 2384, 1522, 981, 1184, 1185, 1187, 1186, 1188,
	1189, 578, 1447, 2473, 2135, 186, 1484, 786, 2134, 2239,
	2238, 2237, 2231, 1861, 2235, 1524, 2230, 2803, 2228, 1963,
	1964, 1965, 186, 2233, 1162, 2755, 1304, 1479, 1480, 2365,
	1508, 1520, 2232, 2802, 1980, 578, 1507, 186, 1162, 1506,
	1509, 2368, 1417, 1418, 1419, 1498, 1496, 1490, 1541, 2234,
	2236, 578, 1304, 186, 2365, 1159, 1487, 1160, 1161, 1664,
	1433, 1776, 1777, 1665, 1486, 1485, 2368, 1460, 1304, 186,
	2527, 1159, 1426, 1160, 1161, 2441, 186, 691, 692, 693,
	1159, 1445, 1160, 1161, 2780, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 578, 578, 578, 2779, 1313, 2778,
	1481, 1409, 2725, 2663, 1488, 1489, 2471, 1304, 2661, 2625,
	1494, 1495, 1162, 1159, 2568, 1160, 1161, 2560, 1444, 1453,
	2387, 1454, 2386, 1456, 1458, 186, 1131, 1462, 1464, 1466,
	1468, 1470, 1424, 1436, 1423, 1422, 1182, 1183, 1184, 1185,
	1187, 1186, 1188, 1189, 1443, 1443, 2360, 1314, 2144, 1556,
	2132, 1548, 1159, 1269, 1160, 1161, 1560, 1917, 1562, 1563,
	1564, 1565, 188, 189, 190, 1569, 1159, 1162, 1160, 1161,
	1482, 1638, 1916, 1162, 1767, 1644, 1644, 1641, 1645, 1583,
	1749, 1642, 1642, 1585, 1650, 578, 1415, 1549, 1519, 1511,
	1554, 1555, 1501, 1544, 2017, 1304, 1497, 1493, 1492, 1491,
	578, 578, 1315, 1118, 1559, 94, 120, 968, 1304, 967,
	966, 1566, 1567, 1568, 2067, 2907, 2752, 1615, 1162, 2751,
	1661, 1622, 2714, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1697, 1613, 2713, 1558,
	1159, 1623, 1160, 1161, 2877, 1304, 2612, 1178, 1162, 2009,
	1174, 2171, 1175, 2078, 1579, 1580, 1581, 2067, 2843, 1582,
	186, 2067, 2830, 1304, 1728, 578, 1176, 1177, 1173, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1187, 1186, 1188, 1189,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1164, 1697, 186,
	1616, 1976, 578, 2149, 101, 1159, 1818, 1160, 1161, 2078,
	1975, 1159, 186, 1160, 1161, 100, 578, 99, 1162, 2067,
	2826, 186, 1754, 186, 1755, 186, 186, 578, 2818, 1304,
	578, 1646, 2067, 2796, 2086, 1317, 1162, 92, 1652, 1653,
	2548, 578, 1730, 188, 189, 190, 2529, 2561, 93, 1728,
	1732, 1733, 1158, 95, 1819, 1162, 1159, 791, 1160, 1161,
	791, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1186,
	1188, 1189, 95, 188, 189, 190, 1974, 2119, 2805, 1162,
	2527, 1760, 2604, 2793, 1304, 1729, 1159, 1731, 1160, 1161,
	1734, 1735, 2488, 1304, 1786, 2868, 578, 188, 189, 190,
	1316, 1877, 1304, 1868, 1869, 1870, 1162, 2067, 1872, 1874,
	1876, 92, 1828, 1829, 1830, 1831, 2313, 1730, 94, 2890,
	2067, 2721, 93, 578, 2604, 1304, 2527, 1759, 1162, 578,
	1446, 761, 1748, 1446, 1823, 1446, 1824, 1825, 1826, 1827,
	1814, 1900, 1796, 2067, 2602, 1813, 1159, 2086, 1160, 1161,
	2488, 678, 1834, 1835, 1836, 1837, 1762, 1901, 1304, 1890,
	1781, 2833, 2791, 1817, 1159, 1162, 1160, 1161, 1844, 2532,
	1304, 578, 1162, 1638, 2374, 1779, 1304, 2288, 1850, 1638,
	1638, 1158, 1304, 1159, 1801, 1160, 1161, 2002, 1304, 1304,
	2376, 2375, 2372, 2373, 1816, 795, 1815, 2345, 795, 1802,
	1800, 2063, 187, 2372, 2371, 187, 1957, 1159, 187, 1160,
	1161, 2718, 2085, 579, 1972, 187, 94, 186, 1860, 2086,
	1304, 2002, 1887, 187, 186, 1972, 1304, 1957, 2189, 186,
	186, 1405, 2174, 186, 1159, 186, 1160, 1161, 187, 1845,
	1895, 87, 186, 1898, 1902, 1899, 1840, 1841, 2590, 186,
	1859, 1991, 1863, 1162, 2490, 1990, 1159, 1871, 1160, 1161,
	579, 2167, 2168, 579, 187, 579, 2086, 188, 189, 190,
	1910, 1875, 993, 1972, 1845, 1894, 1893, 186, 578, 1912,
	1897, 2067, 2066, 1162, 1901, 1914, 1915, 1162, 1178, 1911,
	2220, 1405, 1404, 1159, 1162, 1160, 1161, 994, 1162, 100,
	1159, 1901, 1160, 1161, 1162, 1350, 1349, 1443, 1884, 1162,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1186, 1188,
	1189, 1178, 2108, 1970, 1162, 1774, 1948, 1949, 1162, 1308,
	2108, 1951, 1178, 1920, 1162, 2486, 1739, 1593, 1162, 1538,
	1952, 1336, 976, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1187, 1186, 1188, 1189, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1187, 1186, 1188, 1189, 2479, 1162, 1972, 975, 2478,
	2741, 1311, 1615, 2711, 1941, 1967, 2026, 1969, 2675, 2399,
	2025, 1159, 2588, 1160, 1161, 2109, 751, 2136, 2585, 1162,
	2141, 2024, 2566, 2109, 2111, 1968, 1162, 188, 189, 190,
	2482, 1873, 1957, 1162, 2481, 1061, 2023, 1162, 1407, 2443,
	2022, 1159, 1843, 1160, 1161, 1159, 2021, 1160, 1161, 2885,
	2020, 1955, 1159, 1162, 1160, 1161, 1159, 2439, 1160, 1161,
	186, 2401, 1159, 2397, 1160, 1161, 1162, 1159, 186, 1160,
	1161, 1162, 2175, 578, 1644, 1616, 2051, 1966, 2019, 578,
	1642, 1839, 1159, 2055, 1160, 1161, 1159, 2038, 1160, 1161,
	578, 2049, 1159, 87, 1160, 1161, 1159, 1833, 1160, 1161,
	1162, 2018, 1832, 1526, 1438, 1162, 1434, 2742, 2012, 1162,
	101, 1984, 1403, 186, 1858, 2011, 186, 113, 1982, 2010,
	2573, 100, 1752, 99, 1159, 1475, 1160, 1161, 2539, 2540,
	2883, 2118, 94, 2082, 2857, 2007, 2815, 2760, 2335, 2140,
	2542, 2393, 2392, 2336, 2391, 2313, 2068, 1159, 2006, 1160,
	1161, 37, 2154, 2005, 1159, 1730, 1160, 1161, 1942, 1586,
	2102, 1159, 2577, 1160, 1161, 1159, 2545, 1160, 1161, 1312,
	2574, 2575, 2576, 2544, 2064, 1476, 1477, 1478, 1472, 578,
	2332, 1159, 2003, 1160, 1161, 186, 2141, 1999, 2029, 2030,
	1304, 1998, 186, 1278, 1159, 2039, 1160, 1161, 1729, 1159,
	2333, 1160, 1161, 2129, 2130, 2334, 578, 2101, 2331, 2578,
	2579, 2874, 2844, 578, 2060, 1766, 2166, 1446, 1446, 1758,
	2065, 2645, 578, 2644, 2075, 1473, 1474, 2533, 1159, 2293,
	1160, 1161, 2106, 1159, 2186, 1160, 1161, 1159, 2122, 1160,
	1161, 2292, 2110, 2520, 2185, 186, 186, 186, 186, 186,
	2654, 2519, 1850, 2775, 2113, 2120, 2337, 2123, 2095, 2096,
	2656, 2523, 186, 186, 2143, 765, 2305, 2307, 2302, 2146,
	2147, 2643, 1537, 766, 2133, 2308, 737, 2370, 186, 2091,
	2094, 2095, 2096, 2092, 2126, 2093, 2097, 2142, 2145, 2539,
	2540, 1656, 2151, 1023, 1022, 92, 92, 1638, 2453, 2140,
	2155, 2156, 2157, 94, 2150, 1657, 93, 93, 2214, 1130,
	101, 187, 2182, 187, 2184, 2181, 187, 121, 2525, 94,
	1426, 100, 2911, 99, 1776, 1777, 2389, 2176, 2177, 747,
	1945, 1644, 94, 1644, 2792, 2737, 1644, 1642, 2369, 1642,
	2099, 1644, 1642, 1763, 579, 579, 579, 1642, 2183, 2244,
	1934, 2240, 2291, 578, 773, 774, 2263, 2505, 2263, 1961,
	2290, 2263, 579, 579, 99, 2767, 2263, 2651, 2766, 578,
	2662, 2275, 2276, 2277, 2278, 2268, 2223, 2660, 2206, 2265,
	2269, 101, 2222, 2282, 186, 2659, 2652, 2586, 578, 2524,
	2522, 2402, 100, 661, 99, 1885, 1421, 578, 2212, 772,
	2224, 2213, 101, 2241, 578, 578, 100, 186, 186, 186,
	186, 186, 2513, 100, 2091, 2094, 2095, 2096, 2092, 186,
	2093, 2097, 2078, 2063, 186, 2256, 186, 2282, 186, 2316,
	1992, 186, 186, 186, 2316, 2887, 2886, 2325, 1750, 1330,
	2886, 2310, 2295, 1321, 106, 107, 2344, 2887, 2781, 1302,
	1298, 753, 2559, 2296, 763, 577, 2281, 103, 88, 1,
	2859, 2283, 547, 1740, 1299, 2319, 2385, 1276, 561, 1512,
	1502, 1291, 2615, 1698, 2738, 186, 2407, 2405, 2297, 1891,
	2584, 1848, 2294, 2270, 2271, 2272, 2273, 2274, 578, 1756,
	1757, 1301, 984, 1300, 146, 1811, 578, 2346, 754, 1812,
	2347, 186, 793, 2839, 755, 946, 2423, 953, 110, 2287,
	942, 186, 109, 95, 2338, 2412, 987, 1089, 2342, 2404,
	187, 2348, 1886, 2605, 579, 579, 186, 2327, 2328, 186,
	2330, 1548, 2127, 2326, 1820, 2409, 2329, 2408, 2380, 2454,
	187, 2284, 2285, 2286, 2406, 2324, 1356, 2354, 2381, 1302,
	1298, 1354, 1355, 2382, 2383, 1353, 1358, 1357, 1993, 579,
	2491, 1587, 2431, 187, 1299, 575, 2098, 184, 579, 2430,
	1345, 1322, 1024, 537, 579, 2377, 1918, 543, 1850, 1202,
	2422, 2289, 2114, 792, 785, 1751, 2434, 2403, 2053, 1295,
	1296, 1301, 2321, 1300, 2517, 2301, 2303, 2070, 2306, 2299,
	2774, 2653, 2831, 2485, 2124, 1318, 2449, 2448, 1983, 578,
	186, 1209, 1658, 1791, 2451, 2452, 1608, 600, 599, 597,
	2056, 2079, 1165, 681, 2043, 1331, 2457, 2090, 2088, 2463,
	2087, 1943, 2456, 1797, 2460, 2461, 2541, 2462, 2537, 2851,
	2464, 1793, 2466, 1789, 2468, 2062, 608, 601, 593, 2556,
	2429, 2192, 2440, 2194, 2125, 2436, 1143, 1294, 587, 955,
	1655, 2743, 2798, 1960, 2475, 1293, 186, 1668, 1669, 2394,
	2172, 1878, 63, 41, 582, 2511, 2870, 1134, 779, 32,
	31, 30, 2506, 2507, 2562, 29, 28, 23, 22, 186,
	21, 20, 19, 25, 18, 2514, 17, 16, 2521, 2546,
	2415, 2880, 2910, 115, 50, 47, 2536, 45, 2526, 186,
	123, 122, 186, 186, 186, 48, 44, 1064, 42, 27,
	2543, 26, 578, 578, 15, 187, 14, 2551, 2552, 13,
	12, 11, 2591, 2592, 10, 2550, 2549, 9, 2431, 5,
	4, 35, 34, 33, 1137, 2430, 2557, 2558, 24, 2,
	2567, 2411, 2569, 2410, 2159, 1880, 0, 0, 0, 0,
	0, 0, 579, 0, 578, 578, 578, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	579, 0, 579, 0, 579, 579, 0, 579, 579, 579,
	579, 579, 579, 0, 0, 2611, 0, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 187, 0, 0, 0,
	1644, 0, 1644, 0, 2609, 2610, 1642, 0, 1642, 0,
	0, 0, 0, 187, 0, 0, 0, 2595, 0, 186,
	0, 2599, 2600, 2601, 0, 2263, 579, 2263, 187, 2624,
	2621, 0, 0, 0, 2620, 0, 0, 0, 0, 2648,
	0, 2632, 579, 578, 187, 578, 2631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2641, 0,
	187, 0, 1644, 0, 2677, 0, 2316, 187, 1642, 2658,
	0, 2669, 2657, 747, 2649, 0, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 579, 579, 579, 2671, 37,
	2667, 2665, 0, 2673, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 2319, 0, 0, 2681, 2319, 0, 2719,
	0, 0, 186, 0, 0, 0, 187, 0, 0, 0,
	2678, 2679, 0, 0, 0, 578, 0, 0, 0, 0,
	2715, 0, 2717, 0, 0, 2731, 2716, 0, 0, 0,
	0, 0, 0, 0, 0, 2732, 793, 793, 793, 2733,
	2758, 0, 2757, 578, 1644, 2740, 2761, 578, 578, 0,
	1642, 0, 0, 0, 1133, 1135, 0, 0, 2723, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	2773, 579, 579, 2771, 2768, 2769, 2785, 2770, 0, 2726,
	2727, 2728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 578, 2782, 0, 0, 0, 2784, 0, 0,
	0, 0, 2790, 0, 0, 2788, 0, 186, 0, 0,
	0, 0, 2319, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 578, 186, 0, 0, 579, 0, 0, 0,
	2801, 0, 2807, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 2804, 0, 0,
	187, 0, 0, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 578, 37, 2797, 579, 0, 0,
	0, 0, 187, 0, 187, 0, 187, 187, 579, 0,
	0, 579, 0, 0, 0, 0, 578, 578, 0, 0,
	2316, 0, 579, 2824, 0, 0, 1282, 1283, 2834, 578,
	0, 0, 2832, 0, 0, 0, 0, 0, 186, 578,
	0, 2838, 2829, 0, 0, 0, 2740, 2840, 2847, 0,
	37, 0, 0, 0, 0, 0, 0, 0, 2850, 0,
	2858, 1326, 2866, 2863, 0, 0, 0, 0, 0, 0,
	793, 2873, 0, 0, 0, 0, 1346, 579, 2882, 578,
	2879, 0, 2884, 0, 0, 0, 0, 0, 578, 2891,
	182, 0, 0, 0, 1644, 0, 2898, 2893, 0, 0,
	1642, 2897, 2895, 0, 579, 0, 2904, 0, 0, 0,
	579, 0, 0, 0, 121, 0, 2912, 0, 0, 0,
	2917, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 2921, 1644, 0, 2920, 2758, 2922, 2923, 1642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 181, 0, 0, 0,
	187, 187, 0, 0, 187, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 579,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 1452, 1452, 0, 1452, 0, 1452, 1452, 0, 1461,
	1452, 1452, 1452, 1452, 1452, 1303, 0, 0, 0, 0,
	0, 0, 1270, 1270, 946, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 533, 0, 0,
	573, 121, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 164, 533, 0, 793, 793, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 579, 0, 778, 0, 778, 0,
	579, 0, 0, 156, 0, 0, 533, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 187, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 1666, 1667, 0, 0, 0, 0, 0,
	0, 0, 2878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1373, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 0, 187, 793, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 1753, 0,
	0, 157, 0, 579, 0, 0, 0, 169, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 1765, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 793, 187, 187, 0, 0, 0, 177, 0,
	793, 0, 0, 793, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 1361,
	0, 0, 176, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2165, 0, 0, 0, 0, 953,
	1373, 0, 0, 0, 0, 0, 0, 121, 0, 143,
	156, 0, 0, 0, 579, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	579, 0, 953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 579,
	1374, 153, 0, 0, 0, 0, 142, 0, 579, 0,
	0, 0, 0, 0, 0, 579, 579, 0, 187, 187,
	187, 187, 187, 0, 946, 0, 0, 161, 0, 162,
	187, 0, 0, 0, 0, 187, 0, 187, 0, 187,
	0, 0, 187, 187, 187, 1429, 1430, 152, 151, 181,
	0, 0, 0, 0, 1387, 1390, 1391, 1392, 1393, 1394,
	1395, 0, 1396, 1397, 1398, 1399, 1400, 1375, 1376, 1377,
	1378, 1359, 1360, 1388, 0, 1362, 0, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 187, 1361, 1372, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 0, 157, 579,
	0, 0, 0, 0, 169, 0, 0, 579, 0, 0,
	0, 0, 187, 533, 0, 533, 0, 0, 533, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 147, 1431, 154, 177, 1428, 0, 148, 149,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 1374, 0,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 187, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 0,
	1396, 1397, 1398, 1399, 1400, 1375, 1376, 1377, 1378, 1359,
	1360, 1388, 0, 1362, 0, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 0, 0, 1372, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 156, 187, 0, 0,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	187, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	1305, 1307, 0, 2072, 0, 0, 0, 0, 0, 0,
	187, 0, 533, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 579, 579, 0, 0, 0, 0, 0,
	0, 0, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 0, 0, 0, 0,
	0, 0, 1389, 0, 0, 579, 579, 579, 579, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 2173, 0, 0, 0,
	187, 0, 0, 0, 0, 2178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 579, 0, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 1270, 0, 1270, 0, 0, 1270, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 793, 1271, 579, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 1271, 0, 0, 0, 579, 533, 0,
	0, 2298, 0, 0, 0, 0, 0, 0, 0, 0,
	793, 0, 0, 0, 1270, 1499, 0, 2323, 1452, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 579, 187, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 1571,
	533, 533, 533, 533, 533, 533, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 946, 0, 0, 1270, 579, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 777, 0, 0, 0, 0, 778,
	778, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	1738, 0, 2298, 0, 0, 0, 778, 1547, 778, 778,
	778, 778, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 0, 0, 0, 0,
	0, 0, 1547, 0, 533, 0, 533, 0, 533, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2616, 2617, 2618,
	2619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 2670, 0, 2672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 533, 533, 0, 0, 533, 0, 1946, 0,
	0, 0, 1765, 0, 0, 533, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2764, 0, 0, 0,
	2764, 2764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 1977, 0, 1978, 1979,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 1765,
	1988, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	0, 0, 0, 0, 0, 0, 0, 1995, 1996, 1997,
	0, 0, 2000, 0, 2001, 1765, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 0, 2013, 2014, 2015, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	2028, 0, 0, 0, 0, 1765, 0, 2033, 2034, 2035,
	2036, 2037, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 0, 0, 0, 0, 778,
	778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 533, 0, 1270, 0, 2825, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2848, 0, 1279, 0, 0, 0, 0, 0,
	0, 0, 2853, 0, 0, 0, 533, 1163, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1210, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 532, 0,
	0, 2853, 0, 0, 0, 0, 0, 0, 581, 0,
	0, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 533,
	533, 533, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 2251,
	0, 0, 0, 0, 0, 0, 778, 1320, 0, 0,
	0, 0, 0, 0, 2264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2279, 2280, 0, 0, 0,
	0, 1271, 0, 1271, 0, 0, 1271, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 79, 0, 0, 0, 0, 0, 0, 0, 2322,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 2340, 2341, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 1271,
	533, 533, 533, 533, 533, 0, 0, 0, 0, 0,
	0, 0, 2339, 0, 0, 0, 0, 533, 0, 1499,
	0, 533, 0, 0, 533, 2349, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 1408,
	0, 0, 0, 0, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 2455, 0, 0, 0, 0,
	0, 0, 2459, 0, 0, 0, 0, 0, 0, 533,
	0, 0, 533, 0, 0, 0, 2469, 2470, 2472, 2474,
	0, 0, 0, 0, 0, 0, 2480, 0, 0, 0,
	2483, 2484, 0, 0, 0, 0, 2487, 0, 0, 0,
	0, 0, 2489, 0, 0, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 0, 0, 2503, 0, 0,
	0, 0, 0, 2508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 2530, 2531, 0, 0,
	2535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1065, 0, 1071, 0, 2547, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 1604, 1605, 1606, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 533, 533, 533, 0, 0,
	2603, 0, 0, 0, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1690, 1691, 1692,
	1693, 1694, 1695, 591, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 0, 0, 0,
	0, 2630, 0, 0, 0, 0, 0, 2634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 0, 0, 0, 0,
	1271, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2746, 2747,
	2748, 0, 2749, 2750, 0, 1499, 0, 2753, 1846, 2754,
	0, 2756, 2759, 1125, 1125, 1125, 0, 0, 2763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2789, 0, 0, 0,
	750, 1198, 1199, 1200, 0, 1203, 0, 1205, 1206, 1207,
	1208, 0, 1211, 1213, 1213, 0, 1213, 1217, 1217, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 0, 1254, 1255, 1256, 1257, 1258, 2809,
	0, 0, 0, 1217, 1217, 1217, 1217, 1217, 1351, 0,
	1499, 0, 182, 2814, 0, 0, 0, 0, 2819, 0,
	0, 0, 0, 1425, 2820, 2821, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 143, 0,
	0, 0, 2827, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 750, 0, 0,
	153, 750, 0, 0, 0, 142, 0, 750, 0, 1483,
	0, 2869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2875, 0, 0, 161, 2876, 162, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 1429, 1430, 152, 151, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	1561, 0, 0, 0, 0, 0, 78, 39, 40, 80,
	0, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	43, 69, 70, 0, 67, 71, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 87, 0, 1596,
	0, 0, 0, 682, 689, 690, 691, 692, 693, 683,
	685, 147, 1431, 154, 684, 1428, 0, 148, 149, 0,
	0, 0, 56, 165, 0, 0, 0, 687, 694, 695,
	0, 0, 171, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2432, 2433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 2683, 2685, 2684, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 630, 0, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1785, 0, 0,
	1596, 0, 0, 0, 0, 55, 83, 82, 0, 0,
	64, 65, 53, 0, 0, 0, 0, 0, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1125, 1125, 1125, 2219, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 144, 0, 0, 145, 2242, 2243, 0, 0, 0,
	2246, 0, 0, 0, 0, 2248, 2249, 2250, 0, 0,
	0, 0, 0, 2254, 2255, 0, 0, 1701, 2257, 0,
	2258, 2259, 0, 157, 0, 2266, 2267, 0, 0, 169,
	0, 0, 0, 1701, 1701, 1701, 1701, 1701, 591, 591,
	591, 591, 0, 0, 0, 0, 0, 672, 0, 0,
	676, 0, 673, 674, 0, 0, 0, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2311, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 81, 176, 178, 179, 180, 0, 2343,
	0, 1596, 0, 2686, 2687, 0, 0, 0, 1929, 0,
	0, 0, 0, 1939, 1940, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 86, 0, 1947, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2400, 0,
	0, 1953, 672, 0, 625, 676, 627, 673, 674, 0,
	623, 626, 675, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	629, 2682, 2688, 2689, 2690, 2698, 2700, 650, 2699, 2701,
	2702, 2703, 2706, 2707, 2708, 2709, 2704, 2705, 2710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2477, 87, 0, 0, 954, 0, 0, 682,
	689, 690, 691, 692, 693, 683, 685, 0, 0, 0,
	684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 694, 695, 0, 0, 0, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 2432, 2433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2152,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2622, 0, 2623, 0,
	0, 0, 0, 2626, 2627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2197,
	2198, 2199, 2200, 2201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 2207, 0, 0,
	0, 0, 0, 2666, 0, 0, 0, 0, 0, 0,
	0, 0, 2215, 0, 2674, 0, 0, 2676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2712, 0, 0, 0, 0, 0, 2052, 0, 2031,
	689, 690, 0, 0, 0, 0, 1643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 2084, 0, 0, 0, 0,
	0, 0, 0, 2103, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2772, 591, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2179, 0, 0, 0, 0, 0, 0,
	2813, 0, 0, 0, 0, 2426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2447, 0, 0, 2450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 690, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2320, 0, 79, 0, 0, 1792, 1792, 1792,
	1792, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2565, 2103, 0, 0, 0, 1792, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2580, 0, 0, 2581, 2582, 2583, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2642, 0, 2646, 2647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2320, 0, 79, 0, 2320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2799, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 924, 910, 455, 79, 857,
	927, 826, 845, 937, 848, 851, 892, 805, 870, 375,
	842, 798, 830, 801, 837, 802, 828, 859, 249, 825,
	912, 874, 926, 331, 246, 807, 831, 389, 847, 197,
	894, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 933, 335, 880, 2828, 440,
	360, 0, 0, 79, 861, 916, 868, 906, 856, 893,
	815, 879, 928, 843, 889, 929, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	2841, 0, 2842, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 839, 886, 923, 840, 888, 244, 291, 251,
	243, 459, 934, 915, 0, 0, 214, 925, 863, 0,
	891, 0, 940, 800, 882, 0, 803, 806, 936, 919,
	834, 254, 0, 0, 0, 0, 0, 0, 0, 860,
	869, 903, 854, 0, 0, 0, 0, 0, 0, 0,
	832, 0, 878, 0, 0, 0, 811, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 858,
	0, 0, 0, 814, 0, 833, 904, 0, 797, 274,
	808, 361, 236, 0, 908, 918, 855, 492, 922, 853,
	852, 898, 812, 914, 846, 330, 810, 299, 192, 210,
	0, 844, 371, 412, 418, 913, 829, 838, 234, 836,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	877, 896, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 1127, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 824, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 909,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 901, 939, 384, 417,
	224, 478, 439, 819, 823, 817, 883, 818, 872, 873,
	820, 930, 931, 932, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 905, 813, 0, 821, 822, 0, 911,
	920, 921, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	876, 191, 207, 333, 935, 406, 267, 506, 486, 482,
	799, 816, 241, 827, 835, 0, 841, 849, 850, 862,
	864, 865, 866, 867, 884, 885, 887, 895, 897, 900,
	902, 907, 917, 938, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 875,
	881, 344, 260, 279, 290, 890, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 871, 899, 340, 456, 457,
	286, 357, 0, 0, 924, 910, 455, 0, 857, 927,
	826, 845, 937, 848, 851, 892, 805, 870, 375, 842,
	798, 830, 801, 837, 802, 828, 859, 249, 825, 912,
	874, 926, 331, 246, 807, 831, 389, 847, 197, 894,
	430, 233, 341, 338, 462, 261, 252, 248, 232, 287,
	347, 387, 449, 381, 933, 335, 880, 0, 440, 360,
	0, 0, 0, 861, 916, 868, 906, 856, 893, 815,
	879, 928, 843, 889, 929, 293, 231, 196, 372, 441,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 839, 886, 923, 840, 888, 244, 291, 251, 243,
	459, 934, 915, 0, 0, 214, 925, 863, 0, 891,
	0, 940, 800, 882, 0, 803, 806, 936, 919, 834,
	254, 0, 0, 0, 0, 0, 0, 0, 860, 869,
	903, 854, 0, 0, 0, 0, 0, 2350, 0, 832,
	0, 878, 0, 0, 0, 811, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 858, 0,
	0, 0, 814, 0, 833, 904, 0, 797, 274, 808,
	361, 236, 0, 908, 918, 855, 492, 922, 853, 852,
	898, 812, 914, 846, 330, 810, 299, 192, 210, 0,
	844, 371, 412, 418, 913, 829, 838, 234, 836, 416,
	385, 476, 218, 263, 409, 390, 414, 397, 266, 877,
	896, 415, 336, 464, 404, 474, 493, 494, 242, 365,
	483, 453, 489, 505, 211, 239, 379, 446, 479, 437,
	358, 460, 461, 298, 436, 272, 195, 334, 499, 209,
	424, 226, 216, 202, 448, 472, 223, 428, 0, 0,
	507, 204, 470, 445, 354, 295, 296, 203, 0, 408,
	247, 270, 237, 374, 467, 468, 235, 508, 213, 488,
	206, 1127, 487, 367, 463, 471, 355, 346, 205, 469,
	353, 345, 301, 320, 321, 259, 281, 402, 339, 403,
	282, 363, 362, 364, 198, 480, 0, 199, 0, 442,
	481, 509, 219, 220, 221, 824, 258, 262, 269, 271,
	277, 278, 285, 332, 378, 401, 399, 405, 909, 458,
	475, 484, 491, 497, 498, 500, 501, 502, 503, 504,
	366, 284, 438, 300, 337, 901, 939, 384, 417, 224,
	478, 439, 819, 823, 817, 883, 818, 872, 873, 820,
	930, 931, 932, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 905, 813, 0, 821, 822, 0, 911, 920,
	921, 528, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 876,
	191, 207, 333, 935, 406, 267, 506, 486, 482, 799,
	816, 241, 827, 835, 0, 841, 849, 850, 862, 864,
	865, 866, 867, 884, 885, 887, 895, 897, 900, 902,
	907, 917, 938, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	431, 432, 433, 434, 435, 443, 447, 465, 466, 477,
	490, 495, 425, 276, 473, 496, 0, 342, 875, 881,
	344, 260, 279, 290, 890, 485, 444, 212, 413, 268,
	201, 230, 215, 238, 253, 256, 294, 352, 359, 388,
	392, 273, 250, 228, 410, 225, 429, 450, 451, 452,
	454, 356, 245, 391, 871, 899, 340, 456, 457, 286,
	357, 0, 0, 924, 910, 455, 0, 857, 927, 826,
	845, 937, 848, 851, 892, 805, 870, 375, 842, 798,
	830, 801, 837, 802, 828, 859, 249, 825, 912, 874,
	926, 331, 246, 807, 831, 389, 847, 197, 894, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 933, 335, 880, 0, 440, 360, 0,
	0, 0, 861, 916, 868, 906, 856, 893, 815, 879,
	928, 843, 889, 929, 293, 231, 196, 372, 441, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	839, 886, 923, 840, 888, 244, 291, 251, 243, 459,
	934, 915, 0, 0, 214, 925, 863, 0, 891, 0,
	940, 800, 882, 0, 803, 806, 936, 919, 834, 254,
	0, 0, 0, 0, 0, 0, 0, 860, 869, 903,
	854, 0, 0, 0, 0, 0, 2309, 0, 832, 0,
	878, 0, 0, 0, 811, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 858, 0, 0,
	0, 814, 0, 833, 904, 0, 797, 274, 808, 361,
	236, 0, 908, 918, 855, 492, 922, 853, 852, 898,
	812, 914, 846, 330, 810, 299, 192, 210, 0, 844,
	371, 412, 418, 913, 829, 838, 234, 836, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 877, 896,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	1127, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 824, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 909, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 901, 939, 384, 417, 224, 478,
	439, 819, 823, 817, 883, 818, 872, 873, 820, 930,
	931, 932, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 905, 813, 0, 821, 822, 0, 911, 920, 921,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 876, 191,
	207, 333, 935, 406, 267, 506, 486, 482, 799, 816,
	241, 827, 835, 0, 841, 849, 850, 862, 864, 865,
	866, 867, 884, 885, 887, 895, 897, 900, 902, 907,
	917, 938, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 875, 881, 344,
	260, 279, 290, 890, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 871, 899, 340, 456, 457, 286, 357,
	0, 0, 924, 910, 455, 0, 857, 927, 826, 845,
	937, 848, 851, 892, 805, 870, 375, 842, 798, 830,
	801, 837, 802, 828, 859, 249, 825, 912, 874, 926,
	331, 246, 807, 831, 389, 847, 197, 894, 430, 233,
	341, 338, 462, 261, 252, 248, 232, 287, 347, 387,
	449, 381, 933, 335, 880, 0, 440, 360, 0, 0,
	0, 861, 916, 868, 906, 856, 893, 815, 879, 928,
	843, 889, 929, 293, 231, 196, 372, 441, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 839,
	886, 923, 840, 888, 244, 291, 251, 243, 459, 934,
	915, 0, 0, 214, 925, 863, 0, 891, 0, 940,
	800, 882, 0, 803, 806, 936, 919, 834, 254, 0,
	0, 0, 0, 0, 0, 0, 860, 869, 903, 854,
	0, 0, 0, 0, 0, 1780, 0, 832, 0, 878,
	0, 0, 0, 811, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 0, 0, 0,
	814, 0, 833, 904, 0, 797, 274, 808, 361, 236,
	0, 908, 918, 855, 492, 922, 853, 852, 898, 812,
	914, 846, 330, 810, 299, 192, 210, 0, 844, 371,
	412, 418, 913, 829, 838, 234, 836, 416, 385, 476,
	218, 263, 409, 390, 414, 397, 266, 877, 896, 415,
	336, 464, 404, 474, 493, 494, 242, 365, 483, 453,
	489, 505, 211, 239, 379, 446, 479, 437, 358, 460,
	461, 298, 436, 272, 195, 334, 499, 209, 424, 226,
	216, 202, 448, 472, 223, 428, 0, 0, 507, 204,
	470, 445, 354, 295, 296, 203, 0, 408, 247, 270,
	237, 374, 467, 468, 235, 508, 213, 488, 206, 1127,
	487, 367, 463, 471, 355, 346, 205, 469, 353, 345,
	301, 320, 321, 259, 281, 402, 339, 403, 282, 363,
	362, 364, 198, 480, 0, 199, 0, 442, 481, 509,
	219, 220, 221, 824, 258, 262, 269, 271, 277, 278,
	285, 332, 378, 401, 399, 405, 909, 458, 475, 484,
	491, 497, 498, 500, 501, 502, 503, 504, 366, 284,
	438, 300, 337, 901, 939, 384, 417, 224, 478, 439,
	819, 823, 817, 883, 818, 872, 873, 820, 930, 931,
	932, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	905, 813, 0, 821, 822, 0, 911, 920, 921, 528,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 876, 191, 207,
	333, 935, 406, 267, 506, 486, 482, 799, 816, 241,
	827, 835, 0, 841, 849, 850, 862, 864, 865, 866,
	867, 884, 885, 887, 895, 897, 900, 902, 907, 917,
	938, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 348,
	349, 350, 351, 368, 369, 370, 373, 376, 377, 380,
	382, 383, 386, 393, 394, 395, 396, 398, 400, 407,
	411, 419, 420, 421, 422, 423, 426, 427, 431, 432,
	433, 434, 435, 443, 447, 465, 466, 477, 490, 495,
	425, 276, 473, 496, 0, 342, 875, 881, 344, 260,
	279, 290, 890, 485, 444, 212, 413, 268, 201, 230,
	215, 238, 253, 256, 294, 352, 359, 388, 392, 273,
	250, 228, 410, 225, 429, 450, 451, 452, 454, 356,
	245, 391, 871, 899, 340, 456, 457, 286, 357, 0,
	0, 924, 910, 455, 0, 857, 927, 826, 845, 937,
	848, 851, 892, 805, 870, 375, 842, 798, 830, 801,
	837, 802, 828, 859, 249, 825, 912, 874, 926, 331,
	246, 807, 831, 389, 847, 197, 894, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 933, 335, 880, 0, 440, 360, 0, 0, 0,
	861, 916, 868, 906, 856, 893, 815, 879, 928, 843,
	889, 929, 293, 231, 196, 372, 441, 265, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 839, 886,
	923, 840, 888, 244, 291, 251, 243, 459, 934, 915,
	0, 0, 214, 925, 863, 0, 891, 0, 940, 800,
	882, 0, 803, 806, 936, 919, 834, 254, 0, 0,
	0, 0, 0, 0, 0, 860, 869, 903, 854, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 878, 0,
	0, 0, 811, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 814,
	0, 833, 904, 0, 797, 274, 808, 361, 236, 0,
	908, 918, 855, 492, 922, 853, 852, 898, 812, 914,
	846, 330, 810, 299, 192, 210, 0, 844, 371, 412,
	418, 913, 829, 838, 234, 836, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 877, 896, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 1127, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 824, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 909, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 901, 939, 384, 417, 224, 478, 439, 819,
	823, 817, 883, 818, 872, 873, 820, 930, 931, 932,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 905,
	813, 0, 821, 822, 0, 911, 920, 921, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 876, 191, 207, 333,
	935, 406, 267, 506, 486, 482, 799, 816, 241, 827,
	835, 0, 841, 849, 850, 862, 864, 865, 866, 867,
	884, 885, 887, 895, 897, 900, 902, 907, 917, 938,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 875, 881, 344, 260, 279,
	290, 890, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 871, 899, 340, 456, 457, 286, 357, 0, 0,
	924, 910, 455, 0, 857, 927, 826, 845, 937, 848,
	851, 892, 805, 870, 375, 842, 798, 830, 801, 837,
	802, 828, 859, 249, 825, 912, 874, 926, 331, 246,
	807, 831, 389, 847, 197, 894, 430, 233, 341, 338,
	462, 261, 252, 248, 232, 287, 347, 387, 449, 381,
	933, 335, 880, 0, 440, 360, 0, 0, 0, 861,
	916, 868, 906, 856, 893, 815, 879, 928, 843, 889,
	929, 293, 231, 196, 372, 441, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 839, 886, 923,
	840, 888, 244, 291, 251, 243, 459, 934, 915, 0,
	0, 214, 925, 863, 0, 891, 0, 940, 800, 882,
	0, 803, 806, 936, 919, 834, 254, 0, 0, 0,
	0, 0, 0, 0, 860, 869, 903, 854, 0, 0,
	0, 0, 0, 0, 0, 832, 0, 878, 0, 0,
	0, 811, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 858, 0, 0, 0, 814, 0,
	833, 904, 0, 797, 274, 808, 361, 236, 0, 908,
	918, 855, 492, 922, 853, 852, 898, 812, 914, 846,
	330, 810, 299, 192, 210, 0, 844, 371, 412, 418,
	913, 829, 838, 234, 836, 416, 385, 476, 218, 263,
	409, 390, 414, 397, 266, 877, 896, 415, 336, 464,
	404, 474, 493, 494, 242, 365, 483, 453, 489, 505,
	211, 239, 379, 446, 479, 437, 358, 460, 461, 298,
	436, 272, 195, 334, 499, 209, 424, 226, 216, 202,
	448, 472, 223, 428, 0, 0, 507, 204, 470, 445,
	354, 295, 296, 203, 0, 408, 247, 270, 237, 374,
	467, 468, 235, 508, 213, 488, 206, 1127, 487, 367,
	463, 471, 355, 346, 205, 469, 353, 345, 301, 320,
	321, 259, 281, 402, 339, 403, 282, 363, 362, 364,
	198, 480, 0, 199, 0, 442, 481, 509, 219, 220,
	221, 824, 258, 262, 269, 271, 277, 278, 285, 332,
	378, 401, 399, 405, 909, 458, 475, 484, 491, 497,
	498, 500, 501, 502, 503, 504, 366, 284, 438, 300,
	337, 901, 939, 384, 417, 224, 478, 439, 819, 823,
	817, 883, 818, 872, 873, 820, 930, 931, 932, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 905, 813,
	0, 821, 822, 0, 911, 920, 921, 528, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 876, 191, 207, 333, 935,
	406, 267, 506, 486, 482, 799, 816, 241, 827, 835,
	0, 841, 849, 850, 862, 864, 865, 866, 867, 884,
	885, 887, 895, 897, 900, 902, 907, 917, 938, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 431, 432, 433, 434,
	435, 443, 447, 465, 466, 477, 490, 495, 425, 276,
	473, 496, 0, 342, 875, 881, 344, 260, 279, 290,
	890, 485, 444, 212, 413, 268, 201, 230, 215, 238,
	253, 256, 294, 352, 359, 388, 392, 273, 250, 228,
	410, 225, 429, 450, 451, 452, 454, 356, 245, 391,
	871, 899, 340, 456, 457, 286, 357, 0, 0, 924,
	910, 455, 0, 857, 927, 826, 845, 937, 848, 851,
	892, 805, 870, 375, 842, 798, 830, 801, 837, 802,
	828, 859, 249, 825, 912, 874, 926, 331, 246, 807,
	831, 389, 847, 197, 894, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 933,
	335, 880, 0, 440, 360, 0, 0, 0, 861, 916,
	868, 906, 856, 893, 815, 879, 928, 843, 889, 929,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 839, 886, 923, 840,
	888, 244, 291, 251, 243, 459, 934, 915, 0, 0,
	941, 925, 863, 0, 891, 0, 940, 800, 882, 0,
	803, 806, 936, 919, 834, 254, 0, 0, 0, 0,
	0, 0, 0, 860, 869, 903, 854, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 878, 0, 0, 0,
	811, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 814, 0, 833,
	904, 0, 797, 274, 808, 361, 236, 0, 908, 918,
	855, 492, 922, 853, 852, 898, 812, 914, 846, 330,
	810, 299, 192, 210, 0, 844, 371, 412, 418, 913,
	829, 838, 234, 836, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 877, 896, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 809, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	824, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 909, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 796, 790, 789, 300, 337,
	901, 939, 384, 417, 224, 478, 439, 819, 823, 817,
	883, 818, 872, 873, 820, 930, 931, 932, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 905, 813, 0,
	821, 822, 0, 911, 920, 921, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 876, 191, 207, 333, 935, 406,
	267, 506, 486, 482, 799, 816, 241, 827, 835, 0,
	841, 849, 850, 862, 864, 865, 866, 867, 884, 885,
	887, 895, 897, 900, 902, 907, 917, 938, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 875, 881, 344, 260, 279, 290, 890,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 871,
	899, 340, 456, 457, 286, 357, 0, 0, 924, 910,
	455, 0, 857, 927, 826, 845, 937, 848, 851, 892,
	805, 870, 375, 842, 798, 830, 801, 837, 802, 828,
	859, 249, 825, 912, 874, 926, 331, 246, 807, 831,
	389, 847, 197, 894, 430, 233, 341, 338, 462, 261,
	252, 248, 232, 287, 347, 387, 449, 381, 933, 335,
	880, 0, 440, 360, 0, 0, 0, 861, 916, 868,
	906, 856, 893, 815, 879, 928, 843, 889, 929, 293,
	231, 196, 372, 441, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 839, 886, 923, 840, 888,
	244, 291, 251, 243, 459, 934, 915, 0, 0, 941,
	925, 863, 0, 891, 0, 940, 800, 882, 0, 803,
	806, 936, 919, 834, 254, 0, 0, 0, 0, 0,
	0, 0, 860, 869, 903, 854, 0, 0, 0, 0,
	0, 0, 0, 832, 0, 878, 0, 0, 0, 811,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 814, 0, 833, 904,
	0, 797, 274, 808, 361, 236, 0, 908, 918, 855,
	492, 922, 853, 852, 898, 812, 914, 846, 330, 810,
	299, 192, 210, 0, 844, 371, 412, 418, 913, 829,
	838, 234, 836, 416, 385, 476, 218, 263, 409, 390,
	414, 397, 266, 877, 896, 415, 336, 464, 404, 474,
	493, 494, 242, 365, 483, 453, 489, 505, 211, 239,
	379, 446, 479, 437, 358, 460, 461, 298, 436, 272,
	195, 334, 499, 209, 424, 226, 216, 202, 448, 1337,
	223, 428, 0, 0, 507, 204, 470, 445, 354, 295,
	296, 203, 0, 408, 247, 270, 237, 374, 467, 468,
	235, 508, 213, 488, 206, 809, 487, 367, 463, 471,
	355, 346, 205, 469, 353, 345, 301, 320, 321, 259,
	281, 402, 339, 403, 282, 363, 362, 364, 198, 480,
	0, 199, 0, 442, 481, 509, 219, 220, 221, 824,
	258, 262, 269, 271, 277, 278, 285, 332, 378, 401,
	399, 405, 909, 458, 475, 484, 491, 497, 498, 500,
	501, 502, 503, 504, 796, 790, 789, 300, 337, 901,
	939, 384, 417, 224, 478, 439, 819, 823, 817, 883,
	818, 872, 873, 820, 930, 931, 932, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 905, 813, 0, 821,
	822, 0, 911, 920, 921, 528, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 876, 191, 207, 333, 935, 406, 267,
	506, 486, 482, 799, 816, 241, 827, 835, 0, 841,
	849, 850, 862, 864, 865, 866, 867, 884, 885, 887,
	895, 897, 900, 902, 907, 917, 938, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 431, 432, 433, 434, 435, 443,
	447, 465, 466, 477, 490, 495, 425, 276, 473, 496,
	0, 342, 875, 881, 344, 260, 279, 290, 890, 485,
	444, 212, 413, 268, 201, 230, 215, 238, 253, 256,
	294, 352, 359, 388, 392, 273, 250, 228, 410, 225,
	429, 450, 451, 452, 454, 356, 245, 391, 871, 899,
	340, 456, 457, 286, 357, 0, 0, 924, 910, 455,
	0, 857, 927, 826, 845, 937, 848, 851, 892, 805,
	870, 375, 842, 798, 830, 801, 837, 802, 828, 859,
	249, 825, 912, 874, 926, 331, 246, 807, 831, 389,
	847, 197, 894, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 933, 335, 880,
	0, 440, 360, 0, 0, 0, 861, 916, 868, 906,
	856, 893, 815, 879, 928, 843, 889, 929, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 839, 886, 923, 840, 888, 244,
	291, 251, 243, 459, 934, 915, 0, 0, 941, 925,
	863, 0, 891, 0, 940, 800, 882, 0, 803, 806,
	936, 919, 834, 254, 0, 0, 0, 0, 0, 0,
	0, 860, 869, 903, 854, 0, 0, 0, 0, 0,
	0, 0, 832, 0, 878, 0, 0, 0, 811, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 858, 0, 0, 0, 814, 0, 833, 904, 0,
	797, 274, 808, 361, 236, 0, 908, 918, 855, 492,
	922, 853, 852, 898, 812, 914, 846, 330, 810, 299,
	192, 210, 0, 844, 371, 412, 418, 913, 829, 838,
	234, 836, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 877, 896, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 787, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 809, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 824, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 909, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 796, 790, 789, 300, 337, 901, 939,
	384, 417, 224, 478, 439, 819, 823, 817, 883, 818,
	872, 873, 820, 930, 931, 932, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 905, 813, 0, 821, 822,
	0, 911, 920, 921, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 876, 191, 207, 333, 935, 406, 267, 506,
	486, 482, 799, 816, 241, 827, 835, 0, 841, 849,
	850, 862, 864, 865, 866, 867, 884, 885, 887, 895,
	897, 900, 902, 907, 917, 938, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 875, 881, 344, 260, 279, 290, 890, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 871, 899, 340,
	456, 457, 286, 357, 0, 0, 0, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 1725, 0, 609, 0, 0, 0, 249,
	614, 0, 0, 0, 331, 246, 0, 1726, 389, 0,
	197, 0, 430, 233, 341, 338, 462, 261, 252, 248,
	232, 287, 347, 387, 449, 381, 621, 335, 0, 0,
	440, 360, 0, 0, 0, 0, 0, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	372, 441, 265, 0, 87, 0, 0, 188, 189, 190,
	682, 689, 690, 691, 692, 693, 683, 685, 0, 0,
	222, 684, 229, 632, 634, 633, 640, 641, 642, 643,
	644, 645, 646, 630, 687, 694, 695, 0, 244, 291,
	251, 243, 459, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 592, 606, 0, 620, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 604, 776,
	0, 0, 0, 666, 0, 605, 0, 0, 613, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 361, 236, 0, 665, 0, 0, 492, 0,
	0, 663, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 371, 412, 418, 0, 0, 0, 234,
	0, 416, 385, 476, 218, 263, 409, 390, 414, 397,
	266, 0, 0, 415, 336, 464, 404, 474, 493, 494,
	242, 365, 483, 453, 489, 505, 211, 239, 379, 446,
	479, 437, 358, 460, 461, 298, 436, 272, 195, 334,
	499, 209, 424, 226, 216, 202, 448, 472, 223, 428,
	0, 0, 507, 204, 470, 445, 354, 295, 296, 203,
	0, 408, 247, 270, 237, 374, 467, 468, 235, 508,
	213, 488, 206, 0, 487, 367, 463, 471, 355, 346,
	205, 469, 353, 345, 301, 635, 636, 259, 281, 402,
	339, 403, 282, 363, 362, 364, 198, 480, 0, 199,
	0, 442, 481, 509, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 378, 401, 399, 405,
	0, 458, 475, 484, 491, 497, 498, 500, 501, 502,
	503, 504, 366, 284, 438, 300, 337, 0, 0, 384,
	417, 224, 478, 439, 672, 664, 625, 676, 627, 673,
	674, 622, 623, 626, 675, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 667, 612, 611, 0, 618, 619,
	0, 628, 629, 631, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 610, 191, 207, 333, 0, 406, 267, 506, 486,
	482, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 431, 432, 433, 434, 435, 443, 447, 465,
	466, 477, 490, 495, 425, 276, 473, 496, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 485, 444, 212,
	413, 268, 201, 230, 215, 238, 253, 256, 294, 352,
	359, 388, 392, 273, 250, 228, 410, 225, 429, 450,
	451, 452, 454, 356, 245, 391, 0, 357, 340, 456,
	457, 286, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 609,
	0, 0, 0, 249, 614, 0, 0, 0, 331, 246,
	0, 0, 389, 0, 197, 0, 430, 233, 341, 338,
	462, 261, 252, 248, 232, 287, 347, 387, 449, 381,
	621, 335, 0, 0, 440, 360, 0, 0, 0, 0,
	0, 616, 617, 0, 0, 0, 0, 0, 0, 1806,
	0, 293, 231, 196, 372, 441, 265, 0, 87, 0,
	0, 188, 189, 190, 682, 689, 690, 691, 692, 693,
	683, 685, 0, 0, 222, 684, 229, 632, 634, 633,
	640, 641, 642, 643, 644, 645, 646, 630, 687, 694,
	695, 1807, 244, 291, 251, 243, 459, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 592,
	606, 0, 620, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 604, 0, 0, 0, 0, 666, 0, 605,
	0, 0, 613, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 361, 236, 0, 665,
	0, 0, 492, 0, 0, 663, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 371, 412, 418,
	0, 0, 0, 234, 0, 416, 385, 476, 218, 263,
	409, 390, 414, 397, 266, 0, 0, 415, 336, 464,
	404, 474, 493, 494, 242, 365, 483, 453, 489, 505,
	211, 239, 379, 446, 479, 437, 358, 460, 461, 298,
	436, 272, 195, 334, 499, 209, 424, 226, 216, 202,
	448, 472, 223, 428, 0, 0, 507, 204, 470, 445,
	354, 295, 296, 203, 0, 408, 247, 270, 237, 374,
	467, 468, 235, 508, 213, 488, 206, 0, 487, 367,
	463, 471, 355, 346, 205, 469, 353, 345, 301, 635,
	636, 259, 281, 402, 339, 403, 282, 363, 362, 364,
	198, 480, 0, 199, 0, 442, 481, 509, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	378, 401, 399, 405, 0, 458, 475, 484, 491, 497,
	498, 500, 501, 502, 503, 504, 366, 284, 438, 300,
	337, 0, 0, 384, 417, 224, 478, 439, 672, 664,
	625, 676, 627, 673, 674, 622, 623, 626, 675, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 667, 612,
	611, 0, 618, 619, 0, 628, 629, 631, 637, 638,
	639, 647, 649, 650, 648, 651, 652, 653, 656, 657,
	658, 659, 654, 655, 660, 610, 191, 207, 333, 0,
	406, 267, 506, 486, 482, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 431, 432, 433, 434,
	435, 443, 447, 465, 466, 477, 490, 495, 425, 276,
	473, 496, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 485, 444, 212, 413, 268, 201, 230, 215, 238,
	253, 256, 294, 352, 359, 388, 392, 273, 250, 228,
	410, 225, 429, 450, 451, 452, 454, 356, 245, 391,
	0, 0, 340, 456, 457, 286, 357, 0, 0, 0,
	78, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 609, 0,
	0, 0, 249, 614, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 621,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 87, 0, 0,
	188, 189, 190, 682, 689, 690, 691, 692, 693, 683,
	685, 0, 0, 222, 684, 229, 632, 634, 633, 640,
	641, 642, 643, 644, 645, 646, 630, 687, 694, 695,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 592, 606,
	0, 620, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	603, 604, 0, 0, 0, 0, 666, 0, 605, 0,
	0, 613, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 665, 0,
	0, 492, 0, 0, 663, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 635, 636,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 672, 664, 625,
	676, 627, 673, 674, 622, 623, 626, 675, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 667, 612, 611,
	0, 618, 619, 0, 628, 629, 631, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 610, 191, 207, 333, 86, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 609, 0, 0, 0, 249, 614, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 621, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 87, 0, 0, 188, 189, 190, 682, 689, 690,
	691, 692, 693, 683, 685, 0, 0, 222, 684, 229,
	632, 634, 633, 640, 641, 642, 643, 644, 645, 646,
	630, 687, 694, 695, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 592, 606, 0, 620, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 604, 0, 0, 0, 0,
	666, 0, 605, 0, 0, 613, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 665, 0, 0, 492, 0, 0, 663, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 2835, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 635, 636, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 672, 664, 625, 676, 627, 673, 674, 622, 623,
	626, 675, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 667, 612, 611, 0, 618, 619, 0, 628, 629,
	631, 637, 638, 639, 647, 649, 650, 648, 651, 652,
	653, 656, 657, 658, 659, 654, 655, 660, 610, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 609, 0, 0, 0,
	249, 614, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 621, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 87, 0, 1304, 188, 189,
	190, 682, 689, 690, 691, 692, 693, 683, 685, 0,
	0, 222, 684, 229, 632, 634, 633, 640, 641, 642,
	643, 644, 645, 646, 630, 687, 694, 695, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 592, 606, 0, 620,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 604,
	0, 0, 0, 0, 666, 0, 605, 0, 0, 613,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 665, 0, 0, 492,
	0, 0, 663, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 635, 636, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 672, 664, 625, 676, 627,
	673, 674, 622, 623, 626, 675, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 667, 612, 611, 0, 618,
	619, 0, 628, 629, 631, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 610, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	609, 0, 0, 0, 249, 614, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 621, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 87,
	0, 0, 188, 189, 190, 682, 689, 690, 691, 692,
	693, 683, 685, 0, 0, 222, 684, 229, 632, 634,
	633, 640, 641, 642, 643, 644, 645, 646, 630, 687,
	694, 695, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	592, 606, 0, 620, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 604, 776, 0, 0, 0, 666, 0,
	605, 0, 0, 613, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	665, 0, 0, 492, 0, 0, 663, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	635, 636, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 672,
	664, 625, 676, 627, 673, 674, 622, 623, 626, 675,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 667,
	612, 611, 0, 618, 619, 0, 628, 629, 631, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 610, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 609, 0, 0, 0, 249, 614,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 621, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 87, 0, 0, 188, 189, 190, 682,
	689, 690, 691, 692, 693, 683, 685, 0, 0, 222,
	684, 229, 632, 634, 633, 640, 641, 642, 643, 644,
	645, 646, 630, 687, 694, 695, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 592, 606, 0, 620, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 603, 604, 0, 0,
	0, 0, 666, 0, 605, 0, 0, 613, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 665, 0, 0, 492, 0, 0,
	663, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 635, 636, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 672, 664, 625, 676, 627, 673, 674,
	622, 623, 626, 675, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 667, 612, 611, 0, 618, 619, 0,
	628, 629, 631, 637, 638, 639, 647, 649, 650, 648,
	651, 652, 653, 656, 657, 658, 659, 654, 655, 660,
	610, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 609, 0,
	0, 0, 249, 614, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 621,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 87, 0, 0,
	188, 189, 190, 682, 689, 690, 691, 692, 693, 683,
	685, 0, 0, 222, 684, 229, 632, 634, 633, 640,
	641, 642, 643, 644, 645, 646, 630, 687, 694, 695,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 620, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	603, 604, 0, 0, 0, 0, 666, 0, 605, 0,
	0, 613, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 665, 0,
	0, 492, 0, 0, 663, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 635, 636,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 672, 664, 625,
	676, 627, 673, 674, 622, 623, 626, 675, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 667, 612, 611,
	0, 618, 619, 0, 628, 629, 631, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 610, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 689, 690,
	0, 0, 0, 0, 1643, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 991, 492,
	0, 0, 0, 0, 0, 988, 989, 330, 949, 299,
	192, 210, 982, 986, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 1323, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 1325,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 1159, 0, 1160, 1161,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 1266,
	1269, 0, 0, 0, 0, 1265, 1268, 0, 0, 222,
	1264, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 0, 340, 456, 457,
	286, 357, 0, 0, 0, 78, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 389, 0, 197, 0,
	430, 233, 341, 338, 462, 261, 252, 248, 232, 287,
	347, 387, 449, 381, 0, 335, 0, 0, 440, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 372, 441,
	265, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	459, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	361, 236, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 371, 412, 418, 0, 0, 0, 234, 0, 416,
	385, 476, 218, 263, 409, 390, 414, 397, 266, 0,
	0, 415, 336, 464, 404, 474, 493, 494, 242, 365,
	483, 453, 489, 505, 211, 239, 379, 446, 479, 437,
	358, 460, 461, 298, 436, 272, 195, 334, 499, 209,
	424, 226, 216, 202, 448, 472, 223, 428, 0, 0,
	507, 204, 470, 445, 354, 295, 296, 203, 0, 408,
	247, 270, 237, 374, 467, 468, 235, 508, 213, 488,
	206, 0, 487, 367, 463, 471, 355, 346, 205, 469,
	353, 345, 301, 320, 321, 259, 281, 402, 339, 403,
	282, 363, 362, 364, 198, 480, 0, 199, 0, 442,
	481, 509, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 378, 401, 399, 405, 0, 458,
	475, 484, 491, 497, 498, 500, 501, 502, 503, 504,
	366, 284, 438, 300, 337, 0, 0, 384, 417, 224,
	478, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 86, 406, 267, 506, 486, 482, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	431, 432, 433, 434, 435, 443, 447, 465, 466, 477,
	490, 495, 425, 276, 473, 496, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 485, 444, 212, 413, 268,
	201, 230, 215, 238, 253, 256, 294, 352, 359, 388,
	392, 273, 250, 228, 410, 225, 429, 450, 451, 452,
	454, 356, 245, 391, 0, 0, 340, 456, 457, 286,
	357, 0, 0, 0, 78, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 87, 0, 1304, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 86, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 1747, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 1745, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 949, 299, 192, 210, 947, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 1747, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 1304,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 2765, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 2058, 0,
	0, 0, 2059, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 1348,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 2849, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 2765, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 1594, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 1471, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 1469, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 1467, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 1465,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 1463, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 1459, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 1457, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 1455, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 1432, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 1332,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 583, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	357, 340, 456, 457, 286, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 389, 0, 197, 0, 430,
	233, 341, 338, 462, 261, 252, 248, 232, 287, 347,
	387, 449, 381, 0, 335, 0, 0, 440, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 372, 441, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 459,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 361,
	236, 0, 0, 531, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	371, 412, 418, 0, 0, 0, 234, 0, 416, 385,
	476, 218, 263, 409, 390, 414, 397, 266, 0, 0,
	415, 336, 464, 404, 474, 493, 494, 242, 365, 483,
	453, 489, 505, 211, 239, 379, 446, 479, 437, 358,
	460, 461, 298, 436, 272, 195, 334, 499, 209, 424,
	226, 216, 202, 448, 472, 223, 428, 0, 0, 507,
	204, 470, 445, 354, 295, 296, 203, 0, 408, 247,
	270, 237, 374, 467, 468, 235, 508, 213, 488, 206,
	0, 487, 367, 463, 471, 355, 346, 205, 469, 353,
	345, 301, 320, 321, 259, 281, 402, 339, 403, 282,
	363, 362, 364, 198, 480, 0, 199, 0, 442, 481,
	509, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 378, 401, 399, 405, 0, 458, 475,
	484, 491, 497, 498, 500, 501, 502, 503, 504, 366,
	284, 438, 300, 337, 0, 0, 384, 417, 224, 478,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 406, 267, 506, 486, 482, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 431,
	432, 433, 434, 435, 443, 447, 465, 466, 477, 490,
	495, 425, 276, 473, 496, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 485, 444, 212, 413, 268, 201,
	230, 215, 238, 253, 256, 294, 352, 359, 388, 392,
	273, 250, 228, 410, 225, 429, 450, 451, 452, 454,
	356, 245, 391, 0, 357, 340, 456, 457, 286, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 389,
	0, 197, 0, 430, 233, 341, 338, 462, 261, 252,
	248, 232, 287, 347, 387, 449, 381, 0, 335, 0,
	0, 440, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 372, 441, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 459, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 361, 236, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 371, 412, 418, 0, 0, 0,
	234, 0, 416, 385, 476, 218, 263, 409, 390, 414,
	397, 266, 0, 0, 415, 336, 464, 404, 474, 493,
	494, 242, 365, 483, 453, 489, 505, 211, 239, 379,
	446, 479, 437, 358, 460, 461, 298, 436, 272, 195,
	334, 499, 209, 424, 226, 216, 202, 448, 472, 223,
	428, 0, 0, 507, 204, 470, 445, 354, 295, 296,
	203, 0, 408, 247, 270, 237, 374, 467, 468, 235,
	508, 213, 488, 206, 0, 487, 367, 463, 471, 355,
	346, 205, 469, 353, 345, 301, 320, 321, 259, 281,
	402, 339, 403, 282, 363, 362, 364, 198, 480, 0,
	199, 0, 442, 481, 509, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 378, 401, 399,
	405, 0, 458, 475, 484, 491, 497, 498, 500, 501,
	502, 503, 504, 366, 284, 438, 300, 337, 0, 0,
	384, 417, 224, 478, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 406, 267, 506,
	486, 482, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 348, 349, 350, 351, 2854, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 431, 432, 433, 434, 435, 443, 447,
	465, 466, 477, 490, 495, 425, 276, 473, 496, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 485, 444,
	212, 413, 268, 201, 230, 215, 238, 253, 256, 294,
	352, 359, 388, 392, 273, 250, 228, 410, 225, 429,
	450, 451, 452, 454, 356, 245, 391, 0, 357, 340,
	456, 457, 286, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 389, 0, 197, 0, 430, 233, 341,
	338, 462, 261, 252, 248, 232, 287, 347, 387, 449,
	381, 0, 335, 0, 0, 440, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 372, 441, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 459, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 361, 236, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 371, 412,
	418, 0, 0, 0, 234, 0, 416, 385, 476, 218,
	263, 409, 390, 414, 397, 266, 0, 0, 415, 336,
	464, 404, 474, 493, 494, 242, 365, 483, 453, 489,
	505, 211, 239, 379, 446, 479, 437, 358, 460, 461,
	298, 436, 272, 195, 334, 499, 209, 424, 226, 216,
	202, 448, 472, 223, 428, 0, 0, 507, 204, 470,
	445, 354, 295, 296, 203, 0, 408, 247, 270, 237,
	374, 467, 468, 235, 508, 213, 488, 206, 0, 487,
	367, 463, 471, 355, 346, 205, 469, 353, 345, 301,
	320, 321, 259, 281, 402, 339, 403, 282, 363, 362,
	364, 198, 480, 0, 199, 0, 442, 481, 509, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 378, 401, 399, 405, 0, 458, 475, 484, 491,
	497, 498, 500, 501, 502, 503, 504, 366, 284, 438,
	300, 337, 0, 0, 384, 417, 224, 478, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 406, 267, 506, 486, 482, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 431, 432, 433,
	434, 435, 443, 447, 465, 466, 477, 490, 495, 425,
	276, 473, 496, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 485, 444, 212, 413, 268, 201, 230, 215,
	238, 253, 256, 294, 352, 359, 388, 392, 273, 250,
	228, 410, 225, 429, 450, 451, 452, 454, 356, 245,
	391, 0, 357, 340, 456, 457, 286, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 389, 0, 197,
	0, 430, 233, 341, 338, 462, 261, 252, 248, 232,
	287, 347, 387, 449, 381, 0, 335, 0, 0, 440,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 372,
	441, 265, 0, 0, 0, 0, 188, 2509, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 459, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 361, 236, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 371, 412, 418, 0, 0, 0, 234, 0,
	416, 385, 476, 218, 263, 409, 390, 414, 397, 266,
	0, 0, 415, 336, 464, 404, 474, 493, 494, 242,
	365, 483, 453, 489, 505, 211, 239, 379, 446, 479,
	437, 358, 460, 461, 298, 436, 272, 195, 334, 499,
	209, 424, 226, 216, 202, 448, 472, 223, 428, 0,
	0, 507, 204, 470, 445, 354, 295, 296, 203, 0,
	408, 247, 270, 237, 374, 467, 468, 235, 508, 213,
	488, 206, 0, 487, 367, 463, 471, 355, 346, 205,
	469, 353, 345, 301, 320, 321, 259, 281, 402, 339,
	403, 282, 363, 362, 364, 198, 480, 0, 199, 0,
	442, 481, 509, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 378, 401, 399, 405, 0,
	458, 475, 484, 491, 497, 498, 500, 501, 502, 503,
	504, 366, 284, 438, 300, 337, 0, 0, 384, 417,
	224, 478, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 406, 267, 506, 486, 482,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 431, 432, 433, 434, 435, 443, 447, 465, 466,
	477, 490, 495, 425, 276, 473, 496, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 485, 444, 212, 413,
	268, 201, 230, 215, 238, 253, 256, 294, 352, 359,
	388, 392, 273, 250, 228, 410, 225, 429, 450, 451,
	452, 454, 356, 245, 391, 0, 357, 340, 456, 457,
	286, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 389, 0, 197, 0, 430, 233, 341, 338, 462,
	261, 252, 248, 232, 287, 347, 387, 449, 381, 0,
	335, 0, 0, 440, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 372, 441, 265, 0, 0, 0, 0,
	188, 2054, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 459, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 361, 236, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 371, 412, 418, 0,
	0, 0, 234, 0, 416, 385, 476, 218, 263, 409,
	390, 414, 397, 266, 0, 0, 415, 336, 464, 404,
	474, 493, 494, 242, 365, 483, 453, 489, 505, 211,
	239, 379, 446, 479, 437, 358, 460, 461, 298, 436,
	272, 195, 334, 499, 209, 424, 226, 216, 202, 448,
	472, 223, 428, 0, 0, 507, 204, 470, 445, 354,
	295, 296, 203, 0, 408, 247, 270, 237, 374, 467,
	468, 235, 508, 213, 488, 206, 0, 487, 367, 463,
	471, 355, 346, 205, 469, 353, 345, 301, 320, 321,
	259, 281, 402, 339, 403, 282, 363, 362, 364, 198,
	480, 0, 199, 0, 442, 481, 509, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 378,
	401, 399, 405, 0, 458, 475, 484, 491, 497, 498,
	500, 501, 502, 503, 504, 366, 284, 438, 300, 337,
	0, 0, 384, 417, 224, 478, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 406,
	267, 506, 486, 482, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 431, 432, 433, 434, 435,
	443, 447, 465, 466, 477, 490, 495, 425, 276, 473,
	496, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	485, 444, 212, 413, 268, 201, 230, 215, 238, 253,
	256, 294, 352, 359, 388, 392, 273, 250, 228, 410,
	225, 429, 450, 451, 452, 454, 356, 245, 391, 0,
	0, 340, 456, 457, 286,
}

var yyPact = [...]int{
	5988, -1000, -407, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1954, 1983, -1000, -1000,
	-1000, -1000, 2112, -1000, 701, 1712, -1000, 1966, 332, -1000,
	39484, 427, -1000, 38316, 425, 292, 39484, -1000, 133, -1000,
	121, 39484, 129, 37732, -1000, -1000, -317, 16698, 1912, 12,
	7, 39484, -1000, -1000, -1000, -1000, 2075, 1688, -1000, 321,
	-1000, -1000, -1000, -1000, -1000, -1000, 37148, -1000, -1000, -1000,
	1970, 1953, 2122, 600, 1903, -1000, 2024, 1688, -1000, 16698,
	2060, 2011, 16114, -1000, 16114, 378, -1000, -1000, 12600, -1000,
	-1000, 21964, 39484, 27804, 290, -1000, 1966, -1000, -1000, -1000,
	71, -1000, 298, 1592, -1000, 1566, -1000, 751, 588, 328,
	421, 415, 327, 317, 316, 315, 313, 310, 309, 308,
	319, -1000, 656, 656, -149, -150, 3140, 369, 369, 369,
	395, 1939, 1938, -1000, 607, -1000, 656, 656, 656, 295,
	656, 656, 656, 656, 258, 256, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 320, 1966, 241, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39484,
	141, 39484, -1000, 500, 39484, 741, 741, 41, 741, 741,
	741, 741, 136, 573, 5, -1000, 128, 231, 122, 238,
	752, 126, 130, -1000, -1000, 233, 752, 1131, 603, 113,
	-1000, 741, 10244, 10244, 10244, -1000, 1957, -1000, -1000, -1000,
	-1000, -1000, -1000, 1057, -1000, 394, -1000, -1000, -1000, -1000,
	39484, 36564, 349, 702, -1000, -1000, -1000, 152, -1000, -1000,
	1276, 1189, 16698, 1156, -1000, 1134, 577, -1000, -1000, -1000,
	-1000, -1000, 453, 17282, 17282, 17282, 17282, -1000, -1000, 1466,
	1466, 1466, 1466, 17282, 1466, 17282, 1466, 1466, 1466, 1466,
	16698, 1466, 1466, 1466, -1000, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 492, 1466, 1466, 1466, 1466, 1466, -1000, -1000,
	-1000, -1000, 1466, 1466, 1466, 1466, 1466, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19618, -1000, 14362, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39484, -1000,
	1466, 158, 39484, 39484, 285, 2024, 1688, -1000, 2075, 2054,
	321, -1000, 2206, 1783, 1399, 1141, 1688, 1553, 39484, -1000,
	1596, -1000, -1000, -1000, 1788, 1075, 1130, -1000, -1000, -1000,
	-1000, 1324, 16698, -1000, -1000, 2109, -1000, 19034, 491, 838,
	2105, 35980, -1000, 378, 378, 1565, 12011, -41, -1000, -1000,
	-1000, 699, 25468, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1957,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1529, 39484, -1000, -1000, 3448, 1094, -1000, 1707,
	-1000, 1515, -1000, 1633, 16698, 1635, 419, 1094, 408, 407,
	403, -1000, -85, -1000, -1000, -1000, -1000, -1000, -1000, 656,
	656, 656, -1000, 300, 2057, 332, 5835, -1000, -1000, -1000,
	35396, 1701, 1094, -1000, 1699, -1000, 753, 508, 498, 498,
	1094, -1000, -1000, 39484, 1094, 750, 749, 39484, 39484, -1000,
	34812, -1000, 34228, 33644, 993, 39484, 33060, 32476, 31892, 31308,
	30724, -1000, 1827, -1000, 1774, -1000, -1000, -1000, 39484, 39484,
	39484, 293, -1000, -1000, 39484, 1094, -1000, -1000, 991, 990,
	982, 656, 656, 973, 1127, 1126, 1125, 656, 656, 972,
	1124, 26636, 1120, 213, 965, 962, 956, 966, 1117, 173,
	1116, 957, 919, 941, 39484, 1698, 39484, -1000, 221, 621,
	335, 695, 1966, 1908, 1563, 385, 418, 1094, 372, 372,
	39484, -1000, 10833, -1000, -1000, 1115, 16698, -1000, 754, 752,
	752, -1000, -1000, -1000, -1000, -1000, -1000, 741, 39484, 754,
	-1000, -1000, -1000, 752, 741, 39484, 741, 741, 741, 741,
	752, 752, 752, 741, 39484, 39484, 39484, 39484, 39484, 39484,
	39484, 39484, 39484, 10244, 10244, 10244, 603, 741, -321, -1000,
	1111, -1000, 1763, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 127, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -89, 1561, 30140, -1000, -322, -323, -324, -325,
	-1000, -1000, -1000, -327, -337, -1000, -1000, -1000, 16698, 16698,
	16698, 16698, -172, -1000, 774, 17282, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 850, 661, 17282, 17282, 17282, 17282, 17282,
	17282, 17282, 17282, 17282, 17282, 17282, 17282, 17282, 17282, 17282,
	740, 7119, 7119, 577, 577, 577, 577, -1000, 16114, 16698,
	16698, 577, -1000, 1094, 29556, 16114, 16114, 16698, 1947, 709,
	1189, 39484, -1000, 1141, -1000, -1000, -1000, 985, -1000, 39484,
	39484, 58, 16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698,
	16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698,
	16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698, 16698,
	16698, 16698, 13189, 10833, 16114, 16114, 16114, 16114, 16114, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 489, 1307, 1325, 1405, -1000, 1560, -1000, -166, 21380,
	16698, 1108, 2104, 1725, 39484, -1000, -1000, -1000, 2024, -1000,
	2024, 1307, 2106, 1840, 16114, -1000, -1000, 2106, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1196, -1000, 39484, 1553,
	1998, 39484, 1833, 1102, 286, -1000, 16698, 16698, 1549, -1000,
	1054, 39484, -1000, -172, -1000, 28972, -1000, -1000, 9655, -1000,
	39484, 299, 39484, -1000, 23716, 28388, 11422, -41, -1000, 11422,
	1423, -1000, -21, -15, 13773, 546, -1000, -1000, -1000, 3140,
	18450, 1229, 546, 52, -1000, -1000, -1000, 1633, -1000, 1633,
	1633, 1633, 1633, 286, 286, 286, 286, -1000, -1000, -1000,
	-1000, -1000, 1697, 1692, -1000, 1633, 1633, 1633, 1633, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1676, 1676, 1676, 1637,
	1637, 364, -1000, 16698, 267, 27804, 1977, 939, 1412, 221,
	374, 1717, 1094, 1094, 1094, 374, -1000, 1619, 1489, 1319,
	-1000, -397, 1532, -1000, -1000, 2056, -1000, -1000, 635, 771,
	762, 591, 39484, 168, 277, -1000, 355, -1000, 27804, 1094,
	746, 498, 1094, -1000, 1094, -1000, -1000, -1000, -1000, -1000,
	1094, 1508, -1000, 1525, 851, 761, 846, 759, 1508, -1000,
	-1000, -122, 1508, -1000, 1508, -1000, 1508, -1000, 1508, -1000,
	1508, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 647,
	39484, 168, 740, -1000, 384, -1000, -1000, -1000, 740, 740,
	-1000, -1000, -1000, -1000, 1100, 1085, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -386, 39484, -1000, 209, 689,
	265, 306, 257, 39484, 200, 2007, 228, 252, 39484, 39484,
	372, 1762, 39484, 1984, 39484, -1000, -1000, -1000, -1000, -1000,
	1189, 39484, -1000, -1000, 741, 741, -1000, -1000, 39484, 741,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 741, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 39484, 39484, -1000, -1000,
	-1000, -1000, -1000, 174, -27, 304, -1000, -1000, -1000, -1000,
	-1000, 2017, -1000, 1189, 727, 730, -1000, 1466, -1000, -1000,
	924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 850, 17282,
	17282, 17282, 1498, 424, 1509, 1216, 764, 998, 998, 855,
	855, 569, 569, 569, 569, 569, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1081, -1000, 1449, -1000, 1361, 1234,
	1141, -1000, 1449, 1449, 968, 16114, -1000, -1000, 710, -1000,
	16698, 1141, -1000, -1000, 1141, 1141, 1479, 1475, 2096, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	943, 1412, 1412, 1412, 1785, 1781, 1141, 1276, 1141, 1445,
	-1000, 1776, 1412, 1747, 1742, 1729, 1183, 1713, 1709, 1702,
	1412, 1412, 1412, 1128, 1695, 1672, 1644, 1640, 1634, 1630,
	1615, 1604, 1600, 1412, 1141, 16114, 16114, 1438, 1466, 487,
	-1000, 1449, 1141, 1141, 1449, 1449, 10833, 1141, -1000, 39484,
	-1000, -312, -1000, -47, 566, 1466, -1000, 26636, 1141, -1000,
	6798, -1000, 40652, -1000, -1000, -1000, -1000, -1000, 24884, 1497,
	2106, -1000, -1000, 1466, 1505, -1000, -1000, 286, 29, 24300,
	-1000, -1000, 1189, 1189, 16698, -1000, -1000, -1000, -1000, -1000,
	-1000, 484, 2087, 314, 1466, -1000, 1490, 2028, -1000, -1000,
	-1000, 1995, 20207, -1000, 1466, 39484, 1626, 1618, -1000, 482,
	-1000, 1423, -41, -32, -1000, -1000, -1000, -1000, 1189, -1000,
	1295, 303, 2873, -1000, 357, -1000, -1000, -1000, -1000, 1924,
	34, -1000, -1000, -1000, 286, 286, -1000, -1000, -1000, -1000,
	-1000, -1000, 1078, 1078, -1000, -1000, -1000, -1000, -1000, 934,
	-1000, -1000, -1000, 930, -1000, -1000, 1610, 1786, 267, -1000,
	-1000, 656, 1076, -1000, -1000, 1929, 656, 656, 39484, -1000,
	-1000, 1226, 1977, 209, 39484, 718, 1756, -1000, 1717, 1717,
	1717, 39484, -1000, -1000, -1000, -1000, -1000, -1000, -388, 57,
	323, -1000, -1000, -1000, 3456, 39484, 1485, -1000, 161, -1000,
	1184, -1000, 39484, -1000, 1455, 1667, 1094, 1094, -1000, -1000,
	-1000, 39484, 1466, -1000, -1000, -1000, -1000, 417, 1964, 1961,
	168, 161, 546, 1094, -1000, -1000, -1000, -1000, -1000, -389,
	1451, 400, 175, 262, 39484, 39484, 39484, 39484, 39484, 475,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 243, 383,
	-1000, 39484, 39484, 521, -1000, -1000, -1000, 752, -1000, -1000,
	752, -1000, -1000, -1000, -1000, -1000, 1955, 39484, -30, -357,
	-1000, -354, 16698, -1000, -1000, -1000, -1000, 1465, 388, 1509,
	17282, 17282, 16114, -116, 717, 717, 740, -1000, -1000, -1000,
	16698, 16698, 1591, 705, -1000, 16698, 819, -1000, -1000, -1000,
	16698, 16698, 16698, 1141, 220, -1000, -1000, -1000, 16698, 16698,
	-1000, -1000, 16698, 16698, -1000, 16698, 16698, 17866, 1141, 17866,
	16698, 16698, 17866, -1000, -1000, -1000, -1000, 17866, 16698, 16698,
	16698, 16698, 16698, 16698, 16698, 16698, 16698, -1000, -1000, 1449,
	1449, 16114, 10833, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 566, -1000, 498, 498, 498, 39484, -1000,
	-1000, -1000, -1000, -1000, -1000, 1401, 2018, -1000, 1864, 1852,
	2089, 2087, -1000, 23716, 2106, -1000, -1000, 39484, -306, -1000,
	1902, 1899, -1000, -1000, -1000, -1000, 9066, 2024, 16698, 1749,
	39484, 1466, -1000, 20796, 39484, 39484, 23716, 23716, 23716, 23716,
	23716, -1000, 1822, 1794, -1000, 1814, 1752, 1870, 39484, -1000,
	1443, 1141, 2054, 20207, 16698, 22548, 1430, 23716, -1000, -1000,
	23716, 39484, 8477, -1000, -1000, -39, -20, -1000, -1000, -1000,
	-1000, 3140, -1000, -1000, 816, 1993, 1916, -1000, -1000, -1000,
	-1000, 1427, -1000, 1416, 1398, 1414, 169, -1000, 1620, 1946,
	656, 656, -1000, 918, -1000, 1094, 1050, 1048, -1000, -1000,
	-1000, 397, -1000, 1980, 39484, 1748, 1746, 1745, -1000, -396,
	908, 1658, 1609, 16698, 1656, 2052, 1331, 39484, -1000, -1000,
	39484, -1000, 201, -1000, 267, 39484, -1000, -1000, -1000, 277,
	39484, -1000, 6478, 161, -1000, -1000, -1000, -1000, -1000, -1000,
	39484, 210, -1000, 1652, 1006, -1000, -1000, 1642, -1000, -1000,
	-1000, -1000, 148, 259, -1000, 39484, 511, 1786, 39484, -1000,
	-1000, -1000, 741, 741, -1000, -1000, 1945, -1000, 1094, 1412,
	17282, 17282, -1000, 577, -1000, 1466, 1141, 1633, 1633, -1000,
	1633, 1637, -1000, 1633, 109, 1633, 107, 1633, -1000, -1000,
	1141, 1141, 1040, 1001, -93, -1000, 1189, 16698, 1593, 1589,
	1412, -1000, 1629, 1625, 1412, 1412, -1000, 1189, 1183, 1559,
	1316, -1000, -1000, -1000, -1000, 1374, 1412, 1478, -304, 1141,
	1411, 1411, 1411, 1411, 1411, 1405, 1405, 1405, 1405, -1000,
	-1000, 1141, -1000, -1000, 2015, 2015, 2015, 1381, 40068, 39484,
	-1000, -1000, -1000, -1000, 2087, 2076, 1371, -1000, -1000, 29,
	358, -1000, 1876, 1899, -1000, 2051, 1892, 2050, -1000, -1000,
	-1000, 1189, -1000, 1968, 1350, -1000, 683, 1270, -1000, -1000,
	15530, 1393, 1850, 481, 1381, 1304, 2028, 1732, 1744, 1893,
	-1000, -1000, -1000, -1000, 1787, -1000, 1780, -1000, -1000, 1596,
	-1000, -1000, 1325, 1264, 299, 23716, 1258, 1258, -1000, 469,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 800, 5952, 2120,
	-1000, 1045, -1000, 1265, -1000, 744, 738, -1000, 39484, 1617,
	-1000, 286, 1042, 286, 898, -1000, 896, -1000, -1000, -190,
	-1000, -1000, 1769, 1811, -1000, -1000, -1000, -1000, 39484, -1000,
	-1000, 39484, 39484, 39484, 1613, 2048, -1000, 16698, 1607, 674,
	1471, 39484, 39484, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 377, 656, -367, 249, 246, 656, 656,
	656, -1000, -1000, 1367, 1348, -1000, -147, -1000, 16698, -1000,
	-1000, -1000, 1003, 1003, -1000, 1596, -1000, -1000, -1000, 1179,
	-1000, -1000, -124, 39484, 39484, 39484, 39484, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 577, 17282, -1000,
	-1000, 286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16698, -1000, 16698, -1000, 2024, 1037, 1189, 16698, 16698,
	-1000, 886, 884, -1000, -1000, 1141, 17866, -1000, 17866, -1000,
	16698, 226, 717, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1466, 1885, 1466, 1466, 22548, -1000,
	-1000, 2076, 2030, 2047, 1877, 1888, 1888, 1876, -1000, 2046,
	2038, -1000, 1036, 2031, 1031, 736, -1000, 39484, 16698, 1466,
	-1000, 307, 39484, 1466, 39484, -1000, 2068, -1000, -1000, 16698,
	1603, -1000, 16698, -1000, -1000, -1000, -1000, -1000, 7119, 2087,
	1258, -1000, -1000, 593, -1000, 16698, -1000, -1000, -1000, 6087,
	-1000, -1000, -1000, -1000, -1000, 1598, 16698, -1000, -1000, -1000,
	1171, 1155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1596, -1000, -1000, -1000, -1000, 277, -394, 1434, 39484, 879,
	-1000, 1344, 1331, 270, 1466, 1030, 656, 656, 656, 865,
	849, 26636, 322, -1000, 277, -1000, -152, -153, 1412, -1000,
	-1000, 1990, -1000, -1000, 10833, -1000, -1000, 1595, 1710, -1000,
	282, -1000, 1412, 1412, 1141, -1000, 1412, 1412, 1152, 1149,
	-1000, 1316, -1000, 959, -1000, 226, 1141, 1741, -1000, -1000,
	7119, -1000, 23132, -1000, 2029, 2026, 27220, 27220, 566, 2030,
	-1000, 16698, 16698, 1879, 858, -1000, -1000, -1000, -1000, 1027,
	1025, -1000, 1012, -1000, 2116, -1000, 1189, -1000, 1466, -1000,
	445, 1270, -1000, 2024, 1189, 39484, 1189, 30, 2068, -1000,
	1412, -1000, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
	1466, 39484, 1385, -1000, -1000, 1989, 1306, 55, -1000, 1256,
	-1000, -1000, 457, -1000, 16698, -1000, 26636, 961, 945, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 321, 1302, -1000,
	620, 39484, 39484, 1141, 263, -130, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 16698, -1000, 1141, 1740, -1000,
	-258, -1000, 1252, -1000, -1000, -1000, -1000, -1000, 1252, 1252,
	-1000, -1000, 1189, 1276, -1000, 857, -1000, -1000, -1000, -1000,
	-1000, 39484, 1270, 39484, -1000, 1243, 1141, 1466, 2024, -1000,
	1195, -1000, 321, -1000, 1386, 1609, -1000, -1000, -1000, 14946,
	-1000, -1000, -1000, -1000, -123, 10833, 7888, 1191, -1000, -1000,
	1830, -120, -142, 1183, -1000, -340, -1000, -1000, 26052, -1000,
	-1000, -1000, -1000, -1000, 1004, -1000, -1000, 22548, 38900, -1000,
	1738, 841, -123, 16698, 1320, 1141, -1000, -40, -1000, -1000,
	-1000, -1000, -1000, 1642, -1000, 1829, -1000, 1141, -1000, -1000,
	-1000, 1178, -1000, 3280, -225, 1734, 1653, 2103, -1000, -1000,
	-1000, 772, 848, -1000, -1000, -1000, -1000, 1342, 39484, -1000,
	363, -1000, -1000, -124, -125, -1000, -1000, 38900, -220, 546,
	7119, -1000, -1000, 2115, -1000, 2107, 562, 562, -1000, -1000,
	-403, 1148, 223, -1000, -132, -1000, -1000, 1976, 30, -1000,
	-1000, -1000, 360, 885, -1000, -1000, 847, -403, -1000, -144,
	-228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7119,
	186, 186, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2435, 2434, 22, 2, 2433, 2431, 2429, 47, 94,
	200, 29, 189, 100, 2428, 2424, 2423, 2422, 2421, 2420,
	2419, 213, 209, 207, 2417, 2414, 2411, 2410, 2409, 2406,
	2404, 2401, 2399, 2398, 202, 157, 171, 2397, 2396, 2395,
	115, 178, 88, 79, 179, 2391, 2390, 78, 2387, 2385,
	2384, 167, 166, 164, 722, 2383, 163, 117, 35, 2382,
	2381, 2380, 2377, 2376, 2374, 2373, 2372, 2371, 2370, 2368,
	2367, 2366, 2365, 2361, 2360, 2359, 244, 2358, 2357, 19,
	2356, 80, 2354, 2353, 2352, 123, 2351, 2350, 2349, 2348,
	2347, 2345, 2344, 137, 2343, 2342, 2341, 2340, 215, 2339,
	2338, 142, 104, 107, 2337, 2336, 93, 165, 2335, 108,
	2334, 2333, 2332, 152, 2331, 4314, 2330, 68, 66, 2329,
	65, 84, 59, 61, 9, 5, 2328, 2327, 67, 91,
	2326, 101, 69, 2325, 126, 119, 2323, 2321, 14, 7,
	2319, 6, 1, 4, 70, 2318, 2316, 116, 2313, 2311,
	2310, 96, 2308, 2307, 4894, 2305, 89, 133, 97, 76,
	2304, 38, 60, 2303, 2302, 2301, 2300, 2299, 36, 2298,
	2297, 2296, 138, 27, 161, 44, 63, 50, 136, 2293,
	28, 82, 2292, 132, 2291, 2288, 52, 33, 46, 2285,
	26, 129, 121, 43, 90, 134, 2284, 2282, 45, 75,
	2281, 2280, 2279, 2278, 2277, 2276, 74, 2275, 41, 2274,
	184, 2272, 10, 2268, 39, 37, 2265, 71, 140, 73,
	31, 2264, 168, 2263, 53, 173, 131, 156, 2262, 2261,
	2259, 177, 243, 2257, 2256, 81, 162, 143, 151, 2255,
	242, 2253, 2252, 98, 1461, 2073, 30, 159, 2251, 2250,
	3113, 141, 23, 20, 2247, 130, 2246, 2245, 2241, 181,
	160, 106, 918, 55, 2240, 2238, 16, 2237, 2236, 2235,
	2232, 2231, 2226, 86, 2224, 2217, 2215, 182, 58, 11,
	158, 77, 2214, 2212, 2203, 120, 99, 2202, 155, 153,
	122, 175, 2197, 169, 148, 110, 2196, 92, 2195, 2192,
	2190, 2188, 2183, 105, 2179, 2175, 2174, 2172, 154, 146,
	118, 83, 2161, 85, 111, 149, 147, 40, 2160, 34,
	2159, 2157, 2156, 176, 25, 2154, 13, 42, 49, 24,
	102, 144, 2153, 0, 2152, 17, 170, 248, 150, 2150,
	2149, 8, 15, 12, 2148, 2147, 135, 2143, 2142, 2140,
	21, 32, 18, 3, 2139, 2138, 5160, 3085, 124, 2137,
	183,
}

//line sql.y:6768
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 354, 355, 355, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 333, 333,
	333, 336, 336, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	358, 358, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 262, 262, 26, 26, 26, 26, 26, 99,
	99, 335, 335, 334, 326, 326, 325, 325, 324, 332,
	332, 331, 331, 330, 38, 39, 48, 48, 48, 48,
	49, 50, 337, 337, 299, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 301, 301, 287, 287, 300, 300, 300, 300, 300,
	300, 300, 286, 286, 110, 110, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 349, 349, 197,
	197, 197, 197, 197, 197, 119, 119, 128, 128, 128,
	128, 128, 117, 117, 118, 116, 116, 116, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 127, 127, 123, 123, 123, 124, 124, 124, 125,
	125, 350, 350, 350, 350, 266, 266, 266, 266, 269,
	269, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 270, 270, 270, 270, 270,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 272, 272, 272, 272, 272,
	272, 272, 272, 285, 285, 273, 273, 280, 280, 281,
	281, 281, 282, 282, 282, 283, 283, 278, 278, 278,
	278, 278, 278, 279, 279, 279, 288, 313, 313, 312,
	312, 310, 310, 310, 310, 310, 310, 310, 310, 297,
	297, 307, 307, 307, 307, 307, 296, 296, 292, 292,
	292, 293, 293, 294, 294, 291, 291, 295, 295, 309,
	309, 308, 308, 289, 289, 290, 290, 315, 351, 351,
	351, 351, 351, 352, 352, 316, 342, 343, 341, 341,
	341, 341, 341, 81, 81, 81, 239, 239, 239, 305,
	305, 304, 304, 304, 306, 306, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 234, 234, 234,
	340, 340, 340, 340, 340, 340, 339, 339, 339, 302,
	302, 302, 338, 338, 57, 57, 181, 181, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 85, 85, 86, 86, 86, 86, 88, 88, 88,
	318, 318, 58, 58, 3, 3, 137, 139, 140, 140,
	138, 138, 138, 138, 138, 138, 60, 60, 59, 59,
	142, 141, 143, 143, 143, 1, 1, 2, 2, 4,
	4, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 284, 284, 284, 317, 317, 319, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 321, 321,
	321, 61, 61, 322, 274, 275, 276, 5, 6, 298,
	320, 95, 95, 28, 37, 37, 29, 29, 29, 29,
	30, 30, 62, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 344, 344, 233, 233, 241, 241, 232, 232, 255,
	255, 255, 235, 235, 235, 236, 236, 348, 348, 348,
	64, 64, 64, 66, 66, 67, 68, 68, 257, 257,
	258, 258, 69, 70, 82, 82, 82, 82, 82, 82,
	84, 84, 84, 15, 15, 15, 15, 78, 78, 78,
	14, 14, 65, 65, 72, 345, 345, 346, 347, 347,
	347, 347, 73, 75, 31, 31, 31, 31, 31, 31,
	105, 105, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 100, 100, 100, 94, 94, 359,
	76, 77, 77, 98, 98, 98, 91, 91, 91, 97,
	97, 97, 16, 16, 17, 216, 216, 18, 18, 102,
	102, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 101, 101, 103, 103, 103, 103, 248,
	248, 248, 247, 247, 131, 131, 133, 132, 132, 134,
	134, 135, 135, 135, 135, 179, 157, 157, 214, 214,
	212, 212, 213, 213, 215, 215, 215, 215, 218, 218,
	136, 136, 136, 136, 144, 144, 145, 145, 146, 146,
	256, 256, 253, 253, 253, 252, 252, 150, 150, 150,
	152, 151, 151, 151, 151, 153, 153, 155, 155, 154,
	154, 156, 161, 161, 160, 160, 158, 158, 158, 158,
	159, 159, 159, 159, 162, 162, 115, 115, 115, 115,
	115, 115, 115, 126, 126, 126, 126, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 230, 230, 163, 163, 171, 171,
	171, 171, 164, 164, 164, 164, 164, 164, 164, 172,
	172, 172, 178, 173, 173, 169, 169, 169, 169, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 264, 264, 329, 329, 328, 328, 327, 327,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 360, 360, 277, 277, 277, 277, 170, 170, 170,
	170, 170, 96, 96, 96, 96, 96, 261, 261, 261,
	265, 265, 265, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 184, 184,
	92, 92, 182, 182, 183, 185, 185, 180, 180, 180,
	166, 166, 166, 186, 186, 187, 187, 188, 188, 190,
	189, 189, 191, 192, 192, 192, 193, 193, 194, 194,
	194, 47, 47, 47, 47, 47, 42, 42, 42, 42,
	43, 43, 43, 107, 107, 107, 107, 109, 109, 108,
	108, 79, 79, 80, 80, 80, 113, 113, 114, 114,
	114, 111, 111, 112, 112, 210, 210, 195, 195, 195,
	202, 202, 202, 198, 198, 200, 200, 200, 201, 201,
	201, 199, 207, 207, 209, 209, 208, 208, 204, 204,
	205, 205, 206, 206, 206, 203, 203, 165, 165, 165,
	165, 165, 211, 211, 211, 211, 219, 219, 175, 175,
	177, 177, 176, 130, 220, 220, 224, 221, 221, 225,
	225, 225, 225, 225, 222, 222, 223, 223, 249, 249,
	249, 229, 229, 240, 240, 237, 237, 238, 238, 231,
	231, 242, 242, 242, 74, 174, 174, 314, 314, 311,
	245, 245, 246, 246, 250, 250, 254, 254, 251, 251,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 356, 357, 259, 260, 260, 260,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 1, 1, 0,
	2, 2, 3, 3, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 1, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 0, 6, 5, 6, 4, 5, 0, 8, 9,
	0, 3, 0, 1, 0, 3, 8, 4, 1, 3,
	3, 6, 7, 7, 8, 4, 0, 1, 0, 1,
	3, 3, 1, 1, 2, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 2, 4, 5, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	4, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 0, 2, 0, 2, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -354, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 215, -49, -39, 216,
	-50, 218, 217, 254, 219, 247, 74, 296, 297, 299,
	300, 301, 302, -84, 252, 253, 221, 36, 45, 33,
	34, 37, 225, 260, 261, 224, -10, -34, 8, -356,
	11, 425, 249, 248, 28, -12, 456, 85, -355, 593,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -76, -359, -76, -76, 12, 13, -76, -299,
	-301, 85, 152, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -323, -44, -41, 220, 217, 264,
	119, 120, 254, 255, 256, 219, 238, 253, 257, 252,
	273, -40, 80, 33, 456, 459, -306, 216, 222, 223,
	426, 122, 121, 75, 218, -303, 350, 488, 563, -56,
	565, 101, 103, 564, 44, 228, 566, 567, 568, 494,
	569, 237, 570, 571, 572, 573, 579, 535, 580, 581,
	582, 123, 7, -76, -254, -250, -333, -244, 88, 89,
	90, 453, 240, 486, 487, 289, 80, 41, 347, 350,
	488, 563, 296, 310, 304, 331, 323, 454, 489, 292,
	241, 277, 560, 321, 128, 565, 295, 490, 255, 355,
	356, 357, 101, 299, 392, 578, 294, 491, 576, 103,
	564, 79, 51, 44, 250, 319, 224, 315, 566, 278,
	492, 464, 271, 122, 119, 585, 36, 313, 50, 30,
	575, 121, 49, 567, 143, 493, 568, 494, 359, 338,
	554, 48, 360, 256, 495, 83, 261, 458, 562, 361,
	314, 362, 288, 574, 221, 496, 546, 363, 364, 555,
	497, 339, 343, 498, 384, 365, 592, 52, 499, 500,
	556, 120, 501, 78, 569, 308, 309, 502, 286, 239,
	386, 335, 435, 442, 443, 107, 108, 438, 109, 444,
	110, 445, 446, 447, 436, 111, 104, 437, 448, 449,
	336, 337, 112, 450, 106, 105, 439, 441, 113, 451,
	237, 35, 366, 455, 290, 58, 265, 387, 46, 341,
	589, 45, 550, 503, 553, 334, 330, 53, 504, 505,
	506, 507, 570, 333, 307, 329, 584, 4, 283, 571,
	62, 223, 345, 344, 346, 272, 383, 326, 508, 509,
	510, 244, 81, 511, 316, 21, 512, 513, 367, 279,
	514, 56, 515, 516, 390, 253, 517, 54, 572, 39,
	258, 586, 573, 518, 519, 520, 521, 260, 522, 369,
	523, 368, 340, 342, 267, 370, 457, 524, 312, 257,
	577, 525, 245, 561, 259, 264, 252, 391, 246, 526,
	527, 528, 529, 530, 293, 545, 531, 532, 300, 579,
	43, 533, 534, 535, 536, 537, 287, 282, 385, 394,
	61, 82, 352, 538, 559, 306, 280, 539, 297, 55,
	580, 581, 582, 274, 583, 9, 590, 591, 372, 123,
	284, 285, 47, 327, 266, 540, 541, 317, 318, 332,
	305, 328, 298, 547, 268, 373, 254, 542, 393, 281,
	348, 353, 461, 273, 374, 558, 460, 325, 322, 275,
	543, 375, 229, 269, 270, 544, 548, 376, 377, 291,
	378, 379, 380, 381, 382, 276, 459, 303, 320, 354,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 434, 227,
	-76, 227, -154, -250, 227, -222, 356, -241, 358, 371,
	366, 376, 364, -233, 367, 369, 267, -348, 384, 227,
	373, 215, 169, 359, 368, 377, 378, 291, 379, 382,
	276, -344, -333, 568, 583, 128, 324, 363, 361, 385,
	550, 381, 380, -250, 298, -257, 303, -245, -333, -244,
	301, -154, -82, 546, 219, -259, -259, -100, 550, 552,
	-173, -115, 136, -126, -129, -120, -121, -167, -168, -169,
	-170, -127, -180, 158, 159, 166, 137, -178, -130, 26,
	452, 427, 426, 169, 31, 211, 68, 69, 429, 430,
	139, 57, 402, 403, -128, 397, 404, 399, 432, 433,
	114, 434, 104, 106, 105, 336, 337, 435, 436, 437,
	107, 108, 109, 110, 111, 112, 113, 438, 441, 439,
	440, 442, 443, 444, 449, 450, 445, 446, 447, 448,
	451, -245, -250, 232, 396, 226, 164, 425, -122, -118,
	-8, -176, 395, 400, 401, 405, 398, -333, -244, -124,
	-123, -163, 91, 97, 102, 98, -353, 115, -356, 92,
	93, 94, 95, 96, 116, 117, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 44, 372, 372,
	-154, -76, -76, -76, -76, -188, -98, -190, -10, -8,
	-356, 8, -76, -8, -9, -13, -34, -36, 482, -35,
	-250, -195, -210, 12, 154, 42, 50, -193, -194, -12,
	-8, -115, 19, 23, 24, -103, 160, -115, -250, -77,
	-103, -231, 231, -76, -76, -221, -262, 298, -225, 385,
	384, -246, -223, -245, -243, -222, 383, 220, 23, 462,
	135, 25, 27, 138, 169, 19, 139, 37, 222, 324,
	238, 168, 234, 426, 215, 72, 463, 397, 399, 395,
	402, 428, 429, 396, 358, 31, 13, 465, 28, 248,
	24, 38, 162, 217, 142, 466, 251, 26, 249, 114,
	117, 468, 22, 75, 243, 14, 236, 40, 16, 469,
	470, 17, 232, 231, 154, 228, 70, 11, 211, 29,
	151, 66, 471, 130, 472, 473, 474, 475, 68, 152,
	20, 587, 400, 401, 33, 551, 452, 262, 164, 73,
	59, 552, 136, 398, 476, 477, 115, 478, 118, 76,
	557, 132, 18, 71, 42, 479, 263, 480, 233, 588,
	481, 388, 482, 153, 218, 425, 69, 483, 226, 371,
	8, 431, 32, 247, 235, 125, 67, 484, 227, 141,
	432, 433, 230, 116, 7, 129, 34, 12, 74, 77,
	403, 404, 405, 57, 124, 456, 140, 15, 485, 389,
	134, 128, -300, 152, -286, -290, -245, 242, -316, 238,
	-154, -309, -308, -245, -356, -99, -240, 228, 236, 235,
	129, -337, 132, 284, 396, 226, -51, -52, -53, -222,
	168, 567, -85, 259, 263, 86, 86, -290, -289, -288,
	-338, 263, 242, -315, -307, 234, 243, -296, 235, 236,
	-291, 228, 130, -338, -291, 233, 243, 263, 263, 123,
	263, 123, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 258, -297, 144, -297, 460, 460, -303, -338, -338,
	-338, 230, 35, 35, -242, -291, 230, 25, -297, -297,
	-297, -222, 168, -297, -297, -297, -297, 271, 271, -297,
	-297, -297, -297, -297, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, -297, -297, -297, 227, -337, -107, 382,
	291, 80, -54, 273, -37, -154, -240, 228, 229, -337,
	260, -154, 212, -154, -235, 152, 15, -235, -232, 372,
	370, 357, 362, -235, -235, -235, -235, 274, 355, -292,
	228, 35, 239, 372, 274, 355, 274, 275, 274, 275,
	365, 375, 274, -255, 14, 154, 396, 360, 364, 267,
	227, 268, 229, 374, -333, 553, 275, -255, 92, -236,
	152, 372, 270, -235, -260, -356, -246, 324, -260, -260,
	32, 89, 230, -245, -78, -245, 92, -15, -11, -22,
	-21, -23, 144, -105, 372, -93, 169, 568, 554, 555,
	556, 553, 369, 561, 559, 557, 274, 558, 86, 132,
	134, 135, 4, -115, 151, -164, 144, 145, 146, 147,
	148, 149, 150, 154, 136, 138, 152, 153, 133, 155,
	156, 157, 158, 159, 160, 161, 163, 162, 164, 165,
	168, 213, 214, -121, -121, -121, -121, -178, -356, -356,
	-356, -121, -230, -356, -121, -356, -356, -356, -356, -184,
	-115, -356, -360, -356, -360, -360, -277, -356, -277, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, 212, -356, -356, -356, -356, -356, -277,
	-277, -277, -277, -277, 102, 97, 91, -180, 98, 92,
	-245, -250, -8, -9, -173, -259, -345, -346, -157, -154,
	-356, 291, -245, -245, 260, -193, -12, -8, -188, -194,
	-190, -8, -76, -91, -104, 63, 64, -106, 24, 38,
	67, 65, 23, -357, 87, -357, -210, -357, 86, -36,
	-214, 85, 61, 43, 92, 92, 86, 21, -189, -191,
	-115, 14, -248, 4, -247, 25, -245, 92, 212, 100,
	14, -155, 29, -154, -231, -231, 86, 298, -225, -262,
	-227, -226, 386, 388, 144, -249, -245, 92, 31, 87,
	86, -154, -266, -269, -271, -270, -272, -267, -268, 321,
	322, 169, 325, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 338, 32, 250, 317, 318, 319, 320, 339,
	340, 341, 342, 343, 344, 345, 346, 304, 323, 454,
	305, 306, 307, 308, 309, 310, 312, 313, 314, 315,
	316, -336, -333, 85, 87, 86, -273, 85, -115, -107,
	227, -333, 228, 228, 228, -76, 425, -297, -297, -297,
	258, 19, -44, -41, -323, 18, -40, -41, 220, 119,
	120, 217, 85, -286, 85, -295, -336, -333, 85, 130,
	233, 129, -294, -291, -294, -295, -333, -180, -333, 130,
	130, -218, -245, -218, -218, 23, -218, 23, -218, 23,
	94, -245, -218, 23, -218, 23, -218, 23, -218, 23,
	-218, 23, 31, 78, 79, 31, 81, 82, 83, -180,
	-180, -286, -222, -154, -333, 94, 94, 94, -297, -297,
	94, 92, 92, 92, -297, -297, 94, 92, -252, -250,
	92, 92, -339, 244, 288, 290, 94, 94, 94, 94,
	31, 92, -340, 31, 575, 574, 576, 577, 578, 92,
	94, 31, 94, 31, 94, -245, 85, -154, -113, 278,
	215, 217, 220, 76, 92, 292, 144, 44, 86, 230,
	227, -333, -237, 232, -237, -245, -251, -250, -243, 92,
	-115, -293, 14, 154, -255, -255, -235, -154, -293, -255,
	-235, -154, -235, -235, -235, -235, -255, -255, -255, -235,
	-250, -250, -154, -154, -154, -154, -154, -154, -154, -260,
	-260, -260, -236, -235, 553, 92, 76, -258, 301, 335,
	547, 548, 549, 86, 456, -147, -154, 553, 553, 553,
	553, 553, 553, -115, -115, -115, -115, 478, -171, 115,
	136, 116, 117, -129, -172, -176, -178, 99, 154, 138,
	152, 153, -120, -121, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -261, -333, 92,
	169, -125, -124, 98, -353, -125, -101, -103, -115, -115,
	-333, -245, -101, -101, -115, -97, 24, 38, -182, -183,
	140, -180, -357, -357, 94, 98, -245, -245, -90, -89,
	407, 408, 409, 410, 412, 413, 414, 417, 418, 422,
	423, 406, 424, 411, 416, 419, 420, 421, 415, 320,
	-115, -115, -115, -115, -115, -115, -174, -173, -332, -331,
	-330, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -102, 24, 38, -101, -246, -251,
	-243, -101, -102, -102, -101, -101, 212, -210, -357, 86,
	-347, 388, 389, 551, -253, 263, -252, 25, -174, 92,
	14, -216, 77, -245, -193, -193, 63, 64, 59, -101,
	-106, -357, -35, 25, -212, -245, 62, 92, -278, -222,
	347, 348, -115, -115, 86, -192, 27, 28, -154, -247,
	160, -251, -154, -217, 263, -154, -132, -134, -135, -136,
	-157, -179, -356, -137, 471, 14, -147, -148, -156, -250,
	-225, -227, 86, 387, 389, 390, 76, 118, -115, -279,
	168, -305, -304, -303, -286, -288, -289, -290, 87, -279,
	-282, 353, 352, -273, -273, -273, -273, -273, -278, -278,
	-278, -278, 85, 85, -273, -273, -273, -273, -280, 85,
	-280, -280, -281, 85, -281, -316, -115, -313, -312, -310,
	-311, 237, 101, 544, 502, 456, 494, 535, 77, -308,
	-192, 94, -357, -113, -238, 232, -314, -311, -333, -333,
	-333, -238, -333, 92, -333, 92, -333, 92, -86, -58,
	-1, 587, 588, 589, 86, 19, -287, -286, -57, 288,
	-319, -320, 263, -315, -309, -295, 130, -294, -295, -295,
	-333, 86, 29, 123, 123, 123, 123, 456, 217, 32,
	-286, -57, -261, 230, -261, -261, 92, 92, -234, 583,
	-147, -109, 280, 144, 269, 269, 227, 227, 282, -154,
	293, 295, 294, 292, 23, 281, 283, 285, 271, -154,
	-154, -237, 76, -149, -154, 26, -250, -154, -235, -235,
	-154, -235, -235, -154, -245, -93, 388, 86, 456, 22,
	-94, 22, -356, 115, 116, 117, -172, -120, -121, -120,
	135, 251, 86, -357, 25, 86, 77, -357, -357, -357,
	86, 14, -101, -185, -183, 142, -115, -357, -357, -357,
	86, 86, 14, -265, 25, -357, -357, -357, 86, 86,
	-357, -357, 86, 86, -357, 86, 86, 86, -329, 86,
	86, 86, 86, -357, -357, -357, -357, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, -357, -357, -101,
	-101, -356, 212, -357, -357, -357, -357, -357, -246, -346,
	550, 389, -161, -160, -158, 74, 231, 75, -356, -252,
	-357, -125, 89, -213, 89, -212, -166, -245, 94, 98,
	-195, -131, -133, 14, -106, -178, 87, 86, -278, -199,
	-204, -232, -245, 92, 169, -191, 212, -162, 15, -165,
	32, 57, -11, -356, -356, 32, 86, -150, -152, -151,
	-153, 66, 70, 72, 67, 68, 69, 73, -256, 25,
	-132, -9, -8, -356, -356, -154, -147, -358, 14, 77,
	-358, 86, 212, -226, -228, 391, 388, 394, -333, 92,
	-85, 86, -303, -290, -196, -110, 40, -283, 354, -278,
	-278, -285, 92, -285, 94, 94, 87, -47, -42, -43,
	33, 80, -310, -297, 92, 39, -297, -297, -245, 87,
	-192, -109, -154, 136, 76, -314, -314, -314, -250, -2,
	586, 592, 130, 85, 357, 18, -212, 86, 87, -181,
	289, 87, -87, -245, 87, 85, -295, -295, -245, -356,
	227, 31, 31, -57, -181, -279, -333, 585, 584, 87,
	229, 287, -114, 402, -111, 92, 88, -154, -154, -154,
	-154, -154, 220, 217, 272, 230, -147, -154, 86, -81,
	246, 241, -255, -255, 33, -154, 388, 562, 560, -115,
	135, 251, -129, -121, -103, 453, -263, 169, 321, 250,
	319, 315, 335, 326, 352, 317, 353, 314, 313, 312,
	-263, -261, -115, -115, -188, 143, -115, 141, -115, -115,
	-115, -357, 169, 321, -115, -115, -330, -115, -115, -115,
	-328, -327, -125, -180, -357, -328, -115, -115, -327, -327,
	-331, -331, -331, -331, -331, -173, -173, -173, -173, -357,
	-357, -102, -246, -158, -291, -291, -291, -218, 86, -229,
	22, 14, 57, 57, -131, -162, -132, -106, -245, -202,
	546, -207, 46, -205, -206, 47, -203, 48, 56, 160,
	-193, -115, -219, 76, -220, -224, -180, -175, -177, -176,
	-356, -211, -357, -245, -218, -220, -134, -135, -135, -134,
	-135, 66, 66, 66, 71, 66, 71, 66, -151, -250,
	-357, -357, -9, -115, -253, 77, -132, -132, -156, -250,
	160, 388, 392, 393, -303, -352, 115, 136, 31, 76,
	350, 101, -350, 168, -351, 233, 129, 130, 245, 25,
	41, 87, 86, 87, 86, 87, 86, -239, 493, 136,
	-43, -42, -297, -297, 94, -333, 92, 92, 229, 26,
	-154, 76, 76, 76, -88, 590, 94, 85, -3, 80,
	-115, 85, 19, -286, -180, -321, -274, -322, -275, -276,
	-5, -6, -298, 57, 101, -61, 44, 228, 570, 571,
	123, 583, -313, -212, -317, -319, -154, -117, -356, -116,
	-118, -122, 158, 159, -181, -154, -108, 278, 286, 85,
	-112, 89, -335, 77, 269, 350, 269, -154, -81, -47,
	-154, -235, -235, 33, -333, -357, -129, -121, -356, -357,
	-273, -273, -273, -281, -273, 309, -273, 309, -273, -357,
	-357, 86, -357, 22, -357, -92, 431, -115, 86, 86,
	-357, 85, 85, -357, -357, -329, 86, -357, 86, -357,
	86, -264, 545, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -159, 22, -159, -159, -357, 89,
	-154, -162, -186, 16, -199, 51, 327, -209, -208, 55,
	47, -206, 19, 49, 19, 30, -219, 86, 144, 86,
	-357, -357, 86, 57, 212, -357, -162, -145, -144, 76,
	77, -146, 76, -144, 66, 66, -214, -357, 86, -217,
	-132, -162, -162, 212, 115, -356, -119, -128, -117, 12,
	92, 92, -333, 130, 130, -154, 85, -278, 92, -278,
	94, 94, 493, 31, 81, 82, 83, 31, 78, 79,
	-154, -154, -154, -154, -318, 85, 19, -115, 85, 144,
	87, -212, -212, 265, 154, -297, 568, 271, 271, -297,
	-297, -297, 87, -357, 86, -284, 456, 459, -115, -123,
	-123, -214, 87, -326, 456, -334, -245, -245, -245, -245,
	-120, -278, -115, -115, -193, 92, -115, -115, 94, 94,
	-357, -328, -327, -115, -357, -142, -141, -143, 554, 115,
	31, -263, -356, 66, 18, 16, -356, -356, -253, -186,
	-187, 17, 19, -200, 53, -198, 52, -198, -208, 19,
	19, 92, 19, 92, 130, -224, -115, -177, 57, -11,
	-245, -175, -245, -188, -115, 85, -115, -125, -162, -162,
	-115, -168, 434, 104, 106, 105, 336, 337, 435, 436,
	437, 107, 108, 109, 110, 111, 112, 113, 438, 441,
	439, 442, 443, 444, 449, 450, 445, 446, 447, 448,
	451, 85, -115, 87, 87, -214, -317, -58, 87, -212,
	94, 87, 266, -176, -356, 92, -297, -297, -297, 94,
	94, -252, -351, -319, 460, 460, -357, 25, -325, -324,
	-246, 85, 77, -96, 154, 456, -357, -357, -357, -357,
	-357, 87, 87, -357, -357, 86, -357, -141, -143, -357,
	76, -125, -215, -357, -245, 233, 19, 19, -215, -215,
	-161, -187, -115, -173, -201, 54, 76, 118, 92, 92,
	92, 12, -175, 212, -193, -212, -139, 357, -188, -357,
	-212, 87, 25, 87, 592, 130, 87, -176, -95, -356,
	262, -252, 92, 92, -11, 86, 144, -212, -154, -357,
	454, 73, 457, -115, -357, 76, 466, 554, 86, -357,
	-357, -357, 76, 118, -220, -245, 87, -357, -356, -193,
	87, -197, -11, 85, -3, 262, -79, 456, -324, -302,
	-246, 92, 94, 87, 62, 455, 458, -329, -245, 233,
	-253, -140, -138, -245, 508, -342, -343, 76, -352, -349,
	115, 136, 101, -350, 124, 125, -79, -115, 85, -357,
	-80, 277, 550, -335, 62, -357, -357, 86, 22, -266,
	-60, 518, -343, 76, -342, 76, 13, 12, 115, 92,
	87, -212, 238, -326, 456, -138, 515, -279, -125, -341,
	246, 241, 244, 32, -341, -4, 591, 87, 279, 457,
	-59, 26, -139, 240, 31, 115, 94, -4, 458, 518,
	-125, -142, -141, -141,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 769,
	769, 769, 0, 769, 0, 0, 769, -2, -2, 769,
	1246, 0, 769, 0, 0, -2, 701, 703, 0, 705,
	-2, 0, 0, 714, 1734, 1734, 764, 0, 0, 0,
	0, 0, 769, 769, 769, 769, 1107, 48, 769, 0,
	83, 84, 720, 721, 722, 63, 0, 1732, 1, 3,
	69, 73, 0, 0, 0, 56, 1116, 0, 76, 0,
	0, 773, 0, 771, 0, 1229, 769, 769, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 531, 471, 514, 469, 500, -2, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 359, 359, 0, 0, -2, 462, 462, 462,
	0, 0, 0, 497, 1231, 414, 359, 359, 359, 0,
	359, 359, 359, 359, 0, 0, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 1133, 153, 1247, 1244, 1245, 38, 39,
	40, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 0,
	1223, 0, 631, 869, 0, 692, 692, 0, 692, 692,
	692, 692, 0, 0, 0, 643, 0, 0, 0, 0,
	689, 0, 0, 662, 664, 0, 689, 0, 695, 0,
	676, 692, 1735, 1735, 1735, 1214, 0, 686, 684, 698,
	699, 681, 682, 700, 704, 0, 709, 712, 1240, 1241,
	0, 727, 47, 1479, 719, 732, 733, 0, 765, 766,
	43, 963, 0, 891, 896, 907, 920, 921, 922, 923,
	924, 926, 927, 0, 0, 0, 0, 932, 933, 0,
	0, 0, 0, 0, 944, 0, 0, 0, 0, 0,
	1088, 0, 1051, 1051, 980, 1051, 1053, 1053, 0, 0,
	0, 1731, 1519, 1527, 1528, 1523, 1524, 1505, 1517, 1520,
	1508, 1509, 1511, 1513, 1518, 1525, 1531, 1510, 1530, 1529,
	0, 1506, 1507, 1512, 1522, 1526, 1514, 1515, 1516, 1521,
	1532, 1097, 0, 0, 0, 0, 0, 0, 261, 262,
	962, 1203, 1053, 1053, 1053, 1053, 1053, -2, -2, 208,
	209, 210, 211, 212, 213, 214, 0, 204, 0, 266,
	267, 263, 264, 265, 946, 947, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 1734, 0, 742,
	0, 0, 0, 0, 0, 1116, 0, 1108, 1107, 61,
	0, 769, -2, 0, 0, 0, 0, 45, 0, 50,
	828, 75, 74, 1155, 0, 0, 0, 57, 1117, 65,
	67, 1118, 0, 774, 775, 0, 805, 809, 0, 770,
	0, 0, 1230, 1229, 1229, 100, 0, 1675, 1207, -2,
	-2, 0, 0, 1242, 1243, 1216, -2, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, -2, 0, 0, 165, 166, 0, 41, 386, 0,
	161, 0, 379, 325, 0, 1133, 0, 0, 0, 0,
	0, 769, 0, 1224, 142, 143, 150, 151, 152, 359,
	359, 359, 511, 0, 0, 153, 153, 478, 479, 480,
	0, 0, -2, 384, 0, 463, 0, 0, 373, 373,
	377, 375, 376, 0, 0, 0, 0, 0, 0, 491,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 0, 360, 0, 509, 510, 415, 0, 0,
	0, 0, 489, 490, 0, 0, 1232, 1233, 0, 0,
	0, 359, 359, 0, 0, 0, 0, 359, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1146, 0,
	0, 0, -2, 0, 623, 0, 0, 0, 1225, 1225,
	0, 630, 0, 632, 633, 0, 0, 634, 0, 689,
	689, 687, 688, 636, 637, 638, 639, 692, 0, 0,
	368, 369, 370, 689, 692, 0, 692, 692, 692, 692,
	689, 689, 689, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 1735, 1735, 695, 692, 0, 672,
	0, 673, 674, 677, 678, 1736, 1737, 1262, 679, 680,
	1215, 702, 710, 713, 730, 728, 729, 731, 723, 724,
	725, 726, 0, 744, 745, 750, 0, 0, 0, 0,
	756, 757, 758, 0, 0, 761, 762, 763, 0, 0,
	0, 0, 0, 889, 0, 0, 952, 953, 954, 955,
	956, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 928, 929, 930, 931, 934, 0, 0,
	0, 939, 940, 0, 0, 0, 0, 0, 779, 0,
	1089, 0, 978, 0, 979, 981, 982, 0, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 0, 789, 789, 0, 0, 197,
	198, 199, 200, 201, 215, 216, 217, 218, 219, 268,
	1097, 0, 962, 0, 0, 44, 734, 735, 0, 852,
	1235, 0, 0, 785, 0, 55, 64, 66, 1116, 59,
	1116, 0, 791, 0, 0, -2, -2, 792, 798, 799,
	800, 801, 802, 52, 1733, 53, 0, 72, 0, 46,
	0, 0, 0, 0, 337, 1158, 0, 0, 1109, 1110,
	1113, 0, 806, 1560, 810, 0, 812, 813, 0, 772,
	0, 98, 0, 868, 0, 0, 0, 1675, 1213, 0,
	102, 103, 0, 0, 0, 343, 1218, 1219, 1220, -2,
	366, 0, 343, 332, 276, 277, 278, 325, 280, 325,
	325, 325, 325, 337, 337, 337, 337, 308, 309, 310,
	311, 312, 0, 0, 295, 325, 325, 325, 325, 315,
	316, 317, 318, 319, 320, 321, 322, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 327, 327, 327, 329,
	329, 0, 42, 0, 347, 0, 1113, 0, 0, 1146,
	1227, 1237, 0, 0, 0, 1227, 120, 0, 0, 0,
	512, 542, 472, 501, 513, 0, 475, 476, -2, 0,
	0, 462, 0, 464, 0, 367, 0, -2, 0, 377,
	0, 373, 377, 374, 377, 365, 378, 493, 494, 495,
	0, 572, 838, 0, 0, 0, 0, 0, 578, 579,
	580, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 464, 0, 498, 0, 416, 417, 418, 0, 0,
	421, 422, 423, 424, 0, 0, 427, 428, 429, 855,
	856, 430, 431, 456, 457, 458, 432, 433, 434, 435,
	436, 437, 438, 450, 451, 452, 453, 454, 455, 439,
	440, 441, 442, 443, 444, 447, 0, 135, 1137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 0, 788, 870, 1248, 1249, 693,
	694, 0, 371, 372, 692, 692, 640, 663, 0, 692,
	644, 665, 645, 647, 646, 648, 667, 668, 692, 651,
	690, 691, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 669, 670, 671, 696, 0, 0, 711, 715,
	716, 717, 718, 0, 0, 747, 94, 752, 753, 754,
	755, 767, 760, 964, 886, 887, 888, 0, 890, 893,
	0, 948, 950, 895, 897, 959, 960, 961, 0, 0,
	0, 0, 0, 901, 905, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 925, 1067, 1068,
	1069, 942, 269, 270, 0, 943, 0, 803, 0, 0,
	0, 941, 0, 0, 0, 0, 780, 781, 1095, 1092,
	0, 0, 1052, 1054, 0, 0, 0, 0, 0, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1070, 0, 0, 0, 0, 0, 0, 1236, 0, 130,
	131, 0, 0, 0, 0, 0, 1024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 790, 1098, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 1202, 0,
	737, 738, 740, 0, 872, 0, 853, 0, 0, 743,
	0, 784, 0, 787, 58, 60, 796, 797, 0, 814,
	793, 54, 49, 0, 0, 830, 1156, 337, 1178, 0,
	341, 342, 1119, 1120, 0, 1112, 1114, 1115, 77, 811,
	807, 0, 884, 0, 0, 867, 0, 817, 819, 820,
	821, 850, 0, 824, 0, 0, 0, 0, 96, 869,
	1208, 101, 0, 0, 106, 107, 1209, 1210, 1211, 1212,
	0, 531, -2, 411, 167, 169, 170, 171, 162, -2,
	335, 333, 334, 279, 337, 337, 302, 303, 304, 305,
	306, 307, 0, 0, 296, 297, 298, 299, 290, 0,
	291, 292, 293, 0, 294, 385, 0, 1121, 348, 349,
	351, 359, 0, 354, 355, 0, 359, 359, 0, 380,
	381, 0, 1113, 1137, 0, 0, 0, 1238, 1237, 1237,
	1237, 0, 155, 156, 157, 158, 159, 160, 567, 0,
	0, 543, 565, 566, 153, 0, 0, 163, 466, 465,
	0, 599, 0, 383, 0, 0, 377, 377, 362, 363,
	496, 0, 0, 574, 575, 576, 577, 0, 0, 0,
	464, 466, 343, 0, 419, 420, 425, 426, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 1134, 1135, 1136, 0, 0,
	624, 0, 0, 403, 92, 1226, 629, 689, 650, 666,
	689, 642, 649, 675, 707, 751, 0, 0, 0, 0,
	759, 0, 0, 894, 949, 951, 898, 0, 902, 906,
	0, 0, 0, 0, 0, 0, 0, 945, 969, 970,
	0, 0, 1107, 0, 1093, 0, 0, 977, 1055, 1056,
	0, 0, 0, 0, 0, 988, 989, 990, 0, 0,
	993, 994, 0, 0, 995, 0, 0, 0, 0, 0,
	0, 0, 0, 1007, 1008, 1009, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1021, 965, 0,
	0, 789, 0, 1057, 1058, 1059, 1060, 1061, 1098, 736,
	739, 741, 826, 873, 874, 0, 0, 0, 0, 854,
	1234, 782, 783, 786, -2, 0, 0, 1100, 0, 0,
	814, 884, 815, 0, 794, 51, 829, 0, 1160, 1159,
	1172, 1185, 338, 339, 340, 1111, 0, 1116, 0, 1196,
	0, 0, 1188, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 0, 0, 860, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, -2, 0, 0, 90, 91,
	0, 0, 0, 104, 105, 0, 0, 111, 344, 345,
	144, 153, 413, 168, 393, 0, 0, 275, 336, 300,
	301, 0, 323, 0, 0, 0, 406, 116, 1125, 1124,
	359, 359, 350, 0, 353, 0, 0, 0, 1239, 326,
	382, 0, 134, 0, 0, 0, 0, 0, 140, 537,
	0, 0, 544, 0, 0, 0, 470, 0, 481, 482,
	0, 571, -2, 620, 347, 0, 361, 364, 839, 0,
	0, 483, 0, 466, 487, 488, 499, 448, 449, 446,
	0, 0, 1147, 1148, 1153, 1151, 1152, 121, 519, 521,
	520, 524, 0, 0, 517, 0, 403, 1121, 0, 628,
	404, 405, 692, 692, 746, 95, 0, 749, 0, 0,
	0, 0, 899, 903, 804, 0, 0, 325, 325, 1075,
	325, 329, 1078, 325, 1080, 325, 1083, 325, 1086, 1087,
	0, 0, 0, 0, 1090, 976, 1096, 0, 0, 0,
	0, 987, 0, 0, 0, 0, 132, 133, 1024, 0,
	0, 1026, 1028, 1029, 999, 1025, 0, 0, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	967, 0, 1099, 875, 880, 880, 880, 0, 0, 0,
	1221, 1222, 1101, 1102, 884, 1103, 816, 795, 831, 1178,
	0, 1171, 0, -2, 1180, 0, 0, 0, 1186, 808,
	78, 885, 81, 0, 1196, 1204, 0, 1187, 1198, 1200,
	0, 0, 0, 1192, 0, 884, 818, 846, 848, 0,
	843, 858, 859, 861, 0, 863, 0, 865, 866, 828,
	823, 825, 0, 0, 98, 0, 884, 884, 97, 0,
	871, 108, 109, 110, 412, 172, 177, 0, 0, 0,
	182, 0, 184, 0, 394, 0, 272, 274, 0, 0,
	175, 337, 0, 337, 0, 330, 0, 395, 407, 0,
	1122, 1123, 0, 0, 352, 356, 357, 358, 0, 1228,
	136, 0, 0, 0, 540, 0, 568, 0, 0, 0,
	0, 0, 0, 164, 467, 600, 601, 602, 603, 604,
	605, 606, 607, 0, 359, 0, 0, 0, 359, 359,
	359, 612, 346, 0, 0, 596, 593, 484, 0, 202,
	203, 205, 0, 0, 486, 828, 1138, 1139, 1140, 0,
	1150, 1154, 124, 0, 0, 0, 0, 625, 626, 627,
	93, 635, 641, 748, 768, 892, 900, 904, 0, 936,
	1073, 337, 1076, 1077, 1079, 1081, 1082, 1084, 1085, 937,
	938, 0, 972, 0, 974, 1116, 0, 1094, 0, 0,
	986, 0, 0, 991, 992, 0, 0, 998, 0, 1000,
	0, 0, 0, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 968, 0, 0, 0, 0, 852, -2,
	62, 1103, 1105, 0, 1165, 1163, 1163, 1173, 1174, 0,
	0, 1181, 0, 0, 0, 0, 82, 0, 0, 0,
	1201, 0, 0, 0, 0, 99, 1107, 840, 847, 0,
	0, 841, 0, 842, 862, 864, 822, -2, 0, 884,
	884, 88, 89, 0, 178, 0, 180, 195, 196, 0,
	183, 185, 186, 271, 273, 0, 0, 313, 324, 314,
	0, 0, 408, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	828, 137, 138, 139, 532, 0, 542, 0, 0, 0,
	535, 0, 473, 0, 0, 0, 359, 359, 359, 0,
	0, 0, 0, 573, 0, 581, 0, 0, 0, 206,
	207, 0, 1149, 518, 0, 122, 123, 0, 0, 523,
	1062, 1074, 0, 0, 0, 1091, 0, 0, 0, 0,
	996, 0, 1027, 0, 1003, 0, 0, 0, 562, 563,
	0, 1023, 0, 881, 0, 0, 0, 0, 872, 1105,
	80, 0, 0, 1168, 0, 1161, 1164, 1162, 1175, 0,
	0, 1182, 0, 1184, 0, 1205, 1206, 1199, 0, 1191,
	1194, 1190, 1193, 1116, 844, 0, 849, 0, 1107, 87,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 331, 0, 0, 0, 533, 0,
	545, 536, 0, 610, 0, 614, 0, 0, 0, 617,
	618, 619, 387, 597, 594, 595, 485, 0, 125, 126,
	0, 0, 0, 0, 0, 0, 971, 973, 975, 984,
	985, 1071, 1072, 997, 1001, 0, 1004, 0, 0, 1005,
	0, 564, 0, 877, 834, 835, 882, 883, 0, 0,
	827, 79, 1106, 1104, 1157, 0, 1166, 1167, 1176, 1177,
	1183, 0, 1189, 0, 85, 0, 0, 0, 1116, 179,
	0, 189, 0, 541, 0, 544, 534, 608, 609, 0,
	621, 613, 615, 616, 1141, 0, 0, 0, 525, 935,
	0, 0, 0, 1024, 1006, 0, 560, 561, 0, 876,
	878, 879, 1169, 1170, 1197, 1195, 845, 852, 0, 86,
	388, 393, 1141, 0, 0, 0, 515, 1143, 127, 128,
	459, 460, 461, 121, 1063, 0, 1066, 0, 836, 837,
	546, 0, 548, 0, -2, 389, 390, 0, 173, 190,
	191, 0, 0, 194, 187, 188, 117, 0, 0, 622,
	0, 1144, 1145, 124, 1064, 1002, 547, 0, 0, 343,
	0, 557, 391, 0, 392, 0, 0, 0, 192, 193,
	569, 0, 0, 522, 0, 549, 550, 558, 0, 396,
	398, 399, 0, 0, 397, 538, 0, 569, 1142, 0,
	0, 559, 555, 400, 401, 402, 570, 539, 1065, 0,
	551, 552, 553, 554,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 212, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 593,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:514
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:560
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:595
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:601
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:605
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:624
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:630
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:718
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:833
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:837
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:857
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:871
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:881
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:904
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:926
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:936
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:940
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:944
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:950
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:954
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:958
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:962
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:968
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:972
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1020
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1035
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1046
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1066
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1072
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1088
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1095
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1124
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1131
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1142
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1153
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1159
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1163
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1167
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1185
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1189
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1195
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1199
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1205
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1209
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1225
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1229
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1235
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1245
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1250
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1259
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1283
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1292
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1301
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1314
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1324
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1335
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1371
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1375
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1424
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1428
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1432
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1436
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1497
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1501
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1505
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1509
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Armscii8Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = ASCIIStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Big5Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = UBinaryStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Cp1250Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Cp1251Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Cp1256Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Cp1257Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Cp850Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Cp852Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = Cp866Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Cp932Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Dec8Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = EucjpmsStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = EuckrStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Gb18030Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Gb2312Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = GbkStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Geostd8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = GreekStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = HebrewStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Hp8Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Keybcs2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Koi8rStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Koi8uStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = Latin1Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = Latin2Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Latin5Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Latin7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = MacceStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = MacromanStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = SjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Swe7Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Tis620Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Ucs2Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = UjisStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Utf16Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Utf16leStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Utf32Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Utf8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Utf8mb4Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1725
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1729
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1733
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1737
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1968
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1973
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1977
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1995
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2007
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2067
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2076
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2082
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2092
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2096
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2101
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2105
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2109
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2113
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2117
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2121
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2137
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2141
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2145
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2149
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2153
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = yyDollar[2].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = "key"
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = yyDollar[1].str
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2221
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2231
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2235
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2241
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2245
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2251
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2255
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2261
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2267
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2271
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2275
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2279
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2283
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2292
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2298
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2304
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2310
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2316
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2320
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2324
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2328
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2332
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2367
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2373
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2387
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2453
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2457
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2461
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2465
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2469
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2473
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2477
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2481
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2485
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2489
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2493
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2497
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2501
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2505
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2509
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2513
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2517
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2562
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2568
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2572
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2581
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2590
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2594
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2598
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2602
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 473:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2606
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2612
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2616
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2650
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2654
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2694
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2698
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2702
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2706
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2710
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2714
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2720
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2730
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2734
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2738
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2742
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2746
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2750
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2754
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2758
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2762
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2782
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2819
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2831
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2862
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2887
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2894
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2901
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2908
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2915
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2926
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2935
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2943
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2952
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2959
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2971
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2980
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2995
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3000
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3009
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3013
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3019
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3025
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3031
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3035
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3041
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3045
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3051
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3057
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3063
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3069
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3075
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3079
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3093
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3099
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3105
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3109
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3113
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3119
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3123
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3128
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3132
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3137
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3141
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3171
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3175
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3179
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3183
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3187
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3191
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3195
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3199
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3203
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3207
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3211
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3215
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3219
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3223
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3227
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3231
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3244
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3251
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3266
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3270
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3275
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3280
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3285
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3290
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3295
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3301
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3307
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3314
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3321
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3328
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3336
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3346
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3352
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3358
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3364
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3370
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3376
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3388
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3398
		{
			yyVAL.str = ""
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3410
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3414
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3506
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3574
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3594
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = "extended "
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3705
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3709
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3723
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3727
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3737
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3796
		{
			yyVAL.empty = struct{}{}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.empty = struct{}{}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.empty = struct{}{}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.empty = struct{}{}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3819
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3823
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3827
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3831
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3835
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3839
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = yyDollar[1].str
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = yyDollar[1].str
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = yyDollar[1].str
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3876
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3916
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3926
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3932
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3936
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3940
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3944
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4047
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4051
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4055
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4060
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4069
		{
			setAllowComments(yylex, true)
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4073
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4079
		{
			yyVAL.strs = nil
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4089
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.str = SQLCacheStr
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4123
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4154
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4173
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.strs = nil
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4190
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4194
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = SQLCacheStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = DistinctStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = DistinctStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = StraightJoinHint
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4230
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4240
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4244
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4248
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4252
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4257
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4265
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4277
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4281
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4287
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4293
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4297
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4307
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4311
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4315
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4319
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4325
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4331
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4335
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4344
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4350
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4360
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4370
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4374
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4388
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4405
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4409
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4413
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4417
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4425
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4429
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4440
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4445
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4453
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4466
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4470
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4474
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4480
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4486
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4490
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4494
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4498
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4504
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4508
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4518
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4547
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4553
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4563
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4567
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4571
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4575
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4580
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4584
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4588
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4592
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4658
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4704
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4708
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4758
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4762
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4766
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4770
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4774
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4778
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4782
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4786
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4790
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4822
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4826
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4830
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4842
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4861
		{
			yyVAL.str = ""
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4871
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4875
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4882
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4886
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4890
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4894
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4900
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4904
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4908
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4912
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4916
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4920
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4924
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4930
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4934
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4938
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4945
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4951
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5214
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5223
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5229
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5249
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5251
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5255
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5259
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5263
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5267
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5271
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5275
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5279
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5283
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5287
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5291
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5297
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5301
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5305
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5309
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5313
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5317
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5321
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5325
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5329
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5384
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5388
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5392
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5396
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5400
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5424
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5428
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5434
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5438
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5442
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5446
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5450
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5456
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5460
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5464
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5468
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5472
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5476
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5480
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5484
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5488
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5492
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = string("")
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5517
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5527
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5542
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5546
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5550
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5579
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5597
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5603
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5609
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5613
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5619
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5624
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5628
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5632
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5641
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5647
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5651
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5655
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5664
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5668
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5672
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5676
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5683
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5687
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5691
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5695
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5701
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5705
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5709
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = ""
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5731
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = ""
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5759
		{
			yyVAL.str = "cascaded"
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5763
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5767
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5776
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5782
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5788
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5794
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5803
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5807
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5812
		{
			yyVAL.str = ""
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5816
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5822
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5826
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5832
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5836
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5840
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5849
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = ""
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = " header"
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5867
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5871
		{
			yyVAL.str = " manifest on"
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5875
		{
			yyVAL.str = " manifest off"
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = ""
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5884
		{
			yyVAL.str = " overwrite on"
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5888
		{
			yyVAL.str = " overwrite off"
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5894
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5913
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5919
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5923
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5928
		{
			yyVAL.str = ""
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5948
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5952
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5961
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5965
		{
			yyVAL.str = " optionally"
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5978
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5982
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5986
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5990
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5994
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6000
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6004
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6008
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6012
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6021
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6027
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6037
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6041
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6047
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6062
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6066
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6072
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6078
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6088
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6092
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6096
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6100
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6104
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = "charset"
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6144
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6159
		{
			yyVAL.empty = struct{}{}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6161
		{
			yyVAL.empty = struct{}{}
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.empty = struct{}{}
		}
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6167
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6176
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6183
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6187
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6220
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6224
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6231
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6738
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			decNesting(yylex)
		}
	case 1734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6752
		{
			skipToEnd(yylex)
		}
	case 1735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6757
		{
			skipToEnd(yylex)
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6761
		{
			skipToEnd(yylex)
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6765
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
